标题title
一种多维度应用系统管控方法及设备
摘要abst
本申请公开了一种多维度应用系统管控方法及设备，用以解决现有的游戏软件无法对恶意评价、使用行为进行有效管控的技术问题。方法包括：获取应用系统的评价数据，并提取所述评价数据中的差评数据；对所述差评数据进行分类处理，得到质量差评数据以及使用差评数据；判断所述质量差评数据是否为恶意评价数据，以及，判断所述使用差评数据是否为恶意评价数据；对系统使用数据进行使用分析，以确定所述系统使用数据为恶意使用数据；对所述恶意评价数据以及所述恶意使用数据分别对应的用户信息进行周期性评价流调，并根据评价流调结果，为所述用户信息分配标识码，以限制所述用户信息对应用户对所述应用系统的可操作范围。
权利要求书clms
1.一种多维度应用系统管控方法，其特征在于，所述方法包括：获取应用系统的评价数据，并提取所述评价数据中的差评数据；对所述差评数据进行分类处理，得到质量差评数据以及使用差评数据；确定所述质量差评数据对应的系统质量问题，并根据所述系统质量问题对所述应用系统进行质量检测，以确定所述系统质量问题是否存在；若否，则确定所述质量差评数据为恶意评价数据；以及，获取所述使用差评数据对应的用户信息，并调取所述用户信息对应的系统使用数据；将所述系统使用数据与所述使用差评数据进行匹配，并在匹配结果不成功的情况下，确定所述使用评价数据为恶意评价数据；对所述系统使用数据进行使用分析，以确定所述系统使用数据为恶意使用数据；对所述恶意评价数据以及所述恶意使用数据分别对应的用户信息进行周期性评价流调，并根据评价流调结果，为所述用户信息分配标识码，以限制所述用户信息对应用户对所述应用系统的可操作范围。2.根据权利要求1所述的一种多维度应用系统管控方法，其特征在于，提取所述评价数据中的差评数据，具体包括：以标点符号为划分依据，对所述评价数据进行句子切分处理，得到句子集合；对所述句子集合中的句子元素进行分词处理，并剔除分词处理结果中的重复词，得到所述句子元素对应的词集合；采用预设长度的滑动窗口遍历所述词集合，以构建所述句子元素对应的词语关系矩阵；根据所述词语关系矩阵中每行的不为零元素个数，确定所述词集合中的关键词，进而确定所述评价数据对应的关键词；对所述评价数据对应的关键词进行语义识别处理，找出差评关键词，并将所述差评关键词对应的评价数据确定为差评数据。3.根据权利要求2所述的一种多维度应用系统管控方法，其特征在于，构建所述句子元素对应的词语关系矩阵，具体包括：确定所述词集合中的词语元素个数n，并根据所述词语元素个数n，构建n×n的全零矩阵；为所述词语元素进行顺序编号，并将同时出现在所述滑动窗口内的词语元素编号对应的全零矩阵元素赋值为1，具体为：将出现在所述滑动窗口内的第一个词语元素对应的词语元素编号确定为所述全零矩阵元素的行数，以及，将出现在所述滑动窗口内的第二个词语元素对应的词语元素编号确定为所述全零矩阵元素的列数，以确定所述全零矩阵元素的位置；其中，所述滑动窗口的长度至少为2个字；所述滑动窗口遍历完所述词集合之后，完成所述全零矩阵的赋值，得到所述词语关系矩阵。4.根据权利要求1所述的一种多维度应用系统管控方法，其特征在于，对所述差评数据进行分类处理，具体包括：根据所述差评数据对应的差评关键词，对所述差评数据进行预分类，得到质量差评预分类数据以及使用差评预分类数据，并根据所述质量差评预分类数据构建第一数据集，以及根据所述使用差评预分类数据构建第二数据集；将所述使用差评预分类数据按照所述质量差评预分类数据的数据量进行划分，得到多个第二数据子集；将所述多个第二数据子集分别与所述第一数据集进行组合，得到多个待分类数据集；对所述多个待分类数据集中的样本分别进行特征提取，然后将提取出来的特征输入至预设分类器中，以输出所述样本的分类结果；其中，所述特征至少包括语义特征；基于所述分类结果，得到所述质量差评数据以及使用差评数据。5.根据权利要求1所述的一种多维度应用系统管控方法，其特征在于，根据所述系统质量问题对所述应用系统进行质量检测，具体包括：根据所述系统质量问题对所述应用系统进行模块定位，以确定所述系统质量问题对应的系统模块；其中，所述系统质量问题至少包括以下任一项或者多项：闪退问题、画质问题、卡顿问题以及掉帧问题；读取所述系统模块对应的动态测试日志，以确定所述系统质量问题在所述动态测试日志中是否存在；若否，则对所述系统模块进行静态测试，以确定所述系统模块不存在所述系统质量问题，进而确定所述质量差评数据为恶意评价数据。6.根据权利要求1所述的一种多维度应用系统管控方法，其特征在于，调取所述用户信息对应的系统使用数据，具体包括：获取所述使用差评数据对应的评价时间，并根据所述评价时间，通过预设日志捕获线程获取所述用户信息对应的预设时间段内的使用日志；其中，所述预设时间段在所述评价时间之前，所述日志捕获线程与所述应用系统同时启动且同时关闭；对所述使用日志进行内容筛选，以提取所述用户信息对所述应用系统进行的开局数据；根据所述开局数据，提取所述用户信息对应的局内操作数据，以得到所述系统使用数据；其中，所述开局数据至少包括以下任一项或者多项：对局游戏数据以及单机游戏数据；对所述系统使用数据进行使用分析，具体包括：在所述开局数据为所述对局游戏数据时，获取所述对局游戏数据中的其他玩家操作数据；根据所述其他玩家操作数据提取重要操作时间节点；其中，所述重要操作是能够影响所述对局游戏数据结果的玩家操作；将所述重要操作时间节点对应的局内操作数据，与所述重要时间节点对应的其他玩家操作数据进行操作匹配，并在匹配结果不一致的情况下，确定所述系统使用数据为恶意使用数据；其中，所述操作匹配至少包括以下任一项或者多项：移动操作匹配、技能释放操作匹配以及局内位置匹配。7.根据权利要求6所述的一种多维度应用系统管控方法，其特征在于，将所述系统使用数据与所述使用差评数据进行匹配，具体包括：在所述开局数据为所述单机游戏数据，或者所述单机游戏数据的数据量大于所述对局游戏数据的数据量时，根据所述局内操作数据提取用户使用的单机游戏功能，以及，根据所述使用差评数据提取评价对象，其中，所述评价对象至少包括所述使用差评数据的首词；计算所述单机游戏功能的功能名称与所述评价对象之间的语义相似度，具体为：采用预设算法对所述功能名称进行处理，得到第一词向量A，以及，采用预设算法对所述评价对象进行处理，得到第二词向量B；通过所述第一词向量A与所述第二词向量B分别构建相似度计算模型的输入矩阵与预设输出矩阵；其中，，将所述输入矩阵通过输入层输入所述相似度计算模型中，并通过所述相似度计算模型的卷积层提取所述输入矩阵对应的三元组特征；通过所述相似度计算模型的拼接层将所述三元组特征进行拼接，得到所述输入矩阵对应的特征序列；将所述特征序列输入至所述相似度计算模型的注意力机制层进行特征提取，得到所述特征序列对应的序列特征；将所述序列特征输入至以softmax为激活函数的全连接层，进而通过所述相似度计算模型的输出层得到输出矩阵；通过以下公式，计算所述预设输出矩阵与所述输出矩阵之间的余弦相似度，以此确定所述语义相似度：在所述语义相似度低于预设相似阈值的情况下，确定所述使用差评数据为恶意评价数据。8.根据权利要求6所述的一种多维度应用系统管控方法，其特征在于，将所述系统使用数据与所述使用差评数据进行匹配，具体包括：在所述开局数据为所述对局游戏数据，或者所述单机游戏数据的数据量小于等于所述对局游戏数据的数据量时，根据所述用户信息对应的局内操作数据，确定局内操作时间节点，并根据所述局内操作时间节点对所述其他玩家操作数据进行筛选，以更新所述其他玩家操作数据；将更新后的所述其他玩家操作数据与所述局内操作时间节点对应的局内操作数据进行操作匹配，并在匹配结果一致的情况下，或者，将更新后的所述其他玩家操作数据进行自我匹配，并在匹配结果一致的情况下，确定所述使用差评数据为恶意评价数据。9.根据权利要求1所述的一种多维度应用系统管控方法，其特征在于，根据评价流调结果，为所述用户信息分配标识码，具体包括：以预设时间间隔为周期，在预设游戏网站上对所述用户信息进行搜索；其中，所述用户信息至少包括以下任一项或者多项：用户注册账号、用户设备MAC地址、用户设备IP以及用户注册名称；获取所述用户信息在所述预设游戏网站上的发言内容，并对所述发言内容进行评分；其中，所述发言内容至少包括以下任一项或者多项：回答问题、发布问题、发布评价以及发布文章；所述评分的依据为发布差评内容越多，评分越低；在所述评分低于预设评分阈值时，为所述用户信息分配标识码；其中，所述标识码的有效期与所述评分负相关。10.一种多维度应用系统管控设备，其特征在于，所述设备包括：处理器；以及，存储器，其上存储有可执行代码，当所述可执行代码被执行时，使得所述处理器执行如权利要求1-9任一项所述的一种多维度应用系统管控方法。
说明书desc
技术领域本申请涉及应用系统技术领域，尤其涉及一种多维度应用系统管控方法及设备。背景技术游戏软件等应用系统的出现，丰富了人们的业余生活。但是一个新的游戏软件的出现、推广，势必会给之前存在的游戏软件带来竞争压力，这也就导致了许多开发者恶意的对竞争对手的产品进行抹黑，以降低其竞争软件的用户使用率。前述抹黑行为主要集中在雇佣职业人员去进行恶意评价，或者去扰乱游戏秩序以影响正常玩家使用。对于这些行为，目前没有较好的识别方案，大都靠正常玩家进行举报反馈发现，这也就导致了目前的游戏软件无法对恶意评价、使用行为进行有效管控。发明内容本申请实施例提供了一种多维度应用系统管控方法及设备，用以解决现有的游戏软件无法对恶意评价、使用行为进行有效管控的技术问题。一方面，本申请实施例提供了一种多维度应用系统管控方法，方法包括：获取应用系统的评价数据，并提取所述评价数据中的差评数据；对所述差评数据进行分类处理，得到质量差评数据以及使用差评数据；确定所述质量差评数据对应的系统质量问题，并根据所述系统质量问题对所述应用系统进行质量检测，以确定所述系统质量问题是否存在；若否，则确定所述质量差评数据为恶意评价数据；以及，获取所述使用差评数据对应的用户信息，并调取所述用户信息对应的系统使用数据；将所述系统使用数据与所述使用差评数据进行匹配，并在匹配结果不成功的情况下，确定所述使用评价数据为恶意评价数据；对所述系统使用数据进行使用分析，以确定所述系统使用数据为恶意使用数据；对所述恶意评价数据以及所述恶意使用数据分别对应的用户信息进行周期性评价流调，并根据评价流调结果，为所述用户信息分配标识码，以限制所述用户信息对应用户对所述应用系统的可操作范围。在本说明书的一个或多个实施例中，提取所述评价数据中的差评数据，具体包括：以标点符号为划分依据，对所述评价数据进行句子切分处理，得到句子集合；对所述句子集合中的句子元素进行分词处理，并剔除分词处理结果中的重复词，得到所述句子元素对应的词集合；采用预设长度的滑动窗口遍历所述词集合，以构建所述句子元素对应的词语关系矩阵；根据所述词语关系矩阵中每行的不为零元素个数，确定所述词集合中的关键词，进而确定所述评价数据对应的关键词；对所述评价数据对应的关键词进行语义识别处理，找出差评关键词，并将所述差评关键词对应的评价数据确定为差评数据。在本说明书的一个或多个实施例中，构建所述句子元素对应的词语关系矩阵，具体包括：确定所述词集合中的词语元素个数n，并根据所述词语元素个数n，构建n×n的全零矩阵；为所述词语元素进行顺序编号，并将同时出现在所述滑动窗口内的词语元素编号对应的全零矩阵元素赋值为1，具体为：将出现在所述滑动窗口内的第一个词语元素对应的词语元素编号确定为所述全零矩阵元素的行数，以及，将出现在所述滑动窗口内的第二个词语元素对应的词语元素编号确定为所述全零矩阵元素的列数，以确定所述全零矩阵元素的位置；其中，所述滑动窗口的长度至少为2个字；所述滑动窗口遍历完所述词集合之后，完成所述全零矩阵的赋值，得到所述词语关系矩阵。在本说明书的一个或多个实施例中，对所述差评数据进行分类处理，具体包括：根据所述差评数据对应的差评关键词，对所述差评数据进行预分类，得到质量差评预分类数据以及使用差评预分类数据，并根据所述质量差评预分类数据构建第一数据集，以及根据所述使用差评预分类数据构建第二数据集；将所述使用差评预分类数据按照所述质量差评预分类数据的数据量进行划分，得到多个第二数据子集；将所述多个第二数据子集分别与所述第一数据集进行组合，得到多个待分类数据集；对所述多个待分类数据集中的样本分别进行特征提取，然后将提取出来的特征输入至预设分类器中，以输出所述样本的分类结果；其中，所述特征至少包括语义特征；基于所述分类结果，得到所述质量差评数据以及使用差评数据。在本说明书的一个或多个实施例中，根据所述系统质量问题对所述应用系统进行质量检测，具体包括：根据所述系统质量问题对所述应用系统进行模块定位，以确定所述系统质量问题对应的系统模块；其中，所述系统质量问题至少包括以下任一项或者多项：闪退问题、画质问题、卡顿问题以及掉帧问题；读取所述系统模块对应的动态测试日志，以确定所述系统质量问题在所述动态测试日志中是否存在；若否，则对所述系统模块进行静态测试，以确定所述系统模块不存在所述系统质量问题，进而确定所述质量差评数据为恶意评价数据。在本说明书的一个或多个实施例中，调取所述用户信息对应的系统使用数据，具体包括：获取所述使用差评数据对应的评价时间，并根据所述评价时间，通过预设日志捕获线程获取所述用户信息对应的预设时间段内的使用日志；其中，所述预设时间段在所述评价时间之前，所述日志捕获线程与所述应用系统同时启动且同时关闭；对所述使用日志进行内容筛选，以提取所述用户信息对所述应用系统进行的开局数据；根据所述开局数据，提取所述用户信息对应的局内操作数据，以得到所述系统使用数据；其中，所述开局数据至少包括以下任一项或者多项：对局游戏数据以及单机游戏数据；对所述系统使用数据进行使用分析，具体包括：在所述开局数据为所述对局游戏数据时，获取所述对局游戏数据中的其他玩家操作数据；根据所述其他玩家操作数据提取重要操作时间节点；其中，所述重要操作是能够影响所述对局游戏数据结果的玩家操作；将所述重要操作时间节点对应的局内操作数据，与所述重要时间节点对应的其他玩家操作数据进行操作匹配，并在匹配结果不一致的情况下，确定所述系统使用数据为恶意使用数据；其中，所述操作匹配至少包括以下任一项或者多项：移动操作匹配、技能释放操作匹配以及局内位置匹配。在本说明书的一个或多个实施例中，将所述系统使用数据与所述使用差评数据进行匹配，具体包括：在所述开局数据为所述单机游戏数据，或者所述单机游戏数据的数据量大于所述对局游戏数据的数据量时，根据所述局内操作数据提取用户使用的单机游戏功能，以及，根据所述使用差评数据提取评价对象，其中，所述评价对象至少包括所述使用差评数据的首词；计算所述单机游戏功能的功能名称与所述评价对象之间的语义相似度，具体为：采用预设算法对所述功能名称进行处理，得到第一词向量A，以及，采用预设算法对所述评价对象进行处理，得到第二词向量B；通过所述第一词向量A与所述第二词向量B分别构建相似度计算模型的输入矩阵与预设输出矩阵；其中，，将所述输入矩阵通过输入层输入所述相似度计算模型中，并通过所述相似度计算模型的卷积层提取所述输入矩阵对应的三元组特征；通过所述相似度计算模型的拼接层将所述三元组特征进行拼接，得到所述输入矩阵对应的特征序列；将所述特征序列输入至所述相似度计算模型的注意力机制层进行特征提取，得到所述特征序列对应的序列特征；将所述序列特征输入至以softmax为激活函数的全连接层，进而通过所述相似度计算模型的输出层得到输出矩阵；其中，通过以下公式，计算所述预设输出矩阵与所述输出矩阵之间的余弦相似度，以此确定所述语义相似度：在所述语义相似度低于预设相似阈值的情况下，确定所述使用差评数据为恶意评价数据。在本说明书的一个或多个实施例中，将所述系统使用数据与所述使用差评数据进行匹配，具体包括：在所述开局数据为所述对局游戏数据，或者所述单机游戏数据的数据量小于等于所述对局游戏数据的数据量时，根据所述用户信息对应的局内操作数据，确定局内操作时间节点，并根据所述局内操作时间节点对所述其他玩家操作数据进行筛选，以更新所述其他玩家操作数据；将更新后的所述其他玩家操作数据与所述局内操作时间节点对应的局内操作数据进行操作匹配，并在匹配结果一致的情况下，或者，将更新后的所述其他玩家操作数据进行自我匹配，并在匹配结果一致的情况下，确定所述使用差评数据为恶意评价数据。在本说明书的一个或多个实施例中，根据评价流调结果，为所述用户信息分配标识码，具体包括：以预设时间间隔为周期，在预设游戏网站上对所述用户信息进行搜索；其中，所述用户信息至少包括以下任一项或者多项：用户注册账号、用户设备MAC地址、用户设备IP以及用户注册名称；获取所述用户信息在所述预设游戏网站上的发言内容，并对所述发言内容进行评分；其中，所述发言内容至少包括以下任一项或者多项：回答问题、发布问题、发布评价以及发布文章；所述评分的依据为发布差评内容越多，评分越低；在所述评分低于预设评分阈值时，为所述用户信息分配标识码；其中，所述标识码的有效期与所述评分负相关。另一方面，本申请实施例还提供了一种多维度应用系统管控设备，设备包括：处理器；以及，存储器，其上存储有可执行代码，当所述可执行代码被执行时，使得所述处理器执行如上述的一种多维度应用系统管控方法。本申请实施例提供的一种多维度应用系统管控方法及设备，通过对应用系统的评价数据进行处理，得到质量差评数据以及使用差评数据，也即，将评价数据划分成针对应用系统第一预设功能本身的评价数据，以及针对系统第二预设功能使用过程的评价数据，以此便于识别用户对应用系统的恶意评价。在识别恶意评价过程中，将用户自身的操作数据与其他玩家的操作数据进行匹配，或者将其他玩家的操作数据进行自我匹配，以及，通过系统测试日志判别系统是否存在评价数据中所涉及的质量问题，保证恶意评价数据识别的准确性及全面性。同时，应用系统还可以针对用户使用数据进行恶意使用数据的识别，以此来保证应用系统对于恶意行为的识别效率，且在识别出恶意行为之后，进行标识码分配，限制恶意用户的使用，也即实现了应用系统的有效管控。附图说明此处所说明的附图用来提供对本申请的进一步理解，构成本申请的一部分，本申请的示意性实施例及其说明用于解释本申请，并不构成对本申请的不当限定。在附图中：图1为本申请实施例提供的一种多维度应用系统管控方法流程图；图2为本申请实施例提供的一种多维度应用系统管控设备结构图。具体实施方式为使本申请的目的、技术方案和优点更加清楚，下面将结合本申请具体实施例及相应的附图对本申请技术方案进行清楚、完整地描述。显然，所描述的实施例仅是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。下面通过附图对本申请实施例提出的技术方案进行详细的说明。图1为本申请实施例提供的一种多维度应用系统管控方法流程图。如图1所示，本申请实施例提供的管控方法，主要包括以下执行步骤：步骤101、提取应用系统评价数据中的差评数据。应用系统可以是手机、pad上的应用软件，也可以是计算机、笔记本电脑上的应用软件、应用平台等。为了便于描述本申请实施例提出的管控方法，在本申请的一个示例中，应用系统为手机或者电脑上的游戏软件。评价数据一般指用户在使用应用系统过程中，针对用户的使用感受所发布的评价语言，本申请实施例中的评价数据指的是应用系统对应的下载商店或者下载平台中，针对该应用系统发布的评价数据。差评数据主要是指评价数据中对应打分较低的数据或者是使用感受较差的数据。在本申请的一个示例中，下载或者获取的评价数据中，既包括用户使用感受较好/打分较高的好评数据，也包括用户使用感受较差/打分较低的差评数据，为了对应用系统进行管控，找出恶意评价，首先要做的就是在众多的评价数据中将差评数据提取/筛选出来。步骤102、对差评数据进行分类处理，得到质量差评数据以及使用差评数据。在提取出应用系统的差评数据之后，将差评数据进行进一步的分类处理，将其划分成使用差评数据与质量差评数据。在本申请的一个示例中，质量差评数据用于指示用户针对应用系统的第一预设功能所发布的评价数据，使用差评数据用于指示用户针对应用系统中第二预设功能所发布的评价数据，且第一预设功能与第二预设功能不同；在本申请的一个示例中，第二预设功能可以是应用系统的对局功能，第一预设功能是除第二预设功能之外的常规功能，例如查看功能、活动通知功能等。通俗来讲，在应用系统是游戏系统的情况下，用户使用该应用系统，在绝大多数情况下使用的是游戏的对局功能，因此，第二预设功能指游戏软件的对局功能，这样一来，第一预设功能指的就是游戏软件中除对局功能之外的其他功能，例如，推送功能、通知功能等。由此，使用差评数据就是代表用户使用对局功能时，针对使用感受所发布的评价数据，质量差评数据代表的就是用户针对游戏软件中其他功能本身的质量，所发布的评价数据。步骤103、判断质量差评数据、使用差评数据是否为恶意评价数据。在得到质量差评数据之后，需要判断质量差评数据是否为恶意评价数据，例如，质量评价数据为“这游戏玩着玩着老是闪退”，此时，在判断时就会针对该质量差评数据去定位系统质量问题，可以理解的，这个系统质量问题并非应用系统实际存在的系统质量问题，而是用户认为存在的，这样一来，就需要继续判定应用系统是否真的存在定位出来的这个系统质量问题，具体地，根据该系统质量问题对应用系统进行质量检测，若检测出该系统质量问题真的存在，则说明用户评价是真实的，该条评价数据不是恶意评价数据。而如果检测出应用系统中并不存在该系统质量问题，则说明用户进行了虚假/恶意评价，此时，将该条质量差评数据认定成恶意评价数据。同样地，在得到应用系统的使用差评数据之后，也需要判断该使用差评数据是否为恶意评价数据，具体地，根据使用差评数据的发布者获取用户信息，然后通过该用户信息调取应用系统后台使用数据，将系统使用数据与使用差评数据进行匹配，这里的匹配可以是使用内容的匹配，也可以是使用过程中用户行为的匹配，例如，使用差评数据为“队友玩的太不认真了”，此时，与系统使用数据进行匹配时，就需要进行使用过程中，用户行为的匹配，以判断队友是否真的存在不认真行为。如果前述匹配结果为匹配成功，则代表用户评价为真实评价数据，该条使用差评数据不是恶意评价数据，而如果前述匹配过程的匹配结果为不一致，则说明，用户针对使用过程发布的评价是虚假的，此时将该条使用评价数据认定为恶意评价数据。也即，本申请实施例中，针对质量差评数据的判定原则为，对应用系统进行质量检测，以判断评价的系统质量问题是否真的存在；针对使用差评数据的评价原则为，通过与用户的系统使用数据进行匹配，根据匹配结果判断是否为恶意数据。正是因为前述判定原则/判定方法不同，所以需要将获取到的差评数据进行分类，针对不同类型的差评数据，采用不同的判断原则，这样一来，既可以保证判断结果的准确性，避免错判、误判的情况发生，又能够保证对差评数据处理的全面性，防止漏掉恶意评价的情况，进而实现对应用系统的严格管控、高效管控。步骤104、判断系统使用数据是否为恶意使用数据。针对游戏软件，竞争对手在存在恶意评价行为的同时，一般还会存在恶意使用行为，扰乱正常游戏秩序，进而干扰其他正常玩家的使用，为了保证应用系统管控的严格性，防止竞争对手钻空子，本申请实施例中，对于恶意使用行为，也会进行识别。在本申请的一个示例中，恶意使用数据可以指用户使用过程中的操作，与其他玩家操作多数不同甚至完全不同的数据。具体的判定过程为，通过前述获取到的系统使用数据，进行使用分析，以判断用户在使用该应用系统时是否存在恶意行为，进而明确用户的系统使用数据是否为恶意使用数据。需要说明的是，使用分析的具体过程参见下文相关部分描述，本申请实施例在此不做赘述。步骤105、对恶意评价数据以及恶意使用数据对应的用户信息分配标识码。在确定出恶意评价数据与恶意使用数据之后，针对这两类数据对应的用户信息，进行周期性评价流调，获取该用户信息发布的评价数据或者打分数据，然后根据流调结果，为用户信息分配标识码，以对用户进行限制。前述方案中，周期性评价流调指的是以固定时间为间隔，周期性的针对该用户信息进行评价搜索，也即周期性的获取该用户信息针对游戏平台/游戏软件发布的评价数据。标识码指的是对用户信息进行标记，以便于游戏软件识别及管控该恶意用户。在本申请实施例的一种或多种可能实现方式中，为了保证能够从评价数据，将差评数据全部提取出来，不漏掉任何一条差评数据，也即保证提取差评数据的完整性及准确性，这样一来，就可以保证基于差评数据进行的恶意评价数据识别结果的有效性，进而有利于应用系统的高效管控。本申请实施例采用如下提取方案：首先，将评价数据进行句子切分处理，以评价数据中的标点符号为切分点，将评价数据断开，得到若干句子，构成句子集合，然后，再对各个句子进行分词处理，得到各个句子对应的词集合。需要说明的是，在句子中可能存在重复的词语，为了避免这些重复的词语对后续关键词提取的影响，在构建词集合时，会将词集合中重复出现的词语进行删除，每个词语只保留一个。还需要说明的是，对句子进行分词处理，可以通过现有的方法或者算法实现，本申请实施例对此不做赘述。进一步地，有前述内容可知一个句子对应一个词集合，然后构建词集合对应的词语关系矩阵，也即一个句子对应的一个词语关系矩阵，具体地，先确定词集合中的元素个数，即一个词集合中包含几个词语，加入元素个数为n，就需要构建一个n×n的全零矩阵，然后，对词集合中的词元素进行编号，编号完成后，通过预设滑动窗口，对词集合进行滑动，将同时出现在该预设滑动窗口内的词元素编号对应的全零矩阵元素赋值为1，在预设滑动窗口完成词集合的滑动之后，完成全零矩阵的赋值，得到词语关系矩阵。需要明确的是，对词语关系矩阵中的元素进行赋值，具体依据是，将出现在预设滑动窗口内的第一个词语元素对应的词语元素编号确定为全零矩阵元素的行数，以及，将出现在滑动窗口内的第二个词语元素对应的词语元素编号确定为全零矩阵元素的列数，以确定全零矩阵元素的位置。在本申请的一个示例中，为了保证词语关系矩阵中元素赋值的准确性，即保证词语关系矩阵能够更加真实的反映句子中词语之间的联系，将预设滑动窗口的长度设置为最少2个字。在构建完词语关系矩阵之后，统计该矩阵中每行不为零元素的个数，然后基于该个数，确定句子对应的关键词。例如，第一行不为零元素个数为2，第二行不为零元素个数为3，那么就代表词集合中编号为3的词元素出现在滑动窗口内的次数较多，也就可以确定词集合中第3个词元素为关键词。更进一步地，在确定出词集合对应的关键词之后，也就得到了评价数据对应的关键词，对得到的关键词进行语义识别处理，确定出语义，即可确定出关键词中的差评关键词，对应的，将该差评关键词对应的评价数据，确定为差评数据。需要说明的是，前述语义识别处理可以通过现有方法或者现有算法实现，本申请实施例在此不做赘述，只要能够确定出各个关键词语对应的语义即可。在本申请实施例的一种或多种可能实现方式中，在评价数据中提取出差评数据之后，为了保证应用系统管控的严格性，防止漏掉识别恶意评价的情况出现，本申请实施例中，会对差评数据进行进一步地分类，以便于后期针对不同类别的差评数据，采用不同的评判依据，以保证了判别恶意评价结果的准确性。在本申请的一个示例中，对差评数据进行分类，通过以下过程实现：首先根据差评数据对应的差评关键词，对差评数据进行预分类，因为在前述步骤中，差评关键词是基于语义识别处理确定出来的，所以，在当前步骤中也可以根据差评关键词的语义对差评数据进行预分类，也就是先简单分类，得到质量差评预分类数据以及使用差评预分类数据，为便于描述，将质量差评预分类数据构建成第一数据集，将使用差评预分类数据构建为第二数据集。因为本申请实施例中的应用系统以游戏软件为例，对于游戏软件的用户来说，更关注的在于游戏对局使用感受，在对局游戏体验优于其他同类游戏的情况下，游戏软件存在的一些其他问题，例如频繁推送活动等问题，用户也可以忽略掉。但如果游戏软件对局体验不好，就容易导致用户放弃掉该游戏软件，这也就导致了，游戏软件的评价数据中，使用感受的评价数据往往多于游戏本身质量的评价数据。同样地，竞争对手在对游戏软件进行恶意评价时，其重点也一般是放在使用评价上，通过恶意且夸大其词的描述游戏对局的恶劣情况，达到劝退正常玩家的目的。体现在本申请实施例中，也就是使用差评数据的数据量要远远大于质量差评数据，也即，第一数据集与第二数据集中的数据量相差悬殊。这样一来，采用常规的分类方法就容易导致分类结果不准确的情况，容易造成属于质量差评数据的一条评价，被划分到使用差评数据中。因此，为了保证分类结果的准确性，进而保证恶意评价判别的准确性，本申请实施例中，在分类时，将第二数据集进行多次划分，每次划分出一个与第一数据集的数据量相差不大的第二数据子集，然后将第二数据子集与第一数据集构建待分类数据集，再对该待分类数据集进行分类处理。具体地，对各个待分类数据集中的差评数据进行特征提取，将提取出来的特征输入至预设分类器中，通过预设分类器输出评价数据的分类结果。此处的分类结果即为使用差评数据以及质量差评数据。需要说明的是，对差评数据进行特征提取可以通过现有的方法或者现有算法实现，本申请实施例对此不作赘述，并且，为了减少分类器的计算量，加快分类进度，本申请实施例中提取出来的特征至少包括语义特征。在本申请实施例的一种或多种可能实现方式中，为了保证对差评数据判别是否为恶意评价数据的判别结果准确性，本申请实施例中针对不同的差评数据类型，采用不同的判别依据，进行不同的判别过程。在差评数据为质量差评数据时，提取质量差评数据对应的系统质量问题，然后通过确定出来的系统质量问题对应用系统进行模块定位，即，找到系统质量问题对应的系统模型，然后，调取该系统模块的动态测试日志，并在动态测试日志中查找该系统质量问题是否存在，即明确在应用系统测试阶段是否出现过该系统质量问题，若是，则代表应用系统之前出现过这个问题，后期修复过程可能没有修复完全，导致问题又重复出现，在这种情况下，说明该差评数据可能为真实的评价数据。若动态测试日志中没有找到这个系统质量问题，则说明应用系统在前期的测试阶段没有出现过这个问题，但这种情况下，也不能代表应用系统后期不会新出现该系统质量问题，因此，在动态测试日志中不存在该系统质量问题时，继续对应用系统的系统模块进行静态测试，如果静态测试的结果显示没有问题，则说明应用系统确实不存在该系统质量问题，此时，将质量差评数据确定为恶意评价数据。而如果静态测试结果中显示存在该系统质量问题，则说明质量差评数据是真实的差评数据，不是恶意评价数据。在本申请的一个示例中，系统质量问题至少包括以下任一项或者多项：闪退问题、画质问题、卡顿问题以及掉帧问题；在本申请实施例的一种或多种可能实现方式中，在差评数据为使用差评数据时，如果该使用差评数据为恶意评价数据，就实现了恶意评价数据的识别，如果该使用差评数据不是恶意评价数据，而是正常用户进行的真实评价数据，则有可能可以根据该使用差评数据找出对局中存在的恶意使用数据。无论是进行恶意评价数据的识别还是进行恶意使用数据的识别，都要先根据该使用差评数据得用户信息，提取用户信息对应的系统使用数据，反映在游戏软件上，就是游戏中的对局数据。具体地，获取使用差评数据的评价时间，因为一般是针对游戏对局发布的评价数据，所以肯定是先进行使用才有了评价，因此，通过预设的日志捕获线程，捕获在评价时间之前的系统使用日志，然后对系统使用日志进行内容筛选，提取出日志中存在的开局数据，需要说明的是，提取的开局数据为距离评价时间最近的开局数据，这是因为，用户发布的差评数据很有可能是针对最近一次开局发布的。并且，本申请实施例中的开局数据可以是开局回放视频数据。然后，在开局数据中提取使用差评数据的用户信息对应的局内操作数据，并将该局内操作数据确定为用户信息对应的系统使用数据，也即，发布使用差评数据的用户的操作数据。还需要说明的是，本申请实施例中的开局数据可以是单机游戏数据，也可以是对局游戏数据。进一步地，在确定用户信息对应的系统使用数据之后，就可以将该系统使用数据与使用差评数据进行匹配，以此实现该使用差评数据是否为恶意评价数据的判别。具体地，在开局数据为对局游戏数据时，或者在对局游戏数据的数据量大于单机游戏数据的数据量，也即，用户玩对局比较多的情况下，根据用户信息对应的局内操作数据，确定局内操作时间节点，然后获取该局内操作时间节点上，其他玩家的操作数据，并将其他玩家的操作数据与用户信息对应的操作数据进行操作匹配，若匹配结果一致，则说明该用户信息对应的用户与局内其他玩家的操作在时间节点上是一致的，此时可能不存在其他玩家干扰游戏秩序的情况，或者是，其他玩家在局内操作时间节点上的操作是一致的，例如，两个队友的操作是匹配的，这也就说明在这个操作时间节点，队友的操作是没有问题的，因为，两个人同时进行干扰游戏的情况比较少见，此时，就可以确定该用户信息发布的使用差评数据，是恶意评价数据。因为，使用差评数据评价的往往是队友或者对手，评价队友的情况居多，不可能出现评价自己操作差评的情况。因此，通过对对局中其他玩家的操作进行识别，就可以判断该使用差评数据是否为恶意评价数据。进一步地，在开局数据为单机游戏数据时，或者在对局游戏数据的数据量小于等于单机游戏数据的数据量，也即，用户玩单机比较多的情况下，将系统使用数据与使用差评数据进行匹配，可以是将用户使用到的单机游戏功能与使用差评数据进行匹配。具体的，首先根据用户信息对应的局内操作数据，提取用户使用到的单机游戏功能，以及，提取使用差评数据对应的评价对象，一般是评价数据的首词，计算首词与游戏功能名称之间的语义相似度，并在相似度低于预设相似阈值的情况下，确定使用差评数据为恶意评价数据。即，在用户使用到的单机游戏功能，与其评价对象不一致时，说明用户发布的评价为恶意评价。在本申请的一个示例中，也有可能会存在用户没有使用单机游戏功能的情况，此时，可以直接将使用评价数据判定为恶意评价数据。在本申请的一个示例中，计算评价数据首词与单机游戏功能名称之间的相似度，可以通过以下过程实现：首先获取二者对应的词向量，采用预设算法对功能名称进行处理，得到第一词向量A，以及，采用预设算法对评价对象进行处理，得到第二词向量B；在得到对应的词向量之后，就可以通过相似度计算模型进行相似度计算。但在计算之前，需要通过第一词向量A与第二词向量B分别构建相似度计算模型的输入矩阵与预设输出矩阵；其中，，需要说明的是，输入矩阵是用来输入相似度计算模型的，得到输出矩阵，而预设输出矩阵则是用来与实际的输出矩阵进行计算，得到相似度的。在本申请的一个示例中，相似度计算模型包括6个层，分别为：输入层、卷积层、拼接层、注意力机制层、全连接层以及输出层。具体地，首先将输入矩阵通过输入层输入相似度计算模型中，并通过相似度计算模型的卷积层提取输入矩阵对应的三元组特征；继续通过相似度计算模型的拼接层将三元组特征进行拼接，得到输入矩阵对应的特征序列；将特征序列继续输入至相似度计算模型的注意力机制层进行特征提取，得到特征序列对应的序列特征；需要说明的是，卷积层提取的是输入矩阵的特征，注意力机制层提取的是特征序列的特征。将序列特征输入至以softmax为激活函数的全连接层，进而通过相似度计算模型的输出层得到输出矩阵；最后，通过以下公式，计算预设输出矩阵与输出矩阵之间的余弦相似度，以此确定单机游戏功能名称与评价数据首词之间的语义相似度：至此，完成使用评价数据与质量评价数据的判定过程。在本申请实施例的一种或多种可能实现方式中，对获取到的系统使用数据，进行使用分析，判断该用户信息对应的用户是否存在恶意使用行为。需要说明的是，恶意使用行为的发生，往往是为了影响正常玩家的使用，对正常玩家造成干扰，使其放弃该游戏，达到恶意竞争的目的。因此，恶意使用行为一般是存在于对局游戏中。因此，在本申请一个示例中，判断用户信息的系统使用数据是否为恶意使用数据，具体为，首先获取局游戏数据中的其他玩家操作数据，然后在其他玩家操作数据中提取重要操作时间节点；在本申请的一个示例中，重要操作指的是对对局结果有影响的操作，例如，对局比赛中每一次的团战操作。接下来，将重要操作时间节点对应的用户信息的局内操作数据，与重要时间节点对应的其他玩家操作数据进行操作匹配，并在匹配结果不一致的情况下，确定系统使用数据为恶意使用数据；因为在匹配结果不一致时，说明在重要时间节点，用户信息对应的用户没有与其他玩家一样进行重要操作，此时，则可能存在恶意扰乱游戏秩序的行为。在本申请的一个示例中，操作匹配至少包括以下任一项或者多项：移动操作匹配、技能释放操作匹配以及局内位置匹配。以上内容是确定发布使用差评数据的用户是否存在恶意使用行为，基于类似的原理，也可以通过用户信息对应的局内操作数据，识别对局中其他玩家是否存在恶意使用行为，该过程原理与前述过程原理类似，本申请实施例对此不做赘述。在本申请实施例的一种或多种可能实现方式中，在确定出恶意评价数据与恶意使用数据之后，应用系统会对这两种数据对应的用户进行管控，具体的管控操作为，为用户分配标识码，通过标识码限定用户对应用系统的操作范围，例如，标识码具有不同的等级，不同等级对应使用应用系统不同的功能。而分配标识码的依据是，以固定时间为间隔，在游戏网站或者游戏平台上对用户信息进行搜索，此处的用户信息可以是用户注册账号、用户设备MAC地址、用户设备IP以及用户注册名称；搜索完之后，获取用户信息在游戏网站或者游戏平台上发布的内容，然后依据发布内容中差评内容的占比，对用户信息进行评分，发布差评内容越多，评分越低，在本申请的一个示例中，用户信息发布的内容可以是回答问题、发布问题、发布评价以及发布文章等行为内容。进一步地，在确定用户信息对应的评分之后，可以依据不同的评分阶段，分配不同等级的标识码，以限制用户对应用系统的可操作性范围，也即限制用户使用应用系统的部分功能。也可以，在评分低于预设评分阈值时，直接分配标识码，拒绝用户使用该应用系统。因为，在用户评分较低时，说明该用户发布差评内容较多，且该用户在应用系统上存在发布恶意评价的历史，此时，可以直接拒绝该用户使用应用系统。以上为本申请实施例中的方法实施例，基于同样的发明构思，本申请实施例还提供了一种多维度应用系统管控设备，其结构如图2所示。图2为本申请实施例提供的一种多维度应用系统管控设备结构图，如图2所示，设备包括：处理器；以及存储器，其上存储有可执行代码，当所述可执行代码被执行时，使得处理器执行如前述实施例所描述的一种多维度应用系统管控方法。在本申请实施例的一种或多种可能实现方式中，处理器用于：获取应用系统的评价数据，并提取所述评价数据中的差评数据；对所述差评数据进行分类处理，得到质量差评数据以及使用差评数据；其中，所述质量差评数据用于指示用户针对所述应用系统的第一预设功能所发布的评价数据，所述使用差评数据用于指示用户针对所述应用系统中第二预设功能的使用过程所发布的评价数据；确定所述质量差评数据对应的系统质量问题，并根据所述系统质量问题对所述应用系统进行质量检测，以确定所述系统质量问题是否存在；若否，则确定所述质量差评数据为恶意评价数据；以及，获取所述使用差评数据对应的用户信息，并调取所述用户信息对应的系统使用数据；将所述系统使用数据与所述使用差评数据进行匹配，并在匹配结果不成功的情况下，确定所述使用评价数据为恶意评价数据；对所述系统使用数据进行使用分析，以确定所述系统使用数据为恶意使用数据；对所述恶意评价数据以及所述恶意使用数据分别对应的用户信息进行周期性评价流调，并根据评价流调结果，为所述用户信息分配标识码，以限制所述用户信息对应用户对所述应用系统的可操作范围。本申请中的各个实施例均采用递进的方式描述，各个实施例之间相同相似的部分互相参见即可，每个实施例重点说明的都是与其他实施例的不同之处。尤其，对于设备实施例而言，由于其基本相似于方法实施例，所以描述的比较简单，相关之处参见方法实施例的部分说明即可。还需要说明的是，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、商品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、商品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括所述要素的过程、方法、商品或者设备中还存在另外的相同要素。以上所述仅为本申请的实施例而已，并不用于限制本申请。对于本领域技术人员来说，本申请可以有各种更改和变化。凡在本申请的精神和原理之内所作的任何修改、等同替换、改进等，均应包含在本申请的权利要求范围之内。
