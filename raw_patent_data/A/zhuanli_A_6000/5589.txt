标题title
游戏技能动画播放方法、设备和存储介质
摘要abst
本申请提供一种游戏技能动画播放方法、设备和存储介质，其中方法包括：确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率；若所述当前战斗速率大于所述原始战斗速率，则根据所述原始战斗速率播放当前待处理的第一技能动画；根据所述当前战斗速率确定要播放的下一个技能动画；根据所述原始战斗速率播放所述下一个技能动画。本申请实现了在高倍速进行游戏战斗过程的情况下，按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。
权利要求书clms
1.一种游戏技能动画播放方法，其特征在于，所述方法包括：确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率；若所述当前战斗速率大于所述原始战斗速率，则根据所述原始战斗速率播放当前待处理的第一技能动画；根据所述当前战斗速率确定要播放的下一个技能动画；根据所述原始战斗速率播放所述下一个技能动画。2.根据权利要求1所述的方法，其特征在于，参与所述战斗过程的虚拟角色为多个；在所述根据所述原始战斗速率播放当前待处理的第一技能动画之前，还包括：响应于用户对多个虚拟角色中第一角色的选定指令，根据所述当前战斗速率确定所述第一角色最近释放的第一技能，将所述第一技能对应的技能动画确定为所述第一技能动画。3.根据权利要求1所述的方法，其特征在于，所述根据所述当前战斗速率确定要播放的下一个技能动画，包括：根据所述当前战斗速率确定所述战斗过程的战斗进度；根据所述战斗进度确定所述下一个技能动画。4.根据权利要求3所述的方法，其特征在于，所述根据所述战斗进度确定所述下一个技能动画，包括：确定所述第一技能动画播放完成时的第一时刻，确定所述第一时刻对应的第一战斗进度；确定在所述第一战斗进度状态下虚拟角色释放的多个技能；从所述多个技能中选出释放时间在所述第一时刻之后，并且距离所述第一时刻最近的第二技能；将所述第二技能对应的技能动画确定为所述下一个技能动画。5.根据权利要求3所述的方法，其特征在于，所述根据所述战斗进度确定所述下一个技能动画，包括：确定所述第一技能动画播放完成时的第一时刻；响应于用户对多个虚拟角色中第三角色的选定指令，根据所述战斗进度确定所述第三角色在所述第一时刻之后释放的第三技能；将所述第三技能对应的技能动画确定为所述下一个技能动画；若所述第三角色在所述第一时刻之后不存在已释放技能，则根据所述战斗进度从剩余角色已释放技能对应的动画中确定所述下一个技能动画，所述剩余角色是所述多个虚拟角色中除去所述第三角色以外的角色。6.根据权利要求1所述的方法，其特征在于，所述第一技能动画为第一技能对应的动画，所述下一个技能动画为在所述第一技能动画播放完成之后需要播放的下一个技能对应的动画；在所述根据所述原始战斗速率播放所述下一个技能动画之前，还包括：若在所述第一技能的释放时间与下一个技能释放时间之间存在被第四角色释放的中间技能，播放所述中间技能对应的预设动画，所述预设动画的时长小于所述中间技能对应的技能动画时长。7.根据权利要求1所述的方法，其特征在于，在所述根据所述原始战斗速率播放所述下一个技能动画之后，还包括：在所述战斗过程按照所述当前战斗速率完成后，结束技能动画的播放，在用户界面展示所述战斗过程的战斗结果信息。8.一种电子设备，其特征在于，包括：至少一个处理器；以及与所述至少一个处理器通信连接的存储器；其中，所述存储器存储有可被所述至少一个处理器执行的指令，所述指令被所述至少一个处理器执行，以使所述电子设备执行权利要求1-7任一项所述的方法。9.一种云设备，其特征在于，包括：至少一个处理器；以及与所述至少一个处理器通信连接的存储器；其中，所述存储器存储有可被所述至少一个处理器执行的指令，所述指令被所述至少一个处理器执行，以使所述云设备执行权利要求1-7任一项所述的方法。10.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质中存储有计算机执行指令，当处理器执行所述计算机执行指令时，实现如权利要求1-7任一项所述的方法。
说明书desc
技术领域本申请涉及信息处理技术领域，尤其涉及一种游戏技能动画播放方法、设备和存储介质。背景技术游戏技能动画，是指电子游戏中虚拟角色释放战斗技能时的动画，以卡牌类电子游戏场景为例，在卡牌游戏中，为了在战斗中完整表现角色的魅力，通常会为角色制定3-10秒不等的专属必杀技能的动画；当战斗回合过多时，游戏技能动画播放时间往往非常长，并且频繁重复的技能动画也会让玩家审美疲劳。在相关技术中，可以通过加速游戏战斗速率的方式来加速技能动画播放，以降低游戏技能动画播放时长，但这种方式下快速播放的动画，会在显示界面上出现画面快速闪现，不仅用户看不清楚显示画面，也会造成人眼伤害，用户体验很不好。发明内容本申请实施例的主要目的在于提供一种游戏技能动画播放方法、设备和存储介质，实现了在高倍速进行游戏战斗过程的情况下，按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。第一方面，本申请实施例提供一种游戏技能动画播放方法，包括：确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率；若所述当前战斗速率大于所述原始战斗速率，则根据所述原始战斗速率播放当前待处理的第一技能动画；根据所述当前战斗速率确定要播放的下一个技能动画；根据所述原始战斗速率播放所述下一个技能动画。于一实施例中，参与所述战斗过程的虚拟角色为多个；在所述根据所述原始战斗速率播放当前待处理的第一技能动画之前，还包括：响应于用户对多个虚拟角色中第一角色的选定指令，根据所述当前战斗速率确定所述第一角色最近释放的第一技能，将所述第一技能对应的技能动画确定为所述第一技能动画。于一实施例中，所述根据所述当前战斗速率确定要播放的下一个技能动画，包括：根据所述当前战斗速率确定所述战斗过程的战斗进度；根据所述战斗进度确定所述下一个技能动画。于一实施例中，所述根据所述战斗进度确定所述下一个技能动画，包括：确定所述第一技能动画播放完成时的第一时刻，确定所述第一时刻对应的第一战斗进度；确定在所述第一战斗进度状态下多个虚拟角色释放的多个技能；从所述多个技能中选出释放时间在所述第一时刻之后，并且距离所述第一时刻最近的第二技能；将所述第二技能对应的技能动画确定为所述下一个技能动画。于一实施例中，所述根据所述战斗进度确定所述下一个技能动画，包括：确定所述第一技能动画播放完成时的第一时刻；响应于用户对多个虚拟角色中第三角色的选定指令，根据所述战斗进度确定所述第三角色在所述第一时刻之后释放的第三技能；将所述第三技能对应的技能动画确定为所述下一个技能动画；若所述第三角色在所述第一时刻之后不存在已释放技能，则根据所述战斗进度从剩余角色已释放技能对应的动画中确定所述下一个技能动画，所述剩余角色是所述多个虚拟角色中除去所述第三角色以外的角色。于一实施例中，所述第一技能动画为第一技能对应的动画，所述下一个技能动画为在所述第一技能动画播放完成之后需要播放的下一个技能对应的动画；在所述根据所述原始战斗速率播放所述下一个技能动画之前，还包括：若在所述第一技能的释放时间与下一个技能释放时间之间存在被第四角色释放的中间技能，播放所述中间技能对应的预设动画，所述预设动画的时长小于所述中间技能对应的技能动画时长。于一实施例中，在所述根据所述原始战斗速率播放所述下一个技能动画之后，还包括：在所述战斗过程按照所述当前战斗速率完成后，结束技能动画的播放，在用户界面展示所述战斗过程的战斗结果信息。第二方面，本申请实施例提供一种游戏战斗过程的展示方法，包括：确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率；若所述当前战斗速率大于所述原始战斗速率，则在所述战斗过程中，采用如上述任一方面所述的方法，在用户界面播放所述战斗过程的游戏技能动画；在所述战斗过程按照所述当前战斗速率结束后，在所述用户界面展示所述战斗过程的战斗结果信息。第三方面，本申请实施例提供一种游戏技能动画播放装置，包括：第一确定模块，用于确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率；第一播放模块，用于若所述当前战斗速率大于所述原始战斗速率，则根据所述原始战斗速率播放当前待处理的第一技能动画；第二确定模块，用于根据所述当前战斗速率确定要播放的下一个技能动画；第二播放模块，用于根据所述原始战斗速率播放所述下一个技能动画。于一实施例中，参与所述战斗过程的虚拟角色为多个；所述第一确定模块，还用于在所述根据所述原始战斗速率播放当前待处理的第一技能动画之前，响应于用户对多个虚拟角色中第一角色的选定指令，根据所述当前战斗速率确定所述第一角色最近释放的第一技能，将所述第一技能对应的技能动画确定为所述第一技能动画。于一实施例中，所述第二确定模块，用于根据所述当前战斗速率确定所述战斗过程的战斗进度；根据所述战斗进度确定所述下一个技能动画。于一实施例中，所述第二确定模块，用于确定所述第一技能动画播放完成时的第一时刻，确定所述第一时刻对应的第一战斗进度；确定在所述第一战斗进度状态下多个虚拟角色释放的多个技能；从所述多个技能中选出释放时间在所述第一时刻之后，并且距离所述第一时刻最近的第二技能；将所述第二技能对应的技能动画确定为所述下一个技能动画。于一实施例中，所述第二确定模块，用于确定所述第一技能动画播放完成时的第一时刻；响应于用户对多个虚拟角色中第三角色的选定指令，根据所述战斗进度确定所述第三角色在所述第一时刻之后释放的第三技能；将所述第三技能对应的技能动画确定为所述下一个技能动画；若所述第三角色在所述第一时刻之后不存在已释放技能，则根据所述战斗进度从剩余角色已释放技能对应的动画中确定所述下一个技能动画，所述剩余角色是所述多个虚拟角色中除去所述第三角色以外的角色。于一实施例中，所述第一技能动画为第一技能对应的动画，所述下一个技能动画为在所述第一技能动画播放完成之后需要播放的下一个技能对应的动画；所述装置还包括：第三播放模块，用于在所述根据所述原始战斗速率播放所述下一个技能动画之前，若在所述第一技能的释放时间与下一个技能释放时间之间存在被第四角色释放的中间技能，播放所述中间技能对应的预设动画，所述预设动画的时长小于所述中间技能对应的技能动画时长。于一实施例中，还包括：展示模块，用于在所述根据所述原始战斗速率播放所述下一个技能动画之后，在所述战斗过程按照所述当前战斗速率完成后，结束技能动画的播放，在用户界面展示所述战斗过程的战斗结果信息。第四方面，本申请实施例提供一种电子设备，包括：至少一个处理器；以及与所述至少一个处理器通信连接的存储器；其中，所述存储器存储有可被所述至少一个处理器执行的指令，所述指令被所述至少一个处理器执行，以使所述电子设备执行上述任一方面所述的方法。第五方面，本申请实施例提供一种云设备，包括：至少一个处理器；以及与所述至少一个处理器通信连接的存储器；其中，所述存储器存储有可被所述至少一个处理器执行的指令，所述指令被所述至少一个处理器执行，以使所述云设备执行上述任一方面所述的方法。第六方面，本申请实施例提供一种计算机可读存储介质，所述计算机可读存储介质中存储有计算机执行指令，当处理器执行所述计算机执行指令时，实现上述任一方面所述的方法。第七方面，本申请实施例提供一种计算机程序产品，包括计算机程序，该计算机程序被处理器执行时实现上述任一方面所述的方法。本申请实施例提供的游戏技能动画播放方法、设备和存储介质，通过在高倍速战斗过程中，按照非倍速的速率播放技能动画，并基于高倍速战斗的速率，确定下一个需要非倍速播放的技能动画，实现了在高倍速进行游戏战斗过程的情况下，按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。附图说明此处的附图被并入说明书中并构成本说明书的一部分，示出了符合本申请的实施例，并与说明书一起用于解释本申请的原理。显而易见地，下面描述中的附图是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。图1为本申请实施例提供的一种电子设备的结构示意图；图2为本申请实施例提供的一种游戏技能动画播放方案的应用场景示意图；图3为本申请实施例提供的一种游戏技能动画播放方法的流程示意图；图4为本申请实施例提供的一种角色的技能动画的示意图；图5为本申请实施例提供的一种为原始战斗速率下的技能动画播放时间轴示意图；图6为本申请实施例提供的一种2倍速模式下的技能动画播放时间示意图；图7为本申请实施例提供的一种2倍速下战斗过程的时间帧与技能动画播放时间帧的对比示意图；图8为本申请实施例提供的一种游戏技能动画播放方法的流程示意图；图9为本申请实施例提供的一种游戏战斗过程的展示方法的流程示意图；图10为本申请实施例提供的一种游戏技能动画播放装置的结构示意图；图11为本申请实施例提供的一种云设备的结构示意图。通过上述附图，已示出本申请明确的实施例，后文中将有更详细的描述。这些附图和文字描述并不是为了通过任何方式限制本申请构思的范围，而是通过参考特定实施例为本领域技术人员说明本申请的概念。具体实施方式这里将详细地对示例性实施例进行说明，其示例表示在附图中。下面的描述涉及附图时，除非另有表示，不同附图中的相同数字表示相同或相似的要素。以下示例性实施例中所描述的实施方式并不代表与本申请相一致的所有实施方式。本文中术语“和/或”，用于描述关联对象的关联关系，具体表示可以存在三种关系，例如，A和/或B，可以表示：单独存在A，同时存在A和B，单独存在B这三种情况。需要说明的是，本申请所涉及的用户信息和数据，均为经用户授权或者经过各方充分授权的信息和数据，并且相关数据的收集、使用和处理需要遵守相关国家和地区的相关法律法规和标准，并提供有相应的操作入口，供用户选择授权或者拒绝。为了清楚地描述本申请实施例的技术方案，首先对本申请所涉及的名词进行释义：虚拟场景：是应用程序在终端上运行时显示的虚拟的场景。该虚拟场景可以是对真实世界的仿真环境场景，也可以是半仿真半虚构的三维环境场景，还可以是纯虚构的三维环境场景。虚拟场景可以是二维虚拟场景、2.5维虚拟场景和三维虚拟场景中的任意一种，下述实施例以虚拟场景是三维虚拟场景来举例说明，但对此不加以限定。技能动画：是指游戏技能动画，是指电子游戏的虚拟场景中虚拟角色释放战斗技能时的动画，以卡牌类电子游戏场景为例，在卡牌游戏中，为了在战斗中完整表现角色的魅力，通常会为角色制定3-10秒不等的专属必杀技能的动画，比如角色普通招式，通常仅有小范围动画，可以是角色个体的动画，也可以是角色全体的动画。必杀技：虚拟角色的专属技能，必杀技对应的技能动画，可以屏蔽虚拟场景中的战场信息，通常可以为全屏动画，完整360度展现单个虚拟角色的专属技能招式。技能释放：是指用户控制虚拟角色使用某个技能的过程，比如可以在用户界面配置虚拟角色A的某个技能的触发控件，用户可以点击该触发控件，以使虚拟角色A使用该技能，实现技能释放。技能释放后，系统可以根据该技能配置的参数，改变被该技能击中的目标角色的参数，和/或改变虚拟角色A的参数等等，比如减少被击中目标角色的血槽值、体力值等参数。倍数：表示虚拟场景中游戏中的1个时间单位与真实场景中1个时间单位的比例。比如游戏倍数可以为1-10倍。游戏倍数为10时，表示游戏中的1个时间单位所包含的时间帧数量是真实场景中1个时间单位包含时间帧数量的10倍。以高倍数进行加速游戏过程，也可以称为以倍速模式进行游戏过程。如图1所示，本实施例提供一种电子设备1，包括：至少一个处理器11和存储器12，图1中以一个处理器为例。处理器11和存储器12通过总线10连接。存储器12存储有可被处理器11执行的指令，指令被处理器11执行，以使电子设备1可执行下述的实施例中方法的全部或部分流程，以实现在高倍速进行游戏战斗过程的情况下，按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。于一实施例中，电子设备1可以是手机、平板电脑、笔记本电脑、台式计算机或者多个计算机组成的大型运算系统。图2为本申请实施例提供的一种游戏技能动画播放系统应用场景200的示意图。如图2所示，该系统包括：服务器210和终端220，其中：服务器210可以是提供游戏技能动画播放服务的数据平台，比如可以是电子游戏平台。实际场景中，一个电子游戏平台可能有多个服务器210，图2中以1个服务器210为例。终端220可以是用户登录电子游戏平台时使用的电脑、手机、平板等设备，终端220也可以有多个，图2中以2个终端220为例进行示意。终端220与服务器210之间可以通过互联网进行信息传输，以使终端220可以访问服务器210上的数据。上述终端220和/或者服务器210均可以由电子设备1来实现。本申请实施例的游戏技能动画播放方案可以部署在服务器210上，也可以部署在终端220上，或者部分部署在服务器210上，部分部署在终端220上。实际场景中可以基于实际需求选择，本实施例不做限定。当游戏技能动画播放方案全部或者部分部署在服务器210上时，可以对终端220开放调用接口，以对终端220提供算法支持。本申请实施例提供的方法可由电子设备1执行相应的软件代码实现，通过和服务器进行数据交互来实现。其中，电子设备1可以为本地终端设备。当该方法运行于服务器时，该方法则可以基于云交互系统来实现与执行，其中，云交互系统包括服务器和客户端设备。在一可选的实施方式中，云交互系统下可以运行各种云应用，例如：云游戏。以云游戏为例，云游戏是指以云计算为基础的游戏方式。在云游戏的运行模式下，游戏程序的运行主体和游戏画面呈现主体是分离的，本申请实施例的方法的储存与运行是在云游戏服务器上完成的，客户端设备的作用用于数据的接收、发送以及游戏画面的呈现，举例而言，客户端设备可以是靠近用户侧的具有数据传输功能的显示设备，如，移动终端、电视机、计算机、掌上电脑等。但是进行信息处理的电子设备为云端的云游戏服务器。在进行游戏时，玩家操作客户端设备向云游戏服务器发送操作指令，云游戏服务器根据操作指令运行游戏，将游戏画面等数据进行编码压缩，通过网络返回客户端设备，最后，通过客户端设备进行解码并输出游戏画面。在一可选的实施方式中，以游戏为例，本地终端设备存储有游戏程序并用于呈现游戏画面。本地终端设备用于通过图形用户界面与玩家进行交互，即，常规的通过电子设备下载安装游戏程序并运行。该本地终端设备将图形用户界面提供给玩家的方式可以包括多种，例如，可以渲染显示在终端的显示屏上，或者，通过全息投影提供给玩家。举例而言，本地终端设备可以包括显示屏和处理器，该显示屏用于呈现图形用户界面，该图形用户界面包括游戏画面，该处理器用于运行该游戏、生成图形用户界面以及控制图形用户界面在显示屏上的显示。在一种可能的实施方式中，本发明实施例提供的方法，通过终端设备提供图形用户界面，其中，终端设备可以是前述提到的本地终端设备，也可以是前述提到的云交互系统中的客户端设备。本申请实施例的游戏技能动画播放方式可以应用于任意需要技能动画播放的领域。以电子游戏场景为例，随着信息化技术的发展，电子游戏已成为人们娱乐生活的重要部分。实际场景中，对于二次元卡牌战斗类游戏，玩家更多的喜欢某个虚拟角色的设定信息，比如卡牌立绘、技能动画、专属必杀技等等，而对于战斗数值方面的决策反馈反而并不是所有玩家核心关注点。游戏也通常会同时拥有许多种不同风格的虚拟角色。因此在一场游戏战斗中，某些玩家主要关注的可能并非虚拟角色的技能，而是该虚拟角色在屏幕上展现的动画效果，比如释放技能时播放的技能动画。游戏技能动画，是指电子游戏中虚拟角色释放战斗技能时的动画，以卡牌类电子游戏场景为例，在卡牌游戏中，为了在战斗中完整表现角色的魅力，相关技术中会为角色制定3-10秒不等的专属必杀技能的动画。由于技能动画的存在，意味着播放技能动画会占据游戏过程中绝大多数时间。随着后续敌人增强，一场游戏战斗所需的回合数不断增长，单场持续时间也越来越长，比如半个小内都在不停重复放技能动画都有可能，长时间播放技能动画会让用户觉得拖拉，也会给用户带来不好的游戏体验。为了解决时长问题，相关技术中一般可以通过跳过战斗、倍数加速战斗、关闭必杀技特效等功能来解决。跳过战斗：用户控制的虚拟角色可以省略进入战斗的过程，直接获取战斗结果，但是该模式下，用户无法看到技能动画，使得游戏枯燥无味。关闭技能特效：用户控制的虚拟角色正常进入战斗过程，但省略必杀技等长动画特效，进而节省掉动画播放时间，同样的，该模式下用户看不到必杀技的技能动画，与用户互动性较差。X倍数战斗：将战斗过程相较于配置的原始战斗速率进行加速，例如正常情况整个战斗过程需要300帧，耗时10秒。2倍速战斗速率下，将在5秒内播放完300帧。10倍速战斗速率下将在1秒内播放完300帧。倍数加速战斗，就是以倍速模式进行游戏战斗过程，可以通过加速游戏战斗速率的方式来加速技能动画播放，以降低游戏技能动画播放时长，但这种方式下快速播放的动画也会造成人眼伤害，用户体验很不好。例如8倍数：相当于原30秒的动画内容在4秒内播放完，一方面快速焦点移动会极大伤害人眼，另外一方面如此密集的播放内容，玩家反而什么都看不清，对于玩家毫无体验可言。实际场景中，玩家对于倍数加速战斗情况下，关注交多的也是技能动画，而非战斗数值反馈，因此可以根据战斗速率，重新组合播放的技能动画。将技能动画和战斗过程分开。因此本申请实施例方案提出一种新的倍速战斗情况下解决方法，在同样倍数战斗场景下，通过关键动画的重新筛选，满足以正常速度播放的需求。为了解决上述问题，本申请实施例提供一种游戏技能动画播放方案，通过在高倍速战斗过程中，按照非倍速的速率播放技能动画，并基于高倍速战斗的速率，确定下一个需要非倍速播放的技能动画，实现了在高倍速进行游戏战斗过程的情况下，按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。下面结合附图，对本申请的一些实施方式作详细说明。在各实施例之间不冲突的情况下，下述的实施例及实施例中的特征可以相互组合。另外，下述各方法实施例中的步骤时序仅为一种举例，而非严格限定。请参看图3，其为本申请一实施例的游戏技能动画播放方法，该方法可由图1所示的电子设备1来执行，并可以应用于图2中所示的游戏技能动画播放的应用场景中，以实现在高倍速进行游戏战斗过程的情况下，按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。本实施例以终端220为执行端为例，该方法包括如下步骤：步骤301：确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率。在本步骤中，虚拟场景：是应用程序在终端上运行时显示的虚拟的游戏场景。该虚拟场景可以是对真实世界的仿真环境场景，也可以是半仿真半虚构的三维环境场景，还可以是纯虚构的三维环境场景。该虚拟场景可用于至少两个虚拟角色之间的虚拟场景对战。原始战斗速率可以是电子游戏原本设定的按照真实场景的时间正常进行战斗过程的速率，该模式下，虚拟角色的技能动作一般与实际场景中的角色动作的速率相同或相似。实际场景中，如果用户没有调整战斗进行的速率，可以默认战斗过程以原始战斗速率进行。当前战斗速率是指战斗过程正在执行的速率，当前战斗速率大于原始战斗速率时，说明当前战斗模式时倍速战斗模式，表示当前以加速模式进行战斗过程。比如用户选择以2倍速模式进行战斗过程，则表示当前战斗速率是原始战斗速率的2倍，在当前战斗速率为2倍速情况下，虚拟角色的技能动作相较于原始战斗速率模式下被加速2倍，因此倍速下可以加快战斗过程的进程。例如正常情况整个战斗过程需要300帧，耗时10秒。2倍速战斗速率下，将在5秒内播放完300帧。10倍速战斗速率下将在1秒内播放完300帧。于一实施例中，当前战斗速率与原始战斗速率之间的倍数可以是整数也可以是非整数。可以响应于用户的操作指令进行当前战斗速率的设定，用户可以根据实际需求设定对应的倍速值，增加终端的互动性能，提高用户体验。步骤302：若当前战斗速率大于原始战斗速率，则根据原始战斗速率播放当前待处理的第一技能动画。在本步骤中，在倍速战斗模式下，原始战斗速率小于当前战斗速率，原始战斗速率可以是没有倍速的情况下的角色正常运动速率，更加符合实际场景中角色的运动状态，按照原始战斗速率对应的动画播放速率播放第一技能动画，可以使得第一技能动画保留与真实场景中相似的运动节奏进行，可以更加清楚流畅的表现出第一技能动画被设置的动作细节，使用户可以清楚看到第一技能释放时，虚拟角色的优美动作，提高沉浸式体验感。于一实施例中，在步骤302之前，还包括：获取在虚拟场景的战斗过程中待处理的第一技能动画；在本实施例中，第一技能为虚拟角色在虚拟场景的战斗过程中释放的游戏角色技能，第一技能动画就是第一节能被预先配置的动画。虚拟角色可以是用户使用终端220控制的游戏角色，可以在战斗过程中，可以在虚拟角色释放第一技能时，从本地存储或者远端服务器获取该第一技能对应的动画数据。于一实施例中，获取第一技能动画的步骤具体可以包括：响应于用户对多个虚拟角色中第一角色的选定指令，根据当前战斗速率确定第一角色最近释放的第一技能，将第一技能对应的技能动画确定为第一技能动画。在本实施例中，参与战斗过程的虚拟角色为多个。用户可以从多个虚拟角色中选择一个或多个角色进行技能动画播放，比如用户可以在战斗开始前对参与战斗的虚拟角色进行筛选，确定需要播放技能动画的第一角色，第一角色可以为一个或多个。可以在用户界面展示各个虚拟角色的角色控件，用户通过选中对应的角色控件，开触发对虚拟角色的选定操作，响应于该选定操作，确定该选定操作对应的虚拟角色为第一角色，在战斗过程中播放第一角色的技能动画。战斗过程按照当前战斗速率进行，因此可以根据当前战斗速率确定第一角色最近释放的第一技能，将第一技能对应的技能动画确定为第一技能动画。如此可以由用户选择播放哪个虚拟角色的技能动画，提高互动性能。于一实施例中，也可以由用户选定播放第一角色的某个技能的动画，也就是说第一技能也可以由用户选定。比如卡牌类游戏中，虚拟角色A拥有3个技能，用户可以选择技能2和/或技能3作为该虚拟角色A的第一技能，也就会说，在战斗过程中只有该虚拟角色A释放技能2和/或技能3时，播放该虚拟角色A对应的技能2和/或技能3的动画，而该虚拟角色A释放技能1时，则不播放技能1的动画，如此，可以由用户自由选择自己想看的技能动画，进一步提高终端互动性能，提高用户体验。步骤303：根据当前战斗速率确定要播放的下一个技能动画。在本步骤中，倍速战斗模式下，虽然第一技能动画按照原始战斗速率对应的动画播放速率进行播放，但是战斗过程依然是按照倍速模式下的当前战斗速率在进行，需因此下一个技能动画需要基于当前战斗速率来确定，保证下一个技能动画与实际的战斗过程相适应。于一实施例中，步骤303具体可以包括：根据当前战斗速率确定战斗过程的战斗进度。根据战斗进度确定下一个技能动画。在本实施例中，倍速战斗模式下，战斗过程依然是按照倍速模式下的当前战斗速率在进行，首先确定战斗过程按照当前战斗速率所处的战斗进度，战斗进度的信息包括战斗过程从战斗开始到当前时刻持续的时长、参与战斗过程的各个虚拟角色的当前状态信息，各个虚拟角色在倍速战斗过程中当前已释放的技能，以及各个已释放技能的释放时间点等等信息。战斗进度的信息可以从战斗进度记录的存储数据中读取。可以从战斗进度的信息中确定虚拟角色释放的技能，进而从中确定要播放的下一个技能动画。以使下一个技能动画与实际的战斗过程相适应。于一实施例中，步骤303具体可以包括：确定第一技能动画播放完成时的第一时刻，确定第一时刻对应的第一战斗进度。确定在第一战斗进度状态下多个虚拟角色释放的多个技能。从多个技能中选出释放时间在第一时刻之后，并且距离第一时刻最近的第二技能。将第二技能对应的技能动画确定为下一个技能动画。在本实施例中，下一个技能动画需要在第一技能动画播放完成的情况下进行播放，因此首先确定第一技能动画播放完成时的第一时刻，然后确定从战斗开始到第一时刻，该战斗过程依照倍速模式的当前战斗速率所处的第一战斗进度，第一战斗进度的信息中至少可以包括截止到第一时刻战斗过程持续的时长、参与战斗过程的各个虚拟角色在第一时刻的当前状态信息，各个虚拟角色已释放的技能，以及各个已释放技能的释放时间、战斗是否结束等等信息。如果在第一时刻战斗过程还未结束，可以基于各个技能的释放时间，从已释放的多个技能中选出释放时间在第一时刻之后，并且距离第一时刻最近的第二技能，该第二技能的动画就是要播放的下一个技能动画。而对于释放时间在第一时刻之前的技能对应的动画，可以跳过播放，对于释放时间在第一时刻之后，但距离第一时刻不是最近的游戏技能的动画，如果其时间轴被第二技能的动画覆盖，则不予播放，如此，节省出来的时间，用来将第一技能动画和第二技能动画按照贴近现实的原始战斗速率下的播放速率进行播放，避免倍速战斗模式下加速播放的动画给人眼带来的伤害，提高用户体验。第二技能可以是第二角色释放的游戏技能，此处第二角色可以与第一角色相同，也可以不同。于一实施例中，以2倍速模式为例，假设虚拟场景中参与战斗过程的共有三个虚拟角色，分别为：角色1、角色2和角色3，如图4所示，角色1的必杀技A的动画包括6帧，角色2的必杀技B的动画包括4帧，角色3的必杀技动C的动画包括10帧。在战斗过程中，角色1、角色2、角色3按照如下次序：“角色1必杀技A1释放—＞角色2必杀技B1释放—＞角色3必杀技C1释放—＞角色3必杀技C2释放—＞角色1必杀技A2释放—＞角色2必杀技B2释放”，依次释放必杀技。假设原始战斗速率下对应的技能动画播放速率是每帧1秒，如图5所示，为原始战斗速率下的技能动画播放时间轴示意图，用户可以看到战斗过程中的动画一共持续40秒。战斗过程开启2倍速模式后，战斗过程的正在执行的当前战斗速率是原始战斗速率的2倍，相关技术中的做法是加速播放技能动画，因此每帧0.5秒即可播放完前述战斗过程释放的必杀技的技能动画，如图6所示，为2倍速模式下的技能动画播放时间示意图，用户可以看到的战斗过程一共持续20秒。如果按照这种播放速率，技能动画会快速闪过，用户不仅看不清楚动画内容，而且快速的闪光也会给人眼带来伤害。本申请实施例中，假设第一技能动画是角色1在战斗过程中第一次释放的必杀技A1的动画，则按照每帧1秒播放必杀技A1的动画，确定该角色1的必杀技A1的动画播放完成时的第一时刻是第6秒结束。如图7所示，为2倍速下战斗过程的时间帧与技能动画播放时间帧的对比示意图，根据第6秒结束对应的战斗过程的第一战斗进度，确定在第6秒结束后释放，并且距离该第6秒结束最近的第二技能就是角色3第一次释放的必杀技C1。则必杀技C1的动画就是需要播放的下一个技能动画。如此，为了保证正在播放的第一技能动画完整进行播放，角色2释放的必杀技B1的时间轴被覆盖，即跳过这个必杀技动画，不再播放，从而节省播放时间。于一实施例中，步骤303还可以包括：确定第一技能动画播放完成时的第一时刻，响应于用户对多个虚拟角色中第三角色的选定指令，根据战斗进度确定第三角色在第一时刻之后释放的第三技能。将第三技能对应的技能动画确定为下一个技能动画。在本实施例中，参与战斗过程的虚拟角色有多个，可以由用户选择下一个技能动画是哪个角色的技能动画。比如用户可以在战斗开始前或者战斗进行过程中对参与战斗的虚拟角色进行筛选，确定下一个需要播放技能动画的第三角色，第三角色可以为一个或多个。可以在战斗过程中在用户界面展示各个虚拟角色的角色控件，用户通过选中对应的角色控件，开触发对虚拟角色的选定指令，响应于该选定指令，确定该选定指令对应的虚拟角色为第三角色，在第一技能动画播放完成时播放第三角色的技能动画。此处第三角色可以与第一角色、第二角色是同一个虚拟角色，也可以是不同的虚拟角色。战斗过程按照当前战斗速率进行，因此可以根据当前战斗速率确定第三角色最近释放的第三技能，首先确定第一技能动画播放完成时的第一时刻，然后确定第三角色在第一时刻之后释放的、并且距离第一时刻最近的技能就是第三技能。将第三技能对应的技能动画确定为需要播放的下一个技能动画。如此可以由用户选择下一个需要播放哪个虚拟角色的技能动画，提高互动性能。于一实施例中，也可以由用户选定播放第三角色的某个技能的动画，也就是说第三技能也可以有用户选定。比如卡牌类游戏中，虚拟角色A拥有3个技能，用户可以选择技能1作为该虚拟角色A的第三技能，也就会说，在战斗过程中只有该虚拟角色A释放技能1时，播放该虚拟角色A对应的技能1的动画，而该虚拟角色A释放技能2或技能3时，则不播放技能2和技能3的动画，如此，可以由用户自由选择自己想看的技能动画，进一步提高终端互动性能，提高用户体验。于一实施例中，步骤303还可以包括：若第三角色在第一时刻之后不存在已释放技能，则根据战斗进度从剩余角色已释放技能对应的动画中确定下一个技能动画。在本实施例中，剩余角色是参与战斗的多个虚拟角色中除去第三角色以外的角色。比如用户选择虚拟角色A作为优先展示技能动画的第三角色，但是在第一技能动画播放完成后，虚拟角色A没有已释放的技能了，此时可以从参与战斗的剩余角色已释放技能中选择在第一时刻之后释放的、并且距离第一时刻最近的技能，将该技能对应的动画，作为下一个技能动画。步骤304：根据原始战斗速率播放下一个技能动画。在本步骤中，需要播放的下一个技能动画也按照原始战斗速率对应的播放速率进行播放，同样的，原始战斗速率可以是没有倍速的情况下的角色正常运动速率，更加符合实际场景中角色的运动状态，按照原始战斗速率对应的动画播放速率播放下一个技能动画，可以使得下一个技能动画保留与真实场景中相似的运动节奏进行，可以更加清楚流畅的表现出下一个技能动画被设置的动作细节，使用户可以清楚看到下一个技能释放时，虚拟角色的优美动作，提高沉浸式体验感。如图7，所示，在第一个技能动画播放完成之后，在第7秒，直接播放角色3第一次释放的必杀技C1的动画，如此，为了保证正在播放的必杀技A1和必杀技C1的动画完整进行播放，角色2释放的必杀技B1的时间轴被覆盖，即跳过这个必杀技动画，不再播放，从而节省播放时间。于一实施例中，在步骤304或者步骤302之后，还可以包括：若战斗过程当前未结束，则继续根据当前战斗速率确定战斗过程的战斗进度，确定第二技能动画播放完成时的第二时刻，确定第二时刻对应的第二战斗进度。确定在第二战斗进度状态下多个虚拟角色释放的多个技能。从多个技能中选出释放时间在第二时刻之后，并且距离第二时刻最近的第四技能。将第四技能对应的技能动画确定为下一个技能动画。在本实施例中，以图7所示为例，如果在必杀技C1的动画播放完成时，战斗过程还在继续，则可以继续根据第二时刻的第二战斗进度，确定下一个需要播放的技能动画，比如必杀技C1的动画播放完成时，战斗进度已经到了第17秒。此时可以确定下一个需要播放的技能动画是必杀技A2，也就是说角色1第2此释放的必杀技是第四技能，则可以按照原始战斗速率对应的播放速率，播放必杀技A2的动画。如此，跳过了中间技能必杀技C2的动画，保证必杀技A2的动画按照普通速率播放，减少加速播放动画带来的人眼伤害，提高用户体验。于一实施例中，如果在在步骤304或者步骤302之后，或者在必杀技A2播放完成后，战斗过程结束了，则必杀技B2的动画可以不进行播放，直接展示战斗结果。于一实施例中，其他倍速模式下，比如4倍速、8倍速模式，同理可以根据用户设定的播放角色，按照1倍速的播放速率进行对应技能动画的播放，当一个技能动画结束后，可以实时获取当前战斗进度，根据战斗进度计算下一个应该展示的技能动画。上述游戏技能动画播放方法，通过在高倍速战斗过程中，按照非倍速的速率播放技能动画，并基于高倍速战斗的速率，确定下一个需要非倍速播放的技能动画，通过按照倍速模式下的战斗进度，重新评估战斗进度的动画效果，优先考虑关键角色、关键技能的技能动画，对于被该关键技能动画覆盖的时间轴，可以简单动作、数字反馈来平滑时间轴，使在虚拟场景中的倍速战斗模式下，依然能以正常速度播放关键角色、关键技能的技能动画，实现了在高倍速进行游戏战斗过程的情况下，有选择的按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。请参看图8，其为本申请一实施例的游戏技能动画播放方法，该方法可由图1所示的电子设备1来执行，并可以应用于图2中所示的游戏技能动画播放的应用场景中，以实现在高倍速进行游戏战斗过程的情况下，按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。本实施例以终端220为执行端为例，与前述实施例相比，本实施例还包括时间轴平滑、战斗结果展示的方案，该方法包括如下步骤：步骤801：确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率。详细参见前述实施例中对步骤301的相关描述。步骤802：若当前战斗速率大于原始战斗速率，响应于用户对多个虚拟角色中第一角色的选定指令，根据当前战斗速率确定第一角色最近释放的第一技能，将第一技能对应的技能动画确定为第一技能动画。详细参见前述实施例中对步骤302的相关描述。步骤803：根据原始战斗速率播放第一技能动画。详细参见前述实施例中对步骤302的相关描述。步骤804：根据当前战斗速率确定战斗过程的战斗进度。详细参见前述实施例中对步骤303的相关描述。步骤805：确定第一技能动画播放完成时的第一时刻，确定第一时刻对应的第一战斗进度。详细参见前述实施例中对步骤303的相关描述。步骤806：确定在第一战斗进度状态下多个虚拟角色释放的多个技能。详细参见前述实施例中对步骤303的相关描述。步骤807：从多个技能中选出释放时间在第一时刻之后，并且距离第一时刻最近的第二技能。详细参见前述实施例中对步骤303的相关描述。步骤808：将第二技能对应的技能动画确定为下一个技能动画。详细参见前述实施例中对步骤303的相关描述。步骤809：若在第一技能的释放时间与下一个技能释放时间之间存在被第四角色释放的中间技能，播放中间技能对应的预设动画，预设动画的时长小于中间技能对应的技能动画时长。在本步骤中，第一技能动画为第一技能对应的动画，下一个技能动画为在第一技能动画播放完成之后需要播放的下一个技能对应的动画。如果在第一技能释放之后和下一个技能释放之前的这段时间里，存在被第四角色释放的中间技能，则可以播放预先给中间技能配置的预设动画，该预设动画时长可以比该中间技能对应的技能动画时长小，保证播放预设动画代替中间技能对应的技能动画能够节约播放时间。此处，第四角色可以与第一角色、第二角色和第三角色是同一个虚拟角色，也可以是不同的虚拟角色。如图7中所示，第一技能是角色1释放的必杀技A1，下一个技能是角色3第一次释放的必杀技C1，在必杀技A1释放之后与必杀技C1释放之前，存在角色2释放的必杀技B1，则这里角色2就是第四角色，必杀技B1就是对应的中间技能。为了保证正在播放的第一技能动画完整进行播放，角色2释放的必杀技B1的时间轴被覆盖，可以播放必杀技B1对应的预设动画，比如选择简单动作播放，以平滑时间轴。比如播放角色2在释放必杀技B1时的抬手动作，或者显示释放角色2在释放必杀技B1后的战斗数据反馈等。步骤810：根据原始战斗速率播放下一个技能动画。详细参见前述实施例中对步骤304的相关描述。步骤811：在战斗过程按照当前战斗速率完成后，结束技能动画的播放，在用户界面展示战斗过程的战斗结果信息。在本步骤中，倍速模式下，战斗过程进度被加快，因此会比较快的结束战斗过程，可以在战斗过程完成后，就结束技能动画的播放，保证战斗过程与技能动画播放的一致性，并获取战斗结果信息，可以及时在用户界面展示战斗过程的战斗结果信息，便于用户查看。于一实施例中，在步骤810之后，还可以包括：如果在战斗过程按照当前战斗速率结束后，当前正在播放的技能动画还没有播放完成，则可以等待当前正在播放的技能动画播放完成后，再结束技能动画的播放，如此，可以保持当前正在播放的技能动画的完整性，给用户更加完整的观影体验。上述游戏技能动画播放方法的各个步骤，详细可以参阅上述实施例的相关描述，此处不再赘述。请参看图9，其为本申请一实施例的游戏战斗过程的展示方法，该方法可由图1所示的电子设备1来执行，并可以应用于图2中所示的游戏技能动画播放的应用场景中，以实现在高倍速进行游戏战斗过程的情况下，有选择的按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。本实施例以终端220为执行端为例，该方法包括如下步骤：步骤901：确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率。步骤902：若当前战斗速率大于原始战斗速率，则在战斗过程中，采用如前述任一实施的方法，在用户界面播放战斗过程的游戏技能动画。步骤903：在战斗过程按照当前战斗速率结束后，在用户界面展示战斗过程的战斗结果信息。上述游戏战斗过程的展示方法的各个步骤，详细可以参阅上述实施例的相关描述，此处不再赘述。请参看图10，其为本申请一实施例的游戏技能动画播放装置1000，该装置可应用于图1所示的电子设备1，并可以应用于图2中所示的游戏技能动画播放的应用场景中，以实现在高倍速进行游戏战斗过程的情况下，有选择的按照非倍速的速率播放技能动画，提高画面显示效果，减少高倍速战斗时技能动画快速频繁播放带来的闪光疲劳，提高用户的游戏体验。该装置包括：第一确定模块1001、第一播放模块1002、第二确定模块1003和第二播放模块1004，各个模块的功能原理如下：第一确定模块1001，用于确定虚拟场景中战斗过程预设的原始战斗速率和正在执行的当前战斗速率。第一播放模块1002，用于若当前战斗速率大于原始战斗速率，则根据原始战斗速率播放第一技能动画。第二确定模块1003，用于根据当前战斗速率确定要播放的下一个技能动画。第二播放模块1004，用于根据原始战斗速率播放下一个技能动画。于一实施例中，参与战斗过程的虚拟角色为多个。第一确定模块1001，用于在根据原始战斗速率播放当前待处理的第一技能动画之前，响应于用户对多个虚拟角色中第一角色的选定指令，根据当前战斗速率确定第一角色最近释放的第一技能，将第一技能对应的技能动画确定为第一技能动画。于一实施例中，第二确定模块1003，用于根据当前战斗速率确定战斗过程的战斗进度。根据战斗进度确定下一个技能动画。于一实施例中，第二确定模块1003，用于确定第一技能动画播放完成时的第一时刻，确定第一时刻对应的第一战斗进度。确定在第一战斗进度状态下多个虚拟角色释放的多个技能。从多个技能中选出释放时间在第一时刻之后，并且距离第一时刻最近的第二技能。将第二技能对应的技能动画确定为下一个技能动画。于一实施例中，第二确定模块1003，用于确定第一技能动画播放完成时的第一时刻；响应于用户对多个虚拟角色中第三角色的选定指令，根据战斗进度确定第三角色在第一时刻之后释放的第三技能。将第三技能对应的技能动画确定为下一个技能动画；若第三角色在第一时刻之后不存在已释放技能，则根据战斗进度从剩余角色已释放技能对应的动画中确定下一个技能动画，剩余角色是多个虚拟角色中除去第三角色以外的角色。于一实施例中，第一技能动画为第一技能对应的动画，下一个技能动画为在第一技能动画播放完成之后需要播放的下一个技能对应的动画；该装置还包括：第三播放模块，用于在根据原始战斗速率播放下一个技能动画之前，若在第一技能的释放时间与下一个技能释放时间之间存在被第四角色释放的中间技能，播放中间技能对应的预设动画，预设动画的时长小于中间技能对应的技能动画时长。于一实施例中，还包括：展示模块，用于在根据原始战斗速率播放下一个技能动画之后，在战斗过程按照当前战斗速率完成后，结束技能动画的播放，在用户界面展示战斗过程的战斗结果信息。上述游戏技能动画播放装置1000的详细描述，请参见上述实施例中相关方法步骤的描述，其实现原理和技术效果类似，本实施例此处不再赘述。图11为本申请示例性实施例提供的一种云设备110的结构示意图。该云设备110可以用于运行上述任一实施例所提供的方法。如图11所示，该云设备110可以包括：存储器1104和至少一个处理器1105，图11中以一个处理器为例。存储器1104，用于存储计算机程序，并可被配置为存储其它各种数据以支持在云设备110上的操作。该存储器1104可以是对象存储。存储器1104可以由任何类型的易失性或非易失性存储设备或者它们的组合实现，如静态随机存取存储器，电可擦除可编程只读存储器，可擦除可编程只读存储器，可编程只读存储器，只读存储器，磁存储器，快闪存储器，磁盘或光盘。处理器1105，与存储器1104耦合，用于执行存储器1104中的计算机程序，以用于实现上述任一方法实施例所提供的方案，具体功能和所能实现的技术效果此处不再赘述。进一步地，如图11，该云设备还包括：防火墙1101、负载均衡器1102、通信组件1106、电源组件1103等其它组件。图11中仅示意性给出部分组件，并不意味着云设备只包括图11所示组件。于一实施例中，上述图11中的通信组件1106被配置为便于通信组件1106所在设备和其他设备之间有线或无线方式的通信。通信组件1106所在设备可以接入基于通信标准的无线网络，如WiFi，2G、3G、4G、LTE、5G等移动通信网络，或它们的组合。在一个示例性实施例中，通信组件1106经由广播信道接收来自外部广播管理系统的广播信号或广播相关信息。在一个示例性实施例中，通信组件1106还包括近场通信模块，以促进短程通信。例如，在NFC模块可基于射频识别技术，红外数据协会技术，超宽带技术，蓝牙技术和其他技术来实现。于一实施例中，上述图11的电源组件1103，为电源组件1103所在设备的各种组件提供电力。电源组件1103可以包括电源管理系统，一个或多个电源，及其他与为电源组件所在设备生成、管理和分配电力相关联的组件。本申请实施例还提供一种计算机可读存储介质，计算机可读存储介质中存储有计算机执行指令，当处理器执行计算机执行指令时，实现前述任一实施例的方法。本申请实施例还提供一种计算机程序产品，包括计算机程序，该计算机程序被处理器执行时实现前述任一实施例的方法。在本申请所提供的几个实施例中，应该理解到，所揭露的设备和方法，可以通过其它的方式实现。例如，以上所描述的设备实施例仅仅是示意性的，例如，模块的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，例如多个模块可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。上述以软件功能模块的形式实现的集成的模块，可以存储在一个计算机可读取存储介质中。上述软件功能模块存储在一个存储介质中，包括若干指令用以使得一台计算机设备或处理器执行本申请各个实施例方法的部分步骤。应理解，上述处理器可以是中央处理单元，还可以是其它通用处理器、数字信号处理器、专用集成电路等。通用处理器可以是微处理器或者该处理器也可以是任何常规的处理器等。结合申请所公开的方法的步骤可以直接体现为硬件处理器执行完成，或者用处理器中的硬件及软件模块组合执行完成。存储器可能包含高速RAM存储器，也可能还包括非易失性存储NVM，例如至少一个磁盘存储器，还可以为U盘、移动硬盘、只读存储器、磁盘或光盘等。上述存储介质可以是由任何类型的易失性或非易失性存储设备或者它们的组合实现，如静态随机存取存储器，电可擦除可编程只读存储器，可擦除可编程只读存储器，可编程只读存储器，只读存储器，磁存储器，快闪存储器，磁盘或光盘。存储介质可以是通用或专用计算机能够存取的任何可用介质。一种示例性的存储介质耦合至处理器，从而使处理器能够从该存储介质读取信息，且可向该存储介质写入信息。当然，存储介质也可以是处理器的组成部分。处理器和存储介质可以位于专用集成电路中。当然，处理器和存储介质也可以作为分立组件存在于电子设备或主控设备中。需要说明的是，在本文中，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者装置不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者装置所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括该要素的过程、方法、物品或者装置中还存在另外的相同要素。上述本申请实施例序号仅仅为了描述，不代表实施例的优劣。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到上述实施例方法可借助软件加必需的通用硬件平台的方式来实现，当然也可以通过硬件，但很多情况下前者是更佳的实施方式。基于这样的理解，本申请的技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台终端设备执行本申请各个实施例的方法。本申请的技术方案中，所涉及的用户数据等信息的收集、存储、使用、加工、传输、提供和公开等处理，均符合相关法律法规的规定，且不违背公序良俗。以上仅为本申请的优选实施例，并非因此限制本申请的专利范围，凡是利用本申请说明书及附图内容所作的等效结构或等效流程变换，或直接或间接运用在其他相关的技术领域，均同理包括在本申请的专利保护范围内。
