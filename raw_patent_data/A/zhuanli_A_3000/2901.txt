标题title
动画切换方法、装置、设备及计算机可读存储介质
摘要abst
本申请提供了一种动画切换方法、装置、计算机设备及计算机可读存储介质；该方法包括：获取虚拟角色的当前状态、位置信息和移动信息；当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态；利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画；输出所述目标动画。通过本申请，能够简化运动动画系统的复杂度，并且实现精细调优，提高动画质量。
权利要求书clms
1.一种动画切换方法，其特征在于，所述方法包括：获取虚拟角色的当前状态、位置信息和移动信息；当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态；利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画；输出所述目标动画。2.根据权利要求1中所述的方法，其特征在于，所述利用目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画，包括：获取所述目标状态对应的运动匹配节点和所述目标状态对应的目标动画数据库；获取所述运动匹配节点对应的目标代价函数，和当前播放动画的当前姿态特征、当前轨迹特征；基于所述目标代价函数、所述当前姿态特征和所述当前轨迹特征从所述目标动画数据库中确定待播放的目标动画。3.根据权利要求2中所述的方法，其特征在于，姿态特征中包括至少一个姿态特征分量，轨迹特征至少包括至少一个轨迹特征分量，利用所述目标代价函数、所述当前姿态特征和所述当前轨迹特征从所述目标动画数据库中确定待播放的目标动画，包括：基于所述目标代价函数获取各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重；获取所述目标动画数据库中各个第一候选动画的候选姿态特征和候选轨迹特征；基于所述各个姿态特征分量对应的姿态权重、所述各个轨迹特征分量对应的轨迹权重、所述当前姿态特征、所述当前轨迹特征，和所述各个第一候选动画的候选姿态特征和候选轨迹特征，确定所述当前播放动画和所述各个第一候选动画之间的相似度；基于所述当前播放动画和所述各个第一候选动画之间的相似度从所述各个第一候选动画中确定待播放的目标动画。4.根据权利要求3所述的方法，其特征在于，所述基于所述各个姿态特征分量对应的姿态权重、所述各个轨迹特征分量对应的轨迹权重、所述当前姿态特征、所述当前轨迹特征，和所述各个第一候选动画的候选姿态特征和候选轨迹特征，确定所述当前播放动画和所述各个第一候选动画之间的相似度，包括：确定所述当前姿态特征和各个候选姿态特征中各个姿态特征分量对应的相似度；确定所述当前轨迹特征和各个候选轨迹特征中各个轨迹特征分量对应的相似度；将所述各个姿态特征分量对应的姿态权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前姿态特征和各个候选姿态特征之间的各个姿态相似度；将所述各个轨迹特征分量对应的轨迹权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前轨迹特征和各个候选轨迹特征之间的各个轨迹相似度；将所述各个姿态相似度和对应的各个轨迹相似度的和确定为所述当前播放动画和所述各个第一候选动画之间的相似度。5.根据权利要求3中所述的方法，其特征在于，所述基于所述当前播放动画和所述各个第一候选动画之间的相似度从所述各个第一候选动画中确定待播放的目标动画，包括：从所述当前播放动画和所述各个第一候选动画之间的相似度中确定第一最高相似度；当所述第一最高相似度大于相似度阈值时，将所述第一最高相似度对应的第一候选动画确定为待播放的目标动画。6.根据权利要求5中所述的方法，其特征在于，所述方法还包括：获取所述当前状态对应的当前动画数据库中的各个第二候选动画；确定所述当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度；从所述当前播放动画和所述各个第二候选动画之间的相似度中确定第二最高相似度；将所述第二最高相似度确定为相似度阈值。7.根据权利要求5中所述的方法，其特征在于，所述方法还包括：当所述最高相似度小于或者等于所述相似度阈值时，从所述当前状态对应的当前动画数据库中获取第二最高相似度对应的第二候选动画；将所述第二最高相似度对应的第二候选动画确定为待播放的目标动画。8.根据权利要求1至7任一项所述的方法，其特征在于，所述方法还包括：当基于所述当前状态、位置信息和移动信息确定未达到状态切换时机时，确定所述当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度；从所述当前动画数据库中的各个第二候选动画之间的相似度中确定第三最高相似度；将所述第三最高相似度对应的第二候选动画确定为待播放的目标动画。9.根据权利要求1至7任一项所述的方法，其特征在于，所述方法还包括：获取多个不同预设速度的参考动画；对至少两个不同预设速度的参考动画进行融合处理，得到多个融合后的动画；将所述参考动画和所述融合后的动画增加至动画数据库。10.根据权利要求1至7任一项所述的方法，其特征在于，所述方法还包括：获取各个状态对应的动画数据库中的候选动画；提取所述各个状态对应的动画数据库中的候选动画的姿态特征和轨迹特征。11.根据权利要求1至7任一项所述的方法，其特征在于，所述方法还包括：获取预设的代价函数，所述预设的代价函数中各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重为预设值；基于各个状态的配置需求信息，分别设置所述代价函数中各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重，得到所述各个状态对应的代价函数。12.一种动画切换装置，其特征在于，所述装置包括：第一获取模块，用于获取虚拟角色的当前状态、位置信息和移动信息；第一确定模块，用于当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态；第二确定模块，用于利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画；播放模块，用于输出所述目标动画。13.一种计算机设备，其特征在于，所述计算机设备包括：存储器，用于存储计算机可执行指令；处理器，用于执行所述存储器中存储的计算机可执行指令时，实现权利要求1至11任一项所述的方法。14.一种计算机可读存储介质，存储有计算机可执行指令，其特征在于，所述计算机可执行指令被处理器执行时实现权利要求1至11任一项所述的方法。15.一种计算机程序产品，包括计算机程序或计算机可执行指令，其特征在于，所述计算机程序或计算机可执行指令被处理器执行时实现权利要求1至11任一项所述的方法。
说明书desc
技术领域本申请涉及数据处理技术，尤其涉及一种动画切换方法、装置、设备及计算机可读存储介质。背景技术运动动画系统作为虚拟角色动画系统的核心成分，负责生成角色在虚拟场景中的移动动画。现有的运动动画系统技术方案一般有两种：基于动画状态机、基于运动匹配。动画状态机系统由至少两个状态机组成，根据条件在状态之间进行转移。每个状态机内部使用动画分选器来选择动画和播放动画。由于基于动画状态机的转换根据动画分选器的不同，需要对动画进行专门的预处理、曲线计算，并开发运行时系统，工作流复杂，并且因为状态转移逻辑和动画分选器的复杂性，容易出现故障，难以调试和维护；Motion Matching技术不再人为的区分运动状态，但开发者无法方便的干预动画的切换和播放逻辑，因此可控性弱，并且整个运动动画系统共享一套参数，调整参数会影响到整体的搜索算法，牵一发而动全身，无法精细调优。发明内容本申请实施例提供一种动画切换方法、装置及计算机可读存储介质，能够简化运动动画系统的复杂度，并且实现精细调优，提高动画质量。本申请实施例的技术方案是这样实现的：本申请实施例提供一种动画切换方法，所述方法包括：获取虚拟角色的当前状态、位置信息和移动信息；当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态；利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画；输出所述目标动画。本申请实施例提供一种动画切换装置，包括：第一获取模块，用于获取虚拟角色的当前状态、位置信息和移动信息；第一确定模块，用于当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态；第二确定模块，用于利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画；播放模块，用于输出所述目标动画。在一些实施例中，该第二确定模块，还用于：获取所述目标状态对应的运动匹配节点和所述目标状态对应的目标动画数据库；获取所述运动匹配节点对应的目标代价函数和当前播放动画的当前姿态特征、当前轨迹特征；基于所述目标代价函数、所述当前姿态特征和所述当前轨迹特征从所述目标动画数据库中确定待播放的目标动画。在一些实施例中，姿态特征中包括至少一个姿态特征分量，轨迹特征至少包括至少一个轨迹特征分量，该第二确定模块，还用于：基于所述目标代价函数获取各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重；获取所述目标动画数据库中各个第一候选动画的候选姿态特征和候选轨迹特征；基于所述各个姿态特征分量对应的姿态权重、所述各个轨迹特征分量对应的轨迹权重、所述当前姿态特征、所述当前轨迹特征，和所述各个第一候选动画的候选姿态特征和候选轨迹特征，确定所述当前播放动画和所述各个第一候选动画之间的相似度；基于所述当前播放动画和所述各个第一候选动画之间的相似度从所述各个第一候选动画中确定待播放的目标动画。在一些实施例中，该第二确定模块，还用于：确定所述当前姿态特征和各个候选姿态特征中各个姿态特征分量对应的相似度；确定所述当前轨迹特征和各个候选轨迹特征中各个轨迹特征分量对应的相似度；将所述各个姿态特征分量对应的姿态权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前姿态特征和各个候选姿态特征之间的各个姿态相似度；将所述各个轨迹特征分量对应的轨迹权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前轨迹特征和各个候选轨迹特征之间的各个轨迹相似度；将所述各个姿态相似度和对应的各个轨迹相似度的和确定为所述当前播放动画和所述各个第一候选动画之间的相似度。在一些实施例中，该第二确定模块，还用于：从所述当前播放动画和所述各个第一候选动画之间的相似度中确定第一最高相似度；当所述第一最高相似度大于相似度阈值时，将所述第一最高相似度对应的第一候选动画确定为待播放的目标动画。在一些实施例中，该装置还包括：第二获取模块，用于获取所述当前状态对应的当前动画数据库中的各个第二候选动画；第三确定模块，用于确定所述当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度；第四确定模块，用于从所述当前播放动画和所述各个第二候选动画之间的相似度中确定第二最高相似度；第五确定模块，用于将所述第二最高相似度确定为相似度阈值。在一些实施例中，该装置还包括：第三获取模块，用于当所述第一最高相似度小于或者等于所述相似度阈值时，从所述当前动画数据库中获取所述第二最高相似度对应的第二候选动画；第六确定模块，用于将所述第二最高相似度对应的第二候选动画确定为待播放的目标动画。在一些实施例中，该装置还包括：第七确定模块，用于当基于所述当前状态、位置信息和移动信息确定未达到状态切换时机时，确定所述当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度；第八确定模块，用于从所述当前动画数据库中的各个第二候选动画之间的相似度中确定第三最高相似度；第九确定模块，用于将所述第三最高相似度对应的第二候选动画确定为待播放的目标动画。在一些实施例中，该装置还包括：第四获取模块，用于获取多个不同预设速度的参考动画；融合模块，用于对至少两个不同预设速度的参考动画进行融合处理，得到多个融合后的动画；数据添加模块，用于将所述参考动画和所述融合后的动画增加至动画数据库。在一些实施例中，该装置还包括：第五获取模块，用于获取各个状态对应的动画数据库中的候选动画；特征提取模块，用于提取所述各个状态对应的动画数据库中的候选动画的姿态特征和轨迹特征。在一些实施例中，该装置还包括：第六获取模块，用于获取预设的代价函数，所述预设的代价函数中各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重为预设值；权重设置模块，用于基于各个状态的配置需求信息，分别设置所述代价函数中各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重，得到所述各个状态对应的代价函数。本申请实施例提供一种计算机设备，所述计算机设备包括：存储器，用于存储计算机可执行指令；处理器，用于执行所述存储器中存储的计算机可执行指令时，实现本申请实施例提供的方法。本申请实施例提供一种计算机可读存储介质，存储有计算机可执行指令，用于被处理器执行时，实现本申请实施例提供的动画切换方法。本申请实施例提供一种计算机程序产品，包括计算机程序或计算机可执行指令，述计算机程序或计算机可执行指令被处理器执行时，实现本申请实施例提供的动画切换方法。本申请实施例具有以下有益效果：在游戏对局过程中，首先获取虚拟角色的当前状态、位置信息和移动信息，当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态，其中该目标状态与当前状态不同，然后利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画，并输出所述目标动画，在本申请实施例中不同的状态对应有一个独立的运动匹配节点，能够简化运动动画系统的复杂度，使其变得轻量且可复用，并且每个独立的运动匹配节点具有独立配置的运动匹配算法参数，从而可以对每个状态对应的独立的运动匹配节点进行精细化调优，提高动画播放的流畅性和自然性。附图说明图1是本申请实施例提供的游戏系统架构的结构示意图；图2是本申请实施例提供的服务器400的结构示意图；图3A是本申请实施例提供的动画切换方法的一种实现流程示意图；图3B是本申请实施例提供的确定待播放的目标动画的实现流程示意图；图4A是本申请实施例提供的基于目标代价函数确定目标动画的实现流程示意图；图4B是本申请实施例提供的确定当前播放动画和各个第一候选动画之间的相似度的实现流程示意图；图5A是本申请实施例提供的基于各个相似度从多个候选动画中确定目标动画的实现流程示意图；图5B是本申请实施例提供的动画切换方法的另一种实现流程示意图；图6为相关技术中传统动画状态机的动画系统结构示意图；图7为本申请实施例提供的动画系统结构示意图；图8为本申请实施例提供的动画生产和动画蓝图的实现流程示意图。具体实施方式为了使本申请的目的、技术方案和优点更加清楚，下面将结合附图对本申请作进一步地详细描述，所描述的实施例不应视为对本申请的限制，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其它实施例，都属于本申请保护的范围。在以下的描述中，涉及到“一些实施例”，其描述了所有可能实施例的子集，但是可以理解,“一些实施例”可以是所有可能实施例的相同子集或不同子集，并且可以在不冲突的情况下相互结合。在以下的描述中，所涉及的术语“第一第二第三”仅仅是是区别类似的对象，不代表针对对象的特定排序，可以理解地，“第一第二第三”在允许的情况下可以互换特定的顺序或先后次序，以使这里描述的本申请实施例能够以除了在这里图示或描述的以外的顺序实施。除非另有定义，本文所使用的所有的技术和科学术语与属于本申请的技术领域的技术人员通常理解的含义相同。本文中所使用的术语只是为了描述本申请实施例的目的，不是旨在限制本申请。对本申请实施例进行进一步详细说明之前，对本申请实施例中涉及的名词和术语进行说明，本申请实施例中涉及的名词和术语适用于如下的解释。1）状态，是指虚拟角色所处的播放某种特定动画的动作，例如待机、起步、停步、折返、行走、奔跑、攻击、跳跃等。一般情况下，一个虚拟角色拥有多个状态，并按照一定的逻辑顺序在状态之间切换，以执行不同的动作。2）动画状态机，用于管理和控制虚拟角色在各个状态之间切换的管理器。3）运动匹配，是将动画数据进行预处理，获取姿态、运动轨迹等信息，在游戏运行过程中根据玩家的输入和当前的姿态为目标数据，从动画特征数据库中确定出最佳动画的技术。本申请实施例提供一种动画切换方法、装置、设备和计算机可读存储介质，能够传统的动画状态机工作流程复杂，难以调试和维护以及运动匹配技术无法精细调优的问题。下面说明本申请实施例提供的计算机设备的示例性应用，本申请实施例提供的设备可以实施为笔记本电脑，平板电脑，台式计算机，机顶盒，移动设备等各种类型的用户终端，也可以实施为服务器。下面，将说明设备实施为服务器时示例性应用。参见图1，图1是本申请实施例提供的游戏系统100的架构示意图，如图1所示，该游戏系统100包括服务器400、网络300和终端200，其中，终端200通过网络300连接服务器400，网络300可以是广域网或者局域网，又或者是二者的组合。该网络架构适用于依赖服务器400的计算能力完成虚拟场景计算、并在终端200输出虚拟场景的应用模式。以形成虚拟场景的视觉感知为例，服务器400进行虚拟场景相关显示数据的计算并发送到终端200，终端200依赖于图形计算硬件完成计算显示数据的加载、解析和渲染，依赖于图形输出硬件输出虚拟场景以形成视觉感知，例如可以在智能手机的显示屏幕呈现二维的视频帧，或者，在增强现实/虚拟现实眼镜的镜片上投射实现三维显示效果的视频帧；对于虚拟场景的形式的感知而言，可以理解，可以借助于终端的相应硬件输出，例如使用麦克风输出形成听觉感知，使用振动器输出形成触觉感知等等。作为示例，终端200运行有客户端210，通过连接游戏服务器与其他用户进行游戏互动，终端200输出客户端210的虚拟场景，该虚拟场景中可以包括多个虚拟角色，例如有己方及友方的虚拟角色，还可以有敌方虚拟角色。在游戏对局过程中，服务器400获取用户通过终端200中的客户端210的操作信息，并基于操作信息获取虚拟角色的位置信息和移动信息，并获取虚拟角色的当前状态，当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态，利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画，并输出所述目标动画。当确定未达到状态切换时机时，从虚拟角色当前状态对应的动画数据库中确定出待播放的目标动画，并输出目标动画，在图1所示的网络架构中，服务器400输出目标动画，也即将目标动画发送至终端200，以在终端200的客户端210中进行播放显示。在本申请实施例中不同的状态对应有一个独立的运动匹配节点，能够简化运动动画系统的复杂度，使其变得轻量且可复用，并且每个独立的运动匹配节点具有独立配置的运动匹配算法参数，运动匹配算法参数可以包括轨迹特征权重和姿态特征权重，从而可以对每个状态对应的独立的运动匹配节点进行精细化调优，提高动画播放的流畅性和自然性；另外，每个独立的运动匹配节点还具有独立的动画数据库，从而能够提高动画切换的可控性。服务器400可以是独立的物理服务器，也可以是多个物理服务器构成的服务器集群或者分布式系统，还可以是提供云服务、云数据库、云计算、云函数、云存储、网络服务、云通信、中间件服务、域名服务、安全服务、CDN、以及大数据和人工智能平台等基础云计算服务的云服务器。终端200可以是智能手机、平板电脑、笔记本电脑、台式计算机、智能音箱、智能手表、车载终端等，但并不局限于此。终端以及服务器可以通过有线或无线通信方式进行直接或间接地连接，本申请实施例中不做限制。参见图2，图2是本申请实施例提供的服务器400的结构示意图，图2所示的服务器400包括：至少一个处理器410、存储器450、至少一个网络接口420和用户接口430。服务器400中的各个组件通过总线系统440耦合在一起。可理解，总线系统440用于实现这些组件之间的连接通信。总线系统440除包括数据总线之外，还包括电源总线、控制总线和状态信号总线。但是为了清楚说明起见，在图2中将各种总线都标为总线系统440。处理器410可以是一种集成电路芯片，具有信号的处理能力，例如通用处理器、数字信号处理器，或者其他可编程逻辑器件、分立门或者晶体管逻辑器件、分立硬件组件等，其中，通用处理器可以是微处理器或者任何常规的处理器等。用户接口430包括使得能够呈现媒体内容的一个或多个输出装置431，包括一个或多个扬声器和/或一个或多个视觉显示屏。用户接口430还包括一个或多个输入装置432，包括有助于用户输入的用户接口部件，比如键盘、鼠标、麦克风、触屏显示屏、摄像头、其他输入按钮和控件。存储器450可以是可移除的，不可移除的或其组合。示例性的硬件设备包括固态存储器，硬盘驱动器，光盘驱动器等。存储器450可选地包括在物理位置上远离处理器410的一个或多个存储设备。存储器450包括易失性存储器或非易失性存储器，也可包括易失性和非易失性存储器两者。非易失性存储器可以是只读存储器，易失性存储器可以是随机存取存储器。本申请实施例描述的存储器450旨在包括任意适合类型的存储器。在一些实施例中，存储器450能够存储数据以支持各种操作，这些数据的示例包括程序、模块和数据结构或者其子集或超集，下面示例性说明。操作系统451，包括用于处理各种基本系统服务和执行硬件相关任务的系统程序，例如框架层、核心库层、驱动层等，用于实现各种基础业务以及处理基于硬件的任务；网络通信模块452，用于经由一个或多个网络接口420到达其他计算机设备，示例性的网络接口420包括：蓝牙、无线相容性认证、和通用串行总线等；呈现模块453，用于经由一个或多个与用户接口430相关联的输出装置431使得能够呈现信息；输入处理模块454，用于对一个或多个来自一个或多个输入装置432之一的一个或多个用户输入或互动进行检测以及翻译所检测的输入或互动。在一些实施例中，本申请实施例提供的装置可以采用软件方式实现，图2示出了存储在存储器450中的动画切换装置455，其可以是程序和插件等形式的软件，包括以下软件模块：第一获取模块4551、第一确定模块4552、第二确定模块4553和播放模块4554，这些模块是逻辑上的，因此根据所实现的功能可以进行任意的组合或进一步拆分。将在下文中说明各个模块的功能。在另一些实施例中，本申请实施例提供的装置可以采用硬件方式实现，作为示例，本申请实施例提供的装置可以是采用硬件译码处理器形式的处理器，其被编程以执行本申请实施例提供的动画切换方法，例如，硬件译码处理器形式的处理器可以采用一个或多个应用专用集成电路、DSP、可编程逻辑器件、复杂可编程逻辑器件、现场可编程门阵列或其他电子元件。在一些实施例中，终端或服务器可以通过运行计算机程序来实现本申请实施例提供的动画切换方法。举例来说，计算机程序可以是操作系统中的原生程序或软件模块；可以是本地应用程序，即需要在操作系统中安装才能运行的程序，如游戏APP或者即时通信APP；也可以是小程序，即只需要下载到浏览器环境中就可以运行的程序；还可以是能够嵌入至任意APP中的小程序。总而言之，上述计算机程序可以是任意形式的应用程序、模块或插件。将结合本申请实施例提供的服务器的示例性应用和实施，说明本申请实施例提供的动画切换方法。下面，说明本申请实施例提供的动画切换方法，如前所述，实现本申请实施例的动画切换方法的计算机设备设备可以是服务器，也可以是终端，还可以是两者结合。因此下文中不再重复说明各个步骤的执行主体。参见图3A，图3A是本申请实施例提供的动画切换方法的一种实现流程示意图，将结合图3A示出的步骤进行说明。在步骤101中，获取虚拟角色的当前状态、位置信息和移动信息。在一些实施例中，将虚拟角色所处的播放某种特定动画的动作，例如待机、移动、原地旋转、攻击等称为状态。一般情况下，虚拟角色拥有多个状态，并且可以按照一定的逻辑顺序在状态之间切换。在实现时，预先为虚拟角色设置有多个状态以及状态之间发生转换的转换条件，在达到转换条件时，状态之间可以相互转换，从而构成动画状态机。在状态发生转换时，角色会表现出不同的行为。通过动画状态机可以实现很多的基础动作，例如：跑、跳、上天、游泳等一系列动作。为了丰富诸如走、跑等移动动画的表现，又会将其细化成起步、停步、循环、折返等子动画状态。动画，其实就是角色行为的一种表现方式，和电影或者动漫一样，将一个虚拟对象在一段时间内的动作记录并播放，就是一个完整的动画。游戏中针对每个虚拟角色都需要美术人员单独为其制作很多段动画，导入到游戏引擎中进行混合与切换，最后实现游戏中的效果。比如说，角色在跑步时有跑步的动画，跳起来会有跳跃的动画，战斗会播放战斗的动画，这些都是不同的动画片段。在游戏对局过程中，虚拟角色在各个时刻均对应有一个状态，例如在游戏开始时，虚拟角色的状态为初始的空闲状态，在游戏过程中，虚拟角色的状态可以为走路状态、跑步状态、原地转圈状态等。在游戏对局过程中，玩家可以通过终端的输入设备控制虚拟角色移动，从而改变虚拟角色的位置和速度。虚拟角色的当前状态可以是从虚拟角色的状态信息中获取的，虚拟角色的位置信息和移动信息可以是基于玩家的操作信息确定的。虚拟角色的位置信息包括虚拟角色在虚拟场景中的坐标，虚拟角色的移动信息至少包括虚拟角色的移动速度、移动方向和加速度。在步骤102中，当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态。在一些实施例中，在步骤102之前，需要基于当前状态、位置信息和移动信息确定是否达到状态切换时机，在实现时，首先获取当前状态对应的至少一个可转移状态，并获取各个可转移状态对应的转移条件，然后基于虚拟角色的位置信息和移动信息确定是否满足至少一个转移条件，如果确定满足至少一个转移条件时，确定达到切换时机，并将该转移条件对应的可转移状态确定为目标状态。示例性地，虚拟角色的当前状态为走路状态，走路状态对应的可转移状态包括空闲状态、跑步状态，基于虚拟角色的位置信息和移动信息，当此时虚拟角色的加速度为正值，且速度大于速度阈值时，确定达到跑步状态的转移条件，此时确定达到状态转移时机，并确定目标状态为跑步状态；当此时虚拟角色的加速度为零，且速度小于第二速度阈值时，确定达到空闲状态的转移条件，也确定达到状态转移时机，并确定目标状态为静止状态。在一些实施例中，可以每间隔预设时长确定一次是否达到状态切换时机，只有在确定达到状态切换时机时，才会确定目标状态，并从动画数据库中确定出待播放的目标动画，并播放目标动画，而确定未达到状态切换时机时，从当前状态对应的当前动画数据库中确定待播放的目标动画，不仅能够避免频繁切换，还能够保证播放的目标动画与虚拟对象所处的状态是匹配的，进而提高动画播放的流畅性和自然性。在步骤103中，利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画。在本申请实施例中，每个状态对应有一个独立的运动匹配节点，并且每个状态对应有一个动画数据库，不同状态对应的运动匹配节点在进行动画选择时采用的代价函数的参数是不同的。在一些实施例中，图3A示出的步骤103，可以通过图3B示出的步骤1031至步骤1033实现，以下结合图3B进行说明。在步骤1031中，获取所述目标状态对应的运动匹配节点和所述目标状态对应的目标动画数据库。在一些实施例中，可以基于目标状态的标识获取目标状态对应的运动匹配节点和目标状态对应的目标动画数据库。目标动画数据库中存储有目标状态对应的多个候选动画，在多个候选动画中虚拟角色的状态均为目标状态，但虚拟角色的执行动作或者执行动作的细节会有不同。例如，目标状态为移动状态，那么该目标状态包括的多个候选动画可以是虚拟角色跑步双臂摆动的动画，还可以是虚拟角色手持虚拟道具冲锋的动画，还可以是虚拟角色跑步后跳起的动画。在步骤1032中，获取所述运动匹配节点对应的目标代价函数和当前播放动画的当前姿态特征、当前轨迹特征。在一些实施例中，每个状态对应有独立的运动匹配节点，每个运动匹配节点对应有一个代价函数，利用运动匹配节点对应的代价函数可以确定出两个动画之间的相似度。代价函数的参数可以包括姿态权重和轨迹权重，并且代价函数的姿态权重和轨迹权重是可以根据不同的状态需求进行独立设置的，如果一状态的配置需求信息为动画之间需要姿势连贯自然，那么在设置代价函数的参数时，需要保证姿态权重高于轨迹权重，如果一姿态的配置需求信息为精确匹配运动轨迹，那么在设置代价函数的参数时，需要保证姿态权重小于轨迹权重。如此能够使得在利用代价函数确定两个动画之间的相似度是满足状态需求的，从而提高动画分选能力的精细度。当前播放动画的当前姿态特征和当前轨迹特征是指当前播放动画中虚拟角色的当前姿态特征和当前轨迹特征。虚拟角色的姿态特征和虚拟角色的轨迹特征是可以灵活调整的。例如虚拟角色的姿态特征可以包括虚拟角色的某个或某多个骨骼的位置以及这些骨骼的速度。例如可以包括虚拟角色的足部骨骼的位置及速度、胸部骨骼的位置及速度、臀部骨骼的位置及速度。虚拟角色的轨迹特征包括虚拟角色在过去一段时间的轨迹、未来一段时间的轨迹。在本申请实施例中，假设虚拟角色为两足站立动物，虚拟角色的当前姿态特征包括：虚拟角色的左脚当前位置、右脚当前位置、左脚当前速度、右脚当前速度和臀部当前速度；当前轨迹特征包括：当前时刻虚拟角色的位置和朝向、在过去一秒内三个采样时间点对应的虚拟角色的位置和朝向、在未来一秒的三个采样时间点对应的虚拟角色的位置和朝向。过去一秒内的三个采样时间点可以是当前时刻的前1秒、前0.66秒和前0.33秒对应的采样时刻。未来一秒内的三个采样时间点可以是当前时刻的后0.33秒、后0.66秒和后1秒对应的采样时刻。在步骤1033中，基于所述目标代价函数、所述当前姿态特征和所述当前轨迹特征从所述目标动画数据库中确定待播放的目标动画。姿态特征中包括至少一个姿态特征分量，轨迹特征至少包括至少一个轨迹特征分量。在一些实施例中，图3B示出的步骤1033可以通过图4A示出的步骤331至步骤334实现，以下结合图4A对各个步骤进行说明。在步骤331中，基于所述目标代价函数获取各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重。在目标代价函数中，不同的姿态特征分量可能对应有相同的姿态权重，也可能对应不同的姿态权重。同样地，不同的轨迹特征分量可能对应相同的轨迹权重，也可能对应不同的轨迹权重。在本申请实施例中，不同的姿态特征分量对应的姿态权重以及不同轨迹特征分量的轨迹权重是可以独立设置的，从而能够基于实际的状态需求得到不同的目标代价函数，使得利用目标代价函数进行动画分选时能够更加精细化。当不同的姿态特征分量具有相同的姿态权重时，说明不同的姿态特征分量在对两个动画之间的姿态相似度计算的影响是相同的，当不同的姿态特征分量具有不同的姿态权重时，说明不同的姿态特征分量对两个动画之间的姿态相似度计算的影响是不同的，姿态权重越大，对姿态相似度的影响越大。同样地，当不同的轨迹特征分量具有相同的轨迹权重时，说明不同的轨迹特征分量在对两个动画之间的轨迹相似度计算的影响是相同的，当不同的轨迹特征分量具有不同的轨迹权重时，说明不同的轨迹特征分量对两个动画之间的轨迹相似度计算的影响是不同的，轨迹权重越大，对轨迹相似度的影响越大。示例性地，假设姿态特征有两个姿态特征分量，分别为FP1和FP2，FP1对应的姿态权重为WP1，FP2对应的姿态权重为WP2；轨迹特征有两个轨迹特征分量，分别为FT1和FT2，FT1对应的姿态权重为WT1，FT2对应的姿态权重为WT2，该目标代价函数可以利用公式表示：；其中，为动画a的姿态特征分量FP1和动画b的姿态特征分量FP1的相似度，为动画a的姿态特征分量FP2和动画b的姿态特征分量FP2的相似度，为动画a的轨迹特征分量FT1和动画b的轨迹特征分量FT1的相似度，为动画a的轨迹特征分量FT2和动画b的轨迹特征分量FT2的相似度。在步骤332中，获取所述目标动画数据库中各个第一候选动画的候选姿态特征和候选轨迹特征。在一些实施例中，目标动画数据库中的各个第一候选动画的候选姿态特征和候选轨迹特征可以利用动画导入工具进行特征提取得到的。在步骤333中，基于所述各个姿态特征分量对应的姿态权重、所述各个轨迹特征分量对应的轨迹权重、所述当前姿态特征、所述当前轨迹特征和所述各个第一候选动画的候选姿态特征和候选轨迹特征确定所述当前播放动画和所述各个第一候选动画之间的相似度。在一些实施例中，图4A示出的步骤333，可以通过图4B中的步骤3331至步骤3335实现，以下结合图4B进行说明。在步骤3331中，确定当前姿态特征和各个候选姿态特征中各个姿态特征分量对应的相似度。在一些实施例中，步骤3331在实现时可以确定当前姿态特征和各个候选姿态特征中各个姿态特征分量的汉明距离，还可以确定当前姿态特征和各个候选姿态特征中各个姿态特征分量的欧氏距离，或者确定当前姿态特征和各个候选姿态特征中各个姿态特征分量的余弦相似度等。本申请实施例对相似度的具体算法不做限定。在步骤3332中，确定当前轨迹特征和各个候选轨迹特征中各个轨迹特征分量对应的相似度。与步骤3331类似，步骤3332在实现时可以确定当前轨迹特征和各个候选轨迹特征中各个轨迹特征分量的汉明距离，还可以确定当前轨迹特征和各个候选轨迹特征中各个轨迹特征分量的欧氏距离，或者确定当前轨迹特征和各个候选轨迹特征中各个姿态特征分量的余弦相似度等。在步骤3333中，将所述各个姿态特征分量对应的姿态权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前姿态特征和各个候选姿态特征之间的各个姿态相似度。假设当前姿态特征为Fpc，FTc包括的姿态特征分量为Fp1c和Fp2c，候选姿态特征为Fps，Fps包括的姿态分量为Fp1s和Fp2s，那么当前姿态特征与候选姿态特征之间的姿态相似度为。在步骤3334中，将所述各个轨迹特征分量对应的轨迹权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前轨迹特征和各个候选轨迹特征之间的各个轨迹相似度。假设当前轨迹特征为FTc，FTc包括的轨迹特征分量为FT1c和FT2c，候选轨迹特征为FTs，FTs包括的轨迹分量为FT1s和FT2s，那么当前轨迹特征与候选轨迹特征之间的姿态相似度为。在步骤3335中，将所述各个姿态相似度和对应的各个轨迹相似度的和确定为所述当前播放动画和所述各个第一候选动画之间的相似度。承接上述举例，当前播放动画c与候选动画s的相似度为。在上述步骤3331至步骤3335中，在确定当前播放动画和候选动画之间的相似度时，如果提高姿态权重，则搜索的动画会接近原有姿势，更加连贯自然；如果提高轨迹权重，则搜索的动画会精确的匹配运动距离。姿态权重与轨迹权重是同时起效的，因此能够同时评估姿态和轨迹的相似度，此时动画分选能力比传统的动画分选节点更精细。继续参见图4A，接续上文的步骤333进行说明。在步骤334中，基于所述当前播放动画和所述各个第一候选动画之间的相似度从所述各个第一候选动画中确定待播放的目标动画。在一些实施例中，图4A示出的步骤334可以利用图5A示出的步骤3341至步骤3345实现，以下结合图5A进行说明。在步骤3341中，从所述当前播放动画和所述各个第一候选动画之间的相似度中确定第一最高相似度。在一些实施例中，可以将各个相似度进行排序，从而确定出第一最高相似度。在实现时，可以利用暴力遍历、K维树、球树、轴平行包围盒树等算法对各个相似度进行排序。在本申请实施例中，选择的性能最高的Ball Tree算法对各个相似度进行排序，以确定出第一最高相似度。在步骤3342中，确定第一最高相似度是否大于相似度阈值。其中，当第一最高相似度大于相似度阈值时，进入步骤3343；当第一最高相似度小于或者等于相似度阈值时，进入步骤3344。在一些实施例中，相似度阈值可以是预先设置好的，例如可以是0，还可以是大于0的预设数值；相似度阈值还可以是基于当前状态对应的当前动画数据库中的第二候选动画与当前播放动画的相似度确定的。在实现时，获取所述当前状态对应的当前动画数据库中的各个第二候选动画，并确定所述当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度，从所述当前播放动画和所述各个第二候选动画之间的相似度中确定第二最高相似度，并将所述第二最高相似度确定为相似度阈值。需要说明的是，如果将第二最高相似度确定为相似度阈值，在确定当前播放动画和当前动画数据库中的各个第二候选动画之间的相似度以及确定当前播放动画和目标动画数据库中的各个第一候选动画之间的相似度时采用的代价函数是相同的，例如可以均采用目标状态对应的目标代价函数确定。需要说明的是，由于当前播放动画也是当前动画数据库中的其中一个动画片段，因此在上述确定相似度阈值的过程中，获取到的当前动画数据库中的各个第二候选动画中不包括当前播放动画。在步骤3343中，将所述第一最高相似度对应的第一候选动画确定为待播放的目标动画。由于执行步骤3343的前提是第一最高相似度大于相似度阈值，当相似度阈值为从当前动画数据库中确定出的第二最高相似度时，说明目标状态的目标动画数据库中第一最高相似度对应的动画比当前动画数据库中第二最高相似度对应的动画与当前播放动画更相近，从而能够保证动画过渡平滑自然。在步骤3344中，从所述当前动画数据库中获取第二最高相似度对应的第二候选动画。在一些实施例中，获取目标状态对应的目标代价函数，并利用目标代价函数确定当前播放动画与当前动画数据库中除当前播放动画之外的各个第二候选动画之间的相似度，进而确定出第二最高相似度对应的第二候选动画。在步骤3345中，将所述第二最高相似度对应的第二候选动画确定为待播放的目标动画。在一些实施例中，当第一最高相似度小于或者等于相似度阈值时，说明此时从目标状态的动画数据库中选择出最高相似度的动画比从当前动画数据库中的选择出的最高相似度的动画与当前播放动画的相似度低，因此将当前动画数据库中第二最高相似度对应的第二候选动画确定为待播放的目标动画，从而避免动画切换过于生硬。在步骤104中，输出所述目标动画。当本申请实施例提供的动画切换方法由服务器实现时，输出所述目标动画，是指服务器将目标动画发送至客户端，并由客户端在虚拟场景中播放并呈现包括虚拟角色的目标动画。当本申请实施例提供的动画切换方法由终端实现时，输出所述目标动画是将目标动画通过终端的显示装置进行播放显示。在本申请实施例提供的动画切换方法中，在游戏对局过程中，首先获取虚拟角色的当前状态、位置信息和移动信息，当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态，其中该目标状态与当前状态不同，然后利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画，并输出所述目标动画，在本申请实施例中不同的状态对应有一个独立的运动匹配节点，能够简化运动动画系统的复杂度，使其变得轻量且可复用，每个独立的运动匹配节点还具有独立的动画数据库，从而能够提高动画切换的可控性；并且每个独立的运动匹配节点具有独立配置的运动匹配算法参数，运动匹配算法参数可以包括轨迹特征权重和姿态特征权重，从而可以对每个状态对应的独立的运动匹配节点进行精细化调优，提高动画播放的流畅性和自然性。在一些实施例中，如图5B所示，在步骤101之后，还可以执行图5B示出的步骤201至步骤205，以下结合图5B进行说明。在步骤201中，基于所述当前状态、位置信息和移动信息确定是否达到状态切换时机。在一些实施例中，首先获取当前状态对应的至少一个可转移状态，并获取各个可转移状态对应的转移条件，然后基于虚拟角色的位置信息和移动信息确定是否满足至少一个转移条件，如果确定满足至少一个转移条件时，确定达到转换切换时机，进入步骤102；如果确定不满足任意一个转移条件时，确定未达到状态切换时机，此时进入步骤202。在步骤202中，确定当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度。在一些实施例中，在该步骤中确定当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度时，采用的是当前状态对应的当前代价函数。在实现时，首先获取当前状态对应的运动匹配节点，从而获取到该运动匹配节点对应的当前代价函数，基于当前代价函数获取各个姿态特征分量对应的当前姿态权重和各个轨迹特征分量对应的当前轨迹权重，获取当前动画数据库中各个第二候选动画的候选姿态特征和候选轨迹特征，确定所述当前姿态特征和各个候选姿态特征中各个姿态特征分量对应的相似度以及当前轨迹特征和各个候选轨迹特征中各个轨迹特征分量对应的相似度；将所述各个姿态特征分量对应的姿态权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前姿态特征和各个候选姿态特征之间的各个姿态相似度，对应地，将所述各个轨迹特征分量对应的轨迹权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前轨迹特征和各个候选轨迹特征之间的各个轨迹相似度，最后将所述各个姿态相似度和对应的各个轨迹相似度的和确定为所述当前播放动画和所述各个第二候选动画之间的相似度。在步骤203中，从当前动画数据库中的各个第二候选动画之间的相似度中确定第三最高相似度。在一些实施例中，可以利用预设的排序算法对各个相似度进行排序，例如可以通过冒泡排序法对各个相似度按照从大到小的顺序进行排序，得到第三最高相似度，也可以利用暴力遍历K-D Tree、Ball Tree、AABB Tree等算法对各个相似度进行排序，得到第三最高相似度。在步骤204中，将所述第三最高相似度对应的第二候选动画确定为待播放的目标动画。在一些实施例中，在步骤204之后，执行步骤104，播放该目标动画。由于第三最高相似度对应的第二候选动画是当前动画数据库中与当前播放动画相似度最高的动画片段，因此将第三最高相似度对应的第二候选动画确定为待播放的目标动画，能够保证动画播放的流畅性和自然性。与传统的动画状态机需要利用动画分选器进行动画选择匹配不同，在本申请实施例中，动画状态机中每个状态对应有一个运动匹配节点，每个运动匹配节点利用MotionMatching作为核心算法，可以在运行时利用Mesh分离技术对运动轨迹进行自动补偿，这使得在动画制作过程中，不需要特别精确的运动轨迹匹配，很多动画甚至可以不需要进行修改，只需修改停步动画的相位和轨迹，即可达到良好的动画品质，在降低动画制作成本的同时，能够保证动画质量。每个状态对应有一个动画数据库，并且是将传统状态机对应的全量数据库进行分割得到各个状态对应的动画数据库，因此每个运动匹配节点只在自身对应的动画数据库中进行搜索，从而能够提高动画切换效率。在一些实施例中，当一状态在传统动画状态机中使用的是Blend Space分选器，此时可以获取多个不同预设速度的参考动画，使用预烘焙技术，对至少两个不同预设速度的参考动画进行融合处理，得到多个融合后的动画，将所述参考动画和所述融合后的动画增加至动画数据库。在进行融合处理时，可以将至少两个不同预设速度的参考动画按照不同的权重进行融合处理，从而得到融合后的动画。其中，不同参考动画的权重均为0到1之间的实数，且进行融合处理的多个权重之和为1。示例性地，假设将速度为1米/秒的参考动画和速度为5米/秒的参考动画按照0.5和0.5的权重进行加权处理，得到融合后的动画，其中，融合后的动画虚拟角色的速度为3米/秒。另外，在本申请实施例中，利用动画导入工具针对制作好的动画进行预处理，在进行预处理时，获取各个状态对应的动画数据库中的候选动画，并提取所述各个状态对应的动画数据库中的候选动画的姿态特征和轨迹特征。如此，相比于传统状态机进行预处理时需要提取虚拟角色的腿部相位曲线、提取距离曲线以及旋转曲线等信息，数据处理复杂度和数据处理量均得到了大幅降低，从而提高了动画预处理效率。在本申请实施例中，因为每个状态对应有独立的运动匹配节点，每个运动匹配节点对应的代价函数中的姿态权重和轨迹权重是可以根据不同的状态需求进行独立设置的。在一些实施例中，首先获取预设的代价函数，所述预设的代价函数中各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重为预设值，例如预设值可以为1，可以为0.5等。然后再基于各个状态的配置需求信息，分别设置所述代价函数中各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重，得到所述各个状态对应的代价函数。在一些实施例中，如果一状态的配置需求信息为动画之间需要姿势连贯自然，那么在设置代价函数的参数时，需要保证姿态权重高于轨迹权重，例如姿态权重可以为5，轨迹权重可以为1，如果一姿态的配置需求信息为精确匹配运动轨迹，那么在设置代价函数的参数时，需要保证姿态权重小于轨迹权重。在一些实施例中，在设置代价函数的参数时，还可以参考传统动画状态机中各个状态采用的动画分选器，假设开始状态使用的为距离分选器，那么在设置开始状态对应的代价函数时，需要保证轨迹权重大于姿态权重；假设停止状态使用的是姿势分选器和距离分选器，那么在设置停止状态对应的代价函数时，轨迹权重和姿态权重是大小相当的；假设移动状态使用的是姿势分选器，那么设置移动姿态对应的代价函数时，需要保证姿态权重大于轨迹权重。下面，将说明本申请实施例在一个实际的应用场景中的示例性应用。本申请实施例提供的动画切换方法可以应用在游戏引擎中，用以实现运动动画系统。以虚幻引擎为例，利用本申请实施例提供的动画切换方法在游戏引擎的“动画蓝图“中搭建一个基础的状态切换逻辑，以及一个对应的状态机系统。运动动画系统在运行时，首先进行状态切换，再由Motion Matching匹配合适的运动动画。为了更好地理解本申请实施例提供的动画切换方法，首先对相关技术中传统动画状态机的动画系统进行说明。图6为相关技术中传统动画状态机的动画系统结构示意图，如图6所示，在该结构示意图中包括以下六个状态：原地旋转601、空闲状态602、开始状态603、折返状态604、运动状态605和停止状态606，如图6所示，每个状态机之间存在互相转移的关系，单个状态机要根据自己的特点选择一个或者多个动画分选器来进行动画的选择和播放。其中，Idle Turn状态使用的为定向匹配动画分选器、Idle状态使用的是固定动画、开始Start状态使用的为距离匹配动画分选器、Pivot状态使用的是距离匹配动画分选器、Move状态使用的是姿态匹配动画分选器、Stop状态使用的是姿态匹配动画分选器和距离匹配动画分选器。图7为本申请实施例提供的动画系统结构示意图，如图7所示，该动画系统中同样包括六个状态，分别原地旋转状态701、空闲状态702、开始状态703、折返状态704、运动状态705和停止状态706，但是与图6所示的动画系统不同的是，在本申请实施例中提供的动画系统中，状态机中的每个动画分选器替换成运动匹配，由各自MotionMatching算法来进行动画的选择和播放。实际上，也可以只对部分的状态机的动画分选器进行替换，以达到更强的控制能力。因为每个状态机拥有独立的运动匹配节点，因此每个状态机中运动匹配节点的算法参数是可以独立配置的，从而能够通过针对每个状态机专门调整参数来达到精修算法的效果，并且每个运动匹配节点具备独立的动画数据库，从而具备更强的动画切换的可控性。在本申请实施例提供的动画系统中，每个状态机中的运动匹配节点的参数可以包括姿势权重和轨迹权重，每个状态机的姿势权重和轨迹权重是独立配置的。并且在本申请实施例中，定义了公式所示的代价函数作为相似度评估函数：；其中，为姿势权重，为轨迹权重，为姿态特征Pose1和Pose2的相似度，为轨迹特征Trajectory1和Trajectory2的相似度。基于公式所示的代价函数从运动匹配节点对应的数据库中确定出和当前的姿态特征和运动轨迹特征最为相似的动画帧。其中Cost函数的姿势相似度的权重由WPose决定，轨迹相似度的权重由WTrajectory决定。提高WPose，则搜索的动画会接近原有姿势，更加连贯自然，从而能够替代姿势匹配动画分选器的作用；提高WTrajectory，则搜索的动画会精确的匹配运动距离，从而能够替代距离匹配动画分选器。在运动轨迹特征中添加旋转特征并增加独立的权重，则可以替代Orientation Matching动画分选器。因为WPose和WTrajectory是同时起效的，因此利用代价函数能够同时评估姿势和轨迹的相似度，因此它的动画分选能力比传统的动画分选节点更精细：例如可以避免因为距离匹配只考虑距离作为单一的匹配因素，导致动画姿势的跳变问题。对于Blend Space可以使用预烘焙技术，预先将各个速度的动画独立的提取成不同的动画片段，作为运动匹配节点的候选动画集合，即可用运动匹配节点替换Blend Space动画分选器。图8为本申请实施例提供的动画生产和动画蓝图的实现流程示意图，如图8所示，该流程包括：步骤801，利用动画生产工具修正动画。在修正动画时，需要修改固定姿势和移动轨迹。在一些实施例中，在修正动画时，仅需要修改固定姿势。如果想要切换时更加流畅的停步动画，需要额外制作不同相位的停步动画。在修改轨迹时并不要求精确匹配，只需要满足预设的容忍误差即可。在步骤802中，利用动画导入工具对动画进行预处理。在一些实施例中，在预处理过程中需要提取动画的姿态特征和轨迹特征。其中姿态特征包括：虚拟角色的左脚当前位置、右脚当前位置、左脚当前速度、右脚当前速度和臀部当前速度；轨迹特征包括：当前时刻虚拟角色的位置和朝向、在过去一秒内三个采样时间点对应的虚拟角色的位置和朝向、在未来一秒的三个采样时间点对应的虚拟角色的位置和朝向。在步骤803中，通过状态切换逻辑选择和播放动画。状态切换逻辑作为上层的控制系统，会根据角色当前的状态、速度、加速度、朝向等信息，决定是否从老状态转移到新状态，或者保持老状态不变。状态切换逻辑是动画系统能够在状态间进行转移的基础。对于下层的状态机动画系统，若状态进行转移，Motion Matching也必须重新根据新状态对应的匹配算法参数，从新状态的候选动画列表中选择动画进行播放。若状态没有转移，每隔固定时间根据角色当前的姿势和运动轨迹，从当前状态的候选动画列表中重新选择动画进行播放。在本申请实施例中，各个状态对应的动画数据库是对全量动画数据库进行分割得到的，每个运动匹配节点只在部分的动画数据中进行搜索。在一些实施例中，也可以让运动匹配节点仍保持在全量的动画数据中进行搜索，但是针对不同状态的动画数据的近似度进行加权，仅当加权后的动画近似度更高时才进行切换，使得状态切换时不至于太生硬。在本申请实施例中，利用基于Motion Matching实现的运动状态机原型系统，并使其在走路、跑步和持枪三种状态下进行了测试。经过评估，只选用状态机规模的动画，比传统Motion Matching资源更少，动画数量从614个降低到444个，减少27%，动画长度从37分钟降低到16分钟，减少56%；相比传统状态机逻辑更少，在动画品质不降低的基础上，蓝图逻辑节点从371个降低到67个，减少82%，从而实现逻辑简化；另外因为资源量减少，其性能相比传统Motion Matching性能更高，走路耗时减少86%，跑步耗时减少45%，持枪耗时减少15%，并且相比传统状态机质量更高，避免Distance Matching改变动画节奏，造成的动画质量下降问题，动画质量得到有效提升。除了引擎中的动画运行时系统方面的收益，本申请实施例提供的数据处理方法，因为采用运动匹配技术也使得DCC侧的动画修改流程得到简化，只需修改停步动画的相位和轨迹，即可达到良好的动画品质，极大降低了动画师的人工成本。下面继续说明本申请实施例提供的动画切换装置455的实施为软件模块的示例性结构，在一些实施例中，如图2所示，存储在存储器450的动画切换装置455中的软件模块可以包括：第一获取模块4551，用于获取虚拟角色的当前状态、位置信息和移动信息；第一确定模块4552，用于当基于所述当前状态、位置信息和移动信息确定达到状态切换时机时，确定所述虚拟角色的目标状态；第二确定模块4553，用于利用所述目标状态对应的运动匹配节点从动画数据库中确定出待播放的目标动画；播放模块4554，用于输出所述目标动画。在一些实施例中，该第二确定模块4553，还用于：获取所述目标状态对应的运动匹配节点和所述目标状态对应的目标动画数据库；获取所述运动匹配节点对应的目标代价函数和当前播放动画的当前姿态特征、当前轨迹特征；基于所述目标代价函数、所述当前姿态特征和所述当前轨迹特征从所述目标动画数据库中确定待播放的目标动画。在一些实施例中，姿态特征中包括至少一个姿态特征分量，轨迹特征至少包括至少一个轨迹特征分量，该第二确定模块4553，还用于：基于所述目标代价函数获取各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重；获取所述目标动画数据库中各个第一候选动画的候选姿态特征和候选轨迹特征；基于所述各个姿态特征分量对应的姿态权重、所述各个轨迹特征分量对应的轨迹权重、所述当前姿态特征、所述当前轨迹特征，和所述各个第一候选动画的候选姿态特征和候选轨迹特征，确定所述当前播放动画和所述各个第一候选动画之间的相似度；基于所述当前播放动画和所述各个第一候选动画之间的相似度从所述各个第一候选动画中确定待播放的目标动画。在一些实施例中，该第二确定模块4553，还用于：确定所述当前姿态特征和各个候选姿态特征中各个姿态特征分量对应的相似度；确定所述当前轨迹特征和各个候选轨迹特征中各个轨迹特征分量对应的相似度；将所述各个姿态特征分量对应的姿态权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前姿态特征和各个候选姿态特征之间的各个姿态相似度；将所述各个轨迹特征分量对应的轨迹权重和所述各个姿态特征分量对应的相似度进行加权求和，得到所述当前轨迹特征和各个候选轨迹特征之间的各个轨迹相似度；将所述各个姿态相似度和对应的各个轨迹相似度的和确定为所述当前播放动画和所述各个第一候选动画之间的相似度。在一些实施例中，该第二确定模块4553，还用于：从所述当前播放动画和所述各个第一候选动画之间的相似度中确定第一最高相似度；当所述第一最高相似度大于相似度阈值时，将所述第一最高相似度对应的第一候选动画确定为待播放的目标动画。在一些实施例中，该装置还包括：第二获取模块，用于获取所述当前状态对应的当前动画数据库中的各个第二候选动画；第三确定模块，用于确定所述当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度；第四确定模块，用于从所述当前播放动画和所述各个第二候选动画之间的相似度中确定第二最高相似度；第五确定模块，用于将所述第二最高相似度确定为相似度阈值。在一些实施例中，该装置还包括：第三获取模块，用于当所述最高相似度小于或者等于所述相似度阈值时，从所述当前动画数据库中获取所述第二最高相似度对应的第二候选动画；第六确定模块，用于将所述第二最高相似度对应的第二候选动画确定为待播放的目标动画。在一些实施例中，该装置还包括：第七确定模块，用于当基于所述当前状态、位置信息和移动信息确定未达到状态切换时机时，确定所述当前播放动画和所述当前动画数据库中的各个第二候选动画之间的相似度；第八确定模块，用于从所述当前动画数据库中的各个第二候选动画之间的相似度中确定第三最高相似度；第九确定模块，用于将所述第三最高相似度对应的第二候选动画确定为待播放的目标动画。在一些实施例中，该装置还包括：第四获取模块，用于获取多个不同预设速度的参考动画；融合模块，用于对至少两个不同预设速度的参考动画进行融合处理，得到多个融合后的动画；数据添加模块，用于将所述参考动画和所述融合后的动画增加至动画数据库。在一些实施例中，该装置还包括：第五获取模块，用于获取各个状态对应的动画数据库中的候选动画；特征提取模块，用于提取所述各个状态对应的动画数据库中的候选动画的姿态特征和轨迹特征。在一些实施例中，该装置还包括：第六获取模块，用于获取预设的代价函数，所述预设的代价函数中各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重为预设值；权重设置模块，用于基于各个状态的配置需求信息，分别设置所述代价函数中各个姿态特征分量对应的姿态权重和各个轨迹特征分量对应的轨迹权重，得到所述各个状态对应的代价函数。这里需要指出的是：以上动画切换装置实施例项的描述，与上述方法描述是类似的，具有同方法实施例相同的有益效果。对于本申请动画切换装置实施例中未披露的技术细节，本领域的技术人员请参照本申请方法实施例的描述而理解。本申请实施例提供了一种计算机程序产品，该计算机程序产品包括计算机程序或计算机可执行指令，该计算机程序或计算机可执行指令存储在计算机可读存储介质中。计算机设备的处理器从计算机可读存储介质读取该计算机可执行指令，处理器执行该计算机可执行指令，使得该计算机设备执行本申请实施例上述的动画切换方法。本申请实施例提供一种存储有计算机可执行指令的计算机可读存储介质，其中存储有计算机可执行指令，当计算机可执行指令被处理器执行时，将引起处理器执行本申请实施例提供的动画切换方法，例如，如图3A、图5B示出的动画切换方法。在一些实施例中，计算机可读存储介质可以是FRAM、ROM、PROM、EPROM、EEPROM、闪存、磁表面存储器、光盘、或CD-ROM等存储器；也可以是包括上述存储器之一或任意组合的各种设备。在一些实施例中，计算机可执行指令可以采用程序、软件、软件模块、脚本或代码的形式，按任意形式的编程语言来编写，并且其可按任意形式部署，包括被部署为独立的程序或者被部署为模块、组件、子例程或者适合在计算环境中使用的其它单元。作为示例，计算机可执行指令可以但不一定对应于文件系统中的文件，可以可被存储在保存其它程序或数据的文件的一部分，例如，存储在超文本标记语言文档中的一个或多个脚本中，存储在专用于所讨论的程序的单个文件中，或者，存储在多个协同文件中。作为示例，可执行指令可被部署为在一个计算机设备上执行，或者在位于一个地点的多个计算机设备上执行，又或者，在分布在多个地点且通过通信网络互连的多个计算机设备上执行。以上所述，仅为本申请的实施例而已，并非用于限定本申请的保护范围。凡在本申请的精神和范围之内所作的任何修改、等同替换和改进等，均包含在本申请的保护范围之内。
