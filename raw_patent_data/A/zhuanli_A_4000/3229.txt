标题title
基于多线程的头发模型处理方法、装置、设备及介质
摘要abst
本公开涉及一种基于多线程的头发模型处理方法，其特征在于，包括：获取目标对象的头发图像和地理位置信息，将所述目标对象的头发图像转化为头发模型；对所述头发模型设置多个柔性节点；设置冲击模型，所述冲击模型包括多个冲击节点；采用多线程，检测所述冲击节点对所述柔性节点的冲击效果，根据所述冲击效果确定所述柔性节点在画面帧中的坐标位置；进行画面帧显示卡顿判断：如果画面帧显示不卡顿，进行逐帧更新渲染；否则，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染。通过采用上述方案，能够高效进行动画渲染，节约渲染时间成本，并且动画角色的发型能与用户气质更加匹配。
权利要求书clms
1.一种基于多线程的头发模型处理方法，其特征在于，包括：获取目标对象的头发图像和地理位置信息，通过机器学习算法将所述目标对象的头发图像转化为头发模型；对所述头发模型设置多个柔性节点，并进行初始属性设置，对柔性节点按照深度排序；根据所述地理位置信息设置冲击模型，所述冲击模型包括多个冲击节点；采用多线程，检测所述冲击节点对所述柔性节点的冲击效果，根据所述冲击效果确定所述柔性节点在画面帧中的坐标位置；进行画面帧显示卡顿判断：如果画面帧显示不卡顿，采用多线程对画面帧序列的画面帧进行逐帧更新渲染；如果画面帧显示卡顿，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染，其中N为大于或等于2的整数。2.根据权利要求1所述的基于多线程的头发模型处理方法，其特征在于：所述地理位置信息的获取包括获取用户的实时地理位置或者用户设定的特定地理位置，获取所述地理位置信息对应的天气模型，根据天气模型为头发模型设置对应的元素。3.根据权利要求1所述的基于多线程的头发模型处理方法，其特征在于，包括：获取目标对象的地理位置信息，获取地理位置信息对应的风场系统，根据风场系统设置对应的冲击模型。4.根据权利要求3所述的基于多线程的头发模型处理方法，其特征在于：根据风场系统中的风力力度设置冲击模型中冲击节点的冲击力力度。5.根据权利要求1所述的基于多线程的头发模型处理方法，其特征在于：当多线程中的主线程和子线程访问数据冲突时，子线程使用前一帧动画数据进行更新渲染，主线程使用当前帧数据进行更新渲染。6.根据权利要求1所述的基于多线程的头发模型处理方法，其特征在于：所述画面帧显示卡顿判断采用音频质量检测方法，针对播放音频设置采样周期，每个采样周期内包括多个音频帧；获取预设时间内的多个采样周期内的音频帧，当出现连续M帧相似度超过预设阈值的音频帧时，判断为音频卡顿，其中M为大于或等于2的整数，根据音频卡顿确定画面帧显示卡顿。7.根据权利要求6所述的基于多线程的头发模型处理方法，其特征在于，所述方法包括音画同步处理：对画面帧和声音帧的播放时间点进行时间差比较，当时间差小于第一阈值时，不做处理；当时间差大于第一阈值且小于第二阈值时，通过改变画面帧的播放速度缩小时间差；当时间差大于第二阈值时，获取画面帧和声音帧的播放时间，通过基准参考时钟进行时间同步对齐。8.一种基于多线程的头发模型处理装置，其特征在于，包括：获取模块，获取目标对象的头发图像和地理位置信息，通过机器学习算法将所述目标对象的头发图像转化为头发模型；节点处理模块，对所述头发模型设置多个柔性节点，并进行初始属性设置，对柔性节点按照深度排序；冲击模块，根据所述地理位置信息设置冲击模型，所述冲击模型包括多个冲击节点；多线程处理模块，采用多线程，检测所述冲击节点对所述柔性节点的冲击效果，根据所述冲击效果确定所述柔性节点在画面帧中的坐标位置；卡顿判断模块，进行画面帧显示卡顿判断：如果画面帧显示不卡顿，采用多线程对画面帧序列的画面帧进行逐帧更新渲染；如果画面帧显示卡顿，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染,其中N为大于或等于2的整数。9.一种电子设备，包括：处理器；以及存储程序的存储器，其中，所述程序包括指令，所述指令在由所述处理器执行时使所述处理器执行根据权利要求1-7中任一项所述的方法。10.一种存储有计算机指令的非瞬时计算机可读存储介质，其中，所述计算机可读存储介质中存储有指令或计算机程序，当所述指令或计算机程序在设备上运行时，使得所述设备执行权利要求1-7任一项所述的方法。
说明书desc
技术领域本公开涉及互联网技术领域，尤其涉及一种基于多线程的头发模型处理方法、装置、设备及介质。背景技术随着网络游戏行业的快速发展，网络游戏受到越来越多游戏用户的喜爱，游戏用户对于动画角色的显示要求也越来越高。动画角色在网络游戏中扮演着极其重要的角色，但是现有技术中，大量动画渲染的计算密集性高，会耗费庞大的计算能力，导致系统运算非常耗时。另外，用户对于游戏角色的个性化定制要求越来越高，通过不同的头发形象，可以在游戏世界中尽情展现自己的风采，以此来提高游戏角色参与的沉浸感。但是现有技术中，游戏角色的发型与用户气质的匹配度有待提升。因此，本领域亟需一种能够高效进行动画渲染，节约渲染时间成本，并且动画角色的发型能与用户气质更加匹配的方法。发明内容本公开提供一种基于多线程的头发模型处理方法、装置、设备及介质，用以解决现有技术中动画渲染效率低，角色发型设计无法体现用户气质的问题。第一方面，本公开提供一种基于多线程的头发模型处理方法，其特征在于，包括：获取目标对象的头发图像和地理位置信息，通过机器学习算法将所述目标对象的头发图像转化为头发模型；对所述头发模型设置多个柔性节点，并进行初始属性设置，对柔性节点按照深度排序；根据所述地理位置信息设置冲击模型，所述冲击模型包括多个冲击节点；采用多线程，检测所述冲击节点对所述柔性节点的冲击效果，根据所述冲击效果确定所述柔性节点在画面帧中的坐标位置；进行画面帧显示卡顿判断：如果画面帧显示不卡顿，采用多线程对画面帧序列的画面帧进行逐帧更新渲染；如果画面帧显示卡顿，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染,其中N为大于或等于2的整数。根据本公开提供的所述的基于多线程的头发模型处理方法，其特征在于：所述地理位置信息的获取包括获取用户的实时地理位置或者用户设定的特定地理位置，获取所述地理位置信息对应的天气模型，根据天气模型为头发模型设置对应的元素。根据本公开提供的所述的基于多线程的头发模型处理方法，其特征在于，包括：获取目标对象的地理位置信息，获取地理位置信息对应的风场系统，根据风场系统设置对应的冲击模型。根据本公开提供的所述的基于多线程的头发模型处理方法，其特征在于：根据风场系统中的风力力度设置冲击模型中冲击节点的冲击力力度。根据本公开提供的所述的基于多线程的头发模型处理方法，其特征在于：当多线程中的主线程和子线程访问数据冲突时，子线程使用前一帧动画数据进行更新渲染，主线程使用当前帧数据进行更新渲染。根据本公开提供的所述的基于多线程的头发模型处理方法，其特征在于：所述画面帧显示卡顿判断采用音频质量检测方法，针对播放音频设置采样周期，每个采样周期内包括多个音频帧；获取预设时间内的多个采样周期内的音频帧，当出现连续M帧相似度超过预设阈值的音频帧时，判断为音频卡顿，其中M为大于或等于2的整数，根据音频卡顿确定画面帧显示卡顿。根据本公开提供的所述的基于多线程的头发模型处理方法，其特征在于，所述方法包括音画同步处理：对播放画面帧和声音帧的时间点进行时间差比较，当时间差小于第一阈值时，不做处理；当时间差大于第一阈值且小于第二阈值时，通过改变画面帧的播放速度缩小时间差；当时间差大于第二阈值时，获取画面帧和声音帧的播放时间，通过基准参考时钟进行时间同步对齐。第二方面，本公开还提供一种基于多线程的头发模型处理装置，其特征在于，包括：获取模块，获取目标对象的头发图像和地理位置信息，通过机器学习算法将所述目标对象的头发图像转化为头发模型；节点处理模块，对所述头发模型设置多个柔性节点，并进行初始属性设置，对柔性节点按照深度排序；冲击模块，根据所述地理位置信息设置冲击模型，所述冲击模型包括多个冲击节点；多线程处理模块，采用多线程，检测所述冲击节点对所述柔性节点的冲击效果，根据所述冲击效果确定所述柔性节点在画面帧中的坐标位置；卡顿判断模块，进行画面帧显示卡顿判断：如果画面帧显示不卡顿，采用多线程对画面帧序列的画面帧进行逐帧更新渲染；如果画面帧显示卡顿，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染,其中N为大于或等于2的整数。与现有技术相比，本公开提供的一种基于多线程的头发模型处理方法，包括：获取目标对象的头发图像和地理位置信息，将所述目标对象的头发图像转化为头发模型；对所述头发模型设置多个柔性节点；设置冲击模型，所述冲击模型包括多个冲击节点；采用多线程，检测所述冲击节点对所述柔性节点的冲击效果，根据所述冲击效果确定所述柔性节点在画面帧中的坐标位置；进行画面帧显示卡顿判断：如果画面帧显示不卡顿，进行逐帧更新渲染；否则，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染,其中N为大于或等于2的整数。通过采用上述方案，能够高效进行动画渲染，节约渲染时间成本，并且动画角色的发型能与用户气质更加匹配。附图说明为了更清楚地说明本公开中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本公开的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1是本公开提供的基于多线程的头发模型处理方法的流程图；图2是本公开提供的头发柔性节点示意图；图3为本公开提供的基于多线程的头发模型处理装置示意图；图4为本公开提供的电子设备的框架结构图。具体实施方式下面将参照附图更详细地描述本公开的实施例。虽然附图中显示了本公开的某些实施例，然而应当理解的是，本公开可以通过各种形式来实现，而且不应该被解释为限于这里阐述的实施例，相反提供这些实施例是为了更加透彻和完整地理解本公开。应当理解的是，本公开的附图及实施例仅用于示例性作用，并非用于限制本公开的保护范围。应当理解，本公开的方法实施方式中记载的各个步骤可以按照不同的顺序执行，和/或并行执行。此外，方法实施方式可以包括附加的步骤和/或省略执行示出的步骤。本公开的范围在此方面不受限制。本文使用的术语“包括”及其变形是开放性包括，即“包括但不限于”。术语“基于”是“至少部分地基于”。术语“一个实施例”表示“至少一个实施例”；术语“另一实施例”表示“至少一个另外的实施例”；术语“一些实施例”表示“至少一些实施例”。其他术语的相关定义将在下文描述中给出。需要注意，本公开中提及的“第一”、“第二”等概念仅用于对不同的装置、模块或单元进行区分，并非用于限定这些装置、模块或单元所执行的功能的顺序或者相互依存关系。需要注意，本公开中提及的“一个”、“多个”的修饰是示意性而非限制性的，本领域技术人员应当理解，除非在上下文另有明确指出，否则应该理解为“一个或多个”。本公开实施方式中的多个装置之间所交互的消息或者信息的名称仅用于说明性的目的，而并不是用于对这些消息或信息的范围进行限制。游戏动画角色的画面渲染属于实时3D交互应用，对性能有极高的要求，在线游戏应用往往追求极致的性能，从而达到更高的画面真实性。采用多线程技术是一种有效提升系统CPU和GPU联合渲染执行效能的方法，通过使用多线程渲染方法，可以促进CPU和GPU都高效并行运行，从而提升CPU和GPU性能，获得更加流畅和逼真的渲染画质。多线程渲染是指主线程生成一系列引擎自定义的渲染命令，并写入渲染队列，渲染线程读取渲染队列里面的渲染命令并执行。多线程允许不同的任务同时执行，渲染任务被分发到不同的线程进行并行渲染。以下参照附图1描述本公开的一个实施例的一种基于多线程的头发模型处理方法，包括：S1：获取目标对象的头发图像和地理位置信息，通过机器学习算法将所述目标对象的头发图像转化为头发模型；网络游戏中，用户对于游戏角色的个性化定制要求越来越高，在游戏中进行头发动画设置是一个重要的任务，通过不同的头发形象，可以突出用户的个人特色，创造出更加符合用户个人形象的游戏人物，以此来提高游戏角色参与的沉浸感；通过采集用户的头发图像和地理位置信息可以使得游戏角色的设计更加个性化，满足用户多样化的形象需求，给游戏玩家多种选择和不同体验。在本实施例中，终端的摄像头可以多维度采集用户当前的头发图像，所述终端包括电脑、手机、平板、可穿戴设备等，例如利用摄像头采集用户前后左右四个方向的头发图像，从而获得更为全面、真实的用户头发模型。所述地理位置信息的获取包括获取用户的实时地理位置或者用户设定的特定地理位置，获取所述地理位置信息对应的天气模型，根据天气模型为头发模型设置对应的元素。在本实施例中，可以采用GPS、LBS等方法获取用户的实时地理位置，这样地理位置的选择与用户真实环境更加贴近，用户的沉浸感更强；或者用户在终端中任意选择感兴趣的地理位置。例如，位于北京的用户可以通过GPS定位上传自己的实时位置为北京，也可以在地址列表中选择北极等其他感兴趣位置，通过地理位置的多样化设置，用户将会体会到更为多样的动态效果，体会到更丰富的可玩性与趣味性。获取用户地理位置后，渲染平台通过网络查询对应的天气模型，天气往往包括晴朗、下雨、下雪、刮风等类型，针对不同天气类型为用户的头发添加不同的元素，所述元素为画面动效，包括但不限于，天气晴朗时，增加闪光动效；天气下雨时，为头发增加雨珠动效；天气下雪时，为头发增加雪花动效。采样该方案，游戏角色的发型与天气息息相关，提高显示的丰富度。S2：对所述头发模型设置多个柔性节点，并进行初始属性设置，对柔性节点按照深度排序；图2为头发模型的柔性节点，图中示例性的展示出两根头发，根据头发长度设置适量的多个柔性节点。柔性节点，是指在进行模型制作时设置的具有深度的树状层次结构节点。骨骼动画是目前游戏中最常用的人物动画技术。一段段骨骼之间相互连接，连接处称之为节点。骨骼可以绕着节点进行转动。节点之间通过线段相连，可以形成一个树状结构。对柔性节点按照深度排序是指，靠近头皮的节点深度为S1，下一个临近节点的深度为S2，依次排序，发梢的节点深度为Sn，n为一根头发上的节点个数。S3：根据所述地理位置信息设置冲击模型，所述冲击模型包括多个冲击节点；冲击节点，是指能与柔性节点进行冲击，能改变柔性节点坐标位置的节点，具有力度、方向等属性。可选地，在本实施例中，获取目标对象的地理位置信息，获取地理位置信息对应的实时风场系统，根据风场系统设置对应的冲击模型。在线游戏中，风对于游戏角色的发型有重要影响。通过头发配合风场的力度和节奏进行摆动，动画角色的显示更具有真实性。可选地，根据风场系统中的风力力度设置冲击模型中冲击节点的冲击力力度。例如，确定用户的实时地理位置为北京后，北京的实时风场系统为微风，则对应的用户角色的发型为微风吹动；如果用户选择的感兴趣地理位置为北极，北极的实时风场系统为狂风，则对应的用户角色的发型为狂风吹动。为了让游戏角色产生合理的运动，游戏中的风场系统能够模拟现实世界中的自然风拂动，吹动柔性节点带来更自然的动态视觉效果，用户的头发可以自然的随风摆动，明显的提升了画面真实感。S4：采用多线程，检测所述冲击节点对所述柔性节点的冲击效果，根据所述冲击效果确定所述柔性节点在画面帧中的坐标位置；在本实施例中，当多线程中的主线程和子线程访问数据冲突时，子线程使用前一帧动画数据进行更新渲染，主线程使用当前帧数据进行更新渲染。使用多线程同步，要求在一段时间内只有一个线程访问一个数据，同一数据不允许被多个线程同时访问，以此来保证数据的正确性。多线程渲染时，主线程可能会与子线程同时访问同一动画数据，由此会产生数据冲突。在游戏角色进行渲染时，相邻的画面帧中角色位置数据是非常接近的。因此为提高多线程的渲染效率，子线程可以使用前一画面帧产生的动画数据，而不必使用当前画面帧的最新数据，而主线程使用当前画面帧数据进行更新渲染。S5：进行画面帧显示卡顿判断：如果画面帧显示不卡顿，采用多线程对画面帧序列的画面帧进行逐帧更新渲染；如果画面帧显示卡顿，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染,其中N为大于或等于2的整数。游戏画面卡顿是很多玩家的烦恼，会影响游戏的体验和观看。在本实施例中，游戏动画渲染时，相邻很小时间间隔中的临近画面帧的动画形象及其位置数据一般具有高度相似性，因此为了提高多线程运算的效率，如果画面帧显示不卡顿，为满足用户对高分辨率显示的需求，用多线程对画面帧序列的画面帧进行逐帧更新渲染；如果画面帧显示卡顿，为了流畅显示画面，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染，能够有效减少多线程计算的数据量，提升渲染效率。多线程并行同步计算时，往往会因为线程同步异常导致画面和声音卡顿，可选地，所述画面帧显示卡顿判断采用音频质量检测方法，针对播放音频设置采样周期，每个采样周期内包括多个音频帧；获取预设时间内的多个采样周期内的音频帧，当出现连续M帧相似度超过预设阈值的音频帧时，其中M为大于或等于2的整数，判断为音频卡顿，根据音频卡顿确定画面帧显示卡顿。可选地，所述方法进一步包括音画同步处理：音画同步是指正在渲染的每一帧画面和正在播放的每一段声音都是严格对应起来的，人耳和肉眼难以分辨出来。但是，多线程渲染容易导致音画不同步。对播放画面帧和声音帧的时间点进行时间差比较，当时间差小于第一阈值时，不做处理；当时间差大于第一阈值且小于第二阈值时，通过改变画面帧的播放速度缩小时间差；当时间差大于第二阈值时，获取画面帧和声音帧的播放时间，通过基准参考时钟进行时间同步对齐。与现有技术相比，本公开的一种基于多线程的头发模型处理方法，能够高效进行动画渲染，节约渲染时间成本，并且动画角色的发型能与用户气质更加匹配。本公开实施例可以根据上述方法示例进行功能单元的划分，例如，可以对应各个功能划分各个功能模块，也可以将两个或两个以上的功能集成在一个处理模块中。上述集成的模块既可以采用硬件的形式实现，也可以采用软件功能模块的形式实现。需要说明的是，本公开实施例中对模块的划分是示意性的，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式。在采用对应各个功能划分各个功能模块的情况下，本公开示例性实施例提供一种基于多线程的头发模型处理装置，该基于多线程的头发模型处理装置可以位于用户终端。图3为本公开提供的基于多线程的头发模型处理装置示意图，如图3所示，该基于多线程的头发模型处理装置包括：获取模块，获取目标对象的头发图像和地理位置信息，通过机器学习算法将所述目标对象的头发图像转化为头发模型；节点处理模块，对所述头发模型设置多个柔性节点，并进行初始属性设置，对柔性节点按照深度排序；冲击模块，根据所述地理位置信息设置冲击模型，所述冲击模型包括多个冲击节点；多线程处理模块，采用多线程，检测所述冲击节点对所述柔性节点的冲击效果，根据所述冲击效果确定所述柔性节点在画面帧中的坐标位置；卡顿判断模块，进行画面帧显示卡顿判断：如果画面帧显示不卡顿，采用多线程对画面帧序列的画面帧进行逐帧更新渲染；如果画面帧显示卡顿，在画面帧序列中选择间隔N帧的画面帧进行多线程更新渲染,其中N为大于或等于2的整数。图4为本公开提供的电子设备的框架结构图。如图4所示，该基于多线程的头发模型处理装置包括一个或两个以上处理器410和通信接口420。通信接口420可以支持基于多线程的头发模型处理装置服务器执行上述基于多线程的头发模型处理方法中的处理步骤，处理器410可以支持服务器执行上述基于多线程的头发模型处理装置处理方法中的数据处理步骤。可选的，如图4所示，该装置还包括存储器430，存储器430可以包括只读存储器和随机存取存储器，并向处理器提供操作指令和数据。存储器的一部分还可以包括非易失性随机存取存储器。在一些实施方式中，如图4所示，处理器410通过调用存储器存储的操作指令。存储器430可以包括只读存储器和随机存取存储器，并向处理器410提供指令和数据。存储器430的一部分还可以包括NVRAM。例如应用中存储器、通信接口以及存储器通过总线系统耦合在一起，其中总线系统除包括数据总线之外，还可以包括电源总线、控制总线和状态信号总线等。但是为了清楚说明起见，在图4中将各种总线都标为通信总线440。上述本公开实施例揭示的方法可以应用于处理器中，或者由处理器实现。处理器可能是一种集成电路芯片，具有信号的处理能力。在实现过程中，上述方法的各步骤可以通过处理器中的硬件的集成逻辑电路或者软件形式的指令完成。上述的处理器可以是通用处理器、数字信号处理器、ASIC、现成可编程门阵列。在一些实施方式中，如图4所示，处理器410通过调用存储器存储的操作指令。存储器430可以包括只读存储器和随机存取存储器，并向处理器410提供指令和数据。存储器430的一部分还可以包括NVRAM。例如应用中存储器、通信接口以及存储器通过总线系统耦合在一起，其中总线系统除包括数据总线之外，还可以包括电源总线、控制总线和状态信号总线等。但是为了清楚说明起见，在图4中将各种总线都标为通信总线440。上述本公开实施例揭示的方法可以应用于处理器中，或者由处理器实现。处理器可能是一种集成电路芯片，具有信号的处理能力。在实现过程中，上述方法的各步骤可以通过处理器中的硬件的集成逻辑电路或者软件形式的指令完成。上述的处理器可以是通用处理器、数字信号处理器、ASIC、现成可编程门阵列、只读存储器、可擦除可编程只读存储器、光学储存设备、磁储存设备、或上述内容的任何合适组合。为了提供与用户的交互，可以在计算机上实施此处描述的系统和技术，该计算机具有：用于向用户显示信息的显示装置、广域网；还可以是半导体介质，例如，固态硬盘。尽管结合具体特征及其实施例对本公开进行了描述，显而易见的，在不脱离本公开的精神和范围的情况下，可对其进行各种修改和组合。相应地，本说明书和附图仅仅是所附权利要求所界定的本公开的示例性说明，且视为已覆盖本公开范围内的任意和所有修改、变化、组合或等同物。显然，本领域的技术人员可以对本公开进行各种改动和变型而不脱离本公开的精神和范围。这样，倘若本公开的这些修改和变型属于本公开权利要求及其等同技术的范围之内，则本公开也意图包括这些改动和变型在内。
