标题title
一种接口回归测试方法、装置及应用
摘要abst
本申请提出了一种接口回归测试方法、装置及应用，包括以下步骤：获取被测接口并分配唯一接口编号，确定测试点，划分测试场景并分配唯一场景编号；编写至少一测试用例，为每个测试用例命名；使用所有测试用例进行一次回归测试，修复未通过测试用例并使用修复后的未通过测试用例以及与未通过测试用例存在关联的测试用例进行二次回归测试，直至所有测试通过，关联测试用例通过每一测试用例的命名获取。本方案通过每一测试用例的命名来筛选需要二次回归的测试用例进行二次测试来为接口回归提供依据，并减少了筛选时间以节省接口回归测试的时间。
权利要求书clms
1.一种接口回归测试方法，其特征在于，包括以下步骤：获取至少一被测接口，并为每一被测接口设置不同的接口编号，获取所有被测接口的测试点，根据所述测试点划分不同的测试场景，并为每一测试场景设置不同的场景编号，编写至少一测试用例，根据每一测试用例所属被测接口的接口编号、所属场景的场景编号、自身类别来为每一测试用例命名；在一次回归测试时获取未通过测试用例，根据所述未通过测试用例命名中的接口编号、场景编号以及自身类别选取与更改未通过测试用例后会受影响的参考测试用例；使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过。2.根据权利要求1所述的接口回归测试方法，其特征在于，根据测试用例的自身类别将测试用例区分为逻辑类测试用例、容错类测试用例以及路径类测试用例，若未通过测试用例为逻辑类测试用例，则根据未通过测试用例命名抽取与未通过测试用例同一场景编号的所有路径类测试用例以及同一场景编号同一接口编号的所有逻辑类测试用例作为参考测试用例；若未通过测试用例为容错类测试用例，则根据未通过测试用例命名抽取与未通过测试用例同一场景编号的所有路径类测试用例以及同一场景编号同一接口编号的所有容错类测试用例作为参考测试用例；若未通过测试用例为路径类测试用例，则根据未通过测试用例命名抽取与未通过测试用例同一场景编号下的所有逻辑类测试用例以及所有路径类测试用例作为参考测试用例。3.根据权利要求1所述的一种接口回归测试方法，其特征在于，按照每一测试用例按照影响核心业务的业务功能的程度由高至低为每一测试用例分配不同优先级。4.根据权利要求3所述的一种接口回归测试方法，其特征在于，所述优先级分为高优先级、中优先级以及低优先级，所述高优先级的测试用例为影响核心业务的测试用例，所述中优先级的测试用例为影响功能正确性的测试用例，所述低优先级的测试用例为对业务功能不构成实质性影响或者影响轻微但不影响业务开展的测试用例。5.根据权利要求3所述的一种接口回归测试方法，其特征在于，二次回归时筛选高优先级的测试用例，此时的测试用例包括修复后的未通过测试用例以及选取的参考测试用例。6.根据权利要求3所述的接口回归测试方法，其特征在于，一次回归测试时排除低优先级的未通过测试用例。7.根据权利要求1所述的接口回归测试方法，其特征在于，获取存在缺陷的被测接口，根据被测接口的缺陷获取对应的未通过测试用例。8.一种接口回归测试装置，其特征在于，包括：设置模块：获取至少一被测接口，并为每一被测接口设置不同的接口编号，获取所有被测接口的测试点，根据所述测试点划分不同的测试场景，并为每一测试场景设置不同的场景编号，编写至少一测试用例，根据每一测试用例所属被测接口的接口编号、所属场景的场景编号、自身类别来为每一测试用例命名；获取模块：在一次回归测试时获取未通过测试用例，根据所述未通过测试用例命名中的接口编号、场景编号以及自身类别选取与更改未通过测试用例后会受影响的参考测试用例；回归测试模块：使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过。9.一种电子装置，包括存储器和处理器，其特征在于，所述存储器中存储有计算机程序，所述处理器被设置为运行所述计算机程序以执行权利要求1-7任一所述的一种接口回归测试方法。10.一种可读存储介质，其特征在于，所述可读存储介质中存储有计算机程序，所述计算机程序包括用于控制过程以执行过程的程序代码，所述过程包括权利要求1-7任一所述的一种接口回归测试方法。
说明书desc
技术领域本申请涉及接口测试领域，特别是涉及一种接口回归测试方法、装置及应用。背景技术接口的测试用例是专门用于测试软件系统的接口功能的测试用例，在软件开发中，接口是不同模块、组件或系统之间进行数据交换和通信的关键点，接口的测试用例旨在验证接口的正确性、可靠性和稳定性，以确保各个组件能够正确地进行数据传输和交互。接口回归测试是一种软件测试方法，用于验证已经修改或更新的软件接口是否仍然按照预期工作，并且没有破坏现有的功能，执行接口回归测试，可以确保软件在接口层面的稳定性和兼容性，减少在修改或更新接口后引入新问题的风险。在现有的接口回归测试时存在较多的主观因素，缺少能够统一的方法，很容易造成缺陷的逃逸，能在缺陷回归时使用已测试用例来达到限制显得格外重要，目前大多数接口回归测试采用的方法是将发现该缺陷时的测试用例重新执行一遍，然后进行人为的自行主观的验证筛选认为可能存在由于对缺陷测试用例进行修改导致其他问题的地方，这种方法就造成了回归的不确定性和很大的主观性，因测试人员的经验水平而异，存在较大的准确性上的差异。所以，亟需一种可以提升接口回归测试的准确度并消耗时间少的接口回归测试方法。发明内容本申请实施例提供了一种接口回归测试方法、装置及应用，通过每一测试用例的命名来筛选需要二次回归的测试用例进行二次测试来为接口回归提供依据，并且在测试过程中舍弃低优先级的测试用例来节省接口回归测试的时间。第一方面，本申请实施例提供了一种接口回归测试方法，所述方法包括：获取至少一被测接口，并为每一被测接口设置不同的接口编号，获取所有被测接口的测试点，根据所述测试点划分不同的测试场景，并为每一测试场景设置不同的场景编号，编写至少一测试用例，根据每一测试用例所属被测接口的接口编号、所属场景的场景编号、自身类别来为每一测试用例命名；在一次回归测试时获取未通过测试用例，根据所述未通过测试用例命名中的接口编号、场景编号以及自身类别选取与更改未通过测试用例后会受影响的参考测试用例；使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过。第二方面，本申请实施例提供了一种接口回归测试装置，包括：设置模块：获取至少一被测接口，并为每一被测接口设置不同的接口编号，获取所有被测接口的测试点，根据所述测试点划分不同的测试场景，并为每一测试场景设置不同的场景编号，编写至少一测试用例，根据每一测试用例所属被测接口的接口编号、所属场景的场景编号、自身类别来为每一测试用例命名；获取模块：在一次回归测试时获取未通过测试用例，根据所述未通过测试用例命名中的接口编号、场景编号以及自身类别选取与更改未通过测试用例后会受影响的参考测试用例；回归测试模块：使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过。第三方面，本申请实施例提供了一种电子装置，包括存储器和处理器，其所述存储器中存储有计算机程序，所述处理器被设置为运行所述计算机程序以执行一种接口回归测试方法。第四方面，本申请实施例提供了一种可读存储介质，所述可读存储介质中存储有计算机程序，所述计算机程序包括用于控制过程以执行过程的程序代码，所述过程包括一种接口回归测试方法。本发明的主要贡献和创新点如下：本申请实施例通过接口编号、场景编号来对测试用例进行命名，并在二次回归时根据测试用例的命名来筛选需要进行二次回归的测试用例可以为接口回归提供依据，并保证回归测试的准确度；本方案通过为每一测试用例设置不同的优先级，来进一步对未通过测试用例以及与未通过测试用例相关联的测试用例进行筛选从而节省接口测试的时间；本方案在进行二次回归时，不仅测试未通过测试用例，还会对与未通过测试用例存在关联的其他测试用例进行二次回归，提高了接口测试的稳定性。本申请的一个或多个实施例的细节在以下附图和描述中提出，以使本申请的其他特征、目的和优点更加简明易懂。附图说明此处所说明的附图用来提供对本申请的进一步理解，构成本申请的一部分，本申请的示意性实施例及其说明用于解释本申请，并不构成对本申请的不当限定。在附图中：图1是根据本申请实施例的一种接口回归测试方法的流程图；图2是根据本申请实施例的生成测试用例的流程图；图3是根据本申请实施例的生成路径类测试用例的示意图；图4是根据本申请实施例的进行接口回归测试的流程图；图5是根据本申请实施例的一种接口回归测试装置的结构框图；图6是根据本申请实施例的电子装置的硬件结构示意图。具体实施方式这里将详细地对示例性实施例进行说明，其示例表示在附图中。下面的描述涉及附图时，除非另有表示，不同附图中的相同数字表示相同或相似的要素。以下示例性实施例中所描述的实施方式并不代表与本说明书一个或多个实施例相一致的所有实施方式。相反，它们仅是与如所附权利要求书中所详述的、本说明书一个或多个实施例的一些方面相一致的装置和方法的例子。需要说明的是：在其他实施例中并不一定按照本说明书示出和描述的顺序来执行相应方法的步骤。在一些其他实施例中，其方法所包括的步骤可以比本说明书所描述的更多或更少。此外，本说明书中所描述的单个步骤，在其他实施例中可能被分解为多个步骤进行描述；而本说明书中所描述的多个步骤，在其他实施例中也可能被合并为单个步骤进行描述。实施例一本申请实施例提供了一种接口回归测试方法，具体地，参考图1，所述方法包括：获取至少一被测接口，并为每一被测接口设置不同的接口编号，获取所有被测接口的测试点，根据所述测试点划分不同的测试场景，并为每一测试场景设置不同的场景编号，编写至少一测试用例，根据每一测试用例所属被测接口的接口编号、所属场景的场景编号、自身类别来为每一测试用例命名；在一次回归测试时获取未通过测试用例，根据所述未通过测试用例命名中的接口编号、场景编号以及自身类别选取与更改未通过测试用例后会受影响的参考测试用例；使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过。在一些实施例中，在“获取所有被测接口的测试点，根据所述测试点划分不同的测试场景”步骤中，每一接口存在多个不同的测试点，每一测试点可以同时被划分到不同的测试场景中。具体的，列出每一被测接口的所有测试点，所述测试点是指所述被测接口的特定功能、行为或情况，他们是测试的目标，用于检查接口是否按照预期进行工作。示例性的，测试点可以包括输入数据、边界条件、异常情况、交互逻辑等。在一些实施例中，按照每一测试用例按照影响核心业务的业务功能的程度由高至低为每一测试用例分配不同优先级，所述优先级分为高优先级、中优先级以及低优先级，所述高优先级的测试用例为影响核心业务的测试用例，所述中优先级的测试用例为影响功能正确性的测试用例，所述低优先级的测试用例为对业务功能不构成实质性影响或者影响轻微但不影响业务开展的测试用例。具体的，为每一测试用例设置优先级可以在后续的回归测试中根据优先级进行问题修复，并减少回归测试所需要的时间。在一些实施例中，所述测试用例的自身类别分为逻辑类、容错类以及路径类，逻辑类测试用例是指针对软件或系统的逻辑功能进行测试的测试用例，容错类测试用例是用于测试系统或软件在出现故障或错误情况下的行为和反应的测试用例，路径类测试用例是基于软件或系统的不同路径和执行逻辑进行设计的测试用例。在本方案中，以编号a表示逻辑类测试用例，以编号b表示容错类测试用例，以编号c表示路径类测试用例，所以本方案每一测试用例的命名格式为成xx-场景编号-接口编号-a/b/c-xx，xx表示其他的编码元素，生成测试用例的流程图如图2所示。示例性的，本方案中的逻辑类接口用例通常表示一个接口按照既定的传参要求传各种合法的参数后接口能返回期待的正确的信息。本方案中的容错类接口用例通常表示一个接口按照非正常逻辑传参时的各种可能情况，要求接口也能正确处理并给出提示不能出现异常。本方案中的路径类的接口用例通常表示一个接口传参并得到返回的值后，该值被下游接口传参时所用，或是生成的值存到数据库中被下游接口所处理返回，下游接口使用该参数值后业务正确，同样的也可能该接口的参数值也是上游接口来的，这种情况都属于路径类，例如图3所示，同一场景下存在互相连接的n段路径a、b、c、d、e，则可以生成不同路径的测试用例如start＞a+b+c＞end1、start＞a+b+d＞end2、start＞a+e＞end2等。具体的，通过对每一测试用例进行命名的方式来为后续的接口回归测试提供依据。在一些具体实施例中，一次回归测试时排除低优先级的未通过测试用例。具体的，在进行回归测试的过程中，对一个问题进行修复很有可能导致另一个更大问题的出现，由于低优先级的测试用例对业务功能不构成实质性影响，所以在一次回归测试时排除低优先级的未通过测试用例来节省接口测试的时间。在一些实施例中，在“使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过”步骤中，若未通过测试用例为逻辑类测试用例，则根据未通过测试用例命名抽取与未通过测试用例同一场景编号的所有路径类测试用例以及同一场景编号同一接口编号的所有逻辑类测试用例作为参考测试用例。具体的，由于修改逻辑类测试用例可能会影响接口上下游的取数所以需要对同一场景下的所有路径类测试用例进行二次回归测试以防出现更多的问题。在一些实施例中，在“使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过”步骤中，若未通过测试用例为容错类测试用例，则根据未通过测试用例命名抽取与未通过测试用例同一场景编号的所有路径类测试用例以及同一场景编号同一接口编号的所有容错类测试用例作为参考测试用例。具体的，由于修改容错类测试用例会影响到接口上下游的取数，所以需要对同一场景下的所有路径类测试用例进行二次回归测试以防出现更多的问题。在一些实施例中，在“使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过”步骤中，若未通过测试用例为路径类测试用例，则根据未通过测试用例命名抽取与未通过测试用例同一场景编号下的所有逻辑类测试用例以及所有路径类测试用例作为参考测试用例。在一些实施例中，与未通过测试用例存在关联的测试用例仅为优先级高的测试用例。具体的，本方案进行接口回归测试的流程图如图4所示，为了提高二次回归测试的效率问题并为接口回归测试提供回归依据，所以在二次回归时通过测试用例的命名来查找与未通过测试用例存在关联的测试用例，且只需执行高优先级的测试用例。示例性的，在一个设备导入场景中的导入接口存在缺陷，导入接口的接口编号为import，该导入接口的缺陷大概描述为：该接口支持导入的设备类型有3中，分别为A、B、C，其中在导入B种设备时出错。获取测试未通过的测试用例，该测试用例大概描述为：传递设备参数为B种类时，填写好其他参数并查看返回接口是否正确。可知该测试用例为逻辑类测试用例且属于设备导入场景，则抽取测试用例命名中包含接口编号import、类型a、场景编号sbdr的测试用例得到以下测试用例：sbxx3-Import-a-sbdr-0014 该用例验证导入设备类型为A的、sbxx-Import-a-sbdr-002该用例验证导入设备类型为B的、sbxx-Import-a-sbdr-003该用例验证导入设备类型为C的等，同时也要抽取路径类测试用例，及测试用例命名包含路径类以及设备导入场景的用例如：sbxx-null-c-sbdr-155，该测试用例是用来验证查询页面设备列表数据的接口返回数据保持正确。实施例二基于相同的构思，参考图5，本申请还提出了一种接口回归测试装置，包括：设置模块：获取至少一被测接口，并为每一被测接口设置不同的接口编号，获取所有被测接口的测试点，根据所述测试点划分不同的测试场景，并为每一测试场景设置不同的场景编号，编写至少一测试用例，根据每一测试用例所属被测接口的接口编号、所属场景的场景编号、自身类别来为每一测试用例命名；获取模块：在一次回归测试时获取未通过测试用例，根据所述未通过测试用例命名中的接口编号、场景编号以及自身类别选取与更改未通过测试用例后会受影响的参考测试用例；回归测试模块：使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过。实施例三本实施例还提供了一种电子装置，参考图6，包括存储器404和处理器402，该存储器404中存储有计算机程序，该处理器402被设置为运行计算机程序以执行上述任一项方法实施例中的步骤。具体地，上述处理器402可以包括中央处理器，或者特定集成电路，或者可以被配置成实施本申请实施例的一个或多个集成电路。其中，存储器404可以包括用于数据或指令的大容量存储器404。举例来说而非限制，存储器404可包括硬盘驱动器、软盘驱动器、固态驱动器、闪存、光盘、磁光盘、磁带或通用串行总线驱动器或者两个或更多个以上这些的组合。在合适的情况下，存储器404可包括可移除或不可移除的介质。在合适的情况下，存储器404可在数据处理装置的内部或外部。在特定实施例中，存储器404是非易失性存储器。在特定实施例中，存储器404包括只读存储器和随机存取存储器。在合适的情况下，该ROM可以是掩模编程的ROM、可编程ROM、可擦除PROM、电可擦除PROM、电可改写ROM或闪存或者两个或更多个以上这些的组合。在合适的情况下，该RAM可以是静态随机存取存储器或动态随机存取存储器，其中，DRAM可以是快速页模式动态随机存取存储器404、扩展数据输出动态随机存取存储器、同步动态随机存取内存等。存储器404可以用来存储或者缓存需要处理和/或通信使用的各种数据文件，以及处理器402所执行的可能的计算机程序指令。处理器402通过读取并执行存储器404中存储的计算机程序指令，以实现上述实施例中的任意一种接口回归测试方法。可选地，上述电子装置还可以包括传输设备406以及输入输出设备408，其中，该传输设备406和上述处理器402连接，该输入输出设备408和上述处理器402连接。传输设备406可以用来经由一个网络接收或者发送数据。上述的网络具体实例可包括电子装置的通信供应商提供的有线或无线网络。在一个实例中，传输设备包括一个网络适配器，其可通过基站与其他网络设备相连从而可与互联网进行通讯。在一个实例中，传输设备406可以为射频模块，其用于通过无线方式与互联网进行通讯。输入输出设备408用于输入或输出信息。在本实施例中，输入的信息可以是测试用例、二次回归的测试用例等，输出的信息可以测试结果等。可选地，在本实施例中，上述处理器402可以被设置为通过计算机程序执行以下步骤：S101、获取至少一被测接口，并为每一被测接口设置不同的接口编号，获取所有被测接口的测试点，根据所述测试点划分不同的测试场景，并为每一测试场景设置不同的场景编号，编写至少一测试用例，根据每一测试用例所属被测接口的接口编号、所属场景的场景编号、自身类别来为每一测试用例命名；S102、在一次回归测试时获取未通过测试用例，根据所述未通过测试用例命名中的接口编号、场景编号以及自身类别选取与更改未通过测试用例后会受影响的参考测试用例；S103、使用修复后的未通过测试用例以及与参考测试用例进行二次回归测试直至所有测试用例通过。需要说明的是，本实施例中的具体示例可以参考上述实施例及可选实施方式中所描述的示例，本实施例在此不再赘述。通常，各种实施例可以以硬件或专用电路、软件、逻辑或其任何组合来实现。本发明的一些方面可以以硬件来实现，而其他方面可以以可以由控制器、微处理器或其他计算设备执行的固件或软件来实现，但是本发明不限于此。尽管本发明的各个方面可以被示出和描述为框图、流程图或使用一些其他图形表示，但是应当理解，作为非限制性示例，本文中描述的这些框、装置、系统、技术或方法可以以硬件、软件、固件、专用电路或逻辑、通用硬件或控制器或其他计算设备或其某种组合来实现。本发明的实施例可以由计算机软件来实现，该计算机软件由移动设备的数据处理器诸如在处理器实体中可执行，或者由硬件来实现，或者由软件和硬件的组合来实现。包括软件例程、小程序和/或宏的计算机软件或程序可以存储在任何装置可读数据存储介质中，并且它们包括用于执行特定任务的程序指令。计算机程序产品可以包括当程序运行时被配置为执行实施例的一个或多个计算机可执行组件。一个或多个计算机可执行组件可以是至少一个软件代码或其一部分。另外，在这一点上，应当注意，如图6中的逻辑流程的任何框可以表示程序步骤、或者互连的逻辑电路、框和功能、或者程序步骤和逻辑电路、框和功能的组合。软件可以存储在诸如存储器芯片或在处理器内实现的存储块等物理介质、诸如硬盘或软盘等磁性介质、以及诸如例如DVD及其数据变体、CD等光学介质上。物理介质是非瞬态介质。本领域的技术人员应该明白，以上实施例的各技术特征可以进行任意的组合，为使描述简洁，未对上述实施例中的各个技术特征所有可能的组合都进行描述，然而，只要这些技术特征的组合不存在矛盾，都应当认为是本说明书记载的范围。以上实施例仅表达了本申请的几种实施方式，其描述较为具体和详细，但并不能因此而理解为对本申请范围的限制。应当指出的是，对于本领域的普通技术人员来说，在不脱离本申请构思的前提下，还可以做出若干变形和改进，这些都属于本申请的保护范围。因此，本申请的保护范围应以所附权利要求为准。
