标题title
边缘计算的资源处理方法、装置、存储介质及电子设备
摘要abst
本申请公开了一种边缘计算的资源处理方法、装置、存储介质及电子设备。该方法包括：确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源；根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务。通过本申请，解决了相关技术中由于边缘计算节点资源限制，导致对业务的处理能力较低的问题。
权利要求书clms
1.一种边缘计算的资源处理方法，其特征在于，包括：确定目标边缘节点在当前业务运行下的预测算力资源，并获取所述目标边缘节点的邻近节点的参数信息；基于所述参数信息确定所述邻近节点中目标邻近节点的数据集合，其中，所述数据集合至少包括：目标邻近节点的空闲算力资源；根据所述目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，所述目标空闲算力资源为所述目标边缘节点在当前业务运行下的虚拟算力资源；若所述目标空闲算力资源大于所述预测算力资源，则将所述目标空闲算力资源映射为虚拟边缘服务器，以运行所述当前业务。2.根据权利要求1所述的方法，其特征在于，所述参数信息包括：所述邻近节点的空闲算力资源和所述邻近节点的通信时延，其中，基于所述参数信息确定所述邻近节点中目标邻近节点的数据集合，包括：根据所述空闲算力资源计算所述邻近节点的算力空闲率；根据所述空闲算力资源、所述算力空闲率和所述通信时延确定所述邻近节点中目标邻近节点的数据集合。3.根据权利要求2所述的方法，其特征在于，根据所述空闲算力资源、所述算力空闲率和所述通信时延确定所述邻近节点中目标邻近节点的数据集合，包括：根据所述算力空闲率和所述通信时延计算出所述邻近节点的算力权重值；根据所述空闲算力资源、所述算力空闲率和所述通信时延确定所述邻近节点中的目标邻近节点，其中，所述目标邻近节点的空闲算力资源和算力权重值作为所述目标邻近节点的数据集合。4.根据权利要求3所述的方法，其特征在于，所述算力权重值采用以下公式计算： ；其中， 为算力权重值，/＞ 为算力空闲率，/＞为通信时延。5.根据权利要求2所述的方法，其特征在于，所述算力空闲率采用以下公式计算：；其中， 为邻近节点i的算力空闲率，/＞为邻近节点i的空闲算力资源的最大值，为邻近节点i的空闲算力资源的最小值，/＞为邻近节点i的空闲算力资源的平均值，为邻近节点i的算力容量值。6.根据权利要求3所述的方法，其特征在于，根据所述空闲算力资源、所述算力空闲率和所述通信时延确定所述邻近节点中的目标邻近节点，包括：在所述空闲算力资源、所述算力空闲率和所述通信时延中的至少一个满足对应条件的情况下，将相对应的邻近节点作为所述目标邻近节点。7.根据权利要求3所述的方法，其特征在于，根据所述目标邻近节点的空闲算力资源确定目标空闲算力资源，包括：对所述目标邻近节点的算力权重值进行排序；根据排序结果确定最大算力权重值对应的目标邻近节点；将所述最大算力权重值对应的目标邻近节点的空闲算力资源作为所述目标空闲算力资源。8.根据权利要求7所述的方法，其特征在于，若所述目标空闲算力资源小于等于所述预测算力资源，所述方法还包括：重新确定最大算力权重值对应的目标邻近节点，并将所述重新确定的目标邻近节点对应的空闲算力资源与在先确定的目标邻近节点的空闲算力资源进行叠加，直至所述目标空闲算力资源大于所述预测算力资源。9.根据权利要求1-8中任一项所述的方法，其特征在于，所述确定目标边缘节点在当前业务运行下的预测算力资源，包括：获取所述目标边缘节点在历史业务运行下的历史算力资源；依据所述历史算力资源确定所述目标边缘节点在所述当前业务运行下的预测算力资源。10.根据权利要求9所述的方法，其特征在于，所述依据所述历史算力资源确定所述目标边缘节点在所述当前业务运行下的预测算力资源，包括：将所述历史算力资源输入至预先训练好的资源预测模型中，输出所述预测算力资源，并设置所述预测算力资源对应的通信时延，其中，所述资源预测模型是通过回声状态网络与长短期记忆网络搭建的。11.一种边缘计算的资源处理装置，其特征在于，包括：资源预测单元，用于确定目标边缘节点在当前业务运行下的预测算力资源，并获取所述目标边缘节点的邻近节点的参数信息；集合确定单元，用于基于所述参数信息确定所述邻近节点中目标邻近节点的数据集合，其中，所述数据集合至少包括：目标邻近节点的空闲算力资源；资源确定单元，用于根据所述目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，所述目标空闲算力资源为所述目标边缘节点在当前业务运行下的虚拟算力资源；资源映射单元，用于若所述目标空闲算力资源大于所述预测算力资源，则将所述目标空闲算力资源映射为虚拟边缘服务器，以运行所述当前业务。12.根据权利要求11所述的装置，其特征在于，所述参数信息包括：所述邻近节点的空闲算力资源和所述邻近节点的通信时延，其中，所述集合确定单元，包括：资源计算子单元，用于根据所述空闲算力资源计算所述邻近节点的算力空闲率；集合确定子单元，用于根据所述空闲算力资源、所述算力空闲率和所述通信时延确定所述邻近节点中目标邻近节点的数据集合。13.根据权利要求12所述的装置，其特征在于，所述集合确定子单元，包括：权重确定模块，用于根据所述算力空闲率和所述通信时延计算出所述邻近节点的算力权重值；节点确定模块，用于根据所述空闲算力资源、所述算力空闲率和所述通信时延确定所述邻近节点中的目标邻近节点，其中，所述目标邻近节点的空闲算力资源和算力权重值作为所述目标邻近节点的数据集合。14.根据权利要求13所述的装置，其特征在于，所述算力权重值采用以下公式计算： ；其中， 为算力权重值，/＞ 为算力空闲率，/＞为通信时延。15.根据权利要求12所述的装置，其特征在于，所述算力空闲率采用以下公式计算：；其中， 为邻近节点i的算力空闲率，/＞为邻近节点i的空闲算力资源的最大值，为邻近节点i的空闲算力资源的最小值，/＞为邻近节点i的空闲算力资源的平均值，为邻近节点i的算力容量值。16.根据权利要求13所述的装置，其特征在于，所述节点确定模块，包括：节点确定子模块，用于在所述空闲算力资源、所述算力空闲率和所述通信时延中的至少一个满足对应条件的情况下，将相对应的邻近节点作为所述目标邻近节点。17.根据权利要求13所述的装置，其特征在于，所述资源确定单元，包括：排序子单元，用于对所述目标邻近节点的算力权重值进行排序；权重确定子单元，用于根据排序结果确定最大算力权重值对应的目标邻近节点；资源确定子单元，用于将所述最大算力权重值对应的目标邻近节点的空闲算力资源作为所述目标空闲算力资源。18.根据权利要求17所述的装置，其特征在于，所述装置还包括：资源叠加单元，用于若所述目标空闲算力资源小于等于所述预测算力资源，重新确定最大算力权重值对应的目标邻近节点，并将所述重新确定的目标邻近节点对应的空闲算力资源与在先确定的目标邻近节点的空闲算力资源进行叠加，直至所述目标空闲算力资源大于所述预测算力资源。19.一种计算机可读存储介质，其特征在于，所述存储介质包括存储的程序，其中，所述程序执行权利要求1至10中任意一项所述的边缘计算的资源处理方法。20.一种电子设备，其特征在于，包括：一个或多个处理器，存储器，显示装置以及一个或多个程序，其中，所述一个或多个程序被存储在所述存储器中，并且被配置为由所述一个或多个处理器执行，所述一个或多个程序包括用于执行权利要求1至10中任意一项所述的边缘计算的资源处理方法。
说明书desc
技术领域本申请涉及边缘计算技术领域，具体而言，涉及一种边缘计算的资源处理方法、装置、存储介质及电子设备。背景技术相关技术中，边缘计算的瓶颈主要在于其计算、通信、存储等资源有限。例如，电力终端数量与数据规模进一步增大时，边缘节点趋于饱和，由于节点资源限制，无法满足业务请求对应的运行资源，导致业务处理能力较低，进一步降低服务质量。针对相关技术中由于边缘计算节点资源限制，导致对业务的处理能力较低的问题，目前尚未提出有效的解决方案。发明内容本申请的主要目的在于提供一种边缘计算的资源处理方法、装置、存储介质及电子设备，以解决相关技术中由于边缘计算节点资源限制，导致对业务的处理能力较低的问题。为了实现上述目的，根据本申请的第一方面，提供了一种边缘计算的资源处理方法。该方法包括：确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源； 根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务。进一步地，参数信息包括：邻近节点的空闲算力资源和邻近节点的通信时延，其中，基于参数信息确定邻近节点中目标邻近节点的数据集合，包括：根据空闲算力资源计算邻近节点的算力空闲率；根据空闲算力资源、算力空闲率和通信时延确定邻近节点中目标邻近节点的数据集合。进一步地，根据空闲算力资源、算力空闲率和通信时延确定邻近节点中目标邻近节点的数据集合，包括：根据算力空闲率和通信时延计算出邻近节点的算力权重值；根据空闲算力资源、算力空闲率和通信时延确定邻近节点中的目标邻近节点，其中，目标邻近节点的空闲算力资源和算力权重值作为目标邻近节点的数据集合。进一步地，算力权重值采用以下公式计算：；其中，为算力权重值，/＞为算力空闲率，/＞为通信时延。进一步地，算力空闲率采用以下公式计算：；其中，为邻近节点i的算力空闲率，/＞为邻近节点i的空闲算力资源的最大值，/＞为邻近节点i的空闲算力资源的最小值，/＞为邻近节点i的空闲算力资源的平均值，/＞为邻近节点i的算力容量值。进一步地，根据空闲算力资源、算力空闲率和通信时延确定邻近节点中的目标邻近节点，包括：在空闲算力资源、算力空闲率和通信时延中的至少一个满足对应条件的情况下，将相对应的邻近节点作为目标邻近节点。进一步地，根据目标邻近节点的空闲算力资源确定目标空闲算力资源，包括：对目标邻近节点的算力权重值进行排序；根据排序结果确定最大算力权重值对应的目标邻近节点；将最大算力权重值对应的目标邻近节点的空闲算力资源作为目标空闲算力资源。进一步地，若目标空闲算力资源小于等于预测算力资源，方法还包括：重新确定最大算力权重值对应的目标邻近节点，并将重新确定的目标邻近节点对应的空闲算力资源与在先确定的目标邻近节点的空闲算力资源进行叠加，直至目标空闲算力资源大于预测算力资源。进一步地，确定目标边缘节点在当前业务运行下的预测算力资源，包括：获取目标边缘节点在历史业务运行下的历史算力资源；依据历史算力资源确定目标边缘节点在当前业务运行下的预测算力资源。进一步地，依据历史算力资源确定目标边缘节点在当前业务运行下的预测算力资源，包括：将历史算力资源输入至预先训练好的资源预测模型中，输出预测算力资源，并设置预测算力资源对应的通信时延，其中，资源预测模型是通过回声状态网络与长短期记忆网络搭建的。为了实现上述目的，根据本申请的第二方面，提供了一种边缘计算的资源处理装置。该装置包括：资源预测单元，用于确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；集合确定单元，用于基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源；资源确定单元，用于根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；资源映射单元，用于若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务。进一步地，参数信息包括：邻近节点的空闲算力资源和邻近节点的通信时延，其中，集合确定单元，包括：资源计算子单元，用于根据空闲算力资源计算邻近节点的算力空闲率；集合确定子单元，用于根据空闲算力资源、算力空闲率和通信时延确定邻近节点中目标邻近节点的数据集合。进一步地，集合确定子单元，包括：权重确定模块，用于根据算力空闲率和通信时延计算出邻近节点的算力权重值；节点确定模块，用于根据空闲算力资源、算力空闲率和通信时延确定邻近节点中的目标邻近节点，其中，目标邻近节点的空闲算力资源和算力权重值作为目标邻近节点的数据集合。进一步地，算力权重值采用以下公式计算：；其中，为算力权重值，/＞为算力空闲率，/＞为通信时延。进一步地，算力空闲率采用以下公式计算：；其中，为邻近节点i的算力空闲率，/＞为邻近节点i的空闲算力资源的最大值，/＞为邻近节点i的空闲算力资源的最小值，/＞为邻近节点i的空闲算力资源的平均值，/＞为邻近节点i的算力容量值。进一步地，节点确定模块，包括：节点确定子模块，用于在空闲算力资源、算力空闲率和通信时延中的至少一个满足对应条件的情况下，将相对应的邻近节点作为目标邻近节点。进一步地，资源确定单元，包括：排序子单元，用于对目标邻近节点的算力权重值进行排序；权重确定子单元，用于根据排序结果确定最大算力权重值对应的目标邻近节点；资源确定子单元，用于将最大算力权重值对应的目标邻近节点的空闲算力资源作为目标空闲算力资源。进一步地，装置还包括：资源叠加单元，用于若目标空闲算力资源小于等于预测算力资源，重新确定最大算力权重值对应的目标邻近节点，并将重新确定的目标邻近节点对应的空闲算力资源与在先确定的目标邻近节点的空闲算力资源进行叠加，直至目标空闲算力资源大于预测算力资源。进一步地，资源预测单元，包括：资源获取子单元，用于获取目标边缘节点在历史业务运行下的历史算力资源；资源预测子单元，用于依据历史算力资源确定目标边缘节点在当前业务运行下的预测算力资源。进一步地，资源预测子单元，包括：资源预测模块，用于将历史算力资源输入至预先训练好的资源预测模型中，输出预测算力资源，并设置预测算力资源对应的通信时延，其中，资源预测模型是通过回声状态网络与长短期记忆网络搭建的。根据本公开实施例的第三方面，提供了一种电子设备，包括：处理器；以及存储器，存储器上存储有计算机可读指令，计算机可读指令被处理器执行时实现上述任意一项的边缘计算的资源处理方法。根据本公开实施例的第四方面，提供一种计算机可读存储介质，其上存储有计算机程序，计算机程序被处理器执行时实现根据上述任意一项的边缘计算的资源处理方法。通过本申请，采用以下步骤：确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源； 根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务，解决了相关技术中由于边缘计算节点资源限制，导致对业务的处理能力较低的问题。通过将目标边缘节点的邻近节点对应的目标空闲算力资源，作为目标边缘节点的虚拟算力资源，进而达到了虚拟边缘节点对业务的处理能力的效果。附图说明构成本申请的一部分的附图用来提供对本申请的进一步理解，本申请的示意性实施例及其说明用于解释本申请，并不构成对本申请的不当限定。在附图中：图1是根据本申请实施例提供的边缘计算的资源处理方法的流程图；图2是根据本申请实施例提供的边缘计算的资源处理方法的预测模型示意图；图3是根据本申请实施例提供的边缘计算的资源处理方法的边缘计算的系统架构示意图；图4是根据本申请实施例提供的边缘计算的资源处理装置的示意图；图5是根据本申请实施例提供的边缘计算的资源处理电子设备的网络架构示意图。具体实施方式需要说明的是，在不冲突的情况下，本申请中的实施例及实施例中的特征可以相互组合。下面将参考附图并结合实施例来详细说明本申请。为了使本技术领域的人员更好地理解本申请方案，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本申请一部分的实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都应当属于本申请保护的范围。需要说明的是，本申请的说明书和权利要求书及上述附图中的术语“第一”、“第二”等是用于区别类似的对象，而不必用于描述特定的顺序或先后次序。应该理解这样使用的数据在适当情况下可以互换，以便这里描述的本申请的实施例。此外，术语“包括”和“具有”以及他们的任何变形，意图在于覆盖不排他的包含，例如，包含了一系列步骤或单元的过程、方法、系统、产品或设备不必限于清楚地列出的那些步骤或单元，而是可包括没有清楚地列出的或对于这些过程、方法、产品或设备固有的其它步骤或单元。根据本申请的实施例，提供了一种边缘计算的资源处理方法。图1是根据本申请实施例的边缘计算的资源处理方法的流程图。如图1所示，该方法包括以下步骤：步骤S101，确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息。例如，目标边缘节点是以一个本地边缘计算节点的主边缘节点，当前业务可以是当前电力物联网流经目标入网的高容量的电力数据，预测算力资源是指将对目标边缘节点的算力进行预估，主要用于后续与虚拟算力资源之间进行比较。其中，邻近节点是指在边缘计算网络中，以一个本地目标边缘节点为主节点，多个边缘计算节点为从节点，该从节点则为本申请中的邻近节点，邻近节点的参数信息可以表征多个边缘计算节点的算力资源信息、空闲算力资源、通信时延等。其中，确定目标边缘节点在当前业务运行下的预测算力资源，通过以下步骤实现：获取目标边缘节点在历史业务运行下的历史算力资源；依据历史算力资源确定目标边缘节点在当前业务运行下的预测算力资源。具体的实现步骤为：将历史算力资源输入至预先训练好的资源预测模型中，输出预测算力资源，并设置预测算力资源对应的通信时延，其中，资源预测模型是通过回声状态网络与长短期记忆网络搭建的。举例而言，回声状态网络由输入层、储备池和输出层构成，通常包括K个输入神经元、N个隐含层神经元、L个输出神经元，其状态方程如下公式所示：其中，为输入连接矩阵，/＞为隐含层的神经元矩阵，/＞为储备池到输出神经单元的连接矩阵，/＞为激活函数，x为状态变量、y为输出值、t为信号输入次数、u为输入特征信号。本申请提出了一种结合回声状态网络与长短时记忆网络的ESN-LSTM预测模型，也即本申请中的资源预测模型，例如，如图2所示，将LSTM单元取代隐含层的神经元，构成ESN-LSTM预测模型。ESN-LISM预测模型中，每个LSTM单元的状态方程如下公式所示：其中，、/＞、/＞、/＞、/＞分别为输入信号、输入门、状态单元、输出门、输出信号；/＞为/＞中的输入权重矩阵；/＞，/＞，/＞分别为/＞，/＞，/＞中的递归权重矩阵；/＞，/＞，分别为/＞、/＞、/＞的偏置矩阵；σ为sigmoid激活函数，g为tanh激活函数。本申请通过回声状态网络在达到预期训练效果的情况下，可以简化训练过程，提升训练速度，以及，通过长短时记忆网络的LSTM单元取代回声状态网络的隐含层，可以有效计算目标边缘节点在当前业务下的运行负载进行预估，极大提升了对后续确定的虚拟边缘服务器的可靠性。步骤S102，基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源。具体的，本申请主要是通过对邻近节点中的参数信息按照对应条件进行筛选，得到目标邻近节点的数据集合，其中，数据集合中的空闲算力资源是可以指边缘计算节点的算力富余。进一步地，基于参数信息确定邻近节点中目标邻近节点的数据集合可以通过以下步骤实现：根据空闲算力资源计算邻近节点的算力空闲率；根据空闲算力资源、算力空闲率和通信时延确定邻近节点中目标邻近节点的数据集合。其中，通信时延是指邻近节点的处理业务时的通信时间延迟，算力空闲率是指邻近节点的空闲占比，可以采用以下公式计算：；其中，为邻近节点i的算力空闲率，/＞为邻近节点i的空闲算力资源的最大值，/＞为邻近节点i的空闲算力资源的最小值，/＞为邻近节点i的空闲算力资源的平均值，/＞为邻近节点i的算力容量值。本申请通过计算得到的算力空闲率作为邻近节点的参数信息，以及通过对算力空闲率按照对应条件进行筛选，提升了后续对目标邻近节点的可靠性。更进一步地，据空闲算力资源、算力空闲率和通信时延确定邻近节点中目标邻近节点的数据集合，可以通过以下步骤实现：根据算力空闲率和通信时延计算出邻近节点的算力权重值；根据空闲算力资源、算力空闲率和通信时延确定邻近节点中的目标邻近节点，其中，目标邻近节点的空闲算力资源和算力权重值作为目标邻近节点的数据集合。其中，邻近节点的算力权重值，可以采用以下公式计算：；其中，为算力权重值，/＞为算力空闲率，/＞为通信时延。本申请通过计算得到的算力权重值，是衡量邻近节点是否可以优选作为边缘节点的重要指标参数，算力权重值越高，该邻近节点对应的空闲算力资源成为目标边缘节点的虚拟算力资源的几率越大。其中空闲算力资源、算力空闲率和通信时延确定邻近节点中的目标邻近节点，可以通过以下步骤得到：在空闲算力资源、算力空闲率和通信时延中的至少一个满足对应条件的情况下，将相对应的邻近节点作为目标邻近节点。其中，对应条件可以是空闲算力资源满足预设空闲算力资源、可以是算力空闲率满足预设算力空闲率，也可以是通信时延满足预设通信时延。根据对应条件筛选目标邻近节点，并生成目标邻近节点对应的数据集合，该数据集合表示目标边缘节点可用的边缘计算节点集合，具体可以包括：邻近节点的空闲算力资源、算力空闲率和通信时延。本申请通过目标邻近节点对应的数据集合的确定，提升了后续边缘计算节点的资源聚合效率。步骤S103，根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源。其中，根据目标邻近节点的空闲算力资源确定目标空闲算力资源，通过以下步骤实现：对目标邻近节点的算力权重值进行排序；根据排序结果确定最大算力权重值对应的目标邻近节点；将最大算力权重值对应的目标邻近节点的空闲算力资源作为目标空闲算力资源。例如，目标邻近节点包括A节点、B节点和C节点，且三者的算力权重值大小排序为B节点大于A节点，A节点大于C节点，因此，优选B节点作为的空闲算力资源作为本申请中目标边缘节点的目标空闲算力资源。也即本申请提出的算力权重值，优先将边缘计算节点中空闲算力资源更优的节点进行聚合，有效提升了算力资源的聚合效率。可选地，若目标空闲算力资源小于等于预测算力资源，根据目标邻近节点的空闲算力资源确定目标空闲算力资源还可以通过以下步骤实现：重新确定最大算力权重值对应的目标邻近节点，并将重新确定的目标邻近节点对应的空闲算力资源与在先确定的目标邻近节点的空闲算力资源进行叠加，直至目标空闲算力资源大于预测算力资源。例如，目标邻近节点包括A节点、B节点和C节点，且三者的算力权重值大小排序为B节点大于A节点，A节点大于C节点，因此，优选B节点作为的空闲算力资源作为本申请中目标边缘节点的目标空闲算力资源。此时，比较目标空闲算力资源是否小于等于预测算力资源，若是，则按照算力权重值依次选取A节点的空闲算力资源与B节点的空闲算力资源进行叠加，直至最终叠加确定的目标空闲算力资源大于预测算力资源。本申请通过提出的算力权重值，优先将边缘计算节点中空闲算力资源更优的节点进行聚合，有效提升了后续边缘计算节点的算力聚合效率。步骤S104，若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务。举例而言，目标空闲算力资源大于预测算力资源的2倍时，虚拟算力资源可以映射为一个虚拟边缘服务器，又或者，目标空闲算力资源大于预测算力资源的1.2倍时，虚拟算力资源也可以映射为一个虚拟边缘服务器，本申请不作限定。其中，虚拟边缘服务器可以是图3中的虚拟边缘服务器_1，或者图3中的虚拟边缘服务器_2。本申请提出了基于算力富余度的边缘计算节点组合策略，在通信业务时延约束下优选边缘计算节点的算力资源，形成多边缘计算的 “边-边”算力聚合的机制。克服了目标边缘节点应对业务请求时，由于自身节点资源限制，无法满足当前业务请求对应的运行资源，进而对业务处理能力较低的问题。综上，本申请实施例提供的边缘计算的资源处理方法，通过确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源； 根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务，解决了相关技术中由于边缘计算节点资源限制，导致对业务的处理能力较低的问题。通过将目标边缘节点的邻近节点对应的目标空闲算力资源，作为目标边缘节点的虚拟算力资源，进而达到了虚拟边缘节点对业务的处理能力的效果。需要说明的是，在附图的流程图示出的步骤可以在诸如一组计算机可执行指令的计算机系统中执行，并且，虽然在流程图中示出了逻辑顺序，但是在某些情况下，可以以不同于此处的顺序执行所示出或描述的步骤。本申请实施例还提供了一种边缘计算的资源处理装置，需要说明的是，本申请实施例的边缘计算的资源处理装置可以用于执行本申请实施例所提供的用于边缘计算的资源处理方法。以下对本申请实施例提供的边缘计算的资源处理装置进行介绍。图4是根据本申请实施例的边缘计算的资源处理装置的示意图。如图4所示，该装置包括：提供了一种边缘计算的资源处理装置。该装置包括：资源预测单元401、集合确定单元402、资源确定单元403、资源映射单元404。具体的，资源预测单元401，用于确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；集合确定单元402，用于基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源；资源确定单元403，用于根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；资源映射单元404，用于若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务。综上，本申请实施例提供的边缘计算的资源处理装置，通过资源预测单元401确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；集合确定单元402基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源；资源确定单元403根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；资源映射单元404若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务，解决了相关技术中由于边缘计算节点资源限制，导致对业务的处理能力较低的问题。通过将目标边缘节点的邻近节点对应的目标空闲算力资源，作为目标边缘节点的虚拟算力资源，进而达到了虚拟边缘节点对业务的处理能力的效果。可选地，在本申请实施例提供的边缘计算的资源处理装置中，参数信息包括：邻近节点的空闲算力资源和邻近节点的通信时延，其中，集合确定单元，包括：资源计算子单元，用于根据空闲算力资源计算邻近节点的算力空闲率；集合确定子单元，用于根据空闲算力资源、算力空闲率和通信时延确定邻近节点中目标邻近节点的数据集合。可选地，在本申请实施例提供的边缘计算的资源处理装置中，集合确定子单元，包括：权重确定模块，用于根据算力空闲率和通信时延计算出邻近节点的算力权重值；节点确定模块，用于根据空闲算力资源、算力空闲率和通信时延确定邻近节点中的目标邻近节点，其中，目标邻近节点的空闲算力资源和算力权重值作为目标邻近节点的数据集合。可选地，在本申请实施例提供的边缘计算的资源处理装置中，算力权重值采用以下公式计算：；其中，为算力权重值，/＞为算力空闲率，/＞为通信时延。进一步地，算力空闲率采用以下公式计算：；其中，为邻近节点i的算力空闲率，/＞为邻近节点i的空闲算力资源的最大值，/＞为邻近节点i的空闲算力资源的最小值，/＞为邻近节点i的空闲算力资源的平均值，/＞为邻近节点i的算力容量值。可选地，在本申请实施例提供的边缘计算的资源处理装置中，节点确定模块，包括：节点确定子模块，用于在空闲算力资源、算力空闲率和通信时延中的至少一个满足对应条件的情况下，将相对应的邻近节点作为目标邻近节点。可选地，在本申请实施例提供的边缘计算的资源处理装置中，资源确定单元，包括：排序子单元，用于对目标邻近节点的算力权重值进行排序；权重确定子单元，用于根据排序结果确定最大算力权重值对应的目标邻近节点；资源确定子单元，用于将最大算力权重值对应的目标邻近节点的空闲算力资源作为目标空闲算力资源。可选地，在本申请实施例提供的边缘计算的资源处理装置中，装置还包括：资源叠加单元，用于若目标空闲算力资源小于等于预测算力资源，重新确定最大算力权重值对应的目标邻近节点，并将重新确定的目标邻近节点对应的空闲算力资源与在先确定的目标邻近节点的空闲算力资源进行叠加，直至目标空闲算力资源大于预测算力资源。可选地，在本申请实施例提供的边缘计算的资源处理装置中，资源预测单元，包括：资源获取子单元，用于获取目标边缘节点在历史业务运行下的历史算力资源；资源预测子单元，用于依据历史算力资源确定目标边缘节点在当前业务运行下的预测算力资源。可选地，在本申请实施例提供的边缘计算的资源处理装置中，资源预测子单元，包括：资源预测模块，用于将历史算力资源输入至预先训练好的资源预测模型中，输出预测算力资源，并设置预测算力资源对应的通信时延，其中，资源预测模型是通过回声状态网络与长短期记忆网络搭建的。边缘计算的资源处理装置包括处理器和存储器，上述资源预测单元401、集合确定单元402、资源确定单元403、资源映射单元404等均作为程序单元存储在存储器中，由处理器执行存储在存储器中的上述程序单元来实现相应的功能。处理器中包含内核，由内核去存储器中调取相应的程序单元。内核可以设置一个或以上，通过调整内核参数来进行边缘计算的资源处理。存储器可能包括计算机可读介质中的非永久性存储器，随机存取存储器和/或非易失性内存等形式，如只读存储器或闪存，存储器包括至少一个存储芯片。在本公开示例性实施方式中，还提供了一种能够实现上述方法的计算机存储介质。其上存储有能够实现本说明书上述方法的程序产品。在一些可能的实施例中，本公开的各个方面还可以实现为一种程序产品的形式，其包括程序代码，当程序产品在终端设备上运行时，程序代码用于使终端设备执行本说明书上述“示例性方法”部分中描述的根据本公开各种示例性实施方式的步骤，如，可以执行如下的步骤：确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源； 根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务。在一种可选的实施方式中：邻近节点的空闲算力资源和邻近节点的通信时延，其中，基于参数信息确定邻近节点中目标邻近节点的数据集合，包括：根据空闲算力资源计算邻近节点的算力空闲率；根据空闲算力资源、算力空闲率和通信时延确定邻近节点中目标邻近节点的数据集合。在一种可选的实施方式中：根据算力空闲率和通信时延计算出邻近节点的算力权重值；根据空闲算力资源、算力空闲率和通信时延确定邻近节点中的目标邻近节点，其中，目标邻近节点的空闲算力资源和算力权重值作为目标邻近节点的数据集合。在一种可选的实施方式中：算力权重值采用以下公式计算：；其中，为算力权重值，/＞为算力空闲率，/＞为通信时延。在一种可选的实施方式中：算力空闲率采用以下公式计算：；其中，为邻近节点i的算力空闲率，/＞为邻近节点i的空闲算力资源的最大值，/＞为邻近节点i的空闲算力资源的最小值，/＞为邻近节点i的空闲算力资源的平均值，/＞为邻近节点i的算力容量值。在一种可选的实施方式中：在空闲算力资源、算力空闲率和通信时延中的至少一个满足对应条件的情况下，将相对应的邻近节点作为目标邻近节点。在一种可选的实施方式中：对目标邻近节点的算力权重值进行排序；根据排序结果确定最大算力权重值对应的目标邻近节点；将最大算力权重值对应的目标邻近节点的空闲算力资源作为目标空闲算力资源。在一种可选的实施方式中：重新确定最大算力权重值对应的目标邻近节点，并将重新确定的目标邻近节点对应的空闲算力资源与在先确定的目标邻近节点的空闲算力资源进行叠加，直至目标空闲算力资源大于预测算力资源。在一种可选的实施方式中：获取目标边缘节点在历史业务运行下的历史算力资源；依据历史算力资源确定目标边缘节点在当前业务运行下的预测算力资源。在一种可选的实施方式中：将历史算力资源输入至预先训练好的资源预测模型中，输出预测算力资源，并设置预测算力资源对应的通信时延，其中，资源预测模型是通过回声状态网络与长短期记忆网络搭建的。在一种可选的实施方式中，本公开的实施方式还可以包括一种用于实现上述方法的程序产品，该程序产品可以采用便携式紧凑盘只读存储器并包括程序代码，并可以在终端设备，例如个人电脑上运行。然而，本公开的程序产品不限于此，在本文件中，可读存储介质可以是任何包含或存储程序的有形介质，该程序可以被指令执行系统、装置或者器件使用或者与其结合使用。程序产品可以采用一个或多个可读介质的任意组合。可读介质可以是可读信号介质或者可读存储介质。可读存储介质例如可以为但不限于电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。可读存储介质的更具体的例子包括：具有一个或多个导线的电连接、便携式盘、硬盘、随机存取存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。计算机可读信号介质可以包括在基带中或者作为载波一部分传播的数据信号，其中承载了可读程序代码。这种传播的数据信号可以采用多种形式，包括但不限于电磁信号、光信号或上述的任意合适的组合。可读信号介质还可以是可读存储介质以外的任何可读介质，该可读介质可以发送、传播或者传输用于由指令执行系统、装置或者器件使用或者与其结合使用的程序。可读介质上包含的程序代码可以用任何适当的介质传输，包括但不限于无线、有线、光缆、RF等等，或者上述的任意合适的组合。可以以一种或多种程序设计语言的任意组合来编写用于执行本公开操作的程序代码，程序设计语言包括面向对象的程序设计语言—诸如Java、C++等，还包括常规的过程式程序设计语言—诸如“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算设备上执行、部分地在用户设备上执行、作为一个独立的软件包执行、部分在用户计算设备上部分在远程计算设备上执行、或者完全在远程计算设备或服务器上执行。在涉及远程计算设备的情形中，远程计算设备可以通过任意种类的网络，包括局域网或广域网，连接到用户计算设备，或者，可以连接到外部计算设备。此外，在本公开的示例性实施例中，还提供了一种能够实现上述方法的电子设备。所属技术领域的技术人员能够理解，本公开的各个方面可以实现为系统、方法或程序产品。因此，本公开的各个方面可以具体实现为以下形式，即：完全的硬件实施方式、完全的软件实施方式，或硬件和软件方面结合的实施方式，这里可以统称为“电路”、“模块”或“系统”。下面参照图5来描述根据本公开的这种实施方式的电子设备500。图5显示的电子设备500仅仅是一个示例，不应对本公开实施例的功能和使用范围带来任何限制。如图5所示，电子设备500以通用计算设备的形式表现。电子设备500的组件可以包括但不限于：上述至少一个处理单元510、上述至少一个存储单元520、连接不同系统组件的总线530以及显示单元540。其中，存储单元存储有程序代码，程序代码可以被处理单元510执行，使得处理单元510执行本说明书上述“示例性方法”部分中描述的根据本公开各种示例性实施方式的步骤。例如，处理单元510可以执行如下所示的步骤：确定目标边缘节点在当前业务运行下的预测算力资源，并获取目标边缘节点的邻近节点的参数信息；基于参数信息确定邻近节点中目标邻近节点的数据集合，其中，数据集合至少包括：目标邻近节点的空闲算力资源； 根据目标邻近节点的空闲算力资源确定目标空闲算力资源，其中，目标空闲算力资源为目标边缘节点在当前业务运行下的虚拟算力资源；若目标空闲算力资源大于预测算力资源，则将目标空闲算力资源映射为虚拟边缘服务器，以运行当前业务。在一种可选的实施方式中：邻近节点的空闲算力资源和邻近节点的通信时延，其中，基于参数信息确定邻近节点中目标邻近节点的数据集合，包括：根据空闲算力资源计算邻近节点的算力空闲率；根据空闲算力资源、算力空闲率和通信时延确定邻近节点中目标邻近节点的数据集合。在一种可选的实施方式中：根据算力空闲率和通信时延计算出邻近节点的算力权重值；根据空闲算力资源、算力空闲率和通信时延确定邻近节点中的目标邻近节点，其中，目标邻近节点的空闲算力资源和算力权重值作为目标邻近节点的数据集合。在一种可选的实施方式中：算力权重值采用以下公式计算：；其中，为算力权重值，/＞为算力空闲率，/＞为通信时延。在一种可选的实施方式中：算力空闲率采用以下公式计算：；其中，为邻近节点i的算力空闲率，/＞为邻近节点i的空闲算力资源的最大值，/＞为邻近节点i的空闲算力资源的最小值，/＞为邻近节点i的空闲算力资源的平均值，/＞为邻近节点i的算力容量值。在一种可选的实施方式中：在空闲算力资源、算力空闲率和通信时延中的至少一个满足对应条件的情况下，将相对应的邻近节点作为目标邻近节点。在一种可选的实施方式中：对目标邻近节点的算力权重值进行排序；根据排序结果确定最大算力权重值对应的目标邻近节点；将最大算力权重值对应的目标邻近节点的空闲算力资源作为目标空闲算力资源。在一种可选的实施方式中：重新确定最大算力权重值对应的目标邻近节点，并将重新确定的目标邻近节点对应的空闲算力资源与在先确定的目标邻近节点的空闲算力资源进行叠加，直至目标空闲算力资源大于预测算力资源。在一种可选的实施方式中：获取目标边缘节点在历史业务运行下的历史算力资源；依据历史算力资源确定目标边缘节点在当前业务运行下的预测算力资源。在一种可选的实施方式中：将历史算力资源输入至预先训练好的资源预测模型中，输出预测算力资源，并设置预测算力资源对应的通信时延，其中，资源预测模型是通过回声状态网络与长短期记忆网络搭建的。存储单元520可以包括易失性存储单元形式的可读介质，例如随机存取存储单元5201和/或高速缓存存储单元5202，还可以进一步包括只读存储单元5203。存储单元520还可以包括具有一组程序模块5205的程序/实用工具5204，这样的程序模块5205包括但不限于：操作系统、一个或者多个应用程序、其它程序模块以及程序数据，这些示例中的每一个或某种组合中可能包括网络环境的实现。总线530可以为表示几类总线结构中的一种或多种，包括存储单元总线或者存储单元控制器、外围总线、图形加速端口、处理单元或者使用多种总线结构中的任意总线结构的局域总线。电子设备500也可以与一个或多个外部设备600通信，还可与一个或者多个使得用户能与该电子设备500交互的设备通信，和/或与使得该电子设备500能与一个或多个其它计算设备进行通信的任何设备通信。这种通信可以通过输入/输出接口550进行。并且，电子设备500还可以通过网络适配器560与一个或者多个网络，广域网和/或公共网络，例如因特网）通信。如图所示，网络适配器560通过总线530与电子设备500的其它模块通信。应当明白，尽管图中未示出，可以结合电子设备500使用其它硬件和/或软件模块，包括但不限于：微代码、设备驱动器、冗余处理单元、外部磁盘驱动阵列、RAID系统、磁带驱动器以及数据备份存储系统等。通过以上的实施方式的描述，本领域的技术人员易于理解，这里描述的示例实施方式可以通过软件实现，也可以通过软件结合必要的硬件的方式来实现。因此，根据本公开实施方式的技术方案可以以软件产品的形式体现出来，该软件产品可以存储在一个非易失性存储介质中或网络上，包括若干指令以使得一台计算设备执行根据本公开实施方式的方法。此外，上述附图仅是根据本公开示例性实施例的方法所包括的处理的示意性说明，而不是限制目的。易于理解，上述附图所示的处理并不表明或限制这些处理的时间顺序。另外，也易于理解，这些处理可以是例如在多个模块中同步或异步执行的。本领域技术人员在考虑说明书及实践这里公开的发明后，将容易想到本公开的其他实施例。本公开旨在涵盖本公开的任何变型、用途或者适应性变化，这些变型、用途或者适应性变化遵循本公开的一般性原理并包括本公开未公开的本技术领域中的公知常识或惯用技术手段。说明书和实施例仅被视为示例性的，本公开的真正范围和精神由权利要求指出。
