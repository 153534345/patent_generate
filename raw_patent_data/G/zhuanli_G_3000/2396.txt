标题title
一种图相似性搜索方法、装置及计算机存储介质
摘要abst
本发明涉及一种图相似性搜索方法、装置及计算机存储介质。包括步骤：提供包括多个数据图的数据图集合及查询图；确定编辑距离阈值，确定数据图与查询图间的顶点数和边数的差值，从数据图集合中过滤掉差值大于编辑距离阈值的数据图，以获得预候选数据图集合；基于扩展概率将查询图分区，以获得查询图分区集合，查询图分区集合中非重叠分区；确定查询图与预候选数据图集合所包括的数据图间的不匹配分区数，从预候选数据图集合中过滤掉子区域数大于编辑距离阈值的数据图，获得候选数据图集合；构建多层索引；划分索引序列；压缩索引；计算数据图与查询图间的图编辑距离，当此距离小于等于编辑距离阈值时，将查询图加入结果集并返回结果集。
权利要求书clms
1.一种图相似性搜索方法，其特征在于，包括以下步骤：提供查询图和包括多个数据图的数据图集合；确定编辑距离阈值，确定每一所述数据图与所述查询图之间的顶点数和边数的差值，从所述数据图集合中过滤掉顶点数和边数的差值大于所述编辑距离阈值的所述数据图，得到预候选数据图集合；基于扩展概率对所述查询图进行分区以获得查询图分区集合；所述查询图分区集合中包括若干个非重叠分区；所述非重叠分区的数量为所述编辑距离阈值与下界参数值的和；确定所述查询图与所述预候选数据图集合中每一所述数据图之间的不匹配分区数，从所述预候选数据图集合中过滤掉所述不匹配分区数大于所述编辑距离阈值的所述数据图，以获得候选数据图集合；构建多层索引，每一层所述索引配置有子候选查询图集合，每一所述子候选查询图集合均包括多个所述非重叠分区，多个所述子候选查询图集合构成候选查询图集合；所述下界参数值为所述非重叠分区所在的所述索引的层数；划分所述索引序列，并计算所述索引序列中元素相似性差值，设置所述索引序列的压缩阈值；压缩所述索引，当所述元素相似性差值大于所述压缩阈值时，采用分区压缩方法对所述索引进行压缩，当所述元素相似性差值小于或等于所述压缩阈值时，采用差值压缩方法对所述索引进行压缩；计算所述数据图与所述查询图之间的图编辑距离，当所述图编辑距离小于等于编辑距离阈值时，将查询图加入结果集并返回所述结果集。2.根据权利要求1所述的图相似性搜索方法，其特征在于，基于扩展概率对所述查询图进行分区，包括：对所述查询图所包括的顶点进行分配；对所述查询图所包括的跨区域边进行分配。3.根据权利要求2所述的图相似性搜索方法，其特征在于，所述对所述查询图所包括的顶点进行分配包括：随机选取所述非重叠分区的初始顶点，将所述初始顶点扩展为非重叠初始分区；将每一所述初始顶点的邻居顶点加入到所述非重叠初始分区中，计算所述邻居顶点对每一所述非重叠初始分区的贡献值，将所述邻居顶点加入到所述贡献值最大的非重叠初始分区中；当所述贡献值相等时，则将所述邻居顶点随机加入较小的非重叠初始分区中；重复步骤上一步骤，计算每个所述非重叠初始分区的所述邻居顶点对每一所述非重叠初始分区的所述贡献值，直到分配完所有所述邻居顶点。4.根据权利要求3所述的图相似性搜索方法，其特征在于，所述对所述查询图所包括的跨区域边进行分配，包括：所有所述邻居顶点分配完之后，将所述跨区域边分配到其顶点所在的所述非重叠初始分区中，计算所述贡献值，将所述跨区域边分配到所述贡献值最大的所述非重叠初始分区中，以获得所述非重叠分区。5.根据权利要求4所述的图相似性搜索方法，其特征在于，定义所述贡献值为△pi且△pi通过△pi=|s-s|确定；其中，△pi代表贡献值，pi为某一分区；v为初始顶点；s为某一所述分区的扩展概率值；i代表分区数量，1≤i≤编辑距离阈值。6.根据权利要求5所述的图相似性搜索方法，其特征在于，定义所述扩展概率值为s，通过以下方法确定：其中，f表示所述非重叠分区中顶点标签为v的顶点数量；f为所述非重叠分区中边标签为e的边数量；|Vpi|为所述非重叠分区中顶点总数；|Epi|为所述非重叠分区中边总数。7.根据权利要求1所述的图相似性搜索方法，其特征在于，所述构建多层索引包括：在某一层的所述索引中，基于所述扩展概率将所述查询图划分为若干所述非重叠分区，所述非重叠分区的数量为所述编辑距离阈值与所述下界参数值得和；经过层级过滤机制得到该层所述索引对应的子候选查询图集合，所有层所述索引所包括的所述子候选查询图集合共同构成所述候选查询图集合；对所述查询图的每一个所述非重叠分区，维护一个倒排索引表，保存包含上述所述非重叠分区的所有所述数据图。8.根据权利要求7所述的图相似性搜索方法，其特征在于，所述对所述查询图的每一个所述非重叠分区，维护一个倒排索引表，保存包含上述所述非重叠分区的所有所述数据图，包括：在对所述查询图分区的过程中记录所述数据图与所述非重叠分区的顶点标签与边标签的频率，分别记为N和N ，当N≤N时，所述非重叠分区是所述数据图的匹配分区，则保存包含该非重叠分区的所有所述数据图。9.一种图相似性搜索装置，其特征在于，用于实现权利要求1至8任一项所述的图相似性搜索方法，包括：存储模块，用于存储数据图集合，所述数据图集合包括多个数据图；用户界面，用于加载查询图；一级过滤模块，在确定编辑距离阈值，以及确定每一所述数据图与查询图之间的顶点数和边数的差值的基础上，从所述数据图集合中过滤掉所述差值大于所述编辑距离阈值的所述数据图，以获得预候选数据图集合；查询图分区模块，用于基于扩展概率将所述查询图分区，获得查询图分区集合，所述查询图分区集合中包括若干个非重叠分区，所述非重叠分区的数量为所述编辑距离阈值与下界参数值的和；二级过滤模块，在确定所述查询图与所述预候选数据图集合所包括的每一所述数据图之间的不匹配分区数的基础上，从所述预候选数据图集合中过滤掉所述不匹配分区数大于所述编辑距离阈值的所述数据图，以获得候选数据图集合；多层索引构建模块，每一层所述索引配置有子候选查询图集合，每一所述子候选查询图集合均包括多个所述非重叠分区，多个所述子候选查询图集合构成候选查询图集合；所述下界参数值为所述非重叠分区所在的所述索引的层数；索引序列划分模块，用于划分所述索引序列，并计算所述索引序列中元素相似性差值，设置所述索引序列的压缩阈值；索引压缩模块，当所述元素相似性差值大于所述压缩阈值时，采用分区压缩方法对所述索引进行压缩，当所述元素相似性差值小于或等于所述压缩阈值时，采用差值压缩方法对所述索引进行压缩；图相似性搜索模块，计算所述数据图与所述查询图之间的图编辑距离，当所述图编辑距离小于等于编辑距离阈值时，将查询图加入结果集并返回所述结果集。10.一种计算机存储介质，其特征在于，所述计算机存储介质存储有多条指令，所述指令适于由处理器加载并执行如权利要求1-8任一项所述的方法步骤。
说明书desc
技术领域本发明涉及图像搜索技术领域，尤其涉及一种图相似性搜索方法、装置及计算机存储介质。背景技术近年来，随着互联网技术的飞速发展，数据量呈现指数型增长，实现数据的高效存储与检索至关重要。在大数据时代，由于数据实体具有各自的特征属性且大量数据之间存在相互关联的复杂关系，通常将这些数据实体以及数据之间的关系抽象为图结构。面对大规模图数据集，图相似性搜索算法在数据分析中具有重要意义，且已被广泛应用于各个领域，如生化信息学、计算机视觉、模式识别和数据检索等。在图数据集中，对于给定的查询图和编辑距离阈值，根据指定的图相似性度量标准检索所有编辑距离不超过编辑距离阈值的数据图的过程称为图相似性搜索。目前，评估图相似性的度量标准有图编辑距离、最大公共子图和图对齐等。其中，图编辑距离作为最常用的度量保准，基本可以评估所有类型的图，精确计算图之间的结构差异。由于图编辑距离计算是NP-Hard问题，因此现有方法大多采用“过滤-验证”的思路求解图相似性搜索问题，其性能主要取决于候选集大小、过滤得到候选集的代价以及图编辑距离的计算开销。在过滤阶段，通常采用索引构建算法和上下界剪枝策略来快速过滤不满足阈值约束的数据图，得到候选集。但过于松弛的过滤下界导致候选集过大，设计较优的索引结构会缓解这一问题，但会导致索引空间占用较大，然而大部分研究中没有考虑到这一性能瓶颈。在验证阶段，要分别精确计算查询图与候选集中数据图的图编辑距离，该过程需要较大的计算开销。如果过滤阶段能够得到精简的候选集，则会大大降低验证阶段的时间消耗。发明内容本发明的目的在于提供一种图相似性搜索方法、装置及计算机存储介质，以解决现有技术存在的搜索结果不完整、候选集较大、索引空间占用较大以及计算开销大等问题。第一方面，本发明提供一种图相似性搜索方法，包括以下步骤：提供查询图和包括多个数据图的数据图集合；确定编辑距离阈值，确定每一数据图与查询图之间的顶点数和边数的差值，从数据图集合中过滤掉顶点数和边数的差值大于编辑距离阈值的数据图，得到预候选数据图集合；基于扩展概率对查询图进行分区以获得查询图分区集合；查询图分区集合中包括若干个非重叠分区；非重叠分区的数量为编辑距离阈值与下界参数值的和；确定查询图与预候选数据图集合中每一数据图之间的不匹配分区数，从预候选数据图集合中过滤掉不匹配分区数大于编辑距离阈值的数据图，以获得候选数据图集合；构建多层索引，每一层索引配置有子候选查询图集合，每一子候选查询图集合均包括多个非重叠分区，多个子候选查询图集合构成候选查询图集合；下界参数值为非重叠分区所在的索引的层数；划分索引序列，并计算索引序列中元素相似性差值，设置索引序列的压缩阈值；压缩索引，当元素相似性差值大于压缩阈值时，采用分区压缩方法对索引进行压缩，当元素相似性差值小于或等于压缩阈值时，采用差值压缩方法对索引进行压缩；计算数据图与查询图之间的图编辑距离，当图编辑距离小于等于编辑距离阈值时，将查询图加入结果集并返回结果集。与现有技术相比，为解决固定分区导致的下界松散问题以及提高过滤性能，本发明提出基于扩展概率的查询图分区算法，通过引入扩展概率，动态计算查询图与数据图中各顶点与边的匹配情况，最终得到满足上述不相交条件的查询图分区集合。本发明为减少验证阶段图编辑距离的计算次数，防止单一过滤造成的数据适应性，对过滤过程进行了优化，基于全局粗过滤和子图匹配方法，提出层级过滤机制，精简候选数据图集合的大小。在此基础之上，基于编码压缩算法构建“零”索引，降低索引空间占用，使得在有限的空间内实现高效查询。第二方面，本发明还提供一种图相似性搜索装置，用于实现第一方面提供的图相似性搜索方法，包括：存储模块，用于存储数据图集合，数据图集合包括多个数据图；用户界面，用于加载查询图；一级过滤模块，在确定编辑距离阈值，以及确定每一数据图与查询图之间的顶点数和边数的差值的基础上，从数据图集合中过滤掉差值大于编辑距离阈值的数据图，以获得预候选数据图集合；查询图分区模块，用于基于扩展概率将查询图分区，获得查询图分区集合，查询图分区集合中包括若干个非重叠分区，非重叠分区的数量为编辑距离阈值与下界参数值的和；二级过滤模块，在确定查询图与预候选数据图集合所包括的每一数据图之间的不匹配分区数的基础上，从预候选数据图集合中过滤掉不匹配分区数大于编辑距离阈值的数据图，以获得候选数据图集合；多层索引构建模块，每一层索引配置有子候选查询图集合，每一子候选查询图集合均包括多个非重叠分区，多个子候选查询图集合构成候选查询图集合；下界参数值为非重叠分区所在的索引的层数；索引序列划分模块，用于划分索引序列，并计算索引序列中元素相似性差值，设置索引序列的压缩阈值；索引压缩模块，当元素相似性差值大于压缩阈值时，采用分区压缩方法对索引进行压缩，当元素相似性差值小于或等于压缩阈值时，采用差值压缩方法对索引进行压缩；图相似性搜索模块，计算数据图与查询图之间的图编辑距离，当图编辑距离小于编辑距离阈值时，将查询图加入结果集并返回结果集。与现有技术相比，本发明提供的图相似性搜索装置的有益效果与第一方面和/或第一方面任一种实现方式提供的图相似性搜索方法的有益效果相同，在此不做赘述。第三方面，本发明还提供一种计算机存储介质，计算机存储介质存储有多条指令，指令适于由处理器加载并执行第一方面提供的方法步骤。与现有技术相比，本发明提供的计算机存储介质的有益效果与第一方面和/或第一方面任一种实现方式提供的图相似性搜索方法的有益效果相同，在此不做赘述。附图说明此处所说明的附图用来提供对本发明的进一步理解，构成本发明的一部分，本发明的示意性实施例及其说明用于解释本发明，并不构成对本发明的不当限定。在附图中：图1为本发明实施例提供的图相似性搜索方法的流程图；图2为本发明实施例提供的图相似性搜索方法的详细过程图；图3为查询图q和数据图g1、g2的示意图；图4为查询图q的分区情况示意图；图5为基于扩展概率的查询图分区过程示意图；图6a-6c为不同数据集算法的平均候选集大下对比图；图7为不同压缩算法下的索引占用空间情况对比图；图8a-8c为不同数据集算法的查询响应时间对比图；图9a为不同数据集规模的候选集大小对比图；图9b为不同数据集规模的算法查询响应时间对比图。具体实施方式为了使本发明所要解决的技术问题、技术方案及有益效果更加清楚明白，以下结合附图及实施例，对本发明进行进一步详细说明。应当理解，此处所描述的具体实施例仅用以解释本发明，并不用于限定本发明。需要说明的是，当元件被称为“固定于”或“设置于”另一个元件，它可以直接在另一个元件上或者间接在该另一个元件上。当一个元件被称为是“连接于”另一个元件，它可以是直接连接到另一个元件或间接连接至该另一个元件上。此外，术语“第一”、“第二”仅用于描述目的，而不能理解为指示或暗示相对重要性或者隐含指明所指示的技术特征的数量。由此，限定有“第一”、“第二”的特征可以明示或者隐含地包括一个或者更多个该特征。在本发明的描述中，“多个”的含义是两个或两个以上，除非另有明确具体的限定。“若干”的含义是一个或一个以上，除非另有明确具体的限定。在本发明的描述中，需要理解的是，术语“上”、“下”、“前”、“后”、“左”、“右”等指示的方位或位置关系为基于附图所示的方位或位置关系，仅是为了便于描述本发明和简化描述，而不是指示或暗示所指的装置或元件必须具有特定的方位、以特定的方位构造和操作，因此不能理解为对本发明的限制。在本发明的描述中，需要说明的是，除非另有明确的规定和限定，术语“安装”、“相连”、“连接”应做广义理解，例如，可以是固定连接，也可以是可拆卸连接，或一体地连接；可以是机械连接，也可以是电连接；可以是直接相连，也可以通过中间媒介间接相连，可以是两个元件内部的连通或两个元件的相互作用关系。对于本领域的普通技术人员而言，可以根据具体情况理解上述术语在本发明中的具体含义。参见图1和图2，本发明实施例提供的图相似性搜索方法，包括以下步骤：S10. 提供查询图和包括多个数据图的数据图集合。可以将数据图集合定义为G，其包括的数据图定义为g，查询图定义为q。需要进一步解释的是，在提供数据图集合G之前，还包括提供图数据库，该图数据库中可以存储有xml等格式的原始数据图。进一步的还需要对原始数据图做数据预处理，即提取原始数据图中的顶点和边的数量、标签等信息，处理成程序需要的输入格式。作为一种示例，可以将带标签的数据图集合G定义为一个三元组：G={V,E,L}。其中，V表示数据图集合G中的顶点集合，表示边集合，L表示标签标记函数。对于一个数据图g∈G，用Vg和Eg分别表示数据图g中的顶点和边集合，用|Vg|和|Eg|分别表示数据图g中的顶点和边的数量，|G|表示数据图集合G中数据图g的数量。S11. 确定编辑距离阈值，确定每一数据图与查询图之间的顶点数和边数的差值，从数据图集合中过滤掉顶点数和边数的差值大于编辑距离阈值的数据图，得到预候选数据图集合。为了便于理解，下面将以具体的示例解释编辑距离的概念，应理解，以下示例仅作为解释，不作为限定。图编辑距离指的是数据图g转换为查询图q所需的最少编辑距离操作数，用来衡量两个图之间的结构差异。使用GED表示数据图g和查询图q之间的图编辑距离。其中，图编辑距离操作包括以下六点：插入一个新的孤立顶点u；在已有顶点u和v之间插入新边e，e=；删除一个孤立顶点u；删除连接顶点u和v的边e，e=；修改顶点v的标签；修改边e的标签。作为一种示例，参见图3，给定两个数据图g1和g2，则GED=5。其中，g1转换为g2的编辑操作步骤具体体现为：删除连接顶点C，D的边；删除连接顶点A，F的边；删除连接顶点C，F的边；删除顶点F；将顶点C修改为E。该步骤可以定义为一级过滤或者是粗过滤。即在分区之前进行粗粒度过滤，计算数据图g∈G与查询图q之间的顶点和边数的差值LB1，定义如下：其中，|Vg|和|Eg|分别表示数据图g中顶点和边的数量。若LB1＞τ，那么至少需要τ+1次顶点/边的删除或者添加操作才能将数据图g转换到查询图q，则GED≥LB1＞τ，数据图g与查询图q的图编辑距离一定大于阈值τ，所以在未分区之前就可将数据图g过滤掉，得到预候选数据图集合并进行扩展分区，可避免不必要的图分区判断过程。S12. 基于扩展概率将查询图分区，以获得查询图分区集合，查询图分区集合中包括τ+k个非重叠分区，其中k为下界参数值，下界参数值为非重叠分区所在的索引的层数。在详细阐述本步骤之前，以数据图g为例阐述分区过程中所包括的非重叠分区的概念，应理解，以下举例仅作为解释，不作为限定。将数据图根据特定规则划分成两两互斥的独立子结构。本发明实施例提供一种Z-Index算法，对于一个给定的数据图g，将满足以下条件的分区结果表示为P={p1,p2,...,pi}。；；。在Z-Index算法的分区过程中，为解决固定分区导致的下界松散问题，提高过滤性能，提出基于扩展概率的查询图分区算法，通过引入扩展概率值，动态计算图中各顶点与边的匹配情况，最终得到满足上述不相交条件的查询图分区集合P。作为一种示例，参见图4，查询图q被分为4个分区，即P={p1,p2,p3,p4}。其中任意两个分区都不存在重叠部分，且所有分区的并集为完整的查询图q。对于一个非重叠分区pi而言，其扩展依据为：非重叠分区大小和非重叠分区中顶点与边标签出现的频率。其中，非重叠分区大小表示该非重叠分区pi中顶点和边的总数量，即。顶点标签频率表示该分区pi所有顶点中每一类顶点出现的次数，即/＞；同理，边标签频率表示为/＞。如果查询图q中某一非重叠分区pi较大，则其越有可能被编辑距离操作所影响，越不容易被匹配到。同理，某一非重叠分区pi中顶点和边标签频率越高，则其在数据图g中出现的概率也越大，越容易被匹配到。因此，根据扩展概率值s可以快速判断非重叠分区pi与数据图g是否匹配，大大提高过滤效果。对于非重叠分区pi而言，其扩展概率值是s的定义如下：其中，f表示分区中顶点标签为v的顶点数量；f同理。s值越大，表明分区pi越容易被匹配到，即数据图g与查询图q相似的概率越大。对顶点v而言，其加入到分区pi中的贡献值定义为：△pi=|s-s|其中，pi为某一非重叠分区；v为即将加入到非重叠分区pi中的邻居顶点；s为某一所述非重叠分区的扩展概率值。基于扩展概率将查询图分区包括：S120. 提供查询图q。参见图3和图4提供的查询图q。S121. 对查询图q所包括的顶点进行分配。具体可包括：S1210. 随机选取τ+k个初始顶点，将初始顶点扩展为τ+k个非重叠初始分区；S1211 将每一初始顶点的邻居顶点加入到非重叠初始分区中，计算邻居顶点对每一非重叠初始分区的贡献值△pi，将邻居顶点加入到贡献值△pi最大的非重叠初始分区中；当贡献值△pi相等时，则将邻居顶点随机加入较小的非重叠初始分区中；S1212 重复步骤上一步骤，计算每个非重叠初始分区的邻居顶点对每一分区的贡献值△pi，直到分配完所有的邻居顶点。S122. 对查询图q所包括的跨区域边进行分配。所有邻居顶点分配完之后，将跨区域边分配到其顶点所在的非重叠初始分区中并计算贡献值△pi，将跨区域边分配到贡献值△pi最大的非重叠初始分区中，从而获得非重叠分区。作为一种示例，参见图5，设τ=2，k=1，选择顶点B、D和F作为初始顶点，分别标记所在分区为p1，p2和p3，计算得s=s=s。首先进行顶点分配：与上述分区相邻且未分配的邻居顶点有A和B，由于A和B、F相邻，则尝试将邻居顶点A分配到p1和p3中，计算得=0.5,/＞=0.5，则将邻居顶点A随机加入分区p1。由于邻居顶点B与A、D、F相邻，则邻居B可分配到区域p1，p2和p3中，计算得/＞=0.03，/＞=0.17，/＞=0.17，则将邻居顶点B加入分区p2中。此时未分配顶点集合为{A}。由于邻居顶点A只与区域p2相邻，所以将邻居A加入区域p2。此时p1={B,A,a}，p3={F}，p2={D,B,A,b,d}，顶点分配结束。跨区域的边的分配：跨区域的边集合为{a,a,b,c,d}，对于边a，计算=0.75-0.67=0.08，/＞=0.4-0.33=0.07，因为/＞＞/＞，所以将边a加入到p1分区中。同理，将其他边加入到对应分区中。最终得到分区信息为：p1={B,A,a,a,b}，p2={D,B,A,b,d}，p3={F,d,c}。S13. 确定查询图与预候选数据图集合所包括的每一数据图之间的不匹配分区数LB2，从预候选数据图集合中过滤掉LB2＞τ的数据图，以获得候选数据图集合。该步骤可以定义为二级过滤或精细过滤。即，在对预候选数据图集合的分区过程中，计算不匹配分区数，判断数据图g是否可以被过滤。在对查询图q分区的过程中，计算查询图q与每个数据图g之间的不匹配分区数，记为LB2。如果数据图g中不匹配分区数大于编辑距离阈值τ，即LB2＞τ，则该数据图g一定不在编辑距离约束范围内，可以被安全过滤。根据鸽巢原理，每个不匹配分区至少需要一次编辑距离操作才能达到匹配状态，若不匹配分区数大于τ，则至少需要τ+1次操作，因此不再满足编辑距离阈值条件的约束。如图4所示，p1g1，p4/＞g1。p1和p4为图3中g1的匹配分区，而p2和p3为不匹配分区。所以不匹配分区数为2≤τ，数据图g1可能是查询图q相似度搜索的结果，可以放入候选集中，进行下一步图编辑距离GED验证。综上所述，经过层级过滤机制后，满足LB1＞τ或者LB2＞τ的数据图将会被过滤，可以得到更为精简的候选集，大大减少了验证阶段图编辑距离的计算次数。S14. 构建多层索引，每一层索引配置有子候选查询图集合，每一子候选查询图集合均包括多个非重叠分区，多个子候选查询图集合构成候选查询图集合；下界参数值为非重叠分区所在的索引的层数。作为一种示例，对查询图q建立L层“零”索引结构，具体流程如下：在第i层中，基于查询图q扩展概率分区算法将查询图q划分为τ+k个分区，经过层级过滤机制得到该层对应的候选集Ci，最终候选集合。对查询图q的每一个分区p，维护一个倒排索引表I，保存包含该分区的所有数据图g，所有的数据图g构成数据集G。由此，可以在数据集G中快速查找到含有分区p的所有数据图g。现有技术提供的Pars算法在判断数据图g是否匹配分区p时，需要频繁进行子图同构计算。为避免复杂的子图同构计算，本发明实施例提供的Z-Index在查询图q分区的过程中记录数据图g与分区p的顶点与边标签的频率，记为N和N。如果分区p是数据图g的匹配分区，则表示为N≤N，否则视为不匹配分区。根据以上阐述，将第i层中的“零”索引结构定义为：/＞。S15. 划分索引序列，并计算索引序列中元素相似性差值Sgap，设置索引序列的压缩阈值L。作为一种示例，基于编码算法，提出两种有效压缩存储的方法，构建“零”索引序列ZIndex。首先计算索引序列s中的元素相似性差值sgap，并与序列压缩阈值L比较。如果sgap大于压缩阈值l，则采用分区压缩算法；否则，采用差值压缩算法。其中，sgap定义如公式：；其中，|s|表示序列s的长度。S16. 压缩索引，当Sgap＞L时，采用分区压缩方法对索引进行压缩，当Sgap≤L时，采用差值压缩方法对索引进行压缩。作为一种示例，分区压缩算法，对数据分布不均匀的索引序列而言，统一压缩会降低压缩效果。为解决这一问题，本发明实施例提出基于序列划分的索引分区压缩算法，根据数据分布的稀疏情况选择划分长度d，将其划分为若干个子序列分别压缩。例如，对于给定的序列s={1,2,3,4,5,125,130,137,144,158}，如果设置d=5，则序列s可划分为子序列s1和s2，其中s1={1,2,3,4,5}，s2={125,130,137,144,158}，则问题转换为对子序列s1和s2做压缩处理。作为第二种示例，差值压缩算法，该算法保持每个划分中的第一个元素不变，然后依次计算此后相邻两个元素的差值，即s1→s1´={1,1,1,1,1}，s2→s2´={125，5,7,7,14}。最终，对处理过的序列s1´和s2´使用编码算法压缩。常用的编码算法有一元编码、哥伦布编码和指数哥伦布编码等。针对不同的编码算法compress，将会得到不同的“零”索引序列ZIndex：其中，=compress。S17. 计算GED，当GED≤τ时，将查询图加入结果集并返回结果集，其中，GED为数据图与查询图之间的图编辑距离。作为一种示例，假设查询图q及其非重叠分区结果如图4所示，数据图g如图3中g1和g2所示，编辑距离阈值τ=2。在一级过滤阶段，计算LB1=+=1＜τ，LB2=+=5＞τ，因此g2被过滤。在二级过滤阶段，计算q与g1的不匹配分区数为1＜τ，则将g1加入候选集C={g1}。在验证阶段计算GED=3＞τ，则最终结果集R为空，即查询图q与数据图g1和数据图g2的图编辑距离都不在阈值约束范围内。从时间复杂度和空间复杂度两个方面验证本发明实施例提供的图相似性搜索方法的有效性。具体如下：首先在程序初始前，通过遍历预先计算数据库中所有图的顶点和边标签频率，该过程的时间复杂度为O，并且在过滤过程中，可以利用得到的顶点和边标签频率实现过滤，时间复杂度为O。在图分区阶段，将查询图分区并记录分区大小，然后计算分区p的s，其时间复杂度为O。最后建立L层“零”索引并压缩，进一步计算图编辑距离的精确值，因此算法的时间复杂度为O+O))。由于要对查询图分区并建立索引，因此算法的空间复杂度为O，其中|P|表示分区的数量。本发明实施例提出了基于查询图分区的多层级过滤、低索引空间占用的图相似性搜索算法Z-Index。具体的，提出了一种基于扩展概率的查询图分区算法，为每个分区引入一个扩展概率值，即顶点或边分配到当前分区的可能性，将复杂的结构分区过程转换为简单的数值比较，根据该值可以更精确地判断一个分区与数据图是否匹配，提高了过滤效果。第二，提出了层级过滤机制以减少候选集大小。为避免不必要的分区匹配与索引构建，在对查询图分区之前首先采用粗粒度过滤得到预候选集，然后在分区过程中基于子图匹配方法过滤进一步精简候选集，解决了候选集过大的问题。第三，对查询图分区并建立索引，为每个索引序列引入元素相似性差值，来表征该序列的数据分布稀疏度，并在此基础上提出分区压缩和差值压缩两种编码压缩算法，进而建立“零”索引结构，降低索引空间的同时也大大提高了过滤速度，缓解了海量数据图中构建索引带来的空间压力。现有技术提供的过滤-验证计算框架的图相似搜索算法实施方案分为过滤阶段和验证阶段。在过滤阶段，通常采用索引构建算法和上下界剪枝策略来快速过滤不满足阈值约束的数据图，得到候选集。但过于松弛的过滤下界导致候选集过大，设计较优的索引结构会缓解这一问题，但会导致索引空间占用较大，然而大部分研究中没有考虑到这一性能瓶颈。在验证阶段，要分别精确计算查询图与候选集中数据图的图编辑距离，该过程需要较大的计算开销。如果过滤阶段能够得到精简的候选集，则会大大降低验证阶段的时间消耗。实现结果与分析：1.数据集提供三个数据集进行实验，验证本发明实施例提供的方法的性能，并从每个数据集中随机选取100个数据图组成查询图集合Q。统计信息如表1所示，各数据集详细介绍如下。AIDS1：AIDS是来自NCI/HIN发展治疗项目的病毒筛选数据集，用以发现艾滋病病毒。该数据集由42687个化合物组成。IMDB-MULTI2：IMDB-MULTI是一个具有实时可视化分析功能的交互式数据和网络数据存储库，选取其中1500个数据图用于实验。GRAPHGEN3：GRAPHGEN是一个合成图生成器，可用于创建大量的含有标签的数据图，使用该合成图生成器生成10000个数据图。表1三个数据集的统计信息2.实验环境实验的运行环境为Intel Corei7-10700 CPU@2.90GHz，内存为16GB，使用Microsoft Windows 10 64位操作系统。开发环境为Visual Studio2019，开发语言为C++。3.评估指标实验中，编辑距离阈值使用范围设置为τ={1,2,3,4,5,6}，并从以下四个方面进行实验评估：过滤能力分析：使用平均候选集大小|C|、准确率acc和召回率recall来评估层级过滤机制的有效性和准确性，定义如下：其中，|Q|表示查询集大小，|Cq|表示查询图的候选集大小，TP=|C∩R|，TP+TN表示被判断正确的数据图的个数，FN表示被错误过滤的数据图个数。本质上，通过过滤条件的数据图越少，即|C|越小，过滤性能越好。“零”索引构建代价：包含索引构建时间与索引大小。查询响应时间T：表示系统对查询请求做出响应的时间，是衡量图相似性搜索算法的重要指标之一，其定义如下：其中，Tpindex是基于扩展概率的查询图分区时间以及构建“零”索引的时间开销，Tfilter是层级过滤产生候选集合所用的时间，Tged是图编辑距离的计算时间。可扩展性：讨论算法在不同规模数据集上的候选集大小和查询响应时间的变化趋势，来说明算法的可扩展性。4.实验分析为更好地验证本发明实施例提供的方法的性能，选取现有的主流算法Pars和ML-Partition作为对比算法，在上述三个不同规模的数据集上进行实验验证。为保证实验的公平性，避免偶然因素，在每个评估指标下各执行300次查询计算，求取平均值作为最终的实验结果。4.1过滤能力分析为验证层级过滤机制的有效性和准确性，分别使用候选集大小|C|、准确性acc和召回率recall作为评估指标。首先验证有效性，如图6a-6c所示，测试了|C|在不同阈值下的变化情况。其中横坐标表示阈值大小，纵坐标表示候选集中数据图的数量。经过300次查询计算显示，在所有数据集上，随着阈值的增加，候选集逐渐增大，有时甚至约等于整个数据集。由图6a-6c可以看出，在不同数据集上，Z-Index算法得到的候选集最小，约为ML-Partition候选集的50%，其次是ML-Partition，候选集最大的是Pars算法。并且随着编辑距离阈值的增大，Z-Index算法的候选集增长速度明显小于ML-Partition和Pars，表明Z-Index算法可以更大力度地精简候选集，减少验证阶段图编辑距离的计算次数，避免了许多无效的图编辑距离计算，验证了Z-Index算法层级过滤机制的有效性。其次验证准确率和召回率。本部分实验固定阈值τ=3，分别统计Pars、ML-Partition和Z-Index算法产生的候选集大小|C|，然后对候选集中的图精确计算编辑距离，统计不在编辑距离阈值内的数据图个数，计算过滤算法的准确率acc和召回率recall。如表2所示，Z-Index算法得到的acc和recall均略高于Pars和ML-Partition，最高可达到0.945，表明Z-Index算法可以在保证准确性的前提下可以实现较优的过滤效果。表2不同数据集下三种算法的准确率acc和召回率recall4.2“零”索引构建代价分析Z-Index算法主要从两个方面分析索引构建代价：索引空间占用和索引构建时间。在编辑距离阈值τ=3的情况下，测试了不同编码算法下“零”索引的空间占用情况，实验结果如图7所示。在图7中，N代表编码之前的索引大小，U和E分别代表采用一元编码算法和一阶指数哥伦布编码算法时的索引大小。实验表明，在不同数据集上，采用一阶指数哥伦布编码算法具有较好的压缩效果，索引被压缩至原来的3%左右，能更好地体现“零”索引的性能。因此，实验将选取一阶指数哥伦布编码算法作为Z-Index的编码算法。如表3所示，实验测试了在阈值τ=3的情况下，三种算法在不同数据集上的平均索引大小space和索引构建时间time。由表中数据可得，在索引大小和索引构建时间上，Z-Index算法均明显优于ML-Partition和Pars。其中Z-Index的索引大小比ML-Partition和Pars算法中构建的索引要小很多，所用索引空间约降低了一个数量级。原因在于：查询图的数量远少于图数据集中图的数量，因此对查询图分区使得索引空间占用较少；另一方面，索引压缩算法进一步降低了索引大小。在索引构建时间方面，相较于ML-Partition和Pars算法，Z-Index算法由于无需复杂的子图同构计算，索引构建时间最短。综上所述，Z-Index算法通过对查询图分区和构建“零”索引等过程对过滤阶段做出优化，实现了算法的低索引空间占用，降低了索引构建时间，表现出更好的性能。表3 不同数据集下三种算法的索引空间大小与索引构建时间数据统计4.3查询响应时间分析查询响应时间是衡量图相似性搜索算法性能的重要因素。在Z-Index算法中，查询响应时间包括基于扩展概率的查询图分区时间、“零”索引构建时间、层级过滤产生候选集的时间和图编辑距离的计算时间。由4.1和4.2部分的实验结果可得，Z-Index算法在构建索引时所用时间最短，且Z-Index可以得到最小的候选集，使得验证阶段图编辑距离的计算时间低于ML-Partition和Pars。正如如图8a-8c所示，在不同阈值τ下，Z-Index算法的查询响应时间均小于ML-Partition和Pars。并且当阈值较小时，Z-Index算法表现出较好的效果，随着阈值的增大，提升速度逐渐趋于平稳，查询效率的提升区间为9.1%~78.8%。而且，不论在稀疏图数据集AIDS、IMDB-MULTI还是稠密图数据集GRAPHGEN上，Z-Index算法均能取得最短的查询响应时间，验证了本算法适用于各种图数据集。4.4可扩展性分析为测试并比较Z-Index、Pars和ML-Partition算法的可扩展性，本部分实验设置编辑距离阈值τ=3。图9a记录了三种算法在500K-20M的随机数据集上的候选集大小，其中横坐标表示数据集规模，纵坐标表示候选集中数据图的个数。由图9a可知，随着数据集规模的增大，Pars和ML-Partition的候选集大小增长显著，这会导致验证阶段大量的图编辑距离计算。尤其对于Pars算法，当数据集规模超过5M时，程序将出现内存错误，无法得到正确结果，因此图9a中仅给出了Pars在500K和5M规模上的实验数据。而Z-Index产生的候选集大小随数据集规模的增大增长缓慢，尤其对于15M-20M的大规模数据集，Z-Index的候选集的增长速度明显低于ML-Partition，表明Z-Index算法可扩展至较大规模的数据集，且仍具有较好的过滤效果。图9b比较了Z-Index、Pars和ML-Partition在500K-20M随机数据集上的查询响应时间，其中Pars仅在不超过5M的数据集上有效。由图9b可知，随着数据集规模的增大，Z-Index算法的查询响应时间和增长趋势始终低于Pars和ML-Partition，表明数据规模的增大对Z-Index算法影响较小，Z-Index即使在大规模数据集上仍具有较高的查询效率。以上实验验证了Z-Index算法具有良好的可扩展性。第二方面，本发明还提供一种图相似性搜索装置，用于实现第一方面提供的图相似性搜索方法，包括：存储模块，用于存储数据图集合，数据图集合包括多个数据图；用户界面，用于插入查询图；一级过滤模块，在确定编辑距离阈值τ，以及确定每一数据图与查询图之间的顶点数和边数的差值LB1的基础上，从数据图集合中过滤掉LB1＞τ的数据图，以获得预候选数据图集合；查询图分区模块，用于基于扩展概率将查询图分区，获得查询图分区集合，查询图分区集合中包括τ+k个非重叠分区，其中k为下界参数值；二级过滤模块，在确定查询图与预候选数据图集合所包括的每一数据图之间的不匹配的子区域数LB2的基础上，从预候选数据图集合中过滤掉LB2＞τ的数据图，以获得候选数据图集合；多层索引构建模块，每一层索引配置有子候选查询图集合，每一子候选查询图集合均包括多个子区域，多个子候选查询图集合构成候选查询图集合；索引序列划分模块，用于划分索引序列，并计算索引序列中元素相似性差值Sgap，设置序列压缩阈值L；索引压缩模块，当Sgap＞L时，采用分区压缩方法对索引进行压缩，当Sgap≤L时，采用差值压缩方法对索引进行压缩；图相似性搜索模块，计算GED，当GED ≤τ时，将查询图加入结果集并返回结果集，其中，GED为数据图与查询图之间的图编辑距离。与现有技术相比，本发明提供的图相似性搜索装置的有益效果与第一方面和/或第一方面任一种实现方式提供的图相似性搜索方法的有益效果相同，在此不做赘述。第三方面，本发明还提供一种计算机存储介质，计算机存储介质存储有多条指令，指令适于由处理器加载并执行第一方面提供的方法步骤。与现有技术相比，本发明提供的计算机存储介质的有益效果与第一方面和/或第一方面任一种实现方式提供的图相似性搜索方法的有益效果相同，在此不做赘述。在上述实施方式的描述中，具体特征、结构、材料或者特点可以在任何的一个或多个实施例或示例中以合适的方式结合。以上所述，仅为本发明的具体实施方式，但本发明的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本发明揭露的技术范围内，可轻易想到变化或替换，都应涵盖在本发明的保护范围之内。因此，本发明的保护范围应以所述权利要求的保护范围为准。
