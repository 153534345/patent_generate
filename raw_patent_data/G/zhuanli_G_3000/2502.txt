标题title
一种可以简化代码的工业数控方法
摘要abst
本发明公开了一种可以简化代码的工业数控方法，属于电子数字数据处理领域，通过采集多个非标准电信号，并将采集到的非标准电信号转换成标准电信号，再把标准电信号转换成数字信号，并计算出信号数据数字量，再把数据数字量映射到数组；之后将多个传感器和执行器的设置数据经网络传输读入到工艺参数运行数据寄存器组所示的储存区，然后通过预先建立的程序代码分析信号数据数字量，分析逻辑结果是否合格，最后实现通过底层的代码组成功能组件，根据外部的工艺输入，底层算法支撑，通过输入输出关联，组成一套可以根据各种工艺生成的PLC程序数组，编程速度较快，PLC编程操作的难度较小，方便维护与扩展，且方便产品迭代、设备的快速更新。
权利要求书clms
1.一种可以简化代码的工业数控方法，其特征在于：包括以下步骤：S1：采集信号，并转换成数字信号，之后映射到数组；S2：将多个传感器和执行器的设置数据经网络传输读入到工艺参数运行数据寄存器组所示的储存区；所述工艺参数运行数据寄存器组设置有与工艺参数运行数据寄存器组相接的流程图设计器模块，用于对设置数据进行设置；所述储存区利用执行器和传感器的驱动程序，根据每个驱动功能的特点和构件化模型的要求，操作人员通过流程图设计器模块进行编写，生成程序模型函数，对程序模型函数进行积累和管理，建立储存区，所述流程图设计器模块包括有第一编程接口和第二编程接口；在对设置数据进行设置之前，根据所述设置数据调用第一编程接口以控制执行器的执行顺序不被向前调整；在对设置数据进行设置之后，根据所述设置数据调用第二编程接口以控制执行器的执行顺序不被向后调整；S3：通过预先建立的程序代码分析信号数据数字量，分析逻辑结果是否合格，若合格，则判定为合格数据输入至逻辑结果寄存器，若不合格，则判定为不合格数据输入至逻辑结果寄存器。2.根据权利要求1所述的一种可以简化代码的工业数控方法，其特征在于：所述S1包括有以下步骤：S101：采集多个传感器和执行器信号数据模拟量的非标准电信号；S102：并将采集到的非标准电信号通过变送器转换成标准电信号，然后通过模拟量输入单元A/D，把标准电信号转换成数字信号；S103：并计算出信号数据数字量，再把数据数字量映射到数组。3.根据权利要求2所述的一种可以简化代码的工业数控方法，其特征在于：所述S102中，其中将模拟量转换成数字信号的公式为：式中：A为模拟量信号值；A0为模拟量输入信号的最小值；Am为模拟量输入信号的最大值，Dm为Am经A/D转换得到的数值，D0为A0经A/D转换得到的数值，D为A经A/D转换得到的数值。4.根据权利要求1所述的一种可以简化代码的工业数控方法，其特征在于：所述S2中程序模型函数为滤波、线性化、求导、积分、矢量方向投影、自建复合的数学函数模型中的任意一个。5.根据权利要求1所述的一种可以简化代码的工业数控方法，其特征在于：所述S3包括有以下步骤：S301：在设备启动时，根据产品型号，将储存区多行多列的产品数据读入到运行缓存；S302：在主程序运行时，主程序从开始步开始，不断进行步循环，设步指针为i，当程序运行到i步时，扫描S301所述多行多列的产品数据，将第i行数据，读入运行设置寄存器区；S303：当步指针指向的i步，且当前步存有逻辑设置要求时，根据实际的传感器数据，和内部数学模型函数，判定执行运算逻辑，当运算逻辑执行完成后，将执行结果输出到结果寄存器区，并刷新输出控制执行器执行动作，然后步指针i加1，重复S302中的步循环，直到步指针到达最大限制值，然后回到初始步，完成一个周期，不断周期循环。6.根据权利要求1所述的一种可以简化代码的工业数控方法，其特征在于：分析所述信号数据包括有以下步骤：将传感器和执行器采集的信号数据读入到数据寄存器组；当信号数据读入到工艺参数运行数据寄存器组后，获取信号数据中的关键词；根据关键词和工艺参数运行数据寄存器组内部的设备种类进行匹配，判定传感器和执行器的种类；根据传感器和执行器的种类索引与其相对应的程序模型函数；通过该程序模型函数对传感器和执行器的信号数据再次进行分析，判断逻辑结果是否合格。
说明书desc
技术领域本发明涉及电子数字数据处理领域，更具体地说，涉及一种可以简化代码的工业数控方法。背景技术随着社会的发展，对于机械的数字化自动控制，已经成了必然的趋势，其不仅能够大大提高工作效率，还能进一步降低企业成本；但是，现有的现有的机械的数字化自动控制，控制过程高度耦合，实现复杂，兼容性又差，并且修改时，需要专业、有经验的操作人员修改程序代码，专业性要求非常高，不利于维护与扩展技术；不利于装备的快速部署和扩张，不利于产品生命周期结束，产品迭代，设备跟随的快速更新，变化。发明内容针对现有技术中存在的问题，本发明的目的在于提供一种可以简化代码的工业数控方法，它可以实现，组成一套可以根据各种工艺生成的PLC程序数组，提升编程速度，降低PLC编程操作的难度，方便维护与扩展，且方便产品迭代、设备的快速更新。为解决上述问题，本发明采用如下的技术方案。一种可以简化代码的工业数控方法，包括以下步骤：S1：采集信号，并转换成数字信号，之后映射到数组；S2：将多个传感器和执行器的设置数据经网络传输读入到工艺参数运行数据寄存器组所示的储存区；工艺参数运行数据寄存器组设置有与工艺参数运行数据寄存器组相接的流程图设计器模块，用于对设置数据进行设置；储存区利用执行器和传感器的驱动程序，根据每个驱动功能的特点和构件化模型的要求，操作人员通过流程图设计器模块进行编写，生成程序模型函数，对程序模型函数进行积累和管理，建立储存区，流程图设计器模块包括有第一编程接口和第二编程接口；在对设置数据进行设置之前，根据设置数据调用第一编程接口以控制执行器的执行顺序不被向前调整；在对设置数据进行设置之后，根据设置数据调用第二编程接口以控制执行器的执行顺序不被向后调整；S3：通过预先建立的程序代码分析信号数据数字量，分析逻辑结果是否合格，若合格，则判定为合格数据输入至逻辑结果寄存器，若不合格，则判定为不合格数据输入至逻辑结果寄存器；进一步的，S1包括有以下步骤：S101：采集多个传感器和执行器信号数据模拟量的非标准电信号；S102：并将采集到的非标准电信号通过变送器转换成标准电信号，然后通过模拟量输入单元A/D，把标准电信号转换成数字信号；S103：并计算出信号数据数字量，再把数据数字量映射到数组。进一步的，S102中，其中将模拟量转换成数字信号的公式为：式中：A为模拟量信号值；A0为模拟量输入信号的最小值；Am为模拟量输入信号的最大值，Dm为Am经A/D转换得到的数值，D0为A0经A/D转换得到的数值，D为A经A/D转换得到的数值。进一步的，S2中程序模型函数为滤波、线性化、求导、积分、矢量方向投影、自建复合的数学函数模型中的任意一个。进一步的，S3包括有以下步骤：S301：在设备启动时，根据产品型号，将储存区多行多列的产品数据读入到运行缓存；S302：在主程序运行时，主程序从开始步开始，不断进行步循环，设步指针为i，当程序运行到i步时，扫描S301多行多列的产品数据，将第i行数据，读入运行设置寄存器区；S303：当步指针指向的i步，且当前步存有逻辑设置要求时，根据实际的传感器数据，和内部数学模型函数，判定执行运算逻辑，当运算逻辑执行完成后，将执行结果输出到结果寄存器区，并刷新输出控制执行器执行动作，然后步指针i加1，重复S302中的步循环，直到步指针到达最大限制值，然后回到初始步，完成一个周期，不断周期循环。进一步的，分析信号数据包括有以下步骤：将传感器和执行器采集的信号数据读入到数据寄存器组；当信号数据读入到工艺参数运行数据寄存器组后，获取信号数据中的关键词；根据关键词和工艺参数运行数据寄存器组内部的设备种类进行匹配，判定传感器和执行器的种类；根据传感器和执行器的种类索引与其相对应的程序模型函数；通过该程序模型函数对传感器和执行器的信号数据再次进行分析，判断逻辑结果是否合格。3．有益效果：相比于现有技术，本发明的优点在于：本方案通过底层的代码组成功能组件，根据外部的工艺输入，底层算法支撑，通过输入输出关联，组成一套可以根据各种工艺生成的PLC程序数组，编程速度较快，PLC编程操作的难度较小，方便维护与扩展，且方便产品迭代、设备的快速更新。附图说明图1为本发明运行状态的I/O模块图；图2为本发明工艺参数存储的I/O模块图；图3为本发明的步骤流程图；图4为本发明产品参数存储的I/O模块图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述；显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例，基于本发明中的实施例，本领域普通操作人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。请参阅图1-4，一种可以简化代码的工业数控方法，包括以下步骤：步骤一：采集多个传感器和执行器信号数据模拟量的非标准电信号，并将采集到的非标准电信号通过变送器转换成标准电信号，然后通过模拟量输入单元A/D，把标准电信号转换成数字信号，并计算出信号数据数字量，再把数据数字量映射到数组；其中将模拟量转换成数字信号的公式为：式中：A为模拟量信号值；A0为模拟量输入信号的最小值；Am为模拟量输入信号的最大值，Dm为Am经A/D转换得到的数值，D0为A0经A/D转换得到的数值，D为A经A/D转换得到的数值；在此，传感器和执行器的种类可以为多种，其中，传感器可以为数字传感器、模拟传感器和智能传感器中的任意一种；执行器可以为本地PC、远程PC、智能设备、运动单元和NC设备中的任意一种；当有多个同种传感器或执行器时，可对设备进行编号，如具有多个本地PC时，可依次编码为本地PC1、本地PC2、本地PC3、…、本地PCn，多个传感器和执行器可同时进行动作；步骤二：将多个传感器和执行器的设置数据经网络传输读入到工艺参数运行数据寄存器组如图4所示的储存区，设置数据包括参数设置、通过变址、数据；所述工艺参数运行数据寄存器组设置有与工艺参数运行数据寄存器组相接的流程图设计器模块，用于对设置数据进行设置，为每个执行器设置合适的控制参数，以及按实际需求的生产工艺流程对执行器进行控制；所述流程图设计器模块包括有第一编程接口和第二编程接口；在对设置数据进行设置之前，根据所述设置数据调用第一编程接口以控制执行器的执行顺序不被向前调整；在对设置数据进行设置之后，根据所述设置数据调用第二编程接口以控制执行器的执行顺序不被向后调整；所述储存区利用执行器和传感器的驱动程序，根据每个驱动功能的特点和构件化模型的要求，操作人员通过流程图设计器模块进行编写，生成程序模型函数，对程序模型函数进行积累和管理， 从而建立储存区；如图4，当程序运行i=1步的时候，会将i1行的数组读入的i区，当i指针不断变化时，逻辑不断变化的时候，就产生了不断变化的执行器动作；对输入信号，数字传感器有正负两种逻辑；对执行器，逻辑有三种，正负或者保持原状态；以上描述仅针对数字信号，本技术方案中的系统不限于数字信号的处理；在此，传感器和执行器的设置数据可以为工艺参数运行步指针、步参数逻辑命令、步参数人机接口注释、工艺步运行延时设置、工艺步超时看门狗设置…、本地PC命令、远程PC命令、数字传感器正反逻辑设置、模拟传感器上下限，智能传感器上下限、智能设备命令、运动单元命令和NC单元命令等等；其中，工艺参数运行数据寄存器组可以存储在任何可储存数据的存储介质内部，具体的，工艺参数运行数据寄存器组可以存储在内存、存储卡、U盘和电脑硬盘中任意一个之中，其可以通过参数修改人机界面，通过图形菜单和按钮，通过工艺指针，修改工艺步参数并保存。其中，产品参数存储可通过修改产品数据指针，复制，修改，删除产品参数。步骤三：通过预先建立的程序代码分析信号数据，分析逻辑结果是否合格并输入至逻辑结果寄存器；所述步骤三包括有以下步骤：S301：在设备启动时，根据产品型号，将储存区多行多列的产品数据读入到运行缓存；S302：在主程序运行时，主程序从开始步开始，不断进行步循环，设步指针为i，当程序运行到i步时，扫描S301所述多行多列的产品数据，将第i行数据，读入运行设置寄存器区；S303：当步指针指向的i步，且当前步存有逻辑设置要求时，根据实际的传感器数据，和内部数学模型函数，判定执行运算逻辑，当运算逻辑执行完成后，将执行结果输出到结果寄存器区，并刷新输出控制执行器执行动作，然后步指针i加1，重复S302中的步循环，直到步指针到达最大限制值，然后回到初始步，完成一个周期，不断周期循环；工艺气动描述的是数字IO执行逻辑、打开这个封装好的架构，里面包含数字执行器的打开命令，关闭命令，保持不变的命令，这三种情况，都来源于用户的预先设置要求；也包含传感器的正负逻辑，这些要求都来源于工艺的设置需求，由用户自己在图形界面选择设置，同时也包含信号到达是否有延时要求，超时提示等等。具体的，程序代码中包含不同传感器和执行器相对应的程序模型函数，分别用于对不同种类的信号数据进行分析；程序模型函数可以为滤波、线性化、求导、积分、矢量方向投影、自建复合的数学函数模型等等，根据传感器和执行器种类选用相应的程序模型函数。分析信号数据包括有以下步骤：将传感器和执行器采集的信号数据读入到数据寄存器组；当信号数据读入到工艺参数运行数据寄存器组后，获取信号数据中的关键词；根据关键词和工艺参数运行数据寄存器组内部的设备种类进行匹配，判定传感器和执行器的种类；然后根据传感器和执行器的种类索引与其相对应的程序模型函数通过该程序模型函数对传感器和执行器的信号数据再次进行分析，判断逻辑结果是否合格。综上，本技术方案通过采用PLC+HMI，也可以扩展到其它部分硬件平台，程序以批处理执行数组运行，控制接口接入接出适用运行寄存器数组的节点，使硬件接入变得有无限种可能，修改工艺时需要专业的操作人员修改程序代码的工作量减少，装配工艺的变化以修改数组数值来实现，能适应无数种生产任务的场景，可利于维护与扩展技术，实现传感器和执行器的快速部署和扩张，在产品生命周期结束后能够便于产品迭代，设备跟随的快速更新、变化。其标准化、模块化程序，实施快速便捷，便于装配的快速部署和扩张，尤其适合多产品、非同期混线生产，根据产品特性，可以配置多种工装。综上，本技术方案通过底层的代码组成功能组件，根据外部的工艺输入，底层算法支撑，通过输入输出关联，组成一套可以根据各种工艺生成的PLC程序数组，用户完全可以通过中文输入工艺和方式实现，这样就大大提升编程速度，非专业人员了解生产工艺后也能操作这套软件完成PLC编程，降低PLC编程操作的难度 。在上述基础上公开一种产品参数修改的方法，其包括有以下步骤：第一步：入口选择，在主画面截面中选择设置入口，进入参数设定界面；第二步：设置产品，在参数设定界面中建立产品名称，删除、复制、备份产品数据；第三步：构建工艺，选择需要进行的工艺；第四步：工步设置，设置每个工艺的工步，选择人机交互文本信息，当选择文本信息的时候，会激活详细的IO设置菜单；第五步：关联输出数据，选择输出的正负逻辑、延时和超时参数设置；第六步：关联输入数据，选择输入的正负逻辑、延时和超时参数设置。工艺用户可选，传感器执行器用户可选，生成的产品可以保存到产品分类中，因此可以产生无数种组合，这个是本技术方案的独特优势。以上所述，仅为本发明较佳的具体实施方式；但本发明的保护范围并不局限于此。任何熟悉本技术领域的操作人员在本发明揭露的技术范围内，根据本发明的技术方案及其改进构思加以等同替换或改变，都应涵盖在本发明的保护范围内。
