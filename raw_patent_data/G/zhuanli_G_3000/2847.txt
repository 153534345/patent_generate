标题title
用于虚拟机的数据读写方法及系统
摘要abst
本公开涉及一种用于虚拟机的数据读写方法及系统，其中，系统包括：多个存储网络和宿主机，每个宿主机配置有虚拟机进程、存储接入软件，存储接入软件由共享内存队列组、IO发送线程组、IO接收线程组、通道选择器、通道负载均衡器、通道组成；共享内存队列组用于存放读写请求；IO发送线程组用于将读写请求通过指定通道发送至分布式存储系统；IO接收线程组用于从指定通道接收读写请求的响应结果，并写入共享内存队列；通道选择器，用于从多个通道中选择一个有效通道；通道负载均衡器，用于根据每个通道的权重将各读写请求分发给各个通道对应的共享内存队列。根据本公开的技术方案，能够缩短存储IO路径，降低软件架构的复杂性，提升性能和稳定性。
权利要求书clms
1.一种用于虚拟机的数据读写系统，其特征在于，包括：多个存储网络，多个宿主机；其中，多个宿主机与多个存储网络相连；每个所述宿主机配置有与虚拟机对应的虚拟机进程、存储接入软件，所述存储接入软件由共享内存队列组、IO发送线程组、IO接收线程组、通道选择器、通道负载均衡器、通道组成；所述共享内存队列组由多个共享内存队列组成，用于存放所述虚拟机的内部应用程序对虚拟磁盘进行读写时的读写请求；所述IO发送线程组，用于从所述共享内存队列获取所述读写请求，并将所述读写请求通过指定通道发送至分布式存储系统；所述IO接收线程组，用于从指定通道接收所述读写请求的响应结果，并将所述响应结果写入所述共享内存队列；所述通道选择器，用于根据检测结果和所述读写请求的响应结果，从多个通道中选择一个有效通道；所述通道负载均衡器，用于根据每个通道的权重将各读写请求分发给各个通道对应的共享内存队列，其中，所述权重是根据每个存储网络的传输能力确定的。2.一种基于如权利要求1所述系统的数据读写方法，其特征在于，所述方法包括：在虚拟机的内部应用程序对虚拟磁盘进行读写时，虚拟机进程中的虚拟磁盘设备接收到读写请求，并将所述读写请求存放至共享内存队列；基于IO发送线程组从所述共享内存队列获取所述读写请求；根据当前工作模式，基于通道选择器或者通道负载均衡器从多个通道中确定目标通道，并将所述读写请求通过所述目标通道发送至分布式存储系统；基于IO接收线程组从所述目标通道接收所述读写请求的响应结果，并将所述响应结果写入所述共享内存队列。3.如权利要求2所述的方法，其特征在于，所述根据当前工作模式，基于通道选择器或者通道负载均衡器从多个通道中确定目标通道，包括：所述当前工作模式为主备模式，基于通道选择器从多个通道中确定一个第一通道，以作为所述目标通道；所述当前工作模式为多活模式，基于通道负载均衡器通过加权轮询算法从多个通道中确定与当前所述读写请求对应的通道，以作为所述目标通道。4.如权利要求3所述的方法，其特征在于，还包括：所述当前工作模式为主备模式，所述通道选择器定期向各通道发送探测请求；当检测到所述目标通道存在异常，或者，所述目标通道的负载高于阈值的情况下，通道选择器从其他可用通道中确定一个第二通道，以作为所述目标通道。5.如权利要求4所述的方法，其特征在于，还包括：基于IO接收线程组，将共享内存队列中已发送且未收到响应的读写请求，标记为重试状态；基于IO发送线程组，通过所述第二通道重新发送标记为重试状态的读写请求。6.如权利要求2所述的方法，其特征在于，所述共享内存队列的结构由指令区和数据区组成，其中，指令区用于记录读写请求在共享内存队列的元数据，每个读写请求对应一条指令项，所述指令项的结构由请求状态、重发次数、数据起始位置、数据量组成。7.如权利要求6所述的方法，其特征在于，所述共享内存队列基于多段式共享内存空间实现，所述多段式共享内存空间依次由各通道的指令区和各通道的数据区组成。8.如权利要求2所述的方法，其特征在于，还包括：当所述工作模式由主备模式切换至多活模式时，分别针对每个通道分配对应的IO发送线程组和IO接收线程组，并划分对应的共享内存队列的空间；启用通道负载均衡器，并停用通道选择器。9.如权利要求2所述的方法，其特征在于，还包括：当所述工作模式由多活模式切换至主备模式时，启动通道选择器，确定主通道，并停用负载均衡器；停用主通道以外其他通道的IO发送线程组，并由主通道的IO发送线程组接管全部指令区；主通道以外其他通道的IO接收线程组继续完成已发送且未响应的读写请求，直至读写请求处理完成时停用并退出。10.一种用于虚拟机的数据读写装置，其特征在于，包括：请求模块，用于在虚拟机的内部应用程序对虚拟磁盘进行读写时，虚拟机进程中的虚拟磁盘设备接收到读写请求，并将所述读写请求存放至共享内存队列；获取模块，用于基于IO发送线程组从所述共享内存队列获取所述读写请求；发送模块，用于根据当前工作模式，基于通道选择器或者通道负载均衡器从多个通道中确定目标通道，并将所述读写请求通过所述目标通道发送至分布式存储系统；响应模块，用于基于IO接收线程组从所述目标通道接收所述读写请求的响应结果，并将所述响应结果写入所述共享内存队列。
说明书desc
技术领域本公开涉及云计算技术领域，尤其涉及一种用于虚拟机的数据读写方法、装置、设备及存储介质。背景技术在虚拟化或云计算环境下，虚拟机的虚拟硬盘通常由分布式存储提供，通过TCP/IP网络进行访问，为了提升网络链路的可用性，通常搭建两套或多套独立的存储网络，使得虚拟磁盘访问分布式存储的网络链路是冗余的。目前，通常采用iSCSI方式对接分布式存储系统。iSCSI是C/S架构，C端为iSCSI initiator，S端为iSCSI Target，该方式中，读写过程涉及多次用户态和内核态之间的内存拷贝，读写请求在宿主机的IO路径过长，造成系统资源的浪费。发明内容为了解决上述技术问题，本公开提供了一种用于虚拟机的数据读写方法及系统。第一方面，本公开实施例提供了一种用于虚拟机的数据读写系统，包括：多个存储网络，多个宿主机；其中，多个宿主机与多个存储网络相连；每个所述宿主机配置有与虚拟机对应的虚拟机进程、存储接入软件，所述存储接入软件由共享内存队列组、IO发送线程组、IO接收线程组、通道选择器、通道负载均衡器、通道组成；所述共享内存队列组由多个共享内存队列组成，用于存放所述虚拟机的内部应用程序对虚拟磁盘进行读写时的读写请求；所述IO发送线程组，用于从所述共享内存队列获取所述读写请求，并将所述读写请求通过指定通道发送至分布式存储系统；所述IO接收线程组，用于从指定通道接收所述读写请求的响应结果，并将所述响应结果写入所述共享内存队列；所述通道选择器，用于根据检测结果和所述读写请求的响应结果，从多个通道中选择一个有效通道；所述通道负载均衡器，用于根据每个通道的权重将各读写请求分发给各个通道对应的共享内存队列，其中，所述权重是根据每个存储网络的传输能力确定的。第二方面，本公开实施例提供了一种用于虚拟机的数据读写方法，包括：在虚拟机的内部应用程序对虚拟磁盘进行读写时，虚拟机进程中的虚拟磁盘设备接收到读写请求，并将所述读写请求存放至共享内存队列；基于IO发送线程组从所述共享内存队列获取所述读写请求；根据当前工作模式，基于通道选择器或者通道负载均衡器从多个通道中确定目标通道，并将所述读写请求通过所述目标通道发送至分布式存储系统；基于IO接收线程组从所述目标通道接收所述读写请求的响应结果，并将所述响应结果写入所述共享内存队列。可选地，所述根据当前工作模式，基于通道选择器或者通道负载均衡器从多个通道中确定目标通道，包括：所述当前工作模式为主备模式，基于通道选择器从多个通道中确定一个第一通道，以作为所述目标通道；所述当前工作模式为多活模式，基于通道负载均衡器通过加权轮询算法从多个通道中确定与当前所述读写请求对应的通道，以作为所述目标通道。可选地，所述方法还包括：所述当前工作模式为主备模式，所述通道选择器定期向各通道发送探测请求；当检测到所述目标通道存在异常，或者，所述目标通道的负载高于阈值的情况下，通道选择器从其他可用通道中确定一个第二通道，以作为所述目标通道。可选地，所述方法还包括：基于IO接收线程组，将共享内存队列中已发送且未收到响应的读写请求，标记为重试状态；基于IO发送线程组，通过所述第二通道重新发送标记为重试状态的读写请求。可选地，所述共享内存队列的结构由指令区和数据区组成，其中，指令区用于记录读写请求在共享内存队列的元数据，每个读写请求对应一条指令项，所述指令项的结构由请求状态、重发次数、数据起始位置、数据量组成。可选地，所述共享内存队列基于多段式共享内存空间实现，所述多段式共享内存空间依次由各通道的指令区和各通道的数据区组成。可选地，所述方法还包括：当所述工作模式由主备模式切换至多活模式时，分别针对每个通道分配对应的IO发送线程组和IO接收线程组，并划分对应的共享内存队列的空间；启用通道负载均衡器，并停用通道选择器。可选地，所述方法还包括：当所述工作模式由多活模式切换至主备模式时，启动通道选择器，确定主通道，并停用负载均衡器；停用主通道以外其他通道的IO发送线程组，并由主通道的IO发送线程组接管全部指令区；主通道以外其他通道的IO接收线程组继续完成已发送且未响应的读写请求，直至读写请求处理完成时停用并退出。第三方面，本公开实施例提供了一种用于虚拟机的数据读写装置，包括：请求模块，用于在虚拟机的内部应用程序对虚拟磁盘进行读写时，虚拟机进程中的虚拟磁盘设备接收到读写请求，并将所述读写请求存放至共享内存队列；获取模块，用于基于IO发送线程组从所述共享内存队列获取所述读写请求；发送模块，用于根据当前工作模式，基于通道选择器或者通道负载均衡器从多个通道中确定目标通道，并将所述读写请求通过所述目标通道发送至分布式存储系统；响应模块，用于基于IO接收线程组从所述目标通道接收所述读写请求的响应结果，并将所述响应结果写入所述共享内存队列。第四方面，本公开实施例提供了一种电子设备，包括：处理器；用于存储所述处理器可执行指令的存储器；所述处理器，用于从所述存储器中读取所述可执行指令，并执行所述指令以实现上述第二方面所述的用于虚拟机的数据读写方法。第五方面，本公开实施例提供了一种计算机可读存储介质，所述存储介质存储有计算机程序，所述计算机程序被处理器执行时实现上述第二方面所述的用于虚拟机的数据读写方法。本公开实施例提供的技术方案与现有技术相比具有如下优点：能够实现虚拟机多路径的使用存储，缩短存储IO路径，减少组件，降低了软件架构的复杂性，提升了性能和稳定性。附图说明此处的附图被并入说明书中并构成本说明书的一部分，示出了符合本公开的实施例，并与说明书一起用于解释本公开的原理。为了更清楚地说明本公开实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，对于本领域普通技术人员而言，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。图1为本公开实施例所提供的一种用于虚拟机的数据读写系统的示意图；图2为本公开实施例所提供的一种用于虚拟机的数据读写方法的示意图；图3为本公开实施例所提供的一种主备模式的示意图；图4为本公开实施例所提供的一种多活模式的示意图；图5为本公开实施例所提供的一种共享内存空间的示意图；图6为本公开实施例所提供的另一种共享内存空间的示意图；图7为本公开实施例所提供的一种用于虚拟机的数据读写装置的结构示意图。具体实施方式为了能够更清楚地理解本公开的上述目的、特征和优点，下面将对本公开的方案进行进一步描述。需要说明的是，在不冲突的情况下，本公开的实施例及实施例中的特征可以相互组合。在下面的描述中阐述了很多具体细节以便于充分理解本公开，但本公开还可以采用其他不同于在此描述的方式来实施；显然，说明书中的实施例只是本公开的一部分实施例，而不是全部的实施例。本公开实施例提供一种用于虚拟机的数据读写系统，包括：多个存储网络和多个宿主机；其中，存储IO多路径需要多个物理网络实现，多个宿主机与多个存储网络相连。如图1所示，图中示出了基于两个存储网络的数据读写系统示意图。本实施例中，两个存储网络由存储交换机1和存储交换机2分别与每个宿主机的不同网卡相连接组成。每个宿主机配置有与虚拟机对应的虚拟机进程、存储接入软件，所述存储接入软件由共享内存队列组、IO发送线程组、IO接收线程组、通道选择器、通道负载均衡器、通道组成；共享内存队列组由多个共享内存队列组成，用于存放所述虚拟机的内部应用程序对虚拟磁盘进行读写时的读写请求；IO发送线程组，用于从所述共享内存队列获取所述读写请求，并将所述读写请求通过指定通道发送至分布式存储系统；IO接收线程组，用于从指定通道接收所述读写请求的响应结果，并将所述响应结果写入所述共享内存队列；通道选择器，用于根据检测结果和所述读写请求的响应结果，从多个通道中选择一个有效通道；通道负载均衡器，用于根据每个通道的权重将各读写请求分发给各个通道对应的共享内存队列，其中，所述权重是根据每个存储网络的传输能力确定的。本实施例中涉及计算与存储融合的架构，虚拟化提供虚拟机生命周期管理能力，分布式存储系统将宿主机的物理硬盘统一抽象和管理，对外提供存储服务。虚拟机磁盘驱动是虚拟机内部操作系统的一部分，虚拟机磁盘设备是虚拟机进程通过软件模拟的方式提供，Linux系统下虚拟机监视器是Qemu/KVM，对于磁盘的模拟由Qemu提供。本实施例中实现基于分布式存储系统的BlockDriver驱动，简称为DSBD驱动。相较于相关技术中虚拟机通过iSCSI多路径技术实现访问分布式存储系统的架构，iSCSI架构中读写请求从虚拟机进程到iSCSI initiator，再到iSCSITarget，再到内核态，涉及三次用户态和内核态之间的内存拷贝，读写请求在宿主机的IO路径过长，造成系统资源的浪费。并且，实现架构复杂，引入了DeviceMapper、iSCSI initiator、iSCSI Target，同一个宿主机中通过TCP/IP网络传输读写请求，在配置虚拟机存储IO多路径时，需要配置以上引入的软件模块和网络通信端口等，导致配置和管理的复杂，进一步造成软件整体的稳定性降低。由此，本公开实施例的系统，通过以上架构实现虚拟机多路径的使用存储，涉及一次用户态到内核态的内存拷贝，降低系统结构复杂性和IO路径长度，提高了系统性能和稳定性。图2为本公开实施例所提供的一种用于虚拟机的数据读写方法的流程示意图，本公开实施例提供的方法可以由用于虚拟机的数据读写装置来执行，该装置可以采用软件和/或硬件实现，并可集成在任意具有计算能力的电子设备上。如图2所示，本公开实施例提供的用于虚拟机的数据读写方法可包括：步骤201，在虚拟机的内部应用程序对虚拟磁盘进行读写时，虚拟机进程中的虚拟磁盘设备接收到读写请求，并将读写请求存放至共享内存队列。步骤202，基于IO发送线程组从共享内存队列获取读写请求。本实施例的方法，基于上述数据读写系统实现。本实施例中，共享内存队列用于存放读写请求，共享内存队列基于共享内存空间实现。共享内存队列组是由存储接入软件分配的、基于共享内存的环形队列，用于存放读写请求，DSBD驱动将读写请求放入环形队列。IO发送线程组由一个或多个线程组成，线程的工作是从共享内存队列获取读写请求，将读写请求处理后，通过指定通道发送到分布式存储系统。步骤203，根据当前工作模式，基于通道选择器或者通道负载均衡器从多个通道中确定目标通道，并将所述读写请求通过所述目标通道发送至分布式存储系统。其中，存储接入软件的工作模式包括主备模式和多活模式。通道为与分布式存储建立TCP/IP连接的封装，每个存储网络建立一个通道。通道选择器，根据读写请求的结果与自身探测的结果，选择一个有效的通道。通道负载均衡器，根据每个存储网络的传输能力，对每个通道设置权重，基于权重值将读写请求分发给各个通道对应的共享内存队列。在本公开的一个实施例中，主备模式下，多个存储网络中同时只有一个存储网络用于传输数据，存接入软件通过多个存储网络分别建立通道与分布式存储系统连接，多个通道同时只有一个生效。IO发送线程从共享内存队列获取读写请求，通过通道选择器选择一个主通道，将读写请求通过该通道发送给分布式存储系统。对于如图1所示的系统，存接入软件通过两个存储网络分别建立通道1和通道2与分布式存储系统连接，这两个通道同时只有一个生效。参照图3，当前工作模式为主备模式，基于通道选择器从多个通道中确定一个第一通道，以作为传输所有读写请求的目标通道。可选地，主备模式下，通道选择器定期向各通道发送探测请求，当检测到所述目标通道存在异常，或者，所述目标通道的负载高于阈值的情况下，通道选择器从其他可用通道中确定一个第二通道，以作为所述目标通道。其中，通道选择器将定期向各个通道发送探测请求，如果发生某个通道连接断开、超时等异常，或者正在使用的通道负载与其他可用通道负载之间差值大于阈值的情况，通道选择器切换其他可用通道作为主备模式下的主通道。可选地，基于IO接收线程组，将共享内存队列中已发送且未收到响应的读写请求，标记为重试状态，基于IO发送线程组，通过所述第二通道重新发送标记为重试状态的读写请求。在本公开的一个实施例中，多活模式下，多个存储网络同时使用，则针对每个通道分别配置共享内存队列、IO发送线程组和IO接收线程组。对于上述步骤，DSBD驱动接收到读写请求后，将读写请求交给通道负载均衡器，通道负载均衡器通过加权轮询算法将读写请求放入对应通道的共享内存队列中，后续IO发送线程和IO接收线程的处理方式与主备模式相同。参照图4，基于通道负载均衡器通过加权轮询算法从多个通道中确定与当前所述读写请求对应的通道，以作为目标通道。需要说明的是，图4所示的两个共享内存空间是逻辑示意，此处不应理解为对本申请的限制。步骤204，基于IO接收线程组从目标通道接收读写请求的响应结果，并将响应结果写入共享内存队列。其中，在主备模式下，IO接收线程组从当前主通道接收读写请求的响应结果，并将响应结果写入共享内存队列。在多活模式下，对于某一通道，该通道的IO接收线程组从该通道接收读写请求的响应结果，并将响应结果写入该通道对应的共享内存队列。IO接收线程组由一个或多个线程组成，线程的工作是从通道接收读写请求的响应，经过处理后，将读写请求的结果写入到共享内存队列。本实施例中，共享内存队列的结构由指令区和数据区组成，其中，指令区用于记录读写请求在共享内存队列的元数据，每个读写请求对应一条指令项，所述指令项的结构由请求状态、重发次数、数据起始位置、数据量组成。作为一种示例，如图5所示，指令项的结构包括status、retries、offset和size。其中，status占用4bit，表示请求状态：待发送、待重试、已完成、出错等。retries占用6bit，表示该请求在该通道重新发送的次数。offset占用32bit，表示该指令对应的数据在数据区的起始位置，数据区最大4GB。size占用22bit，表示指令对应的读写请求的数据量，最大为4MB，虚拟磁盘的硬件队列的最大深度为1024，因此数据区最大为4GB。下面对共享内存空间进行说明。本实施例中，共享内存队列基于多段式共享内存空间实现，多段式共享内存空间依次由各通道的指令区和各通道的数据区组成，例如图6所示，对于两个通道的系统，在多活模式下，多段式共享内存空间依次为通道1指令区、通道2指令区、通道1数据区、通道2数据区。可选地，指令区的项数与虚拟磁盘队列深度相同，多个通道可以共享队列，通过划分区间可以实现无锁访问的安全性，如图6中通道1和通道2的指令区和数据区均是独享的。进一步地，主备模式适用于虚拟磁盘负载较小时，多活模式适用于虚拟磁盘高负载时，本实施例中支持主备模式和多活模式之间自由转换，相较于现有实现方式中需要在启动时配置一种模式，配置完成后非重启不能修改，本实施例中可以灵活切换主备模式和多活模式，无需重启系统。下面对工作模式的切换进行说明。当所述工作模式由主备模式切换至多活模式时，分别针对每个通道分配对应的IO发送线程组和IO接收线程组，并划分对应的共享内存队列的空间；启用通道负载均衡器，并停用通道选择器。主备模式下，原工作通道在切换过程中，可能存在已发送且未响应的读写请求对应的指令区被划分到其他通道管理，此类读写请求继续由原IO接收线程处理，无需特殊处理。当所述工作模式由多活模式切换至主备模式时，启动通道选择器，确定主通道，并停用负载均衡器；停用主通道以外其他通道的IO发送线程组，并由主通道的IO发送线程组接管全部指令区；主通道以外其他通道的IO接收线程组继续完成已发送且未响应的读写请求，直至读写请求处理完成时停用并退出。由此，实现灵活切换主备模式和多活模式，且几乎不增加系统的开销，使得虚拟磁盘能适应更加复杂负载。根据本公开实施例的技术方案，能够实现虚拟机多路径的使用存储，缩短存储IO路径，减少组件，降低了软件架构的复杂性，提升了性能和稳定性。图7为本公开实施例所提供的一种用于虚拟机的数据读写装置的结构示意图，如图7所示，该用于虚拟机的数据读写装置包括：请求模块71，获取模块72，发送模块73，响应模块74。其中，请求模块71，用于在虚拟机的内部应用程序对虚拟磁盘进行读写时，虚拟机进程中的虚拟磁盘设备接收到读写请求，并将所述读写请求存放至共享内存队列；获取模块72，用于基于IO发送线程组从所述共享内存队列获取所述读写请求；发送模块73，用于根据当前工作模式，基于通道选择器或者通道负载均衡器从多个通道中确定目标通道，并将所述读写请求通过所述目标通道发送至分布式存储系统；响应模块74，用于基于IO接收线程组从所述目标通道接收所述读写请求的响应结果，并将所述响应结果写入所述共享内存队列。在本公开的一个实施例中，发送模块73具体用于：所述当前工作模式为主备模式，基于通道选择器从多个通道中确定一个第一通道，以作为所述目标通道；所述当前工作模式为多活模式，基于通道负载均衡器通过加权轮询算法从多个通道中确定与当前所述读写请求对应的通道，以作为所述目标通道。在本公开的一个实施例中，该装置还包括：选择模块，用于所述当前工作模式为主备模式，所述通道选择器定期向各通道发送探测请求；当检测到所述目标通道存在异常，或者，所述目标通道的负载高于阈值的情况下，通道选择器从其他可用通道中确定一个第二通道，以作为所述目标通道。在本公开的一个实施例中，该装置还包括：重试模块，用于基于IO接收线程组，将共享内存队列中已发送且未收到响应的读写请求，标记为重试状态；基于IO发送线程组，通过所述第二通道重新发送标记为重试状态的读写请求。在本公开的一个实施例中，所述共享内存队列的结构由指令区和数据区组成，其中，指令区用于记录读写请求在共享内存队列的元数据，每个读写请求对应一条指令项，所述指令项的结构由请求状态、重发次数、数据起始位置、数据量组成。在本公开的一个实施例中，所述共享内存队列基于多段式共享内存空间实现，所述多段式共享内存空间依次由各通道的指令区和各通道的数据区组成。在本公开的一个实施例中，该装置还包括：第一切换模块，用于当所述工作模式由主备模式切换至多活模式时，分别针对每个通道分配对应的IO发送线程组和IO接收线程组，并划分对应的共享内存队列的空间；启用通道负载均衡器，并停用通道选择器。在本公开的一个实施例中，该装置还包括：第二切换模块，用于当所述工作模式由多活模式切换至主备模式时，启动通道选择器，确定主通道，并停用负载均衡器；停用主通道以外其他通道的IO发送线程组，并由主通道的IO发送线程组接管全部指令区；主通道以外其他通道的IO接收线程组继续完成已发送且未响应的读写请求，直至读写请求处理完成时停用并退出。本公开实施例所提供的用于虚拟机的数据读写装置可执行本公开实施例所提供的任意用于虚拟机的数据读写方法，具备执行方法相应的功能模块和有益效果。本公开装置实施例中未详尽描述的内容可以参考本公开任意方法实施例中的描述。本公开实施例还提供的一种电子设备，电子设备包括一个或多个处理器和存储器。处理器可以是中央处理单元或者具有数据处理能力和/或指令执行能力的其他形式的处理单元，并且可以控制电子设备中的其他组件以执行期望的功能。存储器可以包括一个或多个计算机程序产品，计算机程序产品可以包括各种形式的计算机可读存储介质，例如易失性存储器和/或非易失性存储器。易失性存储器例如可以包括随机存取存储器和/或高速缓冲存储器等。非易失性存储器例如可以包括只读存储器、硬盘、闪存等。在计算机可读存储介质上可以存储一个或多个计算机程序指令，处理器可以运行程序指令，以实现上文的本公开的实施例的方法以及/或者其他期望的功能。在计算机可读存储介质中还可以存储诸如输入信号、信号分量、噪声分量等各种内容。在一个示例中，电子设备还可以包括：输入装置和输出装置，这些组件通过总线系统和/或其他形式的连接机构互连。此外，该输入装置还可以包括例如键盘、鼠标等等。该输出装置可以向外部输出各种信息，包括确定出的距离信息、方向信息等。该输出装置可以包括例如显示器、扬声器、打印机、以及通信网络及其所连接的远程输出设备等等。除此之外，根据具体应用情况，电子设备还可以包括诸如总线、输入/输出接口等任何其他适当的组件。除了上述方法和设备以外，本公开的实施例还可以是计算机程序产品，其包括计算机程序指令，计算机程序指令在被处理器运行时使得处理器执行本公开实施例所提供的任意方法。计算机程序产品可以以一种或多种程序设计语言的任意组合来编写用于执行本公开实施例操作的程序代码，程序设计语言包括面向对象的程序设计语言，诸如Java、C++等，还包括常规的过程式程序设计语言，诸如“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算设备上执行、部分地在用户设备上执行、作为一个独立的软件包执行、部分在用户计算设备上部分在远程计算设备上执行、或者完全在远程计算设备或服务器上执行。此外，本公开的实施例还可以是计算机可读存储介质，其上存储有计算机程序指令，计算机程序指令在被处理器运行时使得处理器执行本公开实施例所提供的任意方法。计算机可读存储介质可以采用一个或多个可读介质的任意组合。可读介质可以是可读信号介质或者可读存储介质。可读存储介质例如可以包括但不限于电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。可读存储介质的更具体的例子包括：具有一个或多个导线的电连接、便携式盘、硬盘、随机存取存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。需要说明的是，在本文中，诸如“第一”和“第二”等之类的关系术语仅仅用来将一个实体或者操作与另一个实体或操作区分开来，而不一定要求或者暗示这些实体或操作之间存在任何这种实际的关系或者顺序。而且，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括所述要素的过程、方法、物品或者设备中还存在另外的相同要素。以上所述仅是本公开的具体实施方式，使本领域技术人员能够理解或实现本公开。对这些实施例的多种修改对本领域的技术人员来说将是显而易见的，本文中所定义的一般原理可以在不脱离本公开的精神或范围的情况下，在其它实施例中实现。因此，本公开将不会被限制于本文所述的这些实施例，而是要符合与本文所公开的原理和新颖特点相一致的最宽的范围。
