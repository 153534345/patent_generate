标题title
基于端到端的事件处理引擎
摘要abst
本发明属于流程控制领域，具体涉及基于端到端的事件处理引擎。所述引擎包括：多个以区块链网络结构相连的子引擎；每个子引擎均包括：事件请求响应单元、事件核心构建单元、事件半径构建单元、事件区域构建单元、事件控制单元、事件处理单元、标识位；所述事件请求响应单元，配置用于响应子引擎自身接收到的事件请求，将接收到的事件请求进行暂存，同时发送启动命令至事件核心构建单元；所述时间核心构建单元，配置用于响应于事件请求响应单元的启动命令，基于事件请求，生成事件核心。其基于区块链结构，构建去中心化的事件响应系统，通过广播方式进行事件命令的发送和接收，大幅度提升了事件处理的效率，同时也保证了事件管理的安全性。
权利要求书clms
1.基于端到端的事件处理引擎，其特征在于，所述引擎包括：多个以区块链网络结构相连的子引擎；每个子引擎均包括：事件请求响应单元、事件核心构建单元、事件半径构建单元、事件区域构建单元、事件控制单元、事件处理单元、标识位；所述事件请求响应单元，配置用于响应子引擎自身接收到的事件请求，将接收到的事件请求进行暂存，同时发送启动命令至事件核心构建单元；所述时间核心构建单元，配置用于响应于事件请求响应单元的启动命令，基于事件请求，生成事件核心；所述事件核心的生成过程包括：对事件请求进行分析，生成一个标志该事件的标识，以标识作为事件核心；事件半径构建单元，配置用于向外部发送广播信号，以确定自身子引擎与最近的其他的子引擎的距离，以该距离作为事件半径；事件区域构建单元，配置用于以自身作为圆心，与事件半径为半径，构建一个圆形区域，作为事件区域；事件控制单元，配置用于将事件核心和事件请求打包作为一个数据泡在事件区域内发射，并控制数据泡当与自身的距离达到半径后，向减少该距离的任意方向进行弹射，直到该数据泡内的事件核心在事件区域内接触到其他子引擎，同时该事件核心对应的标识与其他子引擎的标识位相匹配，若在设定的时间周期内未接触到其他相匹配的子引擎，则控制时间区域的半径增大，使得时间区域向外扩张，直到该数据泡在事件区域内接触到其他相匹配的子引擎；所述事件处理单元，配置用于接收来自其它子引擎的数据泡，并根据数据泡内的数据请求进行处理。2.如权利要求1所述的基于端到端的事件处理引擎，其特征在于，所述事件请求为一个请求集合，该集合内至少包括以下元素：请求类型、请求时间、请求优先级和请求内容队列。3.如权利要求2所述的基于端到端的事件处理引擎，其特征在于，所述请求内容队列中包含多个请求指令；所述请求指令按照先后顺序进行排列，组成内容队列，且在排列时，设置处于中间位置的请求指令为起始响应指令。4.如权利要求3所述的基于端到端的事件处理引擎，其特征在于，所述事件核心在生成过程中对事件请求进行分析，生成一个标志该事件的标识的方法包括：使用如下公式，生成标志该时间的标识：；其中，为请求优先级，表示进行MD5运算，为请求类型，为生成的标识，为请求时间；为连接符。5.如权利要求4所述的基于端到端的事件处理引擎，其特征在于，所述事件半径构建单元，向外部发送广播信号，以确定自身子引擎与最近的其他的子引擎的距离的方法包括：在设定的一个时间范围内，以一定的时间延迟，分别向外部发送两个广播信号，在前发射的广播信号中包含一个特征标志位，在接触到其他子引擎后，该特征标志位将被接触到的子引擎捕获；在后发射的广播信号也包含一个特征标志位，在接触到一个子引擎后，子引擎也将该特征标志位进行捕获；在设定的时间范围结束，接收到特征标志位的子引擎都将自己的特征标志位的捕获时间进行广播，时间半径构建单元在接收到其他子引擎发送的广播后，根据其对应的捕获时间的先后，确定出自身子引擎最近的其他的子引擎，并计算出相应的距离。6.如权利要求5所述的基于端到端的事件处理引擎，其特征在于，所述事件控制单元，将事件核心和时间请求打包作为一个数据泡的方法包括：将事件核心设置在外围，将事件请求设置在内部，同时在外围和内部之间设置一个边界；该边界为一个加密码。7.如权利要求6所述的基于端到端的事件处理引擎，其特征在于，所述边界的加密码生成的方法包括：基于一个生成的字符串进行多进制加密以生成多进制隐藏加密信息；根据加密码版本级别选择对应的加密码版本对标准信息进行加密以生成待定标准加密信息；根据所述待定标准加密信息选择对应的掩码生成所述加密码的比特矩阵，并提取所述比特矩阵中黑点的点数；根据所述比特矩阵中黑点的点数与所述隐藏加密信息的长度对选择的所述掩码和所述加密码版本进行更新以确定最终选择的掩码和加密码版本，其中，当所述隐藏加密信息的长度小于所述比特矩阵中黑点的点数时，将当前的掩码和当前的加密码版本作为所述最终选择的掩码和加密码版本；根据所述最终选择的掩码和加密码版本生成标准加密信息；以及根据所述隐藏加密信息和所述标准加密信息生成所述加密码。8.如权利要求7所述的基于端到端的事件处理引擎，其特征在于，所述基于一个生成的字符串进行多进制加密以生成多进制隐藏加密信息的方法包括：将字符串进行分割；在分割后的每组字符串的预设位置处插入第一预设个数的随机数，生成新的分割字符串；使用预设的多进制加密算法分别对分割的所述各密钥段进行加密，得到第一加密结果；在第一加密结果的基础上添加遮罩数据，生成多进制隐藏加密信息。9.如权利要求8所述的基于端到端的事件处理引擎，其特征在于，所述在第一加密结果的基础上添加遮罩数据，生成多进制隐藏加密信息的方法包括：将第一加密结果放入一个随机数据集合中，随机数据结合作为遮罩数据。10.如权利要求9所述的基于端到端的事件处理引擎，其特征在于，在所述第一加密结果放入随机数据集合后，对随机数据集合进行顺序打乱操作。
说明书desc
技术领域本发明属于流程控制技术领域，具体涉及基于端到端的事件处理引擎。背景技术在生产活动中，涉及到对生产流程的控制。在流程控制中，事件处理是关键。因为流程控制的核心就是对于事件的管理。比如在化工企业有质检，在运输材料快到达企业时进行提醒，质检直接去质检材料，质检通过后,会放行，可以卸货，这个过程就可以视为一个事件的完成。在现有技术中，事件的管理是通过统筹来进行的，即设置一个总的调控设备，通过这个设备来实现系统内所有事件的调度和安排。这种方式可以保证事件管理的安全性，也实现了事件管理的自动化。但存在的缺陷在于，这种管理方式的效率较低。即便是在并行处理的系统中，同时受处理的事件数量也是有限的。专利申请号为CN201210146321.3A的专利公开了一种用于选择性地加快装置之间的连接建立的系统。在至少一个示例实现中，一种装置可以至少包括控制实体和通信实体。所述控制实体可以将命令传送到所述通信实体，所述命令指示所述通信实体来设置特定的操作参数。然后，所述通信实体可以发送对所述命令的响应，并且所述控制实体可以基于所述响应来确定是否已经在所述通信实体中设置了所述特定的操作参数。如果已经设置了所述特定的操作参数，则所述控制实体可以在所述装置中启动第一设备发现模式。替代地，如果确定在所述通信实体中尚未设置所述特定的操作参数，则可以由所述控制实体来启动第二设备发现模式。该发明通过参数响应的方式来实现命令传送至各个通信实体，某种意义上实现了一种总分的流程控制和事件处理方法，但其本质上依然是通过统一调度的方式，使得效率较低。发明内容有鉴于此，本发明的主要目的在于提供基于端到端的事件处理引擎，其基于区块链结构，构建去中心化的事件响应系统，通过广播方式进行事件命令的发送和接收，大幅度提升了事件处理的效率，同时也保证了事件管理的安全性。为达到上述目的，本发明的技术方案是这样实现的：基于端到端的事件处理引擎，所述引擎包括：多个以区块链网络结构相连的子引擎；每个子引擎均包括：事件请求响应单元、事件核心构建单元、事件半径构建单元、事件区域构建单元、事件控制单元、事件处理单元、标识位；所述事件请求响应单元，配置用于响应子引擎自身接收到的事件请求，将接收到的事件请求进行暂存，同时发送启动命令至事件核心构建单元；所述时间核心构建单元，配置用于响应于事件请求响应单元的启动命令，基于事件请求，生成事件核心；所述事件核心的生成过程包括：对事件请求进行分析，生成一个标志该事件的标识，以标识作为事件核心；事件半径构建单元，配置用于向外部发送广播信号，以确定自身子引擎与最近的其他的子引擎的距离，以该距离作为事件半径；事件区域构建单元，配置用于以自身作为圆心，与事件半径为半径，构建一个圆形区域，作为事件区域；事件控制单元，配置用于将事件核心和事件请求打包作为一个数据泡在事件区域内发射，并控制数据泡当与自身的距离达到半径后，向减少该距离的任意方向进行弹射，直到该数据泡内的事件核心在事件区域内接触到其他子引擎，同时该事件核心对应的标识与其他子引擎的标识位相匹配，若在设定的时间周期内未接触到其他相匹配的子引擎，则控制时间区域的半径增大，使得时间区域向外扩张，直到该数据泡在事件区域内接触到其他相匹配的子引擎；所述事件处理单元，配置用于接收来自其它子引擎的数据泡，并根据数据泡内的数据请求进行处理。进一步的，所述事件请求为一个请求集合，该集合内至少包括以下元素：请求类型、请求时间、请求优先级和请求内容队列。进一步的，所述请求内容队列中包含多个请求指令；所述请求指令按照先后顺序进行排列，组成内容队列，且在排列时，设置处于中间位置的请求指令为起始响应指令。进一步的，所述事件核心在生成过程中对事件请求进行分析，生成一个标志该事件的标识的方法包括：使用如下公式，生成标志该时间的标识：；其中，为请求优先级，表示进行MD5运算，为请求类型，为生成的标识，为请求时间；为连接符。进一步的，所述事件半径构建单元，向外部发送广播信号，以确定自身子引擎与最近的其他的子引擎的距离的方法包括：在设定的一个时间范围内，以一定的时间延迟，分别向外部发送两个广播信号，在前发射的广播信号中包含一个特征标志位，在接触到其他子引擎后，该特征标志位将被接触到的子引擎捕获；在后发射的广播信号也包含一个特征标志位，在接触到一个子引擎后，子引擎也将该特征标志位进行捕获；在设定的时间范围结束，接收到特征标志位的子引擎都将自己的特征标志位的捕获时间进行广播，时间半径构建单元在接收到其他子引擎发送的广播后，根据其对应的捕获时间的先后，确定出自身子引擎最近的其他的子引擎，并计算出相应的距离。进一步的，所述事件控制单元，将事件核心和时间请求打包作为一个数据泡的方法包括：将事件核心设置在外围，将事件请求设置在内部，同时在外围和内部之间设置一个边界；该边界为一个加密码。进一步的，所述边界的加密码生成的方法包括：基于一个生成的字符串进行多进制加密以生成多进制隐藏加密信息；根据加密码版本级别选择对应的加密码版本对标准信息进行加密以生成待定标准加密信息；根据所述待定标准加密信息选择对应的掩码生成所述加密码的比特矩阵，并提取所述比特矩阵中黑点的点数；根据所述比特矩阵中黑点的点数与所述隐藏加密信息的长度对选择的所述掩码和所述加密码版本进行更新以确定最终选择的掩码和加密码版本，其中，当所述隐藏加密信息的长度小于所述比特矩阵中黑点的点数时，将当前的掩码和当前的加密码版本作为所述最终选择的掩码和加密码版本；根据所述最终选择的掩码和加密码版本生成标准加密信息；以及根据所述隐藏加密信息和所述标准加密信息生成所述加密码。进一步的，所述基于一个生成的字符串进行多进制加密以生成多进制隐藏加密信息的方法包括：将字符串进行分割；在分割后的每组字符串的预设位置处插入第一预设个数的随机数，生成新的分割字符串；使用预设的多进制加密算法分别对分割的所述各密钥段进行加密，得到第一加密结果；在第一加密结果的基础上添加遮罩数据，生成多进制隐藏加密信息。进一步的，所述在第一加密结果的基础上添加遮罩数据，生成多进制隐藏加密信息的方法包括：将第一加密结果放入一个随机数据集合中，随机数据结合作为遮罩数据。进一步的，在所述第一加密结果放入随机数据集合后，对随机数据集合进行顺序打乱操作。本发明的一种基于虚拟现实的强夯地基可视化管理系统，具有如下有益效果：1.效率高：首先通过去中心化的子引擎连接，可以避免使用统一的管理终端进行管理，实现端到端的事件处理；另外，在进行事件的发送和接收时，也没有使用传统的点对点通信，而是使用的基于广播的扩散方式，更进一步提升了效率。2.安全性高：本发明在进行数据泡的弹射时，将用于识别的事件核心放置在外层，在内层为请求，且在内外之间设置加密码用以保护内层的请求不会轻易被破解，提升了安全性。附图说明图1为本发明实施例提供的基于端到端的事件处理引擎的子引擎结构示意图；图2为本发明实施例提供的基于端到端的事件处理引擎的数据泡的结构示意图；图3为本发明实施例提供的基于端到端的事件处理引擎的内容队列的结构示意图。具体实施方式下面结合附图及本发明的实施例对本发明的方法作进一步详细的说明。实施例1如图1所示，基于端到端的事件处理引擎，所述引擎包括：多个以区块链网络结构相连的子引擎；每个子引擎均包括：事件请求响应单元、事件核心构建单元、事件半径构建单元、事件区域构建单元、事件控制单元、事件处理单元、标识位；所述事件请求响应单元，配置用于响应子引擎自身接收到的事件请求，将接收到的事件请求进行暂存，同时发送启动命令至事件核心构建单元；所述时间核心构建单元，配置用于响应于事件请求响应单元的启动命令，基于事件请求，生成事件核心；所述事件核心的生成过程包括：对事件请求进行分析，生成一个标志该事件的标识，以标识作为事件核心；事件半径构建单元，配置用于向外部发送广播信号，以确定自身子引擎与最近的其他的子引擎的距离，以该距离作为事件半径；事件区域构建单元，配置用于以自身作为圆心，与事件半径为半径，构建一个圆形区域，作为事件区域；事件控制单元，配置用于将事件核心和事件请求打包作为一个数据泡在事件区域内发射，并控制数据泡当与自身的距离达到半径后，向减少该距离的任意方向进行弹射，直到该数据泡内的事件核心在事件区域内接触到其他子引擎，同时该事件核心对应的标识与其他子引擎的标识位相匹配，若在设定的时间周期内未接触到其他相匹配的子引擎，则控制时间区域的半径增大，使得时间区域向外扩张，直到该数据泡在事件区域内接触到其他相匹配的子引擎；所述事件处理单元，配置用于接收来自其它子引擎的数据泡，并根据数据泡内的数据请求进行处理。具体的，广播的扩散方式虽然相较于传统的技术，其数据被泄露的可能性增大，因为在任意方向都可能接收到数据。但是，在本发明中，数据泡的传递不是广播的，而是区域的扩散遵循广播的原则，数据泡的弹射具备随机性，在一定程度上提升了安全性。实施例2在上一实施例的基础上，所述事件请求为一个请求集合，该集合内至少包括以下元素：请求类型、请求时间、请求优先级和请求内容队列。具体的，事件请求内包含的信息为当前事件的主要信息，这部分信息涉及到安全，在本发明中，使用内外层划分的方式，同时在之间设置加密码，可以提升安全性。实施例3在上一实施例的基础上，所述请求内容队列中包含多个请求指令；所述请求指令按照先后顺序进行排列，组成内容队列，且在排列时，设置处于中间位置的请求指令为起始响应指令。参考图3，具体的，内容队列的形成可以使得一个多个请求指令一次性发出。且在内容指令发出时，设置中间位置的请求指令为起始响应指令开始接收，可以避免因指令拥堵造成的阻滞。因为从中间位置开始读取指令，比按照顺序读取随机性更大，而在实际过程中，按照顺序的指令往往会遵循一定的原则，比如在先指令更复杂，而在后指令更简单，使得出现阻滞。实施例4在上一实施例的基础上，所述事件核心在生成过程中对事件请求进行分析，生成一个标志该事件的标识的方法包括：使用如下公式，生成标志该时间的标识：；其中，为请求优先级，表示进行MD5运算，为请求类型，为生成的标识，为请求时间；为连接符。具体的，本发明的标志生成使用基于时间连接的方式构建，时间作为一个关键参数，能够提升标志的特异性。同时基于MD5运算的方式，更可以提升生成标识的特异性。实施例5在上一实施例的基础上，所述事件半径构建单元，向外部发送广播信号，以确定自身子引擎与最近的其他的子引擎的距离的方法包括：在设定的一个时间范围内，以一定的时间延迟，分别向外部发送两个广播信号，在前发射的广播信号中包含一个特征标志位，在接触到其他子引擎后，该特征标志位将被接触到的子引擎捕获；在后发射的广播信号也包含一个特征标志位，在接触到一个子引擎后，子引擎也将该特征标志位进行捕获；在设定的时间范围结束，接收到特征标志位的子引擎都将自己的特征标志位的捕获时间进行广播，时间半径构建单元在接收到其他子引擎发送的广播后，根据其对应的捕获时间的先后，确定出自身子引擎最近的其他的子引擎，并计算出相应的距离。具体的，参考图2，数据泡在发射过程中，会与周围的相邻事件域发生碰撞，此时，自身的时间域由于标识与其他的不同，可以避免彼此之间的干扰。实施例6在上一实施例的基础上，所述事件控制单元，将事件核心和时间请求打包作为一个数据泡的方法包括：将事件核心设置在外围，将事件请求设置在内部，同时在外围和内部之间设置一个边界；该边界为一个加密码。实施例7在上一实施例的基础上，所述边界的加密码生成的方法包括：基于一个生成的字符串进行多进制加密以生成多进制隐藏加密信息；根据加密码版本级别选择对应的加密码版本对标准信息进行加密以生成待定标准加密信息；根据所述待定标准加密信息选择对应的掩码生成所述加密码的比特矩阵，并提取所述比特矩阵中黑点的点数；根据所述比特矩阵中黑点的点数与所述隐藏加密信息的长度对选择的所述掩码和所述加密码版本进行更新以确定最终选择的掩码和加密码版本，其中，当所述隐藏加密信息的长度小于所述比特矩阵中黑点的点数时，将当前的掩码和当前的加密码版本作为所述最终选择的掩码和加密码版本；根据所述最终选择的掩码和加密码版本生成标准加密信息；以及根据所述隐藏加密信息和所述标准加密信息生成所述加密码。具体的，在密码学中，加密是将明文信息改變為難以讀取的密文內容，使之不可读的过程。只有擁有解密方法的對象，經由解密過程，才能將密文還原為正常可讀的內容。理想情况下，只有经授权的人员能够读取加密文所要传达的信息。加密本身并不能防止信息传输被截取，但加密能防止截取者理解其内容。因为种种技术原因，加密方法通常使用一个通过算法生成的伪随机密钥。虽然任何加密后的消息都可能被破解，但对于一个良好的加密算法而言，破解需要相当多的技术和算力。授权读取信息的人可以轻松通过发信人所提供的密钥解密信息，但未经授权的人员则不行。密码学历史中有众多加密方法；早期的加密方法常用于军事通讯。从此开始，现代计算中也出现了众多加密技术，并且加密在现代计算中也变得越来越常见。现代的加密方式通常使用公钥或对称密钥。现代加密技术依赖现代计算机在破解密钥上并不高效的事实来保证其安全性。实施例8在上一实施例的基础上，所述基于一个生成的字符串进行多进制加密以生成多进制隐藏加密信息的方法包括：将字符串进行分割；在分割后的每组字符串的预设位置处插入第一预设个数的随机数，生成新的分割字符串；使用预设的多进制加密算法分别对分割的所述各密钥段进行加密，得到第一加密结果；在第一加密结果的基础上添加遮罩数据，生成多进制隐藏加密信息。实施例9在上一实施例的基础上，所述在第一加密结果的基础上添加遮罩数据，生成多进制隐藏加密信息的方法包括：将第一加密结果放入一个随机数据集合中，随机数据结合作为遮罩数据。具体的，遮罩数据的出现使得安全性进一步提升。实施例10在上一实施例的基础上，在所述第一加密结果放入随机数据集合后，对随机数据集合进行顺序打乱操作。需要说明的是，上述实施例提供的系统，仅以上述各功能单元的划分进行举例说明，在实际应用中，可以根据需要而将上述功能分配由不同的功能单元来完成，即将本发明实施例中的单元或者步骤再分解或者组合，例如，上述实施例的单元可以合并为一个单元，也可以进一步拆分成多个子单元，以完成以上描述的全部或者单元功能。对于本发明实施例中涉及的单元、步骤的名称，仅仅是为了区分各个单元或者步骤，不视为对本发明的不当限定。所属技术领域的技术人员可以清楚地了解到，为描述的方便和简洁，上述描述的存储装置、处理装置的具体工作过程及有关说明，可以参考前述方法实施例中的对应过程，在此不再赘述。本领域技术人员应能够意识到，结合本文中所公开的实施例描述的各示例的单元、方法步骤，能够以电子硬件、计算机软件或者二者的结合来实现，软件单元、方法步骤对应的程序可以置于随机存储器、内存、只读存储器、电可编程ROM、电可擦除可编程ROM、寄存器、硬盘、可移动磁盘、QD-ROM、或技术领域内所公知的任意其它形式的存储介质中。为了清楚地说明电子硬件和软件的可互换性，在上述说明中已经按照功能一般性地描述了各示例的组成及步骤。这些功能究竟以电子硬件还是软件方式来执行，取决于技术方案的特定应用和设计约束条件。本领域技术人员可以对每个特定的应用来使用不同方法来实现所描述的功能，但是这种实现不应认为超出本发明的范围。术语“第一”、“另一部分”等是配置用于区别类似的对象，而不是配置用于描述或表示特定的顺序或先后次序。术语“包括”或者任何其它类似用语旨在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者单元/装置不仅包括那些要素，而且还包括没有明确列出的其它要素，或者还包括这些过程、方法、物品或者单元/装置所固有的要素。至此，已经结合附图所示的优选实施方式描述了本发明的技术方案，但是，本领域技术人员容易理解的是，本发明的保护范围显然不局限于这些具体实施方式。在不偏离本发明的原理的前提下，本领域技术人员可以对相关技术标记作出等同的更改或替换，这些更改或替换之后的技术方案都将落入本发明的保护范围之内。以上所述，仅为本发明的较佳实施例而已，并非配置用于限定本发明的保护范围。
