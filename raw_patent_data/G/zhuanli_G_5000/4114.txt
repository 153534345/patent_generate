标题title
一种电子设备的测试方法、系统及相关装置
摘要abst
本申请提供一种电子设备的测试方法、系统及相关装置，涉及计算机技术领域，该测试方法包括：接收上位机下发的测试命令；解析所述上位机测试命令，将其转换至待测试任务管理结构体；在所述待测试任务管理结构体中，根据故障注入点的触发时机检测函数判断是否具备故障触发条件；若是，在所述故障注入点执行故障注入并执行故障测试。本申请可以基于触发时机检测函数进行故障触发判断，并执行相应的故障测试，能够实现故障测试的自动执行。本申请还提供一种电子设备的测试系统、计算机可读存储介质和电子设备，具有上述有益效果。
权利要求书clms
1.一种电子设备的测试方法，其特征在于，包括：接收上位机下发的测试命令；解析所述上位机测试命令，将其转换至待测试任务管理结构体；在所述待测试任务管理结构体中，根据故障注入点的触发时机检测函数判断是否具备故障触发条件；若是，在所述故障注入点执行故障注入，并执行故障测试。2.根据权利要求1所述的测试方法，其特征在于，所述接收上位机下发的测试命令包括：调用CAN接口维护总线接收上位机下发的测试命令。3.根据权利要求1所述的测试方法，其特征在于，解析所述上位机测试命令时，还包括：判断是否有待测试任务未完成；若是，向所述上位机反馈存在未完成任务。4.根据权利要求1所述的测试方法，其特征在于，在故障注入点执行故障注入包括：在驱动接口模块中注入故障；在数据打包模块中注入故障；在周期调度模块调用的同步模块、表决模块、安全数据处理模块中注入故障。5.根据权利要求4所述的测试方法，其特征在于，在数据打包模块中注入故障包括：对数据包执行数据帧重复故障注入、数据帧丢失故障注入、数据帧插入故障注入、数据帧次序混乱故障注入、数据帧数据错误故障注入、数据帧超时故障注入、数据帧内容错误故障注入中的一项或者任意几项的组合。6.根据权利要求1所述的测试方法，其特征在于，根据故障注入点的触发时机检测函数判断是否具备故障触发条件包括：获取当前周期号；根据触发周期、触发持续时间之和与所述当前周期号的比较结果判断当前是否处于故障触发周期；若是，根据故障通道判断是否具备故障触发条件。7.根据权利要求1所述的测试方法，其特征在于，所述测试命令包含测试数据帧，所述测试数据帧包括通信通道类型、触发时间、触发持续时间、触发阶段、故障触发类型和故障值。8.一种电子设备的测试系统，其特征在于，包括：命令接收模块，用于接收上位机下发的测试命令；解析模块，用于解析所述上位机测试命令，将其转换至待测试任务管理结构体；触发判断模块，用于在所述待测试任务管理结构体中，根据故障注入点的触发时机检测函数判断是否具备故障触发条件；故障注入模块，用于所述触发判断模块判断结果为是时，在所述故障注入点执行故障注入并执行故障测试。9.一种计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1-7任一项所述的方法的步骤。10.一种服务器，其特征在于，包括存储器和处理器，所述存储器中存有计算机程序，所述处理器调用所述存储器中的计算机程序时实现如权利要求1-7任一项所述的方法的步骤。
说明书desc
技术领域本申请涉及计算机技术领域，特别涉及一种电子设备的测试方法、系统及相关装置。背景技术当前，执行故障注入时，通常采用代码走查加软件白盒测试方式或者修改测试对象代码，注入故障方式。然而代码走查加软件白盒测试方式需要耗费大量的人工与经费，且测试效果只能限于验证单个函数或者单个周期运行结果，较为复杂的功能很难得到全面测试。修改测试对象代码注入故障其注入手段单一，较多的依赖平台自身软件进行测试方法注入。这种方法从实质上来讲是对测试对象进行了修改，对于测试的独立性具有较大影响。此外，每个故障注入需要烧写专门的测试版本软件，对于测试速度有较大影响。发明内容本申请的目的是提供一种电子设备的测试方法、电子设备的测试系统、计算机可读存储介质和电子设备，能够自动执行故障测试，提高测试效率。为解决上述技术问题，本申请提供一种电子设备的测试方法，具体技术方案如下：接收上位机下发的测试命令；解析所述上位机测试命令，将其转换至待测试任务管理结构体；在所述待测试任务管理结构体中，根据故障注入点的触发时机检测函数判断是否具备故障触发条件；若是，在所述故障注入点执行故障注入并执行故障测试。可选的，所述接收上位机下发的测试命令包括：调用CAN接口维护总线接收上位机下发的测试命令。可选的，解析所述上位机测试命令时，还包括：判断是否有待测试任务未完成；若是，向所述上位机反馈存在未完成任务。可选的，在故障注入点执行故障注入包括：在驱动接口模块中注入故障；在数据打包模块中注入故障；在周期调度模块调用的同步模块、表决模块、安全数据处理模块中注入故障可选的，在数据打包模块中注入故障包括：对数据包执行数据帧重复故障注入、数据帧丢失故障注入、数据帧插入故障注入、数据帧次序混乱故障注入、数据帧数据错误故障注入、数据帧超时故障注入、数据帧内容错误故障注入中的一项或者任意几项的组合。可选的，根据故障注入点的触发时机检测函数判断是否具备故障触发条件包括：获取当前周期号；根据触发周期、触发持续时间之和与所述当前周期号的比较结果判断当前是否处于故障触发周期；若是，根据故障通道判断是否具备故障触发条件。可选的，所述测试命令包含测试数据帧，所述测试数据帧包括通信通道类型、触发时间、触发持续时间、触发阶段、故障触发类型和故障值。本申请还提供一种电子设备的测试系统，包括：命令接收模块，用于接收上位机下发的测试命令；解析模块，用于解析所述上位机测试命令，将其转换至待测试任务管理结构体；触发判断模块，用于在所述待测试任务管理结构体中，根据故障注入点的触发时机检测函数判断是否具备故障触发条件；故障注入模块，用于所述触发判断模块判断结果为是时，在所述故障注入点执行故障注入并执行故障测试本申请还提供一种计算机可读存储介质，其上存储有计算机程序，所述计算机程序被处理器执行时实现如上所述的方法的步骤。本申请还提供一种服务器，包括存储器和处理器，所述存储器中存有计算机程序，所述处理器调用所述存储器中的计算机程序时实现如上所述的方法的步骤。本申请提供一种电子设备的测试方法，包括：接收上位机下发的测试命令；解析所述上位机测试命令，将其转换至待测试任务管理结构体；在所述待测试任务管理结构体中，根据故障注入点的触发时机检测函数判断是否具备故障触发条件；若是，在所述故障注入点执行故障注入并执行故障测试。本申请可以直接应用上位机发送测试命令，利用测试命令唤醒在被测试对象内部的故障注入代码，在待测试任务管理结构体中，可以基于触发时机检测函数进行故障触发判断，并执行相应的故障测试，能够实现故障测试的自动执行。如此，上位机可以直接针对被测试对象的运行日志进行故障测试结果的获取和分析。通过内置测试代码，无需反复更改测试对象进行测试，有利于提高测试可信度。本申请还提供一种电子设备的测试系统、计算机可读存储介质和电子设备，具有上述有益效果，此处不再赘述。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本申请的实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据提供的附图获得其他的附图。图1为本申请实施例所提供的一种电子设备的测试方法的流程图；图2为本申请实施例提供的数据帧重复故障注入实现流程示意图；图3为本申请实施例提供的数据帧丢失故障注入实现流程示意图；图4为本申请实施例提供的数据帧插入故障注入实现流程示意图；图5为本申请实施例提供的数据帧次序混乱故障注入实现流程示意图；图6为本申请实施例提供的数据帧数据错误故障注入实现流程示意图；图7为本申请实施例提供的数据帧超时故障注入实现流程示意图；图8为本申请实施例提供的数据帧内容错误故障注入实现流程示意图；图9为本申请实施例所提供的一种电子设备的测试系统结构示意图。具体实施方式为使本申请实施例的目的、技术方案和优点更加清楚，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。请参考图1，图1为本申请实施例所提供的一种电子设备的测试方法的流程图，该方法包括：S101：接收上位机下发的测试命令；本步骤旨在接收上位机下发的测试命令，即本申请实施例可应用于任一被测试对象。在执行本步骤前，默认被测试对象与上位机之间已建立通信连接，但对于建立何种通信连接不作限定。一种可行的方式中，可以与上位机通过CAN接口维护总线进行连接。则在执行本步骤时，可以调用CAN接口维护总线接收上位机下发的测试命令。此外，本步骤对于测试命令的具体内容不作限定，其可以包含测试命令帧。所谓测试命令帧，用于执行被测试对象所执行故障测试的类型、种类等。一种可行的方式中，测试数据帧可以包括通信通道类型、触发时间、触发持续时间、触发阶段、故障触发类型和故障值。参见表1，表1为一种测试数据帧结构包含内容的示意表：表1 测试数据帧结构其中，故障值用于实现上位机对于被测试对象执行故障处理的动态赋值，可以包含若干字段。例如，待改写数据偏移、待改写数据长度和待改写数据值等，其中，待改写数据偏移用于标识此次故障注入中，改写发送数据的开始位置，待改写数据长度用于标识此次故障注入中，改写发送数据的长度，待改写数据值用于标识此次故障注入中，改写发送数据的值。特别的，上表中，在触发类型为02时，第几次的定义为：一个完整数据帧的发送，会根据驱动单次发送最大长度，分为多个子数据帧顺序发送，第几次意味着第几个子数据帧。从表1可以看出，测试命令可以包含以上信息，或者用于指示采取以上信息的其他命令。例如，可以事先定义若干种故障测试方式，每种故障测试方式中均对上述通信通道类型、触发时间、触发持续时间、触发阶段、故障触发类型和故障值进行相应的事先配置，则测试命令中也可以仅包含所采用的故障测试方式的编号等信息。此外，还可以在被测试对象中，应用周期调用模块，用于周期性检测是否接收到上位机测试命令，以提高故障测试的执行效率。特别的，在接收到上位机测试命令后，还可以判断当前是否有待测试任务未完成，若确实存在未完成的待测试任务，可向上位机反馈存在未完成任务。若没有未完成的待测试任务，则可以执行后续步骤。如此，避免被测试对象中的待测试任务累积，影响测试进度和测试效率。S102：解析所述上位机测试命令，将其转换至待测试任务管理结构体；本步骤旨在解析上位机测试命令，并转换至待测试任务管理结构体。解析上位机测试命令的目的是将上位机测试命令转化为自身可识别的测试指令，换言之，主要实现上位机测试命令的格式转换，或者内容转换。例如若测试命令中包含故障测试方式的编号，则可以根据编号解析得到对应的故障测试方式。待测试任务管理结构体为用于实现故障测试的主体模块，其设于被测试对象中，其可以包含若干子结构体，用于管理故障测试过程中涉及的相关参数，包含但不限于触发时间、触发内容、故障值、故障持续周期数等等。参见表2，表2为待测试任务管理结构体的内容说明表：表2 待测试任务管理结构体内容说明表S103：在所述待测试任务管理结构体中，根据故障注入点的触发时机检测函数判断是否具备故障触发条件；若是，进入S104；本步骤旨在利用触发时机检测函数，判断是否需要执行故障注入。触发时机检测函数设置在各故障触发监测点。在此对于如何设置故障触发监测点不作限定，可以由本领域技术人员进行设置。可以设于周期开始阶段、输入同步阶段、逻辑同步阶段、输出表决阶段、数据输出阶段、输出同步阶段等，也可以设于通信通道驱动处理等过程。触发时机检测函数用于执行当前是否可执行故障注入的判断，其可以用于执行如下步骤：在每个故障触发监测点中，通过当前平台周期号对比触发周期与触发持续时间的和，判断当前是否处于触发周期。若处于触发周期，再判断平台当前运行阶段与故障触发阶段是否相同。最后根据故障通道判断是否具备故障触发条件。S104：在所述故障注入点执行故障注入并执行故障测试。在具备触发条件时，可注入故障，从而执行故障测试。在故障注入时，可以分为三个故障注入阶段，分别为在驱动接口模块中注入故障、在数据打包模块中注入故障，以及在周期调度模块调用的同步模块、表决模块、安全数据处理模块中注入故障。周期调度模块负责故障注入周期内的故障注入实现。本申请实施例可以直接应用上位机发送测试命令，利用测试命令唤醒在被测试对象内部的故障注入代码，在待测试任务管理结构体中，可以基于触发时机检测函数进行故障触发判断，并执行相应的故障测试，能够实现故障测试的自动执行。如此，上位机可以直接针对被测试对象的运行日志进行故障测试结果的获取和分析。通过内置测试代码，无需反复更改测试对象进行测试，有利于提高测试可信度。基于上述实施例，作为优选的实施例，在数据打包模块中注入故障时可以如下：对数据包执行数据帧重复故障注入、数据帧丢失故障注入、数据帧插入故障注入、数据帧次序混乱故障注入、数据帧数据错误故障注入、数据帧超时故障注入、数据帧内容错误故障注入中的一项或者任意几项的组合。以上为对数据包进行的几种故障注入测试，本领域技术人员还可以在此基础上采用其他数据包故障注入，在此不一一举例限定。下文针对本申请实施例提供的几种故障注入实现过程进行说明：1、数据帧重复故障注入：参见图2，图2为本申请实施例提供的数据帧重复故障注入实现流程示意图，如图2所示，“数据帧重复”故障注入在取2通信通道、乘2通信通道与内部通信通道都可进行故障注入。当进入该三个通道的流程处理时，都需要调用公用的触发时机检测函数。当检测到故障触发时机满足时，进行故障注入，故障注入的的方法为，在该3个通道的发送数据处理时，将同一包帧数据调用驱动接口发送两次。2、数据帧丢失故障注入：参见图3，图3为本申请实施例提供的数据帧丢失故障注入实现流程示意图，如图3所示，数据帧丢失故障注入代码嵌入在内部通信信道驱动处理、乘2通信信道驱动处理、取2通信信道驱动处理中的至少一个中，在调用通用的触发时机检测函数，并判断达到触发时机后，进行故障注入。可在取2通信通道、乘2通信通道与内部通信通道对应的驱动接口函数中进行故障注入。当进入对应的驱动接口函数时，调用公用的触发时机检测函数。当检测到故障触发时机满足时，通过公式计算此数据帧需要调用几次驱动发送完成N1，并从测试任务管理结构体中的故障值成员读取应丢失第几次驱动发送N2。判断N2是否小于N1，如果N2小于等于N1则注入故障，否则将测试故障反馈给上位机。3、数据帧插入故障注入：参见图4，图4为本申请实施例提供的数据帧插入故障注入实现流程示意图，如图4所示，数据帧插入故障注入代码嵌入在安全平台软件中的取2通信信道数据打包处理、乘2通信信号数据打包处理以及内部通信通道数据打包处理中的至少一个，在调用通用的触发时机检测函数，并判断达到触发时机后，进行故障注入。数据帧插入故障注入在取2通信通道、乘2通信通道与内部通信通道都可进行故障注入。当进入该三个通道的流程处理时，都需要调用公用的触发时机检测函数。当检测到故障触发时机满足时，进行故障注入，故障注入的方法为，从测试任务管理结构体中的故障值成员读取待插入数据，然后判断待插入数据小于发送缓冲区，并将此数据经过数据打包后调用对应的驱动接口模块发送。如果待插入数据长度超过发送缓冲区，则将此测试故障反馈给上位机。4、数据帧次序混乱故障注入：参见图5，图5为本申请实施例提供的数据帧次序混乱故障注入实现流程示意图，如图5所示，数据帧次序混乱故障注入代码嵌入在安全平台软件中的取2通信信道数据打包处理、乘2通信信号数据打包处理以及内部通信通道数据打包处理中的至少一个，在调用通用的触发时机检测函数，并判断达到触发时机后，进行故障注入。数据帧次序混乱故障注入在取2通信通道、乘2通信通道与内部通信通道都可进行故障注入。当进入该三个通道的流程处理时，都需要调用公用的触发时机检测函数。当检测到故障触发时机满足时，进行故障注入，故障注入的方法为，检测当前触发是否为此故障的第一次触发。若不为第一次触发，保存当前发送数据帧N1到测试数据缓冲区并结束流程。待主程序再次进入触发点，此时已经为第二次触发，在进行此次故障的第二次触发时，先保存经过打包的数据帧N2，然后依次发送待发送数据数据帧N2和测试缓存区中的N1数据。5、数据帧数据错误故障注入：参见图6，图6为本申请实施例提供的数据帧数据错误故障注入实现流程示意图，如图6所示，数据帧数据错误故障注入代码嵌入在安全平台软件中的取2通信信道数据打包处理、乘2通信信号数据打包处理以及内部通信通道数据打包处理中的至少一个，在调用通用的触发时机检测函数，并判断达到触发时机后，进行故障注入。6、数据帧超时故障注入：参见图7，如图7所示，数据帧超时故障注入代码嵌入在内部通信信道驱动处理、乘2通信信道驱动处理、取2通信信道驱动处理中的至少一个中，在调用通用的触发时机检测函数，并判断达到触发时机后，进行故障注入可在取2通信通道、乘2通信通道与内部通信通道对应的驱动接口函数中进行故障注入。当进入对应的驱动接口函数时，调用公用的触发时机检测函数。当检测到故障触发时机满足时，从测试任务管理结构体中的故障值成员读取延时时间，获取此次待发送数据。并将延时时间与待发送数据，传递到唤醒的测试专用线程。然后正常线程不发送此次数据，并且正常进行其他功能处理。测试专用线程待延时时间到达后，会被实时操作系统调用，并延时发送数据。7、数据帧内容错误故障注入参见图8，图8为本申请实施例提供的数据帧内容错误故障注入实现流程示意，如图8所示，数据帧内容错误故障注入可以嵌入在周期开始阶段、输入同步阶段、逻辑同步阶段、输出表决阶段、数据输出阶段和输出同步阶段过程中，其中输入同步阶段包含取2同步处理和乘2同步处理，逻辑同步阶段包含取2同步处理和乘2同步处理，输出表决阶段包含取2表决处理和乘2表决处理。在调用通用的触发时机检测函数，并判断达到触发时机后，进行故障注入。该故障注入使得数据帧可以传递到安全平台同步及表决处理流程、内部数据输出处理流程，用于判断安全平台软件防护功能是否正确且导向安全侧，其流程如下：在安全平台同步及表决处理流程、内部数据输出处理流程都可进行故障注入。当进入该三个交互数据流程处理时，都需要调用公用的触发时机检测函数。当检测到故障触发时机满足时，进行故障注入，故障注入的方法为，从测试任务管理结构体中的故障值成员读取待修改数据内容、待修改数据长度、待修改数据起始偏移，然后判断“待修改数据起始偏移+待修改数据长度”是否小于发送缓冲区，并将待修改数据部分修改并调用数据打包模块中对应数据打包接口进行发送。如果待插入数据长度超过发送缓冲区，则将此测试故障反馈给上位机。可见，本申请实施例执行故障注入过程中，可以包含故障注入代码包含了标准所定义的数据帧重复、丢失、插入、次序混乱、错误、超时等全部通信故障注入方法，根据错误的属性和被测对象运行特点，同时故障注入点分布在数据处理层、协议处理层以及驱动层，被测对象代码共同编译，使用宏开关隔离。下面对本申请实施例提供的一种电子设备的测试系统进行介绍，下文描述的测试系统与上文描述的电子设备的测试方法可相互对应参照。参见图9，图9为本申请实施例所提供的一种电子设备的测试系统结构示意图，该系统包括：命令接收模块，用于接收上位机下发的测试命令；解析模块，用于解析所述上位机测试命令，将其转换至待测试任务管理结构体；触发判断模块，用于在所述待测试任务管理结构体中，根据故障注入点的触发时机检测函数判断是否具备故障触发条件；故障注入模块，用于所述触发判断模块判断结果为是时，在所述故障注入点执行故障注入并执行故障测试。基于上述实施例，作为优选的实施例，所述命令接收模块为用于调用CAN接口维护总线接收上位机下发的测试命令的模块。基于上述实施例，作为优选的实施例，还包括：任务完成判断模块，用于判断是否有待测试任务未完成；若是，向所述上位机反馈存在未完成任务。基于上述实施例，作为优选的实施例，故障注入模块包括：故障注入单元，用于在驱动接口模块中注入故障；在数据打包模块中注入故障；在周期调度模块调用的同步模块、表决模块、安全数据处理模块中注入故障。基于上述实施例，作为优选的实施例，故障注入单元包括：数据包故障注入子单元，用于对数据包执行数据帧重复故障注入、数据帧丢失故障注入、数据帧插入故障注入、数据帧次序混乱故障注入、数据帧数据错误故障注入、数据帧超时故障注入、数据帧内容错误故障注入中的一项或者任意几项的组合。基于上述实施例，作为优选的实施例，触发判断模块为用于执行如下步骤的模块：获取当前周期号；根据触发周期、触发持续时间之和与所述当前周期号的比较结果判断当前是否处于故障触发周期；若是，根据故障通道判断是否具备故障触发条件。本申请还提供了一种计算机可读存储介质，其上存有计算机程序，该计算机程序被执行时可以实现上述实施例所提供的步骤。该存储介质可以包括：U盘、移动硬盘、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。本申请还提供了一种服务器，可以包括存储器和处理器，所述存储器中存有计算机程序，所述处理器调用所述存储器中的计算机程序时，可以实现上述实施例所提供的步骤。当然所述服务器还可以包括各种网络接口，电源等组件。说明书中各个实施例采用递进的方式描述，每个实施例重点说明的都是与其他实施例的不同之处，各个实施例之间相同相似部分互相参见即可。对于实施例提供的系统而言，由于其与实施例提供的方法相对应，所以描述的比较简单，相关之处参见方法部分说明即可。本文中应用了具体个例对本申请的原理及实施方式进行了阐述，以上实施例的说明只是用于帮助理解本申请的方法及其核心思想。应当指出，对于本技术领域的普通技术人员来说，在不脱离本申请原理的前提下，还可以对本申请进行若干改进和修饰，这些改进和修饰也落入本申请权利要求的保护范围内。还需要说明的是，在本说明书中，诸如第一和第二等之类的关系术语仅仅用来将一个实体或者操作与另一个实体或操作区分开来，而不一定要求或者暗示这些实体或操作之间存在任何这种实际的关系或者顺序。而且，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括所述要素的过程、方法、物品或者设备中还存在另外的相同要素。
