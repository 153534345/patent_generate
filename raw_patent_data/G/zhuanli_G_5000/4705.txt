标题title
一种兼容多项目设备树的方法、系统、设备和存储介质
摘要abst
本发明涉及服务器领域。本发明提供一种兼容多项目设备树的方法、系统、设备和存储介质，方法包括：构造包括每个项目的设备树源文件信息的json配置文件；根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件；将所有的二进制设备树文件整合成总二进制设备树文件；响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。本发明通过使用json配置文件实现单镜像文件中兼容多项目设备树的目的。
权利要求书clms
1.一种兼容多项目设备树的方法，其特征在于，包括如下步骤：构造包括每个项目的设备树源文件信息的json配置文件；根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件；将所有的二进制设备树文件整合成总二进制设备树文件；响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。2.根据权利要求1所述的方法，其特征在于，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述json配置文件中描述每个项目使用的二进制设备树目录的名称和项目对应的主板标识和项目标识。3.根据权利要求1所述的方法，其特征在于，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述json配置文件中设置包含服务器中SCM板卡的主板标识的第一列表和包含设备树源文件信息的第二列表。4.根据权利要求3所述的方法，其特征在于，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述第二列表中设置项目的设备树源文件相关文件的目录名称的第一字段、项目的主板标识的第二字段和项目不同出货配置的项目标识的第三字段。5.根据权利要求1所述的方法，其特征在于，方法还包括：创建二进制设备树目录，并将编译生成的二进制设备树文件拷贝到所述二进制设备树目录中。6.根据权利要求3所述的方法，其特征在于，所述根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件包括：依次遍历第二列表中每个项目的设备树源文件路径名称，并将对应设备树源文件路径下的文件放入linux内核中。7.根据权利要求1所述的方法，其特征在于，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：给所述总二进制设备树文件添加对应的头部用于表示每个二进制设备树文件的相关属性以形成二进制设备树属性列表。8.根据权利要求7所述的方法，其特征在于，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树属性列表中设置二进制设备树域属性信息和单项目属性信息。9.根据权利要求8所述的方法，其特征在于，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树域属性信息中设置每个厂商自定义的标志字段和所有项目的二进制设备树占用字节数。10.根据权利要求8所述的方法，其特征在于，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树域属性信息中设置目前兼容的项目数和能够扩展的字段。11.根据权利要求8所述的方法，其特征在于，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述单项目属性信息中设置当前项目的二进制设备树在整个二进制设备树域的偏移地址。12.根据权利要求7所述的方法，其特征在于，所述根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据包括：通过GPIO或eeprom获取当前项目的主板标识。13.根据权利要求12所述的方法，其特征在于，所述根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据包括：从所述二进制设备树属性列表中获取属性信息头，将获取的当前项目的主板标识与所述二进制设备树属性列表中的属性信息头进行匹配，并根据匹配结果获取当前项目的二进制设备树数据。14.根据权利要求13所述的方法，其特征在于，所述根据匹配结果获取当前项目的二进制设备树数据包括：响应于匹配成功，通过I2C读取对应的端口以获取主板的主板标识；将所述主板的主板标识与所述二进制设备树属性列表中每个项目的属性中的主板标识进行第二匹配，并根据第二匹配的结果获取当前项目的二进制设备树数据。15.根据权利要求14所述的方法，其特征在于，所述根据第二匹配的结果获取当前项目的二进制设备树数据包括：响应于匹配成功，按照匹配结果的属性信息中的第一预设字段确定当前项目所属的二进制设备的起始位置，并按照匹配结果的属性信息中的第二预设字段表示的所述当前项目的二进制设备树占用空间大小取出对应的二进制设备树数据。16.根据权利要求1所述的方法，其特征在于，所述通过所述二进制设备树数据完成与所述当前项目相关的功能包括：将所述当前项目的二进制设备树数据加载到内存中。17.根据权利要求16所述的方法，其特征在于，所述通过所述二进制设备树数据完成与所述当前项目相关的功能包括：通过环境变量将对应的二进制设备树信息传递给内核，完成与所述当前项目相关的二进制设备树的遍历查找和加载的功能。18.一种兼容多项目设备树的系统，其特征在于，包括：构造模块，配置用于构造包括每个项目的设备树源文件信息的json配置文件；编译模块，配置用于根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件；整合模块，配置用于将所有的二进制设备树文件整合成总二进制设备树文件；执行模块，配置用于响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。19.一种计算机设备，其特征在于，包括：至少一个处理器；以及存储器，所述存储器存储有可在所述处理器上运行的计算机指令，所述指令由所述处理器执行时实现权利要求1-17任意一项所述方法的步骤。20.一种计算机可读存储介质，所述计算机可读存储介质存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现权利要求1-17任意一项所述方法的步骤。
说明书desc
技术领域本发明涉及服务器领域，更具体地，特别是指一种兼容多项目设备树的方法、系统、设备和存储介质。背景技术设备树源文件是用于描述板级硬件拓扑和参数配置的一种方法，很大程度上精简了系统内核，降低了系统内核的维护难度，提高了内核的稳定性。目前使用的Linux系统的内核都是支持设备树架构的。在服务器领域，为了抢占市场占有率和制高点，每个厂商都会设计出各种各样不同型号的服务器，针对BMC来说，可能就会涉及到针对每个机型服务器甚至同一个机型服务器存在不同的DTS需要兼容，而目前BMC为了提高可维护程度，都会使用一个镜像文件去兼容多个机型，这就需要BMC的镜像中需要兼容多个DTS，并且可以针对不同的机型加载各自的设备树区域。目前使用的兼容方法需要编写its，将需要搭配的kernel image和DTB的情况以配置的方式写入到its中，然后在内核采用mkimmage的方式进行编译，最终形成itb的形式添加到镜像文件中由Uboot进行处理，这种实现方式属于一种常规定制方式，但是这种方式具备如下几个不足之处：1、需要搭配的Uboot支持FIT uImage，针对不支持FIT uImage的Uboot无法使用上述方法进行多项目的兼容；2、编写its文件需要了解its的编写规则和语法，针对初学者尤其是针对新入职人员，存在一定的门槛，学习成本比较高，无法通过简单的配置实现多镜像兼容的目的，不属于常规配置的范畴。发明内容有鉴于此，本发明实施例的目的在于提出一种兼容多项目设备树的方法、系统、计算机设备及计算机可读存储介质，本发明使用json配置文件的方式实现项目设备树源文件相关参数和信息的配置，在一定程度上降低了its的学习难度，而且无需学习特定的语法结构，按照一定格式进行配置即可，通过使用json配置文件实现单镜像文件中兼容多项目设备树的目的。基于上述目的，本发明实施例的一方面提供了一种兼容多项目设备树的方法，包括如下步骤：构造包括每个项目的设备树源文件信息的json配置文件；根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件；将所有的二进制设备树文件整合成总二进制设备树文件；响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述json配置文件中描述每个项目使用的二进制设备树目录的名称和项目对应的主板标识和项目标识。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述json配置文件中设置包含服务器中SCM板卡的主板标识的第一列表和包含设备树源文件信息的第二列表。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述第二列表中设置项目的设备树源文件相关文件的目录名称的第一字段、项目的主板标识的第二字段和项目不同出货配置的项目标识的第三字段。在一些实施方式中，方法还包括：创建二进制设备树目录，并将编译生成的二进制设备树文件拷贝到所述二进制设备树目录中。在一些实施方式中，所述根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件包括：依次遍历第二列表中每个项目的设备树源文件路径名称，并将对应设备树源文件路径下的文件放入linux内核中。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：给所述总二进制设备树文件添加对应的头部用于表示每个二进制设备树文件的相关属性以形成二进制设备树属性列表。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树属性列表中设置二进制设备树域属性信息和单项目属性信息。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树域属性信息中设置每个厂商自定义的标志字段和所有项目的二进制设备树占用字节数。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树域属性信息中设置目前兼容的项目数和能够扩展的字段。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述单项目属性信息中设置当前项目的二进制设备树在整个二进制设备树域的偏移地址。在一些实施方式中，所述根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据包括：通过GPIO或eeprom获取当前项目的主板标识。在一些实施方式中，所述根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据包括：从所述二进制设备树属性列表中获取属性信息头，将获取的当前项目的主板标识与所述二进制设备树属性列表中的属性信息头进行匹配，并根据匹配结果获取当前项目的二进制设备树数据。在一些实施方式中，所述根据匹配结果获取当前项目的二进制设备树数据包括：响应于匹配成功，通过I2C读取对应的端口以获取主板的主板标识；将所述主板的主板标识与所述二进制设备树属性列表中每个项目的属性中的主板标识进行第二匹配，并根据第二匹配的结果获取当前项目的二进制设备树数据。在一些实施方式中，所述根据第二匹配的结果获取当前项目的二进制设备树数据包括：响应于匹配成功，按照匹配结果的属性信息中的第一预设字段确定当前项目所属的二进制设备的起始位置，并按照匹配结果的属性信息中的第二预设字段表示的所述当前项目的二进制设备树占用空间大小取出对应的二进制设备树数据。在一些实施方式中，所述通过所述二进制设备树数据完成与所述当前项目相关的功能包括：将所述当前项目的二进制设备树数据加载到内存中。在一些实施方式中，所述通过所述二进制设备树数据完成与所述当前项目相关的功能包括：通过环境变量将对应的二进制设备树信息传递给内核，完成与所述当前项目相关的二进制设备树的遍历查找和加载的功能。本发明实施例的另一方面，提供了一种兼容多项目设备树的系统，包括：构造模块，配置用于构造包括每个项目的设备树源文件信息的json配置文件；编译模块，配置用于根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件；整合模块，配置用于将所有的二进制设备树文件整合成总二进制设备树文件；执行模块，配置用于响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。本发明实施例的又一方面，还提供了一种计算机设备，包括：至少一个处理器；以及存储器，所述存储器存储有可在所述处理器上运行的计算机指令，所述指令由所述处理器执行时实现如上方法的步骤。本发明实施例的再一方面，还提供了一种计算机可读存储介质，计算机可读存储介质存储有被处理器执行时实现如上方法步骤的计算机程序。本发明具有以下有益技术效果：1、使用json配置文件的方式实现项目dts相关参数和信息的配置，在一定程度上降低了its的学习难度，而且无需学习特定的语法结构，按照一定格式进行配置即可；2、每个项目的DTB文件按照实际大小紧接之前DTB文件进行排布，很大程度上减少了镜像文件空间，可以兼容更多的项目；3、针对Uboot的配置无需特定的功能支撑即可完成DTB数据向内核中的传递，适配面更加广泛；4、开发人员只需要配置json文件，然后增加与自己项目相关的DTS目录和目录中的文件即可，针对DTS的编译，整个DTB的连接和排布及属性信息的填充，都是在脚本中完成的，无需人工参与，降低了配置和开发难度，提高了开发效率；5、在属性列表中存在更多的冗余字段，为各种开发人员应对各种场景和开发需求提供了更广的开发和自定义空间。附图说明为了更清楚地说明本发明实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的实施例。图1为本发明提供的兼容多项目设备树的方法的实施例的示意图；图2为本发明提供的二进制设备树属性列表示意图；图3为本发明提供的兼容多项目设备树的系统的实施例的示意图；图4为本发明提供的兼容多项目设备树的计算机设备的实施例的硬件结构示意图；图5为本发明提供的兼容多项目设备树的计算机存储介质的实施例的示意图。具体实施方式为使本发明的目的、技术方案和优点更加清楚明白，以下结合具体实施例，并参照附图，对本发明实施例进一步详细说明。需要说明的是，本发明实施例中所有使用“第一”和“第二”的表述均是为了区分两个相同名称非相同的实体或者非相同的参量，可见“第一”“第二”仅为了表述的方便，不应理解为对本发明实施例的限定，后续实施例对此不再一一说明。本发明实施例的第一个方面，提出了一种兼容多项目设备树的方法的实施例。图1示出的是本发明提供的兼容多项目设备树的方法的实施例的示意图。如图1所示，本发明实施例包括如下步骤：S1、构造包括每个项目的设备树源文件信息的json配置文件；S2、根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件；S3、将所有的二进制设备树文件整合成总二进制设备树文件；S4、响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。构造包括每个项目的设备树源文件信息的json配置文件。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述json配置文件中描述每个项目使用的二进制设备树目录的名称和项目对应的主板标识和项目标识。构造json配置文件，命名为prjlist.json，该文件中主要描述了每个项目使用的dts目录的名称和该项目对应的boardid和bomid。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述json配置文件中设置包含服务器中SCM板卡的主板标识的第一列表和包含设备树源文件信息的第二列表。Json配置文件中主要包含PrjInfoList和ScmIdList两部分，这样设计主要是考虑到目前的很多服务器的都是存在带有遵循OCP规范的SCM板卡的，因此增加了一个ScmIDList，ScmIDList中包含服务器中SCM板卡的boardid，与DTS相关的信息主要位于PrjInfoList中。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述第二列表中设置项目的设备树源文件相关文件的目录名称的第一字段、项目的主板标识的第二字段和项目不同出货配置的项目标识的第三字段。每个json对象就表示一个项目，包含的与DTS相关字段为prj_dtsdirname、prj_boardid和prj_bomid，其中prj_dtsdirname为该项目的dts相关文件的目录名称，prj_boardid为项目的boardid，prj_bomid为该项目不同出货配置的bomid。根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件。在一些实施方式中，所述根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件包括：依次遍历第二列表中每个项目的设备树源文件路径名称，并将对应设备树源文件路径下的文件放入linux内核中。DTS编译成DTB的过程中，编译脚本会首先打开上述json配置文件，依次遍历PrjInfoList中每个项目的dts路径名称，将对应DTS路径下的文件放入linux内核中。在一些实施方式中，方法还包括：创建二进制设备树目录，并将编译生成的二进制设备树文件拷贝到所述二进制设备树目录中。创建DTBs目录，该目录的主要作用是用于存放由每个项目的dts文件编译好的dtb二进制文件，重复上述步骤，直到json配置文件中的所有的dts目录下的文件都编译生成各自的dtb二进制文件并拷贝到DTBs目录下为止。将所有的二进制设备树文件整合成总二进制设备树文件。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：给所述总二进制设备树文件添加对应的头部用于表示每个二进制设备树文件的相关属性以形成二进制设备树属性列表。给整合后的DTB文件添加对应的头部用于表示每个DTB的相关属性，其中针对文件属性头的信息设计如图2所示。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树属性列表中设置二进制设备树域属性信息和单项目属性信息。如图2所示，二进制设备树属性列表中设置DTB域属性信息和每个项目的DTB域属性信息。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树域属性信息中设置每个厂商自定义的标志字段和所有项目的二进制设备树占用字节数。如图2所示，DTB域属性信息中设置每个厂商自定义的标志字段Signature和所有项目的二进制设备树占用字节数DtsTotalSize，占用字节数中不包括属性信息。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树域属性信息中设置目前兼容的项目数和能够扩展的字段。DTB域属性信息中还设置有目前兼容的项目数DtsNum和能够扩展的字段Reserved，并且还包括表示SCM板的boardid列表的ScmBoardId。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述单项目属性信息中设置当前项目的二进制设备树在整个二进制设备树域的偏移地址。单项目属性信息中设置当前项目的二进制设备树在整个二进制设备树域的偏移地址的LocAddr、当前项目的DTB占用的字节数大小的DtsDataLen、项目的boarid、项目的bomid和用于扩展和自定义使用的Reserved。响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。在一些实施方式中，所述根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据包括：通过GPIO或eeprom获取当前项目的主板标识。在一些实施方式中，所述根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据包括：从所述二进制设备树属性列表中获取属性信息头，将获取的当前项目的主板标识与所述二进制设备树属性列表中的属性信息头进行匹配，并根据匹配结果获取当前项目的二进制设备树数据。Uboot加载的时候，首先通过GPIO或eeprom中获取到当前项目的boardid，然后从DTB区域中将属性信息头获取出来，对比boardid是否与DTB属性区域的ScmBoarid列表中的某个可以匹配成功，如果能够匹配成功，则说明该项目具备SCM板卡，如果匹配不成功，则说明该项目不具备SCM板卡。在一些实施方式中，所述根据匹配结果获取当前项目的二进制设备树数据包括：响应于匹配成功，通过I2C读取对应的端口以获取主板的主板标识；将所述主板的主板标识与所述二进制设备树属性列表中每个项目的属性中的主板标识进行第二匹配，并根据第二匹配的结果获取当前项目的二进制设备树数据。在一些实施方式中，所述根据第二匹配的结果获取当前项目的二进制设备树数据包括：响应于匹配成功，按照匹配结果的属性信息中的第一预设字段确定当前项目所属的二进制设备的起始位置，并按照匹配结果的属性信息中的第二预设字段表示的所述当前项目的二进制设备树占用空间大小取出对应的二进制设备树数据。通过I2C读取对应的PCA9555中的端口，获取主板的Boarid；将该Boardid与属性列表中每个项目的属性中的boardid进行比对，如果匹配成功，则按照该项目中的属性信息中的LocAddr字段找到该项目所属的DTB的起始位置，然后按照DtsDataLen字段表示的该项目的DTB占用空间大小取出对应该项目的DTB数据。在一些实施方式中，所述通过所述二进制设备树数据完成与所述当前项目相关的功能包括：将所述当前项目的二进制设备树数据加载到内存中。在一些实施方式中，所述通过所述二进制设备树数据完成与所述当前项目相关的功能包括：通过环境变量将对应的二进制设备树信息传递给内核，完成与所述当前项目相关的二进制设备树的遍历查找和加载的功能。将该项目的DTB数据加载到内存中，然后通过环境变量将对应的设备树信息传递给内核，完成与该项目相关的DTB的遍历查找和加载的功能。本发明实施例使用json配置文件的方式实现项目dts相关参数和信息的配置，在一定程度上降低了its的学习难度，而且无需学习特定的语法结构，按照一定格式进行配置即可；每个项目的DTB文件按照实际大小紧接之前DTB文件进行排布，很大程度上减少了镜像文件空间，可以兼容更多的项目；针对Uboot的配置无需特定的功能支撑即可完成DTB数据向内核中的传递，适配面更加广泛；开发人员只需要配置json文件，然后增加与自己项目相关的DTS目录和目录中的文件即可，针对DTS的编译，整个DTB的连接和排布及属性信息的填充，都是在脚本中完成的，无需人工参与，降低了配置和开发难度，提高了开发效率；在属性列表中存在更多的冗余字段，为各种开发人员应对各种场景和开发需求提供了更广的开发和自定义空间。需要特别指出的是，上述兼容多项目设备树的方法的各个实施例中的各个步骤均可以相互交叉、替换、增加、删减，因此，这些合理的排列组合变换之于兼容多项目设备树的方法也应当属于本发明的保护范围，并且不应将本发明的保护范围局限在实施例之上。基于上述目的，本发明实施例的第二个方面，提出了一种兼容多项目设备树的系统。如图3所示，系统200包括如下模块：构造模块，配置用于构造包括每个项目的设备树源文件信息的json配置文件；编译模块，配置用于根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件；整合模块，配置用于将所有的二进制设备树文件整合成总二进制设备树文件；执行模块，配置用于响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。在一些实施方式中，所述构造模块配置用于：在所述json配置文件中描述每个项目使用的二进制设备树目录的名称和项目对应的主板标识和项目标识。在一些实施方式中，所述构造模块配置用于：在所述json配置文件中设置包含服务器中SCM板卡的主板标识的第一列表和包含设备树源文件信息的第二列表。在一些实施方式中，所述构造模块配置用于：在所述第二列表中设置项目的设备树源文件相关文件的目录名称的第一字段、项目的主板标识的第二字段和项目不同出货配置的项目标识的第三字段。在一些实施方式中，系统还包括创建模块，配置用于：创建二进制设备树目录，并将编译生成的二进制设备树文件拷贝到所述二进制设备树目录中。在一些实施方式中，所述编译模块配置用于：依次遍历第二列表中每个项目的设备树源文件路径名称，并将对应设备树源文件路径下的文件放入linux内核中。在一些实施方式中，所述整合模块配置用于：给所述总二进制设备树文件添加对应的头部用于表示每个二进制设备树文件的相关属性以形成二进制设备树属性列表。在一些实施方式中，所述整合模块配置用于：在所述二进制设备树属性列表中设置二进制设备树域属性信息和单项目属性信息。在一些实施方式中，所述整合模块配置用于：在所述二进制设备树域属性信息中设置每个厂商自定义的标志字段和所有项目的二进制设备树占用字节数。在一些实施方式中，所述整合模块配置用于：在所述二进制设备树域属性信息中设置目前兼容的项目数和能够扩展的字段。在一些实施方式中，所述整合模块配置用于：在所述单项目属性信息中设置当前项目的二进制设备树在整个二进制设备树域的偏移地址。在一些实施方式中，所述执行模块配置用于：通过GPIO或eeprom获取当前项目的主板标识。在一些实施方式中，所述执行模块配置用于：从所述二进制设备树属性列表中获取属性信息头，将获取的当前项目的主板标识与所述二进制设备树属性列表中的属性信息头进行匹配，并根据匹配结果获取当前项目的二进制设备树数据。在一些实施方式中，所述执行模块配置用于：响应于匹配成功，通过I2C读取对应的端口以获取主板的主板标识；将所述主板的主板标识与所述二进制设备树属性列表中每个项目的属性中的主板标识进行第二匹配，并根据第二匹配的结果获取当前项目的二进制设备树数据。在一些实施方式中，所述执行模块配置用于：响应于匹配成功，按照匹配结果的属性信息中的第一预设字段确定当前项目所属的二进制设备的起始位置，并按照匹配结果的属性信息中的第二预设字段表示的所述当前项目的二进制设备树占用空间大小取出对应的二进制设备树数据。在一些实施方式中，所述执行模块配置用于：将所述当前项目的二进制设备树数据加载到内存中。在一些实施方式中，所述执行模块配置用于：通过环境变量将对应的二进制设备树信息传递给内核，完成与所述当前项目相关的二进制设备树的遍历查找和加载的功能。基于上述目的，本发明实施例的第三个方面，提出了一种计算机设备，包括：至少一个处理器；以及存储器，存储器存储有可在处理器上运行的计算机指令，指令由处理器执行以实现如下步骤：S1、构造包括每个项目的设备树源文件信息的json配置文件；S2、根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件；S3、将所有的二进制设备树文件整合成总二进制设备树文件；S4、响应于Uboot加载项目，根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据，并通过所述二进制设备树数据完成与所述当前项目相关的功能。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述json配置文件中描述每个项目使用的二进制设备树目录的名称和项目对应的主板标识和项目标识。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述json配置文件中设置包含服务器中SCM板卡的主板标识的第一列表和包含设备树源文件信息的第二列表。在一些实施方式中，所述构造包括每个项目的设备树源文件信息的json配置文件包括：在所述第二列表中设置项目的设备树源文件相关文件的目录名称的第一字段、项目的主板标识的第二字段和项目不同出货配置的项目标识的第三字段。在一些实施方式中，步骤还包括：创建二进制设备树目录，并将编译生成的二进制设备树文件拷贝到所述二进制设备树目录中。在一些实施方式中，所述根据所述json配置文件将设备树源文件编译成内核能够识别的二进制设备树文件包括：依次遍历第二列表中每个项目的设备树源文件路径名称，并将对应设备树源文件路径下的文件放入linux内核中。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：给所述总二进制设备树文件添加对应的头部用于表示每个二进制设备树文件的相关属性以形成二进制设备树属性列表。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树属性列表中设置二进制设备树域属性信息和单项目属性信息。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树域属性信息中设置每个厂商自定义的标志字段和所有项目的二进制设备树占用字节数。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述二进制设备树域属性信息中设置目前兼容的项目数和能够扩展的字段。在一些实施方式中，所述将所有的二进制设备树文件整合成总二进制设备树文件包括：在所述单项目属性信息中设置当前项目的二进制设备树在整个二进制设备树域的偏移地址。在一些实施方式中，所述根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据包括：通过GPIO或eeprom获取当前项目的主板标识。在一些实施方式中，所述根据当前项目的主板标识从所述总二进制设备树文件中获取到所述当前项目的二进制设备树数据包括：从所述二进制设备树属性列表中获取属性信息头，将获取的当前项目的主板标识与所述二进制设备树属性列表中的属性信息头进行匹配，并根据匹配结果获取当前项目的二进制设备树数据。在一些实施方式中，所述根据匹配结果获取当前项目的二进制设备树数据包括：响应于匹配成功，通过I2C读取对应的端口以获取主板的主板标识；将所述主板的主板标识与所述二进制设备树属性列表中每个项目的属性中的主板标识进行第二匹配，并根据第二匹配的结果获取当前项目的二进制设备树数据。在一些实施方式中，所述根据第二匹配的结果获取当前项目的二进制设备树数据包括：响应于匹配成功，按照匹配结果的属性信息中的第一预设字段确定当前项目所属的二进制设备的起始位置，并按照匹配结果的属性信息中的第二预设字段表示的所述当前项目的二进制设备树占用空间大小取出对应的二进制设备树数据。在一些实施方式中，所述通过所述二进制设备树数据完成与所述当前项目相关的功能包括：将所述当前项目的二进制设备树数据加载到内存中。在一些实施方式中，所述通过所述二进制设备树数据完成与所述当前项目相关的功能包括：通过环境变量将对应的二进制设备树信息传递给内核，完成与所述当前项目相关的二进制设备树的遍历查找和加载的功能。如图4所示，为本发明提供的上述兼容多项目设备树的计算机设备的一个实施例的硬件结构示意图。以如图4所示的装置为例，在该装置中包括一个处理器301以及一个存储器302。处理器301和存储器302可以通过总线或者其他方式连接，图4中以通过总线连接为例。存储器302作为一种非易失性计算机可读存储介质，可用于存储非易失性软件程序、非易失性计算机可执行程序以及模块，如本申请实施例中的兼容多项目设备树的方法对应的程序指令/模块。处理器301通过运行存储在存储器302中的非易失性软件程序、指令以及模块，从而执行服务器的各种功能应用以及数据处理，即实现兼容多项目设备树的方法。存储器302可以包括存储程序区和存储数据区，其中，存储程序区可存储操作系统、至少一个功能所需要的应用程序；存储数据区可存储根据兼容多项目设备树的方法的使用所创建的数据等。此外，存储器302可以包括高速随机存取存储器，还可以包括非易失性存储器，例如至少一个磁盘存储器件、闪存器件、或其他非易失性固态存储器件。在一些实施例中，存储器302可选包括相对于处理器301远程设置的存储器，这些远程存储器可以通过网络连接至本地模块。上述网络的实例包括但不限于互联网、企业内部网、局域网、移动通信网及其组合。一个或者多个兼容多项目设备树的方法对应的计算机指令303存储在存储器302中，当被处理器301执行时，执行上述任意方法实施例中的兼容多项目设备树的方法。执行上述兼容多项目设备树的方法的计算机设备的任何一个实施例，可以达到与之对应的前述任意方法实施例相同或者相类似的效果。本发明还提供了一种计算机可读存储介质，计算机可读存储介质存储有被处理器执行时执行兼容多项目设备树的方法的计算机程序。如图5所示，为本发明提供的上述兼容多项目设备树的计算机存储介质的一个实施例的示意图。以如图5所示的计算机存储介质为例，计算机可读存储介质401存储有被处理器执行时执行如上方法的计算机程序402。最后需要说明的是，本领域普通技术人员可以理解实现上述实施例方法中的全部或部分流程，可以通过计算机程序来指令相关硬件来完成，兼容多项目设备树的方法的程序可存储于一计算机可读取存储介质中，该程序在执行时，可包括如上述各方法的实施例的流程。其中，程序的存储介质可为磁碟、光盘、只读存储记忆体或随机存储记忆体等。上述计算机程序的实施例，可以达到与之对应的前述任意方法实施例相同或者相类似的效果。以上是本发明公开的示例性实施例，但是应当注意，在不背离权利要求限定的本发明实施例公开的范围的前提下，可以进行多种改变和修改。根据这里描述的公开实施例的方法权利要求的功能、步骤和/或动作不需以任何特定顺序执行。此外，尽管本发明实施例公开的元素可以以个体形式描述或要求，但除非明确限制为单数，也可以理解为多个。应当理解的是，在本文中使用的，除非上下文清楚地支持例外情况，单数形式“一个”旨在也包括复数形式。还应当理解的是，在本文中使用的“和/或”是指包括一个或者一个以上相关联地列出的项目的任意和所有可能组合。上述本发明实施例公开实施例序号仅仅为了描述，不代表实施例的优劣。本领域普通技术人员可以理解实现上述实施例的全部或部分步骤可以通过硬件来完成，也可以通过程序来指令相关的硬件完成，程序可以存储于一种计算机可读存储介质中，上述提到的存储介质可以是只读存储器，磁盘或光盘等。所属领域的普通技术人员应当理解：以上任何实施例的讨论仅为示例性的，并非旨在暗示本发明实施例公开的范围被限于这些例子；在本发明实施例的思路下，以上实施例或者不同实施例中的技术特征之间也可以进行组合，并存在如上的本发明实施例的不同方面的许多其它变化，为了简明它们没有在细节中提供。因此，凡在本发明实施例的精神和原则之内，所做的任何省略、修改、等同替换、改进等，均应包含在本发明实施例的保护范围之内。
