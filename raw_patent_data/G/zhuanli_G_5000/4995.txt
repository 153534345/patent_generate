标题title
一种ICP并行加速计算方法、系统、终端及介质
摘要abst
本申请涉及一种ICP并行加速计算方法、系统、终端及介质，其方法包括获取点云数据；依据点云数据及所需执行的计算操作确定所需线程数，所需执行的计算操作包括点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算中的至少一种；依据所需线程数向GPU申请线程；依据所需执行的计算操作分配每个线程持有的点云数据；依据所需执行的计算操作确定每个线程对所持有的点云数据的计算步骤；获取最终的计算结果，并将计算结果反馈至CPU。本申请具有降低ICP计算时间成本，适配嵌入式设备，提升计算结果的实时性的效果。
权利要求书clms
1.一种ICP并行加速计算方法，其特征在于，包括：获取点云数据；依据点云数据及所需执行的计算操作确定所需线程数，所需执行的计算操作包括点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算中的至少一种；依据所需线程数向GPU申请线程；依据所需执行的计算操作分配每个线程持有的点云数据；依据所需执行的计算操作确定每个线程对所持有的点云数据的计算步骤；获取最终的计算结果，并将计算结果反馈至CPU。2.根据权利要求1所述的ICP并行加速计算方法，其特征在于，若所需执行的计算操作为点云质心计算，则在所述获取点云数据后，还包括：向GPU申请与点云的点数量一致的线程个数；对每个线程分配对应其线程号及下一线程号的点并执行相加操作；执行累加步骤：对相邻两个线程的和值进行相加操作，得到新的和值；重复执行累加步骤，直至只有一个线程持有和值，对其数据计算均值，得到点云的质心数据。3.根据权利要求2所述的ICP并行加速计算方法，其特征在于，若所需执行的计算操作为点云去质心化，则在所述得到点云的质心数据后，还包括：向GPU申请与点云的点数量一致的线程个数；对每个线程分配点云数据与对应的质心数据；每个线程执行去质心的相减操作；生成去质心后的点云数据，并将每个线程的所得差值反馈至CPU。4.根据权利要求3所述的ICP并行加速计算方法，其特征在于，若所需执行的计算操作为构建矩阵，则在所述生成去质心后的点云的步骤后，还包括：获取去质心后的点云数据；向GPU申请与两组点云数据的点对数量一致的线程数；对每个线程分配两组去质心后的点云数据的各一个点；每个线程执行两个点的相乘操作；执行和值运算步骤：对相邻两个线程的乘积进行相加操作，得到和值；重复执行和值运算步骤，直至只有一个线程持有和值，得到矩阵H，并将矩阵H反馈至CPU。5.根据权利要求4所述的ICP并行加速计算方法，其特征在于，若所需执行的计算操作为SVD分解，则在所述得到矩阵H的步骤后，还包括：获取矩阵H；对矩阵H进行SVD分解：向GPU申请n3个线程，其中n为矩阵H的矩阵行数、列数；给线程分配矩阵H的数与其转置矩阵的数，线程号分别对应H矩阵的行、列编号；每个线程执行矩阵相乘中两个数的相乘操作，再执行和值运算步骤，最终得到矩阵U、V。6.根据权利要求5所述的ICP并行加速计算方法，其特征在于，若所需执行的计算操作为旋转位移计算，则在得到矩阵U、V后，还包括：获取矩阵U、V；代入计算公式R＝VUT；向GPU申请线程，执行矩阵相乘操作；计算旋转R及位移t。7.根据权利要求1所述的ICP并行加速计算方法，其特征在于，还包括：检测当前时刻GPU的处于空闲状态的线程，并生成闲置线程数；获取待处理的点云数据及对应所需执行的计算操作；计算每组点云数据的待执行的计算操作所需的初始线程数；实时筛选待处理的点云数据中所需初始线程数最小者；依据闲置线程数及筛选结果确定是否触发新的计算操作；当闲置线程数达到最小的初始线程数时，向GPU申请与初始线程数数量一致的线程数，并对该点云数据执行对应的计算操作。8.一种ICP并行加速计算系统，其特征在于，包括：点云获取模块，用于获取点云数据；线程申请模块，用于依据点云数据及所需执行的计算操作确定所需线程数，所需执行的计算操作包括点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算中的至少一种；用于依据所需线程数向GPU申请线程；数据分配模块，用于依据所需执行的计算操作分配每个线程持有的点云数据；执行模块，用于依据所需执行的计算操作确定每个线程对所持有的点云数据的计算步骤；数据返回模块，用于获取最终的计算结果，并将计算结果反馈至CPU。9.一种智能终端，其特征在于，包括存储器和处理器，所述存储器上存储有能够被处理器加载并执行如权利要求1至7中任一项所述的ICP并行加速计算方法的计算机程序。10.一种计算机可读存储介质，其特征在于，存储有能够被处理器加载并执行如权利要求1至7中任一项所述的ICP并行加速计算方法的计算机程序。
说明书desc
技术领域本申请涉及ICP加速算法的领域，尤其是涉及一种ICP并行加速计算方法、系统、终端及介质。背景技术目前，ICP算法广泛应用于视觉SLAM的RGBD方案和激光SLAM中，传感器采集3D点云数据，通过计算3D-3D点的相对位姿，为进一步进行滤波或者非线性优化处理提供初值。RGBD方案中，点云可以通过光流或者描述子得到一个精确的点对匹配，激光方案中，通过多次迭代，逐渐逼近真实的3D点对，从而计算出相对位姿。ICP算法主要涉及到点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算等步骤，每个步骤均需要涉及到计算操作。针对上述中的相关技术，发明人认为采集3D点云的传感器包括RGBD相机和多线激光雷达，分辨率都很高，另外如果计算结果有高精度的要求也必须要求使用高分辨率的传感器，导致所获取的点云数量非常大，随着点云数量的增多，ICP计算的时间开销也会剧增，且很多的SLAM方案需要部署在算力并不高的嵌入式设备中，导致计算结果的实时性无法得到保证，设备无法正常运行。发明内容第一方面，为了降低ICP计算时间成本，适配嵌入式设备，提升计算结果的实时性，本申请提供一种ICP并行加速计算方法。本申请提供的一种ICP并行加速计算方法，采用如下的技术方案：一种ICP并行加速计算方法，包括：获取点云数据；依据点云数据及所需执行的计算操作确定所需线程数，所需执行的计算操作包括点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算中的至少一种；依据所需线程数向GPU申请线程；依据所需执行的计算操作分配每个线程持有的点云数据；依据所需执行的计算操作确定每个线程对所持有的点云数据的计算步骤；获取最终的计算结果，并将计算结果反馈至CPU。通过采用上述技术方案，ICP算法中，包括点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算的过程中都有大量的点云加法、向量乘法的操作，单纯采用CPU计算会导致算力紧张，速度减慢；而GPU相比CPU每个线程的计算能力虽然稍弱，但确可以提供的大量线程，ICP的计算可以利用此特性，将ICP的计算过程分解为众多的对单个线程计算能力要求不高的加法、乘法操作，对此类操作可以使用GPU的线程同时并行计算，从而达到ICP计算加速的目的，降低ICP计算时间成本，适配嵌入式设备，提升计算结果的实时性。优选的，若所需执行的计算操作为点云质心计算，则在所述获取点云数据后，还包括：向GPU申请与点云的点数量一致的线程个数；对每个线程分配对应其线程号及下一线程号的点并执行相加操作；执行累加步骤：对相邻两个线程的和值进行相加操作，得到新的和值；重复执行累加步骤，直至只有一个线程持有和值，对其数据计算均值，得到点云的质心数据。通过采用上述技术方案，每个线程执行加法操作，不断累加，所需线程数较多，但算法简单，分担了CPU的计算工作量，同时对于GPU的算力负荷较小。优选的，若所需执行的计算操作为点云去质心化，则在所述得到点云的质心数据后，还包括：向GPU申请与点云的点数量一致的线程个数；对每个线程分配点云数据与对应的质心数据；每个线程执行去质心的相减操作；生成去质心后的点云数据，并将每个线程的所得差值反馈至CPU。通过采用上述技术方案，通过申请GPU的多线程参与计算点云去质心时的相减操作，从而分担了CPU的计算工作量，降低了ICP计算时间成本，提升了计算结果的实时性。优选的，若所需执行的计算操作为构建矩阵，则在所述生成去质心后的点云的步骤后，还包括：获取去质心后的点云数据；向GPU申请与两组点云数据的点对数量一致的线程数；对每个线程分配两组去质心后的点云数据的各一个点；每个线程执行两个点的相乘操作；执行和值运算步骤：对相邻两个线程的乘积进行相加操作，得到和值；重复执行和值运算步骤，直至只有一个线程持有和值，得到矩阵H，并将矩阵H反馈至CPU。通过采用上述技术方案，通过申请GPU的多线程的方式参与点云数据的相乘与相加操作，获得矩阵H，方便计算位移t与旋转R，分担了CPU的计算工作量，降低了ICP计算时间成本，提升了计算结果的实时性。优选的，若所需执行的计算操作为SVD分解，则在所述得到矩阵H的步骤后，还包括：获取矩阵H；对矩阵H进行SVD分解：向GPU申请n3个线程，其中n为矩阵H的矩阵行数、列数；给线程分配矩阵H的数与其转置矩阵的数，线程号分别对应H矩阵的行、列编号；每个线程执行矩阵相乘中两个数的相乘操作，再执行和值运算步骤，最终得到矩阵U、V。通过采用上述技术方案，SVD分解的目的是将H矩阵分解为H＝U∑VT的形式，设H为一个m×n大小的矩阵，则U为m×m正交矩阵，∑为m×n对角矩阵，V为n×n正交矩阵，其中V＝HTH，U＝HHT，而当H满秩时，旋转R＝VUT，而根据t＝μq-Rμp即可计算出位移t，其中矩阵相乘中的乘法和加法计算可由GPU的多线程并行完成，提升ICP算法的计算效率。优选的，若所需执行的计算操作为旋转位移计算，则在得到矩阵U、V后，还包括：获取矩阵U、V；代入计算公式R＝VUT；向GPU申请线程，执行矩阵相乘操作；计算旋转R及位移t。通过采用上述技术方案，旋转R＝VUT，而根据t＝μq-Rμp，μp、μq分别为两组点云数据的质心数据，即可计算出位移t，其中矩阵相乘中的乘法和加法计算可由GPU的多线程并行完成，提升ICP算法的计算效率。优选的，还包括：检测当前时刻GPU的处于空闲状态的线程，并生成闲置线程数；获取待处理的点云数据及对应所需执行的计算操作；计算每组点云数据的待执行的计算操作所需的初始线程数；实时筛选待处理的点云数据中所需初始线程数最小者；依据闲置线程数及筛选结果确定是否触发新的计算操作；当闲置线程数达到最小的初始线程数时，向GPU申请与初始线程数数量一致的线程数，并对该点云数据执行对应的计算操作。通过采用上述技术方案，并行计算点云质心、去质心化、构建矩阵等均需要与点云数量一致的线程数，而矩阵相乘则需要n3个线程，而在相加、相减或相乘后，需要计算的线程数会逐级缩减，直至只有一个线程持有最终数据，因此过程中会产生大量的处于空闲状态的线程，即闲置线程数；通过筛选所有需要处理的点云数据，调取各组点云数据下一步需要执行的计算操作所需的初始线程数，若闲置线程数达到可以处理某一点云数据的计算操作则直接启用，从而减少多组点云数据的计算等待时间，提升整体的计算效率。第二方面，为了降低ICP计算时间成本，适配嵌入式设备，提升计算结果的实时性，本申请提供一种ICP并行加速计算系统，采用如下的技术方案：一种ICP并行加速计算系统，包括：点云获取模块，用于获取点云数据；线程申请模块，用于依据点云数据及所需执行的计算操作确定所需线程数，所需执行的计算操作包括点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算中的至少一种；用于依据所需线程数向GPU申请线程；数据分配模块，用于依据所需执行的计算操作分配每个线程持有的点云数据；执行模块，用于依据所需执行的计算操作确定每个线程对所持有的点云数据的计算步骤；数据返回模块，用于获取最终的计算结果，并将计算结果反馈至CPU。通过采用上述技术方案，通过线程申请模块向GPU申请所需的线程数，然后通过数据分配模块分配各个线程需要处理的点云数据，再通过执行模块进行计算，最终通过数据返回模块将最终数据返回至CPU进行整合，以此降低ICP计算时间成本，适配嵌入式设备，提升计算结果的实时性。第三方面，为了降低ICP计算时间成本，适配嵌入式设备，提升计算结果的实时性。本申请提供一种智能终端，采用如下的技术方案：一种智能终端，包括存储器和处理器，所述存储器上存储有能够被处理器加载并执行上述ICP并行加速计算方法的计算机程序。第四方面，为了降低ICP计算时间成本，适配嵌入式设备，提升计算结果的实时性。本申请提供一种计算机可读存储介质，采用如下的技术方案：一种计算机可读存储介质，存储有能够被处理器加载并执行上述任一种ICP并行加速计算方法的计算机程序。综上所述，本申请包括以下至少一种有益技术效果：1.GPU相比CPU可以提供的大量线程，ICP的计算可以利用此特性，将ICP的计算过程分解为众多的对单个线程计算能力要求不高的加法、乘法操作，对此类操作可以使用GPU的线程同时并行计算，从而达到ICP计算加速的目的，降低ICP计算时间成本，适配嵌入式设备，提升计算结果的实时性；2.每个线程执行点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算过程中的加法、减法、乘法操作，所需线程数较多，但算法简单，分担了CPU的计算工作量，同时对于GPU的算力负荷较小。附图说明图1是ICP算法的流程示意图。图2是本申请实施例的ICP并行加速计算方法的方法流程图。图3是本申请实施例的ICP并行加速计算方法的部分方法流程图，主要展示点云质心的并行化计算步骤。图4是本申请实施例的点云质心的计算原理示意图。图5是本申请实施例的ICP并行加速计算方法的部分方法流程图，主要展示去质心化的并行化计算步骤。图6是本申请实施例的ICP并行加速计算方法的部分方法流程图，主要展示构建矩阵的并行化计算步骤。图7是本申请实施例的构建矩阵的计算原理示意图。图8是本申请实施例的ICP并行加速计算方法的部分方法流程图，主要展示SVD分解及旋转位移计算的并行化计算步骤。具体实施方式以下结合全部附图对本申请作进一步详细说明。参照图1，ICP算法原步骤如下：S1、输入两组点云数据，例如：上一帧点云p＝；当前帧点云q＝；对所选的两组点云分别计算其质心：点云质心：S2、对点云去质心化：p′i＝pi-μp；q′i＝qi-qp；S3、根据去质心后的点云构建矩阵H：S4、对H矩阵进行SVD分解；具体的，SVD指奇异值分解，例如求解使得均方差E最小时的R，t：设R*，t*为最优解，则：1、2、t*＝μq-Rμp。令通过SVD分解有：；W＝U∑VT当W满秩时有：且对应唯一的U，V组合，而SVD分解的目的是将H矩阵分解为H＝U∑VT的形式，设H为一个m×n大小的矩阵，则U为m×m正交矩阵，∑为m×n对角矩阵，V为n×n正交矩阵。1)求HTH的特征向量和特征值，按照特征值由大到小进行排列并求根号，特征向量构成矩阵V，开方后的特征值构成矩阵∑。2)求HHT的特征向量，构成矩阵U。S5：通过U、V矩阵计算旋转R，再根据旋转R计算位移t，对应地：R＝UVTt＝μq-Rμp而以上步骤均可使用并行化的技术，具体如下。本申请实施例公开一种ICP并行加速计算方法。参照图2，ICP并行加速计算方法包括：S100：并行化计算点云质心，参照图3、图4，具体包括步骤S110-S140。具体的，通过点云质心的计算公式可以看出，此计算过程只有一个累加的操作，串行操作的计算过程需要循环n次，和点云的点的数量一致。因此设计如图3所示的并行计算点云质心方案，其循环次数为log2n，其中，S110：首先向GPU申请和点云P的点数量一致的线程个数。具体的，获取点云p、q中点的数量n，从GPU中申请n个线程；S120：执行累加步骤：对每个线程分配对应其线程号及下一线程号的点云的点，每个线程执行同一点云的两个点的相加操作，对两两相加的结果，再次使用一个线程进行相加。具体的，线程号例如ti，相邻编号的点例如pi及pi+1，每个线程执行一次相加操作pi+pi+1。相加完成后，此时线程数量减半。再对线程ti与其相邻编号的线程ti+1的和值进行相加，任意选择线程ti或线程ti+1对两者各自计算得到的数据进行相加。S130：重复执行S120的累加步骤，直至只剩最后一个总的所有点云相加的结果，计算出点云P的点云质心。具体的，重复执行相加操作，直至只有一个线程持有数据，对其数据计算均值，则可得到质心数据μp及μq。S140：申请和点云Q数量一致的线程个数，执行S120及S130，计算出点云Q的点云质心。S200：并行化去质心化，参照图5，具体包括步骤S210-S230。S210：向GPU申请和点云的点数量一致的线程，每个线程持有两部分数据，即线程号一致的点云数据及其对应的点云质心数据。S220：每个线程都执行点云数据减去质心数据的相减操作，生成去质心后的点云数据，。S230：每个线程将计算结果发送至CPU，完成去质心化。具体的，p的点云数据为pi，p的质心数据μp，计算公式为：p′i＝pi-μp；同样的方式对q进行去质心化：计算公式为：q′i＝qi-qp。S300：并行化构建矩阵H，参照图6、图7，具体包括步骤S310-S350。具体的，从构建矩阵H的公式可以看出，此处涉及到两种操作，向量的乘法操作及累加操作，CPU一般采用串行操作，其向量的乘法需要循环n次，累加操作也需要循环操作n次。而并行化时则可将向量乘法操作数量降低到一次，累加操作数量降低到log2n次。S310：获取去质心后的点云数据；向GPU申请与点对数量一致的线程数。具体的，p、q为点对，点对的数量即点云的点数量，线程数：n个线程ti。S320：每个线程持有一对匹配的点p和q，在每个线程中执行一次匹配点对的相乘。具体的，给每个线程ti分配数据p′i和q′i，执行相乘计算步骤，每个线程持有一个相乘的矩阵的结果，即p′iq′iT。S330：执行和值运算步骤，对相邻两个线程的乘积进行相加操作；S340：重复执行和值运算步骤，直至只有一个线程持有相加和值，得到矩阵H。S350：将矩阵H发送至CPU，计算结束。具体的，重复执行和值运算步骤，即对p′iq′iT矩阵再执行∑的相加操作。S400：并行化SVD分解，参照图8，具体参照步骤S410-S440。SVD分解的过程涉及到两次的矩阵相乘操作和特征值、特征向量求解操作，而并行化主要针对的是其中的矩阵相乘操作，例如求HHT的特征向量，构成矩阵U中需要进行矩阵相乘。以矩阵规模为n的两个矩阵相乘An×nBn×n为例：常规串行方式中，一般乘法操作需要迭代n3次，加法操作需要迭代n3次，而并行方案乘法操作只需要迭代1次，加法操作迭代log2n次。S410：从GPU申请n3个线程；S420：给每个线程分配待处理数据，分别对应H矩阵的行、列编号；具体的，待处理数据包括An×n矩阵的a11，Fn×n矩阵的b11等。S430：采用S300中的方法计算向量相乘；具体的，A的行的元与B的列的元相乘，各个线程分别计算等。S440：采用S100中的方法计算累加操作。具体的，完成等的计算后，线程再执行累加操作，最终得到。具体的，H矩阵的SVD分解过程中需要计算两次的矩阵相乘H*HT和HT*H，矩阵相乘可以分解为向量点乘和加法操作，每个线程持有需要点乘的两个向量，在同一个线程中，两个矩阵点乘操作完成后对结果进行累加，得到矩阵相乘结果对应位置的一个矩阵元素。得到矩阵相乘的结果后返回给CPU，在CPU中继续串行特征值、特征向量的求解操作，因为这个操作只进行两次，并行度并不够大，所以在CPU中串行操作，当然也可由GPU完成，例如：先获取矩阵U、V，再代入计算公式R＝VUT，之后向GPU申请线程，执行矩阵相乘操作，最终根据计算公式R＝VUT、t＝μq-Rμp，计算旋转R及位移t，其中μp、μq分别为两组点云数据的质心数据。由于上述S100-S400的计算过程中，所需GPU的线程数在不断的变化，期间会出现大量处于空闲状态的线程，为了提升GPU的资源利用率，因此设置以下步骤：SA1：检测当前时刻GPU的处于空闲状态的线程，并生成闲置线程数；SA2：获取待处理的点云数据及对应所需执行的计算操作；具体的，所需执行的计算操作需要按序执行，例如必须按照点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算的步骤。SA3：计算每组点云数据的待执行的计算操作所需的初始线程数；具体的，例如在点云质心计算时每组点云数据需要与其点数量一致的线程数，初始线程数即点数量。SA4：实时筛选待处理的点云数据中所需初始线程数最小者；具体的，点云数据中所需初始线程数最小者可以降低申请GPU线程的门槛，以此快速触发计算操作，减少时间浪费。SA5：依据闲置线程数及筛选结果确定是否触发新的计算操作；具体的，触发新的计算操作可以是同一组点云数据的计算操作，也可以是不同组。SA6：当闲置线程数达到最小的初始线程数时，向GPU申请与初始线程数数量一致的线程数，并对该点云数据执行对应的计算操作。例如，GPU含有x个线程，第一组点云数据P在点云质心计算时需要y个线程，即初始线程数为y，而第二组与第三组点云数据Q与W在构建矩阵时需要z个线程，即初始线程数为z。x＞y，x＞z，但x-y＜z，因此GPU的线程数只够同时运行一个计算操作，例如第一组点云数据P先开始处理，但相加完一次后，后面只需一半的线程数，即做一次加法后所需的线程数为y/2，此时闲置线程数为x-y/2，若x-y/2≥z，则处于空闲状态的线程即可直接执行第二组与第三组点云数据Q与W的构建矩阵计算操作，从而减少线程浪费，提升资源利用率，加快多组点云数据的ICP算法进程。本实施例还提供一种ICP并行加速计算系统，包括：点云获取模块，用于获取点云数据；线程申请模块，用于依据点云数据及所需执行的计算操作确定所需线程数，所需执行的计算操作包括点云质心计算、点云去质心化、构建矩阵、SVD分解及旋转位移计算中的至少一种；用于依据所需线程数向GPU申请线程；数据分配模块，用于依据所需执行的计算操作分配每个线程持有的点云数据；执行模块，用于依据所需执行的计算操作确定每个线程对所持有的点云数据的计算步骤；数据返回模块，用于获取最终的计算结果，并将计算结果反馈至CPU。线程申请模块还包括第一线程申请子模块、第二线程申请子模块、第三线程申请子模块及第四线程申请子模块。数据分配模块包括第一数据分配子模块、第二数据分配子模块、第三数据分配子模块及第四数据分配子模块。执行模块包括第一执行子模块、第二执行子模块、第三执行子模块及第四执行子模块。其中，第一线程申请子模块用于向GPU申请与点云的点数量一致的线程个数；第一数据分配子模块对每个线程分配对应其线程号及下一线程号的点并执行相加操作；第一执行子模块用于执行累加步骤：对相邻两个线程的和值进行相加操作，得到新的和值；并重复执行累加步骤，直至只有一个线程持有和值，对其数据计算均值，得到点云的质心数据。第二线程申请子模块用于向GPU申请与点云的点数量一致的线程个数；第二数据分配子模块用于对每个线程分配点云数据与对应的质心数据；第二执行子模块每个线程执行去质心的相减操作；并生成去质心后的点云数据，并将每个线程的所得差值反馈至CPU。第三线程申请子模块用于获取去质心后的点云数据；并向GPU申请与点云的点数量一致的线程数；第三数据分配子模块对每个线程分配两组去质心后的点云数据的各一个点；第三执行子模块用于控制每个线程执行两个点的相乘操作；并执行和值运算步骤：对相邻两个线程的乘积进行相加操作，得到和值；并重复执行和值运算步骤，直至只有一个线程持有和值，得到矩阵H，并将矩阵H反馈至CPU。第四线程申请子模块用于获取矩阵H；对矩阵H进行SVD分解：并向GPU申请n3个线程，其中n为矩阵H的矩阵行数、列数；第四数据分配子模块用于给线程分配矩阵H的数与其转置矩阵的数，线程号分别对应H矩阵的行、列编号；第四执行子模块，用于控制每个线程执行矩阵相乘中两个数的相乘操作，再执行和值运算步骤，最终得到矩阵U、V，代入计算公式R＝VUT，执行矩阵相乘操作，最终计算旋转R及位移t。ICP并行加速计算系统还包括：信息获取模块，用于获取待处理的点云数据及对应所需执行的计算操作；线程数计算模块，用于计算每组点云数据的待执行的计算操作所需的初始线程数；筛选模块，用于实时筛选待处理的点云数据中所需初始线程数最小者；确定模块，用于依据闲置线程数及筛选结果确定是否触发新的计算操作；操作模块，用于当闲置线程数达到最小的初始线程数时，向GPU申请与初始线程数数量一致的线程数，并对该点云数据执行对应的计算操作。本实施例还提供一种智能终端，包括存储器和处理器，处理器可采用CPU或MPU等中央处理部件或以CPU或MPU为核心所构建的主机系统，存储器可采用RAM、ROM、EPROM、EEPROM、FLASH、磁盘、光盘等存储设备。所述存储器上存储有能够被处理器加载并执行上述ICP并行加速计算方法的计算机程序。本实施例还提供一种计算机可读存储介质，可采用U盘、移动硬盘、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。该计算机可读存储介质内存储有能够被处理器加载并执行上述ICP并行加速计算方法的计算机程序。本申请实施例一种ICP并行加速计算方法的实施原理为：通过并行化计算点云质心、并行化去质心化、并行化构建矩阵H以及并行化SVD分解，配合多线程的GPU，方便快速的执行ICP计算，相比单纯的使用CPU串行计算ICP算法，可以减少计算时间的投入，即使在点云数量增多的情况下，计算性能也不会有明显的降低。以上均为本申请的较佳实施例，并非依此限制本申请的保护范围，故：凡依本申请的结构、形状、原理所做的等效变化，均应涵盖于本申请的保护范围之内。
