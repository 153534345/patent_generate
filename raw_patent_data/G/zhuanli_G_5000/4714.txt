标题title
一种多租户架构多云平台下的云RPA系统及应用方法
摘要abst
本发明提供一种多租户架构多云平台下的云RPA系统及应用方法，涉及信息技术领域，包括：采用B/S架构且部署运行在云端的RPA管理控制台、RPA资源管理调度中心、RPA设计器，部署运行在云主机或容器中的RPA机器人执行器，部署在系统或容器中的Agent；RPA管理控制台生成RPA机器人调度策略；RPA资源管理调度中心接入多个云平台，在各云平台创建系统或容器，按调度策略调度执行各云平台中的RPA机器人；Agent将RPA机器人部署到各云平台的系统或容器中，根据调度指令驱动RPA机器人执行器执行RPA机器人。本申请实现了RPA云化，满足了多租户多用户跨云平台在线设计使用和调度管理RPA机器人。
权利要求书clms
1.一种多租户架构多云平台下的云RPA系统，其特征在于，包括：采用B/S架构且部署运行在云端Docker容器中的RPA管理控制台、RPA资源管理调度中心、RPA设计器，部署运行在云主机中的RPA拾取器和RPA机器人执行器，以及部署在云端运行RPA机器人的系统或容器中的Agent；所述RPA管理控制台，用于：对设计编排好的RPA机器人进行流程验证审核及上架发布；根据业务需要设置多个RPA机器人的执行要求，生成对RPA机器人的调度策略；所述RPA资源管理调度中心，用于：多个云平台的接入，包括公有IaaS云、私有IaaS云和裸金属主机；RPA机器人运行所需虚拟硬件资源的申请信息管理；统一通过接口调用的方式，在各云平台进行系统或容器的初次创建，或根据系统快照、Docker镜像进行系统、Docker容器的快速再次创建，系统或容器的管理和监控；根据所述调度策略调度执行各云平台中的RPA机器人；接收Agent发送的创建快照或Docker镜像请求，以运行该RPA机器人的系统或容器为模板创建快照或Docker镜像；完成创建快照或Docker镜像后，销毁系统或Docker容器，释放资源；所述RPA设计器，用于：设计人员对RPA机器人的流程进行设计和编排；所述RPA拾取器，用于：拾取界面UI控件元素并传递给Agent；所述Agent，用于：接收所述RPA拾取器传递来的UI控件元素信息发送给所述RPA设计器；将设计完成的RPA机器人部署到各云平台中对应的系统或容器中；接收所述RPA管理控制台的调度指令，按调度指令驱动所述RPA机器人执行器触发并执行对应的RPA机器人；采集所述RPA机器人的运行信息，在所述RPA机器人执行完成后，向所述RPA资源管理调度中心发送创建系统快照或Docker镜像请求。2.根据权利要求1所述的多租户架构多云平台下的云RPA系统，其特征在于：接入公有IaaS云，包括：下载公有IaaS云提供的虚拟资源池管理的SDK或API；在要接入集成到RPA资源管理调度中心的所述公有IaaS云上生成调用访问的公私钥密码或Token；根据不同公有IaaS云SDK集成要求适配虚拟资源池管理的功能，完成公有IaaS云虚拟资源池管理的SDK的接入。3.根据权利要求2所述的多租户架构多云平台下的云RPA系统，其特征在于：系统或容器的初次创建，包括：所述RPA资源管理调度中心根据不同业务场景在所述公有IaaS云的虚拟资源池中创建基础VM和基础Docker容器；根据不同业务的需求，在基础VM和基础Docker容器中预先安装不同的依赖软件环境和业务应用客户端，安装RPA机器人执行器和Agent，进行快照并按业务含义命名快照。4.根据权利要求1所述的多租户架构多云平台下的云RPA系统，其特征在于：接入私有IaaS云，包括：向私有IaaS云申请多个虚拟主机；在RPA资源调度中心添加虚拟主机，选择主机的类型为虚拟机，并选择系统架构和类型，设置IP地址，VNC或RDP端口，SSH 端口，系统管理员账户和密码；通过系统管理员账户远程连接到已添加的虚拟主机上，并在系统或容器中安装Agent；创建多个系统用户，并增大RDP远程桌面连接允许的数量；在不同的所述系统用户目录下安装RPA机器人执行器，每个系统用户对应的RPA机器人执行器服务单独设置不同的端口；根据不同业务的需求，预先在不同的系统用户下安装不同的依赖软件环境。5.根据权利要求1所述的多租户架构多云平台下的云RPA系统，其特征在于：接入裸金属主机，包括：在所述裸金属主机上安装操作系统和虚拟化软件，制作Windows系列、Linux系列和Android系列虚拟主机的基镜像；在基镜像的基础上，根据业务场景安装或配置不同的应用，并制作镜像快照；在所述RPA资源管理调度中心添加主机，选择主机的类型为物理机，设置接入主机的IP地址，VNC或RDP端口，SSH 端口，系统管理员账户和密码；在物理主机中安装Agent，Agent封装虚拟化软件管理所述虚拟主机命令的API服务。6.根据权利要求1所述的多租户架构多云平台下的云RPA系统，其特征在于：根据多个RPA机器人的执行流程调度执行各云平台中的RPA机器人；包括：公有IaaS云中的系统或容器中的Agent，通过REST API的方式接收来自所述RPA管理控制台对RPA机器人的调度策略，按所述调度策略驱动RPA机器人执行器触发对应的RPA机器人；对于私有IaaS云和裸金属主机，在RPA管理控制台选择执行RPA机器人的虚拟主机，虚拟主机的用户及RPA机器人，设置执行周期和频次。7.根据权利要求1所述的多租户架构多云平台下的云RPA系统，其特征在于：所述RPA管理控制台，还用于：设置用户管理、权限管理、流程数据权限分配，流程日志记录，流程过程录屏，流程远程桌面实时查看，流程评估、流程配置、流程创建、流程任务设置、流程预警、流程主机管理；所述权限管理，包括：在所述RPA管理控制台设置访问策略，只允许同一执行流程中的RPA机器人所在的VM或容器之间跨云平台进行相互访问。8.根据权利要求7所述的多租户架构多云平台下的云RPA系统，其特征在于：在公有IaaS云中部署虚拟私有网络的服务端，暴露所述虚拟私有网络的服务端IP地址或端口；利用OpenSSL生成所述虚拟私有网络的客户端证书，公钥和私钥；根据所述服务端IP地址给私有IaaS云的虚拟主机分配所述虚拟私有网络的客户端IP地址；将所述虚拟私有网络的服务端IP地址或端口、访问协议、网关地址、路由、客户端私钥，服务端公钥信息生成到一个ovpn格式的文件；在私有IaaS云的虚拟主机中安装所述虚拟私有网络的客户端，并导入ovpn格式的文件；设置私有IaaS云中虚拟主机的所述虚拟私有网络客户端自启动，得到安全TLS加密隧道；所述公有IaaS云上的RPA机器人通过安全TLS加密隧道访问私有IaaS云中的应用，私有IaaS云中的RPA机器人也是通过安全TLS加密隧道访问公有IaaS云的服务，实现跨云平台的RPA机器人相互安全访问。9.根据权利要求1所述的多租户架构多云平台下的云RPA系统，其特征在于：所述RPA设计器以微前端、微服务和IFrame的方式嵌入集成在所述RPA管理控制台中的流程设计功能模块；所述RPA资源管理调度中心以微前端、微服务和IFrame的方式嵌入集成在所述RPA管理控制台中的主机管理功能模块。10.一种多租户架构多云平台下的云RPA系统的应用方法，应用如权利要求1-9任一项所述的一种多租户架构多云平台下的云RPA系统，其特征在于，包括：在所述RPA资源管理调度中心填入公有IaaS云提供的虚拟资源池的SDK、访问公钥、私钥信息，并上传Windows、Linux或Android系统镜像到公有IaaS云；在所述RPA资源管理调度中心创建一个或多个虚拟主机，在虚拟主机中安装各RPA机器人运行涉及的应用程序；在所述RPA资源管理调度中心接入在私有IaaS云申请的虚拟主机；在所述RPA管理控制台生成虚拟私有网络客户端证书，在私有IaaS云的虚拟主机中安装虚拟私有网络客户端并导入所述虚拟私有网络客户端证书；在公有IaaS云的虚拟资源池中部署虚拟私有网络服务端并生成服务端证书，对外暴露所述网络服务端的IP地址和端口；在所述RPA管理控制台设置访问策略，允许私有IaaS云申请的虚拟主机与公有IaaS云虚拟资源池中部分虚拟主机基于所述网络服务端的IP地址和端口进行访问；在所述RPA管理控制台创建多个租户用户，分别通过公有IaaS云和私有IaaS云的RPA设计器，基于所述应用程序设计业务不同环节所需的所述RPA机器人，并在所述RPA管理控制台配置各所述RPA机器人的文件共享目录和权限；设计完成的各所述RPA设计器经所述RPA管理控制台，验证审核并上架，再由Agent部署到对应的公有IaaS云或私有IaaS云的虚拟主机中；在所述RPA管理控制台配置RPA机器人调度策略，所述RPA资源管理调度中心根据调度策略触发RPA机器人执行器配置运行实例执行各所述RPA机器人；任务完成后创建系统快照或Docker镜像，销毁系统或Docker容器，释放资源。
说明书desc
技术领域本发明涉及信息技术领域，尤其是涉及一种多租户架构多云平台下的云RPA系统及应用方法。背景技术云RPA作为RPA未来发展的一个趋势，相对于传统本地化部署RPA有很大的优势，而RaaS作为RPA云化的体系化平台真正实现了RPA机器人在公有云、私有云和混合云多租户模式下灵活、弹性、按需使用和调度、高效并发运行。一方面通过按需按量灵活选配的方式来降低企业的成本，尤其是中小型企业利用RPA的授权和升级维护等的应用成本，另一方面也可以借助云平台相关技术和服务，通过对RPA机器人运行所依赖的软硬件、系统环境等的标准化，提高RPA机器人运行的稳定性和鲁棒性。同时借助云计算的弹性调度、镜像模板、分布式等相关技术，实现RPA机器人快速高效、便捷地应用，使用户使用RPA机器人不再受时间、地域、软硬件环境、网络等的限制。当前，云RPA还处在探索阶段，还未形成完善成熟的整体解决方案，也未有成熟成体系的实现方式和方法，以及相关成熟的产品。现阶段已有的思路和雏形为，RPA机器人控制台部署在云端，RPA机器人执行器和RPA机器人部署在云主机中，接受RPA机器人控制台的调度和管理。而RPA机器人的设计编排则在用户本地计算设备上完成，然后上架发布到RPA商店或RPA应用市场，审核通过后对外提供服务。用户只需要按需选购相应的RPA机器人，通过RPA机器人控制台触发和使用云RPA机器人。按照现阶段已有的思路和雏形，把RPA机器人部署在云主机中，只是把传统的RPA机器人本地化部署的模式搬运到了云端，把RPA机器人运行所依赖硬件等资源环境IaaS化，所依赖的系统等软件环境模板化，并接受RPA控制台的管理调度，离真正意义上的云RPA还有很大距离。无法解决云端多租户SaaS模式下多人协作在线使用RPA设计器设计编排RPA机器人的问题；多租户模式下，RPA机器人所占资源的复用和灵活调度的问题；多云和混合云模式下RPA机器人之间的安全通信和协作的问题；云模式下，兼容管理调度其他任意RPA厂商的RPA机器人的问题。发明内容针对上述问题，本发明提供了一种多租户架构多云平台下的云RPA系统及应用方法，实现了RPA机器人运行软硬件资源在多云或混合云模式下进行统一灵活调度，以及提升相同资源下RPA机器人并发运行的能力，实现了公有云和私有云混合的情况下，RPA机器人之间安全的相互通信协作和数据分发，实现调度和管理其他任意RPA厂商的RPA机器人。为实现上述目的，本发明提供了一种多租户架构多云平台下的云RPA系统，包括：采用B/S架构且部署运行在云端Docker容器中的RPA管理控制台、RPA资源管理调度中心、RPA设计器，部署运行在云主机中的RPA拾取器和RPA机器人执行器，以及部署在云端运行RPA机器人的系统或容器中的Agent；所述RPA管理控制台，用于：对设计编排好的RPA机器人进行流程验证审核及上架发布；根据业务需要设置多个RPA机器人的执行要求，生成对RPA机器人的调度策略；所述RPA资源管理调度中心，用于：多个云平台的接入，包括公有IaaS云、私有IaaS云和裸金属主机；RPA机器人运行所需虚拟硬件资源的申请信息管理；统一通过接口调用的方式，在各云平台进行系统或容器的初次创建，或根据系统快照、Docker镜像进行系统、Docker容器的快速再次创建，系统或容器的管理和监控；根据所述调度策略调度执行各云平台中的RPA机器人；接收Agent发送的创建快照或Docker镜像请求，以运行该RPA机器人的系统或容器为模板创建快照或Docker镜像；完成创建快照或Docker镜像后，销毁系统或Docker容器，释放资源；所述RPA设计器，用于：设计人员对RPA机器人的流程进行设计和编排；所述RPA拾取器，用于：拾取界面UI控件元素并传递给Agent；所述Agent，用于：接收所述RPA拾取器传递来的UI控件元素信息发送给所述RPA设计器；将设计完成的RPA机器人部署到各云平台中对应的系统或容器中；接收所述RPA管理控制台的调度指令，按调度指令驱动所述RPA机器人执行器触发并执行对应的RPA机器人；采集所述RPA机器人的运行信息，在所述RPA机器人执行完成后，向所述RPA资源管理调度中心发送创建系统快照或Docker镜像请求。作为本发明的进一步改进，接入公有IaaS云，包括：下载公有IaaS云提供的虚拟资源池管理的SDK或API；在要接入集成到RPA资源管理调度中心的所述公有IaaS云上生成调用访问的公私钥密码或Token；根据不同公有IaaS云SDK集成要求适配虚拟资源池管理的功能，完成公有IaaS云虚拟资源池管理的SDK的接入。作为本发明的进一步改进，系统或容器的初次创建，包括：所述RPA资源管理调度中心根据不同业务场景在所述公有IaaS云的虚拟资源池中创建基础VM和基础Docker容器；根据不同业务的需求，在基础VM和基础Docker容器中预先安装不同的依赖软件环境和业务应用客户端，安装RPA机器人执行器和Agent，进行快照并按业务含义命名快照。作为本发明的进一步改进，接入私有IaaS云，包括：向私有IaaS云申请多个虚拟主机；在RPA资源调度中心添加虚拟主机，选择主机的类型为虚拟机，并选择系统架构和类型，设置IP地址，VNC或RDP端口，SSH 端口，系统管理员账户和密码；通过系统管理员账户远程连接到已添加的虚拟主机上，并在系统或容器中安装Agent；创建多个系统用户，并增大RDP远程桌面连接允许的数量；在不同的所述系统用户目录下安装RPA机器人执行器，每个系统用户对应的RPA机器人执行器服务单独设置不同的端口；根据不同业务的需求，预先在不同的系统用户下安装不同的依赖软件环境。作为本发明的进一步改进，接入裸金属主机，包括：在所述裸金属主机上安装操作系统和虚拟化软件，制作Windows系列、Linux系列和Android系列虚拟主机的基镜像；在基镜像的基础上，根据业务场景安装或配置不同的应用，并制作镜像快照；在所述RPA资源管理调度中心添加主机，选择主机的类型为物理机，设置接入主机的IP地址，VNC或RDP端口，SSH 端口，系统管理员账户和密码；在物理主机中安装Agent，Agent封装虚拟化软件管理所述虚拟主机命令的API服务。作为本发明的进一步改进，根据多个RPA机器人的执行流程调度执行各云平台中的RPA机器人；包括：公有IaaS云中的系统或容器中的Agent，通过REST API的方式接收来自所述RPA管理控制台对RPA机器人的调度策略，按所述调度策略驱动RPA机器人执行器触发对应的RPA机器人；对于私有IaaS云和裸金属主机，在RPA管理控制台选择执行RPA机器人的虚拟主机，虚拟主机的用户及RPA机器人，设置执行周期和频次。作为本发明的进一步改进，所述RPA管理控制台，还用于：设置用户管理、权限管理、流程数据权限分配，流程日志记录，流程过程录屏，流程远程桌面实时查看，流程评估、流程配置、流程创建、流程任务设置、流程预警、流程主机管理；所述权限管理，包括：在所述RPA管理控制台设置访问策略，只允许同一执行流程中的RPA机器人所在的VM或容器之间跨云平台进行相互访问。作为本发明的进一步改进，在公有IaaS云中部署虚拟私有网络的服务端，暴露所述虚拟私有网络的服务端IP地址或端口；利用OpenSSL生成所述虚拟私有网络的客户端证书，公钥和私钥；根据所述服务端IP地址给私有IaaS云的虚拟主机分配所述虚拟私有网络的客户端IP地址；将所述虚拟私有网络的服务端IP地址或端口、访问协议、网关地址、路由、客户端私钥，服务端公钥信息生成到一个ovpn格式的文件；在私有IaaS云的虚拟主机中安装所述虚拟私有网络的客户端，并导入ovpn格式的文件；设置私有IaaS云中虚拟主机的所述虚拟私有网络客户端自启动，得到安全TLS加密隧道；所述公有IaaS云上的RPA机器人通过安全TLS加密隧道访问私有IaaS云中的应用，私有IaaS云中的RPA机器人也是通过安全TLS加密隧道访问公有IaaS云的服务，实现跨云平台的RPA机器人相互安全访问。作为本发明的进一步改进，所述RPA设计器以微前端、微服务和IFrame的方式嵌入集成在所述RPA管理控制台中的流程设计功能模块；所述RPA资源管理调度中心以微前端、微服务和IFrame的方式嵌入集成在所述RPA管理控制台中的主机管理功能模块。本发明还提供了一种多租户架构多云平台下的云RPA系统的应用方法，包括：在所述RPA资源管理调度中心填入公有IaaS云提供的虚拟资源池的SDK、访问公钥、私钥信息，并上传Windows、Linux或Android系统镜像到公有IaaS云；在所述RPA资源管理调度中心创建一个或多个虚拟主机，在虚拟主机中安装各RPA机器人运行涉及的应用程序；在所述RPA资源管理调度中心接入在私有IaaS云申请的虚拟主机；在所述RPA管理控制台生成虚拟私有网络客户端证书，在私有IaaS云的虚拟主机中安装虚拟私有网络客户端并导入所述虚拟私有网络客户端证书；在公有IaaS云的虚拟资源池中部署虚拟私有网络服务端并生成服务端证书，对外暴露所述网络服务端的IP地址和端口；在所述RPA管理控制台设置访问策略，允许私有IaaS云申请的虚拟主机与公有IaaS云虚拟资源池中部分虚拟主机基于所述网络服务端的IP地址和端口进行访问；在所述RPA管理控制台创建多个租户用户，分别通过公有IaaS云和私有IaaS云的RPA设计器，基于所述应用程序设计业务不同环节所需的所述RPA机器人，并在所述RPA管理控制台配置各所述RPA机器人的文件共享目录和权限；设计完成的各所述RPA设计器经所述RPA管理控制台，验证审核并上架，再由Agent部署到对应的公有IaaS云或私有IaaS云的虚拟主机中；在所述RPA管理控制台配置RPA机器人调度策略，所述RPA资源管理调度中心根据调度策略触发RPA机器人执行器配置运行实例执行各所述RPA机器人；任务完成后创建系统快照或Docker镜像，销毁系统或Docker容器，释放资源。与现有技术相比，本发明的有益效果为：本发明基于B/S架构部署运行在云端Docker容器中的RPA管理控制台、RPA资源管理调度中心、RPA设计器，使RPA机器人的设计和编排模式不再受限于C/S架构；再通过将多公有IaaS云、多私有IaaS云接入集成到RPA资源调度中心，通过RPA资源调度中心统一调度管理各云平台的RPA机器人，实现跨云平台的RPA机器人调用和管理；同时，本申请通过快照、Docker镜像的创建，以及销毁已完成运行的VM和Docker容器，对于相同资源的系统、Docker容器能够快速创建和使用，提升了相同资源RPA机器人并发运行的能力，在资源有限的情况下资源的复用和RPA机器人的并发能力；最终实现了多租户模式下在线多人跨平台协同使用RPA设计器设计编排RPA机器人，满足多租户模式下RPA资源的灵活调度。本发明通过将多公有IaaS云接入集成到RPA资源调度中心，以及通过多公有IaaS云提供的资源池SDK或API，实现RPA机器人运行依赖的系统资源调度，实现不同系统镜像模板、快照的管理，以及在虚拟私有资源池中虚拟主机或Docker容器的创建、修改、调度、销毁等管理。解决了云端运行RPA机器人，以及实现云RPA依赖的虚拟主机资源的弹性调度和并发能力的提升。本发明通过将多私有IaaS云接入集成到RPA资源调度中心，及通过远程服务调用方式，在虚拟主机中安装Agent服务，实现虚拟主机的统一接入和管理，再通过系统多用户和沙箱模板技术，实现同一虚拟主机可同时并发运行多个RPA机器人，以及RPA机器人运行故障迅速切换等。本发明实现了在裸金属服务器上，自构建私有IaaS云，实现虚拟主机和Docker容器的创建、修改、调度和管理等工作，实现系统镜像、快照、容器等的统一管理和调度。实现了企业无虚拟化云资源的情况下，RPA机器人运行依赖的系统和硬件资源的虚拟化和弹性调度，以及RPA机器人并发运行的吞吐量。附图说明图1为本发明一种实施例公开的多租户架构多云平台下的云RPA系统结构示意图；图2为本发明一种实施例公开的多租户架构多云平台下的云RPA系统工作示意图；图3为本发明一种实施例公开的多租户架构多云平台下的云RPA系统资源调度及运行逻辑示意图；图4为本发明一种实施例公开的多租户架构多云平台下的云RPA系统核心功能架构图。具体实施方式为使本发明实施例的目的、技术方案和优点更加清楚，下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本发明的一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动的前提下所获得的所有其他实施例，都属于本发明保护的范围。下面结合附图对本发明做进一步的详细描述：如图1-4所示，本发明提供的一种多租户架构多云平台下的云RPA系统，包括：采用B/S架构且部署运行在云端Docker容器中的RPA管理控制台、RPA资源管理调度中心、RPA设计器，部署运行在云主机中的RPA拾取器、RPA机器人执行器和RPA机器人仓库，以及部署在云端运行RPA机器人的系统或容器中的Agent；RPA管理控制台，用于：对设计编排好的RPA机器人进行流程验证审核及上架发布；根据业务需要设置多个RPA机器人的执行流程，生成对RPA机器人的调度策略；设置用户管理、权限管理、流程数据权限分配，流程日志记录，流程过程录屏，流程远程桌面实时查看，流程评估、流程配置、流程创建、流程任务设置、流程预警、流程主机管理等；权限管理，在RPA管理控制台设置访问策略，只允许同一执行流程中的RPA机器人所在的VM或容器之间跨云平台进行相互安全访问；RPA资源管理调度中心，用于：多个云平台的接入，包括公有IaaS云、私有IaaS云和裸金属主机；RPA机器人运行所需虚拟硬件资源的申请信息管理；集中统一通过接口调用的方式在各云平台进行系统或容器的初次创建，或根据系统快照、Docker镜像进行系统、Docker容器的快速再次创建，系统或容器的管理和监控；通过将所涉及的基础技术服务、基础业务服务按最小功能单元拆分成微服务单元，用容器、VM和沙箱承载RPA机器人运行，接收统一编排调度和维护。微服务单元之间通过统一的MQ消息服务实现微服务的发布、消费或订阅，服务的访问、鉴权、路由、负载、限流、熔断等都通过统一的API网关服务来提供。根据调度策略调度执行各云平台中的RPA机器人；接收Agent发送的创建快照或Docker镜像请求，以执行该RPA机器人的系统或容器为模板创建快照或Docker镜像；完成创建快照或Docker镜像后，销毁系统或Docker容器，释放资源；RPA设计器，用于：设计人员对RPA机器人的流程进行设计和编排；RPA拾取器，用于：拾取界面UI控件元素并传递给Agent；Agent，用于：接收RPA拾取器传递来的UI控件元素信息发送给RPA设计器组件相对应输入窗体；将设计完成的RPA机器人部署到各云平台中对应的系统或容器中；接收RPA管理控制台的调度指令，按调度指令驱动RPA机器人执行器触发并执行对应的RPA机器人；采集RPA机器人的运行数据，在RPA机器人执行完成后，向RPA资源管理调度中心发送创建快照或Docker镜像请求。RPA机器人仓库，用于：存放RPA机器人、相关配置文件和依赖资源，对RPA机器人的版本分支进行管理；分发RPA机器人给各虚拟主机或容器。其中，RPA设计器以微前端、微服务和IFrame的方式嵌入集成在RPA管理控制台中的流程设计功能模块；RPA资源管理调度中心以微前端、微服务和IFrame的方式嵌入集成在RPA管理控制台中的主机管理功能模块。进一步的，接入公有IaaS云及对应的资源调度过程，包括：第一步，下载公有IaaS云提供的虚拟资源池管理的SDK或API；第二步，在要集成的公有IaaS云上生成调用访问的公私钥密码或Token等；第三步，按照适配器和模板的设计模式，分别根据不同公有云厂商SDK集成要求适配虚拟资源池管理的功能。新接入的公有云，调用SDK的同时继承云接入类属性和方法，实现新接入公有云的个性化要求；第四步，接入集成公有云虚拟资源池管理的SDK后，就可以在RPA资源管理调度中心进行VM和Docker容器的创建、销毁、调度和管理VM和Docker容器等。Android虚拟系统创建需要选择ARM架构的CPU；第五步，根据不同业务场景，创建基础VM和基础Docker容器；第六步，根据不同具体业务的需求，预先安装不同的依赖软件环境和业务应用客户端，以及RPA机器人执行器和Agent，并进行快照并按业务含义命名快照，或生成新的有业务含义的Docker容器；第七步，RPA机器人设计完成后通过GIT打包发布版本或分支并提交到私有的RPAGitLab仓库，上架发布到RPA机器人市场或商店，审核通过后会展示在RPA机器人市场或商店；第八步，当RPA机器人需要运行时，从选择运行的资源及系统环境或系统快照，Docker容器等，配置好具体虚拟硬件资源参数等，并生成新的虚拟RPA运行软硬件环境；第九步，首次RPA机器人运行触发时，从RPA机器人市场或商店选择具体的RPA流程的版本，如果是付费机器人，需要支付费用后，Agent才能自动从RPA GitLab仓库下载RPA流程执行程序和相关资源文件等；第十步，Agent通过REST API的方式接收来自RPA控制台对RPA机器人的调度策略，按调度策略驱动RPA执行器触发对应的RPA机器人；第十一步，RPA机器人执行器成功执行完RPA机器人后，Agent发送创建快照或Docker镜像请求命令给RPA资源调度中心，调度中心以当前执行本条RPA机器人的系统或容器为模板创建新的快照或镜像，并同步到待上架RPA机器人模块中，RPA机器人管理人员审核通过后，快照或镜像自动同步提交到云服务商的系统快照或镜像仓库中，下次运行同版本的RPA机器人时，直接启动运行首次创建的系统快照或镜像即可。快照和镜像创建完成后同时发送销毁运行当前实例的请求给RPA资源调度中心，调度中心执行VM或Docker容器销毁，同时释放虚拟硬件资源到虚拟资源池中；第十二步，用户注册并付费成为云RPA的会员后，会根据用户不同的付费档次，享有对应的公有IaaS云对应规模的资源池。接入私有IaaS云及对应的资源调度过程，包括：第一步，私有IaaS云一般不提供虚拟资源池管理的SDK或API，提前按业务规模需要的1.5倍数量以上的比例，申请好一定数量的虚拟主机；第二步，在RPA资源调度中心中，添加主机，选择主机的类型，本处选类型为虚拟机，选择系统架构和类型，设置IP地址，VNC或RDP端口，SSH 端口，系统管理员账户和密码等；第三步，用系统管理员账户远程连接到已添加的虚拟主机上，并在系统或容器中安装Agent服务，接受来自调度中心的指令；第四步，创建多个系统用户，并增大RDP远程桌面连接允许的数量；第五步，切换不同的系统用户，在不同的用户目录下安装RPA机器人执行器，每个用户对应的RPA机器人执行器服务单独设置不同的端口；第六步，根据不同具体业务的需求，预先在不同的系统用户下安装不同的依赖软件环境，若依赖软件是所有用户公用的，安装时选所有用户可用；第七步，若RPA机器人可以在沙箱中运行，则由RPA机器人执行器根据具体业务配置沙箱执行模板，实现同虚拟主机同用户下，同时执行多个RPA机器人；第八步，新建并运行触发RPA机器人时，选择执行RPA机器人的虚拟主机，虚拟主机的用户，RPA机器人，执行周期和频次等；第九步，多个RPA机器人同时在同一个虚拟主机上运行时，重复第八步，即可实现同一虚拟主机同时调度运行多个RPA机器人；第十步，若是纯B/S类型非依赖IE的RPA机器人，通过headless或有头浏览器的模式直接运行在Docker容器中，实现同一个虚拟主机同一个用户下同时调度运行多个RPA机器人。接入裸金属主机及对应的资源调度过程，包括：第一步，在裸金属主机上安装Ubuntu20.04或Debian9等操作系统和Virualbox虚拟化软件；第二步，制作Windows系列和Linux系列虚拟主机的基镜像；第三步，在基镜像的基础上，根据业务场景安装或配置不同的应用，并制作镜像快照；第四步，在RPA资源调度中心中，添加主机，选择主机的类型，本处选类型为物理机。设置接入主机的IP地址，VNC或RDP端口，SSH 端口，系统管理员账户和密码等；第五步，在物理主机中安装Agent，Agent封装Virtualbox管理虚拟机命令的API服务，支持创建、修改、删除虚拟主机，也可以创建虚拟主机快照，启停虚拟主机，Web远程访问虚拟主机等；第六步，重复中中的第三步到第十步。公有IaaS云混合私有IaaS云下，RPA机器人安全通信和交互方法的主要步骤为：第一步，公有IaaS云端部署虚拟私有网络的服务端，并暴露虚拟私有网络服务端的IP地址或端口；第二步，利用OpenSSL虚拟私有网络生成客户端证书，公钥和私钥；第三步，给私有IaaS云的虚拟主机分配虚拟私有网络客户端IP地址；第四步，把服务端IP地址、端口，访问协议，网关地址、路由、客户端私钥，服务端公钥等信息生成到一个ovpn格式的文件；第五步，在私有IaaS云的虚拟主机中安装虚拟私有网络的客户端，并导入分配好的ovpn证书；第六步，设置私有IaaS云的虚拟主机虚拟私有网络客户端自启动；第七步，公有IaaS云上的RPA机器人通过安全TLS加密隧道访问私有IaaS云中的应用，私有IaaS云中的RPA机器人也是通过安全TLS加密隧道访问公有IaaS云的服务。采用本发明的云RPA系统管理调度任意其他厂商RPA机器人的方法，主要步骤为：第一步，在虚拟云主机中安装其他厂商RPA机器人或RPA设计器或选择运行已安装好其他厂商RPA机器人或RPA设计器的系统镜像或快照；第二步，若其他厂商RPA机器人需要授权，购买或获取并输入授权码；第三步，RPA管理控制台发送触发和调度指令给RPA执行器，触发执行调度其他厂商RPA机器人；第四步，若没有授权的情况下，抓取其他厂商RPA设计器的登陆、启动或停止等界面元素或控件，编写自动化脚本，通过RPA管理控制台发送触发和调度指令给RPA执行器，触发自动化脚本执行RPA机器人；第五步，通过Hook技术采集其他厂商RPA的RPA机器人运行和异常数据发送到RPA管理控制台。本发明云模式下多人在线协作使用RPA设计器的主要步骤为：第一步，在云主机中部署B/S版的RPA设计器；第二步，在云主机实例中部署RPA拾取器和相关应用客户端和依赖的基础环境；第三步，在RPA设计器中配置云主机实例远程桌面连接；第四步，在设计器工作画布中推拽出云主机桌面组件，配置RPA拾取器；第五步，在RPA设计器中推拉拽出组件到设计器工作画布，双击组件并选择元素拾取，打开云主机实例桌面，用RPA拾取器拾取应用的界面UI控件，并发送界面UI控件信息给RPA设计器元素信息框；第六步，在RPA设计器中推拉拽出其他需要编排的组件到设计器工作画布中，双击脱出的组件并选择元素拾取，自动打开云主机实例桌面，用RPA拾取器拾取应用的界面UI控件，并发送界面UI控件信息给RPA设计器元素信息框；第七步，依次用线条连接RPA设计器工作画布中的各组件，并设置各组件的动作，事件、逻辑等；第八步，分配多人拥有同一条流程的数据权限后，多人就可以同时在不同的页签设计编排同一条RPA流程的子流程。同一个页签也可由有权限的其他人修改编辑；第九步，保存部署设计编辑好的RPA流程，点击触发执行组件，测试验证设计编排好的RPA流程功能是否实现和完整。本申请中一种多租户架构多云平台下的云RPA系统工作示意图如图2所示，其中，各模块的具体功能或各交互过程的具体功能为：1、公有IaaS云接入：实现不同公有IaaS云接入的核心逻辑和扩展接口；2、私有IaaS云接入：使虚拟主机接入适配服务，实现不同私有IaaS云虚拟主机接入；3、裸金属服务器接入：实现企业裸金属服务器接入管理；4、SDK/访问密钥：实现对不同公有IaaS云虚拟资源池接入SDK或访问公私钥管理等；5、公私钥对/IP地址端口，账户密码：实现私有IaaS云或裸金属服务器接入及用户账户管理等；6、公有IaaS云虚拟主机管理：包括镜像管理、快照管理、VM模板管理等；7、虚拟主机管理：针对私有IaaS云虚拟主机的管理，包括远程桌面、系统用户管理、应用沙箱管理等；8、裸金属下虚拟机管理：包括虚拟主机/镜像管理、快照管理、VM模板管理，主机管理等；9、针对Linux系统的虚拟主机中Docker容器管理和Windows虚拟主机系统用户管理；10、公有IaaS云中虚拟主机和Docker容器的管理：接入公有IaaS云后对其Docker容器和虚拟机主机管理；11、公有IaaS云和私有IaaS云交互过程：公有IaaS云和私有IaaS云之间的RPA机器人通过安全加密通道进行访问协作；12、RPA机器人仓库分发RPA机器人的过程：RPA机器人仓库通过内网分发RPA机器人给公有IaaS云、私有IaaS云和裸金属服务器的虚拟主机或Docker容器；13、私有IaaS云和裸金属服务器中虚拟主机和Docker容器的管理；14、虚拟资源池：根据网络或业务分配的不同类型的虚拟主机或Docker容器；15、RPA机器人仓库：存放RPA机器人及配置或依赖文件，管理RPA机器人版本和分支；本申请中一种多租户架构多云平台下的云RPA系统资源调度及运行逻辑示意图如图3所示，各模块的具体功能为：1、RPA机器人仓库：存放RPA机器人及配置或依赖文件，管理RPA机器人版本和分支；2、系统镜像基础仓库：存放Windows/Linux/Android系统干净的基础镜像，默认安装常见工具软件；3、VM虚拟主机快照仓库：按业务或需求生成有特定功能的系统快照的存放仓库；4、VM虚拟主机模板仓库：根据模板Agent可自动安装所需工具软件或环境配置；5、VM运行实例：运行RPA机器人的虚拟主机；6、Docker运行实例：在Dokcer容器中运行B/S架构下非IE浏览器的容器型RPA机器人；7、Docker容器仓库：存放Docker容器的镜像和版本；8、RPA运行环境沙箱仓库：存放Windows虚拟主机中运行的沙箱型RPA机器人，包括RPA机器人版本和分支管理控制；9、虚拟资源池：即RPA运行的资源池，根据网络或业务分配的不同类型的虚拟主机或Docker容器；10、Agent：Docker运行实例和VM运行实例中的Agent，负责RPA机器人及配置文件等的获取，以及环境配置，脚本执行和与RPA管理控制台的数据交互；本发明中一种多租户架构多云平台下的云RPA系统核心功能架构图如图4所示，各模块的具体功能为：1、RPA设计器：负责RPA机器人的设计、编排、数据逻辑处理、流程处理等；2、RPA机器人仓库：负责存放RPA机器人及配置或依赖文件，管理RPA机器人的版本和分支；3、RPA机器人商店：负责RPA机器人的展示，选择和安装；4、RPA管理控制台：实现多云环境下租户、用户、资源、证书、权限、预警、系统镜像、快照、沙箱，授权、机器人、流程、任务、订单、主机等统一管理；5、虚拟资源池：RPA机器人运行所依赖的虚拟主机系统或Docker容器资源；6、RaaS社区门户：实现RPA机器人相关的技术回答、讨论、专题、产品发布等；7、开发者/用户：用于RPA机器人用户和开发者个人信息的注册、审核、权限分配资源申请等。本发明还提供了一种多租户架构多云平台下的云RPA系统的应用方法，包括：在RPA资源管理调度中心填入公有IaaS云提供的虚拟资源池的SDK、访问公钥、私钥信息，并上传Windows、Linux或Android系统镜像到公有IaaS云；在RPA资源管理调度中心创建一个或多个虚拟主机，在虚拟主机中安装各RPA机器人运行涉及的应用程序；在RPA资源管理调度中心接入在私有IaaS云申请的虚拟主机；在RPA管理控制台生成虚拟私有网络客户端证书，在私有IaaS云的虚拟主机中安装虚拟私有网络客户端并导入虚拟私有网络客户端证书；在公有IaaS云的虚拟资源池中部署虚拟私有网络服务端并生成服务端证书，对外暴露网络服务端的IP地址和端口；在RPA管理控制台设置访问策略，允许私有IaaS云申请的虚拟主机与公有IaaS云虚拟资源池中部分虚拟主机基于网络服务端的IP地址和端口进行访问；在RPA管理控制台创建多个租户用户，分别通过公有IaaS云和私有IaaS云的RPA设计器，基于应用程序设计业务不同环节所需的RPA机器人，并在RPA管理控制台配置各RPA机器人的文件共享目录和权限；设计完成的各RPA设计器经RPA管理控制台，验证审核并上架，再由Agent部署到对应的公有IaaS云或私有IaaS云的虚拟主机中；在RPA管理控制台配置RPA机器人调度策略，RPA资源管理调度中心根据调度策略触发RPA机器人执行器配置运行实例执行各RPA机器人；任务完成后创建系统快照或Docker镜像，销毁系统或Docker容器，释放资源。本发明中以Docker容器、沙箱和VM为基础，根据业务需要进行模板化预制，屏蔽应用开发语言的差异，系统环境等差异。利用Docker容器，沙箱，VM的快照机制，实现其快速分发和调度。使不同的企业租户拥有完全隔离的RPA机器人运行资源池，服务池等。实施例：场景描述：RPA资源管理调度中心接入阿里公有IaaS云和企业私有IaaS云，在公私混合的IaaS云环境下，通过虚拟主机调度RPA机器人实现银企自动对账。本场景以工商银行，20个无盾的工商电子银行为例，下载网银流水和企业日记账，并自动生成余额调节表，企业日记账从NC65系统中下载。前置条件：网银流水下载RPA机器人运行在阿里云的Windows10系统中上，企业日记账下载机器人运行在企业私有IaaS云的Windows10系统中上。自动生成余额调节表RPA机器人运行在企业私有IaaS云中的Docker中。Windows10系统镜像已安装IE浏览器RPA控件，Agent或RPA拾取器，已设置和开启了系统的远程桌面服务，部署了RPA执行器。已经购买了阿里云虚拟主机等资源池，已向企业申请了私有IaaS云中的虚拟主机。主要步骤包括：1、在RPA资源管理调度中心填入阿里云虚拟私有池SDK访问公私钥等信息；2、在RPA资源管理调度中心接入企业私有IaaS云申请分配的虚拟主机；3、上传Windows10系统定制镜像到阿里云；4、在RPA资源管理调度中心按需创建两个虚拟主机，并安装工行网银助手，进行证书、驱动、浏览器等自动安装和修复；5、在虚拟机中安装USBServer驱动和客户端，并配置连接USBServer的相关信息；6、在企业私有IaaS云申请分配的虚拟主机中安装NC客户端等；7、在阿里云虚拟私有池中部署虚拟私有网络服务端，并生成服务端证书，对外暴露私有云服务端公网IP和端口；8、在RPA管理控制台生成几个虚拟私有网络客户端证书；9、在企业私有IaaS云要运行企业日记账下载的RPA机器人的虚拟主机中安装虚拟私有网络客户端并导入前一步生成的客户端证书；10、在USBServer设备中安装虚拟私有网络客户端导入前一步生成的客户端证书；11、在RPA管理控制台设置访问策略，只允许阿里云虚拟私有池中部分虚拟主机网段可与企业私有IaaS云中申请的部分虚拟主机访问；12、通过浏览器登陆RPA管理控制台，创建并授权两个租户用户。并分别虚拟资源，一个用户设计网银流水下载RPA机器人，一个用户设计企业日记账下载RPA机器人；13、在RPA管理控制台配置网银流水下载RPA机器人和企业日记账下载RPA机器人，余额调节表自动生成RPA机器人的文件共享目录和权限，供RPA机器人之间数据的共享和读写；14、分别用刚创建的用户登陆RPA管理控制台，在RPA中心中分别创建网银流水下载RPA机器人，企业日记账下载RPA机器人，余额调节表生成RPA机器人，网银流水下载RPA机器人选择阿里云，运行实例两个，企业日记账下载RPA机器人选择企业私有IaaS云主机，运行实例一个，余额调节表RPA机器人选择选择企业私有IaaS云主机，运行一个Docker容器；15、点击设计，开始拾取，设计、编排网银流水下载机器人和企业日记账下载机器人，设计完成并发布，Agent接收到部署请求后，下载相关配置和文件到已创建好对应的虚拟主机中的指定文件目录下；16、在RPA管理控制台配置流水触发的任务；17、非首次运行的定时任务触发网银流水下载RPA机器人时，自动根据首次运行成功后创建的系统快照创建虚拟主机；18、网银流水下载RPA机器人和企业日记账下载RPA机器人下载完流水后自动触发执行余额调节表RPA机器人，余额调节表RPA机器人运行完成后自动销毁Docker容器，释放资源。若是其他厂商RPA设计器和执行器，只需替换上述实例步骤15中在虚拟主机中安装其他厂商的RPA的设计器或执行器，输入授权码后其他不变，即可实现管理和调度其他厂商的RPA。注：RPA拾取器、RPA设计器、RPA执行器，Agent，USBServer非本发明所申请专利，他们分别为本实例中配套支持软件或方法，相关功能均采用本领域现有技术实现。本发明的优点：通过将多公有IaaS云接入集成到RPA资源调度中心，以及通过多公有IaaS云提供的资源池SDK或API，实现RPA机器人运行依赖的系统资源调度，实现不同系统镜像模板、快照的管理，以及在虚拟私有资源池中虚拟主机或Docker容器的创建、修改、调度、销毁等管理。解决了云端运行RPA机器人，以及实现云RPA依赖的虚拟主机资源的弹性调度和并发能力的提升。通过将多私有IaaS云接入集成到RPA资源调度中心，及通过远程服务调用方式，在虚拟主机中安装Agent服务，实现虚拟主机的统一接入和管理，再通过系统多用户和沙箱模板技术，实现同一虚拟主机可同时并发运行多个RPA机器人，以及RPA机器人故障迅速切换等。实现了在裸金属服务器上，自构建私有IaaS云，实现虚拟主机和Docker容器的创建、修改、调度和管理等工作，实现系统镜像、快照、容器等的统一管理和调度。实现了企业无虚拟化云资源的情况下，RPA机器人运行依赖的系统和硬件资源，弹性调度，以及RPA机器人并发运行的吞吐量。采用虚拟私有网络，通过TLS建立安全加密隧道，以及基于公私钥的安全认证体系，实现公有IaaS云和私有IaaS云之间的应用或服务，RPA机器人互相安全访问和交互协助的功能。通过虚拟化和容器技术，以及界面UI控件元素抓取，以及自动化触发等技术，实现RPA管理控制台同时管理调度其他任意RPA厂商的RPA机器人。借助B/S架构的RPA设计器，以及虚拟化和容器技术，远程桌面网关技术，多租户架构，实现云模式下多人同时在线实时协助使用RPA设计器。以上仅为本发明的优选实施例而已，并不用于限制本发明，对于本领域的技术人员来说，本发明可以有各种更改和变化。凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的保护范围之内。
