标题title
芯片控制方法及芯片
摘要abst
本发明提供了芯片控制方法及芯片，该方法包括：在监测到M核满足休眠条件后，向A核发送休眠指令，以使A核基于休眠指令将A核的运行状态存入DDR；在接收到A核反馈的休眠响应时，执行休眠流程使M核进入休眠状态，并设置可唤醒中断，休眠响应为A核根据休眠指令执行休眠流程时向M核发送的响应；在M核进入休眠状态后，将M核休眠状态存入M核CPU状态寄存器，以使A核在通过M核CPU状态寄存器判断M核已休眠后关闭DDR时钟，设置DDR模式进入自刷新模式，控制芯片进入休眠状态。通过本发明，能够使A核在休眠的时候无需关机，而是进入待机到内存状态，使得A核唤醒过程可以仅通过从STR状态恢复，避免从关机状态重新走启动流程，进而使得芯片启动更快。
权利要求书clms
1.一种芯片控制方法，所述芯片包括相互独立的若干M核及A核，所述方法应用于任意一所述M核，其特征在于，所述方法包括：在监测到M核满足休眠条件后，向所述A核发送休眠指令，以使所述A核基于所述休眠指令将A核的运行状态存入DDR；在接收到所述A核反馈的休眠响应时，执行休眠流程使所述M核进入休眠状态，并设置可唤醒中断，所述休眠响应为所述A核根据所述休眠指令执行休眠流程时向所述M核发送的响应；在所述M核进入休眠状态后，将所述M核休眠状态存入M核CPU状态寄存器，以使所述A核在通过所述M核CPU状态寄存器判断M核已休眠时关闭DDR时钟，设置DDR模式进入自刷新模式，控制所述芯片进入休眠状态。2.根据权利要求1所述的方法，其特征在于，所述方法还包括：在监测到所述可唤醒中断被触发后，执行所述芯片的启动流程，加载所述A核的ATF镜像文件启动所述A核，以使能所述DDR时钟，使所述DDR时钟由自刷新模式恢复至正常模式，令所述A核恢复在所述DDR中存储的运行状态，控制所述芯片进入正常运行状态。3.根据权利要求1所述的方法，其特征在于，在所述M核进入休眠状态之前，所述方法还包括：监测所述M核是否满足休眠条件；在监测到所述M核不满足休眠条件时，获取SRAM中存储的所述A核的运行状态；基于所述运行状态启动所述A核，控制所述芯片进入正常运行状态。4.根据权利要求1所述的方法，其特征在于，所述方法还包括：在接收到所述A核反馈的休眠失败响应时，重新监测所述M核是否满足休眠条件，所述休眠失败响应为所述A核在接收到所述休眠指令后确定A核不满足休眠条件时向所述M核反馈的响应。5.根据权利要求1所述的方法，其特征在于，所述执行休眠流程使所述M核进入休眠状态包括：关闭所述芯片的外部设备；维持所述DDR时钟的供电，并设置所述芯片需要关闭的电源，使所述芯片的电源管理单元进入待机状态；关闭M核时钟，使所述M核进入休眠状态。6.一种芯片控制方法，所述芯片包括相互独立的若干M核与A核，所述方法应用于任意一所述A核，其特征在于，所述方法包括：接收所述M核发送的休眠指令；基于所述休眠指令向所述M核发送休眠响应，并将所述A核的运行状态存入DDR，以使所述M核在接收到所述A核反馈的休眠响应时，执行休眠流程使所述M核进入休眠状态，并设置可唤醒中断；在监测到所述M核进入休眠状态时，关闭所述DDR时钟，设置所述DDR模式进入自刷新模式，控制所述芯片进入休眠状态，所述M核休眠状态为所述M核进入休眠状态后CPU状态寄存器值。7.根据权利要求6所述的方法，其特征在于，在向所述M核发送休眠响应之前，所述方法还包括：判断所述A核是否满足休眠条件；在所述A核不满足休眠条件时，向所述M核反馈休眠失败响应，以使所述M核结束休眠流程，并重新监测M核是否满足休眠条件。8.根据权利要求7所述的方法，其特征在于，在A核满足休眠条件时，向所述M核发送休眠成功响应，以使所述M核在接收到所述A核反馈的休眠成功响应时，执行休眠流程使所述M核进入休眠状态。9.根据权利要求6所述的方法，其特征在于，在接收M核发送的休眠指令之后，所述方法还包括：关闭所述芯片的外设电源，并设置所述芯片的引脚状态；调用所述芯片的休眠函数，关闭所述A核的自身时钟。10.一种芯片，所述芯片包括相互独立的若干M核与A核，其特征在于，所述M核在监测到M核满足休眠条件后，向所述A核发送休眠指令；所述A核接收所述M核发送的休眠指令，基于所述休眠指令执行休眠流程，将所述A核的运行状态存入DDR，并向所述M核发送休眠响应；所述M核在接收到所述A核反馈的休眠响应时，执行休眠流程使所述M核进入休眠状态，并设置可唤醒中断；所述A核监测到所述M核进入休眠状态后，关闭DDR时钟，设置DDR模式进入自刷新模式，控制所述芯片进入休眠状态。
说明书desc
技术领域本发明涉及车载域控芯片技术领域，具体涉及芯片控制方法及芯片。背景技术由于NXP S32G是全球首次将传统MCU与具备ASILB功能安全的高性能MPU集成在一颗芯片上的产品，所以在车载域控芯片选型上备受各OEM厂商青睐。其中大家不仅关注处理性能，安全性能和休眠功耗，同时还关注启动时间。正因为在S32G上集成了MCU，在S32G2的MPU侧，包含四个Coretex-A53内核，在最新的S32G3的MPU侧，包含八个Coretex-A53内核。在有如此高处理能力的A核，系统的功耗和启动时间就是我们不得不去面对的问题。相关技术中，S32G芯片的控制方式为先让A核关机，再通过M核使得S32G芯片进入待机状态。因而，在芯片唤醒时，需要使A核重新走启动流程。这样的控制方式使得A核的启动时间长，进入运行状态慢，进一步导致S32G芯片启动慢，不能及时响应用户需求。发明内容因此，本发明要解决的技术问题在于克服现有技术中的关机方式造成的芯片启动慢的缺陷，从而提供芯片控制方法及芯片。结合第一方面，本发明提供一种芯片控制方法，所述芯片包括相互独立的若干M核与A核，所述方法应用于任意一所述M核，所述方法包括：在监测到M核满足休眠条件后，向所述A核发送休眠指令，以使所述A核基于所述休眠指令将A核的运行状态存入DDR；在接收到所述A核反馈的休眠响应时，执行休眠流程使所述M核进入休眠状态，并设置可唤醒中断，所述休眠响应为所述A核根据所述休眠指令执行休眠流程时向所述M核发送的响应；在所述M核进入休眠状态后，将所述M核休眠状态存入M核CPU状态寄存器，以使所述A核在通过所述M核CPU状态寄存器判断M核已休眠时关闭DDR时钟，设置DDR模式进入自刷新模式，控制所述芯片进入休眠状态。在该方式中，能够使A核在休眠的时候不无需关机，而是进入待机到内存状态，使得A核唤醒过程可以仅通过从STR状态恢复，避免从关机状态重新走启动流程，大幅度降低A核启动流程时间耗费，进而使得芯片启动更快，更及时响应用户需求，提高了用户体验。结合第一方面，在第一方面的第一实施例中，所述方法还包括：在监测到所述可唤醒中断被触发后，执行所述芯片的启动流程，加载所述A核的ATF镜像文件启动所述A核，以使能所述DDR时钟，使所述DDR模式由自刷新模式恢复至正常模式，令所述A核恢复在所述DDR中存储的运行状态，控制所述芯片进入正常运行状态。结合第一方面，在第一方面的第二实施例中，在所述M核进入休眠状态之前，所述方法还包括：监测所述M核是否满足休眠条件；在监测到所述M核不满足休眠条件时，获取SRAM中存储的所述A核的运行状态；基于所述运行状态启动所述A核，控制所述芯片进入正常运行状态。结合第一方面，在第一方面的第三实施例中，所述方法还包括：在接收到所述A核反馈的休眠失败响应时，重新监测所述M核是否满足休眠条件，所述休眠失败响应为所述A核在接收到所述休眠指令后确定A核不满足休眠条件时向所述M核反馈的响应。结合第一方面，在第一方面的第四实施例中，所述执行休眠流程使所述M核进入休眠状态包括：关闭所述芯片的外部设备；维持所述DDR时钟的供电，并设置所述芯片需要关闭的电源，使所述芯片的电源管理单元进入待机状态；关闭M核时钟，使所述M核进入休眠状态。在本发明的第二方面，本发明还提供一种芯片控制方法，所述芯片包括相互独立的若干M核与A核，所述方法应用于任意一所述A核，所述方法包括：接收所述M核发送的休眠指令；基于所述休眠指令向所述M核发送休眠响应，并将所述A核的运行状态存入DDR，以使所述M核在接收到所述A核反馈的休眠响应时，执行休眠流程使所述M核进入休眠状态，并设置可唤醒中断；在监测到所述M核进入休眠状态时，关闭所述DDR时钟，设置所述DDR模式进入自刷新模式，控制所述芯片进入休眠状态，所述M核休眠状态为所述M核进入休眠状态后CPU状态寄存器值。结合第二方面，在第二方面的第一实施例中，在向所述M核发送休眠响应之前，所述方法还包括：判断所述A核是否满足休眠条件；在所述A核不满足休眠条件时，向所述M核反馈休眠失败响应，以使所述M核结束休眠流程，并重新监测M核是否满足休眠条件。结合第二方面的第一实施例，在第二方面的第二实施例中，在A核满足休眠条件时，向所述M核发送休眠成功响应，以使所述M核在接收到所述A核反馈的休眠成功响应时，执行休眠流程使所述M核进入休眠状态。结合第二方面，在第二方面的第三实施例中，在接收M核发送的休眠指令之后，所述方法还包括：关闭所述芯片的外设电源，并设置所述芯片的引脚状态；调用所述芯片的休眠函数，关闭所述A核的自身时钟。根据第三方面，本发明实施方式还提供一种芯片，所述芯片包括相互独立的若干M核与A核，所述M核在监测到M核满足休眠条件后，向所述A核发送休眠指令；所述A核接收所述M核发送的休眠指令，基于所述休眠指令执行休眠流程，将所述A核的运行状态存入DDR，并向所述M核发送休眠响应；所述M核在接收到所述A核反馈的休眠响应时，执行休眠流程使所述M核进入休眠状态，并设置可唤醒中断；所述A核监测到所述M核进入休眠状态后，关闭DDR时钟，设置DDR模式进入自刷新模式，控制所述芯片进入休眠状态。附图说明为了更清楚地说明本发明具体实施方式或现有技术中的技术方案，下面将对具体实施方式或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本发明的一些实施方式，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1是根据一示例性实施例提出的一种芯片控制方法的流程图。图2是根据一示例性实施例提出的一种芯片唤醒方法的流程图。图3是根据一示例性实施例提出的一种芯片休眠方法的流程图。图4是根据一示例性实施例提出的另一种芯片控制方法的流程图。图5是根据一示例性实施例提出的一种芯片休眠方法的流程图。图6是根据一示例性实施例提出的一种芯片唤醒方法的流程图。图7是根据一示例性实施例提出的一种芯片的结构框图。图8是根据一示例性实施例提出的一种芯片的结构框图。具体实施方式下面将结合附图对本发明的技术方案进行清楚、完整地描述，显然，所描述的实施例是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。相关技术中，在S32G上集成了MPU，在S32G2的MPU侧，包含四个Coretex-A53内核，在最新的S32G3的MPU侧，包含八个Coretex-A53内核。在有如此高处理能力的A核，系统的功耗和启动时间就是我们不得不去面对的问题。S32G芯片的控制方式为先让A核关机，再通过M核使得S32G芯片进入待机状态。因而，在芯片唤醒时，需要使A核重新走启动流程。这样的控制方式使得A核的启动时间长，进入运行状态慢，进一步导致S32G芯片启动慢，不能及时响应用户需求。为解决上述问题，本发明实施例中提供一种芯片控制方法，用于芯片中。下述方法实施例中，均以执行主体是S32G芯片为例来进行说明。本实施例中的芯片控制方法，适用于由相互独立的M核和若干A核构成的芯片的休眠及启动的使用场景，本发明实施例是以S32G芯片的休眠及启动的使用场景为例进行的说明，仅以此为例，并不以此为限。通过本发明提供的芯片控制方法，能够使A核在休眠的时候不无需关机，而是进入待机到内存状态，使得A核唤醒过程可以仅通过从STR状态恢复，避免从关机状态重新走启动流程，大幅度降低A核启动流程时间耗费，进而使得芯片启动更快，更及时响应用户需求，提高了用户体验。图1是根据一示例性实施例提出的一种芯片控制方法的流程图。如图1所示，应用于任意一M核的芯片控制方法包括如下步骤S101至步骤S103。在步骤S101中，在监测到M核满足休眠条件后，向A核发送休眠指令，以使A核基于休眠指令将A核的运行状态存入DDR。在本发明实施例中，通过M核向A核发送休眠指令，将A核的运行状态存入DDR中，以实现A核进入STR状态，以便于A核从STR状态唤醒，进而节约唤醒时间。在步骤S102中，在接收到A核反馈的休眠响应时，执行休眠流程使M核进入休眠状态，并设置可唤醒中断。在本发明实施例中，在M核向A核发送休眠指令后，为确保M核对A核状态的掌控，避免错误发送指令或多次发送指令，则获取A核的反馈，以便于M核根据A核的状态确定指令接收情况，进而以便于在发生触发可唤醒中断的事件后，M核也可以尽快对A核发送指令，唤醒A核。在步骤S103中，在M核进入休眠状态后，将M核休眠状态存入M核CPU状态寄存器，以使A核在通过M核CPU状态寄存器判断M核已休眠时关闭DDR时钟，设置DDR模式进入自刷新模式，控制芯片进入休眠状态。通过上述实施例，能够使A核在休眠的时候不无需关机，而是进入待机到内存状态，使得A核唤醒过程可以仅通过从STR状态恢复，避免从关机状态重新走启动流程，大幅度降低A核启动流程时间耗费，进而使得芯片启动更快，更及时响应用户需求，提高了用户体验。图2是根据一示例性实施例提出的一种芯片唤醒方法的流程图。如图2所示，芯片唤醒方法包括如下步骤。在一实施例中，在监测到可唤醒中断被触发后，执行芯片的启动流程，加载A核的ATF镜像文件启动A核，以使能DDR时钟，使DDR模式由自刷新模式恢复至正常模式，令A核恢复在DDR中存储的运行状态，控制芯片进入正常运行状态。在本发明实施例中，在监测到可唤醒中断被触发后，通过M核唤醒A核，使A核从STR状态中恢复，大幅度缩减了A核的唤醒时间，进而使得芯片启动时间大幅度降低。在一示例中，M核唤醒A核流程可以包括：外界触发唤醒中断，中断源是GPIO；内界触发唤醒中断，中断源是片内RTC。S32G wakeup模块在接收到中断事件后，芯片从standby向run模式转换，bootrom按照full boot的方式正常启动。bootrom从emmc或norflash存储加载M核bootloader并运行。M核bootloader启动后，再加载M核应用MApp。MApp从emmc或norflash存储加载位于A核的ATF镜像，并启动A核。其中，ATF BL2作为引导加载程序，它在A53 U-Boot之前运行，并对SoC进行初始化，如时钟或部分外围设备，特别是初始化DDR，加载BL31。MApp启动A核后，将继续运行MApp其它任务。在一实施场景中，在M核进入休眠状态之前，方法还包括：监测M核是否满足休眠条件；在监测到M核不满足休眠条件时，获取SRAM中存储的A核的运行状态；基于运行状态启动A核，控制芯片进入正常运行状态。在另一实施场景中，在接收到A核反馈的休眠失败响应时，重新监测M核是否满足休眠条件，其中，休眠失败响应为A核在接收到休眠指令后确定A核不满足休眠条件时向M核反馈的响应。图3是根据一示例性实施例提出的一种芯片休眠方法的流程图。如图3所示，芯片休眠方法包括如下步骤。在本发明实施例中，执行休眠流程使M核进入休眠状态包括：关闭芯片的外部设备；维持DDR时钟的供电，并设置芯片需要关闭的电源，使芯片的电源管理单元进入待机状态；关闭M核时钟，使M核进入休眠状态。在一示例中，执行休眠流程使M核进入休眠状态可以包括：当M核满足睡眠条件后，通过IPCF给A核发送睡眠通知指令。其中，IPCF是NXP提供的一种基于SRAM共享内存M核和A核通讯的软件机制当M核接收到A核休眠成功响应后，同时不满足唤醒条件，则M核进入休眠逻辑。M核关闭can/lin等外设。设置PMIC需要关闭的电源，准备进入休眠状态。关闭Mcore时钟，进入WFI待机状态。其中，WFI是S32G核进入关机状态后一种状态指示。图4是根据一示例性实施例提出的另一种芯片控制方法的流程图。如图4所示，应用于任意一A核的芯片控制方法包括如下步骤S101至步骤S103。在步骤S401中，接收M核发送的休眠指令。在步骤S402中，基于休眠指令向M核发送休眠响应，并将A核的运行状态存入DDR，以使M核在接收到A核反馈的休眠响应时，执行休眠流程使M核进入休眠状态，并设置可唤醒中断。在步骤S403中，在监测到M核进入休眠状态时，关闭DDR时钟，设置DDR模式进入自刷新模式，控制芯片进入休眠状态，M核休眠状态为M核进入休眠状态后CPU状态寄存器值。在本发明实施例中，在向M核发送休眠响应之前，方法还包括：判断A核是否满足休眠条件；在A核不满足休眠条件时，向M核反馈休眠失败响应，以使M核结束休眠流程，并重新监测M核是否满足休眠条件。在另一实施场景中，在A核满足休眠条件时，向M核发送休眠成功响应，以使M核在接收到A核反馈的休眠成功响应时，执行休眠流程使M核进入休眠状态。在本发明实施例中，在接收M核发送的休眠指令之后，休眠流程包括：关闭芯片的外设电源，并设置芯片的引脚状态；调用芯片的休眠函数，关闭A核的自身时钟。图5是根据一示例性实施例提出的一种芯片休眠方法的流程图。在一示例中，如图5所示，应用于任意一A核的休眠流程可以包括：A核接到休眠指令后，判断是否满足休眠条件，如果满足则向M核发送休眠成功响应，同时A核准备进入休眠状态；否则发送休眠失败响应。A核执行休眠流程，最后执行休眠指令,linux内核按suspend逻辑关闭外设电源和设置部分IO引脚的状态，保存DDR上下文。ATF接收到内核PSCI睡眠通知后，开始调用S32G平台休眠函数。拷贝bl32sram镜像，设置warm entry入口。关闭A核时钟，等待M核进入WFI状态。当ATF判断M核进入WFI状态后，将关闭DDR时钟，同时设置DDR模式为自刷新模式。S32G进入到standby模式。S32G进入休眠状态。图6是根据一示例性实施例提出的一种芯片唤醒方法的流程图。在一示例中，如图6所示，应用于任意一A核的唤醒流程可以包括：ATF BL2判断系统的启动原因，如果是唤醒方式，则跳转到resume bl31。设置串口驱动。设置standby sram resume入口地址，使能A53的时钟和DDR的时钟，DDR从自刷新模式恢复到正常模式。恢复DDR上下文。按照Linux内核resume流程，恢复部分外设和IO的状态。通过上述实施例，能够使A核在休眠的时候不要关机，而是进入STR状态，避免从关机状态重新走启动流程，大幅度降低A核启动流程时间耗费，进而使得S32G芯片启动更快，更及时响应用户需求，提高了用户体验。基于相同发明构思，本发明还提供一种芯片。图7是根据一示例性实施例提出的一种芯片的结构框图。如图7所示，芯片包括相互独立的若干M核与A核。M核在监测到M核满足休眠条件后，向A核发送休眠指令；A核接收M核发送的休眠指令，基于休眠指令执行休眠流程，将A核的运行状态存入DDR，并向M核发送休眠响应；M核在接收到A核反馈的休眠响应时，执行休眠流程使M核进入休眠状态，并设置可唤醒中断；A核监测到M核进入休眠状态后，关闭DDR时钟，设置DDR模式进入自刷新模式，控制芯片进入休眠状态。图8是根据一示例性实施例提出的一种芯片的结构框图。如图8所示，芯片包括相互独立的若干M核与A核及SRAM。在一示例中，M核与A核通过SRAM进行通信。每一M核与A核均有其对应编号，执行上述芯片控制方法的M核为所有M核的主核，执行上述芯片控制方法的A核为所有A核的主核，任意编号M核及A核均可为主核。以M0核为M核主核，A0为A核主核为例，A0核及M0核分别控制其余A核及M核的运行与休眠。在bootrom从emmc或norflash存储加载M核bootloader并运行的步骤时，M0核启动；M核bootloader启动后，再加载M核应用MApp，以使全体M核启动运行。在MApp从emmc或norflash存储加载位于A核的ATF镜像，并启动A核时，A0核启动；在加载BL31时，以使全体A核启动运行。上述芯片的具体限定以及有益效果可以参见上文中对于芯片控制方法的限定，在此不再赘述。上述各个模块可全部或部分通过软件、硬件及其组合来实现。上述各模块可以硬件形式内嵌于或独立于计算机设备中的处理器中，也可以以软件形式存储于计算机设备中的存储器中，以便于处理器调用执行以上各个模块对应的操作。显然，上述实施例仅仅是为清楚地说明所作的举例，而并非对实施方式的限定。对于所属领域的普通技术人员来说，在上述说明的基础上还可以做出其它不同形式的变化或变动。这里无需也无法对所有的实施方式予以穷举。而由此所引伸出的显而易见的变化或变动仍处于本发明创造的保护范围之中。
