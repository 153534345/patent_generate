标题title
乘法器、乘法计算方法、处理系统及存储介质
摘要abst
本发明公开了一种乘法器、乘法计算方法、处理系统及存储介质，通过移位操作，将乘法器的部分积计算粒度细化，将移位过程中相互无影响的部分积进行拼接操作，避免使用了加法器，极大地提升了计算速度，进而提高了芯片的运行速度；将低32位结果与高32位结果作为两个输出分别进行计算。在仅仅需要低32位结果时，不必对全部部分积进行运算，只需要同低32位结果相关的部分积参与运算，提高了计算速度，降低了计算能耗。
权利要求书clms
1.一种乘法器，其特征在于，包括：第一运算单元，用于计算A0×B3，A1×B2，A2×B1，A3×B0的和，并存储所述和的低8位X1、高8位与1位进位；计算A0×B1，A1×B0之和，得到16位结果X4X5与一位进位Coutlow1；第二运算单元，用于对所述低8位X1与进位Coutlow1进行8位加法运算，得到X´1，并存储加法运算产生的进位Coutlow3；将加法运算的结果X´1扩展为32位值X´1000；拼接所述32位值X´1000与32位结果0X4X50，得到X´1X4X50以及1位进位Coutlow2；计算A0×B2，A1×B1，A2×B0的和，得到X2X300，将X2X300与A0×B0的结果00X6X7按位相加，得到32位结果X2X3X6X7；计算A2×B3，A3×B2，产生一位进位Couthigh3与16位和X8X9，将其分别扩展成32位的Couthigh3000和0X8X90，并与之前存储的扩展后的32位000X1计算结果按位相加得32位结果Couthigh3X8X9X1；第三运算单元，用于将X´1X4X50与X2X3X6X7两个32位值进行加和，得到低32位结果与1位进位Coutlow4；计算A1×B3，A2×B2，A3×B1之和，得到16位结果X10X11与1位进位Couthigh2，计算A3×B3得到16位结果X12X13，两个32位结果00X10X11与X12X1300拼接成32位数X12X13X10X11；其中，A3A2A1A0与B3B2B1B0为将32位定点数A、B分别分解为8位得到的结果，Xi为位宽8位的数，i=1,2...n,n为正整数。2.根据权利要求1所述的乘法器，其特征在于，还包括：第四运算单元，用于将Couthigh3X8X9X1与X12X13X10X11进行32位加法，得到高32位结果的中间值和1位进位Couthigh1，拼接Couthigh2、Couthigh1和Coutlow，得到0Couthigh2Couthigh1Coutlow，将高32位结果的中间值与进位的拼接值再进行一次32位加法运算，得到高32位计算结果；Coutlow为对第三运算单元加和过程中产生的3个进位Coutlow2、Coutlow3、Coutlow4进行二进制编码得到的结果。3.根据权利要求1所述的乘法器，其特征在于，所述第一运算单元包括：第一计算模块，用于计算A0×B3，A1×B2，A2×B1，A3×B0的和，并存储所述和的低8位X1、高8位与1位进位；第二计算模块，计算A0×B1，A1×B0之和，得到32位结果0X4X50与一位进位Coutlow1。4.根据权利要求3所述的乘法器，其特征在于，所述第二运算单元包括：8位加法运算模块，用于对所述第一计算模块产生的低8位X1与进位Coutlow1进行8位加法运算，得到X´1，并存储加法运算产生的进位Coutlow3；扩展模块，用于将加法运算的结果X´1扩展为32位值X´1000；第一拼接模块，将32位值X´1000与32位结果0X4X50按位相加，得到X´1X4X50以及1位进位Coutlow2；复用模块，用于复用所述第一计算模块，以计算A0×B2，A1×B1，A2×B0三个部分积的和X2X300；以及复用所述第二计算模块，计算A2×B3，A3×B2，产生一位进位Couthigh3与16位和X8X9；第二拼接模块，用于拼接X2X300与A0×B0的结果00X6X7，得到32位结果X2X3X6X7；将Couthigh3、0X8X90与之前存储的扩展后的32位000X1位计算结果按位拼接相加得32位结果Couthigh3X8X9X1。5.根据权利要求3所述的乘法器，其特征在于，所述第三运算单元包括：加和模块，用于将X´1X4X50与X2X3X6X7两个32位值进行加和，得到低32位结果与1位进位Coutlow4；复用模块，用于复用所述第一计算模块，以计算A1×B3，A2×B2，A3×B1之和，得到16位结果X10X11与1位进位Couthigh2，计算A3×B3得到16位结果X12X13；拼接单元，用于将两个16位结果X10X11与X12X13拼接成32位数X12X13X10X11。6.根据权利要求1所述的乘法器，其特征在于，计算A0×B3，A1×B2，A2×B1，A3×B0的和的具体实现过程包括：利用四个8位组合逻辑乘法器分别计算A0×B3，A1×B2，A2×B1，A3×B0；采用4-2压缩器对所述四个8位组合逻辑乘法器的结果进行组合，得到两个16位结果；将所述两个16位结果加和，得到16位结果0X1以及1位进位Coutlow1。7.一种应用于乘法器的乘法计算方法，其特征在于，该方法包括：将32位定点数A、B分别分解为8位得到A3A2A1A0与B3B2B1B0；计算A0×B3，A1×B2，A2×B1，A3×B0的和，并存储所述和的低8位X1、高8位与1位进位；计算A0×B1，A1×B0之和，得到32位结果0X4X50与一位进位Coutlow1；对所述低8位X1与进位Coutlow1进行8位加法运算，得到X´1，并存储加法运算产生的进位Coutlow3；将加法运算的结果X´1扩展为32位值X´1000；拼接所述32位值X´1000与32位结果0X4X50，得到X´1X4X50以及1位进位Coutlow2；计算A0×B2，A1×B1，A2×B0的和，得到X2X300，拼接X2X300与A0×B0的结果00X6X7，得到32位结果X2X3X6X7；计算A2×B3，A3×B2，产生一位进位Couthigh3与16位和X8X9，将其分别扩展成32位的Couthigh3000和0X8X90，与之前存储的扩展后的32位000X1位计算结果按位拼接为32位结果Couthigh3X8X9X1；将X´1X4X50与X2X3X6X7两个32位值进行加和，得到低32位结果与1位进位Coutlow4；计算A1×B3，A2×B2，A3×B1之和，得到16位结果X10X11与1位进位Couthigh2，计算A3×B3得到16位结果X12X13，两个32位结果00X10X11与X12X1300拼接成32位数X12X13X10X11。8.根据权利要求7所述的乘法计算方法，其特征在于，还包括：将Couthigh3X8X9X1与X12X13X10X11进行32位加法，得到高32位结果的中间值和1位进位Couthigh1，拼接Couthigh2、Couthigh1和Coutlow，得到0Couthigh2Couthigh1Coutlow，将高32位结果的中间值与进位的拼接值再进行一次32位加法运算，得到高32位计算结果；其中，Coutlow为对第三运算单元加和过程中产生的3个进位Coutlow2、Coutlow3、Coutlow4进行二进制编码得到的结果。9.一种乘法处理系统，其特征在于，该乘法处理系统从与所述乘法处理系统耦合的存储器中读取配置文件，使得所述乘法处理系统被配置或编程为如权利要求1～6之一所述的乘法器。10.一种计算机可读存储介质，其特征在于，其存储有计算机程序，当所述计算机程序被处理器执行时，实现如权利要求7或8所述方法的步骤。
说明书desc
技术领域本发明涉及数字电路技术，特别是一种乘法器、乘法计算方法、处理系统及存储介质。背景技术目前，国内外乘法器的设计思想大体有四种类型，总体为并行乘法器、移位相加乘法器、查找表乘法器以及加法树乘法器。其中，并行乘法器易于实现，运算速度快，然而，当乘法运算位宽增大时，其设计将会耗用较多的内部资源；耗用内部资源小的设计方案是移位相加乘法器，它通过逐项求和来实现，但是，这种设计将会耗用大量时钟，处理速度较慢；处理速度较快的是查找表乘法器，该设计直接将乘积存放于存储器中，将乘数和被乘数作为访问存储器的地址，这样通过查表方式得到的对应存储器相应位置的结果即为所求的乘积结果，不过，存储器的读写访问速度决定着乘法器的运算速度，另外，随着乘数与被乘数的位宽增大，将会急剧增加存储器的空间，因此，此法不太适合大数乘法器的操作；采用流水线结构的加法树乘法器，两个数相乘能在一个时钟内完成，然而，当乘数位宽增加时，流水线的分段随之增加，必将使用更多寄存器资源，增加器件的耗用。采用 Booth 算法的乘法器，在速度，器件消耗等方面有很大优势，然而，这种算法需要做多次右移，加减法运算，取补等。传统的乘法器运算，是N位乘N位将得到N个部分积，需要做N-1次加法运算，最终将得到 2N 位乘积。为了提高乘法器的运算效率，增强乘法器的性能，国内大体提出四种设计算法。随着大规模集成电路的发展，MOS 管的工艺体积由0.18mm，0.13mm，28nm到14nm，甚至更小的工体积，这样，在单位体积内可以含有更多的硬件资源。在设计过程中，逐步在芯片体积一定的情况下，提高芯片的运行速度，但是上述四种实现方式均存在明显的缺馅。常规的外部时钟驱动方法，无法根据数据特征来细粒度地选择部分积的生成过程，导致两个问题：部分积生成的速度匹配最慢速度，无法提升平均速度；每一轮计算时所有计算模块均参与，不能适配数据特征，能耗大。CN107092462B提供了一种基于FPGA的64位异步乘法器，然而该异步乘法器依然无法根据数据特征来细粒度地选择部分积的生成过程，同样存在以上两个问题。发明内容本发明所要解决的技术问题是，针对现有技术不足，提供一种乘法器、乘法计算方法、处理系统及存储介质，避免使用加法器，提高计算速度。为解决上述技术问题，本发明所采用的技术方案是：一种乘法器，包括：第一运算单元，用于计算A0×B3，A1×B2，A2×B1，A3×B0的和，并存储所述和的低8位X1、高8位与1位进位；计算A0×B1，A1×B0之和，得到32位结果0X4X50与一位进位Coutlow1；第二运算单元，用于对所述低8位X1与进位Coutlow1进行8位加法运算，得到X´1，并存储加法运算产生的进位Coutlow3；将加法运算的结果X´1扩展为32位值X´1000；将32位值X´1000与32位结果0X4X50按位相加，得到X´1X4X50以及1位进位Coutlow2；计算A0×B2，A1×B1，A2×B0的和，得到X2X300，将X2X300与A0×B0的乘积00X6X7按位相加得到32位结果X2X3X6X7；计算A2×B3，A3×B2，产生一位进位Couthigh3与16位和X8X9，X8X9与存储的高8位计算结果拼接为32位结果Couthigh3X8X9X1；第三运算单元，用于将X´1X4X50与X2X3X6X7两个32位值进行加和，得到低32位结果与1位进位Coutlow4；计算A1×B3，A2×B2，A3×B1之和，得到16位结果X10X11与1位进位Couthigh2，计算A3×B3得到16位结果X12X13，两个32位结果00X10X11与X12X1300按位相加成32位数X12X13X10X11；其中，A3A2A1A0与B3B2B1B0为将32位定点数A、B分别分解为8位得到的结果Xi为位宽8位的数，i=1,2...n,n为正整数。本发明通过移位操作，将乘法器的部分积计算粒度细化，将移位过程中相互无影响的部分积进行拼接操作，避免使用了加法器；在仅仅需要低32位结果时，不必对全部部分积进行运算，只需要同低32位结果相关的部分积参与运算，提高了计算的速度。本发明的乘法器还包括：第四运算单元，用于将Couthigh3X8X9X1与X12X13X10X11进行32位加法，得到高32位结果的中间值，拼接Couthigh2、Couthigh1和Coutlow，得到0Couthigh2Couthigh1Coutlow,将所述高32位结果的中间值与进位的拼接值0Couthigh2Couthigh1Coutlow再进行一次32位加法运算，得到高32位计算结果；Coutlow为对第三运算单元加和过程中产生的3个进位Coutlow2、Coutlow3、Coutlow4进行二进制编码得到的结果。本发明将低32位结果与高32位结果作为两个输出分别计算，提高了计算的速度。具体地，本发明中，所述第一运算单元包括：第一计算模块，用于计算A0×B3，A1×B2，A2×B1，A3×B0的和，并存储所述和的低8位X1、高8位与1位进位；第二计算模块，用于计算A0×B1，A1×B0之和，得到32位结果0X4X50与一位进位Coutlow1。本发明将低8位X1用于计算最终的低32位结果，高8位与1位进位存储下来，在计算高32位时传输，避免重复计算，提高了运算速度，降低了能耗。具体地，本发明中，所述第二运算单元包括：8位加法运算模块，用于对所述第一计算模块产生的低8位X1与进位Coutlow1进行8位加法运算，得到X´1，并存储加法运算产生的进位Coutlow3；扩展模块，用于将加法运算的结果X´1扩展为32位值X´1000；第一拼接模块，用于拼接所述32位值X´1000与32位结果0X4X50，得到X´1X4X50以及1位进位Coutlow2；复用模块，用于复用所述第一计算模块，以计算A0×B2，A1×B1，A2×B0三个部分积的和X2X300；以及复用所述第二计算模块，计算A2×B3，A3×B2，产生一位进位Couthigh3与16位和X8X9；第二拼接模块，将X2X300与A0×B0乘积得到的00X6X7按位相加得到32位结果X2X3X6X7；以及将X8X9与存储的高8位计算结果拼接为32位结果Couthigh3X8X9X1。本发明中，高32位的部分运算可以复用低32位运算的模块，降低了能耗。所述第三运算单元包括：加和模块，用于将X´1X4X50与X2X3X6X7两个32位值进行加和，得到低32位结果与1位进位Coutlow4；复用模块，用于复用所述第一计算模块，以计算A1×B3，A2×B2，A3×B1之和，得到16位结果X10X11与1位进位Couthigh2，计算A3×B3得到16位结果X12X13；拼接单元，用于将两个16位结果X10X11与X12X13拼接成32位数X12X13X10X11。本发明第三运算的单元也复用了第一计算模块，进一步降低了能耗。具体地，本发明中，计算A0×B3，A1×B2，A2×B1，A3×B0的和的具体实现过程包括：利用四个8位组合逻辑乘法器分别计算A0×B3，A1×B2，A2×B1，A3×B0；采用4-2压缩器对所述四个8位组合逻辑乘法器的结果进行组合，得到两个16位结果；将所述两个16位结果加和，得到16位结果以及1位进位。作为一个发明构思，本发明还提供了一种应用于乘法器的乘法计算方法，该方法包括：将32位定点数A、B分别分解为8位得到A3A2A1A0与B3B2B1B0；计算A0×B3，A1×B2，A2×B1，A3×B0的和，并存储所述和的低8位X1、高8位与1位进位；计算A0×B1，A1×B0之和，得到32位结果0X4X50与一位进位Coutlow1；对所述低8位X1与进位Coutlow1进行8位加法运算，得到X´1，并存储加法运算产生的进位Coutlow3；将加法运算的结果X´1扩展为32位值X´1000；拼接所述32位值X´1000与32位结果0X4X50，得到X´1X4X50以及1位进位Coutlow2；计算A0×B2，A1×B1，A2×B0的和，得到X2X300，将X2X300与A0×B0的乘积00X6X7按位相加得到32位结果X2X3X6X7；计算A2×B3，A3×B2，产生一位进位Couthigh3与16位和X8X9，X8X9与存储的高8位计算结果拼接为32位结果Couthigh3X8X9X1；将X´1X4X50与X2X3X6X7两个32位值进行加和，得到低32位结果与1位进位Coutlow4；计算A1×B3，A2×B2，A3×B1之和，得到16位结果X10X11与1位进位Couthigh2，计算A3×B3得到16位结果X12X13，两个32位结果00X10X11与X12X1300按位相加得32位数X12X13X10X11。本发明的乘法计算方法还包括：将Couthigh3X8X9X1与X12X13X10X11进行32位加法，得到高32位结果的中间值，拼接Couthigh2、Couthigh1和Coutlow，得到00Couthigh2Couthigh1Coutlow,将高32位结果的中间值与进位的拼接值再进行一次32位加法运算，得到高32位计算结果；其中，Coutlow为对3个进位Coutlow2、Coutlow3、Coutlow4进行二进制编码得到的结果。作为一个发明构思，本发明还提供了一种乘法处理系统，该乘法处理系统从与所述乘法处理系统耦合的存储器中读取配置文件，使得所述乘法处理系统被配置或编程为如本发明上述的乘法器。作为一个发明构思，本发明还提供了一种计算机可读存储介质，其存储有计算机程序，当所述计算机程序被处理器执行时，实现如上述乘法计算方法的步骤。与现有技术相比，本发明所具有的有益效果为：本发明通过移位操作，将乘法器的部分积计算粒度细化，将移位过程中相互无影响的部分积进行拼接操作，避免使用了加法器，极大地提升了计算速度，进而提高了芯片的运行速度；本发明将低32位结果与高32位结果作为两个输出分别进行计算。在仅仅需要低32位结果时，不必对全部部分积进行运算，只需要同低32位结果相关的部分积参与运算，提高了计算速度，降低了计算能耗。附图说明图1为32位乘法的部分积；图2为高32位与低32位结果划分；图3为本发明实施例四组部分积运算原理图,其中为四组部分积运算结构图，为四组部分积运算电路原理图；图4为本发明实施例三组部分积运算原理图,其中为三组部分积运算结构图，为三组部分积运算电路原理图；图5为本发明实施例两组部分积运算原理图,其中为两组部分积运算结构图，为两组部分积运算电路原理图；图6为本发明实施例判断进位选择操作原理图,其中为判断进位选择结构图，为判断进位选择电路原理图；图7为本发明实施例部分拼接操作原理图,其中为部分拼接结构图，为部分拼接电路原理图；图8为本发明实施例低32位计算结果图,其中为低32位计算结构图，为低32位计算电路原理图；图9为本发明实施例低32位的传递进位图；图10为本发明实施例高32位3组运算结果；图11为本发明实施例高32位两组计算结果；图12为本发明实施例高32位拼接操作原理图,其中为高32位部分拼接第一原理图，为高32位部分拼接第二电路原理图；图13为本发明实施例高32位结果；图14为本发明实施例乘法器结构图。具体实施方式为使本发明实施例的目的、技术方案和优点更加清楚，下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地说明，显然，所描述的实施例是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。在本文中，术语“第一”、“第二”和其它类似词语并不意在暗示任何顺序、数量和重要性，而是仅仅用于对不同的元件进行区分。在本文中，术语“一”、“一个”和其它类似词语并不意在表示只存在一个所述事物，而是表示有关描述仅仅针对所述事物中2的一个，所述事物可能具有一个或多个。在本文中，术语“包含”、“包括”和其它类似词语意在表示逻辑上的相互关系，而不能视作表示空间结构上的关系。例如，“A包括B”意在表示在逻辑上B属于A，而不表示在空间上B位于A的内部。另外，术语“包含”、“包括”和其它类似词语的含义应视为开放性的，而非封闭性的。例如，“A包括B”意在表示B属于A，但是B不一定构成A的全部，A还可能包括C、D、E等其它元素。实施例1本实施例提供了一种乘法器。本实施例中，将32位定点数乘法器分为8位定点数部分积结果的组合。对于32位定点数A,B,将其分解为8比特进行运算。A,B分解为四个8位数的部分A3A2A1A0与B3B2B1B0。两组32位数相乘时，也就是A中的每一部分同B的每一部分相乘，得到16组部分积。根据8比特乘数的相对位置的不同，生成的部分积的移位如图1所示，每一格代表8位移位。图1中生成的部分积每组结果16位。32位乘法器将会产生64位结果。然而在实际使用的过程中，RISC-V的乘法指令对于乘法操作存在着只取低32位，取全部结果以及高32位的情况；在矩阵运算的过程中，32位定点数乘法的结果也仅仅需要低32位。因此，在乘法器的设计思想中，应当将低32位结果与高32位结果作为两个输出分别计算。在仅仅需要低32位结果时，不必对全部部分积进行运算，只需要同低32位结果相关的部分积参与运算，提高了计算的速度。在计算高32位时，根据图2所示，计算高32位与低32位具有对称的计算输入与相似的操作。因此，高32位的部分运算可以复用低32位运算的模块。对于共同的计算部分，将低32位运算的部分结果进行存储，避免重复运算的产生；同时，高32位需要等待低32位计算产生的进位，低32位将传递给高32位的进位进行统计，使用2位的进位编码将低32位的结果传递。图2中右边是低32位的计算，左边是高32位的计算，低32位运算的部分积包括A0×B0，A0×B1，A1×B0，A0×B2，A1×B1，A2×B0的全部16位结果，以及A0×B3，A1×B2，A2×B1，A3×B0的低8位结果。处于同一位置的部分积计算和会产生对于下一位的进位。高32位运算的部分积包括A3×B3，A3×B2，A2×B3，A3×B1，A2×B2，A1×B3的全部16位结果，高32位中，对于A0×B3，A1×B2，A2×B1，A3×B0的结果，取低32位计算过程中存储的高8位结果与一位进位共九位，除此之外，高32位还需要将低32位传递的进位引入计算。本实施例中，低32位乘法器设计过程如下。对于多个部分积的求和，采用图3的结构计算。首先使用4个8位组合逻辑乘法器计算出4组部分积的结果。再将这四个16位结果送入16位的4-2压缩器，产生两个16位结果C与S。最终将C与S加和，得到16位结果以及1位进位Cout，也就是这四个部分积的加和结果。如图3所示，在高32位与低32位乘法计算的过程当中，中间四组部分积中的低8位结果归属于低32位的结果中，高8位结果以及1位进位归属于高32位计算的结果。在计算高32位以及低32位的过程中，出于加快计算速度的考虑，在计算低32位的过程中，可以将此16位的高8位结果以及进位共9位结果存储起来，在高32位计算的过程中，传递存储的9位结果。低32位中出现三组部分积加和结果，如图4所示，三组部分积的结果可以对图3的模块进行复用，复用的形式如图4所示。将三组部分积作为输入，再添加一组0送入模块中运算。其中产生的1位进位值会传递给高32位。两组部分积经过计算后便可以直接加和，得到16位结果以及1位进位，通过判断1位进位的值来决定下一步的运算，如图5所示。若进位为0则所得结果可以直接同其他结果进行拼接。若进位值为1，则需要通过8位加法器计算是否需要进一步的进位。如图6所示。如图7，部分积在进行运算后，可以将互相不干涉的部分积进行拼接操作，免去使用加法器产生的资源浪费。最终，拼接的两个32位数经过32位加法器后可以获得低32位的最终结果。对于传递给高32位的进位，如图8和图9所示，分为前面生成的四部分进位。本实施例中，高32位乘法器进位实现过程如下。高32位的计算依赖于低32位进位传输的进位以及存储的中间值等，因此高32位的结果应当在计算完低32位后才能得出。高32位对于图3中的值无需再次计算，只需要取出低32位计算过程中所产生的高8位结果以及1位进位值。如图10所示，高32位也需要同图4相同的三组计算结构。如图11所示，高32位的两组结果可以直接使用16位加法器进行相加。如图12所示，可以通过拼接操作将高32位计算过程中产生的中间值进行组合，减少最终加法运算的次数。最终，如图13所示，通过32位加法运算得到最终高32位计算的结果。根据低32位与高32位计算流程，最终的乘法器结构如图14所示。出于面积与速度的权衡，对于其中的模块进行复用操作。整个流程分为4个阶段，在每个阶段中所需要完成计算的时间相近。并且在不同的阶段中对于模块进行复用。在第三阶段可以得到低32位的结果，在第四阶段可以得到高32位的结果。在计算过程中，对于相同的模块，使用选择器来进行时分复用。使用不同的控制信号脉冲来选择不同的数值送入模块内计算，以节省多次例化模块的浪费。对于低32位的进位，使用2比特来进行进位编码，将编码传递给高32位进一步运算。在第一阶段，通过mulMiddle_4模块计算出A0×B3，A1×B2，A2×B1，A3×B0这四组部分积的和。将低8位X1用于计算最终的低32位结果，高8位与1位进位存储下来，在计算高32位时传输。避免重复计算。同时，在第一阶段还在mulMiddle_2模块中计算了A0×B1，A1×B0的部分积之和，得到32位结果0X4X50与一位进位Coutlow1。在第二阶段的计算中，将第一阶段的低8位X1与进位Coutlow1进行8位加法运算。得到X´1。在加法的过程中，产生的进位Coutlow3。最终加法的结果扩展为32位值X´1000。这个值可以同阶段1中mulMiddle_2的结果0X4X50进行拼接操作，最终得到X´1X4X50以及1位进位Coutlow2。第二阶段也会对于第一阶段的模块进行复用。通过复用mulMiddle_4，计算A0×B2，A1×B1，A2×B0三个部分积的和X2X300，通过8位组合逻辑乘法器计算的A0×B0乘积得到的00X6X7可以与其拼接，生成又一个32位结果X2X3X6X7。复用mulMiddle_2模块，计算A2×B3，A3×B2，产生一位进位Couthigh3与16位和X8X9，其与低32位计算过程中存储的高8位计算结果拼接为32位Couthigh3X8X9X1。在第三阶段中，首先可以通过32位加法计算得出低32位结果值，X´1X4X50与X2X3X6X7两个32位值进行加和得到低32位结果与1位进位Coutlow4。我们就得到了低32位的结果，而低32位产生的3个进位Coutlow2，Coutlow3，Coutlow4，使用2比特编码位Coutlow传递给高32位计算。同时第三阶段复用mulMiddle_4计算A1×B3，A2×B2，A3×B1这三组部分积之和，得到16位结果X10X11与1位进位Couthigh2。对于8位乘法器进行复用，计算A3×B3得到16位结果X12X13，这两个16位结果拼接成32位数X12X13X10X11。在第四阶段中，我们将Couthigh3X8X9X1与X12X13X10X11进行32位加法，得到高32位结果的中间值mulMiddle_32。将剩余的进位值进行拼接，得到0Couthigh2Couthigh1Coutlow，将中间值与进位的拼接值再进行一次32位加法运算，最终得到高32位计算结果。实施例2本实施例提供了一种乘法计算方法，应用于上述实施例1的乘法器。该方法包括：将32位定点数A、B分别分解为8位得到A3A2A1A0与B3B2B1B0；计算A0×B3，A1×B2，A2×B1，A3×B0的和，并存储和的低8位X1、高8位与1位进位；计算A0×B1，A1×B0之和，得到32位结果0X4X50与一位进位Coutlow1；对低8位X1与进位Coutlow1进行8位加法运算，得到X´1，并存储加法运算产生的进位Coutlow3；将加法运算的结果X´1扩展为32位值X´1000；拼接32位值X´1000与32位结果0X4X50，得到X´1X4X50以及1位进位Coutlow2；计算A0×B2，A1×B1，A2×B0的和，得到X2X300，拼接X2X300与A0×B0的乘积00X6X7，得到32位结果X2X3X6X7；计算A2×B3，A3×B2，产生一位进位Couthigh3与16位和X8X9，X8X9与存储的高8位计算结果拼接为32位结果Couthigh3X8X9X1；将X´1X4X50与X2X3X6X7两个32位值进行加和，得到低32位结果与1位进位Coutlow4；计算A1×B3，A2×B2，A3×B1之和，得到16位结果X10X11与1位进位Couthigh2，计算A3×B3得到16位结果X12X13，两个16位结果X10X11与X12X13拼接成32位数X12X13X10X11；将Couthigh3X8X9X1与X12X13X10X11进行32位加法，得到高32位结果的中间值，拼接Couthigh2、Couthigh1和Coutlow，得到0Couthigh2Couthigh1Coutlow,将高32位结果的中间值与进位的拼接值再进行一次32位加法运算，得到高32位计算结果；其中，Coutlow为对3个进位Coutlow2、Coutlow3、Coutlow4进行二进制编码得到的结果。实施例3本发明实施例3提供一种对应上述实施例1的乘法处理系统，该乘法处理系统从与乘法处理系统耦合的存储器中读取配置文件，使得乘法处理系统被配置或编程为如实施例1乘法器。本实施例的该乘法处理系统可以与存储器耦合，并从存储器中读取数据或向存储器写入数据。该乘法处理系统可以是中央处理器  实现的，也可以是专用集成电路或现场可编程门阵列实现的。上述存储器可以是随机存取存储器，只读存储器或其他类型的存储器。乘法处理系统可以与存储器设置于一个衬底上，并封装于一个半导体封装结构内，也可以被分别封装于不同的半导体封装结构内。上述数据可以是待进行乘法运算的数据,例如被乘数数据乘数数据，或者是与乘法运算相关的控制信号以及参数，也可以是乘法运算的结果，或者是中间结果。实施例4本发明实施例4提供了一种对应上述实施例1的计算机可读存储介质，其上存储有计算机程序/指令。计算机程序/指令被处理器执行时，实现上述实施例1方法的步骤。计算机可读存储介质可以是保持和存储由指令执行设备使用的指令的有形设备。计算机可读存储介质例如可以是但不限于电存储设备、磁存储设备、光存储设备、电磁存储设备、半导体存储设备或者上述的任意组合。本领域内的技术人员应明白，本申请的实施例可提供为方法、系统、或计算机程序产品。因此，本申请可采用完全硬件实施例、完全软件实施例、或结合软件和硬件方面的实施例的形式。而且，本申请可采用在一个或多个其中包含有计算机可用程序代码的计算机可用存储介质上实施的计算机程序产品的形式。本申请实施例中的方案可以采用各种计算机语言实现，例如，面向对象的程序设计语言Java和直译式脚本语言JavaScript等。本申请是参照根据本申请实施例的方法、设备、和计算机程序产品的流程图和／或方框图来描述的。应理解可由计算机程序指令实现流程图和／或方框图中的每一流程和／或方框、以及流程图和／或方框图中的流程和／或方框的结合。可提供这些计算机程序指令到通用计算机、专用计算机、嵌入式处理机或其他可编程数据处理设备的处理器以产生一个机器，使得通过计算机或其他可编程数据处理设备的处理器执行的指令产生用于实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能的装置。这些计算机程序指令也可装载到计算机或其他可编程数据处理设备上，使得在计算机或其他可编程设备上执行一系列操作步骤以产生计算机实现的处理，从而在计算机或其他可编程设备上执行的指令提供用于实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能的步骤。尽管已描述了本申请的优选实施例，但本领域内的技术人员一旦得知了基本创造性概念，则可对这些实施例作出另外的变更和修改。所以，所附权利要求意欲解释为包括优选实施例以及落入本申请范围的所有变更和修改。显然，本领域的技术人员可以对本申请进行各种改动和变型而不脱离本申请的精神和范围。这样，倘若本申请的这些修改和变型属于本申请权利要求及其等同技术的范围之内，则本申请也意图包含这些改动和变型在内。
