标题title
分布式文件系统中聚合对象的索引方法、系统及相关装置
摘要abst
本申请提供一种分布式文件系统中聚合对象的索引方法，包括：接收小文件写入请求并将对应的小文件写入obj缓存；在小文件数据写入量满足聚合缓存的预设容量时，组建数据缓存队列；数据缓存队列包括数据队列和obj缓存的索引队列；将数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池；根据索引队列中的索引数据更新文件聚合元数据。本申请针对聚合对象ino图表进行优化，将filemap表设计到高速池中，以减小对普通磁盘的性能影响。同时针对索引文件对象，按照聚合大件的生命周期进行管理，避免产生垃圾对象的残留。本申请还提供一种分布式文件系统中聚合对象的索引系统、计算机可读存储介质和电子设备，具有上述有益效果。
权利要求书clms
1.一种分布式文件系统中聚合对象的索引方法，其特征在于，包括：接收小文件写入请求并将对应的小文件写入obj缓存；在所述小文件数据写入量满足聚合缓存的预设容量时，组建数据缓存队列；所述数据缓存队列包括数据队列和所述obj缓存的索引队列；将所述数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池；根据所述索引队列中的索引数据更新文件聚合元数据。2.根据权利要求1所述的索引方法，其特征在于，所述组建数据缓存队列包括：分别生成数据队列和索引队列；将所述小文件数据的数据文件按预设顺序存入所述数据队列；对每个所述数据文件建立对应的第一索引，并按照所述预设顺序存入所述索引队列。3.根据权利要求1所述的索引方法，其特征在于，对每个所述数据文件建立对应的第一索引，并按照所述预设顺序存入所述索引队列时，还包括：配置所述obj缓存的属性值；所述属性值用于将所述obj缓存添加至filemap索引文件。4.根据权利要求3所述的索引方法，其特征在于，根据所述索引队列中的索引数据更新文件聚合元数据包括：下刷所述obj缓存，按照所述属性值顺序将所述索引队列中的索引数据添加至所述filemap索引文件。5.根据权利要求1所述的索引方法，其特征在于，若接收到目标小文件的删除请求，还包括：删除所述目标小文件；根据所述目标小文件在大文件中的实际偏移，计算对应filemap索引文件中的属性值；根据所述属性值计算所述目标小文件对应大索引在filemap索引文件的第一偏移；根据所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置：根据所述小索引的偏移位置将所述目标小文件对应小索引进行写零擦除。6.根据权利要求5所述的索引方法，其特征在于，根据所述目标小文件在大文件中的实际偏移，计算对应filemap索引文件中的属性值，包括根据第一计算公式和所述目标小文件在大文件中的实际偏移，计算对应filemap索引文件中的属性值；所述第一计算公式为obj_index＝offset/4M，其中，obj_index为属性值，offset为所述目标小文件在大文件中的实际偏移，obj_size为所述filemap索引文件的文件大小。7.根据权利要求5所述的索引方法，其特征在于，根据所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置包括：利用第二计算公式、所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置；其中，所述第二计算公式为偏移位置＝第一偏移值+8*属性值。8.一种分布式文件系统中聚合对象的索引系统，其特征在于，包括：接收模块，用于接收小文件写入请求并将对应的小文件写入obj缓存；缓存队列生成模块，用于在所述小文件数据写入量满足聚合缓存的预设容量时，组建数据缓存队列；所述数据缓存队列包括数据队列和所述obj缓存的索引队列；数据写入模块，用于将所述数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池；索引更新模块，用于根据所述索引队列中的索引数据更新文件聚合元数据。9.一种计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1-7任一项所述的分布式文件系统中聚合对象的索引方法的步骤。10.一种电子设备，其特征在于，包括存储器和处理器，所述存储器中存有计算机程序，所述处理器调用所述存储器中的计算机程序时实现如权利要求1-7任一项所述的分布式文件系统中聚合对象的索引方法的步骤。
说明书desc
技术领域本申请涉及数据存储领域，特别涉及一种分布式文件系统中聚合对象的索引方法、系统及相关装置。背景技术对于分布式文件系统文件聚合过程中，聚合数据对象的头部记录着聚合对象的filemap信息，用以记录聚合对象包含的小文件ino信息。在聚合小文件删除时要将对应的filemap中的ino信息置位，用以标识是文件已经删除，当聚合对象中fiilemap中文件全部删除时，启动聚合对象的清理。此处由于ino置位会产生大量的随机小块写io，对普通存储池磁盘压力较大，影响系统正常读写业务；同时由于ino置位持久化后才能返回，对删除接口的时延影响较大。发明内容本申请的目的是提供一种分布式文件系统中聚合对象的索引方法、索引系统、计算机可读存储介质和电子设备，能够降低索引对普通磁盘的性能影响。为解决上述技术问题，本申请提供一种分布式文件系统中聚合对象的索引方法，具体技术方案如下：接收小文件写入请求并将对应的小文件写入obj缓存；在所述小文件数据写入量满足聚合缓存的预设容量时，组建数据缓存队列；所述数据缓存队列包括数据队列和所述obj缓存的索引队列；将所述数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池；根据所述索引队列中的索引数据更新文件聚合元数据。可选的，所述组建数据缓存队列包括：分别生成数据队列和索引队列；将所述小文件数据的数据文件按预设顺序存入所述数据队列；对每个所述数据文件建立对应的第一索引，并按照所述预设顺序存入所述索引队列。可选的，对每个所述数据文件建立对应的第一索引，并按照所述预设顺序存入所述索引队列时，还包括：配置所述obj缓存的属性值；所述属性值用于将所述obj缓存添加至 filemap索引文件。可选的，根据所述索引队列中的索引数据更新文件聚合元数据包括：下刷所述obj缓存，按照所述属性值顺序将所述索引队列中的索引数据添加至所述filemap索引文件。可选的，若接收到目标小文件的删除请求，还包括：删除所述目标小文件；根据所述目标小文件在大文件中的实际偏移，计算对应filemap索引文件中的属性值；根据所述属性值计算所述目标小文件对应大索引在filemap索引文件的第一偏移；根据所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置：根据所述小索引的偏移位置将所述目标小文件对应小索引进行写零擦除。可选的，根据所述目标小文件在大文件中的实际偏移，计算对应filemap 索引文件中的属性值，包括根据第一计算公式和所述目标小文件在大文件中的实际偏移，计算对应 filemap索引文件中的属性值；所述第一计算公式为obj_index＝offset/4M，其中，obj_index为属性值，offset为所述目标小文件在大文件中的实际偏移，obj_size为所述 filemap索引文件的文件大小。可选的，根据所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置包括：利用第二计算公式、所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置；其中，所述第二计算公式为偏移位置＝第一偏移值+8*属性值。本申请还提供一种分布式文件系统中聚合对象的索引系统，包括：接收模块，用于接收小文件写入请求并将对应的小文件写入obj缓存；缓存队列生成模块，用于在所述小文件数据写入量满足聚合缓存的预设容量时，组建数据缓存队列；所述数据缓存队列包括数据队列和所述obj缓存的索引队列；数据写入模块，用于将所述数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池；索引更新模块，用于根据所述索引队列中的索引数据更新文件聚合元数据。本申请还提供一种计算机可读存储介质，其上存储有计算机程序，所述计算机程序被处理器执行时实现如上所述的方法的步骤。本申请还提供一种电子设备，包括存储器和处理器，所述存储器中存有计算机程序，所述处理器调用所述存储器中的计算机程序时实现如上所述的方法的步骤。本申请提供一种分布式文件系统中聚合对象的索引方法，包括：接收小文件写入请求并将对应的小文件写入obj缓存；在所述小文件数据写入量满足聚合缓存的预设容量时，组建数据缓存队列；所述数据缓存队列包括数据队列和所述obj缓存的索引队列；将所述数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池；根据所述索引队列中的索引数据更新文件聚合元数据。本申请针对聚合对象ino图表进行优化，将filemap表设计到高速池中，以减小对普通磁盘的性能影响；同时配置索引映射，从小文件数据到到filemap 文件中的索引对象，再到obj缓存中的小文件自身索引位置。同时针对索引文件对象，按照聚合大件的生命周期进行管理，避免产生垃圾对象的残留。本申请还提供一种分布式文件系统中聚合对象的索引系统、计算机可读存储介质和电子设备，具有上述有益效果，此处不再赘述。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本申请的实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据提供的附图获得其他的附图。图1为本申请实施例所提供的一种分布式文件系统中聚合对象的索引方法的流程图；图2为本申请实施例所提供的一种分布式文件系统中Obj缓存结构示意图；图3为本申请实施例所提供的一种分布式文件系统中filemap文件结构示意图；图4为本申请实施例所提供的一种分布式文件系统中聚合对象的索引系统的结构示意图。具体实施方式为使本申请实施例的目的、技术方案和优点更加清楚，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。请参考图1，图1为本申请实施例所提供的分布式文件系统中聚合对象的索引方法的流程图，该方法包括：S101：接收小文件写入请求并将对应的小文件写入obj缓存；本步骤旨在接收小文件的写入请求，并逐一写入obj缓存。在此对于何种文件为小文件数据不作具体限定，可以为小于预设大小的碎文件，而本实施例低于预设大小不作具体限定。S102：在所述小文件数据写入量满足聚合缓存的预设容量时，组建数据缓存队列；数据缓存队列包括数据队列和obj缓存的索引队列。参见图2，图2为本申请实施例所提供的一种分布式文件系统中Obj缓存结构示意图，由图2可以看出，obj缓存中包含一条数据队列和一条索引队列。优选的，在执行本步骤时，可以按照如下步骤执行：S1021：分别生成数据队列和索引队列；S1022：将所述小文件数据的数据文件按预设顺序存入所述数据队列；S1023：对每个所述数据文件建立对应的第一索引，并按照所述预设顺序存入所述索引队列。需要注意的是，数据队列和索引队列中的小文件数据是一一对应的，即数据和对应的索引在各自队列中的序号相同，如图2所示，file1 data对应索引队列中的ino1，file2data对应索引队列中的ino2，…，以此类推。索引队列需要记录的是文件的64位ino号，按照data文件排列顺序排列。同时数据缓存队列还需要记录自身的属性值，即图2中的Index值。可以在对每个数据文件建立对应的第一索引，并按照预设顺序存入索引队列时建立配置obj缓存的属性值；属性值用于将obj缓存添加至filemap索引文件。当然，若小文件数据未写满，则循环执行步骤S101直至小文件数据写入 obj缓存。在此对于opj缓存的大小，即可缓存多少小文件数据不作具体限定。S103：将所述数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池；此后在obj缓存下刷后，将数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池，减小对普通磁盘的性能影响。S104：根据所述索引队列中的索引数据更新文件聚合元数据。可以看出，本实施例中的索引队列中的索引属于元数据。若还包括obj 缓存的属性值，则可以将索引数据和属性值等属性更新到文件聚合元数据，相当于将各小文件数据的元数据更新到相应的元数据服务器。当然，还可以包括各小文件数据的偏移值，即各小文件数据在obj缓存中的具体位置。具体的，在执行本步骤时，可以下刷所述obj缓存，按照所述属性值顺序将索引队列中的索引数据添加至所述filemap索引文件。本申请实施例针对聚合对象ino图表进行优化，将filemap表设计到高速池中，以减小对普通磁盘的性能影响；同时配置索引映射，从小文件数据到到 filemap文件中的索引对象，再到obj缓存中的小文件自身索引位置。同时针对索引文件对象，按照聚合大件的生命周期进行管理，避免产生垃圾对象的残留。参见图3，图3为本申请实施例所提供的一种分布式文件系统中filemap文件结构示意图，由图3可以看出，如图3所示，对象存储系统中文件filemap索引文件为agg_ino.agg_filemap，其中agg_ino指聚合文件的ino号，从而实现全局唯一。针对agg_filemap文件对象再进行切分，因为没有聚合对象最多可以存储1024个文件，所以一个obj缓存即obj_fillemap大小为8k，而一个obj缓存记录着一个聚合对象的小文件数据与索引的对应关系，即如图2所示的对应关系。。基于上述实施例，作为优选的实施例，若接收到目标小文件的删除请求，还可以包括步骤：S201：删除所述目标小文件；S202：根据所述目标小文件在大文件中的实际偏移，计算对应filemap索引文件中的属性值；在执行本步骤时，可以先根据第一计算公式和所述目标小文件在大文件中的实际偏移，计算对应filemap索引文件中的属性值；第一计算公式为obj_index＝offset/4M，其中，obj_index为属性值，offset为目标小文件在大文件中的实际偏移，obj_size为所述filemap索引文件的文件大小。S203：根据所述属性值计算所述目标小文件对应大索引在filemap索引文件的第一偏移；第一偏移可以为obj_index*8k，其中obj_index为属性值。S204：根据所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置：利用第二计算公式、所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置；其中，所述第二计算公式为偏移位置＝第一偏移值+8*属性值。S205：根据所述小索引的偏移位置将所述目标小文件对应小索引进行写零擦除。则由上述过程可以看出，先删除小文件操作，在根据上述实施例的索引结构逐步删除目标小文件的小索引。即按照图3所示结构逐步删除。此外，若在filemap索引文件被删除，先删除聚合大文件，以及对应的索引，再删除filemap索引文件，在聚合大文件清理删除时对filemap索引文件进行同步删除，避免产生垃圾对象，影响磁盘性能。下面对本申请实施例提供的一种分布式文件系统中聚合对象的索引系统进行介绍，下文描述的聚合对象的索引系统与上文描述的分布式文件系统中聚合对象的索引方法可相互对应参照。参见图4，图4为本申请实施例所提供的分布式文件系统中聚合对象的索引系统的结构示意图，该系统包括：接收模块100，用于接收小文件写入请求并将对应的小文件写入obj缓存；缓存队列生成模块200，用于在所述小文件数据写入量满足聚合缓存的预设容量时，组建数据缓存队列；所述数据缓存队列包括数据队列和所述obj 缓存的索引队列；数据写入模块300，用于将所述数据队列中的数据写入普通池，并将索引队列中索引数据写入高速池；索引更新模块400，用于根据所述索引队列中的索引数据更新文件聚合元数据。基于上述实施例，作为优选的实施例，缓存队列生成模块200为用于执行如下步骤的模块：分别生成数据队列和索引队列；将所述小文件数据的数据文件按预设顺序存入所述数据队列；对每个所述数据文件建立对应的第一索引，并按照所述预设顺序存入所述索引队列。基于上述实施例，作为优选的实施例，还包括：缓存属性配置模块，用于配置所述obj缓存的属性值；所述属性值用于将所述obj缓存添加至filemap索引文件。基于上述实施例，作为优选的实施例，索引更新模块400为用于下刷所述obj缓存，按照所述属性值顺序将所述索引队列中的索引数据添加至所述 filemap索引文件的模块。基于上述实施例，作为优选的实施例，还包括：删除模块，用于若接收到目标小文件的删除请求，删除所述目标小文件；根据所述目标小文件在大文件中的实际偏移，计算对应filemap索引文件中的属性值；根据所述属性值计算所述目标小文件对应大索引在filemap索引文件的第一偏移；根据所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置：根据所述小索引的偏移位置将所述目标小文件对应小索引进行写零擦除。基于上述实施例，作为优选的实施例，所述删除模块包括：第一计算单元，用于根据第一计算公式和所述目标小文件在大文件中的实际偏移，计算对应filemap索引文件中的属性值；所述第一计算公式为 obj_index＝offset/4M，其中，obj_index为属性值，offset为所述目标小文件在大文件中的实际偏移，obj_size为所述filemap索引文件的文件大小。基于上述实施例，作为优选的实施例，所述删除模块包括：第二计算单元，用于利用第二计算公式、所述第一偏移值和所述属性值计算计算所述目标小文件对应小索引的偏移位置；其中，所述第二计算公式为偏移位置＝第一偏移值+8*属性值。本申请还提供了一种计算机可读存储介质，其上存有计算机程序，该计算机程序被执行时可以实现上述实施例所提供的步骤。该存储介质可以包括： U盘、移动硬盘、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。本申请还提供了一种电子设备，可以包括存储器和处理器，所述存储器中存有计算机程序，所述处理器调用所述存储器中的计算机程序时，可以实现上述实施例所提供的步骤。当然所述电子设备还可以包括各种网络接口，电源等组件。说明书中各个实施例采用递进的方式描述，每个实施例重点说明的都是与其他实施例的不同之处，各个实施例之间相同相似部分互相参见即可。对于实施例提供的系统而言，由于其与实施例提供的方法相对应，所以描述的比较简单，相关之处参见方法部分说明即可。本文中应用了具体个例对本申请的原理及实施方式进行了阐述，以上实施例的说明只是用于帮助理解本申请的方法及其核心思想。应当指出，对于本技术领域的普通技术人员来说，在不脱离本申请原理的前提下，还可以对本申请进行若干改进和修饰，这些改进和修饰也落入本申请权利要求的保护范围内。还需要说明的是，在本说明书中，诸如第一和第二等之类的关系术语仅仅用来将一个实体或者操作与另一个实体或操作区分开来，而不一定要求或者暗示这些实体或操作之间存在任何这种实际的关系或者顺序。而且，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括所述要素的过程、方法、物品或者设备中还存在另外的相同要素。
