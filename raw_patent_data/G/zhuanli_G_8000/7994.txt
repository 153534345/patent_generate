标题title
目标软件升级方法、装置、电子设备、介质和程序产品
摘要abst
本公开的实施例公开了目标软件升级方法、装置、电子设备、介质和程序产品。该方法的一具体实施方式包括：获取软件标识信息集；将上述软件标识信息集中的各个软件标识信息更新至以太网；响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列；对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。该实施方式可以提高目标软件升级的效率。
权利要求书clms
1.一种目标软件升级方法，包括：获取软件标识信息集；将所述软件标识信息集中的各个软件标识信息更新至以太网；响应于接收到针对所述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列；对所述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。2.根据权利要求1所述的方法，其中，所述基于所接收到的订阅信息，生成目标软件标识序列，包括：基于所接收到的订阅信息，生成目标订阅信息，其中，所述目标订阅信息包括目标校验标识组、目标软件标识组和校验字节信息；对所述目标校验标识组中各个目标校验标识与所述目标软件标识组中对应的目标软件标识进行匹配处理，得到第一校验信息；响应于确定所述第一校验信息满足第一预设校验条件，基于所述校验字节信息，对所述目标软件标识组进行传输校验处理，得到第二校验信息；响应于确定所述第二校验信息满足第二预设校验条件，基于所述目标软件标识组和所述软件标识信息集，生成第三校验信息；响应于确定所述第三校验信息满足第三预设校验条件，对所述目标软件标识组中的目标软件标识进行排序，得到目标软件标识序列。3.根据权利要求2所述的方法，其中，所述订阅信息包括校验标识字节组、软件标识字节组和校验字节信息，所述校验字节信息包括高位校验字节和低位校验字节；以及所述基于所接收到的订阅信息，生成目标订阅信息，包括：将所述高位校验字节的十进制值确定为高位数值；将所述低位校验字节的十进制值确定为低位数值；对所述校验标识字节组中每个校验标识字节进行循环右移高位数值个比特位以生成目标校验标识字节，得到目标校验标识字节组；基于预设的解密表，确定与所述目标校验标识字节组中的每个目标校验标识字节对应的目标校验标识，得到目标校验标识组；对所述软件标识字节组中每个软件标识字节进行循环左移低位数值个比特位以生成目标软件标识，得到目标软件标识组；将所述目标校验标识组、所述目标软件标识组和所述校验字节信息确定为目标订阅信息。4.根据权利要求2所述的方法，其中，所述软件标识信息集中的每个软件标识信息包括软件标识；以及所述基于所述目标软件标识组和所述软件标识信息集，生成第三校验信息，包括：对所述目标软件标识组中的各个目标软件标识与所述软件标识信息集中的各个软件标识信息包括的软件标识进行匹配处理，得到第三校验信息。5.根据权利要求1所述的方法，其中，所述对所述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，包括：对于所述目标软件标识序列中的每个目标软件标识，执行以下步骤：响应于未检测到针对存储器的刷写操作，获取原子程序升级信息序列；对所述原子程序升级信息序列中各个原子程序升级信息对应的程序存储分区数据进行刷写处理。6.根据权利要求5所述的方法，其中，所述原子程序升级信息序列中的每个原子程序升级信息包括升级程序包标识、刷写起始地址和刷写长度；以及所述对所述原子程序升级信息序列中各个原子程序升级信息对应的程序存储分区数据进行刷写处理，包括：基于初始计数器，对于所述原子程序升级信息序列中的每个原子程序升级信息，执行以下步骤：基于所述升级程序包标识，获取目标升级程序包；基于所述目标升级程序包、所述刷写起始地址和所述刷写长度，对所述原子程序升级信息对应的程序存储分区数据进行刷写处理，以及将所述初始计数器的值加上1，得到目标计数器。7.根据权利要求6所述的方法，其中，所述方法还包括：响应于确定目标升级程序包获取失败，将所述目标计数器的值确定为已完成原子程序升级数；基于所述已完成原子程序升级数和所述原子程序升级信息序列，生成剩余原子程序升级信息序列；对所述剩余原子程序升级信息序列中各个剩余原子程序升级信息对应的程序存储分区数据进行刷写处理。8.一种目标软件升级装置，包括：获取单元，被配置成获取软件标识信息集；更新单元，被配置成将所述软件标识信息集中的各个软件标识信息更新至以太网；生成单元，被配置成响应于接收到针对所述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列；刷写处理单元，被配置成对所述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。9.一种电子设备，包括：一个或多个处理器；存储装置，其上存储有一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行，使得所述一个或多个处理器实现如权利要求1-7中任一所述的方法。10.一种计算机可读介质，其上存储有计算机程序，其中，所述程序被处理器执行时实现如权利要求1-7中任一所述的方法。
说明书desc
技术领域本公开的实施例涉及计算机技术领域，具体涉及目标软件升级方法、装置、电子设备、介质和程序产品。背景技术目标软件升级方法，是用于升级目标软件的一项技术。目前，在升级目标软件时，通常采用的方式为：首先，控制单元擦除整片闪存数据。然后，对于目标软件对应的软件升级程序包数据，以帧为单位，对整片闪存进行数据写操作。从而，升级目标软件。然而，发明人发现，当采用上述方式进行目标软件升级时，经常会存在如下技术问题：第一，随着软件升级频率越来越高、以及闪存数据量越来越大，每次升级时，对整片闪存数据进行刷写，耗时较长，导致目标软件升级效率较低；第二，在升级目标软件之前，往往容易忽略对数据来源安全性的校验，或者该校验过程过于复杂，从而，导致目标软件升级的安全性以及效率较低；第三，若断电或断网导致数据传输中断，控制单元需要重新擦除整片闪存数据，重新以帧为单位接收整个软件升级程序包以及以帧为单位对整片闪存进行数据写操作，从而，导致目标软件升级效率较低。该背景技术部分中所公开的以上信息仅用于增强对本发明构思的背景的理解，并因此，其可包含并不形成本国的本领域普通技术人员已知的现有技术的信息。发明内容本公开的内容部分用于以简要的形式介绍构思，这些构思将在后面的具体实施方式部分被详细描述。本公开的内容部分并不旨在标识要求保护的技术方案的关键特征或必要特征，也不旨在用于限制所要求的保护的技术方案的范围。本公开的一些实施例提出了目标软件升级方法、装置、电子设备、介质和程序产品，来解决以上背景技术部分提到的技术问题中的一项或多项。第一方面，本公开的一些实施例提供了一种目标软件升级方法，该方法包括：获取软件标识信息集；将上述软件标识信息集中的各个软件标识信息更新至以太网；响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列；对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。第二方面，本公开的一些实施例提供了一种目标软件升级装置，装置包括：获取单元，被配置成获取软件标识信息集；更新单元，被配置成将上述软件标识信息集中的各个软件标识信息更新至以太网；生成单元，被配置成响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列；刷写处理单元，被配置成对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。第三方面，本公开的一些实施例提供了一种电子设备，包括：一个或多个处理器；存储装置，其上存储有一个或多个程序，当一个或多个程序被一个或多个处理器执行，使得一个或多个处理器实现上述第一方面任一实现方式所描述的方法。第四方面，本公开的一些实施例提供了一种计算机可读介质，其上存储有计算机程序，其中，程序被处理器执行时实现上述第一方面任一实现方式所描述的方法。第五方面，本公开的一些实施例提供了一种计算机程序产品，包括计算机程序，计算机程序在被处理器执行时实现上述第一方面任一实现方式所描述的方法。本公开的上述各个实施例具有如下有益效果：通过本公开的一些实施例的目标软件升级方法，可以提高目标软件升级的效率。具体来说，导致目标软件升级效率较低的原因在于：随着软件升级频率越来越高、以及闪存数据量越来越大，每次升级时，对整片闪存数据进行刷写，耗时较长，导致目标软件升级效率较低。基于此，本公开的一些实施例的目标软件升级方法，首先，获取软件标识信息集。将上述软件标识信息集中的各个软件标识信息更新至以太网。由此，可以将各个软件的标识信息发送到以太网，以便后续系统芯片选择目标软件进行升级。其次，响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列。由此，可以得到上述需求方选择的待升级软件序列。最后，对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。由此，可以对每个待升级目标软件所对应的程序存储分区数据依次进行刷写，缩短升级耗时，从而，可以提高目标软件升级效率。因此，本公开的一些目标软件升级方法，在每次软件升级时，只需对每个待升级软件所对应的程序存储分区数据进行刷写，无需对整片闪存数据进行刷写。从而，缩短了升级耗时。进而，可以提高目标软件升级效率。附图说明结合附图并参考以下具体实施方式，本公开各实施例的上述和其他特征、优点及方面将变得更加明显。贯穿附图中，相同或相似的附图标记表示相同或相似的元素。应当理解附图是示意性的，元件和元素不一定按照比例绘制。图1是根据本公开的目标软件升级方法的一些实施例的流程图；图2是根据本公开的目标软件升级装置的一些实施例的结构示意图；图3是适于用来实现本公开的一些实施例的电子设备的结构示意图。具体实施方式下面将参照附图更详细地描述本公开的实施例。虽然附图中显示了本公开的某些实施例，然而应当理解的是，本公开可以通过各种形式来实现，而且不应该被解释为限于这里阐述的实施例。相反，提供这些实施例是为了更加透彻和完整地理解本公开。应当理解的是，本公开的附图及实施例仅用于示例性作用，并非用于限制本公开的保护范围。另外还需要说明的是，为了便于描述，附图中仅示出了与有关发明相关的部分。在不冲突的情况下，本公开中的实施例及实施例中的特征可以相互组合。需要注意，本公开中提及的“第一”、“第二”等概念仅用于对不同的装置、模块或单元进行区分，并非用于限定这些装置、模块或单元所执行的功能的顺序或者相互依存关系。需要注意，本公开中提及的“一个”、“多个”的修饰是示意性而非限制性的，本领域技术人员应当理解，除非在上下文另有明确指出，否则应该理解为“一个或多个”。本公开实施方式中的多个装置之间所交互的消息或者信息的名称仅用于说明性的目的，而并不是用于对这些消息或信息的范围进行限制。下面将参考附图并结合实施例来详细说明本公开。图1示出了根据本公开的目标软件升级方法的一些实施例的流程100。该目标软件升级方法，包括以下步骤：步骤101，获取软件标识信息集。在一些实施例中，目标软件升级方法的执行主体）可以通过有线连接方式或者无线连接方式获取软件标识信息集。其中，上述软件标识信息集中的软件标识信息可以是SOC通过以太网发送过来的软件标识。上述软件标识可以对软件唯一标识。步骤102，将软件标识信息集中的各个软件标识信息更新至以太网。在一些实施例中，上述执行主体可以将上述软件标识信息集中的各个软件标识信息更新至以太网。其中，上述执行主体可以对于上述软件标识信息集中的每个软件标识信息，执行以下步骤：第一步，对上述软件标识信息与预设的升级软件信息组中的各个升级软件信息进行匹配处理，得到状态信息。其中，上述预设的升级软件信息组可以是以太网上各个软件标识信息的集合。上述预设的升级软件信息组中的升级软件信息可以包括软件标识。上述状态信息可以用于表征软件标识信息是否在以太网上。上述状态信息可以包括已更新状态和未更新状态。上述已更新状态可以表征软件标识信息在以太网上。上述未更新状态可以表征软件标识信息不在以太网上。可以通过以下子步骤，对上述软件标识信息与预设的升级软件信息组中的各个升级软件信息进行匹配处理，得到状态信息：第一子步骤，确定上述软件标识信息对应的软件标识与上述升级软件信息组中各个升级软件信息包括的软件标识是否相同。第二子步骤，响应于确定上述软件标识信息对应的软件标识与上述升级软件信息组中至少一个升级软件信息包括的软件标识相同，将已更新状态确定为状态信息。第三子步骤，响应于确定上述软件标识信息对应的软件标识与上述升级软件信息组中每个升级软件信息包括的软件标识不相同，将未更新状态确定为状态信息。第二步，响应于确定上述状态信息为未更新状态，将上述软件标识信息发送至以太网。步骤103，响应于接收到针对软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列。在一些实施例中，上述执行主体可以响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，通过各种方式，基于所接收到的订阅信息，生成目标软件标识序列。其中，上述订阅信息可以是SOC发送的待升级软件的软件标识。在一些实施例的一些可选的实现方式中，上述执行主体可以响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列。具体可以执行以下步骤：第一步，基于所接收到的订阅信息，生成目标订阅信息。其中，上述目标订阅信息可以包括目标校验标识组、目标软件标识组和校验字节信息。上述目标校验标识组中的目标校验标识可以是字节编码。上述字节编码可以是十六进制编码。上述目标软件标识组中的目标软件标识可以是对软件进行唯一标识的字节编码。上述目标校验标识组中的目标校验标识与上述目标软件标识组中的目标软件标识的对应关系可以是一一对应的。上述校验字节信息可以是用于数据传输检错的校验码。可以通过各种方式，基于所接收到的订阅信息，生成目标订阅信息。在一些实施例的一些可选的实现方式中，上述订阅信息可以包括校验标识字节组、软件标识字节组和校验字节信息。其中，上述校验字节信息可以包括高位校验字节和低位校验字节。上述校验标识字节组中的校验标识字节可以和上述软件标识字节组中的软件标识字节的对应关系可以是一一对应的。上述校验标识字节组中的校验标识字节可以是将对应的软件标识字节进行加密处理后得到的字节编码。上述软件标识字节组中的软件标识字节可以是对软件进行唯一标识的字节编码。上述高位校验字节可以是校验码的前8位。上述低位校验字节可以是校验码的后8位。上述执行主体可以基于上述订阅信息，生成目标订阅信息。具体可以包括以下步骤：第一步，将上述高位校验字节的十进制值确定为高位数值。其中，上述高位数值可以用于表征校验码的前8位。第二步，将上述低位校验字节的十进制值确定为低位数值。其中，上述低位数值可以用于表征校验码的后8位。第三步，对上述校验标识字节组中每个校验标识字节进行循环右移高位数值个比特位以生成目标校验标识字节，得到目标校验标识字节组。其中，上述目标校验标识字节组中的目标校验标识字节可以是所对应的校验标识字节经过循环右移后得到的十六进制编码。第四步，基于预设的解密表，确定与上述目标校验标识字节组中的每个目标校验标识字节对应的目标校验标识，得到目标校验标识组。其中，上述预设的解密表可以是通过密文字节编码对应的行和列来确定明文字节编码的。上述密文字节编码可以是单个字节的十六进制编码。上述密文字节编码对应的行可以是密文字节编码高4位所对应的十六进制值。上述密文字节编码对应的列可以是密文字节编码低4位所对应的十六进制值。上述明文字节编码可以是单个字节的十六进制编码。第五步，对上述软件标识字节组中每个软件标识字节进行循环左移低位数值个比特位以生成目标软件标识，得到目标软件标识组。第六步，将上述目标校验标识组、上述目标软件标识组和上述校验字节信息确定为目标订阅信息。第二步，对上述目标校验标识组中各个目标校验标识与上述目标软件标识组中对应的目标软件标识进行匹配处理，得到第一校验信息。其中，上述第一校验信息可以是匹配成功信息或匹配失败信息。上述匹配成功信息可以表征匹配成功。上述匹配失败信息可以表征匹配失败。具体可以执行以下子步骤：第一子步骤，确定上述目标校验标识组中每个目标校验标识与上述目标软件标识组中对应的目标软件标识是否相同。第二子步骤，若上述目标校验标识组中的至少一个目标校验标识与上述目标软件标识组中对应的目标软件标识不相同，则将匹配失败信息确定为第一校验信息。第三子步骤，若上述目标校验标识组中每个目标校验标识与上述目标软件标识组中对应的目标软件标识相同，则将匹配成功信息确定为第一校验信息。作为示例，上述匹配成功信息可以是“匹配成功”。上述匹配失败信息可以是“匹配失败”。第三步，响应于确定上述第一校验信息满足第一预设校验条件，基于上述校验字节信息，对上述目标软件标识组进行传输校验处理，得到第二校验信息。其中，上述第一预设校验条件可以是第一校验信息为匹配成功信息。上述第二校验信息可以是传输无误信息或传输错误信息。上述传输无误信息可以表征数据传输无误。上述传输错误信息可以表征数据传输错误。可以通过循环冗余校验法，基于上述校验字节信息，对上述目标软件标识组进行传输校验处理，得到第二校验信息。第四步，响应于确定上述第二校验信息满足第二预设校验条件，基于上述目标软件标识组和上述软件标识信息集，生成第三校验信息。其中，上述第二预设校验条件可以是第二校验信息为传输无误信息。上述第三校验信息可以是标识匹配成功信息或标识匹配失败信息。上述标识匹配成功信息可以用于表征上述目标软件标识组中的每个目标软件标识与上述软件标识信息集中各个软件标识信息对应的软件标识相同。上述标识匹配失败信息可以用于表征上述目标软件标识组中的目标软件标识与上述软件标识信息集中各个软件标识信息包括的软件标识不相同。上述执行主体可以通过各种方式，基于上述目标软件标识组和上述软件标识信息集，生成第三校验信息。在一些实施例的一些可选的实现方式中，上述软件标识信息集中的每个软件标识信息可以包括软件标识。上述执行主体响应于确定上述第二校验信息满足第二预设校验条件，可以通过以下步骤，基于上述目标软件标识组和上述软件标识信息集，生成第三校验信息：第一步，可以对上述目标软件标识组中的各个目标软件标识与上述软件标识信息集中的各个软件标识信息包括的软件标识进行匹配处理，得到第三校验信息。具体可以执行以下子步骤：第一子步骤，确定上述目标软件标识组中的每个目标软件标识与上述软件标识信息集中各个软件标识信息包括的软件标识是否相同。第二子步骤，若上述目标软件标识组中的至少一个目标软件标识与上述软件标识信息集中各个软件标识信息包括的软件标识不相同，则将上述标识匹配失败信息确定为第三校验信息。第三子步骤，若上述目标软件标识组中的每个目标软件标识与上述软件标识信息集中各个软件标识信息包括的软件标识相同，则将上述标识匹配成功信息确定为第三校验信息。第五步，响应于确定上述第三校验信息满足第三预设校验条件，对上述目标软件标识组中的目标软件标识进行排序，得到目标软件标识序列。其中，上述第三预设校验条件可以是上述第三校验信息为标识匹配成功信息。上述目标软件标识序列可以是对目标软件标识组中的目标软件标识按照从小到大排列后得到的序列。可以通过预设的排序算法，对上述目标软件标识组中的目标软件标识进行排序，得到目标软件标识序列。作为示例，上述预设的排序算法可以包括但不限于以下至少一项：冒泡排序、插入排序和希尔排序等。可选的，上述订阅信息可以是这样生成的：第一步，将各个待升级软件对应的软件标识确定为升级软件标识组。其中，上述升级软件标识组中的升级软件标识可以对待升级软件唯一标识。上述待升级软件可以是升级程序包对应的软件。上述升级程序包可以是程序代码集合。第二步，确定针对上述升级软件标识组的校验字节信息。可以通过循环冗余校验法，针对上述升级软件标识组，生成校验字节信息。第三步，基于预设的加密表，确定与上述升级软件标识组中的各个升级软件标识对应的升级软件校验标识，得到升级软件校验标识组。其中，上述预设的加密表可以是通过明文字节编码对应的行和列来确定密文字节编码的。上述明文字节编码对应的行可以是明文字节编码高4位所对应的十六进制值。上述明文字节编码对应的列可以是明文字节编码低4位所对应的十六进制值。上述升级软件校验标识组中的升级软件校验标识可以是升级软件标识对应的密文字节编码。第四步，将上述校验字节信息包括的高位校验字节的十进制值确定为目标高位数值。其中，上述目标高位数值可以用于表征校验码的前8位。第五步，将上述校验字节信息包括的低位校验字节的十进制值确定为目标低位数值。其中，上述目标低位数值可以用于表征校验码的后8位。第六步，对上述升级软件校验标识组中每个升级软件校验标识进行循环左移目标高位数值个比特位以生成校验标识字节，得到校验标识字节组。第七步，对上述升级软件标识组中每个升级软件标识进行循环右移目标低位数值个比特位以生成软件标识字节，得到软件标识字节组。第八步，将上述校验标识字节组、上述软件标识字节组和上述校验字节信息确定为订阅信息。上述订阅信息及目标订阅信息的生成步骤及其相关内容，作为本公开的实施例的一个发明点，解决了背景技术提及的技术问题二“在升级目标软件之前，往往容易忽略对数据来源安全性的校验，或者该校验过程过于复杂，从而，导致目标软件升级的安全性以及效率较低”。导致目标软件升级安全性或效率较低的问题往往如下：在升级目标软件之前，往往容易忽略对数据来源安全性的校验，或者该校验过程过于复杂，从而，导致目标软件升级的安全性以及效率较低。如果解决了上述问题，就能达到提高目标软件升级安全性以及效率的效果。为了达到这一效果，本公开先通过对来源于SOC的数据进行加密处理，得到订阅信息。然后，通过对订阅信息进行反向解密，得到目标订阅信息。最后，对目标订阅信息包括的目标校验标识组和目标软件标识组进行匹配处理，以完成对数据来源安全性的校验。从而，可以提高目标软件升级的安全性。除此之外，本公开采用的循环移位和查表相结合的加解密过程，相比其他复杂安全校验方法，耗时也更短，从而，可以提高目标软件升级效率。步骤104，对目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。在一些实施例中，上述执行主体可以对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。其中，上述目标软件标识序列中的每个目标软件标识与程序存储分区的关系可以是一一对应的。上述程序存储分区可以是存储器上的部分连续物理地址。上述存储器可以包括闪存。上述程序存储分区数据可以是程序存储分区内所保存的数据。上述目标软件可以是MCU软件。可以通过预设的刷写处理接口，对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。作为示例，上述预设的刷写处理接口可以是OBD接口。在一些实施例的一些可选的实现方式中，上述执行主体可以对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。可以对于上述目标软件标识序列中的每个目标软件标识，执行以下步骤：第一步，响应于未检测到针对存储器的刷写操作，获取原子程序升级信息序列。其中，上述原子程序升级信息序列中的原子程序升级信息可以是同一个软件的原子程序进行刷写处理所需要的信息。上述原子程序可以是将软件程序代码按功能进行分割后得到的部分软件程序代码。上述原子程序升级信息序列中的原子程序升级信息可以包括升级程序包标识。上述升级程序包标识可以对升级程序包唯一标识。上述原子程序升级信息序列中的每个原子程序升级信息与程序存储分区数据的关系可以是一一对应的。第二步，对上述原子程序升级信息序列中各个原子程序升级信息对应的程序存储分区数据进行刷写处理。可以通过上述预设的刷写处理接口，对上述原子程序升级信息序列中各个原子程序升级信息对应的程序存储分区数据进行刷写处理。在一些实施例的一些可选的实现方式中，上述原子程序升级信息序列中的每个原子程序升级信息可以包括升级程序包标识、刷写起始地址和刷写长度。其中，上述刷写起始地址可以是将要刷写的第一个物理地址。刷写长度可以是连续物理地址的个数。上述执行主体可以对上述原子程序升级信息序列中各个原子程序升级信息对应的程序存储分区数据进行刷写处理。具体可以如下执行：第一步，基于初始计数器，对于上述原子程序升级信息序列中的每个原子程序升级信息，执行以下子步骤：第一子步骤，基于上述升级程序包标识，获取目标升级程序包。其中，上述目标升级程序包可以是升级程序包标识所对应的升级程序包。首先，将上述升级程序包标识发送至SOC，以供SOC查找与升级程序包标识对应的升级程序包。其次，接收与升级程序包标识对应的升级程序包。其中，该升级程序包可以是SOC发送的。第二子步骤，基于上述目标升级程序包、上述刷写起始地址和上述刷写长度，对上述原子程序升级信息对应的程序存储分区数据进行刷写处理，以及将上述初始计数器的值加上1，得到目标计数器。其中，上述初始计数器可以是初始值为0的计数器。上述目标计数器可以是初始值为1的计数器。可选的，上述执行主体还可以执行以下步骤：第一步，响应于确定目标升级程序包获取失败，将上述目标计数器的值确定为已完成原子程序升级数。其中，上述已完成原子程序升级数可以是已经升级完成的原子程序的数量。第二步，基于上述已完成原子程序升级数和上述原子程序升级信息序列，生成剩余原子程序升级信息序列。其中，上述剩余原子程序升级信息序列中的剩余原子程序升级信息可以是未升级完成的原子程序进行刷写处理所需要的信息。上述剩余原子程序升级信息序列中的剩余原子程序升级信息可以包括升级程序包标识、刷写起始地址和刷写长度。可以从上述原子程序升级信息序列的第一个位置开始删除，删除上述已完成原子程序升级数个原子程序升级信息，得到剩余原子程序升级信息序列。第三步，对上述剩余原子程序升级信息序列中各个剩余原子程序升级信息对应的程序存储分区数据进行刷写处理。具体可以如下执行：第一子步骤，基于第一计数器，对于上述剩余原子程序升级信息序列中的每个剩余原子程序升级信息，执行以下步骤：第一子子步骤，基于上述剩余原子程序升级信息包括的升级程序包标识，获取目标升级程序包。首先，将上述剩余原子程序升级信息包括的升级程序包标识发送至SOC。其次，接收上述剩余原子程序升级信息包括的升级程序包标识对应的升级程序包，作为目标升级程序包。其中，该升级程序包可以是SOC发送的。第二子子步骤，基于上述目标升级程序包、上述刷写起始地址和上述刷写长度，对上述剩余原子程序升级信息对应的程序存储分区数据进行刷写处理，以及将上述第一计数器的值加上1，得到目标计数器。其中，上述第一计数器可以是值为0的计数器。可以通过上述预设的刷写处理接口，基于上述目标升级程序包、上述刷写起始地址和上述刷写长度，对上述剩余原子程序升级信息对应的程序存储分区数据进行刷写处理，以及将上述第一计数器的值加上1，得到目标计数器。上述目标升级程序包获取失败的处理步骤及其相关内容，作为本公开的实施例的一个发明点，解决了背景技术提及的技术问题三“若断电或断网导致数据传输中断，控制单元需要重新擦除整片闪存数据，重新以帧为单位接收整个软件升级程序包以及以帧为单位对整片闪存进行数据写操作，从而，导致目标软件升级效率较低。”。导致目标软件升级效率较低的问题往往如下：若断电或断网导致数据传输中断，控制单元需要重新擦除整片闪存数据，重新以帧为单位接收整个软件升级程序包以及以帧为单位对整片闪存进行数据写操作，从而，导致目标软件升级效率较低。如果解决了上述问题，就能达到提高目标软件升级效率的效果。为了达到这一效果，本公开可以通过计数器对已升级完成的各个原子升级程序进行计数，确定剩余待升级的各个原子升级程序。然后，可以对剩余待升级的各个原子升级程序所对应的程序存储分区数据进行刷写处理，完成目标软件升级。从而，可以提高目标软件升级效率。本公开的上述各个实施例具有如下有益效果：通过本公开的一些实施例的目标软件升级方法，可以提高目标软件升级的效率。具体来说，导致目标软件升级效率较低的原因在于：随着软件升级频率越来越高、以及闪存数据量越来越大，每次升级时，对整片闪存数据进行刷写，耗时较长，导致目标软件升级效率较低。基于此，本公开的一些实施例的目标软件升级方法，首先，获取软件标识信息集。将上述软件标识信息集中的各个软件标识信息更新至以太网。由此，可以将各个软件的标识信息发送到以太网，以便后续系统芯片选择目标软件进行升级。其次，响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列。由此，可以得到上述需求方选择的待升级软件序列。最后，对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。由此，可以对每个待升级目标软件所对应的程序存储分区数据依次进行刷写，缩短升级耗时，从而，可以提高目标软件升级效率。因此，本公开的一些目标软件升级方法，在每次软件升级时，只需对每个待升级软件所对应的程序存储分区数据进行刷写，无需对整片闪存数据进行刷写。从而，缩短了升级耗时。进而，可以提高目标软件升级效率。进一步参考图2，作为对上述各图所示方法的实现，本公开提供了一种目标软件升级装置的一些实施例，这些装置实施例与图1所示的那些方法实施例相对应，该装置具体可以应用于各种电子设备中。如图2所示，一些实施例的目标软件升级装置200包括：获取单元201、更新单元202、生成单元203和刷写处理单元204。其中，获取单元，被配置成获取软件标识信息集；更新单元，被配置成将上述软件标识信息集中的各个软件标识信息更新至以太网；生成单元，被配置成响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列；刷写处理单元，被配置成对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。可以理解的是，该装置200中记载的诸单元与参考图1描述的方法中的各个步骤相对应。由此，上文针对方法描述的操作、特征以及产生的有益效果同样适用于装置200及其中包含的单元，在此不再赘述。进一步参考图3，其示出了适于用来实现本公开的一些实施例的电子设备300的结构示意图。图3示出的电子设备仅仅是一个示例，不应对本公开的实施例的功能和使用范围带来任何限制。如图3所示，电子设备300可以包括处理装置301，其可以根据存储在只读存储器302中的程序或者从存储装置308加载到随机访问存储器303中的程序而执行各种适当的动作和处理。在RAM 303中，还存储有电子设备300操作所需的各种程序和数据。处理装置301、ROM 302以及RAM 303通过总线304彼此相连。输入/输出接口305也连接至总线304。通常，以下装置可以连接至I/O接口305：包括例如触摸屏、触摸板、键盘、鼠标、摄像头、麦克风、加速度计、陀螺仪等的输入装置306；包括例如液晶显示器、扬声器、振动器等的输出装置307；包括例如磁带、硬盘等的存储装置308；以及通信装置309。通信装置309可以允许电子设备300与其他设备进行无线或有线通信以交换数据。虽然图3示出了具有各种装置的电子设备300，但是应理解的是，并不要求实施或具备所有示出的装置。可以替代地实施或具备更多或更少的装置。图3中示出的每个方框可以代表一个装置，也可以根据需要代表多个装置。特别地，根据本公开的一些实施例，上文参考流程图描述的过程可以被实现为计算机软件程序。例如，本公开的一些实施例包括一种计算机程序产品，其包括承载在计算机可读介质上的计算机程序，该计算机程序包含用于执行流程图所示的方法的程序代码。在这样的一些实施例中，该计算机程序可以通过通信装置309从网络上被下载和安装，或者从存储装置308被安装，或者从ROM 302被安装。在该计算机程序被处理装置301执行时，执行本公开的一些实施例的方法中限定的上述功能。需要说明的是，本公开的一些实施例上述的计算机可读介质可以是计算机可读信号介质或者计算机可读存储介质或者是上述两者的任意组合。计算机可读存储介质例如可以是——但不限于——电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。计算机可读存储介质的更具体的例子可以包括但不限于：具有一个或多个导线的电连接、便携式计算机磁盘、硬盘、随机访问存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑磁盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。在本公开的一些实施例中，计算机可读存储介质可以是任何包含或存储程序的有形介质，该程序可以被指令执行系统、装置或者器件使用或者与其结合使用。而在本公开的一些实施例中，计算机可读信号介质可以包括在基带中或者作为载波一部分传播的数据信号，其中承载了计算机可读的程序代码。这种传播的数据信号可以采用多种形式，包括但不限于电磁信号、光信号或上述的任意合适的组合。计算机可读信号介质还可以是计算机可读存储介质以外的任何计算机可读介质，该计算机可读信号介质可以发送、传播或者传输用于由指令执行系统、装置或者器件使用或者与其结合使用的程序。计算机可读介质上包含的程序代码可以用任何适当的介质传输，包括但不限于：电线、光缆、RF等等，或者上述的任意合适的组合。在一些实施方式中，客户端、服务器可以利用诸如HTTP之类的任何当前已知或未来研发的网络协议进行通信，并且可以与任意形式或介质的数字数据通信互连。通信网络的示例包括局域网，广域网，网际网以及端对端网络，以及任何当前已知或未来研发的网络。上述计算机可读介质可以是上述装置中所包含的；也可以是单独存在，而未装配入该电子设备中。上述计算机可读介质承载有一个或者多个程序，当上述一个或者多个程序被该电子设备执行时，使得该电子设备：获取软件标识信息集；将上述软件标识信息集中的各个软件标识信息更新至以太网；响应于接收到针对上述软件标识信息集中至少一个软件标识信息的订阅信息，基于所接收到的订阅信息，生成目标软件标识序列；对上述目标软件标识序列中各个目标软件标识对应的程序存储分区数据进行刷写处理，以供目标软件升级。可以以一种或多种程序设计语言或其组合来编写用于执行本公开的一些实施例的操作的计算机程序代码，所述程序设计语言包括面向对象的程序设计语言—诸如Java、Smalltalk、C++，还包括常规的过程式程序设计语言—诸如“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算机上执行、部分地在用户计算机上执行、作为一个独立的软件包执行、部分在用户计算机上部分在远程计算机上执行、或者完全在远程计算机或服务器上执行。在涉及远程计算机的情形中，远程计算机可以通过任意种类的网络——包括局域网或广域网——连接到用户计算机，或者，可以连接到外部计算机。附图中的流程图和框图，图示了按照本公开各种实施例的系统、方法和计算机程序产品的可能实现的体系架构、功能和操作。在这点上，流程图或框图中的每个方框可以代表一个模块、程序段、或代码的一部分，该模块、程序段、或代码的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。也应当注意，在有些作为替换的实现中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个接连地表示的方框实际上可以基本并行地执行，它们有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图和/或流程图中的每个方框、以及框图和/或流程图中的方框的组合，可以用执行规定的功能或操作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。描述于本公开的一些实施例中的单元可以通过软件的方式实现，也可以通过硬件的方式来实现。所描述的单元也可以设置在处理器中，例如，可以描述为：一种处理器包括获取单元、更新单元、生成单元、刷写处理单元。其中，这些单元的名称在某种情况下并不构成对该单元本身的限定，例如，获取单元还可以被描述为“获取软件标识信息集的单元”。本文中以上描述的功能可以至少部分地由一个或多个硬件逻辑部件来执行。例如，非限制性地，可以使用的示范类型的硬件逻辑部件包括：现场可编程门阵列、专用集成电路、专用标准产品、片上系统、复杂可编程逻辑设备等等。本公开的一些实施例还提供一种计算机程序产品，包括计算机程序，计算机程序在被处理器执行时实现上述的任一种目标软件升级方法。以上描述仅为本公开的一些较佳实施例以及对所运用技术原理的说明。本领域技术人员应当理解，本公开的实施例中所涉及的发明范围，并不限于上述技术特征的特定组合而成的技术方案，同时也应涵盖在不脱离上述发明构思的情况下，由上述技术特征或其等同特征进行任意组合而形成的其它技术方案。例如上述特征与本公开的实施例中公开的具有类似功能的技术特征进行互相替换而形成的技术方案。
