标题title
一种基于多主机负载数据分析的进程优化方法及系统
摘要abst
本发明提供一种基于多主机负载数据分析的进程优化方法及系统，包括：首先响应于待处理进程触发的进程分配指示，从待定主机设备集群中选取至少一个目标主机设备；然后获取待处理进程的任务信息，进程分配指示相关的指示内容，以及各个目标主机设备对应的主机设备信息；接着基于主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定各个目标主机设备对应的匹配置信度，确定各个目标主机设备针对待处理进程的匹配列表，以此匹配出用于执行待处理进程的主机设备，如此设计，能够为待处理进程匹配到合适的主机设备，提高了待处理进程的处理效率以及主机设备的有效利用率。
权利要求书clms
1.一种基于多主机负载数据分析的进程优化方法，其特征在于，该方法包括：响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备；获取所述待处理进程的任务信息，所述进程分配指示相关的指示内容，以及各个目标主机设备对应的主机设备信息，其中，所述主机设备信息至少包括：基于负载裕量与当前负载中的至少一种确定的，用于表征主机设备负载状态的设备负载特征；分别将所述各个目标主机设备对应的主机设备信息，所述任务信息以及所述指示内容，输入预置主机设备选取模型；基于所述主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定所述各个目标主机设备对应的匹配置信度；基于所述各个目标主机设备各自对应的匹配置信度，确定所述各个目标主机设备针对所述待处理进程的匹配列表；其中，所述主机设备选取模型是基于包含不同训练任务进程相关进程执行主机的训练进程主机对训练得到的，所述训练进程主机对中的进程执行主机至少包括：负载状态在预置可行负载范围内的进程执行主机，各个进程执行主机对应有用于表征所述进程执行主机对应的负载状态的大小以及所述进程执行主机是否被选择的表征系数。2.根据权利要求1所述的方法，其特征在于，通过如下方式获得第一主机设备的负载状态，所述第一主机设备为目标主机设备或待定主机设备：将所述第一主机设备的初始负载与需求负载之间的负载变化趋势，作为所述第一主机设备的负载状态，所述需求负载表示所述待处理进程对应的进程分配指示表征的负载需求；或者，将所述第一主机设备当前负载与需求负载之间的负载变化趋势，作为所述第一主机设备的负载状态，所述需求负载表示所述待处理进程对应的进程分配指示表征的负载需求。3.根据权利要求1所述的方法，其特征在于，所述基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备，包括：基于各个参考进程的进程执行记录，从所述待定主机设备集群中选取被至少一个参考进程选择的待定主机设备；按照选取的各个待定主机设备对应的负载状态，对所述各个待定主机设备进行负载状态分析；选取负载状态分析结果在预置负载状态预警线上的待定主机设备，作为目标主机设备。4.根据权利要求1所述的方法，其特征在于，所述基于所述主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定所述各个目标主机设备对应的匹配置信度，包括：基于所述主机设备选取模型，将所述各个目标主机设备的主机设备信息以及所述任务信息进行组合，获得组合向量；分别对所述各个目标主机设备的主机设备信息，所述任务信息，所述指示内容以及所述组合向量，进行二维设备性能特征融合，获得所述各个目标主机设备对应的第一置信度，以及进行多维设备性能特征融合，获得所述各个目标主机设备对应的第二置信度；将所述各个目标主机设备对应的第一置信度与相应的第二置信度，进行相加，获得所述各个目标主机设备对应的匹配置信度。5.根据权利要求1所述的方法，其特征在于，通过下列方式确定所述各个进程执行主机的表征系数：将对应的负载状态在预置可行负载范围，且被选择的进程执行主机作为优选进程执行主机；将对应的负载状态不在预置可行负载范围，且被选择的进程执行主机作为普通进程执行主机；将未被选择的进程执行主机作为备选进程执行主机；其中，所述优选进程执行主机的表征系数大于所述普通进程执行主机的表征系数，所述普通进程执行主机的表征系数大于所述备选进程执行主机的表征系数；根据划分得到的所述各个进程执行主机的类别，确定所述各个进程执行主机对应的表征系数。6.根据权利要求4所述的方法，其特征在于，所述主机设备选取模型是通过下列方式训练得到的：获取所述训练进程主机对，根据所述训练进程主机对中的进程执行主机对，对初始的主机设备选取模型执行反向传播训练，并在训练完毕时，输出训练完毕的主机设备选取模型；其中，在一次反向传播训练过程中执行以下操作：从所述训练进程主机对中选取进程执行主机对，并将选取的进程执行主机对输入所述主机设备选取模型，获取基于所述主机设备选取模型获得的，所述进程执行主机对中的第一进程执行主机对应的第一预估置信度，以及所述进程执行主机对中的第二进程执行主机对应的第二预估置信度，其中，所述第一进程执行主机和所述第二进程执行主机与同一训练任务进程相关，且所述第一进程执行主机的表征系数大于所述第二进程执行主机的表征系数；基于所述第一预估置信度，所述第二预估置信度，所述第一进程执行主机的表征系数与所述第二进程执行主机的表征系数，生成LOSS参数，并基于所述LOSS参数对所述主机设备选取模型进行优化。7.根据权利要求1所述的方法，其特征在于，在所述响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备之前，所述方法还包括调用进程分配指示检测模型对所述进程分配指示进行检测的步骤，该步骤包括：获取样本进程分配指示以及其对应的各响应指示；所述响应指示是通过针对所述样本进程分配指示产生响应时产生的指示，所述响应指示与所述样本进程分配指示具有关联性；将所述样本进程分配指示以及其对应的各响应指示压缩成单个指示，得到初始训练指示数据；获取所述初始训练指示数据；并对所述初始训练指示数据进行切割处理，得到所述初始训练指示数据对应的初始指示字符串码；在所述初始指示字符串码中确定可修改字符；按照预设顺序，排列预置修改字符库中各对比字符代码各自对应的可平替置信度，得到可平替置信度量表；其中，所述可修改字符对应的预置修改字符库是通过以下方式生成的：对所述初始训练指示数据库中的各所述初始训练指示数据分别进行切割，得到各所述初始训练指示数据包括的初始字符代码；针对每个所述初始字符代码，根据包括所述初始字符代码的各所述初始训练指示数据，确定是否存在所述初始字符代码对应的平替字符代码；若存在，则利用所述初始字符代码及其对应的平替字符代码组成对比字符代码对；利用各所述初始训练指示数据包括的初始字符代码和各所述对比字符代码对，组成对比字符代码库；基于所述对比字符代码库中的各对比字符代码训练字符特征模型，得到各所述对比字符代码各自的字符特征；生成所述可修改字符对应的预置修改字符库时，针对所述对比字符代码库中的每个对比字符代码，根据所述对比字符代码的字符特征以及所述可修改字符的字符特征，确定所述对比字符代码与所述可修改字符之间的相似度，作为所述对比字符代码对应的可平替置信度；在所述对比字符代码库中，选取出所对应的可平替置信度满足预置平替标准的对比字符代码，组成所述可修改字符对应的预置修改字符库；针对所述可平替置信度量表中的每个可平替置信度，将所述可平替置信度与所述可平替置信度量表中位于所述可平替置信度前的各可平替置信度求和，得到所述可平替置信度对应的综合置信度；对所述综合置信度进行标准化操作，得到所述可平替置信度对应的对比综合置信度；基于随机生成的相似度参考值，在所述可平替置信度量表中各可平替置信度各自对应的对比综合置信度中，选取出目标对比综合置信度；确定所述目标对比综合置信度对应的可平替置信度对应的对比字符代码，作为关键字符；利用所述关键字符取代所述初始指示字符串码中的所述可修改字符，得到关键指示字符串码；所述可修改字符对应的所述预置修改字符库中的预置修改字符是与所述可修改字符可平替的字符代码；将所述关键指示字符串码及其对应的训练标记作为指示训练数据；所述训练标记包括所述关键指示字符串码中各字符代码各自对应的标记，所述标记用于表征其对应的字符代码是否被取代过；根据所述关键指示字符串码中各字符代码各自对应的字符特征和字符排序特征，生成训练初始参量；通过所述进程分配指示检测模型，根据所述训练初始参量，确定所述关键指示字符串码中各字符代码各自对应的输出结果；根据所述关键指示字符串码中各字符代码各自对应的标记和输出结果，生成目标损失函数；基于所述目标损失函数，调整所述进程分配指示检测模型；所述进程分配指示检测模型用于针对输入的指示字符串码预测其中各字符代码是否被取代过；在训练完成的所述进程分配指示检测模型输出所述进程分配指示对应的字符代码未被取代过的情况下，执行所述响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备的步骤。8.根据权利要求7所述的方法，其特征在于，所述获取所述样本进程分配指示以及其对应的各响应指示包括：在当前设备上，获取所述样本进程分配指示以及其对应的各响应指示；所述当前设备是支持针对发布指示执行响应的设备；当所述当前设备是支持针对发布指示执行自动响应的设备时，所述响应指示是通过针对所述样本进程分配指示执行自动响应时产生的指示；所述将所述样本进程分配指示以及其对应的各响应指示压缩成单个指示，得到所述初始训练指示数据，包括：根据所述样本进程分配指示的第一生成时刻和各所述响应指示对应的第二生成时刻，通过预置切割标识将所述样本进程分配指示和各所述响应指示映射成单个指示，得到所述初始训练指示数据；当所述当前设备是支持针对发布指示执行归档处理的设备时，所述响应指示是通过针对所述样本进程分配指示执行操作归档时产生的指示；所述将所述样本进程分配指示以及其对应的各响应指示压缩成单个指示，得到所述初始训练指示数据，包括：根据各所述响应指示相对于所述样本进程分配指示的归档路径，生成归档图结构；所述归档图结构中包括多个存储区间，所述存储区间对应于所述样本进程分配指示或所述响应指示；根据所述归档图结构、所述样本进程分配指示的第一生成时刻、以及各所述响应指示对应的归档时刻，通过预置切割标识将所述样本进程分配指示和各所述响应指示映射成单个指示，得到所述初始训练指示数据。9.根据权利要求7所述的方法，其特征在于，所述方法还包括：在待定构建策略库中，针对所述关键指示字符串码选择目标构建策略；所述待定构建策略库包括第一维度构建策略、第二维度构建策略以及第三维度构建策略；所述第一维度构建策略用于使指示字符串码中各字符代码均为第一字符数量字符代码，所述第二维度构建策略用于使指示字符串码中各字符代码均为第二字符数量字符代码，所述第三维度构建策略用于使指示字符串码中同时包括第一字符数量字符代码和第二字符数量字符代码；当所述目标构建策略为第一维度构建策略时，将所述关键指示字符串码，作为目标训练指示字符串码；当所述目标构建策略为第二维度构建策略时，针对所述关键指示字符串码中的每个字符代码进行细化切割处理，得到每个字符代码对应的子字符代码；利用所述关键指示字符串码中各字符代码各自对应的子字符代码，组成所述目标训练指示字符串码；当所述目标构建策略为第三维度构建策略时，在所述关键指示字符串码中确定待切割字符代码和不切割字符代码；对所述待切割字符代码进行细化切割处理，得到所述待切割字符代码对应的子字符代码；利用所述关键指示字符串码中各所述待切割字符代码各自对应的子字符代码、以及各所述不切割字符代码，组成所述目标训练指示字符串码；则所述将所述关键指示字符串码及其对应的训练标记作为指示训练数据，包括：将所述目标训练指示字符串码及其对应的训练标记，作为所述指示训练数据；所述训练标记包括所述目标训练指示字符串码中各字符代码各自对应的标记，所述标记用于表征其对应的字符代码是否被取代过。10.一种基于多主机负载数据分析的进程优化系统，其特征在于，该系统包括：响应模块，用于响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备；获取模块，用于所述待处理进程的任务信息，所述进程分配指示相关的指示内容，以及各个目标主机设备对应的主机设备信息，其中，所述主机设备信息至少包括：基于负载裕量与当前负载中的至少一种确定的，用于表征主机设备负载状态的设备负载特征；匹配模块，用于分别将所述各个目标主机设备对应的主机设备信息，所述任务信息以及所述指示内容，输入预置主机设备选取模型；基于所述主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定所述各个目标主机设备对应的匹配置信度；基于所述各个目标主机设备各自对应的匹配置信度，确定所述各个目标主机设备针对所述待处理进程的匹配列表；其中，所述主机设备选取模型是基于包含不同训练任务进程相关进程执行主机的训练进程主机对训练得到的，所述训练进程主机对中的进程执行主机至少包括：负载状态在预置可行负载范围内的进程执行主机，各个进程执行主机对应有用于表征所述进程执行主机对应的负载状态的大小以及所述进程执行主机是否被选择的表征系数。
说明书desc
技术领域本发明涉及计算机技术领域，具体而言，涉及一种基于多主机负载数据分析的进程优化方法及系统。背景技术随着计算机技术的高速发展，各行各业依托于计算机技术也在不断扩大业务。而随着业务的提升，需要处理的数据增多，需要处理的业务对应的进程也对应增多，为了能够满足日益增加的任务进程的快速解决，现有技术中会配置多个主机设备来处理数量庞大的任务进程，但并不是所有的任务进程都会由最为合适的主机设备进行处理，这一方便导致了进程的处理效率低下，另一方面也导致了整体主机设备的有效利用率不高。发明内容本发明的目的在于提供一种基于多主机负载数据分析的进程优化方法及系统。第一方面，本发明实施例提供一种基于多主机负载数据分析的进程优化方法，该方法包括：响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备；获取所述待处理进程的任务信息，所述进程分配指示相关的指示内容，以及各个目标主机设备对应的主机设备信息，其中，所述主机设备信息至少包括：基于负载裕量与当前负载中的至少一种确定的，用于表征主机设备负载状态的设备负载特征；分别将所述各个目标主机设备对应的主机设备信息，所述任务信息以及所述指示内容，输入预置主机设备选取模型；基于所述主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定所述各个目标主机设备对应的匹配置信度；基于所述各个目标主机设备各自对应的匹配置信度，确定所述各个目标主机设备针对所述待处理进程的匹配列表；其中，所述主机设备选取模型是基于包含不同训练任务进程相关进程执行主机的训练进程主机对训练得到的，所述训练进程主机对中的进程执行主机至少包括：负载状态在预置可行负载范围内的进程执行主机，各个进程执行主机对应有用于表征所述进程执行主机对应的负载状态的大小以及所述进程执行主机是否被选择的表征系数。在一种可能的实施方式中，通过如下方式获得第一主机设备的负载状态，所述第一主机设备为目标主机设备或待定主机设备：将所述第一主机设备的初始负载与需求负载之间的负载变化趋势，作为所述第一主机设备的负载状态，所述需求负载表示所述待处理进程对应的进程分配指示表征的负载需求；或者，将所述第一主机设备当前负载与需求负载之间的负载变化趋势，作为所述第一主机设备的负载状态，所述需求负载表示所述待处理进程对应的进程分配指示表征的负载需求。在一种可能的实施方式中，所述基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备，包括：基于各个参考进程的进程执行记录，从所述待定主机设备集群中选取被至少一个参考进程选择的待定主机设备；按照选取的各个待定主机设备对应的负载状态，对所述各个待定主机设备进行负载状态分析；选取负载状态分析结果在预置负载状态预警线上的待定主机设备，作为目标主机设备。在一种可能的实施方式中，述基于所述主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定所述各个目标主机设备对应的匹配置信度，包括：基于所述主机设备选取模型，将所述各个目标主机设备的主机设备信息以及所述任务信息进行组合，获得组合向量；分别对所述各个目标主机设备的主机设备信息，所述任务信息，所述指示内容以及所述组合向量，进行二维设备性能特征融合，获得所述各个目标主机设备对应的第一置信度，以及进行多维设备性能特征融合，获得所述各个目标主机设备对应的第二置信度；将所述各个目标主机设备对应的第一置信度与相应的第二置信度，进行相加，获得所述各个目标主机设备对应的匹配置信度。在一种可能的实施方式中，通过下列方式确定所述各个进程执行主机的表征系数：将对应的负载状态在预置可行负载范围，且被选择的进程执行主机作为优选进程执行主机；将对应的负载状态不在预置可行负载范围，且被选择的进程执行主机作为普通进程执行主机；将未被选择的进程执行主机作为备选进程执行主机；其中，所述优选进程执行主机的表征系数大于所述普通进程执行主机的表征系数，所述普通进程执行主机的表征系数大于所述备选进程执行主机的表征系数；根据划分得到的所述各个进程执行主机的类别，确定所述各个进程执行主机对应的表征系数。在一种可能的实施方式中，所述主机设备选取模型是通过下列方式训练得到的：获取所述训练进程主机对，根据所述训练进程主机对中的进程执行主机对，对初始的主机设备选取模型执行反向传播训练，并在训练完毕时，输出训练完毕的主机设备选取模型；其中，在一次反向传播训练过程中执行以下操作：从所述训练进程主机对中选取进程执行主机对，并将选取的进程执行主机对输入所述主机设备选取模型，获取基于所述主机设备选取模型获得的，所述进程执行主机对中的第一进程执行主机对应的第一预估置信度，以及所述进程执行主机对中的第二进程执行主机对应的第二预估置信度，其中，所述第一进程执行主机和所述第二进程执行主机与同一训练任务进程相关，且所述第一进程执行主机的表征系数大于所述第二进程执行主机的表征系数；基于所述第一预估置信度，所述第二预估置信度，所述第一进程执行主机的表征系数与所述第二进程执行主机的表征系数，生成LOSS参数，并基于所述LOSS参数对所述主机设备选取模型进行优化。在一种可能的实施方式中，在所述响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备之前，所述方法还包括调用进程分配指示检测模型对所述进程分配指示进行检测的步骤，该步骤包括：获取样本进程分配指示以及其对应的各响应指示；所述响应指示是通过针对所述样本进程分配指示产生响应时产生的指示，所述响应指示与所述样本进程分配指示具有关联性；将所述样本进程分配指示以及其对应的各响应指示压缩成单个指示，得到初始训练指示数据；获取所述初始训练指示数据；并对所述初始训练指示数据进行切割处理，得到所述初始训练指示数据对应的初始指示字符串码；在所述初始指示字符串码中确定可修改字符；按照预设顺序，排列预置修改字符库中各对比字符代码各自对应的可平替置信度，得到可平替置信度量表；其中，所述可修改字符对应的预置修改字符库是通过以下方式生成的：对所述初始训练指示数据库中的各所述初始训练指示数据分别进行切割，得到各所述初始训练指示数据包括的初始字符代码；针对每个所述初始字符代码，根据包括所述初始字符代码的各所述初始训练指示数据，确定是否存在所述初始字符代码对应的平替字符代码；若存在，则利用所述初始字符代码及其对应的平替字符代码组成对比字符代码对；利用各所述初始训练指示数据包括的初始字符代码和各所述对比字符代码对，组成对比字符代码库；基于所述对比字符代码库中的各对比字符代码训练字符特征模型，得到各所述对比字符代码各自的字符特征；生成所述可修改字符对应的预置修改字符库时，针对所述对比字符代码库中的每个对比字符代码，根据所述对比字符代码的字符特征以及所述可修改字符的字符特征，确定所述对比字符代码与所述可修改字符之间的相似度，作为所述对比字符代码对应的可平替置信度；在所述对比字符代码库中，选取出所对应的可平替置信度满足预置平替标准的对比字符代码，组成所述可修改字符对应的预置修改字符库；针对所述可平替置信度量表中的每个可平替置信度，将所述可平替置信度与所述可平替置信度量表中位于所述可平替置信度前的各可平替置信度求和，得到所述可平替置信度对应的综合置信度；对所述综合置信度进行标准化操作，得到所述可平替置信度对应的对比综合置信度；基于随机生成的相似度参考值，在所述可平替置信度量表中各可平替置信度各自对应的对比综合置信度中，选取出目标对比综合置信度；确定所述目标对比综合置信度对应的可平替置信度对应的对比字符代码，作为关键字符；利用所述关键字符取代所述初始指示字符串码中的所述可修改字符，得到关键指示字符串码；所述可修改字符对应的所述预置修改字符库中的预置修改字符是与所述可修改字符可平替的字符代码；将所述关键指示字符串码及其对应的训练标记作为指示训练数据；所述训练标记包括所述关键指示字符串码中各字符代码各自对应的标记，所述标记用于表征其对应的字符代码是否被取代过；根据所述关键指示字符串码中各字符代码各自对应的字符特征和字符排序特征，生成训练初始参量；通过所述进程分配指示检测模型，根据所述训练初始参量，确定所述关键指示字符串码中各字符代码各自对应的输出结果；根据所述关键指示字符串码中各字符代码各自对应的标记和输出结果，生成目标损失函数；基于所述目标损失函数，调整所述进程分配指示检测模型；所述进程分配指示检测模型用于针对输入的指示字符串码预测其中各字符代码是否被取代过；在训练完成的所述进程分配指示检测模型输出所述进程分配指示对应的字符代码未被取代过的情况下，执行所述响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备的步骤。在一种可能的实施方式中，所述获取所述样本进程分配指示以及其对应的各响应指示包括：在当前设备上，获取所述样本进程分配指示以及其对应的各响应指示；所述当前设备是支持针对发布指示执行响应的设备；当所述当前设备是支持针对发布指示执行自动响应的设备时，所述响应指示是通过针对所述样本进程分配指示执行自动响应时产生的指示；所述将所述样本进程分配指示以及其对应的各响应指示压缩成单个指示，得到所述初始训练指示数据，包括：根据所述样本进程分配指示的第一生成时刻和各所述响应指示对应的第二生成时刻，通过预置切割标识将所述样本进程分配指示和各所述响应指示映射成单个指示，得到所述初始训练指示数据；当所述当前设备是支持针对发布指示执行归档处理的设备时，所述响应指示是通过针对所述样本进程分配指示执行操作归档时产生的指示；所述将所述样本进程分配指示以及其对应的各响应指示压缩成单个指示，得到所述初始训练指示数据，包括：根据各所述响应指示相对于所述样本进程分配指示的归档路径，生成归档图结构；所述归档图结构中包括多个存储区间，所述存储区间对应于所述样本进程分配指示或所述响应指示；根据所述归档图结构、所述样本进程分配指示的第一生成时刻、以及各所述响应指示对应的归档时刻，通过预置切割标识将所述样本进程分配指示和各所述响应指示映射成单个指示，得到所述初始训练指示数据。在一种可能的实施方式中，所述方法还包括：在待定构建策略库中，针对所述关键指示字符串码选择目标构建策略；所述待定构建策略库包括第一维度构建策略、第二维度构建策略以及第三维度构建策略；所述第一维度构建策略用于使指示字符串码中各字符代码均为第一字符数量字符代码，所述第二维度构建策略用于使指示字符串码中各字符代码均为第二字符数量字符代码，所述第三维度构建策略用于使指示字符串码中同时包括第一字符数量字符代码和第二字符数量字符代码；当所述目标构建策略为第一维度构建策略时，将所述关键指示字符串码，作为目标训练指示字符串码；当所述目标构建策略为第二维度构建策略时，针对所述关键指示字符串码中的每个字符代码进行细化切割处理，得到每个字符代码对应的子字符代码；利用所述关键指示字符串码中各字符代码各自对应的子字符代码，组成所述目标训练指示字符串码；当所述目标构建策略为第三维度构建策略时，在所述关键指示字符串码中确定待切割字符代码和不切割字符代码；对所述待切割字符代码进行细化切割处理，得到所述待切割字符代码对应的子字符代码；利用所述关键指示字符串码中各所述待切割字符代码各自对应的子字符代码、以及各所述不切割字符代码，组成所述目标训练指示字符串码；则所述将所述关键指示字符串码及其对应的训练标记作为指示训练数据，包括：将所述目标训练指示字符串码及其对应的训练标记，作为所述指示训练数据；所述训练标记包括所述目标训练指示字符串码中各字符代码各自对应的标记，所述标记用于表征其对应的字符代码是否被取代过。第二方面，本发明实施例提供一种基于多主机负载数据分析的进程优化系统，该系统包括：响应模块，用于响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备；获取模块，用于所述待处理进程的任务信息，所述进程分配指示相关的指示内容，以及各个目标主机设备对应的主机设备信息，其中，所述主机设备信息至少包括：基于负载裕量与当前负载中的至少一种确定的，用于表征主机设备负载状态的设备负载特征；匹配模块，用于分别将所述各个目标主机设备对应的主机设备信息，所述任务信息以及所述指示内容，输入预置主机设备选取模型；基于所述主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定所述各个目标主机设备对应的匹配置信度；基于所述各个目标主机设备各自对应的匹配置信度，确定所述各个目标主机设备针对所述待处理进程的匹配列表；其中，所述主机设备选取模型是基于包含不同训练任务进程相关进程执行主机的训练进程主机对训练得到的，所述训练进程主机对中的进程执行主机至少包括：负载状态在预置可行负载范围内的进程执行主机，各个进程执行主机对应有用于表征所述进程执行主机对应的负载状态的大小以及所述进程执行主机是否被选择的表征系数。相比现有技术，本发明提供的有益效果包括：采用本发明提供一种基于多主机负载数据分析的进程优化方法及系统，通过响应于待处理进程触发的进程分配指示，从待定主机设备集群中选取至少一个目标主机设备；然后获取待处理进程的任务信息，进程分配指示相关的指示内容，以及各个目标主机设备对应的主机设备信息；接着基于主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定各个目标主机设备对应的匹配置信度，确定各个目标主机设备针对待处理进程的匹配列表，以此匹配出用于执行待处理进程的主机设备，如此设计，能够为待处理进程匹配到合适的主机设备，提高了待处理进程的处理效率以及主机设备的有效利用率。附图说明为了更清楚地说明本发明实施例的技术方案，下面将对实施例中所需要使用的附图作简单地介绍。应当理解，以下附图仅示出了本发明的某些实施例，因此不应被看作是对范围的限定。对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他相关的附图。图1为本发明实施例提供的基于多主机负载数据分析的进程优化方法的步骤流程示意图；图2为本发明实施例提供的基于多主机负载数据分析的进程优化系统的结构示意框图；图3为本发明实施例提供的计算机设备的结构示意框图。具体实施方式为使本发明实施例的目的、技术方案和优点更加清楚，下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述。参阅图1所示，为本申请实施例提供的一种基于多主机负载数据分析的进程优化方法的实施流程图，以计算机设备为执行主体为例，该方法的具体实施流程如下：S201：计算机设备响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备；S202：计算机设备获取待处理进程的任务信息，进程分配指示相关的指示内容，以及各个目标主机设备对应的主机设备信息，其中，主机设备信息至少包括：基于负载裕量与当前负载中的至少一种确定的，用于表征主机设备负载状态的设备负载特征；其中，待处理进程指当前需要进行处理的进程，任务信息包括任务名称、任务需求等。指示内容则是根据待处理进程触发的进程分配指示确定的，可以包括进程分配指示的时间和日期等信息。基于此，本申请实施例中的主机设备信息还进一步包括表征主机设备负载状态的设备负载特征。一种可选的实施方式中，可以通过如下方式中的任意一种方式，获得某一目标主机设备或是待定主机设备的负载状态，下述统称第一主机设备：根据第一主机设备的初始负载，确定第一主机设备的负载状态。该方式下，则表示将该内容的初始负载到需求负载之间的负载变化趋势，作为该目标主机设备的负载状态。在本申请实施例中，需求负载表示待处理进程对应的进程分配指示表征的负载需求。S203：分别将所述各个目标主机设备对应的主机设备信息，所述任务信息以及所述指示内容，输入预置主机设备选取模型。S204：基于所述主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定所述各个目标主机设备对应的匹配置信度。其中，匹配置信度可以表示用户选择该目标主机设备的概率。在本申请实施例中，该步骤可基于人工智能来实现，例如可以通过本申请中的主机设备选取模型来获取各个目标主机设备各自对应的匹配置信度。需要说明的是，该主机设备选取模型是基于包含不同训练任务进程相关进程执行主机的训练进程主机对训练得到的，相应地训练进程主机对中的进程执行主机至少包括：负载状态在预置可行负载范围内的进程执行主机，各个进程执行主机对应有一个表征系数，该表征系数用于表征：该进程执行主机对应的负载状态的大小以及进程执行主机是否被选择。可选的，具体可以通过下列方式确定各个进程执行主机的表征系数：首先，根据各个进程执行主机对应的负载状态，以及各个进程执行主机是否被训练任务进程选择，将各个进程执行主机进行分类；进而，根据划分得到的各个进程执行主机的类别，确定各个进程执行主机对应的表征系数。在本申请实施例中，具体是将各个进程执行主机分为了以下三种类别：第一，将对应的负载状态在预置可行负载范围，且被选择的进程执行主机作为优选进程执行主机，也可称作优先选择进程执行主机。第二，将对应的负载状态不在预置可行负载范围，且被选择的进程执行主机作为普通进程执行主机，也可称作普通选择进程执行主机。第三，将未被选择的进程执行主机作为备选进程执行主机，也可称作未选择进程执行主机。即，将除上述两种类型外的样本，作为未选择进程执行主机。其中，优选进程执行主机的表征系数大于普通进程执行主机的表征系数，普通进程执行主机的表征系数大于备选进程执行主机的表征系数。本发明实施例提供一种可选的实施方式包括以下步骤：S301：计算机设备分别将各个目标主机设备对应的主机设备信息，任务信息以及指示内容，输入预置主机设备选取模型；S302：计算机设备基于主机设备选取模型对各个目标主机设备进行负载状态分析，获取各个目标主机设备对应的匹配置信度；具体地，以主机设备选取模型为基于成对的损失的深度因子分解机模型为例，该模型包括用于进行二维设备性能特征融合的因子分解机，和用于进行多维设备性能特征融合的深度神经网络两部分，步骤S302又可划分为以下几个子步骤：S3021：计算机设备基于主机设备选取模型，将各个目标主机设备的主机设备信息以及任务信息进行组合，获得组合向量；其中，本申请实施例中的组合向量也可称作人工组合向量，是以原始的任务信息和主机设备信息作为输入，根据人工指定的特征组合做笛卡尔积，经过笛卡尔积会得到高维稀疏的特征。S3022：计算机设备分别对各个目标主机设备的主机设备信息，任务信息，指示内容以及组合向量，进行二维设备性能特征融合，获得各个目标主机设备对应的第一置信度，以及进行多维设备性能特征融合，获得各个目标主机设备对应的第二置信度；其中，第一置信度主要是以基于FM部分获得的得分，第二置信度则是指基于DNN部分获得的得分。S3023：计算机设备将各个目标主机设备对应的第一置信度与相应的第二置信度，进行相加，获得各个目标主机设备对应的匹配置信度。S205：计算机设备基于各个目标主机设备各自对应的匹配置信度，确定各个目标主机设备针对待处理进程的匹配列表。一般情况下，目标主机设备对应的匹配置信度越高，该目标主机设备针对待处理进程的匹配列表也就更靠前，即优先向待处理进程分配该目标主机设备。在上述申请实施方式中，结合用于表征主机设备负载状态的设备负载特征，来对待定主机设备进行召回，对各个目标主机设备进行匹配置信度的预估，可以保证基于负载状态分析得到的优先内容，具有较高的匹配置信度，在此基础上，再基于各个目标主机设备对应的匹配置信度进行匹配列表负载状态分析时，可以有效保证优先内容对应的时效性。对本申请中的主机设备选取模型进行详细介绍：可选的，主机设备选取模型是通过下列方式训练得到的：首先，获取训练进程主机对，进而，根据训练进程主机对中的进程执行主机对，对初始的主机设备选取模型执行反向传播训练，并在训练完毕时，输出训练完毕的主机设备选取模型。以服务器为执行主体为例，在一次反向传播训练过程中执行以下操作：S601：服务器从训练进程主机对中选取进程执行主机对，并将选取的进程执行主机对输入主机设备选取模型，获取基于主机设备选取模型获得的，进程执行主机对中的第一进程执行主机对应的第一预估置信度，以及进程执行主机对中的第二进程执行主机对应的第二预估置信度；其中，第一进程执行主机和第二进程执行主机与同一训练任务进程相关，且第一进程执行主机的表征系数大于第二进程执行主机的表征系数。第一预估置信度和第二预估置信度同上述所列举的，目标主机设备对应的匹配置信度的含义相同，这里称作“预估置信度”主要是为了区分模型训练阶段和线上预测阶段。在模型训练阶段，即可称作预估置信度，该预估置信度也是基于FM部分和DNN部分的结果，进行相加所得到的，而“第一预估置信度”和“第二预估置信度”则是针对进程执行主机对中不同的样本而言。具体地，本申请实施例中的进程执行主机对是针对同一对象而言的两个指示训练数据，且这两个指示训练数据中进程执行主机对应的表征系数不同。S602：服务器基于第一预估置信度，第二预估置信度，第一进程执行主机的表征系数与第二进程执行主机的表征系数，生成LOSS参数，并基于LOSS参数对主机设备选取模型进行优化。在本申请实施例中，基于损失的主机设备选取模型的训练数据与基于Pointwise损失的主机设备选取模型的训练数据稍有不同。本申请需要把同一个用户的一次刷新所生成的样本放置在一个batch里，每一个样本通过前向传播计算出预估得分，然后同一个用户的样本再根据标签构造进程执行主机对，进而计算损失。需要说明的是，虽然同一个进程执行主机可能会出现在多个进程执行主机对里，但由于预估置信度通过一次前向传播都已经计算完成，因而，模型训练的计算量并不会提升。在前述执行S201之前，本发明实施例还可以先执行以下步骤。S401：获取初始训练指示数据；并对所述初始训练指示数据进行切割处理，得到所述初始训练指示数据对应的初始指示字符串码。服务器训练进程分配指示检测模型之前，需要先获取初始训练指示数据，并对所获取的初始训练指示数据进行切割处理，将该初始训练指示数据分解为若干字符代码，进而，基于这些字符代码在初始训练指示数据中的排布顺序，利用这些字符代码组成该初始训练指示数据对应的初始指示字符串码。需要说明的是，上述初始训练指示数据可以理解为，训练进程分配指示检测模型时使用的训练指示的生成基础，即在本申请实施例中，需要对初始训练指示数据进行字符代码取代处理，才能得到实际训练进程分配指示检测模型时使用的训练指示。该初始训练指示数据可以是通过任意方式产生的指示，例如可以是从设备上采集的指示，又例如可以是进程分配指示检测模型的通用指示训练数据集中的指示，再例如可以是人为生成的指示，等等，本申请在此不对初始训练指示数据的产生方式做任何限定。上述初始训练指示数据对应的初始指示字符串码，是将切割初始训练指示数据得到的各字符代码排列起来生成的指示字符串码。应理解，对于初始训练指示数据的切割方式可以根据实际需求设定，例如可以通过分词的方式切割初始训练指示数据等等，本申请在此不对切割初始训练指示数据得到其对应的初始指示字符串码的方式做任何限定。在一种可能的实现方式中，服务器可以从预先生成的初始训练指示数据库中，获取上述初始训练指示数据。该初始训练指示数据库中的各初始训练指示数据可以是基于从当前设备上采集的指示日志生成的，例如：在当前设备上，获取样本进程分配指示以及其对应的各响应指示，此处的当前设备是指支持针对发布指示执行响应的设备，上述样本进程分配指示是通过指示发布操作发布的指示，上述响应指示是通过针对该样本进程分配指示产生响应时产生的指示。然后，将该样本进程分配指示及其对应的各响应指示组合起来，得到初始训练指示数据。需要说明的是，样本进程分配指示是指用户通过当前设备提供的指示发布功能发布的指示。样本进程分配指示对应的响应指示是指用户通过当前设备提供的反馈功能，针对样本进程分配指示产生响应时产生的指示；此处的响应可以是在样本进程分配指示的基础上执行的与该样本进程分配指示相关的任一种操作。应理解，在实际应用中，当前设备也可以为其它设备，如支持用户执行指示评论操作的设备等等，本申请在此不对该当前设备做任何限定。由于当前设备上通过指示发布功能发布的样本进程分配指示、以及通过针对该样本进程分配指示执行响应产生的响应指示之间通常存在关联，因此，服务器可以对样本进程分配指示及其对应的各响应指示进行压缩，将该样本进程分配指示及其对应的各响应指示组合为一个单独的指示，作为本申请实施例中的初始训练指示数据。如此，对众多零散的指示进行压缩，可以大幅减少训练进程分配指示检测模型时使用的训练指示的数量，提高模型训练速度，同时能够保证进程分配指示检测模型可以充分地学习各种指示关联关系，即在简化训练指示的同时，保证训练指示的关联关系丰富。作为一种示例，上述当前设备具体可以是支持针对发布指示执行自动响应的设备，相应地，上述响应指示可以是通过针对样本进程分配指示执行自动响应时产生的指示。此时，服务器可以根据样本进程分配指示的第一生成时刻和各响应指示对应的第二生成时刻，通过预置切割标识将样本进程分配指示和各响应指示映射成单个指示，如此得到初始训练指示数据。应理解，除了论坛平台属于上述支持针对发布指示执行自动响应的当前设备外，上述支持针对发布指示执行自动响应的当前设备例如还可以是支持针对发布指示进行评论的设备，等等，本申请在此不对该支持自动响应的当前设备做任何限定。对于此类当前设备，本申请实施例除了可以基于各指示的产生时间将各指示映射起来外，还可以采用其它方式，将各指示映射成单个的初始训练指示数据，例如，根据样本进程分配指示的第一生成时刻、各响应指示各自对应的反馈时间、以及各响应指示之间的回复关系，将样本进程分配指示及其对应的各响应指示映射成初始训练指示数据，本申请在此也不对生成初始训练指示数据的方式做任何限定。作为另一种示例，上述当前设备具体可以是支持针对发布指示执行归档处理的设备，相应地，上述响应指示可以是通过针对样本进程分配指示执行操作归档时产生的指示。此时，服务器可以根据各响应指示相对于样本进程分配指示的归档路径，生成归档图结构；该归档图结构中包括多个存储区间，每个存储区间对应于样本进程分配指示或响应指示；进而，根据该归档图结构、样本进程分配指示的第一生成时刻、以及各响应指示对应的归档时刻，通过预置切割标识将样本进程分配指示和各响应指示映射成单个指示，如此得到初始训练指示数据。完成归档图结构的生成后，服务器可以根据该归档图结构、样本进程分配指示的第一生成时刻、以及各响应指示各自对应的归档时刻，将样本进程分配指示和各响应指示通过预置切割标识映射起来得到单个指示，该单个指示即可作为初始训练指示数据添加至初始训练指示数据库中。本申请实施例除了可以通过上文介绍的方式，将样本进程分配指示与各响应指示压缩起来外，也可以采用其它方式压缩样本进程分配指示与各响应指示，本申请在此也不对该种情况下生成初始训练指示数据的方式做任何限定。应理解，在实际应用中，服务器训练进程分配指示检测模型前，除了可以从包括通过上述方式生成的初始训练指示数据的初始训练指示数据库中，获取训练进程分配指示检测模型时所依据的训练指示外，还可以在训练进程分配指示检测模型前，实时地从当前设备采集指示日志，并通过上述方式实时地生成初始训练指示数据，即本申请实施例在此不对初始训练指示数据的获取方式做任何限定。需要说明的是，服务器训练进程分配指示检测模型前，往往需要先确定训练指示中涉及的各字符代码的字符特征，进而，使所训练的进程分配指示检测模型根据训练指示涉及的各字符代码的字符特征，学习训练指示的指示全局向量。而训练指示涉及的各字符代码的字符特征是通过训练字符特征模型得到的，下面对如何获得各训练指示涉及的字符代码的字符特征进行介绍：在服务器已通过上述方式生成各初始训练指示数据，并利用各初始训练指示数据组成初始训练指示数据库的情况下，服务器可以对该初始训练指示数据中的各初始训练指示数据分别进行切割处理，得到各初始训练指示数据包括的字符代码；并利用各初始训练指示数据包括的字符代码，生成对比字符代码库；进而，服务器可以基于该对比字符代码库中的各对比字符代码训练字符特征模型，从而得到各对比字符代码各自的字符特征。具体实现时，服务器可以先对初始训练指示数据库中的每个初始训练指示数据进行切割处理，将每个初始训练指示数据切割为若干字符代码，并利用这些字符代码组成对比字符代码库。应理解，由于训练进程分配指示检测模型时使用的即是初始训练指示数据库中的初始训练指示数据，并且也会将初始训练指示数据切割为若干字符代码，因此通过上述方式生成的对比字符代码库理论上应当可以覆盖模型训练时可能使用的字符代码，相应地，针对该对比字符代码中的各对比字符代码生成字符特征，可以保证后续训练进程分配指示检测模型时可以获取到所需的字符代码的字符特征。进而，服务器可以基于上述对比字符代码库中的各对比字符代码训练字符特征模型，从而得到各对比字符代码各自的字符特征。示例性的，服务器可以利用切割后的各初始训练指示数据训练字符特征模型cbow，cbow模型的基本思想是通过训练将每个字符代码映射成K维字符特征，通过字符代码的字符特征之间的距离判断字符代码之间的可平替度，应理解，越能够相互替换的两个字符代码，这两个字符代码各自对应的字符特征之间的距离应越小。由于训练cbow模型时通常只考虑当前字符代码与预设窗口范围内的字符代码之间的关联性，因此，通过训练cbow模型得到的字符代码的字符特征仅是携带有局部关联关系的向量。如此，服务器采用成熟的字符特征模型训练方法，可以根据初始训练指示数据库中的各初始训练指示数据训练出字符特征模型，从而得到对比字符代码库中各对比字符代码各自的字符特征，该对比字符代码各自的字符特征在后续的进程分配指示检测模型的训练过程中，可以为模型训练提供可靠的局部关联关系，有利于辅助进行进程分配指示检测模型的训练。在一种可能的实现方式中，服务器生成上述对比字符代码库时，具体的，服务器可以对初始训练指示数据库中的各初始训练指示数据分别进行切割，得到各初始训练指示数据包括的初始字符代码；针对每个初始字符代码，服务器可以根据包括各初始字符代码的各初始训练指示数据，确定是否存在该初始字符代码对应的平替字符代码，若存在，则利用该初始字符代码及其对应的平替字符代码组成对比字符代码对；进而，服务器可以利用各初始训练指示数据包括的初始字符代码和各对比字符代码对，组成上述对比字符代码库。如此，通过上述方式生成的对比字符代码库，可以使对比字符代码库中的内容更丰富，并且使对比字符代码库包括的对比字符代码更符合实际指示环境；相应地，针对该对比字符代码库中各对比字符代码确定的字符特征，在后续的进程分配指示检测模型训练过程中能够更好地表达对应的局部关联关系。应理解，在服务器预先生成有上述对比字符代码库的情况下，服务器针对训练进程分配指示检测模型时所使用的初始训练指示数据进行切割处理时，可以参考该对比字符代码库进行切割。即服务器通过S401执行对初始训练指示数据的切割处理时，可以使经切割处理得到的初始指示字符串码中的各字符代码均所属于对比字符代码库，也即该初始指示字符串码包括的字符代码可以是对比字符代码库中的初始字符代码，也可以是对比字符代码库中的对比字符代码对。S402：在所述初始指示字符串码中确定可修改字符；并从所述可修改字符对应的预置修改字符库中选出关键字符，利用所述关键字符取代所述初始指示字符串码中的所述可修改字符，得到关键指示字符串码。服务器完成对于初始训练指示数据的切割处理，得到该初始训练指示数据对应的初始指示字符串码后，可以在该初始指示字符串码中确定待取代位置，该待取代位置处的字符代码相应地即为可修改字符。然后，服务器可以获取该可修改字符对应的预置修改字符库，并从该预置修改字符库中选出关键字符；进而，利用该关键字符取代初始指示字符串码中的该可修改字符，从而得到关键指示字符串码。需要说明的是，上述可修改字符是在初始指示字符串码中选取的任一个或多个所需取代的字符代码。在初始指示字符串码中选择可修改字符时，服务器可以先基于预设的选取比例，确定所需在初始指示字符串码中选取的可修改字符的数量。需要说明的是，上述可修改字符对应的预置修改字符库是预先生成的、用于承载该可修改字符对应的预置修改字符的集合，可修改字符对应的预置修改字符是可用于取代该可修改字符的字符代码，作为示例，该可修改字符对应的预置修改字符可以是与可修改字符可平替的字符代码。在一种可能的实现方式中，服务器预先生成出上文介绍的对比字符代码库，并确定出该对比字符代码库中各对比字符代码各自的字符特征后，可以进一步基于各对比字符代码各自的字符特征，生成各对比字符代码各自对应的预置修改字符库。相应地，当服务器需要获取初始指示字符串码中可修改字符对应的预置修改字符库时，服务器可以直接获取预先生成好的该可修改字符对应的预置修改字符库。针对对比字符代码库中的目标对比字符代码生成对应的预置修改字符库时，服务器可以针对对比字符代码库中除该目标对比字符代码以外的每个对比字符代码，根据该对比字符代码的字符特征以及该目标对比字符代码的字符特征，确定该对比字符代码与该目标对比字符代码之间的相似度，作为该对比字符代码对应的可平替置信度。进而，在对比字符代码库中，选出所对应的可平替置信度满足预置平替标准的对比字符代码，组成该可修改字符对应的预置修改字符库。具体的，服务器针对对比字符代码库中的某个对比字符代码生成对应的预置修改字符库时，可以将该对比字符代码视为目标对比字符代码。针对对比字符代码库中除该目标对比字符代码外的每个对比字符代码，服务器可以通过余弦相似度进行相似度计算。服务器通过上述方式，计算出对比字符代码库中除目标对比字符代码外的各对比字符代码各自对应的可平替置信度后，可以从这些对比字符代码中选出所对应的可平替置信度满足预置平替标准的对比字符代码，作为该目标对比字符代码对应的预置修改字符，组成该目标对比字符代码对应的预置修改字符库。此处的预置平替标准可以是所对应的可平替置信度高于预设相似度阈值；也可以对各对比字符代码各自对应的可平替置信度进行排序，进而将排序靠前的若干个可平替置信度视为满足预置平替标准，本申请在此不对该预置平替标准做任何限定。如此，服务器通过上述方式针对对比字符代码库中的各对比字符代码，生成出其各自对应的预置修改字符库，此对比字符代码对应的预置修改字符库可以直接被用于取代初始训练指示数据中的可修改字符，并且能够保证取代前后的字符代码之间具有可平替性，有利于对进程分配指示检测模型进行训练时使该进程分配指示检测模型更好地学习指示关联关系。对于通过上述方式生成的可修改字符对应的预置修改字符库，服务器可以通过以下方式，从该可修改字符对应的预置修改字符库中，选出用于取代该可修改字符的关键字符：服务器可以按照预设顺序，排列可修改字符对应的预置修改字符库中各对比字符代码各自对应的可平替置信度，得到可平替置信度量表。然后，针对该可平替置信度量表中的每个可平替置信度，将该可平替置信度与可平替置信度量表中位于该可平替置信度前的各可平替置信度求和，得到该可平替置信度对应的综合置信度；并对该综合置信度进行标准化操作，得到该可平替置信度对应的对比综合置信度。进而，服务器可以基于随机生成的相似度参考值，在可平替置信度量表中各可平替置信度各自对应的对比综合置信度中，选取出目标综合置信度；并确定该目标综合置信度对应的可平替置信度对应的对比字符代码，作为用于取代可修改字符的关键字符。假设服务器通过上述处理，得到可修改字符对应的可平替置信度量表包括Q1、Q2、……、Qk，这些可平替置信度分别对应于预置修改字符X1、X2、……、Xk。此时，服务器可以针对该可平替置信度量表中的每个可平替置信度进行求和处理；即对于可平替置信度Q1，由于其位于可平替置信度量表中的第一位，因此其对应的综合置信度即为其本身Q1；对于可平替置信度Q2，服务器可以将其与可平替置信度量表中位于其之前的各可平替置信度求和起来，得到Q1+Q2，作为可平替置信度Q2对应的综合置信度；对于可平替置信度Q3，服务器可以将其与可平替置信度量表中位于其之前的各可平替置信度求和起来，得到Q1+Q2+Q3，作为可平替置信度Q3对应的综合置信度；以此类推，对于可平替置信度Qk，服务器将计算得到作为可平替置信度Qk对应的综合置信度。进而，服务器可以对各可平替置信度各自对应的综合置信度进行标准化操作，得到各可平替置信度各自对应的对比综合置信度；示例性的，对于可平替置信度Q1对应的综合置信度，服务器可以计算作为其对应的对比综合置信度，对于可平替置信度Q2对应的综合置信度，服务器可以计算作为其对应的对比综合置信度，对于可平替置信度Q3对应的综合置信度，服务器可以计算作为其对应的对比综合置信度，以此类推，可平替置信度Qk对应的对比综合置信度等于1。如此，服务器针对每个可平替置信度，将其自身与可平替置信度量表中位于其之前的各可平替置信度求和，得到对应的综合置信度，并利用所有可平替置信度的求和值对每个可平替置信度对应的综合置信度进行标准化操作，得到每个可平替置信度对应的对比综合置信度。按照各可平替置信度各自在可平替置信度量表中的排列位置，相应地排列各可平替置信度各自对应的对比综合置信度，将得到由小到大排列的对比综合置信度队列，并且在该对比综合置信度队列中，排列位置靠前的对比综合置信度对应的对比字符代码与可修改字符之间的可平替度更高，排列位置靠后的对比综合置信度对应的对比字符代码与可修改字符之间的可平替度更低。基于如此排列方式的对比综合置信度序列选取用于取代可修改字符的关键字符，可以更好地同时将字符代码的相似性以及字符代码选取的随机性，融入关键字符的选取过程中，使得所选取的关键字符与可修改字符之间的关系，更符合模型训练的需求，更有利于所训练的进程分配指示检测模型学习相关知识。进而，服务器可以随机一个生成0到1的实数，作为相似度参考值；并基于该相似度参考值，在可平替置信度量表中各可平替置信度各自对应的对比综合置信度中，选出目标对比综合置信度，并确定该目标对比综合置信度对应的可平替置信度对应的对比字符代码，作为关键字符。例如，假设可平替置信度量表中各可平替置信度各自对应的对比综合置信度分别为0.5、0.8、0.9、0.95、1.0，服务器此时随机生成的相似度参考值为0.91，在此情况下，服务器可以在各对比综合置信度中找出大于该相似度参考值的、最小的对比综合置信度，作为目标对比综合置信度，由于在上述各对比综合置信度中，0.95是大于相似度参考值的最小的对比综合置信度，因此可以确定0.95为目标对比综合置信度，进而可以确定0.95对应的可平替置信度对应的对比字符代码为关键字符。如此，随机生成相似度参考值，基于该相似度参考值选择关键字符，可以更好地实现关键字符选取的随机性，即保证所选取的关键字符兼具相似性和随机性，该种关键字符对于进程分配指示检测模型的训练来说更有价值，有助于使所训练的进程分配指示检测模型更好地学习相关知识。应理解，在实际应用中，预置修改字符库中可能包括大量的预置修改字符，相应地通过上述方式确定的对比综合置信度的数量也是巨大的，此时为了提高关键字符的查找效率，可以使用python的bisect包中的二分查找工具，查找目标对比综合置信度。如此，通过上述方式在可修改字符对应的预置修改字符库中查找到的关键字符，兼顾了模型训练所需要的随机性和相似性，相应地提高了所生成的模型指示训练数据的质量。需要说明的是，上述关键指示字符串码是将初始指示字符串码中的可修改字符取代为关键字符后得到的指示字符串码。S403：将所述关键指示字符串码及其对应的训练标记作为指示训练数据；所述训练标记包括所述关键指示字符串码中各字符代码各自对应的标记，所述标记用于表征其对应的字符代码是否被取代过。服务器将初始指示字符串码中的可修改字符取代为对应的关键字符，得到关键指示字符串码后，可以获取该关键指示字符串码对应的训练标记，该训练标记包括该关键指示字符串码中各字符代码各自对应的标记，该标记能够相应地反映其对应的字符代码是否被取代过。服务器可以利用目标字符代码机器对应的训练标记，组成用于训练进程分配指示检测模型的指示训练数据。在实际应用中，服务器还可以在关键指示字符串码的前后分别加上特殊字符和，并针对特殊字符配置用于表征其未被取代过的标记，进而，利用包括有上述特殊字符的关键指示字符串码、以及包括有特殊字符对应的标记和各字符代码各自对应的标记的训练标记，组成用于训练进程分配指示检测模型的指示训练数据。可选的，在本申请实施例中，为了使所训练的进程分配指示检测模型能够学习到更丰富的知识，服务器还可以进一步选择对于关键指示字符串码的处理模式，并基于该处理模式对关键指示字符串码做进一步的处理，以根据处理后的关键指示字符串码，生成用于训练进程分配指示检测模型的指示训练数据。具体的，服务器可以在待定构建策略库中，针对关键指示字符串码选择目标构建策略；上述待定构建策略库包括第一维度构建策略、第二维度构建策略以及第三维度构建策略，其中，第一维度构建策略用于使指示字符串码中各字符代码均为第一字符数量字符代码，第二维度构建策略用于使指示字符串码中各字符代码均为第二字符数量字符代码，第三维度构建策略用于使指示字符串码中同时包括第一字符数量字符代码和第二字符数量字符代码。然后，服务器可以基于所选择的目标构建策略处理关键指示字符串码，得到目标训练指示字符串码。相应地，服务器可以将该目标训练指示字符串码及其对应的训练标记，作为用于训练进程分配指示检测模型的指示训练数据，该训练标记包括目标训练指示字符串码中各字符代码各自对应的标记，该标记用于表征其对应的字符代码是否被取代过。示例性的，服务器可以预先设置三种可供选择的不同粒度的处理模式，这三种处理模式可以使所处理的指示字符串码中的字符代码呈现不同的粒度。具体的，第一维度构建策略可以使所处理的指示字符串码中的各字符代码均为第一字符数量字符代码，该第一字符数量字符代码可以理解为字符数量较多的字符代码；第二维度构建策略可以使所处理的指示字符串码中的各字符代码均为第二字符数量字符代码，该第二字符数量字符代码可以理解为字符数量较少的字符代码；第三维度构建策略可以使所处理的指示字符串码同时包括第一字符数量字符代码和第二字符数量字符代码，即同时包括字符数量较多以及较少的字符代码。此外，服务器还可以针对这三种处理模式分别设置对应的选择概率，例如，针对第一维度构建策略、第二维度构建策略和第三维度构建策略，分别设置80%、10%和10%的选择概率，即服务器在选择处理模式时，存在80%的概率选择第一维度构建策略，存在10%的概率选择第二维度构建策略，存在10%的概率选择第三维度构建策略。对关键指示字符串码进行处理时，服务器可以基于第一维度构建策略、第二维度构建策略和第三维度构建策略各自对应的选择概率，从第一维度构建策略、第二维度构建策略和第三维度构建策略中，选择用于处理该关键指示字符串码的目标构建策略。当所选择的目标构建策略为第一维度构建策略时，服务器可以直接将关键指示字符串码，作为目标训练指示字符串码。应理解，由于关键指示字符串码是将初始指示字符串码中的可修改字符进行取代处理得到的，因此，该关键指示字符串码中各字符代码的粒度应当与初始指示字符串码中各字符代码的粒度一致；通常情况下，服务器切割处理初始训练指示数据时，均以分词或短语为单位切割该初始训练指示数据，即切割得到的初始指示字符串码中的各字符代码通常为粗粒度的分词或短语；基于此，当服务器针对关键指示字符串码选择的目标构建策略为第一维度构建策略时，服务器可以直接保留该关键指示字符串码中各字符代码的粒度，即直接将该关键指示字符串码作为目标训练指示字符串码即可。当所选择的目标构建策略为第二维度构建策略时，服务器可以针对关键指示字符串码中的每个字符代码进行细化切割处理，得到每个字符代码对应的子字符代码；进而，利用关键指示字符串码中各字符代码各自对应的子字符代码，组成目标训练指示字符串码。对于该目标训练指示字符串码，其对应的训练标记中包括其中各子字符代码各自对应的标记，该子字符代码对应的标记用于表征该子字符代码所属的字符代码是否被取代过。当所选择的目标构建策略为第三维度构建策略时，服务器可以在关键指示字符串码中确定待切割字符代码和不切割字符代码；并对待切割字符代码进行细化切割处理，得到该待切割字符代码对应的子字符代码。进而，利用关键指示字符串码中各待切割字符代码各自对应的子字符代码、以及各不切割字符代码，组成目标训练指示字符串码。具体的，针对第三维度构建策略，服务器可以预先设置指示字符串码中待切割字符代码和不切割字符代码各自的分布比例，进而，基于该分布比例，针对关键指示字符串码中各字符代码随机确定其属于待切割字符代码，还是属于不切割字符代码。对于待切割字符代码，服务器可以采用第二维度构建策略下的字符代码切割方式，将该待切割字符代码切割成字符数量较少的子字符代码；对于不切割字符代码，服务器可以直接保留该不切割字符代码本身。进而，服务器可以利用各待切割字符代码各自对应的子字符代码、以及各不切割字符代码，组成目标训练指示字符串码。对于该目标训练指示字符串码，其对应的训练标记中包括各待切割字符代码中各子字符代码各自对应的标记、以及各不切割字符代码各自对应的标记；其中，待切割字符代码中的子字符代码对应的标记，用于表征该子字符代码所属的待切割字符代码是否被取代过，不切割字符代码对应的标记用于表征该不切割字符代码本身是否被取代过。如此，采用不同粒度的处理模式，对关键指示字符串码中的字符代码做进一步处理，得到目标训练指示字符串码，使得所产生的目标训练指示字符串码中的字符代码粒度更丰富，基于该目标训练指示字符串码训练进程分配指示检测模型，可以使该进程分配指示检测模型学习到不同粒度的指示关联关系，即使得该进程分配指示检测模型可以学习到更丰富的关联关系，有助于提高该进程分配指示检测模型的模型性能。S404：基于所述指示训练数据训练进程分配指示检测模型；所述进程分配指示检测模型用于针对输入的指示字符串码预测其中各字符代码是否被取代过。服务器通过上述方式生成出指示训练数据后，可以利用所生成的指示训练数据，对所需训练的进程分配指示检测模型进行训练。具体训练该进程分配指示检测模型时，可以根据指示训练数据中的关键指示字符串码生成训练初始参量，然后将该训练初始参量输入该进程分配指示检测模型，该进程分配指示检测模型通过对该训练初始参量进行分析处理，将相应地输出该关键指示字符串码中各字符代码各自对应的输出结果，该输出结果用于表征进程分配指示检测模型所预测的该字符代码是否被取代过。具体训练上述进程分配指示检测模型时，服务器可以根据关键指示字符串码中各字符代码各自对应的字符特征和字符排序特征，生成训练初始参量；然后，通过所要训练的进程分配指示检测模型，根据该训练初始参量，确定该关键指示字符串码中各字符代码各自对应的输出结果。进而，根据关键指示字符串码中各字符代码各自对应的标记和输出结果，生成目标损失函数；并基于该目标损失函数，调整该进程分配指示检测模型。示例性的，假设关键指示字符串码中包括的各字符代码分别为X2、X7、X3、X8、X54和X66，这些字符代码分别是对比字符代码库中编号为2、7、3、8、54和66的对比字符代码，由于服务器训练进程分配指示检测模型之前，会预先针对对比字符代码库中的各对比字符代码确定其对应的字符特征，因此，服务器此时可以直接获取X2、X7、X3、X8、X54和X66各自的字符特征，即获取N2、N7、N3、N8、N54和N66。对于关键指示字符串码中的每个字符代码，服务器还需要根据该字符代码在关键指示字符串码中所处的位置，确定该字符代码对应的字符排序特征，例如，对于字符代码X2、X7、X3、X8、X54和X66，其各自对应的字符排序特征分别为Y1、Y2、Y3、Y4、Y5和Y6。通常情况下，字符代码的字符特征和字符排序特征具有相同的维度，基于此，服务器可以将Y1+N2、Y2+N7、Y3+N3、Y4+N8、Y5+N54和Y6+N66作为训练初始参量，此处的“+”表示在相同维度上进行数值相加处理。需要说明的是，在服务器后续采用第二维度构建策略或第三维度构建策略，对关键指示字符串码做进一步处理的情况下，所生成的目标训练指示字符串码中包括的子字符代码，可能无法通过上述方式确定其对应的字符特征，原因在于这种子字符代码不属于对比字符代码库，相应地服务器此前并未生成该子字符代码对应的字符特征。在这种情况下，服务器可以针对该种子字符代码配置对应的初始字符特征，并在模型训练的过程中，对该子字符代码对应的初始字符特征不断地更新，以在模型训练的过程中同步学习该子字符代码对应的字符特征。将上述训练初始参量输入所训练的进程分配指示检测模型中后，该进程分配指示检测模型可以根据该训练初始参量，预测关键指示字符串码中对应的字符代码是否被取代过。最终，服务器可以将最小化该目标损失函数为目标，调整进程分配指示检测模型，达到训练该进程分配指示检测模型的目的。S405，在训练完成的所述进程分配指示检测模型输出所述进程分配指示对应的字符代码未被取代过的情况下，执行S401。可以通过上述方式，基于不同的指示训练数据对进程分配指示检测模型进行多轮迭代训练，直至该进程分配指示检测模型满足训练结束条件为止，此时即可得到可投入实际应用的进程分配指示检测模型。此处的训练结束条件例如可以为进程分配指示检测模型的预测准确率达到预设阈值，又例如可以为进程分配指示检测模型的预测准确率不再有明显提高，再例如可以为进程分配指示检测模型的迭代训练次数达到预设训练次数，本申请在此不对该训练结束条件做任何限定。当然，在实际应用中，还可以选择其它结构的神经网络模型，作为所要训练的进程分配指示检测模型，本申请在此不对该进程分配指示检测模型的结构做任何限定。本申请实施例提供的模型训练方法，一方面，训练进程分配指示检测模型时，使该进程分配指示检测模型预测指示字符串码中各字符代码是否被取代过，可以使该进程分配指示检测模型同时学习指示字符串码中所有字符代码的关联关系，有利于更快地调整该进程分配指示检测模型，从而提升模型训练速度。另一方面，训练进程分配指示检测模型前，对初始指示字符串码中的字符代码进行取代处理得到关键指示字符串码，并标注关键指示字符串码中的各字符代码是否被取代过，在一定程度上简化了所训练的进程分配指示检测模型所需执行的任务，使进程分配指示检测模型具有更简单的模型结构、更少，也有利于提升模型训练速度。请结合参阅图2，本发明实施例提供一种基于多主机负载数据分析的进程优化系统110，该系统包括：响应模块1101，用于响应于待处理进程触发的进程分配指示，基于待定主机设备对应的负载状态，从待定主机设备集群中选取至少一个目标主机设备。获取模块1102，用于所述待处理进程的任务信息，所述进程分配指示相关的指示内容，以及各个目标主机设备对应的主机设备信息，其中，所述主机设备信息至少包括：基于负载裕量与当前负载中的至少一种确定的，用于表征主机设备负载状态的设备负载特征。匹配模块1103，用于分别将所述各个目标主机设备对应的主机设备信息，所述任务信息以及所述指示内容，输入预置主机设备选取模型；基于所述主机设备选取模型，分别针对各个目标主机设备进行二维设备性能特征融合和多维设备性能特征融合，基于融合性能特征确定所述各个目标主机设备对应的匹配置信度；基于所述各个目标主机设备各自对应的匹配置信度，确定所述各个目标主机设备针对所述待处理进程的匹配列表；其中，所述主机设备选取模型是基于包含不同训练任务进程相关进程执行主机的训练进程主机对训练得到的，所述训练进程主机对中的进程执行主机至少包括：负载状态在预置可行负载范围内的进程执行主机，各个进程执行主机对应有用于表征所述进程执行主机对应的负载状态的大小以及所述进程执行主机是否被选择的表征系数。需要说明的是，前述基于多主机负载数据分析的进程优化系统110的实现原理可以参考前述基于多主机负载数据分析的进程优化方法的实现原理，在此不再赘述。本发明实施例提供一种计算机设备100，计算机设备100包括处理器及存储有计算机指令的非易失性存储器，计算机指令被处理器执行时，计算机设备100执行前述的基于多主机负载数据分析的进程优化系统110。如图3所示，图3为本发明实施例提供的计算机设备100的结构框图。计算机设备100包括基于多主机负载数据分析的进程优化系统110、存储器111、处理器112及通信单元113。本发明实施例提供一种可读存储介质，可读存储介质包括计算机程序，计算机程序运行时控制可读存储介质所在计算机设备执行前述的基于多主机负载数据分析的进程优化方法。出于说明目的，前面的描述是参考具体实施例而进行的。但是，上述说明性论述并不打算穷举或将本公开局限于所公开的精确形式。根据上述教导，众多修改和变化都是可行的。选择并描述这些实施例是为了最佳地说明本公开的原理及其实际应用，从而使本领域技术人员最佳地利用本公开，并利用具有不同修改的各种实施例以适于预期的特定应用。出于说明目的，前面的描述是参考具体实施例而进行的。但是，上述说明性论述并不打算穷举或将本公开局限于所公开的精确形式。根据上述教导，众多修改和变化都是可行的。选择并描述这些实施例是为了最佳地说明本公开的原理及其实际应用，从而使本领域技术人员最佳地利用本公开，并利用具有不同修改的各种实施例以适于预期的特定应用。
