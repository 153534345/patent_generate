标题title
FPGA重复单元之间的级联通信
摘要abst
FPGA的重复单元提供存储器、算术功能或两者。重复单元的多个实例之间的直接连接是可用的，从而允许将多个重复单元视为更大的存储器或算术电路。通过使用被称为级联输入和输出的这些连接，算术电路和存储器电路的输入和输出带宽增加，操作数大小增加，或两者都增加。通过使用级联连接，多个重复单元可以一起用作单个较大重复单元。因此，需要不同大小的存储器、对不同大小的操作数操作的算术功能或两者的实现方式可以使用相同的FPGA，而没有额外的编程或浪费。使用级联通信，当需要大存储器时使用更多的重复单元，而当需要小存储器时使用更少的重复单元，并且避免了浪费。
权利要求书clms
1.一种电路，包括：现场可编程门阵列的第一重复单元的第一算术电路，所述第一算术电路：从所述FPGA的连接结构接收第一输入集合；从所述FPGA的所述连接结构接收第二输入集合；基于所述第一输入集合的第一子集和所述第二输入集合的第二子集生成第一结果；以及提供所述第一输入集合作为所述第一重复单元的级联输出；以及所述FPGA的第二重复单元的第二算术电路，所述第二算术电路：直接从所述FPGA的所述第一重复单元的所述级联输出接收所述第一输入集合；以及基于所述第一输入集合的所述第一子集生成第二结果。2.根据权利要求1所述的电路，其中，所述FPGA的所述第二算术电路：从所述FPGA的所述连接结构接收第三输入集合；以及生成所述第二结果还基于所述第三输入集合的第三子集。3.根据权利要求2所述的电路，其中：所述电路还包括所述FPGA的所述第二重复单元的存储器电路；响应于第一配置信号，所述第二算术电路被配置成基于所述第一输入集合的所述第一子集和所述第三输入集合的所述第三子集生成所述第二结果；并且响应于第二配置信号，所述第二算术电路被配置成对所述第三输入集合和存储在所述存储器电路中的数据执行操作。4.根据权利要求1所述的电路，其中：基于所述第一输入集合的所述第一子集生成所述第二结果包括：提供所述第二结果作为所述FPGA的所述第二重复单元的第二级联输出；并且所述第二结果是所述FPGA的所述第一重复单元的所述级联输出。5.根据权利要求1所述的电路，其中：响应于配置信号，所述第二算术电路被配置成从所述FPGA的所述第一重复单元的所述级联输出接收所述第一输入集合。6.根据权利要求1所述的电路，其中，所述电路还包括：所述FPGA的所述第二重复单元的存储器电路，所述存储器电路存储从直接来自所述第一重复单元的第二级联输出的第四输入集合接收的数据。7.根据权利要求6所述的电路，其中：所述FPGA的所述第二重复单元的所述存储器电路同时执行第一操作和第二操作，所述第一操作包括将第一数据提供给所述FPGA的所述第二重复单元的所述第二算术电路，所述第二操作包括存储从直接来自所述第一重复单元的所述第二级联输出的所述第四输入集合接收的所述数据。8.根据权利要求6所述的电路，其中，所述存储器电路经由第三级联输出将第一输出集合提供给所述FPGA的第三重复单元。9.根据权利要求6所述的电路，其中：所述第一重复单元的所述第二级联输出是所述第一重复单元与所述第二重复单元之间的双向级联通信通道。10.根据权利要求1所述的电路，其中，所述第二算术电路还经由第二级联输出将第一输出集合提供给所述FPGA的第三重复单元。11.根据权利要求1所述的电路，其中，所述电路还包括：所述FPGA的所述第一重复单元的存储器电路，所述存储器电路存储所述第一输入集合的第三子集。12.根据权利要求11所述的电路，其中：所述FPGA的所述第一重复单元的所述存储器电路具有块地址；所述第一输入集合包括输入块地址和掩码；并且存储所述第一输入集合的所述第三子集包括：基于所述FPGA的所述第一重复单元的所述存储器电路的所述块地址和所述掩码生成经修改的块地址；基于与所述输入块地址匹配的所述经修改的块地址来存储所述第一输入集合的所述第三子集。13.根据权利要求1所述的电路，其中，所述第二算术电路还经由第二级联输出将所述第一输入集合提供给所述FPGA的第三重复单元。14.一种方法，包括：由现场可编程门阵列的第一重复单元的第一算术电路从所述FPGA的连接结构接收第一输入集合；由所述第一算术电路从所述FPGA的所述连接结构接收第二输入集合；由所述第一算术电路基于所述第一输入集合的第一子集和所述第二输入集合的第二子集生成第一结果；由所述FPGA的所述第一重复单元提供所述第一输入集合作为级联输出；由所述FPGA的第二重复单元的第二算术电路直接从所述FPGA的所述第一重复单元的所述级联输出接收所述第一输入集合；以及由所述第二算术电路基于所述第一输入集合的所述第一子集生成第二结果。15.根据权利要求14所述的方法，还包括：由所述FPGA的所述第二重复单元的所述第二算术电路从所述FPGA的所述连接结构接收第三输入集合；并且其中，生成所述第二结果还基于所述第三输入集合的第三子集。16.根据权利要求14所述的方法，其中：响应于配置信号，所述第二算术电路被配置成从所述FPGA的所述第一重复单元的所述级联输出接收所述第一输入集合。17.根据权利要求16所述的方法，还包括：由所述FPGA的所述第二重复单元的存储器电路存储从直接来自所述第一重复单元的第二级联输出的第四输入集合接收的数据。18.一种包含指令的机器可读存储介质，所述指令在由一个或更多个处理器执行时使所述一个或更多个处理器控制现场可编程门阵列的配置，所述FPGA包括：所述FPGA的第一重复单元的第一算术电路，所述第一算术电路：从所述FPGA的连接结构接收第一输入集合；从所述FPGA的所述连接结构接收第二输入集合；基于所述第一输入集合的第一子集和所述第二输入集合的第二子集生成第一结果；以及提供所述第一输入集合作为所述第一重复单元的级联输出；以及所述FPGA的第二重复单元的第二算术电路，所述第二算术电路：直接从所述FPGA的所述第一重复单元的所述级联输出接收所述第一输入集合；以及基于所述第一输入集合的所述第一子集生成第二结果。19.根据权利要求18所述的存储介质，其中，所述FPGA的所述第二算术电路：从所述FPGA的所述连接结构接收第三输入集合；以及生成所述第二结果还基于所述第三输入集合的第三子集。20.根据权利要求18所述的存储介质，其中：响应于配置信号，所述第二算术电路被配置成从所述FPGA的所述第一重复单元的所述级联输出接收所述第一输入集合。
说明书desc
优先权要求本申请要求于2019年10月18日提交的美国专利申请第16/656,685号的优先权的权益，该美国专利申请的内容通过引用整体并入本文。背景技术现场可编程门阵列包括与可重配置路由网络互连的可编程逻辑块的阵列。逻辑块在类型上不同，并且通常包括可重配置逻辑、存储器以及算术逻辑。FPGA重复单元使用可重配置路由网络进行通信，该网络的带宽低于FPGA重复单元的处理带宽。可重配置路由网络可以被编程为以许多可能的配置之一将逻辑块连接在一起。这种可编程性是有代价的。针对给定区域，与算术逻辑块相比，路由网络通常密度较小并且支持较少的数据。因此，算术逻辑块的实际大小/宽度被路由网络所提供的可用输入和输出的数量限制。尽管可以通过级联较小的算术逻辑块来实现较大的算术操作，但是这种方法引入了不必要的延迟，并且显著降低了应用的总逻辑密度。附图说明在附图的图中通过示例而非限制的方式示出了所公开的技术的一些实施方式。图1是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的FPGA的重复单元的高级别示意图。图2是根据一些示例实施方式的接收级联输入并提供级联输出的算术电路的高级别示意图。图3是根据一些示例实施方式的接收级联输入并提供级联输出的存储器电路的高级别示意图。图4是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分的示意图。图5是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分的示意图。图6是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分的示意图。图7是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分的示意图。图8是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分的示意图。图9是示出根据一些示例实施方式的使用级联通信的FPGA的重复单元之间的连接的高级别示意图。图10是示出根据本发明的各个实施方式，由使用级联通信的FPGA的重复单元执行的方法的操作的流程图。图11是示出了根据一些示例实施方式的系统的部件的框图，该系统用于控制本文所描述的电路的制造。具体实施方式现在将描述用于FPGA重复单元之间的级联通信的示例方法、系统和电路。在以下描述中，阐述了具有示例特定细节的多个示例以提供对示例实施方式的理解。然而，对于本领域的普通技术人员来说明显的是，可以在没有这些示例特定细节的情况下和/或在具有与此处给出的细节不同的组合的情况下实践这些示例。因此，给出具体实施方式是出于简化说明的目的而非限制。FPGA的重复单元提供存储器、算术功能或两者。重复单元的多个实例之间的直接连接也是可用的，从而允许将多个重复单元视为更大的存储器或算术电路。通过使用被称为级联输入和输出的这些连接，算术电路和存储器电路的输入和输出带宽增加，操作数大小也增加，或两者都增加。通过使用级联连接，多个重复单元可以一起用作单个较大重复单元。因此，需要不同大小的存储器、对不同大小的操作数操作的算术功能或两者的实现方式可以使用相同的FPGA，而没有额外的编程或浪费。例如，使用大存储器的FPGA重复单元可以服务于需要大存储器或小存储器的应用，但是当仅需要小存储器时浪费了过量的存储器。使用级联通信，当需要大存储器时使用更多的重复单元，而当需要小存储器时使用更少的重复单元，并且避免了浪费。图1是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的FPGA的重复单元100的高级别示意图。还示出了所连接的路由105和路由110。重复单元100融合了存储器和算术电路，并且包括机器学习处理器115、块随机存取存储器120以及逻辑随机存取存储器125。MLP 115包括浮点乘加器130和整数MAC135。BRAM 120包括存储器140。重复单元100经由路由105和路由110连接至其他重复单元。另外地，重复单元100经由操作数级联输入145和存储器级联输入155直接连接至第一FPGA重复单元，而不使用FPGA的路由连接。在一些示例实施方式中，重复单元100还经由操作数级联输出160和存储器级联输出165直接连接至第二FPGA重复单元，而不使用FPGA的路由。级联连接可以是单向的或双向的。在第一操作模式下，MAC 130和135从路由105、LRAM 125、存储器140和操作数级联输入145中的一个或更多个接收输入。由MAC 130和135将输出提供给路由105、操作数级联输出160、LRAM 125或其任何合适的组合。存储器140从路由110、存储器级联输入155或两者接收输入。由存储器140将输出提供给路由110、存储器级联输出165或两者。在第一操作模式下，MAC 130和135不从路由110接收输入，并且存储器140不从路由105接收输入。因此，来自FPGA的路由结构的输入在MLP 115与BRAM 120之间进行分配，并且MLP 115在重复单元100内访问来自BRAM 120的数据，而不经过交换结构。可以布置经由级联连接通信的任何数量的重复单元100以有效地创建较大的重复单元。重复单元集中的每个重复单元可以被配置成提供接收到的级联输入作为级联输出，或生成结果以作为级联输出提供。例如，重复单元集中的第一重复单元可以经由路由105接收数据并且经由操作数级联输出160将数据提供给第二重复单元。第二重复单元及后续重复单元可以通过将数据传递至其自身的操作数级联输出160来提供未经修改的数据。可替选地，每个重复单元的级联输出可以受该重复单元执行的操作影响。典型的MAC将两个乘积相乘并且将结果添加至累加器。在一些示例实施方式中，MAC 130和135通过允许将部分乘积相加并且在被添加至累加器之前将其作为输出提供，来提供附加功能。因此，单独部分乘积、针对当前乘法的部分乘积之和、以及跨多个乘法循环的累加结果都可以通过使用MAC 130和135来访问。在第二操作模式下，MAC 130和135从路由105、路由110、LRAM 125和操作数级联输入145中的一个或更多个接收输入。由MAC 130和135将输出提供给路由105、路由110、操作数级联输出160、LRAM 125或其任何合适的组合。在第二操作模式下，存储器140不从路由105或路由110接收输入。因此，在第二操作模式下，重复单元100作为专用MLP操作，其中，MLP 115具有对FPGA的路由结构的完全访问，并且存储器140被有效地禁用。尽管如此，LRAM125可以在第二操作模式下使用一些路由连接。在第三操作模式下，存储器140从路由105、路由110、存储器级联输入155或其任何合适的组合接收输入。由存储器140将输出提供给路由105、路由110、存储器级联输出165或其任何合适的组合。在第三操作模式下，MLP 115不从路由105或路由110接收输入。因此，在第三操作模式下，重复单元100作为专用BRAM操作，其中，BRAM 120具有对FPGA的路由结构的完全访问，并且MLP 115被有效地禁用。如图1所示，LRAM 125连接至路由105和路由110。在一些示例实施方式中，在所有操作模式下都保持针对LRAM 125的路由连接。为了将存储在LRAM 125中的数据用于MLP115所进行的计算，控制信号识别要读取的地址并且使用在LRAM 125中该地址处的数据。经由重复单元内连接将数据从LRAM 125提供给MLP 115，而不使用路由105或路由110。在LRAM 125和存储器140与浮点MAC 130和整数MAC 135之间示出的重复单元内连接以比路由105和110更高的带宽操作。在各种示例实施方式中，重复单元内数据访问速度是比路由连接访问速度快至少10倍、50倍、100倍或500倍。LRAM 125与BRAM 120之间的差异通常是实现细节，使得BRAM 120类似于高速缓存式存储器，并且LRAM 125类似于寄存器文件。然而，这些并不是具体的规则，并且其他类型的存储器可以用于LRAM 125和BRAM 120。在一些示例实施方式中，BRAM 120具有比LRAM 125更大的存储容量并且针对面积进行了优化，并且LRAM 125针对延迟进行了优化。在另外的示例实施方式中，LRAM 125存储用于矩阵乘法的部分乘积之和的工作集。FPGA重复单元100接收时钟输入以控制执行操作的速率。可以将频率乘法器应用于输入时钟频率以改变操作速率。在一些示例实施方式中，以两倍的时钟速率运行FPGA重复单元100允许通过在单个时钟周期中使用MAC 130或MAC 135两次来执行两倍的计算。例如，在128位输入模式下，可以提供足够的输入以在每个时钟周期执行四次计算，但是MAC硬件仅足以执行两次计算。因此，通过在两个内部时钟周期中的每一个上执行两次计算，在单个外部时钟周期上执行了四次计算，从而允许FPGA重复单元100与包括两倍的MAC的可替选设计一样有效地执行。作为使用频率乘法器的优点的另一个示例，可以更有效地执行再使用至少一些输入操作数的操作。例如，当来自路由105的权重或系数对于多个操作相同时，可以使用较高频率的内部时钟和在单个外部时钟周期内执行的多个操作来更新其他系数。该优点的一个实际应用是在批量大小等于时钟乘法器的机器学习中。多个操作的结果可以累加在一起，以在每个外部时钟周期生成至路由105的单个输出，如果存在足够的输出引脚则并行地输出至路由105，或存储在BRAM 120中。如在图1中可以看见的，操作数级联输出160被配置成提供以下中的任何一个：经由路由105接收到的数据，在操作数级联输入145处接收到的数据、来自MAC 130的结果和来自MAC 135的结果。因此，当通过将一个重复单元的操作数级联输出160连接至下一个重复单元的操作数级联输入145来连接多个FPGA重复单元100时，来自路由105的单个输入可以经由级联连接被传输至剩余的FPGA重复单元100。与其中路由105资源将用于多个FPGA重复单元100中的每一个的现有方法相比，节省了大量的路由资源。实际上，向多个MLP 115提供相同的操作数在执行矩阵乘法操作中是有用的，特别是对于机器学习应用。类似地，存储器级联输出165被配置成提供以下中的任何一个：经由路由110接收到的数据、在存储器级联输入155处接收到的数据，以及从存储器140读取的数据。另外地，存储器级联连接是双向的。因此，虽然两个级联连接被标记为“输入”和“输出”，但是数据可以在任一方向上流动。因此，可以经由级联连接通过多个FPGA重复单元100在一个方向上传播地址，并且可以在另一个方向上传播数据结果。与MLP 115一样，针对BRAM 120使用级联连接节省了路由资源。通过向重复单元100提供多个输入路径，允许同时执行在现有技术设计中必须串行执行的一些操作。例如，可以使用路由105或110来提供地址输入。MAC 130或MAC 135可以使用该地址从存储器140检索第一数据并对第一数据执行操作。同时，可以使用存储器级联输入155提供第二地址输入和第二数据。当MAC 130或MAC 135正在访问第一数据时，存储器140将第二数据存储在第二地址处。因此，当MAC 130或MAC 135对数据的当前工作集进行操作时，数据的下一个工作集被加载至BRAM中。与一次仅可以接收单个地址并且必须暂停用于计算的数据访问以载入新数据的重复单元相比，这实现了更大的吞吐量。图2是根据一些示例实施方式的接收级联输入并提供级联输出的算术电路200的高级别示意图。在一些示例实施方式中，算术电路200是MLP 115。算术电路200从FPGA重复单元的存储器部分接收重复单元内输入，从FPGA的路由结构接收路由结构输入，从FPGA的路由结构接收控制信号，以及从另一个FPGA重复单元接收操作数级联输入而不使用路由结构。在各种示例实施方式中，存在更多或更少的输入。算术电路200将重复单元内输出提供给FPGA重复单元的存储器部分，将路由结构输出提供给FPGA的路由结构，以及将操作数级联输出提供给另一个FPGA重复单元而不使用路由结构。在各种示例实施方式中，存在更多或更少的输出。通常，从第一FPGA重复单元接收操作数级联输入，算术电路200是第二FPGA重复单元的部分，并且操作数级联输出被提供给第三FPGA重复单元。图3是根据一些示例实施方式的接收级联输入并提供级联输出的存储器电路300的高级别示意图。在一些示例实施方式中，存储器电路300是BRAM 120。存储器电路300从FPGA重复单元的算术部分接收重复单元内输入，从FPGA的路由结构接收路由结构输入，从FPGA的路由结构接收控制信号，从第一FPGA重复单元接收存储器级联输入，以及从第二FPGA重复单元接收反向存储器级联输入。级联输入不使用路由结构。存储器级联输入可以包括控制信号以及数据信号。在各种示例实施方式中，存在更多或更少的输入。存储器电路300将重复单元内输出提供给FPGA重复单元的算术部分，将路由结构输出提供给FPGA的路由结构，将存储器级联输出提供给第二FPGA重复单元，以及将反向存储器级联输出提供给第一FPGA重复单元。在各种示例实施方式中，存在更多或更少的输出。图4是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分400的示意图。部分400包括：多路复用器410A、410B、410C和410D；寄存器420A、420B、420C和420D；位重映射逻辑430A、430B、430C和430D；以及1级延迟寄存器440。部分400接受针对两个乘法操作数A和B的输入，将操作数重映射为由算术电路的下一部分使用的格式，并且将经重映射的操作数提供给由下一部分使用的延迟寄存器。多路复用器410A从下述四个选项中选择B操作数的低位：MLP_DIN，经由路由结构105接收到的72位数据；REGFILE_DOUT，从重复单元100内的LRAM125接收到的72位数据；BRAM_DOUT，从重复单元100内的BRAM 120接收到的72位数据；以及FWDI_MULTB_L，从操作数级联输入145接收到的72位数据。多路复用器410B从下述八个选项中选择B操作数的高位：BRAM_DIN，经由路由结构110接收到的72位数据；REGFILE_DOUT，从重复单元100内的LRAM 125接收到的72位数据；BRAM_DOUT，从重复单元100内的BRAM 120接收到的72位数据；MLP_DIN；REGFILE_DOUT；BRAM_DOUT；以及FWDI_MULTB_L。因此，从来自路由结构105、路由结构110、LRAM 125、BRAM 120和操作数级联输入145中的一个或更多个的输入的组合来生成B操作数。由多路复用器410C从下述四个选项中选择A操作数的低位：MLP_DIN；REGFILE_DOUT；BRAM_DOUT；以及FWDI_MULTA_L，从操作数级联输入145接收到的72位数据。由多路复用器410D从下述八个选项中选择A操作数的高位：BRAM_DIN；MLP_DIN；REGFILE_DOUT；REGFILE_DOUT；FWDI_MULTA_L；BRAM_DOUT；BRAM_DOUT；以及FWDI_MULTA_H，从操作数级联输入145接收到的72位数据。因此，也从来自路由结构105、路由结构110、LRAM 125、BRAM 120和操作数级联输入145中的一个或更多个的输入的组合来生成A操作数。由多路复用器410A至410D选择的输入可选地存储在寄存器420A至420D中的对应寄存器中，寄存器420A至420D以下述形式将数据提供给操作数级联输出160：FWDO_MULTB_L，B操作数的低位；FWDO_MULTB_H，B操作数的高位；FWDO_MULTA_L，A操作数的低位；以及FWDO_MULTA_H，A操作数的高位。另外地，寄存器420A至420D中的每个寄存器被位重映射逻辑430A至430D中的对应位重映射逻辑访问。位重映射逻辑430A至430D中的每个位重映射逻辑基于乘法模式和字节选择模式输入来重映射输入。从位重映射逻辑430A至430D输出指数和符号位作为信号＜EXPA＞、＜SGNA＞、＜EXPB＞、＜SGNB＞、＜EXPC＞、＜SGNC＞、＜EXPD＞和＜SGND＞。经重映射的输入被提供给1级延迟寄存器440，以由算术电路的下一部分进行访问。由多路复用器410A至410D选择的输入由配置信号SEL_MULTB_L、SEL_MULTB_H、SEL_MULTA_L和SEL_MULTA_H控制。因此，算术电路被一个或更多个配置信号配置成从第一连接结构、第二连接结构、第一融合存储器、第二融合存储器、操作数级联输入或其任何合适的组合接收输入。作为示例，响应于第一配置信号，算术电路被配置成对经由路由结构接收到的数据以及在FPGA的重复单元内从第一存储器接收到的数据或BRAM_DOUT)执行操作。作为另一个示例，响应于第二配置信号，算术电路被配置成对经由路由结构接收到的数据以及在FPGA的重复单元内从第二存储器接收到的数据或REGFILE_DOUT)执行操作。在不同于部分500所使用的浮点格式的浮点模式下，位重映射逻辑430A至430D将输入转换成部分500所期望的格式。在示例中，部分500期望具有15位尾数、一位符号和8位指数的浮点值。在该示例中，多模式算术电路使用16位尾数、10位尾数、12位尾数、8位指数、6位指数和5位指数的各种组合来支持输入和输出。基于输入格式和部分500所期望的格式，位重映射逻辑430A至430D转换输入值。在该示例中，输入浮点格式的选择响应于模式选择输入。在一些示例实施方式中，位重映射逻辑430A至430D执行符号扩展。结果，小于算术块所接受的输入值的大小的操作数仅使用操作数所必需的路由资源进行路由，并且在由算术块使用之前由位重映射逻辑430A至430D进行符号扩展。与在路由之前执行符号扩展的设计相比，该设计节省了路由资源。整数算术逻辑块可以用于通过识别浮点操作数的指数之中的最高指数并且以指数差来右移其他操作数的尾数来对浮点操作数的尾数执行浮点操作。例如，考虑下表，示出了四个操作数。原始尾数原始指数调整后的尾数调整后的指数101010100001111101010100111100000010111111000100001100110011000110010100000011110100000011110100在调整之后，因为所有的指数都相等，因此操作数的尾数可以作为整数进行处理。这种浮点模式被称为块浮点，因为在所有被操作的数字中，以共同的指数值分组在一起。在上述示例中，注意前两个操作数的尾数用1填充，并且后两个操作数的尾数用0填充。这与负数的2进制补码表示一致。在无符号模式或有符号/幅度模式下，尾数的操作相应地通过填充0或插入0而不修改符号位来改变。图5是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分500的示意图。部分500包括：寄存器510A、510B、510C、510D、510E、510F、510G、510H、510I、510J、510K、510L、510M、510N、510O和510P；乘法器520A、520B、520C、520D、520E、520F、520G和520H；加法器530A、530B、530C、530D、550A、550B和560；多路复用器540A、540B、540C、540D和570；以及2级延迟寄存器580。寄存器510A至510P中的每个寄存器存储用于乘法器520A至520H之一的操作数的八位数据。乘法器520A至520H中的每个乘法器接受A操作数的八位和B操作数的八位。因此，部分500总共处理A操作数的64位和B操作数的64位。为了处理由部分400接收到的完整输入，部分500被复制，其中，部分500的每个实例处理一半的输入。在第一操作模式下，部分500被配置成确定八个8位乘法操作之和。通过根据需要进行符号扩展或用前导零进行填充，可以在第一操作模式下确定较少的乘法操作之和或八个较小的操作之和。在第一操作模式的第一变体中，乘法器520A至520H中的每一个是被配置成输出两个四位乘法之和的八位乘法器。在第一操作模式的第二变体中，乘法器520A至520H中的每一个是被配置成输出两个四位乘法的结果的八位乘法器。在第二操作模式下，部分500被配置成输出两个16位乘法操作之和。通过根据需要进行符号扩展或用前导零进行填充，可以在第二操作模式下确定单个乘法操作或两个较小操作之和。在第三操作模式下，使用额外的移位器和较宽的加法器来将与部分500的第二实例组合的部分500配置成确定单个32位乘法操作。通过根据需要进行符号扩展或用前导零进行填充，可以在第三操作模式下确定较小的乘法操作。在另外的操作模式下，除了乘法操作之和之外或代替乘法操作之和，可以在输出处提供一个或更多个单独的乘法结果。关于第一操作模式，八个乘法器520A至520H中的每个乘法器使用操作数A和B的不同部分作为输入来执行八位乘法。由加法器530A至530D对八个乘法的结果成对地进行求和。由加法器550A至550B使用多路复用器540A至540D控制)对四个加法结果成对地进行求和，以确定是直接取加法结果还是如所示出地进行移位。移位后的结果用于支持16位乘法。由加法器560对加法器550A至550B的两个结果进行求和。加法器560的结果是八个八位乘法之和，并且经由多路复用器570被提供给2级延迟寄存器580。关于第二操作模式，乘法器520A至520D与加法器530A、530B和550A结合一起确定第一16位乘法结果。乘法器520E至520H与加法器530C、530D和550B结合确定第二16位乘法结果。第一操作数大小的四个乘法器可以用于生成第二操作数大小的乘法结果，第二操作数大小是第一操作数大小的两倍。较大的操作数被分成高位和低位两部分，并且如下组织，其中，AH表示A操作数的高位部分，AL表示A操作数的低位部分，BH表示B操作数的高位部分，以及BL表示B操作数的低位部分。AH AL x BH BL＝AL x BL+AH x BL＜＜SIZE+BH x AL＜＜SIZE+AH x BH＜＜2x SIZE。由于使操作数的大小加倍使用原始大小的四个乘法器来以较大的大小执行一次乘法，所以当操作数的大小增加时，由算术电路执行的操作的数量减少。四个分量乘法结果中的每一个都是部分乘积。对部分乘积结果求和以生成最终乘法结果。因此，在第二操作模式下，乘法器520D将BL与AH相乘，而乘法器520C将BH与AL相乘。加法器530B将结果相加，并且来自加法器530B的结果被左移八位。乘法器520B将BH与AH相乘，并且结果被左移十六位。乘法器520A将BL与AL相乘。在结果通过加法器530A和550A之后，加法器550A的输出是16位乘法操作的结果。乘法器520E至520H和加法器530C、530D和550B被类似地配置成处理第二16位乘法操作。这两个操作的结果由加法器560相加，并经由多路复用器570被提供给2级延迟寄存器580。在一些示例实施方式中，部分500在第二操作模式下仅执行单个16位乘法。在这些实施方式中，由乘法器520E至520H和加法器530C、530D、550B和560生成的结果被忽略。相反，多路复用器570被配置成将来自加法器550A的包含单个16位乘法结果的输出提供给2级延迟寄存器580。在第三操作模式下，以类似于关于第二操作模式所描述的方式的方式使用额外的移位器和更宽的加法器对由部分500的两个实例提供的四个16位乘法操作进行组合，从而利用下文关于图6所论述的加法器630产生确定单个32位乘法的电路。尽管部分500被描述为对所选择的输入执行乘法操作，并然后对乘法操作的结果求和，但是也可以设想算术电路的其他配置。例如，来自寄存器510A至510P的输入可以被提供给如图所示的乘法器520A至520H，并且还可以被提供给一组加法器。针对每个乘法器/加法器对使用多路复用器，加法器530A至530D的输入被选择为乘法结果或加法结果。因此，基于控制多路复用器的配置信号，算术电路确定输入操作数之和或输入操作数的乘积之和。图6是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分600的示意图。部分600包括：图5的多路复用器570；以及来自部分500的副本的对应多路复用器610，所述部分500的副本处理输入A和B的高位半部分。多路复用器570和610的输出被提供给2级延迟寄存器620A和620B，每个为34位宽。至部分600的输入也是从1级延迟寄存器630A、630B、630C、630D、630E、630F、630G和630H接收的，其存储由图4的位重映射逻辑430A至430D生成的＜SGNA＞、＜SGNB＞、＜SGNC＞、＜SGND＞、＜EXPA＞、＜EXPB＞、＜EXPC＞和＜EXPD＞值。部分600还包括：加法器650；多路复用器640A、640B、640C、640D、640E、640F、640G、640H、660、680A和680B；乘法器670A和670B；以及3级延迟寄存器690。来自部分500及其副本的结果由加法器650相加。多路复用器660基于ADD0_15_BYPASS信号的值选择来自部分500的结果或来自两个部分的求和结果，并且将所选择的结果提供给乘法器670A和多路复用器680A。基于经由多路复用器640A至640D接收到的＜EXPA＞、＜EXPB＞、＜SGNA＞和＜SGNB＞值以及从多路复用器660接收到的值，乘法器670A生成24位浮点乘法结果。类似地，基于经由多路复用器640E至640H接收到的＜EXPC＞、＜EXPD＞、＜SGNC＞和＜SGND＞值以及从寄存器620B接收到的结果，乘法器670B生成第二24位浮点乘法结果。基于FPMULT_AB信号，多路复用器680A至680B输出由乘法器670A至670B生成的24位浮点结果或传递由寄存器620B和多路复用器660提供的结果。多路复用器680A至680B的输出被提供给3级延迟寄存器690。因此，在一种操作模式下，部分600的多路复用器680A至680B的输出是部分500及其副本部分的输出，绕过了加法器650和乘法器670A至670B。在第二操作模式下，多路复用器680A的输出是由部分500及其副本执行的所有乘法之和，并且多路复用器680B的输出是由部分500的副本执行的乘法之和。在第三操作模式下，多路复用器680A至680B的输出是部分500及其副本部分的输出的24位浮点版本。在第四操作模式下，多路复用器680A的输出是由部分500及其副本执行的所有乘法之和的24位浮点表示，并且多路复用器680B的输出是由部分500的副本执行的乘法之和的24位浮点表示。图7是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分700的示意图。部分700包括：图6的多路复用器680A；1级延迟寄存器710A、710B、710C和710D；多路复用器720A、720B、720C、720D、740A、740B、750A、750B、770和780；3级延迟寄存器730A和730B；加法器760A和760B；4级延迟寄存器790。部分700与上方块795之间的连接也在图7中示出。上方块795是指图8所示的算术电路的部分。多路复用器680A的输出存储在3级延迟寄存器730A中。3级延迟寄存器730B存储图6的多路复用器660B的输出或下面关于图8所描述的通过将多路复用器660B的输出与FWDI_DOUT相加而生成的加法结果。多路复用器750A从以下中选择值：FWDI_DOUT；REGFILE_DOUT，来自LRAM 125的48位；REGFILE_DOUT，来自LRAM 125的不同的48位；延迟寄存器730B；以及{24'H0,FWDI_DOUT}，前置于操作数级联输入的24位的24个0位。多路复用器750B从3级延迟寄存器730A和730B中选择值。多路复用器750A和750B的输出被提供给加法器760A和760B。基于从多路复用器740A和740B接收到的SUB_AB_DEL和LOAD_AB_DEL信号以及从多路复用器750A和750B接收到的所选择的值，加法器760A生成加法结果。基于从多路复用器740A和740B接收到的SUB_AB_DEL和LOAD_AB_DEL信号以及从多路复用器750A和750B接收到的所选择的值，加法器760B生成加法结果或减法结果。SUB信号控制加法器760A和760B是生成加法结果还是减法结果。LOAD信号控制加法器760A和760B是将输入值与累加值相加还是忽略累加值且仅加载输入值，以提供输入值作为输出并且将累加器值设置为输入值。DEL信号具有0至4个周期的延迟。旁路多路复用器770选择由加法器760B生成的结果或多路复用器750B的结果。因此，旁路多路复用器770提供来自部分700的加法结果或来自图6的结果。多路复用器780选择多路复用器770的输出或加法器760A的输出，并且将结果提供给4级延迟寄存器790。图8是根据一些示例实施方式的使用FPGA重复单元之间的级联通信的算术电路的部分800的示意图。部分800对应于图7所示的上方块795。部分800包括：图6的多路复用器660B；图7的多路复用器720C和720D；加法器840A和840B；4级延迟寄存器790；多路复用器830A、830B、860A、860B、860C、860D和880；逻辑块850A和850B；以及输出寄存器870。图7的部分700在图8中表示为下方块890。多路复用器830A从以下中选择值：FWDI_DOUT；REGFILE_DOUT；REGFILE_DOUT，来自LRAM125的24位；以及来自输出寄存器870的经由反馈路径接收的值。多路复用器830B选择来自多路复用器660B的值或来自4级延迟寄存器790的值。加法器840A对来自多路复用器830A和830B的输出求和，如由SUB_REG和LOAD_REG信号所修改的。SUB信号控制加法器840A是生成加法结果还是减法结果。LOAD信号控制加法器840A是将输入值与累加值相加还是忽略累加值且仅加载输入值，以提供输入值作为输出并且将累加器值设置为输入值。由于SUB_REG和LOAD_REG不是DEL信号，因此在处理输入时没有延迟。加法器840B根据SUB_REG信号将来自多路复用器830A至830B的输出相加或取差。多路复用器860B和860C选择加法器840A至840B的输出，或基于FPADD_CD_BYPASS信号提供来自多路复用器830B的输出。多路复用器860D选择来自多路复用器860B、多路复用器860C的输出、MULT8BYP输入和MULT16BYP输入。如果使用旁路信号，则在电路被配置成执行8位操作时选择MULT8BYP信号，并且在电路被配置成执行16位操作时选择MULT16BYP信号。多路复用器860D的输出存储在输出寄存器870中。如果电路被配置成执行浮点格式转换，则输出寄存器870中的值在被作为输入提供给多路复用器860A之前由逻辑块850B处理。同样地，如果电路被配置成执行浮点格式转换，则4级延迟寄存器790中的值由逻辑块850A处理。多路复用器860A从寄存器790和870的已处理的值和未处理的值中选择输入。多路复用器860A的输出被提供为FWDO_DOUT，48位操作数级联输出。在不同于部分500至700所使用的浮点格式的浮点模式下，逻辑850A至850B将中间输出转换为FPGA所期望的格式。在示例中，部分500至700对具有16位尾数和8位指数的浮点值进行操作。在该示例中，多模式算术电路使用16位尾数、10位尾数、12位尾数、8位指数、6位指数和5位指数的各种组合来支持输入和输出。基于输出格式和在部分500至700上操作的格式，逻辑850A至850B转换输出值。在一些示例实施方式中，部分500至700所使用的内部浮点格式具有至少与输入/输出浮点格式的尾数大小一样大的尾数大小。整数累加器可以用于特殊情况下的浮点操作。在具有整数累加器和浮点累加器两者的实施方式中，整数累加器可以比浮点累加器宽，从而在浮点指数在值上接近时，允许块浮点操作使用整数累加器而不丢失数据。多路复用器880基于OUTPUT_SEL信号从以下中选择电路的输出值：多路复用器860A的输出；LRAM_DOUT，从LRAM 125读取的72位值；以及BRAM_DOUT。所选择的输出值被提供为DOUT，被提供给路由结构105的72位输出。图9是示出根据一些示例实施方式的使用级联通信的FPGA的重复单元之间的连接的高级别示意图900。还示出了所连接的路由905和路由910。第一重复单元包括MLP 915A和BRAM 920A。第二重复单元包括MLP 915B和BRAM 920B。每个重复单元可以包括LRAM。MLP915A包括浮点MAC 930A和整数MAC 935A。BRAM 920A包括存储器940A。MLP 915B包括浮点MAC 930B和整数MAC 935B。BRAM 920B包括存储器940B。重复单元经由路由905和路由910连接至其他重复单元。操作数级联输出960A直接连接至操作数级联输入945B，允许在不使用路由905的情况下将数据从MLP 915A传送至MLP 915B。存储器级联输出965A直接连接至存储器级联输入955B，允许在不使用路由910的情况下将数据从BRAM 920A传送至BRAM 920B。操作数级联输入945A和存储器级联输入955A允许MLP 915A和BRAM 920A连接至另一个FPGA重复单元。类似地，操作数级联输出960B和存储器级联输出965B允许MLP 915B和BRAM 920B连接至另一个FPGA重复单元。级联连接可以是单向的或双向的。尽管图9仅示出了经由级联连接而连接的两个重复单元，但是在一些示例实施方式中，附加重复单元也以这种方式连接。因此，可以使用级联连接来连接任何数量的重复单元。级联重复单元中的每个重复单元可以被配置成传递操作数，沿任一方向传递存储器数据或两者。另外地或可替选地，级联重复单元中的每个重复单元可以被配置成使用来自路由905、路由910、操作数级联输入945、存储器级联输入955、存储器级联输出965以及存储器940的输入的任何组合来生成结果。在一些示例实施方式中，操作数级联连接用于跨多个MLP共享输入。因此，使用MLP的系统仅使用路由905来向单个MLP提供输入，并且所连接的MLP共享输入值。这在实现较大的乘法器或其他算术操作符中是有用的。例如，将两个16位数字相乘的乘法器可以由四个8位乘法器形成。如果单个MLP提供单个8位乘法器，则可以级联四个MLP以通过向经由级联连接与其他MLP共享数据的单个MLP提供操作数来生成结果。与使用传统连接的FPGA相比，节省了一半的路由，因为仅通过路由发送限定操作所需的32位输入，而不是发送64位输入。作为使用级联通信的另一个示例，操作数级联连接用于在MLP之间共享输出。例如，每个MLP可以计算部分乘积之和。当用户期望比可以由单个MLP确定的更多的部分乘积之和时，级联中的每个MLP可以将其总和输出提供给下一个MLP。下一个MLP确定它自己的部分乘积与级联输入之和。结果，级联中的最后一个MLP提供整个级联的部分乘积的总和作为输出。与使用传统连接的FPGA相比，节省了时间和路由。为了找到使用路由905的多个MLP的输出之和，在现有FPGA中，各个MLP的输出将作为输入发送至另一个MLP，以对部分乘积的各个总和求和，以确定整个总和，但是当MLP通过级联连接通信时，不需要MLP之间的附加路由。另外地，在开始确定部分乘积之和的总和之前等待直到所有MLP已经完成处理的顺序操作引入了延迟，当经由级联连接将每个MLP的输出直接提供给下一个MLP时，避免了该延迟。例如，通过在与乘法相同的时钟周期中执行部分乘积的求和，在一个时钟周期而不是在两个时钟周期中获得结果。作为使用级联通信的第三示例，通过级联链将一个操作数提供给多个MLP中的每一个，并且使用路由结构将另一个操作数提供给多个MLP中的每一个。例如，级联连接可以足够宽以为每个MLP保持一个操作数。即使在该示例中使用相同的总路由，也可以通过向单个MLP提供更多连接而不是需要将所有操作数路由至每个MLP来简化路由。作为使用级联通信的第四示例，数据或地址信息通过级联链在BRAM之间进行通信。因此，由较小的BRAM创建较大的存储器。例如，高地址位指示哪个BRAM应该处理读取或写入请求。在该示例中，路由仅连接至单个BRAM，但是请求使用级联链在BRAM之间进行通信，从而提供与单个BRAM相同宽度的更多存储器地址。作为另一个示例，每个BRAM使用级联地址来同时响应请求，但是处理输入数据的单独部分。这使用与单个BRAM相同数量的存储器地址来提供更大的数据宽度。在一些示例实施方式中，BRAM前向级联连接包括144位写入数据、14位地址、7位块地址和控制信号。14位地址允许识别单个BRAM中的16,384个存储器位置之一。7位块地址允许选择高达128个级联BRAM中的特定BRAM。控制信号指示例如数据是被读取还是被写入。BRAM反向级联连接包括144位读取数据、14位地址、7位块地址和控制信号。从由块地址标识的BRAM传输读取数据，使得级联链中的第一BRAM可以提供读取数据作为输出。可以将块地址设置成以特定BRAM为目标，以读取或写入。因此，在示例实施方式中，BRAM前向级联连接将数据不改变地传输至所有级联重复单元，所有级联重复单元中的每个级联重复单元具有唯一的块地址。如果BRAM的块地址与由级联连接指示的块地址匹配，则BRAM执行指示的操作。其他BRAM不执行操作。在一些示例实施方式中，BRAM前向级联连接的控制信号包括掩码。通过在将BRAM的经掩码的块地址与由级联连接指示的块地址进行比较之前将掩码的按位或应用于BRAM的块地址，在进行比较时忽略BRAM块地址的一些位。因此，多个重复单元可以匹配指示的块地址并执行指示的操作。例如，如果操作的块地址是b'0001100并且掩码是b'1111100，则块地址为b'0001100至b'0001111的四个BRAM将执行操作。这可以证明在机器学习应用中是有利的，在机器学习中对输入向量执行多个不同的操作。因此，当每个MLP对存储输入向量的BRAM进行重复单元上访问时，性能得到改进。如在图9中可以看见的，操作数级联输出960A被配置成提供以下中的任何一个：经由路由905接收到的数据、在操作数级联输入945A处接收到的数据、来自MAC 930A的结果和来自MAC 935A的结果。类似地，操作数级联输出960B被配置成提供以下中的任何一个：经由路由905接收到的数据、在操作数级联输入945B处接收到的数据、来自MAC 930B的结果和来自MAC 935B的结果。因此，当通过将一个重复单元的操作数级联输出连接至下一个重复单元的操作数级联输入来连接多个FPGA重复单元时，来自路由905的单个输入可以经由级联连接被传输至剩余的FPGA重复单元。与其中路由905资源将用于多个FPGA重复单元中的每一个的现有方法相比，节省了大量的路由资源。实际上，向多个MLP提供相同的操作数在执行矩阵乘法操作中是有用的，特别是对于机器学习应用。类似地，存储器级联输出965A被配置成提供以下中的任何一个：经由路由910接收到的数据、在存储器级联输入955A处接收到的数据以及从存储器940A读取的数据；存储器级联输出965B被配置成提供以下中的任何一个：经由路由910接收到的数据、在存储器级联输入955B处接收到的数据以及从存储器940B读取的数据。另外地，存储器级联连接是双向的。因此，虽然两个级联连接被标记为“输入”和“输出”，但是数据可以在任一方向上流动。因此，可以经由级联连接通过多个FPGA重复单元在一个方向上传播地址，并且可以在另一个方向上传播数据结果。与MLP一样，对多个BRAM使用级联连接节省了路由资源。图10是示出根据本发明各种实施方式的由融合存储器和算术电路执行的方法1000的操作的流程图。方法1000包括操作1010、1020、1030、1040、1050、1060和1070。作为示例而非限制，方法1000被描述为由图1至图9的电路执行。在操作1010中，FPGA的第一重复单元的第一算术电路从FPGA的连接结构接收第一输入集合。作为示例，MLP 915A从FPGA的路由结构905接收第一输入集合。在该示例中，第一输入集合包括第一矩阵的行，用于在确定矩阵乘法的部分结果时与第二矩阵的列进行逐个元素乘法。在操作1020中，第一算术电路从FPGA的连接结构接收第二输入集合。在该示例中，MLP 915A从路由结构905接收包括第二矩阵的列的第二输入集合。在操作1030中，第一算术电路基于第一输入集合的第一子集和第二输入集合的第二子集生成第一结果。例如，第一结果可以是第一矩阵的行的单个元素与第二矩阵的列的单个元素的乘积。作为另一个示例，第一结果可以是第一矩阵的行的元素与第二矩阵的列的对应元素的若干乘积之和。在操作1040中，FPGA的重复单元提供第一输入集合作为级联输出。在该示例中，在操作数级联输入945A处的输入被路由至操作数级联输出960A。在操作1050中，FPGA的第二重复单元的第二算术电路从连接结构接收第三输入集合。在该示例中，MLP 915B从路由结构905接收包括第二矩阵的第二列的第三输入集合。在操作1060中，第二算术电路直接从第一重复单元的级联输出接收第一输入集合。因此，在该示例中，MLP 915A通过路由905接收行和列，但MLP 915B接收相同数量的数据，同时仅使用路由905的一半。此外，MLP 915B可以被配置成将第一输入集合直接从操作数级联输入945B传播至操作数级联输出960B，从而允许另一个重复单元也接收第一输入集合而不消耗路由资源。可以重复该过程以向任意数量的重复单元提供第一输入集合。在操作1070中，第二算术电路基于第一输入集合的第一子集和第三输入集合的第三子集生成第二结果。如本文所使用的，子集可以包括集合的整体。因此，如果64位数据由级联输入提供并且64位数据由路由结构提供，则算术结果可以基于输入的任何部分，只要它取决于两个输入。作为示例，64位输入中的每一个可以视为八个8位操作数，并且生成的结果可以是对8位操作数对执行的八个乘法操作之和，每对中的一个操作数经由重复单元内通信接收，并且每对中的一个操作数经由FPGA的路由结构接收。图11是示出根据一些示例实施方式的对FPGA进行编程的计算机1100的部件的框图。在各种实施方式中不需要使用所有部件。例如，客户端、服务器、自主系统以及基于云的网络资源可以各自使用不同的部件集合，或例如在服务器的情况下，可以使用较大的存储设备。计算机1100形式的一个示例计算设备可以包括全部通过总线1140连接的处理器1105、存储器存储设备1110、可移除存储设备1115和不可移除存储设备1120。尽管示例计算设备被示出和描述为计算机1100，但是在不同的实施方式中，计算设备可以具有不同的形式。例如，计算设备可以替代地是智能电话、平板计算机、智能手表、或包括与关于图11示出和描述的那些元件相同或相似的元件的其他计算设备。诸如智能电话、平板计算机和智能手表的设备被统称为“移动设备”。此外，尽管各种数据存储元件被示出为计算机1100的部分，但是存储设备还可以包括或可替选地包括经由网络可访问的基于云的存储设备，或基于服务器的存储设备。存储器存储设备1110可以包括易失性存储器1145和非易失性存储器1150并且可以存储程序1155。计算机1100可以包括或能够访问计算环境，该计算环境包括各种计算机可读介质，例如易失性存储器1145、非易失性存储器1150、可移除存储设备1115和不可移除存储设备1120。计算机存储设备包括随机存取存储器、只读存储器、可擦除可编程只读存储器和电可擦除可编程只读存储器、闪存或其他存储技术、致密盘只读存储器、数字多功能盘或其他光盘存储设备、磁带盒、磁带、磁盘存储设备或其他磁存储设备、或能够存储计算机可读指令的任何其他介质。计算机1100可以包括或访问计算环境，该计算环境包括输入接口1125、输出接口1130和通信接口1135。输出接口1130可以与显示设备进行接口或包括显示设备，显示设备例如触摸屏，该显示设备也可以用作输入设备。输入接口1125可以与以下中的一个或更多个进行接口或包括以下中的一个或更多个：触摸屏、触摸板、鼠标、键盘、摄像装置、一个或更多个设备特定的按钮、集成在计算机1100内的或经由有线或无线数据连接而耦接至计算机1100的一个或更多个传感器、以及其他输入设备。计算机1100可以使用通信接口1135在联网环境中操作，以连接至一个或更多个远程计算机例如数据库服务器。远程计算机可以包括个人计算机、服务器、路由器、网络PC、对等设备或其他公共网络节点等。通信接口1135可以连接至局域网、广域网、蜂窝网络、WiFi网络、蓝牙网络或其他网络。存储在计算机可读介质上的计算机指令可以由计算机1100的处理器1105执行。硬盘驱动器、CD-ROM和RAM是包括非暂态计算机可读介质的物品的一些示例。在载波被认为过于短暂的程度上，术语“计算机可读介质”和“存储设备”不包括载波。“计算机可读非暂态介质”包括所有类型的计算机可读介质，包括磁存储介质、光存储介质、闪存介质和固态存储介质。应当理解，软件可以被安装在计算机中并且与计算机一起出售。可替选地，可以获得软件并且将其加载到计算机中，其包括通过物理介质或分发系统来获得软件，这包括例如从软件创建者所拥有的服务器或从软件创建者不拥有但使用的服务器获得软件。例如，软件可以存储在服务器上以用于通过因特网分发。程序1155被示出为包括设计模块1160以及布局和布线模块1165。可以使用硬件来实现本文中描述的模块中的任何一个或更多个。此外，这些模块中的任何两个或更多个模块可以被组合成单个模块，并且本文中针对单个模块描述的功能可以在多个模块之间细分。此外，根据各种示例实施方式，本文中描述为在单个机器、数据库或设备内实现的模块可以跨多个机器、数据库或设备分布。设计模块1160限定电路的设计。例如，设计模块1160可以提供用户接口以允许用户设计电路。布局和布线模块1165基于由设计模块1160限定的电路设计来确定所得到的集成电路的物理布局。例如，包括具有融合存储器和算术电路的一个或更多个重复单元的设计可以由布局和布线模块1165进行布局，以便被编程至FPGA配置中。提供本公开内容的摘要以符合37C.F.R.§1.72，其要求使得读者能够快速确定本技术公开内容的性质的摘要。摘要在以下理解的情况下提交：摘要不用于解释或限制权利要求。另外，在前述具体实施方式中，可以看出，出于使本公开内容精简的目的，各种特征在单个实施方式中被组合在一起。本公开内容的方法不应被解释为限制权利要求。因此，所附权利要求由此并入具体实施方式中，每个权利要求独立存在作为单独的实施方式。
