标题title
一种基于云渲染应用的共享资产文件方法及系统
摘要abst
本申请提供一种基于云渲染应用的共享资产文件方法，该方法包括如下步骤：获取打包资产文件共享库和加载资产文件共享库；为打包工具集成打包资产文件共享库，为各个云渲染应用集成加载资产文件共享库；响应于打包指令，使用集成打包资产文件共享库后的打包工具对云渲染应用的资产文件进行打包处理，获得共享资产文件；将共享资产文件添加统一的共享资产标识；响应于共享资产文件获取指令，将云渲染应用与共享资产文件进行对接，若对接成功，则允许获取共享资产文件；否则，禁止获取共享资产文件。本申请实现在多个云渲染应用之间共享资产文件。
权利要求书clms
1.一种基于云渲染应用的共享资产文件方法，其特征在于，该方法包括如下步骤：获取打包资产文件共享库和加载资产文件共享库；为打包工具集成打包资产文件共享库，为各个云渲染应用集成加载资产文件共享库；响应于打包指令，使用集成打包资产文件共享库后的打包工具对云渲染应用的资产文件进行打包处理，获得共享资产文件；将共享资产文件添加统一的共享资产标识；响应于共享资产文件获取指令，将云渲染应用与共享资产文件进行对接，若对接成功，则允许获取共享资产文件；否则，禁止获取共享资产文件。2.根据权利要求1所述的基于云渲染应用的共享资产文件方法，其特征在于，获取打包资产文件共享库和加载资产文件共享库的方法包括：预先建立打包资产文件共享库和加载资产文件共享库；将打包资产文件共享库和加载资产文件共享库存储在存储区；响应于下载共享库的请求，判断请求端是否为授权用户，若是，则允许请求端从存储区获取打包资产文件共享库和加载资产文件共享库，否则，禁止请求端从存储区获取打包资产文件共享库和加载资产文件共享库。3.根据权利要求1所述的基于云渲染应用的共享资产文件方法，其特征在于，为打包工具集成打包资产文件共享库的方法包括：拷贝打包资产文件共享库包括的代码文件、配置文件和/或资源文件；分别将拷贝的打包资产文件共享库的代码文件、配置文件和/或资源文件放置在打包工具的相应文件目录下，为打包工具集成打包资产文件共享库。4.根据权利要求1所述的基于云渲染应用的共享资产文件方法，其特征在于，为各个云渲染应用集成加载资产文件共享库的方法包括：拷贝加载资产文件共享库包括的代码文件、配置文件和/或资源文件；分别将拷贝的加载资产文件共享库的代码文件、配置文件和/或资源文件放置在云渲染应用的相应文件目录下，为各个云渲染应用集成加载资产文件共享库。5.根据权利要求1所述的基于云渲染应用的共享资产文件方法，其特征在于，其中，共享资产标识是一串字符，共享资产标识添加在资产文件的头部、中部或尾部，以进行共享标识。6.根据权利要求5所述的基于云渲染应用的共享资产文件方法，其特征在于，所有的共享资产文件添加的共享资产标识均相同。7.根据权利要求1所述的基于云渲染应用的共享资产文件方法，其特征在于，若集成了加载资产文件共享库的云渲染应用对接识别到共享资产文件中包含打包资产文件共享库，则对接成功；否则，对接失败。8.根据权利要求1所述的基于云渲染应用的共享资产文件方法，其特征在于，所有的打包工具集成的打包资产文件共享库均相同，所有的云渲染应用集成的加载资产文件共享库均相同。9.一种基于云渲染应用的共享资产文件系统，执行权利要求1-8之一的方法，其特征在于，该系统包括：获取模块，用于获取打包资产文件共享库和加载资产文件共享库；集成模块，用于为打包工具集成打包资产文件共享库，为各个云渲染应用集成加载资产文件共享库；打包模块，用于响应于打包指令，使用集成打包资产文件共享库后的打包工具对云渲染应用的资产文件进行打包处理，获得共享资产文件；标识添加模块，用于将共享资产文件添加统一的共享资产标识；共享资产文件获取模块，用于响应于共享资产文件获取指令，将云渲染应用与共享资产文件进行对接，若对接成功，则允许获取共享资产文件；否则，禁止获取共享资产文件。10.根据权利要求9所述的云渲染应用的共享资产文件系统，其特征在于，云渲染应用包括设置在云端的多个应用。
说明书desc
技术领域本申请涉及云渲染技术领域，尤其涉及一种基于云渲染应用的共享资产文件方法及系统。背景技术云渲染的模式与常规的云计算类似，即将3D程序放在远程的服务器中渲染，用户终端通过Web软件或者直接在本地的3D程序中点击一个“云渲染”按钮，并借助高速互联网接入访问资源，指令从用户终端中发出，服务器根据指令执行对应的渲染任务，而渲染结果画面则被传送回用户终端中加以显示。目前云渲染应用的资产文件，是将资产原始文件打包成应用独享的资产文件，即是通过该应用对应的开发工具将一系列原始的资源文件按照该工具独特的方式整合在一起打包成资产文件，这些资产文件只有该应用才能解析和使用，而其他的云渲染应用使用会出现识别不了、无法解析、使用和资源冲突等一系列问题，进而导致其他的云渲染应用使用不了这些资产文件。也就达不到在多个云渲染应用之间共享资产文件的目的。因此，目前亟需解决的技术问题是：如何在多个云渲染应用之间共享资产文件。发明内容本申请的目的在于提供一种基于云渲染应用的共享资产文件方法及系统，实现了在多个云渲染应用之间共享资产文件。为达到上述目的，本申请提供一种基于云渲染应用的共享资产文件方法，该方法包括如下步骤：获取打包资产文件共享库和加载资产文件共享库；为打包工具集成打包资产文件共享库，为各个云渲染应用集成加载资产文件共享库；响应于打包指令，使用集成打包资产文件共享库后的打包工具对云渲染应用的资产文件进行打包处理，获得共享资产文件；将共享资产文件添加统一的共享资产标识；响应于共享资产文件获取指令，将云渲染应用与共享资产文件进行对接，若对接成功，则允许获取共享资产文件；否则，禁止获取共享资产文件。如上的，其中，获取打包资产文件共享库和加载资产文件共享库的方法包括：预先建立打包资产文件共享库和加载资产文件共享库；将打包资产文件共享库和加载资产文件共享库存储在存储区；响应于下载共享库的请求，判断请求端是否为授权用户，若是，则允许请求端从存储区获取打包资产文件共享库和加载资产文件共享库，否则，禁止请求端从存储区获取打包资产文件共享库和加载资产文件共享库。如上的，其中，为打包工具集成打包资产文件共享库的方法包括：拷贝打包资产文件共享库包括的代码文件、配置文件和/或资源文件；分别将拷贝的打包资产文件共享库的代码文件、配置文件和/或资源文件放置在打包工具的相应文件目录下，为打包工具集成打包资产文件共享库。如上的，其中，为各个云渲染应用集成加载资产文件共享库的方法包括：拷贝加载资产文件共享库包括的代码文件、配置文件和/或资源文件；分别将拷贝的加载资产文件共享库的代码文件、配置文件和/或资源文件放置在云渲染应用的相应文件目录下，为各个云渲染应用集成加载资产文件共享库。如上的，其中，共享资产标识是一串字符，共享资产标识添加在资产文件的头部、中部或尾部，以进行共享标识。如上的，其中，所有的共享资产文件添加的共享资产标识均相同。如上的，其中，若集成了加载资产文件共享库的云渲染应用对接识别到共享资产文件中包含打包资产文件共享库，则对接成功；否则，对接失败。如上的，其中，所有的打包工具集成的打包资产文件共享库均相同，所有的云渲染应用集成的加载资产文件共享库均相同。本申请还提供一种基于云渲染应用的共享资产文件系统，该系统包括：获取模块，用于获取打包资产文件共享库和加载资产文件共享库；集成模块，用于为打包工具集成打包资产文件共享库，为各个云渲染应用集成加载资产文件共享库；打包模块，用于响应于打包指令，使用集成打包资产文件共享库后的打包工具对云渲染应用的资产文件进行打包处理，获得共享资产文件；标识添加模块，用于将共享资产文件添加统一的共享资产标识；共享资产文件获取模块，用于响应于共享资产文件获取指令，将云渲染应用与共享资产文件进行对接，若对接成功，则允许获取共享资产文件；否则，禁止获取共享资产文件。如上的，其中，云渲染应用包括设置在云端的多个应用。本申请实现的有益效果如下：本申请通过为资产文件添加统一的资产标识的方法，来达到在云渲染应用中共享资产文件的目的，同时提供打包和加载共享资产文件所需的打包资产文件共享库和加载资产文件共享库，使得云端的所有云渲染应用都可以获取共享资产文件。本申请通过在云端实现云渲染应用资产文件的共享，使得云渲染应用可以使用现有的资产文件中的图片或模型资源，无需再重建模型和图片，减少了云渲染的工作量，提高了云渲染效率。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本申请中记载的一些实施例，对于本领域技术人员来讲，还可以根据这些附图获得其他的附图。图1为本申请实施例的一种基于云渲染应用的共享资产文件方法流程图。图2为本申请实施例的获取打包资产文件共享库和加载资产文件共享库的方法流程图。图3为本申请实施例的一种基于云渲染应用的共享资产文件系统的结构示意图。图4为本申请实施例的云渲染应用加载共享资产文件的框架图。附图标记：10-获取模块；20-集成模块；30-打包模块；40-标识添加模块；50-共享资产文件获取模块；60-云端；70-共享资产文件；80-打包工具；100-共享资产文件系统。具体实施方式下面结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。实施例一如图1所示，本申请提供一种基于云渲染应用的共享资产文件方法，该方法包括如下步骤：步骤S1，获取打包资产文件共享库和加载资产文件共享库。如图2所示，步骤S1包括：步骤S110，预先建立打包资产文件共享库和加载资产文件共享库。具体的，打包资产文件共享库和加载资产文件共享库是由现有的SDK工具包构建的代码文件、配置文件和/或资源文件。步骤S120，将打包资产文件共享库和加载资产文件共享库存储在存储区。以供使用者下载和后续集成使用。步骤S130，响应于下载共享库的请求，判断请求端是否为授权用户，若是，则允许请求端从存储区获取打包资产文件共享库和加载资产文件共享库，否则，禁止请求端从存储区获取打包资产文件共享库和加载资产文件共享库。优选的，响应于请求端下载共享库的请求，判断请求端是否为授权用户，若是，则允许请求端从存储区获取打包资产文件共享库和加载资产文件共享库，否则，禁止请求端从存储区获取打包资产文件共享库和加载资产文件共享库。判断请求端是否为授权用户的方法可以是通过密码、指令或证书等验证方法。其中，打包资产文件共享库为用于打包资产文件的共享库，一个打包资产文件共享库供系统内的多个打包工具集成使用，节约了系统资源，打包工具用于打包共享资产文件。其中，加载资产文件共享库为用于加载资产文件的共享库，一个加载资产文件共享库供系统内的多个云渲染应用集成使用，节约了系统资源，云渲染应用可加载打包后的共享资产文件。打包资产文件共享库和加载资产文件共享库均是由头文件和源文件经过编译转化而成。打包资产文件共享库和加载资产文件共享库是一种可执行代码的二进制形式，可被操作系统载入内存执行。打包资产文件共享库和加载资产文件共享库供应用使用，实现了代码的模块化，减少了代码的占用资源空间。打包资产文件共享库和加载资产文件共享库均为SDK，SDK是开发工具的集合。在开发应用程序时，可以将SDK接入应用程序中，直接使用SDK提供的功能。SDK包括代码文件、配置文件和资源文件。步骤S2，为打包工具集成打包资产文件共享库，为各个云渲染应用集成加载资产文件共享库。其中，打包工具包括插件和工具。插件包括UE插件、unity插件。其中，云渲染应用包括UE应用、unity应用等，为云渲染应用集成加载资产文件的共享库。UE提供了游戏开发者需要的大量的核心技术、数据生成工具和基础支持，Unity  是一套包括图形、 声音、物理等功能的游戏引擎。步骤S2包括如下子步骤：步骤S210，拷贝打包资产文件共享库包括的代码文件、配置文件和/或资源文件。步骤S220，分别将拷贝的打包资产文件共享库的代码文件、配置文件和/或资源文件放置在打包工具的相应文件目录下，为打包工具集成打包资产文件共享库。实现为打包工具集成打包资产文件共享库。步骤S230，拷贝加载资产文件共享库包括的代码文件、配置文件和/或资源文件。步骤S240，分别将拷贝的加载资产文件共享库的代码文件、配置文件和/或资源文件放置在云渲染应用的相应文件目录下，为各个云渲染应用集成加载资产文件共享库。实现云渲染应用集成加载资产文件共享库的操作。步骤S3，响应于打包指令，使用集成打包资产文件共享库后的打包工具对云渲染应用的资产文件进行打包处理，获得共享资产文件。具体的，对云渲染应用的资产文件进行打包，并将打包资产文件共享库包括的代码文件、配置文件和/或资源文件打包入资产文件中，获得共享资产文件。步骤S4，将共享资产文件添加统一的共享资产标识。其中，共享资产标识是一串字符，可以将共享资产标识添加在资产文件的头部、中部或尾部，以进行共享标识。具体的，通过为共享资产文件添加统一的资产标识以及使用统一的数据结构，并提供统一的打包和加载资产文件的共享库，来达到在所有云渲染应用中共享资产文件的目的。步骤S5，响应于共享资产文件获取指令，将云渲染应用与共享资产文件进行对接，若对接成功，则允许获取共享资产文件；否则，禁止获取共享资产文件。具体的，若集成了加载资产文件共享库的云渲染应用对接识别到共享资产文件中包含打包资产文件共享库，即集成了加载资产文件共享库的云渲染应用查找共享资产文件中包含打包资产共享库，则对接成功；否则，对接失败。换句话说，集成了加载工具包SDK的云渲染应用与共享资产文件的打包工具包SDK对接成功后,就可以加载、解析和使用共享资产文件。资产制作者通过使用集成了打包工具包SDK的插件或工具，就可以打包出共享的资产文件。作为本发明的另一个具体实施例，集成了加载资产文件共享库的云渲染应用可以识别共享资产文件的共享资产标识，若识别到共享资产文件有共享资产标识，则允许获取共享资产文件；否则，禁止获取共享资产文件。实施例二如图3所示，本申请还一种基于云渲染应用的共享资产文件系统100，该系统包括：获取模块10，用于获取打包资产文件共享库和加载资产文件共享库；集成模块20，用于为打包工具集成打包资产文件共享库，为各个云渲染应用集成加载资产文件共享库；打包模块30，用于响应于打包指令，使用集成打包资产文件共享库后的打包工具对云渲染应用的资产文件进行打包处理，获得共享资产文件；标识添加模块40，用于将共享资产文件添加统一的共享资产标识；共享资产文件获取模块50，用于响应于共享资产文件获取指令，将云渲染应用与共享资产文件进行对接，若对接成功，则允许获取共享资产文件；否则，禁止获取共享资产文件。如图4所示，打包工具80包括插件和工具，插件或工具均为现有的，均可以用于对云渲染应用的资产文件进行打包，打包后形成共享资产文件70。优选的，共享资产文件70存储在共享文件数据库中。如图4所示，云渲染应用包括设置在云端80的多个应用。云端80中的任意一个云渲染应用都可以加载获取共享资产文件70。本申请实现的有益效果如下：本申请通过为资产文件添加统一的资产标识的方法，来达到在云渲染应用中共享资产文件的目的，同时提供打包和加载共享资产文件所需的打包资产文件共享库和加载资产文件共享库，使得云端的所有云渲染应用都可以获取共享资产文件。本申请通过在云端实现云渲染应用资产文件的共享，使得云渲染应用可以使用现有的资产文件中的图片或模型资源，无需再重建模型和图片，减少了云渲染的工作量，提高了云渲染效率。以上所述仅为本发明的实施方式而已，并不用于限制本发明。对于本领域技术人员来说，本发明可以有各种更改和变化。凡在本发明的精神和原理内所做的任何修改、等同替换、改进等，均应包括在本发明的权利要求范围之内。
