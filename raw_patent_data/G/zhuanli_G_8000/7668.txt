标题title
基于WebAssembly的智能合约处理方法、装置、设备及存储介质
摘要abst
本公开提供了一种基于WebAssembly的智能合约处理方法、装置、设备及存储介质，涉及计算机领域，尤其涉及区块链技术，可应用于云平台。该方法包括：对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；根据所述合约代码的热点探测结果确定是否切换编译等级；在切换编译等级的情况下，采用切换后的编译等级处理所述合约代码。通过上述技术方案能够提高智能合约的编译性能。
权利要求书clms
1.基于WebAssembly的智能合约处理方法，包括：对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；根据所述合约代码的热点探测结果确定是否切换编译等级；在切换编译等级的情况下，采用切换后的编译等级处理所述合约代码。2.根据权利要求1所述的方法，其中，所述采用切换后的编译等级处理所述合约代码，包括：采用切换后的编译等级为所述合约代码生成编译任务；采用编译线程执行所述编译任务得到合约代码的编译结果；执行所述编译结果。3.根据权利要求2所述的方法，所述方法还包括：将所述编译任务添加到编译队列中；根据编译队列的长度和/或所述编译任务对应的编译等级，调节所述编译线程的数量。4.根据权利要求2所述的方法，所述方法还包括：确定WebAssembly虚拟机的负载信息；在所述负载信息大于负载门限值的情况下，结束所述编译线程，以停止所述编译任务。5.根据权利要求1-4中任一项所述的方法，其中，所述根据所述合约代码的热点探测结果确定是否切换编译等级，包括：从所述合约代码的热点探测结果中提取合约代码的目标热度等级；基于候选编译等级与候选热度等级之间的关联关系，确定与所述目标热度等级关联的目标编译等级；在WebAssembly虚拟机所处的当前编译等级与所述目标编译等级不一致的情况下，将所述当前编译等级切换为所述目标编译等级。6.根据权利要求1-4中任一项所述的方法，所述方法还包括：响应于对所述智能合约程序的启动请求，通过解释器启动所述智能合约程序。7.基于WebAssembly的智能合约处理装置，包括：热点探测模块，用于对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；切换确定模块，用于根据所述合约代码的热点探测结果确定是否切换编译等级；切换处理模块，用于在切换编译等级的情况下，采用切换后的编译等级处理所述合约代码。8.根据权利要求7所述的装置，其中，所述切换处理模块包括：任务生成单元，用于采用切换后的编译等级为所述合约代码生成编译任务；编译单元，用于采用编译线程执行所述编译任务得到合约代码的编译结果；执行单元，用于执行所述编译结果。9.根据权利要求8所述的装置，所述切换处理模块还包括：任务添加单元，用于将所述编译任务添加到编译队列中；线程调节单元，用于根据编译队列的长度和/或所述编译任务对应的编译等级，调节所述编译线程的数量。10.根据权利要求8所述的装置，所述切换处理模块还包括：负载单元，用于确定WebAssembly虚拟机的负载信息；线程结束单元，用于在所述负载信息大于负载门限值的情况下，结束所述编译线程，以停止所述编译任务。11.根据权利要求7-10中任一项所述的装置，其中，所述切换确定模块包括：热度提取单元，用于从所述合约代码的热点探测结果中提取合约代码的目标热度等级；等级确定单元，用于基于候选编译等级与候选热度等级之间的关联关系，确定与所述目标热度等级关联的目标编译等级；等级切换单元，用于在WebAssembly虚拟机所处的当前编译等级与所述目标编译等级不一致的情况下，将所述当前编译等级切换为所述目标编译等级。12.根据权利要求8-10中任一项所述的装置，所述装置还包括：启动模块，用于响应于对所述智能合约程序的启动请求，通过解释器启动所述智能合约程序。13.一种电子设备，包括：至少一个处理器；以及与所述至少一个处理器通信连接的存储器；其中，所述存储器存储有可被所述至少一个处理器执行的指令，所述指令被所述至少一个处理器执行，以使所述至少一个处理器能够执行权利要求1-6中任一项所述的基于WebAssembly的智能合约处理方法。14.一种存储有计算机指令的非瞬时计算机可读存储介质，其中，所述计算机指令用于使计算机执行根据权利要求1-6中任一项所述的基于WebAssembly的智能合约处理方法。
说明书desc
技术领域本公开涉及计算机领域，尤其涉及区块链技术，可应用于云平台，具体涉及一种基于WebAssembly的智能合约处理方法、装置、设备及存储介质。背景技术在区块链系统中，区块链节点可以基于智能合约产生事务请求，并向其他区块链节点发送事务请求，该事务请求在区块链网络中得到执行和验证，并在区块链中进行存储。智能合约是指在区块链节点中部署的、实现某些功能的代码集合。WebAssembly是一种面向支撑式虚拟机的二进制指令集，支持使用WebAssembly运行智能合约，可将使用高级语言开发的智能合约转换成可在虚拟机运行的基于WebAssembly的智能合约程序。发明内容本公开提供了一种基于WebAssembly的智能合约处理方法、装置、设备以及存储介质。根据本公开的一方面，提供了一种基于WebAssembly的智能合约处理方法，该方法包括：对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；根据所述合约代码的热点探测结果确定是否切换编译等级；在切换编译等级的情况下，采用切换后的编译等级处理所述合约代码。根据本公开的一方面，提供了一种基于WebAssembly的智能合约处理装置，该装置包括：热点探测模块，用于对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；切换确定模块，用于根据所述合约代码的热点探测结果确定是否切换编译等级；切换处理模块，用于在切换编译等级的情况下，采用切换后的编译等级处理所述合约代码。根据本公开的另一方面，提供了一种电子设备，该电子设备包括：至少一个处理器；以及与所述至少一个处理器通信连接的存储器；其中，所述存储器存储有可被所述至少一个处理器执行的指令，所述指令被所述至少一个处理器执行，以使所述至少一个处理器能够执行本公开任意实施例所述基于WebAssembly的智能合约处理方法。根据本公开的另一方面，提供了一种存储有计算机指令的非瞬时计算机可读存储介质，其中，所述计算机指令用于使计算机执行本公开任意实施例所述的基于WebAssembly的智能合约处理方法。根据本公开的技术，能够提高智能合约的编译性能。应当理解，本部分所描述的内容并非旨在标识本公开的实施例的关键或重要特征，也不用于限制本公开的范围。本公开的其它特征将通过以下的说明书而变得容易理解。附图说明附图用于更好地理解本方案，不构成对本公开的限定。其中：图1是根据本公开实施例提供的一种基于WebAssembly的智能合约处理方法的流程图；图2是根据本公开实施例提供的另一种基于WebAssembly的智能合约处理方法的流程图；图3a是根据本公开实施例提供的又一种基于WebAssembly的智能合约处理方法的流程图；图3b是根据本公开实施例提供的一种候选编译等级的示意图；图4是根据本公开实施例提供的一种基于WebAssembly的智能合约处理装置的结构示意图；图5是用来实现本公开实施例的基于WebAssembly的智能合约处理方法的电子设备的框图。具体实施方式以下结合附图对本公开的示范性实施例做出说明，其中包括本公开实施例的各种细节以助于理解，应当将它们认为仅仅是示范性的。因此，本领域普通技术人员应当认识到，可以对这里描述的实施例做出各种改变和修改，而不会背离本公开的范围和精神。同样，为了清楚和简明，以下的描述中省略了对公知功能和结构的描述。图1是根据本公开实施例提供的一种基于WebAssembly的智能合约处理方法的流程图。该方法适用于为区块链中的智能合约提供混合编译模式的情况。该方法可以由基于WebAssembly的智能合约处理装置来执行，该装置可以采用软件和/或硬件的方式实现，并可集成于WebAssembly虚拟机中。如图1所示，本实施例的基于WebAssembly的智能合约处理方法可以包括：S101，对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；S102，根据所述合约代码的热点探测结果确定是否切换编译等级；S103，在切换编译等级的情况下，采用切换后的编译等级处理所述合约代码。在本公开实施例中，智能合约程序为基于WebAssembly的字节码，在智能合约执行过程中需要将字节码编译成本地机器码，再执行本地机器码。WebAssembly虚拟机支持两种或两种以上的候选编译等级。各候选编译等级所采用的候选编译策略不同，候选编译等级越高对应的编译时间开销越大、对代码尺寸的影响程度越大。示例性的，候选编译等级可为JIT、AOT下的O1、O2或O3优化级别，候选编译等级还可包括解释器。各候选编译等级对外暴露统一的上层接口，获取对智能合约程序中合约代码的调用请求，响应于对合约代码的调用请求对合约代码进行热点探测，得到合约代码的热点探测结果，并确定合约代码的热点探测结果与WebAssembly虚拟机所处的当前编译等级是否冲突，在冲突的情况下，需要切换编译等级，将当前编译等级切换成与热点探测结果匹配的候选编译等级，并采用切换后的编译等级执行合约代码。在智能合约执行过程中，通过根据各合约代码的热点探测结果灵活地为各合约代码切换编译等级，采用更加激进的候选编译等级对热点的合约代码进行编译，即编译等级与合约代码的热度呈正相关，各合约代码的编译等级不同，能够为智能合约程序实现更高的编译性能。通过支持编译等级切换相比于采用固定的编译等级，也就是说相比于各合约代码的编译等级相同，能够充分利用各候选编译等级的优势，从而提高编译性能。在热点探测过程中，可通过对合约代码进行热点探测可得到合约代码的调用次数，调用次数越高合约代码的热度越大。本公开实施例对热点探测方式不做具体限定，示例性的，可对线程的栈顶周期性采样确定合约代码是否位于栈顶，若经常位于栈顶，则合约代码属于热点；也可基于计数器统计合约代码被调用的次数。需要说明的是，合约代码可为函数级别，也可为功能模块级别，示例性的根据智能合约程序中功能模块和函数之间的从属关系对功能模块进行热点探测，相比于函数级别的热点探测，能够提高热点探测效率，并为功能模块级别的编译奠定基础。本公开实施例的技术方案，WebAssembly虚拟机可根据智能合约程序中各合约代码的热点检测结果为各合约代码分别切换编译等级，使各合约代码的编译等级不同，能够充分利用各候选编译等级的优势，提高智能合约程序的编译性能。在一种可选实施方式中，所述方法还包括：响应于对所述智能合约程序的启动请求，通过解释器启动所述智能合约程序。在本公开实施例中，解释器可为等级最低的候选编译等级。在智能合约程序的冷启动过程中，通过解释器直接读取合约代码的WebAssembly指令，并转移成本地机器码，能够实现毫秒级别的冷启动，从而提高智能合约的启动效率。在本公开实施例中，采用最低的候选编译等级响应智能合约的冷启动请求，最低的候选编译等级除了为解释器之外，还可为JIT模式，或弱优化级别的AOT模式例如基础优化级别O1。图2是根据本公开实施例提供的另一种基于WebAssembly的智能合约处理方法的流程图。本实施例是在上述实施例的基础上提出的一种可选方案。参见图2，本实施例的基于WebAssembly的智能合约处理方法可以包括：S201，对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；S202，根据所述合约代码的热点探测结果确定是否切换编译等级；S203，在切换编译等级的情况下，采用切换后的编译等级为所述合约代码生成编译任务；S204，采用编译线程执行所述编译任务得到合约代码的编译结果；S205，执行所述编译结果。其中，切换后的编译等级为与合约代码的热点探测结果匹配的候选编译等级，采用切换后的编译等级为合约代码生成编译任务，并采用编译线程执行编译任务得到编译结果，且执行编译结果。通过为智能合约程序中各合约代码生成与编译等级匹配的编译任务，使各合约代码的编译任务类型不同，便于灵活地控制合约代码的编译过程，从而提高混合编译的灵活性。在一种可选实施方式中，所述方法还包括：将所述编译任务添加到编译队列中；根据编译队列的长度和/或所述编译任务对应的编译等级，调节所述编译线程的数量。其中，编译队列用于存储、管理编译任务，将编译任务放到编译队列中，并通过编译线程执行编译任务，可灵活地调节编译线程的数量。示例性的，在编译队列的长度小于或等于第一长度阈值的情况下，将编译线程的数量设置为第一数量；在编译队列的长度大于第一长度阈值的情况下，将编译线程的数量设置为第二数量，第一数量小于第二数量。其中，第一长度阈值、第一数量、第二数量均可为经验值，例如第一数量为4，第二数量为8。在本公开实施例中，各编译等级可分别对应有自身的编译队列，也可只对应一个编译队列。在各编译等级分别对应各自编译队列的情况下，针对每一编译等级对应的编译队列，可将属于对应编译等级的编译任务放到该编译队列中，对应编译等级越高或者其中编译任务数量越大，该编译队列的编译性能开销越高，可提高编译线程的数量；反之，对应编译等级越低或者其中编译任务越少，可降低编译线程的数量。在各编译等级只对应一个编译队列的情况下，将各编译任务放到一个编译队列中，可根据编译队列的长度和/或编译任务对应的编译等级，预测编译队列的性能开销，示例性的，编译队列的长度越长性能开销越大，编译等级越高性能开销越大，结合编译队列的性能开销灵活地调节编译线程的数量。其中，编译线程的数量上限可为编译队列所属设备中CPU核数量的1/4，从而避免编译占用过多系统资源，导致智能合约的执行效率过低。考虑到编译任务的高计算特性，一个CPU核只对应一个编译线程。通过灵活地调节编译线程的数量，能够避免因编译等级切换导致编译过程中性能损耗变化所引起的性能抖动，从而平衡性能抖动与峰值性能，能够提高智能合约执行过程中的稳定性。其中，编译队列可位于虚拟机本地，也可位于虚拟机之外独立的编译服务器。在位于编译服务器的情况下，虚拟机与编译服务器之间可进行数据通信，示例性的，虚拟机可向编译服务器传输编译任务，编译服务器可回调编译结果。在一种可选实施方式中，所述方法还包括：确定WebAssembly虚拟机的负载信息；在所述负载信息大于负载门限值的情况下，结束所述编译线程，以停止所述编译任务。其中，WebAssembly虚拟机的负载信息可为WebAssembly虚拟机的CPU利用率和/或内存利用率。在CPU利用率大于CPU利用率上限或内存利用率大于内存利用率上限的情况下，虚拟机超负荷，可结束所述编译线程即将编译线程的数量设置为零，并停止编译任务，实现闲时编译。通过闲时编译能够降低智能合约程序的运行开销，从而避免运行时的性能抖动。本公开实施例的技术方案，通过根据编译队列的长度、编译任务对应的编译等级、虚拟机的负载信息等，灵活地调节编译线程的数量，能够避免编译过程中因切换编译等级引起的性能抖动，提高智能合约执行过程中的稳定性。图3a是根据本公开实施例提供的又一种基于WebAssembly的智能合约处理方法的流程图。本实施例是在上述实施例的基础上提出的一种可选方案。参见图3a，本实施例的基于WebAssembly的智能合约处理方法可以包括：S301，对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；S302，从所述合约代码的热点探测结果中提取合约代码的目标热度等级；S303，基于候选编译等级与候选热度等级之间的关联关系，确定与所述目标热度等级关联的目标编译等级；S304，在WebAssembly虚拟机所处的当前编译等级与所述目标编译等级不一致的情况下，将所述当前编译等级切换为所述目标编译等级；S305，在切换编译等级的情况下，采用切换后的编译等级处理所述合约代码。在本公开实施例中，不仅支持两种或两种以上的候选编译等级，还预先构建候选编译等级与候选热度等级之间的关联关系，候选热度等级越高，所关联的候选编译等级越高，对合约代码的时间开销越大、对代码尺寸的影响程度越大。当前编译等级为虚拟机当前所处的编译等级，可为初始化的编译等级，也可为在先执行的合约代码所对应的编译等级。具体的，可对智能合约程序中的合约代码进行热点探测，得到合约代码所属的目标热度等级，结合目标热度等级、候选编译等级与候选热度等级之间的关联关系，确定与目标热度等级所关联的目标编译等级。并且，确定目标编译等级与当前编译等级是否一致，在一致的情况下，继续保持当前编译等级，无需进行编译等级切换；在不一致的情况下，将当前编译等级切换为目标编译等级，采用目标编译等级对合约代码进行编译得到合约代码的编译结果，执行编译结果。本公开实施例对候选编译等级不做具体限定。参考图3b，本公开实施例也可通过如下方式设置候选编译等级，在智能合约启动过程中采用第一候选编译等级，启动后切换到第二候选编译等级，并对智能合约程序中的合约代码进行热点探测，得到属于热点的合约代码，采用第三候选编译等级对属于热点的合约代码进行编译。其中，第一候选编译等级、第二候选编译等级、第三候选编译等级的编译等级依次升高。例如，第一候选编译等级可为解释器、JIT模式或弱优化级别的AOT模式例如O1优化级别，第二候选编译等级可为普通优化级别的AOT模式例如O2优化级别，第三候选编译等级可为更加激进的优化级别例如AOT模式的O3优化级别。通过编译等级逐步升级，不仅能够实现智能合约的快速启动，还能够在各候选编译等级之间进行切换，从而充分利用不同编译等级的优势，兼顾智能合约执行过程中的编译成本和运行性能。本公开实施例的技术方案，通过基于候选编译等级与候选热度等级之间的关联关系，确定与目标热度等级关联的目标编译等级，并采样目标编译等级处理合约代码，能够平衡合约代码的编译成本和运行性能。图4是根据本公开实施例提供的一种基于WebAssembly的智能合约处理装置的结构示意图。本实施例适用于为区块链中的智能合约提供混合编译模式的情况。该装置可以采用软件和/或硬件的方式实现，并可集成于区块链网络中的区块生成节点中。如图4所示，本实施例的基于WebAssembly的智能合约处理装置400可以包括：热点探测模块410，用于对智能合约程序中的合约代码进行热点探测，得到合约代码的热点探测结果；其中，所述智能合约程序为WebAssembly的智能合约；切换确定模块420，用于根据所述合约代码的热点探测结果确定是否切换编译等级；切换处理模块430，用于在切换编译等级的情况下，采用切换后的编译等级处理所述合约代码。在一种可选实施方式中，所述切换处理模块430包括：任务生成单元，用于采用切换后的编译等级为所述合约代码生成编译任务；编译单元，用于采用编译线程执行所述编译任务得到合约代码的编译结果；执行单元，用于执行所述编译结果。在一种可选实施方式中，所述切换处理模块430还包括：任务添加单元，用于将所述编译任务添加到编译队列中；线程调节单元，用于根据编译队列的长度和/或所述编译任务对应的编译等级，调节所述编译线程的数量。在一种可选实施方式中，所述切换处理模块430还包括：负载单元，用于确定WebAssembly虚拟机的负载信息；线程结束单元，用于在所述负载信息大于负载门限值的情况下，结束所述编译线程，以停止所述编译任务。在一种可选实施方式中，所述切换确定模块420包括：热度提取单元，用于从所述合约代码的热点探测结果中提取合约代码的目标热度等级；等级确定单元，用于基于候选编译等级与候选热度等级之间的关联关系，确定与所述目标热度等级关联的目标编译等级；等级切换单元，用于在WebAssembly虚拟机所处的当前编译等级与所述目标编译等级不一致的情况下，将所述当前编译等级切换为所述目标编译等级。在一种可选实施方式中，该基于WebAssembly的智能合约处理装置还包括：启动模块，用于响应于对所述智能合约程序的启动请求，通过解释器启动所述智能合约程序。本公开实施例的技术方案，通过统一的上层接口，虚拟机支持解释执行，JIT执行，AOT编译的优势，充分利用各编译模式的优势，获得卓越的启动性能和运行时性能；通过编译等级逐渐升级与编译线程的数量调节配合，控制编译开销，允许使用更激进的代码优化措施，获得更高的峰值性能。本公开的技术方案中，所涉及的用户个人信息的获取，存储和应用等，均符合相关法律法规的规定，且不违背公序良俗。根据本公开的实施例，本公开还提供了一种电子设备、一种可读存储介质和一种计算机程序产品。图5是用来实现本公开实施例的基于WebAssembly的智能合约处理方法的电子设备的框图。图5示出了可以用来实施本公开的实施例的示例电子设备500的示意性框图。电子设备旨在表示各种形式的数字计算机，诸如，膝上型计算机、台式计算机、工作台、个人数字助理、服务器、刀片式服务器、大型计算机、和其它适合的计算机。电子设备还可以表示各种形式的移动装置，诸如，个人数字处理、蜂窝电话、智能电话、可穿戴设备和其它类似的计算装置。本文所示的部件、它们的连接和关系、以及它们的功能仅仅作为示例，并且不意在限制本文中描述的和/或者要求的本公开的实现。如图5所示，电子设备500包括计算单元501，其可以根据存储在只读存储器502中的计算机程序或者从存储单元508加载到随机访问存储器503中的计算机程序，来执行各种适当的动作和处理。在RAM 503中，还可存储电子设备500操作所需的各种程序和数据。计算单元501、ROM 502以及RAM 503通过总线504彼此相连。输入/输出接口505也连接至总线504。电子设备500中的多个部件连接至I/O接口505，包括：输入单元506，例如键盘、鼠标等；输出单元507，例如各种类型的显示器、扬声器等；存储单元508，例如磁盘、光盘等；以及通信单元509，例如网卡、调制解调器、无线通信收发机等。通信单元509允许电子设备500通过诸如因特网的计算机网络和/或各种电信网络与其他设备交换信息/数据。计算单元501可以是各种具有处理和计算能力的通用和/或专用处理组件。计算单元501的一些示例包括但不限于中央处理单元、图形处理单元、各种专用的人工智能计算芯片、各种运行机器学习模型算法的计算单元、数字信号处理器、以及任何适当的处理器、控制器、微控制器等。计算单元501执行上文所描述的各个方法和处理，例如基于WebAssembly的智能合约处理方法。例如，在一些实施例中，基于WebAssembly的智能合约处理方法可被实现为计算机软件程序，其被有形地包含于机器可读介质，例如存储单元508。在一些实施例中，计算机程序的部分或者全部可以经由ROM 502和/或通信单元509而被载入和/或安装到电子设备500上。当计算机程序加载到RAM 503并由计算单元501执行时，可以执行上文描述的基于WebAssembly的智能合约处理方法的一个或多个步骤。备选地，在其他实施例中，计算单元501可以通过其他任何适当的方式而被配置为执行基于WebAssembly的智能合约处理方法。本文中以上描述的系统和技术的各种实施方式可以在数字电子电路系统、集成电路系统、现场可编程门阵列、专用集成电路、专用标准产品、芯片上系统的系统、复杂可编程逻辑设备、计算机硬件、固件、软件、和/或它们的组合中实现。这些各种实施方式可以包括：实施在一个或者多个计算机程序中，该一个或者多个计算机程序可在包括至少一个可编程处理器的可编程系统上执行和/或解释，该可编程处理器可以是专用或者通用可编程处理器，可以从存储系统、至少一个输入装置、和至少一个输出装置接收数据和指令，并且将数据和指令传输至该存储系统、该至少一个输入装置、和该至少一个输出装置。用于实施本公开的方法的程序代码可以采用一个或多个编程语言的任何组合来编写。这些程序代码可以提供给通用计算机、专用计算机或其他可编程数据处理装置的处理器或控制器，使得程序代码当由处理器或控制器执行时使流程图和/或框图中所规定的功能/操作被实施。程序代码可以完全在机器上执行、部分地在机器上执行，作为独立软件包部分地在机器上执行且部分地在远程机器上执行或完全在远程机器或服务器上执行。在本公开的上下文中，机器可读介质可以是有形的介质，其可以包含或存储以供指令执行系统、装置或设备使用或与指令执行系统、装置或设备结合地使用的程序。机器可读介质可以是机器可读信号介质或机器可读储存介质。机器可读介质可以包括但不限于电子的、磁性的、光学的、电磁的、红外的、或半导体系统、装置或设备，或者上述内容的任何合适组合。机器可读存储介质的更具体示例会包括基于一个或多个线的电气连接、便携式计算机盘、硬盘、随机存取存储器、只读存储器、可擦除可编程只读存储器、光纤、便捷式紧凑盘只读存储器、光学储存设备、磁储存设备、或上述内容的任何合适组合。为了提供与用户的交互，可以在计算机上实施此处描述的系统和技术，该计算机具有：用于向用户显示信息的显示装置或者LCD监视器）；以及键盘和指向装置，用户可以通过该键盘和该指向装置来将输入提供给计算机。其它种类的装置还可以用于提供与用户的交互；例如，提供给用户的反馈可以是任何形式的传感反馈；并且可以用任何形式来接收来自用户的输入。可以将此处描述的系统和技术实施在包括后台部件的计算系统、或者包括中间件部件的计算系统、或者包括前端部件的计算系统、或者包括这种后台部件、中间件部件、或者前端部件的任何组合的计算系统中。可以通过任何形式或者介质的数字数据通信来将系统的部件相互连接。通信网络的示例包括：局域网、广域网和互联网。计算机系统可以包括客户端和服务器。客户端和服务器一般远离彼此并且通常通过通信网络进行交互。通过在相应的计算机上运行并且彼此具有客户端-服务器关系的计算机程序来产生客户端和服务器的关系。服务器可以是云服务器，也可以为分布式系统的服务器，或者是结合了区块链的服务器。人工智能是研究使计算机来模拟人的某些思维过程和智能行为的学科，既有硬件层面的技术也有软件层面的技术。人工智能硬件技术一般包括如传感器、专用人工智能芯片、云计算、分布式存储、大数据处理等技术；人工智能软件技术主要包括计算机视觉技术、语音识别技术、自然语言处理技术及机器学习/深度学习技术、大数据处理技术、知识图谱技术等几大方向。云计算，指的是通过网络接入弹性可扩展的共享物理或虚拟资源池，资源可以包括服务器、操作系统、网络、软件、应用和存储设备等，并可以按需、自服务的方式对资源进行部署和管理的技术体系。通过云计算技术，可以为人工智能、区块链等技术应用、模型训练提供高效强大的数据处理能力。应该理解，可以使用上面所示的各种形式的流程，重新排序、增加或删除步骤。例如，本发公开中记载的各步骤可以并行地执行也可以顺序地执行也可以不同的次序执行，只要能够实现本公开公开的技术方案所期望的结果，本文在此不进行限制。上述具体实施方式，并不构成对本公开保护范围的限制。本领域技术人员应该明白的是，根据设计要求和其他因素，可以进行各种修改、组合、子组合和替代。任何在本公开的精神和原则之内所作的修改、等同替换和改进等，均应包含在本公开保护范围之内。
