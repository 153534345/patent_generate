标题title
基于服务端的分支合并冲突的处理方法、装置及电子设备
摘要abst
本发明公开了一种基于服务端的分支合并冲突的处理方法、装置及电子设备，该方法包括：包括通过在服务端创建中间分支，并在中间分支上执行冲突处理的操作，从而为直接在服务端进行代码冲突处理提供了条件，由于直接在服务端进行代码冲突的处理，节省了下载代码到本地的时间，从而提升了冲突处理的效率，并且也无需在浏览器和命令行直接之间进行切换，简化了操作，进一步的也提升了冲突处理的效率。
权利要求书clms
1.一种基于服务端的分支合并冲突的处理方法，其特征在于，所述方法应用于服务端，包括：创建包含目标分支代码信息的中间分支；获取与目标需求相关的至少一个代码版本，确定代码版本中存在的冲突的第一修改文件；所述代码版本包含单次提交的包含代码块的修改信息的第一修改文件的集合；将所述至少一个代码版本合并到中间版本上；基于存在冲突的文件，在中间分支上确定存在冲突的位置；当接收到包含冲突代码块的修改信息的第二修改文件的情况下，基于所述第二修改文件中冲突代码块的修改信息对中间分支上相应的代码块进行修改；将修改后的中间分支的代码合并到目标分支上。2.根据权利要求1所述的方法，其特征在于，所述创建包含目标分支代码信息的中间分支，包括：获取目标分支包含的每个产品需求最新的代码版本；创建包含目标分支中每个产品需求最新的代码版本的代码信息的中间分支。3.根据权利要求1所述的方法，其特征在于，所述获取与目标需求相关的至少一个代码版本，包括：接收目标产品需求信息；基于预设的产品需求信息和代码版本的关系，获取与所述目标产品需求信息相关的代码版本。4.根据权利要求1所述的方法，其特征在于，所述将所述至少一个代码版本合并到中间版本上，包括：确定每个代码版本的提交的先后顺序；按照所述每个代码版本的提交的先后顺序，将多个待合并的代码版本合并到中间分支上。5.根据权利要求1所述的方法，其特征在于，还包括：在编辑冲突代码的修改信息的过程中，响应于缓存的触发指令，对冲突代码的修改信息进行缓存。6.根据权利要求1所述的方法，其特征在于，还包括：通过对中间分支、源分支和目标分支的代码进行比较，在源分支和目标分支上确定与中间分支存在差异的代码块；分别将中间分支、源分支和目标分支的信息以及各个中间分支上的冲突代码块的信息、源分支和目标分支分别与中间分支存在差异的代码块的信息，发送到终端，以在终端上同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息。7.一种基于服务端的分支合并冲突的处理装置，其特征在于，所述装置应用服务端，包括：创建单元，用于创建包含目标分支代码信息的中间分支；获取单元，用于获取与目标需求相关的至少一个代码版本，确定代码版本中存在的冲突的第一修改文件；所述代码版本包含单次提交的包含代码块的修改信息的第一修改文件的集合；第一合并单元，用于将所述至少一个代码版本合并到中间版本上；冲突确定单元，用于基于存在冲突的文件，在中间分支上确定存在冲突的位置；修改单元，用于当接收到包含冲突代码块的修改信息的第二修改文件的情况下，基于所述第二修改文件中冲突代码块的修改信息对中间分支上相应的代码块进行修改；第二合并单元，用于将修改后的中间分支的代码合并到目标分支上。8.根据权利要求7所述的装置，其特征在于，还包括：缓存单元，用于在编辑冲突代码的修改信息的过程中，响应于缓存的触发指令，对冲突代码的修改信息进行缓存。9.根据权利要求7所述的装置，其特征在于，还包括：差异计算单元，用于通过对中间分支、源分支和目标分支的代码进行比较，在源分支和目标分支上确定与中间分支存在差异的代码块；发送单元，用于分别将中间分支、源分支和目标分支的信息以及各个中间分支上的冲突代码块的信息、源分支和目标分支分别与中间分支存在差异的代码块的信息，发送到终端，以在终端上同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息。10.一种电子设备，其特征在于，包括：存储器和处理器；所述存储器用于存储程序，所述处理器用于执行所述存储器中的程序时执行权利要求1-6中任意一项所述的基于服务端的分支合并冲突的处理方法。
说明书desc
技术领域本发明涉及计算机软件开发领域，尤其涉及一种基于服务端的分支合并冲突的处理方法、装置及电子设备。背景技术在代码开发的过程中，可能需要多个开发者对同一个项目进行代码开发，或者，多个发布版本需要进行维护时，也会出现多个分支的情况。基于上述的方式，当对多个分支进行合并时，可能会出现冲突的情况。为了解决分支合并时产生的冲突问题，现有技术中通常将提交的不同版本的分支代码下载到本地，通过命令行的方式检测分支冲突，并在检测到冲突的情况下，先修改冲突，再解决下一个冲突。将分支代码下载到本地时，会花费较多的时间，非常影响冲突处理的效率，并且，该种方式还需要在浏览器和命令行之间进行切换，操作复杂，那么也会影响冲突处理的效率。发明内容有鉴于此，本发明实施例公开了一种基于服务端的分支合并冲突的处理方法、装置及电子设备，解决了现有技术中对代码的冲突的处理效率低下的问题。本发明实施例公开了一种基于服务端的冲突处理方法，所述方法应用于服务端，包括：创建包含目标分支代码信息的中间分支；获取与目标需求相关的至少一个代码版本，确定代码版本中存在的冲突的第一修改文件；所述代码版本包含单次提交的包含代码块的修改信息的第一修改文件的集合；将所述至少一个代码版本合并到中间版本上；基于存在冲突的文件，在中间分支上确定存在冲突的位置；当接收到包含冲突代码块的修改信息的第二修改文件的情况下，基于所述第二修改文件中冲突代码块的修改信息对中间分支上相应的代码块进行修改；将修改后的中间分支的代码合并到目标分支上。可选的，所述创建包含目标分支代码信息的中间分支，包括：获取目标分支包含的每个产品需求最新的代码版本；创建包含目标分支中每个产品需求最新的代码版本的代码信息的中间分支。可选的，所述获取与目标需求相关的至少一个代码版本，包括：接收目标产品需求信息；基于预设的产品需求信息和代码版本的关系，获取与所述目标产品需求信息相关的代码版本。可选的，所述将所述至少一个代码版本合并到中间版本上，包括：确定每个代码版本的提交的先后顺序；按照所述每个代码版本的提交的先后顺序，将所述多个待合并的代码版本合并到中间分支上。可选的，还包括：在编辑冲突代码的修改信息的过程中，响应于缓存的触发指令，对冲突代码的修改信息进行缓存。可选的，还包括：通过对中间分支、源分支和目标分支的代码进行比较，在源分支和目标分支上确定与中间分支存在差异的代码块；分别将中间分支、源分支和目标分支的信息以及各个中间分支上的冲突代码块的信息、源分支和目标分支分别与中间分支存在差异的代码块的信息，发送到终端，以在终端上同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息。本发明实施例还公开了一种基于服务端的分支合并冲突的处理装置，所述装置应用服务端，包括：创建单元，用于创建包含目标分支代码信息的中间分支；获取单元，用于获取与目标需求相关的至少一个代码版本，确定代码版本中存在的冲突的第一修改文件；所述代码版本包含单次提交的包含代码块的修改信息的第一修改文件的集合；第一合并单元，用于将所述至少一个代码版本合并到中间版本上；冲突确定单元，用于基于存在冲突的文件，在中间分支上确定存在冲突的位置；修改单元，用于当接收到包含冲突代码块的修改信息的第二修改文件的情况下，基于所述第二修改文件中冲突代码块的修改信息对中间分支上相应的代码块进行修改；第二合并单元，用于将修改后的中间分支的代码合并到目标分支上。可选的，还包括：缓存单元，用于在编辑冲突代码的修改信息的过程中，响应于缓存的触发指令，对冲突代码的修改信息进行缓存。可选的，还包括：差异计算单元，用于通过对中间分支、源分支和目标分支的代码进行比较，在源分支和目标分支上确定与中间分支存在差异的代码块；发送单元，用于分别将中间分支、源分支和目标分支的信息以及各个中间分支上的冲突代码块的信息、源分支和目标分支分别与中间分支存在差异的代码块的信息，发送到终端，以在终端上同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息。可选的，所述创建单元，包括：第一获取子单元，用于获取中间分支包含的每个产品需求最新的代码版本；创建子单元，用于创建包含中间分支中每个产品需求最新的代码版本的代码信息的中间分支。可选的，所述获取单元，包括：接收子单元，用于接收目标产品需求信息；获取子单元，用于基于预设的产品需求信息和代码版本的关系，获取与所述目标产品需求信息相关的代码版本本发明实施例公开了一种电子设备，包括：存储器和处理器；所述存储器用于存储程序，所述处理器用于执行所述存储器中的程序时执行上述的基于服务端的分支合并冲突的处理方法。本发明实施例公开了一种基于服务端的分支合并冲突的处理方法、装置及电子设备，该方法包括：通过在服务端创建中间分支，并在中间分支上执行冲突处理的操作，从而为直接在服务端进行代码冲突处理提供了条件，由于直接在服务端进行代码冲突的处理，节省了下载代码到本地的时间，从而提升了冲突处理的效率，并且也无需在浏览器和命令行直接之间进行切换，简化了操作，进一步的也提升了冲突处理的效率。附图说明为了更清楚地说明本发明实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据提供的附图获得其他的附图。图1示出了本发明实施例1公开了一种基于服务端的分支合并冲突的处理方法的流程示意图；图2示出了本发明实施例2提供的一种基于服务端的分支合并冲突的处理方法的示意图；图3示出了对中间分支、源分支和目标分支代码冲突块的对比情况展示的示意图；图4示出了本发明实施例提供的一种基于服务端的分支合并冲突的处理装置的结构示意图；图5示出了本发明实施例公开了一种电子设备的结构示意图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。参考图1，示出了本发明实施例1公开了一种基于服务端的分支合并冲突的处理方法的流程示意图，在本实施例中，该方法包括：S101：创建包含目标分支代码信息的中间分支；本实施例中，目标分支中的代码来自源分支，例如可以为测试分支或者预投产分支。其中，源分支表征代码开发过程中产生的代码，测试分支上的代码来自源分支，用于对开发的代码进行测试；预投产分支上的代码来自源分支，用于对开发的代码进行投产验证测试。本实施例中，一方面为了不影响目标分支上的代码，另一方面为了实现对冲突的检测，创建了一个包含目标分支的代码信息的中间分支，以用于后续的冲突检测。进一步的，针对源分支，开发人员可能会由于产品需求的原因或者由于升级等原因对代码进行修改，每次修改提交的文件集合表示为一个代码版本相应地目标分支也会基于这些代码版本进行修改，但是目标分支和源分支的代码的修改并不是同步的。为了体现目标分支最新的代码情况，可以基于目标分支上的最新的代码版本创建中间分支，再将源分支修改版本合并到中间分支，由此，还可以理解为，创建的中间分支为包含每个产品需求的代码版本的代码信息，具体的，S101包括：获取目标分支包含的每个产品需求最新的代码版本；创建包含目标分支中每个产品需求最新的代码版本的代码信息的中间分支。S102：获取与目标需求相关的至少一个代码版本，确定代码版本中存在的冲突的第一修改文件；所述代码版本包含单次提交的包含代码块的修改信息的第一修改文件的集合；代码开发过程中，由于产品需求或者产品升级等原因，会对产品的代码进行修改，每次修改开发人员会提交至少一个第一修改文件，本实施例中，将单次提交的第一修改文件的集合表示为代码版本，每个第一修改文件中包含代码块的修改信息。对于同一个代码块，若开发人员进行了多次修改，且修改的内容不一致，则会出现冲突的情况。通常情况下，冲突会存在于相同产品需求的不同代码版本中，因此，在进行冲突检测时，通常会对同一个产品需求的代码版本进行检测。代码开发的过程中会得到大量的代码版本，直接从中找到与某个产品需求相关的代码版本是非常困难的，为了解决该问题，提高获取与产品需求相关的代码版本的效率，本实施例中，在接收到提交的代码版本的情况下，预先建立了代码版本和产品需求的关联关系，然后，可以基于预先建立的代码版本和产品需求的关联关系，获取与产品需求相关的代码版本，具体的，S102包括：接收目标产品需求信息；基于预设的产品需求信息和代码版本的关系，获取与所述目标产品需求信息相关的代码版本。现有技术中对于检测的冲突通常是以提交的代码版本为单位进行记录，但是该种方式会导致，调取记录的冲突时还要根据存在冲突的代码版本，进一步的检测冲突存在的位置，降低了冲突的处理效率。需要知道的是，每个代码版本包括至少一个第一修改文件，每个第一修改文件包含不同的代码块，由此，为了解决上述问题，本实施例中，在检测冲突时，以每个代码版本中的第一修改文件为单位，由于每个第一修改文件包含不同的代码块，当调取存在冲突的第一修改文件时，可以直接通过冲突的第一修改文件，确定中间分支上存在冲突的代码块的位置。本实施例中，为了方便后续调取冲突的第一修改文件，本实施例中，在确定了存在冲突的第一修改文件后，记录该存在冲突的第一修改文件的信息，具体的，包括：检测多个代码版本中相同代码块的修改内容是否一致；若多个代码版本中相同代码块的修改内容不一致，则表示存在冲突；记录包含存在冲突的代码块的第一修改文件的信息。S103：将所述至少一个代码版本合并到中间版本上；本实施例中，每个代码版本可能会包含对不同代码块的修改，为了能完整的体现目标需求的修改结果，本实施例中，将多个待合并的代码版本合并到中间版本上。其中，为了能够完整的体现目标需求的结果，也为了给开发人员提供一种冲突的预解决方案，本实施例中，按照代码版本提交的先后顺序合并到中间版本上，具体的，S105包括：确定每个代码版本的提交的先后顺序；按照所述每个代码版本的提交的先后顺序，将所述多个待合并的代码版本合并到中间分支上。S104：基于存在冲突的文件，在中间分支上确定存在冲突的位置；其中，可以通过多种方式通过存在冲突的文件在中间分支上确定存在冲突的位置，本实施例中不进行限定，优选的，可以通过存在冲突的第一修改文件的代码块与中间分支上的代码进行比对，从而在中间分支上找到与存在冲突的第一修改文件相同的代码块。S105：当接收到包含冲突代码块的修改信息的第二修改文件的情况下，基于所述第二修改文件中冲突代码块的修改信息对中间分支上相应的代码块进行修改；S106：将修改后的中间分支的代码合并到目标分支上。本实施例中，检测到冲突后，技术人员可以基于实际需求解决冲突，并提交包含冲突代码块的修改信息的第二修改文件，服务端接收了该第二修改文件后，基于该第二修改文件中的包含的冲突代码块的修改信息对中间分支上存在冲突的代码块进行修改。本实施例中，冲突解决后需要在目标分支上体现修改后的代码，以方便进行后续的测试或者预投产等操作。本实施例中，在服务端创建包含目标分支代码信息的中间分支，获取与目标产品需求相关的至少一个代码版本，确定至少一个代码版本中存在的冲突文件，该冲突文件中包含单次提交的包含代码块的修改信息的第一修改文件的集合；将该至少一个代码版本合并到中间版本上；基于存在冲突的文件，在中间分支上确定存在冲突的位置；当接收到包含冲突代码块的修改信息的第二修改文件的情况下，基于第二修改文件中冲突代码的修改信息对中间分支上相应的代码块进行修改；将修改后的中间分支的代码合并到目标分支上。由此，本实施例中，通过在服务端创建中间分支，并在中间分支上执行冲突处理的操作，从而为直接在服务端进行代码冲突处理提供了条件，由于直接在服务端进行代码冲突的处理，节省了下载代码到本地的时间，从而提升了冲突处理的效率，并且也无需在浏览器和命令行直接之间进行切换，简化了操作，进一步的也提升了冲突处理的效率。进一步的，开发人员在对冲突的代码进行修改的过程中，可以在终端上执行修改，并在修改完成后提交给服务端，服务端接收了第二修改文件后，基于所述第二修改文件中冲突代码块的修改信息对中间分支上相应的代码块进行修改，但是开发人员在修改的过程中，由于网络中断等原因可能会导致修改信息丢丢失，为了避免上述情况的发生，本实施例中，用户在编辑冲突代码块的修改信息时，不间断的对用户编辑的冲突代码块的修改信息进行缓存，以防止信息丢失的问题，具体的，还包括：在编辑冲突代码的修改信息的过程中，响应于缓存的触发指令，对冲突代码的修改信息进行缓存。本实施例中，现有技术中对于冲突的展示通常不直观，无法看到冲突的具体情况，本实施例中，为了能够更加直观的展示冲突的情况，展示了冲突的代码分别在中间分支、源分支和目标分支上的情况，具体的，参考图2，示出了本发明实施例2提供的一种基于服务端的分支合并冲突的处理的方法的示意图，包括：S201:通过对中间分支、源分支和目标分支的代码进行比较，在源分支和目标分支上确定与中间分支存在差异的代码块；S202:分别将中间分支、源分支和目标分支的信息以及各个中间分支上的冲突代码块的信息、源分支和目标分支分别与中间分支存在差异的代码块的信息，发送到终端，以在终端上同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息。本实施例中，通过对中间分支、源分支和目标分支的代码进行比较，在源分支和目标分支上确定与中间分支存在差异的代码块，其中，确定出的与中间分支存在差异的代码块为源分支和目标分支的代码的冲突块的信息。本实施例中，由于可以在终端上同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息，那么可以对比显示中间分支、源分支和目标分支冲突块的对比情况，其中，中间分支、源分支和目标分支冲突块的对比情况可以为开发人员对冲突代码块进行修改的依据。其中，上述显示中间分支、源分支和目标分支代码冲突块的对比情况的方式可以包括多种，本实施例中不进行限定，例如，参考图3，将冲突块通过三栏展示，对冲突内容高亮显示。其中，在一种实施方式下，可以在浏览器上显示中间分支、源分支和目标分支代码冲突块的对比情况。本实施例中，将中间分支、源分支和目标分支的信息以及各个中间分支上的冲突代码块的信息、源分支和目标分支分别与中间分支存在差异的代码块的信息，发送到终端，使得终端上能够同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息，由此，该种方式能够更加直观的展示冲突的情况，为开发人员对冲突的代码块进行修改提供了参考依据。参考图4示出了本发明实施例提供的一种基于服务端的分支合并冲突的处理装置的结构示意图，在本实施例中，该装置包括：创建单元401，用于创建包含目标分支代码信息的中间分支；获取单元402，用于获取与目标需求相关的至少一个代码版本，确定代码版本中存在的冲突的第一修改文件；所述代码版本包含单次提交的包含代码块的修改信息的第一修改文件的集合；第一合并单元403，用于将所述至少一个代码版本合并到中间版本上；冲突确定单元404，用于基于存在冲突的文件，在中间分支上确定存在冲突的位置；修改单元405，用于当接收到包含冲突代码块的修改信息的第二修改文件的情况下，基于所述第二修改文件中冲突代码块的修改信息对中间分支上相应的代码块进行修改；第二合并单元406，用于将修改后的中间分支的代码合并到目标分支上。可选的，还包括：缓存单元，用于在编辑冲突代码的修改信息的过程中，响应于缓存的触发指令，对冲突代码的修改信息进行缓存。可选的，还包括：差异计算单元，用于通过对中间分支、源分支和目标分支的代码进行比较，在源分支和目标分支上确定与中间分支存在差异的代码块；发送单元，用于分别将中间分支、源分支和目标分支的信息以及各个中间分支上的冲突代码块的信息、源分支和目标分支分别与中间分支存在差异的代码块的信息，发送到终端，以在终端上同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息。可选的，所述创建单元，包括：第一获取子单元，用于获取目标分支包含的每个产品需求最新的代码版本；创建子单元，用于创建包含目标分支中每个产品需求最新的代码版本的代码信息的中间分支。可选的，所述获取单元，包括：接收子单元，用于接收目标产品需求信息；获取子单元，用于基于预设的产品需求信息和代码版本的关系，获取与所述目标产品需求信息相关的代码版本本实施例的装置，通过在服务端创建中间分支，并在中间分支上执行冲突处理的操作，从而为直接在服务端进行代码冲突处理提供了条件，由于直接在服务端进行代码冲突的处理，节省了下载代码到本地的时间，从而提升了冲突处理的效率，并且也无需在浏览器和命令行直接之间进行切换，简化了操作，进一步的也提升了冲突处理的效率。参考图5，示出了本发明实施例公开了一种电子设备的结构示意图，在本实施例中，该电子设备包括：存储器501和处理器502；所述存储器501用于存储程序，所述处理器502用于执行所述存储器中的程序时执行下述的基于服务端的分支合并冲突的处理方法，包括：创建包含目标分支代码信息的中间分支；获取与目标需求相关的至少一个代码版本，确定代码版本中存在的冲突的第一修改文件；所述代码版本包含单次提交的包含代码块的修改信息的第一修改文件的集合；将所述至少一个代码版本合并到中间版本上；基于存在冲突的文件，在中间分支上确定存在冲突的位置；当接收到包含冲突代码块的修改信息的第二修改文件的情况下，基于所述第二修改文件中冲突代码块的修改信息对中间分支上相应的代码块进行修改；将修改后的中间分支的代码合并到目标分支上。可选的，所述创建包含目标分支代码信息的中间分支，包括：获取目标分支包含的每个产品需求最新的代码版本；创建包含目标分支中每个产品需求最新的代码版本的代码信息的中间分支。可选的，所述获取与目标需求相关的至少一个代码版本，包括：接收目标产品需求信息；基于预设的产品需求信息和代码版本的关系，获取与所述目标产品需求信息相关的代码版本。可选的，所述将所述至少一个代码版本合并到中间版本上，包括：确定每个代码版本的提交的先后顺序；按照所述每个代码版本的提交的先后顺序，将所述多个待合并的代码版本合并到中间分支上。可选的，还包括：在编辑冲突代码的修改信息的过程中，响应于缓存的触发指令，对冲突代码的修改信息进行缓存。可选的，还包括：通过对中间分支、源分支和目标分支的代码进行比较，在源分支和目标分支上确定与中间分支存在差异的代码块；分别将中间分支、源分支和目标分支的信息以及各个中间分支上的冲突代码块的信息、源分支和目标分支分别与中间分支存在差异的代码块的信息，发送到终端，以在终端上同时显示中间分支以及冲突代码块的信息、源分支和目标分支以及与中间分支存在差异的代码块的信息。需要说明的是，本说明书中的各个实施例均采用递进的方式描述，每个实施例重点说明的都是与其他实施例的不同之处，各个实施例之间相同相似的部分互相参见即可。对所公开的实施例的上述说明，使本领域专业技术人员能够实现或使用本发明。对这些实施例的多种修改对本领域的专业技术人员来说将是显而易见的，本文中所定义的一般原理可以在不脱离本发明的精神或范围的情况下，在其它实施例中实现。因此，本发明将不会被限制于本文所示的这些实施例，而是要符合与本文所公开的原理和新颖特点相一致的最宽的范围。
