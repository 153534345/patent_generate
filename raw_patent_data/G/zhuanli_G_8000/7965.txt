标题title
一种VPD刷写方法、装置、设备及介质
摘要abst
本申请公开了一种VPD刷写方法、装置、设备及介质，涉及数据处理技术领域。该方法包括：获取输入参数；判断机型是否与识别得到的服务器的识别机型匹配；若否，则结束；若是，则获取预先存储的表征机型与识别机型匹配的校验参数；调用与校验参数对应的接口；通过接口刷写VPD。调用该机型对应的接口，并通过该接口对VPD刷写。由此实现了多种服务器机型都能调用对应的接口进行VPD的刷写，避免了一种机型的服务器只能使用该机型对应的生产测试系统，可以理解为，相比于A型的服务器只能使用A型生产测试系统转变为A型生产测试系统适用于多种机型的服务器，解决了生产测试系统使用场景受限和VPD刷写复杂化的问题。
权利要求书clms
1.一种VPD刷写方法，其特征在于，包括：获取输入参数，所述输入参数至少包括服务器的机型；判断所述机型是否与识别得到的所述服务器的识别机型匹配；若否，则结束；若是，则获取预先存储的表征所述机型与所述识别机型匹配的校验参数；调用与所述校验参数对应的接口；通过所述接口刷写VPD。2.根据权利要求1所述的VPD刷写方法，其特征在于，所述输入参数还包括EEPROM主板类型和EEPROM背板类型，在所述获取输入参数之后，在所述判断所述机型是否与识别得到的所述服务器的识别机型匹配之前，还包括：判断所述输入参数是否为所述EEPROM主板类型或所述EEPROM背板类型；若所述输入参数不为所述EEPROM主板类型或所述EEPROM背板类型，则进入所述判断所述机型是否与识别得到的所述服务器的识别机型匹配的步骤；若所述输入参数为所述EEPROM主板类型或所述EEPROM背板类型，则调用MD5校验接口对所述VPD进行校验；判断是否通过MD5校验接口对所述VPD校验成功；若校验成功，则进入所述获取预先存储的表征所述机型与所述识别机型匹配的校验参数的步骤；若未校验成功，则生成报错日志并结束。3.根据权利要求1所述的VPD刷写方法，其特征在于，在所述调用与所述校验参数对应的接口之后，在所述通过所述接口刷写VPD之前，还包括：获取驱动所述接口的驱动类型；根据所述机型和所述驱动类型判断是否加载PSX机箱管理器；若是，则进入所述通过所述接口刷写VPD的步骤；若否，则加载与所述机型所对应的pm80xx.ko和/或switchtec.ko。4.根据权利要求3所述的VPD刷写方法，其特征在于，在所述加载与所述机型所对应的pm80xx.ko和/或switchtec.ko之后，还包括：生成表征所述pm80xx.ko和/或所述switchtec.ko加载成功的信息。5.根据权利要求1所述的VPD刷写方法，其特征在于，在所述通过所述接口刷写VPD之后，还包括：判断所述VPD是否刷写成功；若是，则结束；若否，则返回至所述获取输入参数的步骤。6.根据权利要求1所述的VPD刷写方法，其特征在于，所述获取输入参数包括：通过IIC接口获取所述输入参数。7.一种VPD刷写装置，其特征在于，包括：第一获取模块，用于获取输入参数，所述输入参数至少包括服务器的机型；第一判断模块，用于判断所述机型是否与识别得到的所述服务器的识别机型匹配；若否，则结束；若是，则触发第二获取模块，用于获取预先存储的表征所述机型与所述识别机型匹配的校验参数；第一调用模块，用于调用与所述校验参数对应的接口；刷写模块，用于通过所述接口刷写VPD。8.一种VPD刷写设备，其特征在于，包括：存储器，用于存储计算机程序；处理器，用于执行所述计算机程序时实现如权利要求1至6任意一项所述的VPD刷写方法的步骤。9.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质上存储有计算机程序，所述计算机程序被处理器执行时实现如权利要求1至6任意一项所述的VPD刷写方法的步骤。
说明书desc
技术领域本申请涉及数据处理技术领域，特别是涉及一种VPD刷写方法、装置、设备及介质。背景技术一般在服务器系统中，关键产品数据记录了产品信息和配置信息。在使用VPD过程中，按照功能用途将VPD划分为多个字段域，字段域一般包括：域的大小、字段信息、字段大小、字段偏移量、字段校验值等等。将得到的多个字段域转换为HEX bin文件，并将该类型的文件通过烧录工装烧录到带电可擦编程只读存储器中。将烧录有HEX bin文件的EEPROM以贴片的方式设置于服务器主板的正面和背面，将设置于服务器主板正面的EEPROM称为主板，将设置于服务器主板背面的EEPROM称为背板。对组装了EEPROM的服务器进行整机组装测试，需要生产检测系统和机箱管理系统的配合。服务器目前使用的机箱管理系统一般有基板管理控制器、统一SAS机箱服务以及PSX机箱管理器。在服务器整机组装测试时由于服务器机型的不同，使得各种机型的服务器在机箱管理系统中的管理方式不同，也就意味着，各种机型的服务器对VPD刷写的方法不同。由此，每种机型的服务器有自己的一套生产测试系统，A型的服务器只能使用A型生产测试系统，使用场景受限，使得VPD刷写复杂化。鉴于上述存在的问题，寻求一种适用于各种机型的服务器的VPD刷写方法是本领域技术人员竭力解决的问题。发明内容本申请的目的是提供一种VPD刷写方法、装置、设备及介质，适用于多种机型的服务器，解决了生产测试系统使用场景受限和VPD刷写复杂化的问题。为解决上述技术问题，本申请提供一种VPD刷写方法，包括：获取输入参数，输入参数至少包括服务器的机型；判断机型是否与识别得到的服务器的识别机型匹配；若否，则结束；若是，则获取预先存储的表征机型与识别机型匹配的校验参数；调用与校验参数对应的接口；通过接口刷写VPD。优选地，输入参数还包括EEPROM主板类型和EEPROM背板类型，在获取输入参数之后，在判断机型是否与识别得到的服务器的识别机型匹配之前，还包括：判断输入参数是否为EEPROM主板类型或EEPROM背板类型；若所述输入参数不为所述EEPROM主板类型或所述EEPROM背板类型，则进入所述判断所述机型是否与识别得到的所述服务器的识别机型匹配的步骤；若所述输入参数为所述EEPROM主板类型或所述EEPROM背板类型，则调用MD5校验接口对所述VPD进行校验；判断是否通过MD5校验接口对所述VPD校验成功；若校验成功，则进入所述获取预先存储的表征所述机型与所述识别机型匹配的校验参数的步骤；若未校验成功，则生成报错日志并结束。优选地，在调用与校验参数对应的接口之后，在通过接口刷写VPD之前，还包括：获取驱动接口的驱动类型；根据机型和驱动类型判断是否加载PSX机箱管理器；若是，则进入通过接口刷写VPD的步骤；若否，则加载与机型所对应的pm80xx.ko和/或switchtec.ko。优选地，，在加载与机型所对应的pm80xx.ko和/或switchtec.ko之后，还包括：生成表征pm80xx.ko和/或switchtec.ko加载成功的信息。优选地，在通过接口刷写VPD之后，还包括：判断VPD是否刷写成功；若是，则结束；若否，则返回至获取输入参数的步骤。优选地，获取输入参数包括：通过IIC接口获取输入参数。为解决上述技术问题，本申请还提供了一种VPD刷写装置，包括：第一获取模块，用于获取输入参数，输入参数至少包括服务器的机型；第一判断模块，用于判断机型是否与识别得到的服务器的识别机型匹配；若否，则结束；若是，则触发第二获取模块，用于获取预先存储的表征机型与识别机型匹配的校验参数；第一调用模块，用于调用与校验参数对应的接口；刷写模块，用于通过接口刷写VPD。此外，VPD刷写装置还包括以下模块：第二判断模块，用于判断输入参数是否为EEPROM主板类型或EEPROM背板类型；若是，则触发第二调用模块，用于调用MD5校验接口对VPD进行校验；若否，则进入判断机型是否与识别得到的服务器的识别机型匹配的步骤。第三判断模块，用于判断是否通过MD5校验接口对VPD校验成功；若是，则进入获取预先存储的表征机型与识别机型匹配的校验参数的步骤；若否，则触发第一生成模块，用于生成报错日志并结束。第三获取模块，用于获取驱动接口的驱动类型；第四判断模块，用于根据机型和驱动类型判断是否加载PSX机箱管理器；若是，则进入通过接口刷写VPD的步骤；若否，则触发加载模块，用于加载与机型所对应的pm80xx.ko和/或switchtec.ko。第二生成模块，用于生成表征pm80xx.ko和/或switchtec.ko加载成功的信息。第五判断模块，用于判断VPD是否刷写成功；若是，则结束；若否，则返回至获取输入参数的步骤。为解决上述技术问题，本申请还提供了一种VPD刷写设备，包括：存储器，用于存储计算机程序；处理器，用于指向计算机程序，实现VPD刷写方法的步骤。为解决上述技术问题，本申请还提供了一种计算机可读存储介质，该计算机可读存储介质上存储有计算机程序，计算机程序被处理器执行时，实现上述全部VPD刷写方法的步骤。本申请所提供的一种VPD刷写方法，包括：获取输入参数，输入参数为服务器的机型；判断机型是否与识别得到的服务器的识别机型匹配；若否，则结束；若是，则获取预先存储的表征机型与识别机型匹配的校验参数；调用与校验参数对应的接口；通过接口刷写VPD。调用该机型对应的接口，并通过该接口进行对VPD的刷写。由此实现了多种服务器机型都能调用对应的接口进行VPD的刷写，避免了一种机型的服务器只能使用该机型对应的生产测试系统，可以理解为，相比于A型的服务器只能使用A型生产测试系统转变为A型生产测试系统适用于多种机型的服务器，解决了生产测试系统使用场景受限和VPD刷写复杂化的问题。本申请还提供了一种VPD刷写装置、设备及介质，效果同上。附图说明为了更清楚地说明本申请实施例，下面将对实施例中所需要使用的附图做简单的介绍，显而易见地，下面描述中的附图仅仅是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本申请实施例所提供的一种VPD刷写方法流程图；图2为本申请实施例所提供的另一种VPD刷写方法流程图；图3为本申请实施例所提供的一种VPD刷写装置结构图；图4为本申请实施例所提供的一种VPD刷写设备结构图。具体实施方式下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本申请一部分实施例，而不是全部实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下，所获得的所有其他实施例，都属于本申请保护范围。本申请的核心是提供一种VPD刷写方法、装置、设备及介质，其能够适用于多种机型的服务器，解决了生产测试系统使用场景受限和VPD刷写复杂化的问题。为了使本技术领域的人员更好地理解本申请方案，下面结合附图和具体实施方式对本申请作进一步的详细说明。在服务器系统中，VPD记录了产品信息和硬件配置信息，这些信息在生产检测、系统启动时都起到了至关重要的作用。这些VPD信息通常以一定的格式存放在服务器的主板和背板的EEPROM中。将VPD信息按照VPD信息的功能用途划分若干字段域，字段域包含域的大小、每个字段的信息、大小、偏移以及字段域的校验值等等，然后将这些字段域转换成HEXbin文件，并将此bin文件烧录到EEPROM中。VPD的HEX bin文件烧录到EEPROM中的方法有两种，其一，通过烧录器或烧录工装直接对EEPROM芯片进行整片烧录；其二，通过机箱控制系统实现对EEPROM的全量刷写或者指定字段域刷写、指定字段刷写等等。通常，在主板或背板进行生产加工时，会对EEPROM通过先烧后贴的方式，采用烧录器或烧录工装将预先制作好的VPD的HEX bin文件进行整片烧录，然后再贴到服务器主板上。在服务器整机组装测试时，会通过机箱管控系统对主板或背板VPD进行修改。在生产加工时，此EEPROM是通过先烧后贴的方式加工的，如果在整机生产测试环节发现VPD配置参数错误，则需要返厂重复先烧后贴的过程，即：先取下EEPROM，通过烧录器或烧录工装加载VPD，再焊到背板上。过程繁琐，可能损坏EEPROM。存储服务器目前使用的机箱管理系统一般有BMC、OSES以及PSX机箱管理器。在生产测试时往往需要随时跟研发人员确认不同机型的VPD烧录方法和接口，而且不同机型也需要不同的VPD文件，因而需要维护多套生产检测系统，造成了生产检测系统维护困难，VPD烧录时因烧录接口繁杂、VPD文件繁多而产生了VPD烧录困难或烧录错误的发生。即可以理解为，在服务器整机组装测试时由于服务器机型的不同，使得各种机型的服务器在机箱管理系统中的管理方式不同，也就意味着，各种机型的服务器对VPD刷写的方法不同。由此，每种机型的服务器有自己的一套生产测试系统，A型的服务器只能使用A型生产测试系统，使用场景受限，使得VPD刷写复杂化。图1为本申请实施例所提供的一种VPD刷写方法流程图。如图1所示，该方法包括：S10：获取输入参数。在本实施中，由于机箱管理系统与EEPROM之间通信连接，因此可以将其连接方式设置为IIC接口，并通过IIC接口获取输入参数。其中，输入参数为服务器的机型，此外输入参数还可以包括扩展柜机型、主背板类型、VPD文件路径、框类型、设备号、vpd bin文件路径、PSX设备查询、OSES设备查询等等。实现对不同机型、不同扩展柜的主板或者背板进行VPD的刷写。S11：判断机型是否与识别得到的服务器的识别机型匹配。通过判断机型是否与识别得到的服务器的识别机型匹配，与输入的机型校验，确保机型正确。若否，则结束。若是，则进入步骤S12：获取预先存储的表征机型与识别机型匹配的校验参数。S13：调用与校验参数对应的接口。S14：通过接口刷写VPD。通过上述方法，实现对不同机型、不同扩展柜的主板或者背板进行VPD刷写。VPD刷写方法首先避免了产线生产测试环节因VPD配置参数错误导致的返厂重复先烧后贴的处理，且兼容了多种不同存储服务器机型、硬盘扩展柜机型的烧录接口、提前存储了不同机型的VPD文件，提高了刷写的效率，刷写的正确率，并且节约了成本，提高了生产效率。实现了多种服务器机型都能调用对应的接口进行VPD的刷写，避免了一种机型的服务器只能使用该机型对应的生产测试系统，可以理解为，相比于A型的服务器只能使用A型生产测试系统转变为A型生产测试系统适用于多种机型的服务器，解决了生产测试系统使用场景受限和VPD刷写复杂化的问题。图2为本申请实施例所提供的另一种VPD刷写方法流程图。在上述实施例的基础上，作为一种更优的实施例，输入参数还包括EEPROM主板类型和EEPROM背板类型，在获取输入参数之后，在判断机型是否与识别得到的服务器的识别机型匹配之前，还包括：S20：判断输入参数是否为EEPROM主板类型或EEPROM背板类型。若是，则进入步骤S21：调用MD5校验接口对VPD进行校验。若否，则进入步骤S11：判断机型是否与识别得到的服务器的识别机型匹配。MD5校验能够帮助用户进行查看任意文件的MD5验证码。若文件在传输过程中损坏或者内容被修改过，那么该文件的MD5验证码就会发生相应的变化，因此MD5校验能够防止被盗用程序，或者加些木马程序损坏文件或篡改文件，同时也是确保用户所下载的文件是安全可靠的。S22：判断是否通过MD5校验接口对VPD校验成功。若校验成功，则进入步骤S12：获取预先存储的表征机型与识别机型匹配的校验参数。若未校验成功，则进入步骤S23：生成报错日志。在上述实施例中提到，若文件在传输过程中损坏或者内容被修改过，那么该文件的MD5验证码就会发生相应的变化，因此需要获取变化的MD5验证码，即可以理解为校验参数。需要说明的是，校验参数可以用数字信号表示，当校验参数是数字信号时，对其位数不作限定，可以是1位、2位、4位、8位等等，其位数不同表现形式也不同，根据上述描述，每个位数举一个例子进行表示，分别与上述位数的顺序一一对应，表示为：“1”、“11”、“1010”、“00111011”等等。且是否根据数据串中“1”的个数表征校验码可根据用户自定义，在本实施例中不作限定。还可以用字符表示，形如“成功”或“失败”的样式。对于字符的表现形式，在本实施例中同样不作限定。在上述实施例的基础上，作为一种更优的实施例，在调用与校验参数对应的接口之后，在通过接口刷写VPD之前，还包括：S24：获取驱动接口的驱动类型。S25：根据机型和驱动类型判断是否加载PSX机箱管理器。若是，则进入步骤S14：通过接口刷写VPD。若否，则进入步骤S26：加载与机型所对应的pm80xx.ko和/或switchtec.ko。由于每个驱动接口中可以包含一种或多种驱动类型，因此，需要先确定驱动接口的驱动类型是什么类型，才能进行下一步操作。需要说明的是，驱动接口的驱动类型可以用文字字符的形式表示，也可以用数据串的形式表示；当用文字字符形式表示驱动接口的类型时，形如“正常驱动”；当用数据串的形式表示驱动接口的类型时，数据串可以为1位、2位、4位、8位等等，其位数不同表现形式也不同，根据上述描述，每个位数举一个例子进行表示，分别与上述位数的顺序一一对应，表示为：“1”、“11”、“1010”、“01001011”等等。同样的，也可以使用文字字符或数据串的形式表示是否加载PSX机箱管理器；当用文字字符形式表示是否加载PSX机箱管理器时，形如“已加载”；当用数据串的形式表示是否加载PSX机箱管理器时，数据串可以为1位、2位、4位、8位等等，其位数不同表现形式也不同，根据上述描述，每个位数举一个例子进行表示，分别与上述位数的顺序一一对应，表示为：“0”、“10”、“1100”、“11010011”等等，且可以用数据串中数字1与数字0的个数多少来确定是否加载PSX机箱管理器，以上仅为众多实施例中的一种，并不对驱动接口的驱动类型的表现形式以及是否加载PSX机箱管理器的表现形式做出限定，可根据具体实施场景确定其实施方式。在上述实施例的基础上，作为一种更优的实施例，在加载与机型所对应的pm80xx.ko和/或switchtec.ko之后，还包括：S27：生成表征pm80xx.ko和/或switchtec.ko加载成功的信息。为了提示用户pm80xx.ko和/或switchtec.ko加载成功，应该输出提示信息，该提示信息的表现形式可以用文字字符的形式表示，也可以用数据串的形式表示；当用文字字符形式表示提示信息时，形如“成功”；当用数据串的形式表示提示信息时，数据串可以为1位、2位、4位、8位等等，其位数不同表现形式也不同，根据上述描述，每个位数举一个例子进行表示，分别与上述位数的顺序一一对应，表示为：“1”、“11”、“1001”、“01101001”等等。以上仅为众多实施例中的一种，并不对提示信息的表现形式做出限定，可根据具体实施场景确定其实施方式。在上述实施例的基础上，作为一种更优的实施例，在通过接口刷写VPD之后，还包括：S28：判断VPD是否刷写成功。若是，则结束。若否，则返回至步骤S10：获取输入参数。为了确保VPD刷写成功，要对VPD是否刷写成功进行判断，若是刷写成功，则结束该进程；若刷写未成功，则重新获取输入参数，进行重新刷写。其中，表征VPD是否刷写成功的信息，可以用文字字符的形式表示，也可以用数据串的形式表示；当用文字字符形式表示VPD是否刷写成功的信息时，形如“成功”；当用数据串的形式表示VPD是否刷写成功的信息时，数据串可以为1位、2位、4位、8位等等，其位数不同表现形式也不同，根据上述描述，每个位数举一个例子进行表示，分别与上述位数的顺序一一对应，表示为：“1”、“11”、“1001”、“01101001”等等。以上仅为众多实施例中的一种，并不对VPD是否刷写成功的信息的表现形式做出限定，可根据具体实施场景确定其实施方式。需要说明的是，在本申请中，VPD刷写方法按照微服务进行设计，可以分为微服务编排层和微服务接口层；微服务编排层负责对工具输入参数进行校验，根据输入参数调用相应微服务接口，并对微服务接口返回值进行处理；微服务接口层实现VPD文件MD5校验、驱动检查及加载、VPD刷写、VPD回读校验、jbof设备查询、jbod设备查询等功能模块调用接口。微服务编排层根据校验后的输入参数，调用对应接口，分别实现以下功能：PSX设备查询：调用PSX驱动检查及加载接口，加载PSX设备的驱动；调用PSX设备查询接口，查询当前机器中的PSX设备，并在屏幕中打印查询到的设备号，以供用户使用。OSES设备查询：调用OSES驱动检查及加载接口，加载OSES设备的驱动；调用OSES设备查询接口，查询当前机器中的OSES设备，加载OSES设备的驱动设备，并在屏幕中打印查询到的设备号，以供用户使用。背板VPD刷写：调用OSES驱动检查及加载接口，加载OSES设备的驱动；调用OSES设备查询接口，查询当前机器中的OSES设备，与入参输入的OSE设备号进行匹配校验；调用背板VPD刷写OSES接口，对背板VPD文件进行刷写；调用背板VPD回读校验OSES接口，对刷写的VPD进行校验。背板VPD刷写：调用PSX驱动检查及加载接口，加载PSX设备的驱动；调用PSX设备查询接口，查询当前机器中的PSX设备，与入参输入的OSES设备号进行匹配校验；调用背板VPD刷写PSX接口，对背板VPD文件进行刷写；调用背板VPD回读校验PSX接口，对刷写的VPD进行校验。主板/背板VPD刷写：调用主板/背板VPD刷写BMC接口，对主板/背板VPD文件进行刷写；调用主板/背板vpd回读校验BMC接口，对刷写的VPD进行校验。微服务接口层分为10个接口模块，供微服务编排层调用，10个接口分别为：驱动检查及加载接口、MD5校验接口、OSES设备查询接口、PSX设备查询接口、背板VPD刷写OSES接口、背板VPD回读校验OSES接口、背板VPD刷写PSX接口、背板VPD回读校验PSX接口、VPD刷写BMC接口、VPD回读校验BMC接口。接口分别实现以下作用：驱动检查及加载接口：接口根据输入机型、驱动类型，检查PSX所用驱动switchtec或者OSES所用驱动pm80xx是否加载，若没有加载，调用相应机型适配的switchtec.ko或者pm80xx.ko进行加载。接口输入参数为机型、驱动类型。接口返回驱动加载成功或失败结果。MD5校验接口：接口实现对指定VPD文件、指定VPD文件MD5值进行校验的功能。接口返回校验成功或失败结果。OSES设备查询接口：接口实现对OSES设备的查询，OSES设备主要指jbod设备、搭载OSES的独立机头设备。接口返回OSES设备列表。PSX设备查询接口：接口实现对PSX设备的查询，PSX设备主要指jbof设备、搭载PSX的独立机头设备。接口返回PSX设备列表。背板VPD刷写OSES接口：接口通过OSES-sg接口实现对设备背板VPD的刷写。背板VPD双片EEPROM都刷写。接口输入参数为OSES设备号、OSES路径。接口返回刷写成功或失败结果。背板VPD回读校验OSES接口：接口通过OSES-sg接口实现对背板VPD的读取，并将读取到的VPD与刷写的VPD进行比较校验的功能。背板VPD双片EEPROM都校验。接口输入参数为OSES设备号、VPD路径。接口返回校验成功或失败结果。背板VPD刷写PSX接口：接口通过PSX-sg接口实现对背板VPD的刷写。背板VPD双片EEPROM都刷写。接口输入参数为PSX设备号、VPD路径。接口返回刷写成功或失败结果。背板VPD回读校验PSX接口：接口通过PSX-sg接口实现对背板VPD的读取，并将读取到的VPD与刷写的VPD进行比较校验的功能。背板VPD双片EEPROM都校验。接口输入参数为PSX设备号、VPD路径。接口返回校验成功或失败结果。VPD刷写BMC接口：接口通过BMC接口实现对主板/背板VPD的刷写。只对本控主板VPD进行烧写。背板VPD双片EEPROM都刷写。接口输入参数为机型、VPD类型、VPD路径。接口返回刷写成功或失败结果。VPD回读校验BMC接口：接口通过BMC接口实现对主板/背板VPD的读取，并将读取到的VPD与刷写的VPD进行比较校验的功能。接口输入参数为机型、VPD类型、VPD路径。接口返回校验成功或失败结果。在上述实施例中，对于VPD刷写装置进行了详细描述，本申请还提供VPD刷写装置对应的实施例。需要说明的是，本申请从两个角度对装置部分的实施例进行描述，一种是基于功能模块的角度，另一种是基于硬件的角度。图3为本申请实施例所提供的一种VPD刷写装置结构图。如图3所示，本申请还提供了一种VPD刷写装置，包括：第一获取模块，用于获取输入参数，输入参数为服务器的机型；第一判断模块，用于判断机型是否与识别得到的服务器的识别机型匹配；若否，则结束；若是，则触发第二获取模块，用于获取预先存储的表征机型与识别机型匹配的校验参数；第一调用模块，用于调用与校验参数对应的接口；刷写模块，用于通过接口刷写VPD。此外，VPD刷写装置还包括以下模块：第二判断模块，用于判断输入参数是否为EEPROM主板类型或EEPROM背板类型；若是，则触发第二调用模块，用于调用MD5校验接口对VPD进行校验；若否，则进入判断机型是否与识别得到的服务器的识别机型匹配的步骤。第三判断模块，用于判断是否通过MD5校验接口对VPD校验成功；若是，则进入获取预先存储的表征机型与识别机型匹配的校验参数的步骤；若否，则触发第一生成模块，用于生成报错日志并结束。第三获取模块，用于获取驱动接口的驱动类型；第四判断模块，用于根据机型和驱动类型判断是否加载PSX机箱管理器；若是，则进入通过接口刷写VPD的步骤；若否，则触发加载模块，用于加载与机型所对应的pm80xx.ko和/或switchtec.ko。第二生成模块，用于生成表征pm80xx.ko和/或switchtec.ko加载成功的信息。第五判断模块，用于判断VPD是否刷写成功；若是，则结束；若否，则返回至获取输入参数的步骤。由于装置部分的实施例与方法部分的实施例相互对应，因此装置部分的实施例请参见方法部分的实施例的描述，这里暂不赘述。图4为本申请实施例所提供的一种VPD刷写设备结构图，如图4所示，VPD刷写设备包括：存储器40，用于存储计算机程序；处理器41，用于执行计算机程序时实现如上述实施例中所提到的VPD刷写方法的步骤。本实施例提供的VPD刷写设备可以包括但不限于智能手机、平板电脑、笔记本电脑或台式电脑等。其中，处理器41可以包括一个或多个处理核心，比如4核心处理器、8核心处理器等。处理器41可以采用数字信号处理、现场可编程门阵列、可编程逻辑阵列中的至少一种硬件形式来实现。处理器41也可以包括主处理器和协处理器，主处理器是用于对在唤醒状态下的数据进行处理的处理器，也称中央处理器；协处理器是用于对在待机状态下的数据进行处理的低功耗处理器。在一些实施例中，处理器41可以集成有图像处理器，GPU用于负责显示屏所需要显示的内容的渲染和绘制。一些实施例中，处理器41还可以包括人工智能处理器，该AI处理器用于处理有关机器学习的计算操作。存储器40可以包括一个或多个计算机可读存储介质，该计算机可读存储介质可以是非暂态的。存储器40还可包括高速随机存取存储器，以及非易失性存储器，比如一个或多个磁盘存储设备、闪存存储设备。本实施例中，存储器40至少用于存储以下计算机程序，其中，该计算机程序被处理器41加载并执行之后，能够实现前述任意一个实施例公开的VPD刷写方法的相关步骤。另外，存储器40所存储的资源还可以包括操作系统和数据等，存储方式可以是短暂存储或者永久存储。其中，操作系统可以包括Windows、Unix、Linux等。数据可以包括但不限于VPD刷写方法等。在一些实施例中，VPD刷写设备还可包括有显示屏、输入输出接口、通信接口、电源以及通信总线。本领域技术人员可以理解，图4中示出的结构并不构成对VPD刷写设备的限定，可以包括比图示更多或更少的组件。本申请实施例提供的VPD刷写设备，包括存储器40和处理器41，处理器41在执行存储器40存储的程序时，能够实现VPD刷写方法。最后，本申请还提供一种计算机可读存储介质对应的实施例。计算机可读存储介质上存储有计算机程序，计算机程序被处理器执行时实现如上述方法实施例中记载的步骤。可以理解的是，如果上述实施例中的方法以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读取存储介质中。基于这样的理解，本申请的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的全部或部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，执行本申请各个实施例所述方法的全部或部分步骤。而前述的存储介质包括：U盘、移动硬盘、只读存储器，ROM、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。以上对本申请所提供的一种VPD刷写方法、装置、设备及介质进行了详细介绍。说明书中各个实施例采用递进的方式描述，每个实施例重点说明的都是与其他实施例的不同之处，各个实施例之间相同相似部分互相参见即可。对于实施例公开的装置而言，由于其与实施例公开的方法相对应，所以描述的比较简单，相关之处参见方法部分说明即可。应当指出，对于本技术领域的普通技术人员来说，在不脱离本申请原理的前提下，还可以对本申请进行若干改进和修饰，这些改进和修饰也落入本申请权利要求的保护范围内。还需要说明的是，在本说明书中，诸如第一和第二等之类的关系术语仅仅用来将一个实体或者操作与另一个实体或操作区分开来，而不一定要求或者暗示这些实体或操作之间存在任何这种实际的关系或者顺序。而且，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括所述要素的过程、方法、物品或者设备中还存在另外的相同要素。
