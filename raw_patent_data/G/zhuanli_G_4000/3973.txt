标题title
消息的传输方法及装置、存储介质及电子装置
摘要abst
本申请实施例提供了一种消息的传输方法及装置、存储介质及电子装置，其中，该消息的传输方法包括：获取目标内存地址，其中，所述目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；根据基地址和地址单元大小，确定与所述目标内存地址对应的地址标识的标识值，得到目标标识值；将所述目标标识值写入到所述目标传输消息的消息结构体，并将所述目标传输消息传输给所述目标传输消息的接收端。通过本申请实施例，解决了相关技术中的进程间通信消息的传输方法存在由于需要传输的消息过长导致的消息传输效率低的问题。
权利要求书clms
1.一种消息的传输方法，其特征在于，包括：获取目标内存地址，其中，所述目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；根据基地址和地址单元大小，确定与所述目标内存地址对应的地址标识的标识值，得到目标标识值；将所述目标标识值写入到所述目标传输消息的消息结构体，并将所述目标传输消息传输给所述目标传输消息的接收端。2.根据权利要求1所述的方法，其特征在于，在所述根据基地址和地址单元大小，确定与所述目标内存地址对应的地址标识的标识值之前，所述方法还包括：获取所述基地址和所述地址单元大小，其中，所述基地址和所述地址单元大小是在进行内存初始化的过程中设置的。3.根据权利要求2所述的方法，其特征在于，所述方法还包括：将缓冲区地址的最小值，设置为所述基地址，以及将存储地址件的最小单元，设置为所述地址单元大小。4.根据权利要求2所述的方法，其特征在于，所述获取所述基地址和所述地址单元大小，包括：从预设寄存器中读取出所述基地址和所述地址单元大小。5.根据权利要求1所述的方法，其特征在于，所述根据基地址和地址单元大小，确定与所述目标内存地址对应的地址标识的标识值，得到目标标识值，包括：确定所述目标内存地址与所述基地址之间的地址偏移量，得到目标偏移量；根据所述目标偏移量和所述地址单元大小，确定与所述目标内存地址对应的地址标识的所述目标标识值。6.根据权利要求5所述的方法，其特征在于，所述根据所述目标偏移量和所述地址单元大小，确定与所述目标内存地址对应的地址标识的所述目标标识值，包括：将所述目标偏移量除以所述地址单元大小所得到的商，确定为与所述目标内存地址对应的地址标识的所述目标标识值。7.根据权利要求1所述的方法，其特征在于，所述方法还包括：根据所述目标缓冲区的缓冲区大小和所述地址单元大小，确定与所述目标内存地址对应的缓冲区长度参数的参数值，得到目标长度值；所述将所述目标标识值写入到所述目标传输消息的消息结构体，包括：将所述目标标识值和所述目标长度值写入到所述目标传输消息的消息结构体。8.根据权利要求7所述的方法，其特征在于，所述根据所述目标缓冲区的缓冲区大小和所述地址单元大小，确定与所述目标内存地址对应的缓冲区长度参数的参数值，得到目标长度值，包括：将所述目标缓冲区的缓冲区大小除以所述地址单元大小所得到的商，确定为与所述目标内存地址对应的缓冲区长度参数的所述目标长度值。9.根据权利要求7所述的方法，其特征在于，所述将所述目标标识值和所述目标长度值写入到所述目标传输消息的消息结构体，包括：按照所述目标标识值所占的比特数和所述目标长度值所占用的比特数，将所述目标标识值和所述目标长度值写入到所述目标传输消息的消息结构体。10.根据权利要求9所述的方法，其特征在于，所述方法还包括：根据所述目标内存地址所占用的比特数，动态调整所述目标标识值所占的比特数和所述目标长度值所占的比特数。11.根据权利要求10所述的方法，其特征在于，所述根据所述目标内存地址所占用的比特数，动态调整所述目标标识值所占的比特数和所述目标长度值所占的比特数，包括：将所述目标内存地址所占用的比特数与预设比例的乘积，确定为所述目标标识值所占的比特数，将所述目标内存地址所占用的比特数与所述目标标识值所占的比特数的差值，确定为所述目标长度值所占的比特数。12.根据权利要求1所述的方法，其特征在于，所述根据基地址和地址单元大小，确定与所述目标内存地址对应的地址标识的标识值，得到目标标识值，包括：在所述目标内存地址包含多个内存地址的情况下，根据所述基地址和所述地址单元大小，分别确定与所述多个内存地址中的每个内存地址对应的地址标识的标识值，得到与所述每个内存地址对应的标识值，其中，所述目标标识值包括与所述每个内存地址对应的标识值。13.根据权利要求1至12中任一项所述的方法，其特征在于，所述获取目标内存地址，包括：获取所述目标缓冲区的绝对地址，得到所述目标内存地址。14.一种消息的传输方法，其特征在于，包括：接收发送端发送的目标传输消息；从所述目标传输消息的消息结构体中提取出目标标识值，其中，所述目标标识值是与目标内存地址对应的地址标识的标识值；根据所述目标标识值、基地址和地址单元大小，确定出所述目标内存地址。15.根据权利要求14所述的方法，其特征在于，所述从所述目标传输消息的消息结构体中提取出目标标识值，包括：确定所述目标标识值所占的比特数和目标长度值所占的比特数，其中，所述目标长度值是与所述目标内存地址对应的缓冲区长度参数的参数值，所述目标长度值用于标识与所述目标内存地址所对应的目标缓冲区的缓冲区大小；根据所述目标标识值所占的比特数和所述目标长度值所占的比特数，从所述目标传输消息的消息结构体中提取出所述目标标识值和所述目标长度值。16.根据权利要求14所述的方法，其特征在于，所述根据所述目标标识值、基地址和地址单元大小，确定出所述目标内存地址，包括：将所述目标标识值与所述地址单元大小的乘积、与所述基地址的和，确定为所述目标内存地址。17.根据权利要求14所述的方法，其特征在于，在所述根据所述目标标识值、基地址和地址单元大小，确定出所述目标内存地址之后，所述方法还包括：对所述目标内存地址进行合法性检查，得到合法性检查结果；在所述合法性检查结果指示所述目标内存地址合法的情况下，保存所述目标内存地址，并释放所述目标传输消息；在所述合法性检查结果指示所述目标内存地址不合法的情况下，向所述发送端发送消息异常指示信息，并释放所述目标传输消息，其中，所述消息异常指示信息用于指示所述目标传输消息中所传输的内存地址异常。18.根据权利要求17所述的方法，其特征在于，所述对所述目标内存地址进行合法性检查，得到合法性检查结果，包括：在所述目标内存地址位于预设地址范围内的情况下，确定所述目标内存地址合法；在所述目标内存地址位于预设地址范围以外的情况下，确定所述目标内存地址不合法。19.一种消息的传输装置，其特征在于，包括：第一获取单元，用于获取目标内存地址，其中，所述目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；第一确定单元，用于根据基地址和地址单元大小，确定与所述目标内存地址对应的地址标识的标识值，得到目标标识值；第一执行单元，用于将所述目标标识值写入到所述目标传输消息的消息结构体，并将所述目标传输消息传输给所述目标传输消息的接收端。20.一种消息的传输装置，其特征在于，包括：接收单元，用于接收发送端发送的目标传输消息；提取单元，用于从所述目标传输消息的消息结构体中提取出目标标识值，其中，所述目标标识值是与目标内存地址对应的地址标识的标识值；第三确定单元，用于根据所述目标标识值、基地址和地址单元大小，确定出所述目标内存地址。21.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质中存储有计算机程序，其中，所述计算机程序被处理器执行时实现所述权利要求1至18任一项中所述的方法的步骤。22.一种电子设备，包括存储器、处理器以及存储在所述存储器上并可在所述处理器上运行的计算机程序，其特征在于，所述处理器执行所述计算机程序时实现所述权利要求1至18任一项中所述的方法的步骤。
说明书desc
技术领域本申请实施例涉及计算机领域，具体而言，涉及一种消息的传输方法及装置、存储介质及电子装置。背景技术目前，对于不同FU之间的通信，通常采用进程间通信的方式，以IPC消息作为基本单元。每个IPC消息包含若干个参数，其中内存地址所占的比特数较多。然而，随着NAND技术的发展，一个多plane读写消息需要传递的内存地址的数量越来越多，IPC消息的长度也相应增大，导致读写IPC消息时消耗的资源增加，从而影响了消息的传输效率。由此可见，相关技术中的进程间通信消息的传输方法，存在由于需要传输的消息过长导致的消息传输效率低的问题。发明内容本申请实施例提供了一种消息的传输方法及装置、存储介质及电子装置，以至少解决相关技术中的进程间通信消息的传输方法存在由于需要传输的消息过长导致的消息传输效率低的问题。根据本申请的一个实施例，提供了一种消息的传输方法，包括：获取目标内存地址，其中，所述目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；根据基地址和地址单元大小，确定与所述目标内存地址对应的地址标识的标识值，得到目标标识值；将所述目标标识值写入到所述目标传输消息的消息结构体，并将所述目标传输消息传输给所述目标传输消息的接收端。根据本申请实施例的另一个方面，还提供了一种消息的传输方法，包括：接收发送端发送的目标传输消息；从所述目标传输消息的消息结构体中提取出目标标识值，其中，所述目标标识值是与目标内存地址对应的地址标识的标识值；根据所述目标标识值、基地址和地址单元大小，确定出所述目标内存地址。根据本申请的又一个实施例，提供了一种消息的传输装置，包括：第一获取单元，用于获取目标内存地址，其中，所述目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；第一确定单元，用于根据基地址和地址单元大小，确定与所述目标内存地址对应的地址标识的标识值，得到目标标识值；第一执行单元，用于将所述目标标识值写入到所述目标传输消息的消息结构体，并将所述目标传输消息传输给所述目标传输消息的接收端。根据本申请的又一个实施例，还提供了一种消息的传输装置，包括：接收单元，用于接收发送端发送的目标传输消息；提取单元，用于从所述目标传输消息的消息结构体中提取出目标标识值，其中，所述目标标识值是与目标内存地址对应的地址标识的标识值；第三确定单元，用于根据所述目标标识值、基地址和地址单元大小，确定出所述目标内存地址。根据本申请的又一个实施例，还提供了一种计算机可读存储介质，所述计算机可读存储介质中存储有计算机程序，其中，所述计算机程序被设置为运行时执行上述任一项方法实施例中的步骤。根据本申请的又一个实施例，还提供了一种电子设备，包括存储器和处理器，所述存储器中存储有计算机程序，所述处理器被设置为运行所述计算机程序以执行上述任一项方法实施例中的步骤。通过本申请实施例，采用对消息内存储的内存地址的存储格式进行重构的方式，通过获取目标内存地址，其中，目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值，得到目标标识值；将目标标识值写入到目标传输消息的消息结构体，并将目标传输消息传输给目标传输消息的接收端，由于消息内存储的不是原始的内存地址，而是根据预先定义的基地址和地址单元大小所确定出的内存地址对应的标识值，可以有效压缩内存地址在消息内的占用空间，可以实现缩短需要传输的消息的长度的目的，达到提高消息传输效率的技术效果，进而解决了相关技术中的进程间通信消息的传输方法存在由于需要传输的消息过长导致的消息传输效率低的问题。附图说明图1是根据本申请实施例的一种消息的传输方法的硬件环境示意图；图2是根据本申请实施例的一种消息的传输方法的流程图；图3是根据本申请实施例的另一种消息的传输方法的流程图；图4是根据本申请实施例的一种消息的传输装置的结构框图；图5是根据本申请实施例的另一种消息的传输装置的结构框图。具体实施方式下文中将参考附图并结合实施例来详细说明本申请的实施例。需要说明的是，本申请实施例的说明书和权利要求书及上述附图中的术语“第一”、“第二”等是用于区别类似的对象，而不必用于描述特定的顺序或先后次序。本申请实施例中所提供的方法实施例可以在移动终端、计算机终端或者类似的运算装置中执行。以运行在计算机终端上为例，图1是根据本申请实施例的一种消息的传输方法的硬件环境示意图。如图1所示，计算机终端可以包括一个或多个处理器102和用于存储数据的存储器104，其中，上述计算机终端还可以包括用于通信功能的传输设备106以及输入输出设备108。本领域普通技术人员可以理解，图1所示的结构仅为示意，其并不对上述计算机终端的结构造成限定。例如，计算机终端还可包括比图1中所示更多或者更少的组件，或者具有与图1所示不同的配置。存储器104可用于存储计算机程序，例如，应用软件的软件程序以及模块，如本申请实施例中的消息的传输方法对应的计算机程序，处理器102通过运行存储在存储器104内的计算机程序，从而执行各种功能应用以及数据处理，即实现上述的方法。存储器104可包括高速随机存储器，还可包括非易失性存储器，如一个或者多个磁性存储装置、闪存、或者其他非易失性固态存储器。在一些实例中，存储器104可进一步包括相对于处理器102远程设置的存储器，这些远程存储器可以通过网络连接至移动终端。上述网络的实例包括但不限于互联网、企业内部网、局域网、移动通信网及其组合。传输设备106用于经由一个网络接收或者发送数据。上述的网络具体实例可包括计算机终端的通信供应商提供的无线网络。在一个实例中，传输设备106包括一个网络适配器，其可通过基站与其他网络设备相连从而可与互联网进行通讯。在一个实例中，传输设备106可以为射频模块，其用于通过无线方式与互联网进行通讯。根据本申请实施例的一个方面，提供了一种消息的传输方法，以由计算机终端来执行本实施例中的消息的传输方法为例，图2是根据本申请实施例的一种消息的传输方法的流程图，如图2所示，该流程包括如下步骤：步骤S202，获取目标内存地址，其中，目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址。本实施例中的消息的传输方法可以应用到同一设备内的不同功能单元FU之间进行通信的场景。对于固件FW，不同FU之间的通信主要采用进程间通信方式，通过FU定义不同管道FIFO。IPC消息作为进程间通信的基本单元，其长度一般以Dword为单位。每个IPC消息可以包含若干个Dword，其中包含了消息源、消息目的地、消息唯一标识符、消息类型、消息地址、需要传递的多个buffer地址等参数。在本实施例中，在不同功能单元间进行消息传输之前，可以先获取目标内存地址。这里，目标内存地址可以为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址，即前述buffer地址。目标传输消息可以是前述IPC消息。步骤S204，根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值，得到目标标识值。在IPC消息中，除buffer地址外其他参数较为简单，所占比特数较少。64位操作系统中一个绝对的buffer地址包含64bit。典型的结构体如下，其中，buffer地址占用9个Dwords：typedef union{struct {u32 msgType : 8;u32 flashChanQ : 4;u32 chan : 5;u32 outMsgQ : 4; u32 reservedDW0B31_21 : 11;u32 tag : 16;u32 pageType : 3;u32 read_type : 4;u32 page_load_flag : 1;u32 fast_read_flag : 1;u32 inject_err_type : 3;u32 reservedDW1B31_28 : 4;u32 data_frame_offset : 11;u32 data_frame_length : 11;u32 buf_alloc_flag : 1;u32 plane_bitmap : 4;u32 df_bitmap : 16;u32 reservedDW4B31_20 : 12;u32 read_refs;u32 eccCodeRateIndex : 4;u32 reservedDW7B7_5 : 4;u32 maxIter : 8;u32 lLR0 : 8;u32 lLR1 : 8;u32 buffer_addr;}; u32 dw;} flash_read_t 。不同FU与NCM进程通信最基本的操作有读、写、擦等，其中，读、写的快慢至关重要，决定了产品的基本性能。然而，随着NAND技术的不断发展，一个多plane读写消息需要传递更多个buffer地址，此时，IPC消息长度不得不增大很多。而进程间通信时，IPC消息需要在一个模块写入，并从另一个模块读出，消息长度增大后，读写IPC消息时会消耗较多的CPU资源。此外，IPC消息在不同FU间传输过程中有时需要多层转发，过长的IPC消息在消息传输时，也会给总线造成很大负担，进而影响传输性能和传输效率。为了至少解决部分上述问题，在本实施例中，可以对目标传输消息中记录的内存地址的格式进行重构，不再直接记录完整的内存地址，而是通过记录内存地址对应的标识值，实现对消息结构中内存地址占用的Dword数的压缩和优化。在本实施例中，可以根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值，得到目标标识值。这里，基地址可以作为内存地址的起始地址。目标标识值可以用于标识目标内存地址。可选地，目标标识值可以是根据目标内存地址的大小与基地址和地址单元大小有关。基地址和地址单元大小可以是预先设定的固定值，即，每个内存地址对应的基地址和地址单元大小可以是一样的。可选地，基地址和地址单元的设定可以是在每次进行消息传输之前进行一次基地址和地址单元的设定，也可以是在如内存初始化时等准备阶段完成的，对应地，不论进行多少次消息传输，基地址和地址单元的设定可以只需要进行一次。步骤S206，将目标标识值写入到目标传输消息的消息结构体，并将目标传输消息传输给目标传输消息的接收端。对于待传输的目标传输消息可以包括消息结构体，消息结构体是用于写入消息中所携带的信息的结构体，在得到目标标识值之后，可以将目标标识值写入到目标传输消息的消息结构体，并将目标传输消息传输给目标传输消息的接收端。传输目标传输消息的方式可以包括传输目标传输消息的消息结构体，还可以包括传输目标传输消息除了消息结构体以外的其他信息。通过将内存地址对应的标识值写入到传输消息的消息结构体中，相较于传输直接地址的方式，可以实现缩小内存地址在传输消息中所占的比特数的目的，从而可以减小传输消息的长度，提高带宽利用率。这里，目标传输消息的消息结构体中可以包含多种参数，多种参数的顺序和位置可以是预先设定的。多种参数中的每种参数可以对应于该消息结构体中的一个字段，每种参数对应于一个或多个比特位，即，占用一个或多个比特位，每种参数所占用的比特位数可以是固定的，也可以是针对不同传输消息对应设置的。目标内存地址可以属于多种参数中的一种，可以在消息结构体中与目标内存地址对应的写入位置写入目标标识值。通过上述步骤，通过获取目标内存地址，其中，目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值，得到目标标识值；将目标标识值写入到目标传输消息的消息结构体，并将目标传输消息传输给目标传输消息的接收端，可以解决相关技术中的进程间通信消息的传输方法存在由于需要传输的消息过长导致的消息传输效率低的问题，达到提高消息传输性能的技术效果。在一个示范性实施例中，在根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值之前，上述方法还包括：获取基地址和地址单元大小，其中，基地址和地址单元大小是在进行内存初始化的过程中设置的。在确定目标标识值之前，可以先获取基地址和地址单元大小。这里，基地址和地址单元大小可以是在进行内存初始化的过程中设置的。内存初始化指的是将管理多个进程的数据的内存进行的初始化。通过本实施例，在内存初始化的过程中完成对基地址和地址单元的设置，可以避免浪费单独的资源进行基地址和地址单元的设定，从而提高资源的利用率。在一个示范性实施例中，上述方法还包括：将缓冲区地址的最小值，设置为基地址，以及将存储地址间的最小单元，设置为地址单元大小。在设置基地址和地址单元大小时，可以将缓冲区地址的最小值设置为基地址，将存储地址间的最小单元设置为地址单元大小。例如，内存初始化时定义BaseAddr、UnitSize，BaseAddr采用所用buffer地址的最小值，UnitSize为存储地址间的最小单元。可选地，地址单元大小为地址单元的长度，将存储地址间的最小单元，设置为地址单元大小是指：将存储地址间的最小单元的大小，设置为地址单元大小，地址单元为存储地址间的最小单元。通过本实施例，将缓冲区地址的最小值设置为基地址，将存储地址间的最小单元设置为地址单元大小，可以提高基地址和地址单元大小对所有内存地址的适用性。在一个示范性实施例中，获取基地址和地址单元大小，包括：从预设寄存器中读取出基地址和地址单元大小。在本实施例中，对于基地址和地址单元大小，在硬件支持的条件下，可以将基地址和地址单元大小在定义完成后存储在预设寄存器中，例如，在对内存进行初始化时，设置基地址和地址单元大小，并将设置的基地址和地址单元大小存储到预设寄存器中。对应地，在进行消息传输时，可以从预设寄存器中读取出基地址和地址单元大小。这里，预设寄存器可以是预先设定的、可以包含具有存储功能的触发器的寄存器。预设寄存器可以仅在内存初始化时允许被设置、修改等，或者，在进行消息传输的过程中不允许被设置、修改等。在此情况下，在将基地址和地址单元大小存储到预设寄存器之后，在不同的发送端想要进行传输消息传输时，均可从预设寄存器中读取基地址和地址单元大小。可选地，为避免信息获取冲突，预设寄存器在同一时间仅允许一个进程进行数据读取，同时，在读取数据时不允许其他进程从预设寄存器中读取数据。或者，预设寄存器在同一时间也可以允许多个进程进行数据读取，此时可以通过一种或多个方式避免数据读取冲突，比如，预设寄存器中的信息仅允许读取，不允许修改等。本实施例中对此不做限定。需要说明的是，不同的进程在进行传输消息传输时，均可从预设寄存器中读取出基地址和地址单元大小，不同进程所读取到的基地址和地址单元大小可以是相同的。通过本实施例，通过从寄存器中读取基地址和地址单元大小，可以便于获取基地址和地址单元大小，从而提高信息获取的便捷性。在一个示范性实施例中，根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值，得到目标标识值，包括：确定目标内存地址与基地址之间的地址偏移量，得到目标偏移量；根据目标偏移量和地址单元大小，确定与目标内存地址对应的地址标识的目标标识值。由于内存地址的实际地址可以由基地址和偏移地址所确定，在确定目标标识值时，考虑基地址的独特作用，可以先确定目标内存地址与基地址之间的地址偏移量，得到目标偏移量，再根据目标偏移量和地址单元大小，确定与目标内存地址对应的地址标识的目标标识值。这里的目标偏移量可以是目标内存地址与基地址的大小的差值，即，前述偏移地址。通过本实施例，根据内存地址和基地址的偏移量与地址单元大小的关系确定内存地址对应的标识值，可以提高标识值与内存地址之间的关联性，便于传输消息的接收端内存地址的获取。在一个示范性实施例中，根据目标偏移量和地址单元大小，确定与目标内存地址对应的地址标识的目标标识值，包括：将目标偏移量除以地址单元大小所得到的商，确定为与目标内存地址对应的地址标识的目标标识值。在本实施例中，由于地址单元大小可以是存储地址间的最小单元，可以认为存储的每个地址占用整数数量的地址单元，即，每个地址的大小是地址单元大小的整数倍。可以将目标偏移量除以地址单元大小所得到的商，确定为与目标内存地址对应的地址标识的目标标识值。例如，发送端获取到BufferAddr后，计算该BufferAddr相对于基地址的相对偏移量，偏移值bufferId=/UnitSize，运算后得到的bufferId一般不超过12bits。通过本实施例，根据内存地址和基地址的偏移量与地址单元大小的商确定内存地址对应的标识值，可以提高确定标识值的便捷性。在一个示范性实施例中，上述方法还包括：根据目标缓冲区的缓冲区大小和地址单元大小，确定与目标内存地址对应的缓冲区长度参数的参数值，得到目标长度值。对应地，将目标标识值写入到目标传输消息的消息结构体，包括：将目标标识值和目标长度值写入到目标传输消息的消息结构体。为了便于目标传输消息的接收端可以准确确定与目标内存地址对应的缓冲区完整信息，可以将目标内存地址对应的长度值也写入目标传输消息的消息结构体中。在本实施例中，可以根据目标缓冲区的缓冲区大小和地址单元大小，确定与目标内存地址对应的缓冲区长度参数的参数值，得到目标长度值。在将目标标识值写入到目标传输消息的消息结构体的同时，可以将目标长度值也写入到目标传输消息的消息结构体中。例如，发送端可以将获取到的bufferId、bufferLength填进IPC消息结构体内。可选地，目标标识值和目标长度值可以作为一个内存地址参数在目标传输消息的消息结构体中前后相邻。可以是目标标识值在前，目标长度值在后，也可以是目标长度值在前，目标标识值在后，本实施例对此不做限定。这里，地址标识可以用于标识缓冲区的内存地址，而缓冲区长度参数可以用于标识缓冲区的缓冲区大小，通过这两个参数，可以确定出对应的缓冲区。通过本实施例，将内存地址对应的长度值与内存地址对应的标识值一起写入消息结构体中，可以提高缓冲区定位的边界性，提供信息传输的准确性。在一个示范性实施例中，根据目标缓冲区的缓冲区大小和地址单元大小，确定与目标内存地址对应的缓冲区长度参数的参数值，得到目标长度值，包括：将目标缓冲区的缓冲区大小除以地址单元大小所得到的商，确定为与目标内存地址对应的缓冲区长度参数的目标长度值。在本实施例中，在确定目标内存地址对应的长度值时，可以将目标缓冲区的缓冲区大小除以地址单元大小所得到的商，确定为与目标内存地址对应的缓冲区长度参数的目标长度值。这里，内存地址对应的长度值是指内存地址对应的缓冲区长度参数的长度值，即，可以用于标识内存地址对应的缓冲区的大小。例如，bufferLength可以根据需要传输的buffer大小除以UnitSize获取，一般所占bits较小。通过本实施例，将缓冲区的缓冲区大小与地址单元大小的商确定为消息结构体中写入的长度值，可以便于接收端根据预设的地址单元大小确定完整的缓冲区信息，提高消息传输的准确性。在一个示范性实施例中，将目标标识值和目标长度值写入到目标传输消息的消息结构体，包括：按照目标标识值所占的比特数和目标长度值所占用的比特数，将目标标识值和目标长度值写入到目标传输消息的消息结构体。对于确定的目标标识值和目标长度值，可以分别确定两者在目标传输消息的消息结构体中的比特数，按照目标标识值所占的比特数和目标长度值所占用的比特数，将目标标识值和目标长度值写入到目标传输消息的消息结构体。通过本实施例，按照标识值和长度值所占的比特数完成在消息结构体中的写入，可以有效减小内存地址在消息结构体中占用的比特数，实现减小消息长度的目的。在一个示范性实施例中，上述方法还包括：根据目标内存地址所占用的比特数，动态调整目标标识值所占的比特数和目标长度值所占的比特数。对于目标标识值和目标长度值在目标传输消息的消息结构体中所占的比特数，可以根据实际场景动态调整。在本实施例中，可以根据目标内存地址所占用的比特数，动态调整目标标识值所占的比特数和目标长度值所占的比特数。可选地，上述目标标识值所占的比特数和目标长度所占的比特数可以根据当前的传输环境，结合对应的内存地址等参数的大小，由发送端和接收端预先确定目标标识值所占的比特数和目标长度所占的比特数。例如，为方便获取传输消息中携带的信息，一个Dword可以存储两组bufferId和bufferLength，此时在同样消息长度下则可以存放更多地址。通过本实施例，通过动态调整标识值所占比特数和长度值所占比特数，可以实现在不增加消息长度的情况下传输更多的内存地址，从而提高消息结构体的利用率。在一个示范性实施例中，根据目标内存地址所占用的比特数，动态调整目标标识值所占的比特数和目标长度值所占的比特数，包括：将目标内存地址所占用的比特数与预设比例的乘积，确定为目标标识值所占的比特数，将目标内存地址所占用的比特数与目标标识值所占的比特数的差值，确定为目标长度值所占的比特数。对于标识值和长度值所占比特数的动态调整，可以预先设定一个比例，即，预设比例，根据预设比例计算确定标识值所占的比特数和长度值所占的比特数。在本实施例中，可以将目标内存地址所占用的比特数与预设比例的乘积，确定为目标标识值所占的比特数，将目标内存地址所占用的比特数与目标标识值所占的比特数的差值，确定为目标长度值所占的比特数。例如，在将获取到的bufferId、bufferLength填进IPC消息结构体内时，可以根据buffer所占bit数动态调整各自所占的比特数，比如，bufferId占用12bits，bufferLength占用4bits。通过本实施例，通过预设比例实现标识值和长度值所占比特数的动态调整，可以提高调整的效率，从而提高消息传输的效率。在一个示范性实施例中，根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值，得到目标标识值，包括：在目标内存地址包含多个内存地址的情况下，根据基地址和地址单元大小，分别确定与多个内存地址中的每个内存地址对应的地址标识的标识值，得到与每个内存地址对应的标识值，其中，目标标识值包括与每个内存地址对应的标识值。由于NAND技术中的地址信息的数量与NAND的容量呈正相关的关系，IPC消息一般包含多个内存地址，在本实施例中，在目标内存地址包含多个内存地址的情况下，前述目标标识值可以包括与每个内存地址对应的标识值，根据基地址和地址单元大小，可以分别确定与多个内存地址中的每个内存地址对应的地址标识的标识值，得到与每个内存地址对应的标识值。可选地，可以按照前述确定目标标识值的方式，确定内存地址与基地址之间的地址偏移量，将地址偏移量除以地址单元大小所得到的商，确定为与内存地址对应的地址标识的标识值。可选地，在确定与每个内存地址对应的标识值的同时，可以按照前述确定目标长度值的方法，确定出与每个内存地址对应的长度值，并将其与对应的标识值一起写入目标传输消息的消息结构体中。通过本实施例，在存在多个内存地址的情况下，分别根据基地址和地址单元大小确定与每个内存地址对应的标识值，可以提高接收端对多个内存地址的识别率，从而提高内存地址传输的准确性。在一个示范性实施例中，获取目标内存地址，包括：获取目标缓冲区的绝对地址，得到目标内存地址。为了避免消息传输过程中的内存地址因断链等原因出现地址失效的情况发生，在本实施例中，目标传输消息中传输的内存地址可以是绝对地址，即文件的绝对位置。获取目标内存地址可以是指获取目标缓冲区的绝对地址。通过本实施例，获取绝对地址作为待传输的内存地址，可以避免因连接位置的改变导致地址失效，可以提高内存地址传输的有效性。根据本申请实施例的另一个方面，还提供了一种消息的传输方法，其可以是用于接收并处理通过前述实施例中提供的消息的传输方法所产生并发送的传输消息。以由计算机终端来执行本实施例中的消息的传输方法为例，图3是根据本申请实施例的另一种消息的传输方法的流程图，如图3所示，该流程包括如下步骤：步骤S302，接收发送端发送的目标传输消息。在本实施例中，在进程间通信中，对于一个传输消息的接收端，比如，目标传输消息的接收端，其可以接收发送端发送的目标传输消息。这里，接收到的目标传输消息可以是由发送端生成的、且其消息结构体中写入了目标标识值。步骤S304，从目标传输消息的消息结构体中提取出目标标识值，其中，目标标识值是与目标内存地址对应的地址标识的标识值。在接收端接收到目标传输消息之后，可以从目标传输消息的消息结构体中提取出目标标识值。这里，目标标识值可以是与目标内存地址对应的地址标识的标识值，其可以是从目标传输消息的消息结构体的指定字段或者指定位置提取出的，目标标识值的长度可以是固定的，也可以是可变的，可以基于所占的比特位数、结束标识或者其他信息，从目标传输消息的消息结构体的指定字段或者指定位置提取出的目标标识值。可选地，可以根据提取出的目标标识值确定对应的目标内存地址的地址标识，进而确定发送端想要传输的内存地址。可选地，若消息结构体中同时写入了目标标识值和与目标内存地址对应的长度值，即，目标长度值，在提取出目标标识值的同时，可以提取出对应的目标长度值，以根据目标长度值和目标长度值确定出与目标内存地址对应的缓冲区。步骤S306，根据目标标识值、基地址和地址单元大小，确定出目标内存地址。可选地，接收端可以通过与发送端获取基地址和地址单元大小相同或者类似的方式来获取基地址和地址单元大小，具体的获取方式可以参考前述实施例的描述，本实施例在此不做赘述。在提取出目标标识值之后，可以根据获取到的基地址、地址单元大小，结合目标标识值确定出目标内存地址。确定目标内存地址的方式可以与前述实施例中生成目标内存地址的方式对应。通过上述步骤，通过接收发送端发送的目标传输消息；从目标传输消息的消息结构体中提取出目标标识值，其中，目标标识值是与目标内存地址对应的地址标识的标识值；根据目标标识值、基地址和地址单元大小，确定出目标内存地址，可以解决相关技术中的进程间通信消息的传输方法存在由于需要传输的消息过长导致的消息传输效率低的问题，达到提高消息传输性能的技术效果。在一个示范性实施例中，从目标传输消息的消息结构体中提取出目标标识值，包括：确定目标标识值所占的比特数和目标长度值所占的比特数，其中，目标长度值是与目标内存地址对应的缓冲区长度参数的参数值，目标长度值用于标识与目标内存地址所对应的目标缓冲区的缓冲区大小；根据目标标识值所占的比特数和目标长度值所占的比特数，从目标传输消息的消息结构体中提取出目标标识值和目标长度值。由于目标传输消息中各个参数可以是以不同的位置和比特数写入的消息结构体，在目标传输消息的消息结构体中写入有目标标识值和目标长度值的情况下，提取目标标识值和目标长度值的方式，可以是先确定目标标识值所占的比特数和目标长度值所占的比特数，再根据目标标识值所占的比特数和目标长度值所占的比特数，从目标传输消息的消息结构体中提取出目标标识值和目标长度值。这里，目标长度值是与目标内存地址对应的缓冲区长度参数的参数值，目标长度值用于标识与目标内存地址所对应的目标缓冲区的缓冲区大小。可选地，对于目标标识值所占的比特数和目标长度值所占的比特数，可以是由发送端在发送目标传输消息的同时发送至接收端的，对应地，可以通过发送前述预设比例等方式实现。此外，目标标识值所占的比特数和目标长度值所占的比特数，也可以是接收端和发送端两方在消息传输前共同确定的，即，接收端知道目标标识值所占的比特数和目标长度值所占的比特数，无需发送端告知。通过本实施例，根据标识值所占的比特数和长度值所占的比特数进行标识值和目标长度值的提取，可以提高标识值和长度值获取的准确性。在一个示范性实施例中，根据目标标识值、基地址和地址单元大小，确定出目标内存地址，包括：将目标标识值与地址单元大小的乘积、与基地址的和，确定为目标内存地址。在本实施例中，目标标识值可以为目标内存地址与基地址之间的地址偏移量除以地址单元大小所得到的商，接收端可以将目标标识值与地址单元大小的乘积、与基地址的和，确定为目标内存地址，即，按照计算公式BufferAddr = bufferId*UnitSize+ BaseAddr来确定目标内存地址。通过本实施例，根据标识值与地址单元大小的乘积、与基地址的和确定内存地址，可以在减小目标内存地址在目标传输消息内的比特数的同时，提高目标内存地址传输的准确性。在一个示范性实施例中，在根据目标标识值、基地址和地址单元大小，确定出目标内存地址之后，上述方法还包括：对目标内存地址进行合法性检查，得到合法性检查结果；在合法性检查结果指示目标内存地址合法的情况下，保存目标内存地址，并释放目标传输消息；在合法性检查结果指示目标内存地址不合法的情况下，向发送端发送消息异常指示信息，并释放目标传输消息，其中，消息异常指示信息用于指示目标传输消息中所传输的内存地址异常。为了提高消息传输的安全性，避免因传输的内存地址不合法等情况对接收端造成影响，在本实施例中，在确定出目标内存地址之后，可以对目标内存地址进行合法性检查，并得到合法性检查结果。在合法性检查结果指示目标内存地址合法的情况下，可以保存目标内存地址，并释放目标传输消息。在合法性检查结果指示目标内存地址不合法的情况下，可以向发送端发送消息异常指示信息，并释放目标传输消息。这里，消息异常指示信息可以用于指示目标传输消息中所传输的内存地址异常。例如，以目标传输消息为IPC消息为例，在得到BufferAddr之后，接收端可以对BufferAddr进行参数检查，合法则直接使用该BufferAddr并释放IPC消息，并继续处理下一步，不合法则返回异常并释放IPC消息。通过本实施例，通过对确定的内存地址进行合法性检查，可以避免不合法的内存地址导致传输的消息无效或对接收端造成影响等情况发生，可以提高消息传输的有效性。在一个示范性实施例中，对目标内存地址进行合法性检查，得到合法性检查结果，包括：在目标内存地址位于预设地址范围内的情况下，确定目标内存地址合法；在目标内存地址位于预设地址范围以外的情况下，确定目标内存地址不合法。对目标内存地址进行的合法性检查，可以是检查目标内存地址的大小是否位于预期的范围之内。在本实施例中，可以预先设定一个地址范围，即，预设地址范围，用于判断确定的内存地址是否合法。在目标内存地址位于预设地址范围内的情况下，可以确定目标内存地址合法。而在目标内存地址位于预设地址范围以外的情况下，可以确定目标内存地址不合法。通过本实施例，通过预先设定内存地址的地址范围、并检查内存地址是否位于该地址范围之内来确定确定的内存地址是否合法，可以提高合法检查的效率，从而提高消息传输的效率。下面结合可选示例对本申请实施例中的消息的传输方法进行解释说明。在本可选示例中，目标传输消息为IPC消息，目标内存地址为BufferAddr，目标传输消息为IPC消息，基地址为BaseAddr，地址单元大小为UnitSize。由于IPC消息在不同FU间传输过程中有时需要多层转发，消息长度过长会占用较大带宽并增加命令传输耗时。本可选示例中提供了一种提升IPC消息传输效率的方法，消息内不再填写绝对的64bit地址，采用bufferId加bufferLength形式进行消息的传输。传输时发送端根据已经定义的BaseAddr和UnitSize以及将要传递的buffer地址计算出bufferId和bufferLength并填入消息体内，接收端根据已经定义的BaseAddr和UnitSize以及收到的bufferId和bufferLength计算出buffer地址，即完成了地址的传输。通过上述简单计算，可以大大压缩BufferAddr在消息内的所占空间，原来2个Dword只能传输一个64bit的绝对地址，优化后大致能传输4个或更多的绝对地址。通过增加简单计算实现了消息长度的减小，优化了进程与进程之间的数据交互，提升了消息传输的效率，减小了不必要的传输带宽浪费，更有效地利用总线带宽，有助于提高产品性能。本可选示例中的消息的传输方法的流程可以包括以下步骤：步骤1，内存初始化时定义BaseAddr、UnitSize。步骤2，发送端获取到BufferAddr后，计算该BufferAddr相对于基地址的相对偏移量，根据公式bufferId =/UnitSize，确定bufferId，根据需要传输的buffer大小除以UnitSize获取bufferLength。步骤3，将获取到的bufferId、bufferLength填进IPC消息结构体内，根据所占bit数可以动态调整各自所占比特数.步骤4，接收端收到IPC消息，提取bufferId、bufferLength，根据步骤1中定义的参数，根据公式BufferAddr = bufferId*UnitSize+ BaseAddr，确定buffer地址。步骤5，得出BufferAddr后，可对BufferAddr进行参数检查，判断其是否在合法范围内，合法则直接使用 BufferAddr并释放IPC消息，不合法，则返回异常并释放IPC消息。通过本可选示例，通过在处理bufferAddr时增加简单的计算，可以实现对bufferAddr的重构，重构后的每个bufferAddr所占bits减小，进而减小了IPC消息长度，相较于传输直接地址的方式，减小了非必要的传输，有效提升了带宽利用率，更高效、充分地利用了传输总线。需要说明的是，对于前述的各方法实施例，为了简单描述，故将其都表述为一系列的动作组合，但是本领域技术人员应该知悉，本申请并不受所描述的动作顺序的限制，因为依据本申请，某些步骤可以采用其他顺序或者同时进行。其次，本领域技术人员也应该知悉，说明书中所描述的实施例均属于优选实施例，所涉及的动作和模块并不一定是本申请所必须的。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到根据上述实施例的方法可借助软件加必需的通用硬件平台的方式来实现，当然也可以通过硬件，但很多情况下前者是更佳的实施方式。基于这样的理解，本申请实施例的技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台终端设备执行本申请各个实施例的方法。根据本申请实施例的又一方面，还提供了一种消息的传输装置，该装置用于实现上述实施例中所提供的消息的传输方法，已经进行过说明的不再赘述。如以下所使用的，术语“模块”可以实现预定功能的软件和/或硬件的组合。尽管以下实施例所描述的装置较佳地以软件来实现，但是硬件，或者软件和硬件的组合的实现也是可能并被构想的。图4是根据本申请实施例的一种消息的传输装置的结构框图，如图4所示，该装置包括：第一获取单元402，用于获取目标内存地址，其中，目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；第一确定单元404，用于根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值，得到目标标识值；第一执行单元406，用于将目标标识值写入到目标传输消息的消息结构体，并将目标传输消息传输给目标传输消息的接收端。通过本申请实施例，获取目标内存地址，其中，目标内存地址为待传输的目标传输消息所传输的、目标缓冲区的缓冲区地址；根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值，得到目标标识值；将目标标识值写入到目标传输消息的消息结构体，并将目标传输消息传输给目标传输消息的接收端，可以解决相关技术中的进程间通信消息的传输方法存在由于需要传输的消息过长导致的消息传输效率低的问题，提高消息传输效率。可选地，上述装置还包括：第二获取单元，用于在根据基地址和地址单元大小，确定与目标内存地址对应的地址标识的标识值之前，获取基地址和地址单元大小，其中，基地址和地址单元大小是在进行内存初始化的过程中设置的。可选地，上述装置还包括：第二执行单元，用于将缓冲区地址的最小值，设置为基地址，以及将存储地址间的最小单元，设置为地址单元大小。可选地，第二获取单元包括：读取单元，用于从预设寄存器中读取出基地址和地址单元大小。可选地，第一确定单元包括：第一确定模块，用于确定目标内存地址与基地址之间的地址偏移量，得到目标偏移量；第二确定模块，用于根据目标偏移量和地址单元大小，确定与目标内存地址对应的地址标识的目标标识值。可选地，第二确定模块包括：确定子模块，用于将目标偏移量除以地址单元大小所得到的商，确定为与目标内存地址对应的地址标识的目标标识值。可选地，上述装置还包括第二确定单元，第一执行单元包括写入模块，其中，第二确定单元，用于根据目标缓冲区的缓冲区大小和地址单元大小，确定与目标内存地址对应的缓冲区长度参数的参数值，得到目标长度值；写入模块，用于将目标标识值和目标长度值写入到目标传输消息的消息结构体。可选地，第二确定单元包括：第三确定模块，用于将目标缓冲区的缓冲区大小除以地址单元大小所得到的商，确定为与目标内存地址对应的缓冲区长度参数的目标长度值。可选地，写入模块包括：写入子模块，用于按照目标标识值所占的比特数和目标长度值所占用的比特数，将目标标识值和目标长度值写入到目标传输消息的消息结构体。可选地，上述装置还包括：调整单元，用于根据目标内存地址所占用的比特数，动态调整目标标识值所占的比特数和目标长度值所占的比特数。可选地，调整单元包括：第四确定模块，用于将目标内存地址所占用的比特数与预设比例的乘积，确定为目标标识值所占的比特数，将目标内存地址所占用的比特数与目标标识值所占的比特数的差值，确定为目标长度值所占的比特数。可选地，第一确定单元包括：第五确定模块，用于在目标内存地址包含多个内存地址的情况下，根据基地址和地址单元大小，分别确定与多个内存地址中的每个内存地址对应的地址标识的标识值，得到与每个内存地址对应的标识值，其中，目标标识值包括与每个内存地址对应的标识值。可选地，第一获取单元包括：获取模块，用于获取目标缓冲区的绝对地址，得到目标内存地址。根据本申请实施例的又一方面，还提供了一种消息的传输装置，该装置用于实现上述实施例中所提供的消息的传输方法，已经进行过说明的不再赘述。图5是根据本申请实施例的另一种消息的传输装置的结构框图，如图5所示，该装置包括：接收单元502，用于接收发送端发送的目标传输消息；提取单元504，用于从目标传输消息的消息结构体中提取出目标标识值，其中，目标标识值是与目标内存地址对应的地址标识的标识值；第三确定单元506，用于根据目标标识值、基地址和地址单元大小，确定出目标内存地址。通过本申请实施例，接收发送端发送的目标传输消息；从所述目标传输消息的消息结构体中提取出目标标识值，其中，所述目标标识值是与目标内存地址对应的地址标识的标识值；根据所述目标标识值、基地址和地址单元大小，确定出所述目标内存地址，可以解决相关技术中的进程间通信消息的传输方法存在由于需要传输的消息过长导致的消息传输效率低的问题，提高消息传输效率。可选地，提取单元包括：第六确定模块，用于确定目标标识值所占的比特数和目标长度值所占的比特数，其中，目标长度值是与目标内存地址对应的缓冲区长度参数的参数值，目标长度值用于标识与目标内存地址所对应的目标缓冲区的缓冲区大小；提取模块，用于根据目标标识值所占的比特数和目标长度值所占的比特数，从目标传输消息的消息结构体中提取出目标标识值和目标长度值。可选地，第三确定单元包括：第七确定模块，用于将目标标识值与地址单元大小的乘积、与基地址的和，确定为目标内存地址。可选地，上述装置还包括：检查单元，用于在根据目标标识值、基地址和地址单元大小，确定出目标内存地址之后，对目标内存地址进行合法性检查，得到合法性检查结果；第三执行单元，用于在合法性检查结果指示目标内存地址合法的情况下，保存目标内存地址，并释放目标传输消息；第四执行单元，用于在合法性检查结果指示目标内存地址不合法的情况下，向发送端发送消息异常指示信息，并释放目标传输消息，其中，消息异常指示信息用于指示目标传输消息中所传输的内存地址异常。可选地，检查单元包括：第八确定模块，用于在目标内存地址位于预设地址范围内的情况下，确定目标内存地址合法；第九确定模块，用于在目标内存地址位于预设地址范围以外的情况下，确定目标内存地址不合法。需要说明的是，上述各个模块是可以通过软件或硬件来实现的，对于后者，可以通过以下方式实现，但不限于此：上述模块均位于同一处理器中；或者，上述各个模块以任意组合的形式分别位于不同的处理器中。根据本申请实施例的又一方面，还提供了一种计算机可读存储介质，该计算机可读存储介质中存储有计算机程序，其中，该计算机程序被设置为运行时执行上述任一项方法实施例中的步骤。在一个示例性实施例中，上述计算机可读存储介质可以包括但不限于：U盘、只读存储器、随机存取存储器、移动硬盘、磁碟或者光盘等各种可以存储计算机程序的介质。根据本申请实施例的又一方面，还提供了一种电子设备，包括存储器和处理器，该存储器中存储有计算机程序，该处理器被设置为运行计算机程序以执行上述任一项方法实施例中的步骤。在一个示例性实施例中，上述电子设备还可以包括传输设备以及输入输出设备，其中，该传输设备和上述处理器连接，该输入输出设备和上述处理器连接。本实施例中的具体示例可以参考上述实施例及示例性实施方式中所描述的示例，本实施例在此不再赘述。显然，本领域的技术人员应该明白，上述的本申请实施例的各模块或各步骤可以用通用的计算装置来实现，它们可以集中在单个的计算装置上，或者分布在多个计算装置所组成的网络上，它们可以用计算装置可执行的程序代码来实现，从而，可以将它们存储在存储装置中由计算装置来执行，并且在某些情况下，可以以不同于此处的顺序执行所示出或描述的步骤，或者将它们分别制作成各个集成电路模块，或者将它们中的多个模块或步骤制作成单个集成电路模块来实现。这样，本申请实施例不限制于任何特定的硬件和软件结合。以上所述仅为本申请的优选实施例而已，并不用于限制本申请实施例，对于本领域的技术人员来说，本申请实施例可以有各种更改和变化。凡在本申请实施例的原则之内，所作的任何修改、等同替换、改进等，均应包含在本申请实施例的保护范围之内。
