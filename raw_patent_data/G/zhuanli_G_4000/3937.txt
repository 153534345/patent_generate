标题title
一种基于Unity的2D模型三维化系统、方法、存储介质
摘要abst
本发明涉及一种基于Unity的2D模型三维化系统、方法、存储介质，其系统包括：运营管理界面模块，用于响应用户对二维工业数字化模型的交互操作并将其转化为对运营管理数据库模块的操作请求；运营管理数据库模块，用于响应运营管理界面模块的操作请求，向中间件下发数据；中间件，用于基于WCF通信接口，实时向Unity客户端传递二维工业数字化模型的控制指令；向运营管理数据库模块发出更新请求；Unity客户端，用于基于二维工业数字化模型以及中间件发出的控制指令，将二维工业数字化模型渲染为3D动画。本发明基于WCF通信接口，构建运营管理界面与Unity的中间件，并实现了二维工业模型的三维化。
权利要求书clms
1.一种基于Unity的2D模型三维化系统，其特征在于，包括：运营管理界面模块，用于响应用户对二维工业数字化模型的交互操作，并将所述交互操作转化为对运营管理数据库模块的操作请求；运营管理数据库模块，用于响应运营管理界面模块的操作请求，确定所述二维工业数字化模型的数据变化，向中间件下发数据；中间件，用于基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；Unity客户端，用于基于所述二维工业数字化模型以及中间件发出的控制指令，将所述二维工业数字化模型渲染为3D动画；以及，将渲染后的3D动画导出为二维模型，并将其传递给中间件。2.根据权利要求1所述的基于Unity的2D模型三维化系统，其特征在于，所述中间件包括：接口单元，用于基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；数据分析单元，用于分析所述控制指令和更新请求是否异常，并根据分析结果对其进行缓存或向用户发出预警。3.根据权利要求2所述的基于Unity的2D模型三维化系统，其特征在于，所述中间件还包括：负载均衡单元，用于监控控制指令和更新请求的次数以及二维模型的数据大小，将所述控制指令、更新请求和二维模型的缓存数据均衡地部署在多个服务器节点上。4.根据权利要求1所述的基于Unity的2D模型三维化系统，其特征在于，所述运营管理界面模块包括：响应单元，用于响应用户对二维工业数字化模型的交互操作；转化单元，用于所述交互操作转化为对运营管理数据库的操作。5.根据权利要求4所述的基于Unity的2D模型三维化系统，其特征在于，所述Unity客户端包括：渲染单元，用于基于所述二维工业数字化模型的控制指令，并将其渲染为3D动画；传递单元，将渲染后的3D动画导出为二维模型，并将其传递给中间件。6.根据权利要求1至5任一项所述的基于Unity的2D模型三维化系统，其特征在于，所述中间件可伸缩性地部署在云端。7.一种基于Unity的2D模型三维化方法，包括：运营管理界面模块、运营管理数据库模块、中间件和Unity客户端，其特征在于，运营管理界面模块，响应用户对二维工业数字化模型的交互操作，并将所述交互操作转化为对运营管理数据库模块的操作请求；运营管理数据库模块，响应运营管理界面模块的操作请求，确定所述二维工业数字化模型的数据变化，向中间件下发数据；中间件，基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；Unity客户端，基于所述二维工业数字化模型以及中间件发出的控制指令，将所述二维工业数字化模型渲染为3D动画；以及，将渲染后的3D动画导出为二维模型，并将其传递给中间件。8.根据权利要求7所述的基于Unity的2D模型三维化方法，其特征在于，还包括：中间件，监控控制指令和更新请求的次数以及二维模型的数据大小，将所述控制指令、更新请求和二维模型的数据均衡地部署在多个服务器节点上。9.一种电子设备，包括：一个或多个处理器；存储装置，用于存储一个或多个程序，其特征在于，当所述一个或多个程序被所述一个或多个处理器执行时，使得所述一个或多个处理器实现如权利要求7至8任一项所述的基于Unity的2D模型三维化方法。10.一种计算机可读介质，其特征在于，其上存储有计算机程序，其中，所述计算机程序被处理器执行时实现如权利要求7至8任一项所述的基于Unity的2D模型三维化方法。
说明书desc
技术领域本发明属于数字模型仿真模拟技术领域，具体涉及一种基于Unity的2D模型三维化系统、方法、存储介质。背景技术传统的工业模型是2D的效果，其主要通过现场传感器采集的工业参数信息返回到上位机中，上位机根据预设的参数库和设备运行逻辑构建相关的虚拟化对象，虚拟化对象与现场的设备或传感器进行绑定，并呈现出相应的2维可视化效果。SCADA系统，即数据采集与监视控制系统。SCADA系统是以计算机为基础的DCS与电力自动化监控系统；它应用领域很广，可以应用于电力、冶金、石油、化工、燃气、铁路等领域的数据采集与监视控制以及过程控制等诸多领域。带有运营管理界面的AVEVA系统平台是世界上唯一针对监管、企业SCADA、MES和IIoT应用的反应灵敏、可扩展的解决方案，可将整个组织的运营流程情景化。系统平台提供了一个基于标准的协作基础，将所有设施的人员、流程和资产统一起来，以实现持续的运营改进和实时决策支持。但是，基于OMI和SCADA系统的工业仿真模型均为2D效果，无法更逼真、直观地、可视化地展示实际生产情况。Windows Communication Foundation是由微软发展的一组数据通信的应用程序开发接口，可以翻译为Windows通讯接口。WCF的基本概念是以契约来定义双方沟通的协议，契约必须要以接口的方式来体现，而实际的服务代码必须要由这些契约接口派生并实现。契约分成了四种：数据契约，订定双方沟通时的数据格式；服务契约，订定服务的定义；操作契约，订定服务提供的方法；消息契约，订定在通信期间改写消息内容的规范。Behavior：Behavior的主要作用是定制Endpoint在运行时的一些必要的Behavior。比如Service回调Client的Timeout；Client采用的Credential type；以及是否支持Transaction等。发明内容为解决带有运营管理界面的工业数字化平台的三维仿真的问题，在本发明的第一方面提供了一种基于Unity的2D模型三维化系统，包括：运营管理界面模块，用于响应用户对二维工业数字化模型的交互操作，并将所述交互操作转化为对运营管理数据库模块的操作请求；运营管理数据库模块，用于响应运营管理界面模块的操作请求，确定所述二维工业数字化模型的数据变化，向中间件下发数据；中间件，用于基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；Unity客户端，用于基于所述二维工业数字化模型以及中间件发出的控制指令，将所述二维工业数字化模型渲染为3D动画；以及，将渲染后的3D动画导出为二维模型，并将其传递给中间件。在本发明的一些实施例中，所述中间件包括：接口单元，用于基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；数据分析单元，用于分析所述控制指令和更新请求是否异常，并根据分析结果对其进行缓存或向用户发出预警。进一步的，所述中间件还包括：负载均衡单元，用于监控控制指令和更新请求的次数以及二维模型的数据大小，将所述控制指令、更新请求和二维模型的缓存数据均衡地部署在多个服务器节点上。在本发明的一些实施例中，所述运营管理界面模块包括：响应单元，用于响应用户对二维工业数字化模型的交互操作；转化单元，用于所述交互操作转化为对运营管理数据库的操作。进一步的，所述Unity客户端包括：渲染单元，用于基于所述二维工业数字化模型的控制指令，并将其渲染为3D动画；传递单元，将渲染后的3D动画导出为二维模型，并将其传递给中间件。在上述的实施例中，所述中间件可伸缩性地部署在云端。本发明的第二方面，提供了一种基于Unity的2D模型三维化方法，包括：运营管理界面模块、运营管理数据库模块、中间件和Unity客户端，其具体步骤包括运营管理界面模块，响应用户对二维工业数字化模型的交互操作，并将所述交互操作转化为对运营管理数据库模块的操作请求；运营管理数据库模块，响应运营管理界面模块的操作请求，确定所述二维工业数字化模型的数据变化，向中间件下发数据；中间件，基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；Unity客户端，基于所述二维工业数字化模型以及中间件发出的控制指令，将所述二维工业数字化模型渲染为3D动画；以及，将渲染后的3D动画导出为二维模型，并将其传递给中间件。本发明的第三方面，提供了一种电子设备，包括：一个或多个处理器；存储装置，用于存储一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行，使得所述一个或多个处理器实现本发明在第一方面提供的基于Unity的2D模型三维化方法。本发明的第四方面，提供了一种计算机可读介质，其上存储有计算机程序，其中，所述计算机程序被处理器执行时实现本发明在第一方面提供的基于Unity的2D模型三维化方法。本发明的有益效果是：本公开一方面基于WCF通信接口，构建运营管理界面与Unity的中间件；通过中间件的UI来绑定Unity数字化模型与OMI中的符号，并添加了3D动画效果，可以在Unity工具中看到模型的3D效果；另一方面，通过运营管理界面的改变属性值，进而控制模型的3D效果，并将其导出为运营管理界面可支持的3D模型。附图说明图1为本发明的一些实施例中的基于Unity的2D模型三维化系统的基本结构示意图；图2为本发明的一些实施例中的基于Unity的2D模型三维化系统的时序及工作原理示意图之一；图3为本发明的一些实施例中的基于Unity的2D模型三维化系统的时序及工作原理示意图之二；图4为本发明的一些实施例中的WCF服务接口定义的代码示意图；图5为本发明的一些实施例中的实现WCF服务封装的代码示意图；图6为本发明的一些实施例中的实现WCF服务封装的代码示意图；图7为本发明的一些实施例中的配置WCF服务的代码示意图；图8为本发明的一些实施例中的脚本模板的配置过程示意图；图9为本发明的一些实施例中的二维工业数字化模型渲染后的三维动画效果示意图；图10为本发明的一些实施例中的二维工业数字化模型渲染后的三维动画效果示意图与现场生产线实时监控画面；图11为本发明的一些实施例中的部署在云端的中间件测试结果示意图；图12为本发明的一些实施例中的基于Unity的2D模型三维化方法的基本流程示意图；图13为本发明的一些实施例中的电子设备的结构示意图。具体实施方式以下结合附图对本发明的原理和特征进行描述，所举实例只用于解释本发明，并非用于限定本发明的范围。参考图1至图3，在本发明的第一方面，提供了一种基于Unity的2D模型三维化系统，包括：运营管理界面模块，用于响应用户对二维工业数字化模型的交互操作，并将所述交互操作转化为对运营管理数据库模块的操作请求；运营管理数据库模块，用于响应运营管理界面模块的操作请求，确定所述二维工业数字化模型的数据变化，向中间件下发数据；中间件，用于基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；Unity客户端，用于基于所述二维工业数字化模型以及中间件发出的控制指令，将所述二维工业数字化模型渲染为3D动画；以及，将渲染后的3D动画导出为二维模型，并将其传递给中间件。可以理解，本公开中的运营管理界面模块和运营管理数据库模块通常集成到一个OMI系统中，但并不影响其功能划分和具体实现，例如，AVEVAInTouch Web client。由于工业数字化模型包括了大量的产品模型、生产线模型、传感器参数和数据，为了方便存储其通常保存为二维模型，通过定义模型的属性及其相关操作实现动态可视化展示，因此其无法可真实地反映实际生产和可视化需求。而Unity的模型的文件格式无法工业数字化模型完全匹配。有鉴于此，在本发明的一些实施例中，所述中间件包括：接口单元，用于基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；数据分析单元，用于分析所述控制指令和更新请求是否异常，并根据分析结果对其进行缓存或向用户发出预警。具体地，以AVEVA InTouch Web client的OMI为例，其运营管理界面模块、运营管理数据库模块均集中到AVEVA InTouch Web client中。中间件通过前后端两部分实现，前端部分用于整合工业模型到AVEVA InTouch Webclient/OMI系统平台产品中，前端部分主要是给工业模型添加对应的3D效果。后端部分把所有的服务封装到wcfclient类里面，通过传参数给CallWcfClient方法来调用对应的服务。而C#脚本可实现跨平台的通信和访问。参考图4至图7，其C#主要代码如下所示：ing CallWcfclientswitchcase＂Login＂：{strErrorMsg￥＂Error occurs when login the node{node)，galaxy{galaxy).＂；this.wefclient.LoginGalaxy；break；case＂Logout＂：strErrorMsg S＂Error occurs when logout the node，galaxy.＂；this.wefclient.LogoutGalaxy；break；case＂Galaxy＂：strErrorMsg￥＂Error occurs when retrieving the node＇s.ToList＜string＞；break；case＂Template＂：strErrorMsg￥＂Error occurs when retrieving the node＇sdata.＂；listResultthis.wcfclient.GetTempaltesByNodeNameAndGalaxyName.ToList＜string＞；break；case＂Instance＂：strErrorMsg￥＂Error occurs when retrieving the node，galaxy＇s；break；case＂Attribute＂：strErrorMsg￥＂Error occurs when retrieving the node，galaxy{galaxy)，template；if){attributedatalist3sonConvert.DeserializeObjectcList；}break；}在此基础上，以GetAttributeListByInstanceNames服务为例，介绍服务创建过程：1.引用WCF命名空间System.ServiceModel，定义服务接口；2.实现服务：GRAccessSer接口的封装、OMI属性选择及数据库操作；3.配置服务所需的软硬件环境和外部调用接口。进一步的，所述中间件还包括：负载均衡单元，用于监控控制指令和更新请求的次数以及二维模型的数据大小，将所述控制指令、更新请求和二维模型的缓存数据均衡地部署在多个服务器节点上。在本发明的一些实施例中，所述运营管理界面模块包括：响应单元，用于响应用户对二维工业数字化模型的交互操作；转化单元，用于所述交互操作转化为对运营管理数据库的操作。进一步的，所述Unity客户端包括：渲染单元，用于基于所述二维工业数字化模型的控制指令，并将其渲染为3D动画；传递单元，将渲染后的3D动画导出为二维模型，并将其传递给中间件。在上述的实施例中，所述中间件可伸缩性地部署在云端。参考图9与图10，其示出了OMI平台的模型数据通过中间件实现与unity的通信；unity基于中间件渲染出的三维模型，并根据实时数据的变化，以动画地形式展示三维模型的变动。通过unity的RPC框架可以方便实现孪生模型的同步变动。具体地，中间件用于连接OMI与U3D模型，进行数据传输以及互动操作，此处例举一个工厂生产场景；使用数据孪生，克隆一份相同的模型到U3D中，调用中间件服务，当工厂中实体模型动作发生变化，孪生模型会收到数据变化，发送请求给中间件服务，请求处理之后，数据会存储到OMI数据库，孪生模型会保持场景动画和实体模型同步。进一步地，中间件包括生成属性脚本文件和生成脚本模板。这些脚本是OMI信号数据类型定义的地方，并在Unity对象中使用。动画逻辑可以在这个脚本中直接定义，也可以在一个单独的脚本中定义。OMI Unity支持这些数据类型：OMIInt，omfloat，omdouble，omiool和OMIString。为简单起见，通过预先定义OMI信号数据类型的示例脚本，并将其绑定到示例3D演示对象。相应地，在Unity客户端中创建相应对象：检查如下的对象是否在Hierarchy tab中创建的：OMIInterface：ASP OMI数据信号对象表示；OMIDataPipe：ASP OMI信号对象与Unity信号对象之间的数据管道通信；OMIAttributes：Unity信号对象，它包含Unity脚本，将Unity对象与ASP OMI信号绑定。参考图8，在OMI系统平台上建立信号对象对应的属性，其具体步骤包括：1、在“GR节点名称”文本框中输入GRNode名称，点击Connect；2、待出现“Galaxy name”列表后，选择Galaxy name，点击Connect；3、选择User Defined Template→User Defined Template＇s Instance；3、在Attribute Filters，选择￥Master＿UserDefined＿001；4、在Available Attributes，选择第四部定义的Instance Attributes。5、点击＞＞选择Attributes；6、等所有的Attributes都被选了之后，点击Import。当操作者在OMI修改数据后，中间件服务会根据基于上述对象、属性和脚本，进行数据处理，并将处理后的数据发送给孪生模型，孪生模型会有对应的动画效果，并改变实体模型的动作。如果数据格式不正确或者存在脏数据，中间件服务会自动预警，并尝试重现处理一次数据，以避免网络异常导致数据不对，尝试一次之后数据还是不对，中间件服务下发消息通知给指定人员处理异常。参考图11，将系统部署到Azure平台，OMI和U3D模型分别放到云端两台固定节点上，中间件的多个服务放到多个节点上，可以为每一个服务指定初始的资源，以及节点数量配置。比如每个服务节点初始配置设置为，2core4g的资源配置，节点数量则为20个。1.根据需要可以采用滚动方式对节点数量进行伸缩；可以手动修改节点数量最大值，而不会引起服务不可用的情况。2.利用弹性伸缩，基于某些关键指标，如容器的CPU使用量作为阈值，来触发LoadBalancer负载局衡器进行弹性伸缩。例如CPU使用量达到75％，自动扩充一个实例，来缓解服务的压力。如果使用量降低到40％，就自动收回实例，节省资源。如内存使用量达到90％，自动扩充一个实例，来缓解服务的压力。如果使用量降低到40％，就自动收回实例，节省资源。如对特定服务，每秒请求量达到100次，自动扩充一个实例，来缓解服务的压力。如果请求量降低到每秒请求10次，就自动收回实例，节省资源。如热数据缓存：对于高频使用的热数据，如经常使用用户的个人登录信息等，适当增加数据库query cache，提升数据库查询性能。在应用层使用redis等内存缓存部分高频使用数据，降低请求响应时间，增加系统流畅度，提升客户体验。进行读写分离，使用从库提供数据查询的服务，提升从库硬件资源利用率，降低主库读压力，增加主库写性能。提升整体效率。如冷数据归档：对于使用频率很低或基本不使用的冷数据，如历史趋势数据、历史报警等，进行数据的归档，提升数据库的性能。也可提供使用频率较低的历史交易查询功能，使用备库提供服务。对于交易类数据建议按日期进行分库分表，每日交易分为一片或多片，对于历史交易如1年前交易进行定期迁移和归档，提升数据库性能。例子：在这个案例中，通过弹性伸缩机制，在上班以及中午业务高峰时间段内，将更多节点提供给业务服务组件，而在晚上，则会将节点从业务组件收回，提供给需要跑批处理以及异步消费的服务组件。参考图10，对于渲染后的3D模型的操作包括如下：1.支持指定视角的追踪，模型360度旋转，移动；2.支持特殊物品的追踪，及高亮显示；3.支持指定物品点击展示相关配置参数；4.调取厂区监控展示。实施例2参考图12，本发明的第二方面，提供了一种基于Unity的2D模型三维化方法，包括：运营管理界面模块、运营管理数据库模块、中间件和Unity客户端，其具体步骤包括：S100.运营管理界面模块，响应用户对二维工业数字化模型的交互操作，并将所述交互操作转化为对运营管理数据库模块的操作请求；S200.运营管理数据库模块，响应运营管理界面模块的操作请求，确定所述二维工业数字化模型的数据变化，向中间件下发数据；S300.中间件，基于WCF通信接口，根据已下发数据实时向Unity客户端传递所述二维工业数字化模型的控制指令；以及根据Unity客户端传递的二维模型，向运营管理数据库模块发出对所述二维工业数字化模型数据的更新请求；S400.Unity客户端，基于所述二维工业数字化模型以及中间件发出的控制指令，将所述二维工业数字化模型渲染为3D动画；以及，将渲染后的3D动画导出为二维模型，并将其传递给中间件。进一步，还包括：中间件，监控控制指令和更新请求的次数以及二维模型的数据大小，将所述控制指令、更新请求和二维模型的数据均衡地部署在多个服务器节点上。实施例3参考图13，本发明的第三方面，提供了一种电子设备，包括：一个或多个处理器；存储装置，用于存储一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行，使得所述一个或多个处理器实现本发明在第一方面的基于Unity的2D模型三维化方法。电子设备500可以包括处理装置501，其可以根据存储在只读存储器502中的程序或者从存储装置508加载到随机访问存储器503中的程序而执行各种适当的动作和处理。在RAM503中，还存储有电子设备500操作所需的各种程序和数据。处理装置501、ROM 502以及RAM 503通过总线504彼此相连。输入/输出接口505也连接至总线504。通常以下装置可以连接至I/O接口505：包括例如触摸屏、触摸板、键盘、鼠标、摄像头、麦克风、加速度计、陀螺仪等的输入装置506；包括例如液晶显示器、扬声器、振动器等的输出装置507；包括例如硬盘等的存储装置508；以及通信装置509。通信装置509可以允许电子设备500与其他设备进行无线或有线通信以交换数据。虽然图13示出了具有各种装置的电子设备500，但是应理解的是，并不要求实施或具备所有示出的装置。可以替代地实施或具备更多或更少的装置。图13中示出的每个方框可以代表一个装置，也可以根据需要代表多个装置。特别地，根据本公开的实施例，上文参考流程图描述的过程可以被实现为计算机软件程序。例如，本公开的实施例包括一种计算机程序产品，其包括承载在计算机可读介质上的计算机程序，该计算机程序包含用于执行流程图所示的方法的程序代码。在这样的实施例中，该计算机程序可以通过通信装置509从网络上被下载和安装，或者从存储装置508被安装，或者从ROM502被安装。在该计算机程序被处理装置501执行时，执行本公开的实施例的方法中限定的上述功能。需要说明的是，本公开的实施例所描述的计算机可读介质可以是计算机可读信号介质或者计算机可读存储介质或者是上述两者的任意组合。计算机可读存储介质例如可以是——但不限于——电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。计算机可读存储介质的更具体的例子可以包括但不限于：具有一个或多个导线的电连接、便携式计算机磁盘、硬盘、随机访问存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑磁盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。在本公开的实施例中，计算机可读存储介质可以是任何包含或存储程序的有形介质，该程序可以被指令执行系统、装置或者器件使用或者与其结合使用。而在本公开的实施例中，计算机可读信号介质可以包括在基带中或者作为载波一部分传播的数据信号，其中承载了计算机可读的程序代码。这种传播的数据信号可以采用多种形式，包括但不限于电磁信号、光信号或上述的任意合适的组合。计算机可读信号介质还可以是计算机可读存储介质以外的任何计算机可读介质，该计算机可读信号介质可以发送、传播或者传输用于由指令执行系统、装置或者器件使用或者与其结合使用的程序。计算机可读介质上包含的程序代码可以用任何适当的介质传输，包括但不限于：电线、光缆、RF等等，或者上述的任意合适的组合。上述计算机可读介质可以是上述电子设备中所包含的；也可以是单独存在，而未装配入该电子设备中。上述计算机可读介质承载有一个或者多个计算机程序，当上述一个或者多个程序被该电子设备执行时，使得该电子设备：以上所述仅为本发明的较佳实施例，并不用以限制本发明，凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的保护范围之内。
