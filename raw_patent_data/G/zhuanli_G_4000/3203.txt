标题title
图形处理器、系统、方法、电子装置及设备
摘要abst
本公开提供一种图形处理器、系统、方法、电子装置及设备。图形处理器包括：光栅化处理模块，用于逐块读取第一图块所覆盖的图元的图元信息，并逐块根据所述图元信息对第一图块所覆盖的图元进行光栅化处理，得到第一图块所覆盖的图元的像素信息，将各个第一图块所覆盖的图元的像素信息按第二图块分组保存到所述内存中；像素处理模块，用于在所述各个第一图块所覆盖的图元的像素信息全部保存到所述内存后，逐块从所述内存中读取第二图块所覆盖的像素信息，并逐块根据读取到的像素信息进行像素处理。本公开实施例提供的技术方案降低了GPU开发难度，压缩了GPU开发周期。
权利要求书clms
1.一种图形处理器，包括：光栅化处理模块，用于逐块读取第一图块所覆盖的图元的图元信息，并逐块根据所述图元信息对第一图块所覆盖的图元进行光栅化处理，得到第一图块所覆盖的图元的像素信息，将各个第一图块所覆盖的图元的像素信息按第二图块分组保存到内存中；像素处理模块，用于在所述各个第一图块所覆盖的图元的像素信息全部保存到所述内存后，逐块从所述内存中读取第二图块所覆盖的像素信息，并逐块根据读取到的像素信息进行像素处理。2.根据权利要求1所述的图形处理器，所述第一图块的尺寸根据所述光栅化处理模块对应的缓存容量确定；所述第二图块的尺寸根据所述像素处理模块对应的缓存容量确定。3.根据权利要求2所述的图形处理器，所述图形处理器还包括图块划分模块：用于确定每个第一图块所覆盖的图元，并按第一图块分组将每个第一图块所覆盖的图元的图元索引保存到所述内存，以便所述光栅化处理模块根据第一图块所覆盖的图元的图元索引读取第一图块所覆盖的图元的图元信息。4.根据权利要求3所述的图形处理器，所述像素信息包括当前帧的帧标识信息，所述逐块根据读取到的像素信息进行像素处理得到的像素处理结果中携带所述帧标识信息。5.根据权利要求1所述的图形处理器，第二图块所覆盖的像素信息以链表形式保存。6.根据权利要求1至5任一项所述的图形处理器，所述像素处理模块包括多个算术逻辑单元，逐块根据读取到的像素信息进行像素处理的任务由所述多个算术逻辑单元执行，所述像素处理模块对应的缓存为所述多个算术逻辑单元的本地存储空间，所述多个算术逻辑单元复用计算用算术逻辑单元。7.一种图形处理系统，包括权利要求1至6任一项所述的图形处理器。8.一种电子装置，包括权利要求7所述的图形处理系统。9.一种电子设备，包括权利要求8所述的电子装置。10.一种图形处理方法，应用于图形处理器，所述方法包括光栅化处理过程和像素处理过程：所述光栅化处理过程包括：逐块读取第一图块所覆盖的图元的图元信息，并逐块根据所述图元信息对第一图块所覆盖的图元进行光栅化处理，得到第一图块所覆盖的图元的像素信息，将各个第一图块所覆盖的图元的像素信息按第二图块分组保存到内存中；在所述各个第一图块所覆盖的图元的像素信息全部保存到所述内存后执行所述像素处理过程，所述像素处理过程包括：逐块从所述内存中读取第二图块所覆盖的像素信息，并逐块根据读取到的像素信息进行像素处理。11.根据权利要求10所述的方法，所述第一图块的尺寸根据光栅化处理结果对应的缓存容量确定；所述第二图块的尺寸根据像素处理结果对应的缓存容量确定。12.根据权利要求11所述的方法，所述逐块读取第一图块所覆盖的图元的图元信息之前，所述方法还包括：确定每个第一图块所覆盖的图元，并按第一图块分组将每个第一图块所覆盖的图元的图元索引保存到所述内存，以便在光栅化处理过程中根据第一图块所覆盖的图元的图元索引读取第一图块所覆盖的图元的图元信息。13.根据权利要求12所述的方法，所述像素信息包括当前帧的帧标识信息，所述逐块根据读取到的像素信息进行像素处理得到的像素处理结果中携带所述帧标识信息。14.根据权利要求10所述的方法，第二图块所覆盖的像素信息以链表形式保存。15.根据权利要求10至14任一项所述的方法，所述逐块根据读取到的像素信息进行像素处理，包括：通过复用多个计算用算术逻辑单元逐块根据读取到的像素信息进行像素处理，像素处理结果对应的缓存为所述多个算术逻辑单元的本地存储空间。
说明书desc
技术领域本公开涉及图形渲染技术领域，尤其涉及一种图形处理器、图形处理系统、图形处理方法、电子装置及电子设备。背景技术相对于IMR架构而言，基于图块的渲染架构、TBDR)减小了GPU渲染时对内存带宽需求。一种典型的基于图块的渲染架构的GPU渲染管线流程包括几何处理、图块划分、光栅化和像素处理。其中，几何处理包括顶点着色器和几何着色器；像素处理包括片段着色器和像素后处理。需要优化图像处理性能时，上述基于图块的渲染架构的GPU渲染管线流程中的光栅化和像素处理都需要优化。现有的图像渲染管线优化方式，往往导致GPU开发难度增加、开发周期延长。发明内容本公开的目的是提供一种图形处理器、图形处理系统、图形处理方法、电子装置及电子设备，旨在降低GPU开发难度、压缩GPU开发周期。根据本公开的一个方面，提供一种图形处理器，其中，该图形处理器包括：光栅化处理模块，用于逐块读取第一图块所覆盖的图元的图元信息，并逐块根据图元信息对第一图块所覆盖的图元进行光栅化处理，得到第一图块所覆盖的图元的像素信息，将各个第一图块所覆盖的图元的像素信息按第二图块分组保存到内存中；像素处理模块，用于在各个第一图块所覆盖的图元的像素信息全部保存到内存后，逐块从内存中读取第二图块所覆盖的像素信息，并逐块根据读取到的像素信息进行像素处理。可选的，第一图块的尺寸根据光栅化处理模块对应的缓存容量确定。可选的，第二图块的尺寸根据像素处理模块对应的缓存容量确定。在上述任一图形处理器实施例的基础上，图形处理器还包括图块划分模块，该图块划分模块用于确定每个第一图块所覆盖的图元，并按第一图块分组将每个第一图块所覆盖的图元的图元索引保存到内存，以便光栅化处理模块根据第一图块所覆盖的图元的图元索引读取第一图块所覆盖的图元的图元信息。进一步的，像素信息包括当前帧的帧标识信息。相应的，上述逐块根据读取到的像素信息进行像素处理得到的像素处理结果中携带帧标识信息。在上述任一图形处理器实施例的基础上，第二图块所覆盖的像素信息可以以链表形式保存。在上述任一图形处理器实施例的基础上，像素处理模块包括多个算术逻辑单元，逐块根据读取到的像素信息进行像素处理的任务由多个算术逻辑单元执行，像素处理模块对应的缓存为多个算术逻辑单元的本地存储空间，多个算术逻辑单元复用计算用算术逻辑单元。根据本公开的另一个方面，还提供了一种图形处理系统，该图形处理器包括上述任一实施例所述的图形处理器。根据本公开的另一个方面，还提供一种电子装置，该电子装置包括上述实施例所述的图形处理系统。根据本公开的另一个方面，还提供一种电子设备，该电子设备包括上述实施例所述的电子装置。根据本公开的另一个方面，还提供一种图形处理方法，该图形处理方法应用于图形处理器，该图形处理方法包括光栅化处理过程和像素处理过程。其中，光栅化处理过程包括：逐块读取第一图块所覆盖的图元的图元信息，并逐块根据图元信息对第一图块所覆盖的图元进行光栅化处理，得到第一图块所覆盖的图元的像素信息，将各个第一图块所覆盖的图元的像素信息按第二图块分组保存到内存中；在各个第一图块所覆盖的图元的像素信息全部保存到内存后执行像素处理过程，像素处理过程包括：逐块从内存中读取第二图块所覆盖的像素信息，并逐块根据读取到的像素信息进行像素处理。可选的，第一图块的尺寸根据光栅化处理结果对应的缓存容量确定。可选的，第二图块的尺寸根据像素处理结果对应的缓存容量确定。在上述任一图形处理方法实施例的基础上，逐块读取第一图块所覆盖的图元的图元信息之前，还可以确定每个第一图块所覆盖的图元，并按第一图块分组将每个第一图块所覆盖的图元的图元索引保存到内存，以便在光栅化处理过程中根据第一图块所覆盖的图元的图元索引读取第一图块所覆盖的图元的图元信息。进一步的，像素信息可以包括当前帧的帧标识信息。相应的，逐块根据读取到的像素信息进行像素处理得到的像素处理结果中携带帧标识信息。在上述任一图形处理方法实施例的基础上，第二图块所覆盖的像素信息可以以链表形式保存。在上述任一图形处理方法实施例的基础上，逐块根据读取到的像素信息进行像素处理，其具体实现方式可以包括：通过复用多个计算用算术逻辑单元逐块根据读取到的像素信息进行像素处理，像素处理结果对应的缓存为多个算术逻辑单元的本地存储空间。附图说明图1为本公开一些实施例的图元的数据结构示意图；图2为本公开一些实施例的计算用算术逻辑单元与存储设备的示意图；图3为本公开一些实施例的图形处理系统的结构示意图；图4为本公开一些实施例的图形处理方法的流程示意图。具体实施方式在介绍本公开实施例之前，应当说明的是：本公开部分实施例被描述为处理流程，虽然流程的各个操作步骤可能被冠以顺序的步骤编号，但是其中的操作步骤可以被并行地、并发地或者同时实施。本公开实施例中可能使用了术语“第一”、“第二”等等来描述各个特征，但是这些特征不应当受这些术语限制。使用这些术语仅仅是为了将一个特征与另一个特征进行区分。本公开实施例中可能使用了术语“和/或”，“和/或”包括其中一个或更多所列出的相关联特征的任意和所有组合。应当理解的是，当描述两个部件的连接关系或通信关系时，除非明确指明两个部件之间直接连接或直接通信，否则，两个部件的连接或通信可以理解为直接连接或通信，也可以理解为通过中间部件间接连接或通信。为了使本公开实施例中的技术方案及优点更加清楚明白，以下结合附图对本公开的示例性实施例进行进一步详细的说明，显然，所描述的实施例仅是本公开的一部分实施例，而不是所有实施例的穷举。需要说明的是，在不冲突的情况下，本公开中的实施例及实施例中的特征可以相互组合。本公开实施例提供的图形处理器使用基于图块的渲染架构。本公开实施例提供的图形处理器，将几何处理、光栅化、与像素处理过程解耦，使得光栅化处理对应的图块尺寸与像素处理过程对应的图块尺寸可以不同，也是的光栅化处理过程和像素处理过程可以分别进行优化。相应的，3D的渲染管线被分为两个pass。一个pass完成几何处理和光栅化，另一个pass完成像素处理。两个pass之间的数据通过内存交互。在一些实施例中，本公开实施例提供的图形处理器至少包括光栅化处理模块和像素处理模块。其中，光栅化处理模块用于：逐块读取第一图块所覆盖的图元的图元信息，并逐块根据图元信息对第一图块所覆盖的图元进行光栅化处理，得到第一图块所覆盖的图元的像素信息，将各个第一图块所覆盖的图元的像素信息按第二图块分组保存到内存中。像素处理模块用于：在各个第一图块所覆盖的图元的像素信息全部保存到上述内存后，逐块从内存中读取第二图块所覆盖的像素信息，并逐块根据读取到的像素信息进行像素处理。本公开实施例中，第一图块的尺寸要满足光栅化处理模块的处理能力。也就是说，第一图块的尺寸不大于光栅化处理模块对应的缓存容量。本公开中，光栅化处理模块对应的缓存是指用于暂存光栅化处理模块处理过程中及处理后产生的数据的缓存。作为举例而非限定，光栅化处理模块对应的缓存包括深度缓冲区。实际应用中，可以根据光栅化处理模块对应的缓存容量确定第一图块的尺寸。作为举例而非限定，在一些实施例中，光栅化处理模块对应的缓存容量为a×b，那么，第一图块的尺寸为a×b。按照该尺寸，图像帧被划分为N个第一图块。光栅化处理模块按照预定的第一图块处理顺序，每次读取一个第一图块所覆盖的图元的图元信息，并根据读取到的图元信息对当前第一图块所覆盖的图元进行光栅化处理，得到当前第一图块所覆盖的图元的像素信息。完成对一个第一图块所覆盖的所有图元的光栅化处理后，再读取下一个第一图块所覆盖的图元的图元信息并进行相应的光栅化处理。本公开实施例中，可以通过光栅化阶段的像素覆盖测试确定第一图块所覆盖的图元的像素。其中，图元的像素是指该图元所覆盖的像素，相应的，第一图元所覆盖的图元的像素信息是指第一图元所覆盖的图元覆盖的像素的信息。应当指出的是，光栅化处理还可以包括像素插值计算、深度测试、模板测试等等处理过程。本公开实施例中，图元的像素信息包括但不仅限于以下至少一种：样本标记，用于在像素处理阶段根据样本标记获得要计算的样本，以及进行抗锯齿操作；样本或像素深度值，用于在像素处理阶段对具有alpha属性的像素进行深度测试，当像素具有alpha通道或开启了alpha测试时，该深度值在像素处理阶段产生；图元标识，用于确定像素所属的图元，对应未全部进行深度测试的像素，可以有多个图元标识。可选的，像素信息还可以包括当前帧的帧标识信息。帧标识信息由软件输入，用于和像素处理阶段进行帧同步，帧同步主要在软件层面进行维护。若像素信息中包括当前帧的帧标识信息，上述逐块根据读取到的像素信息进行像素处理得到的像素处理结果中携带帧标识信息。本公开实施例中，第二图块的尺寸要满足像素处理模块的处理能力。也就是说，第二图块的尺寸不大于像素处理模块对应的缓存容量。本公开中，像素处理模块对应的缓存是指用于暂存像素处理模块处理过程中及处理后产生的数据的缓存。作为举例而非限定，像素处理模块对应的缓存为G缓冲区。实际应用中，可以根据像素处理模块对应的缓存容量确定第二图块的尺寸。作为举例而非限定，在一些实施例中，像素处理模块对应的缓存容量为c×d，那么，第二图块的尺寸为c×d。按照该尺寸，图像帧的像素数据可以被分为M组，单组像素信息被称为第二图块所覆盖的像素信息。其中，图像帧的像素数据为图像帧中的所有图元经过光栅化处理后得到的像素数据。相应的，光栅化处理模块按照第二图块的尺寸将图像帧的像素数据分组保存在内存中，每组包括c×d个像素的像素数据。实际应用中，图像帧的像素可能少于M×c×d。针对这种情况，一些实施例中，最后一组像素数据为实际数据量；另一些实施例中，通过数据补齐的方式使得最后一组像素数据仍然对应c×d个像素的像素数据。相应的，像素处理模块按照预定的第二图块处理顺序，每次读取c×d大小的像素信息，并根据读取到的像素信息进行像素处理。本公开实施例中，像素处理可以但不仅限于包括着色处理、像素后处理等等操作。作为举例而非限定，在一些实施例中，每组像素数据对应一个第二图块数据结构。一个第二图块数据结构中保存有一组像素数据，该组像素数据的尺寸为一个第二图块的尺寸。光栅化处理模块每处理完一个第一图块覆盖的图元，查找内存中上一次存储像素数据的第二图块数据结构；如果该第二图块数据结构未存满，则首先将本次光栅化处理得到的像素数据保存在该第二图块数据结构中；若该第二图块数据结构的剩余空间不足以保存本次光栅化处理得到的所有像素数据，则继续在下一个第二图块数据结构中保存；如果内存中上一次存储像素数据的第二图块数据结构已存满，则在下一个第二图块数据结构中保存本次光栅化处理得到的像素数据。其中，如果每个第二图块具有固定个数的像素的像素信息，那么第二图块数据结构可以但不仅限于为链表。本公开实施例中，第一图块的尺寸与第二图块的尺寸可以相同，也可以不同。现有基于图块的渲染架构中，光栅化和像素处理都基于相同的图块尺寸进行处理。当使能了多样本，图块尺寸会随之减小。发明人在实现本发明的过程中发现，光栅化阶段和像素处理阶段实际要求处理的像素粒度并不是绑定的关系。例如，光栅化一般要求按样本的粒度进行，但是像素处理阶段可以按像素的粒度进行。因此，光栅化和像素处理使用相同的图块尺寸并不合理。本公开实施例提供的技术方案，由于对光栅化和像素处理进行了解耦，因此，光栅化和像素处理可以对应不同的图块尺寸。光栅化处理对应的第一图块尺寸可以仅依据光栅化处理能力确定，而像素处理对应的第二图块尺寸可以仅依据像素处理能力确定。光栅化处理和像素处理均可以根据各自的处理能力实现处理效率的最大化。在上述任一图形处理器实施例的基础上，图形处理器还可以包括图块划分模块，该图块划分模块用于确定每个第一图块所覆盖的图元，并按第一图块分组将每个第一图块所覆盖的图元的图元索引保存到上述内存，以便光栅化处理模块根据第一图块所覆盖的图元的图元索引读取第一图块所覆盖的图元的图元信息。图元信息在几何阶段生成，图元信息中包括图元的顶点属性信息和图元的基本信息。作为举例而非限定，如图1所示，在一些实施例中，保存图元信息的数据结构为图元块，每个图元块包括多个图元的图元信息。每个第一图块对应一个第一图块数据结构，每个第一图块数据结构中包括对应第一图块所覆盖的图元的图元索引，图元索引指示了图元的图元信息的存储地址。例如，第一图块Tile0覆盖了四个图元，这四个图元分别为：图元1-0、图元1-1、图元2-0和图元3-1。其中，图元1-0的图元信息为第一图元块中的图元信息0，图元1-1的图元信息为第一图元块中的图元信息1，图元2-0的图元信息为第二图元块中的图元信息0，图元3-1的图元信息为第三图元块中的图元信息1。那么，第一图块Tile0对应的第一图块数据结构中包括图元1-0的图元索引，图元1-1的图元索引，图元2-0的图元索引，和图元3-1的图元索引。又例如，第一图块Tile1覆盖了三个图元，这三个图元分别为：图元1-1、图元2-0和图元3-0。其中，图元1-1和图元2-0的相关介绍可参照上述描述，此处不再赘述。图元3-0的图元信息为第三图元块中的图元信息0。那么，第一图块Tile1对应的第一图块数据结构中包括图元1-1的图元索引，图元2-0的图元索引和图元3-0的图元索引。实际应用中，还可以利用图元标识作为图元索引。本公开实施例中，图块划分模块将图块数据结构的存储地址发送给光栅化处理模块，以便光栅化处理模块根据该存储地址逐块从每个图块数据结构中读取第一图块所覆盖的图元的图元索引，进而根据图元索引读取图元信息。在上述任一图形处理器实施例的基础上，像素处理模块包括多个算术逻辑单元，逐块根据读取到的像素信息进行像素处理的任务由多个算术逻辑单元执行，像素处理模块对应的缓存为多个算术逻辑单元的本地存储空间。其中，多个算术逻辑单元复用计算用算术逻辑单元。本公开中，将用于执行图像渲染任务的算术逻辑单元称为渲染用算术逻辑单元，将用于执行计算任务的算术逻辑单元称为计算用算术逻辑单元。现有技术中，渲染用算术逻辑单元仅用于进行图像渲染，计算用算术逻辑单元仅用于进行计算。本公开创新性地提出，复用计算用算术逻辑单元实现像素处理功能。作为举例而非限定，一个典型的计算用算术逻辑单元的结构如图2所示。其中，work item为GPU的ALU,对一个图块进行像素处理的计算任务被拆分到多个work item上执行，它们产生的临时数据在一个本地随机存储器中进行交换。当一个图块的像素处理计算任务完成，localRAM中的数据被写回系统内存。Local RAM越大，GPU跟系统内存需要进行的数据交换带宽越小。为了提高效率，像素处理过程仍然按tile执行，使用local RAM存储像素处理过程中产生的像素数据。因此local RAM的大小决定了tile的大小。像素处理过程从系统内存中获得像素的数据结构，然后从像素的数据结构中获得覆盖这个像素的图元。像素处理过程读取图元的属性对像素进行插值计算，光照计算，抗锯齿等操作。发明人在实现本发明的过程中，通过分析3D渲染的数据发现：像素处理占据了3D渲染80％以上的时间，这意味着GPU的大部分渲染资源被用来进行像素处理，而非几何处理。发明人还发现：目前主流的采用TBDR架构的多核图形处理系统，为达到较高帧率，几何处理可以在一个GPU核上完成，但像素处理需要多GPU核共同完成。这就意味着，提高3D渲染帧率的关键是在于提高GPU的计算资源。本公开实施例提供的技术方案，将光栅化与像素处理过程解耦，使得这两个图像处理过程可以分别进行优化。以提高3D渲染帧率为例，由于像素处理过程与光栅化处理过程解耦，因此，可以单独像素处理过程，为其匹配更多的计算资源，而不需要优化几何处理及光栅化处理等渲染管线。具体的，像素处理过程可以使用更大尺寸的第二图块。这种情况下，可以复用计算用算术逻辑单元，并且复用计算用算术逻辑单元的缓存，而不需要单独设计G缓冲区。像素处理要使用的片上缓存和GPU的计算要使用的缓存复用。GPU为了提高计算能力往往增加了计算核或者较多的计算资源，本公开将像素处理和光栅化之前的阶段解耦，更有利于像素处理使用GPU的计算核；另外，通过将像素处理和光栅化之前的阶段解耦，即使像素处理需要占据更多的渲染时间，可以通过提高GPU的计算能力来解决，而不需要重新匹配其他渲染管线的处理能力。由于光栅化和像素处理过程解耦，它们不需要再使用相同的图块尺寸，从而可以根据光栅化的缓存和像素处理的缓存分别调整图块尺寸。本公开实施例还提供一种图形处理系统，该图形处理系统包括上述任一实施例中所述的图形处理器。本公开实施例中，图形处理系统的产品形态可以为SOC芯片。本公开实施例中的图形处理器系统可以是单dieSOC芯片，也可以是多die互联的SOC芯片。下面以一个die为例，对本公开提供的图形处理系统的架构及工作原理进行说明。在图3所示的一个实施例中，单die的图形处理系统包括GPU核，该GPU核即上述的图形处理器。GPU核用来处理绘图的指令，根据绘图指令，执行图像渲染的Pipeline，还可以用来执行其他运算指令。GPU核中进一步包括：计算单元，用于执行着色器编译后的指令，属于可编程模块，由大量的ALU组成；缓存，用于GPU核数据的缓存，以减少对内存的访问；光栅化模块，3D渲染管线的一个固定的阶段，进一步包括图元信息计算模块和像素信息处理模块；图块划分模块，TBR和TBDR GPU架构中对一帧进行图块划分处理；裁剪模块，3D渲染管线的一个固定的阶段，裁剪掉观察范围外，或者背面不显示的图元；后处理模块，用于对画完的图进行缩放，裁剪，旋转等操作；微核，用于GPU核上各个管线硬件模块之间的调度，或者用于多GPU核的任务调度。GPU核连接到片上网络。其中，片上网络用于图形处理系统上各个主和从之间的数据交换，本实施例中，片上网络包括配置总线、数据通信网络、通信总线等等。如图3所示，图形处理系统还可以包括：通用DMA，用于执行主机端到图形处理系统内存之间的数据搬移，例如，通过DMA将3D画图的顶点数据从主机端搬到图形处理系统内存；PCIe控制器，用于和主机通信的接口，实现PCIe协议，使图形处理系统通过PCIe接口连接到主机上，主机上运行了图形API以及显卡的驱动等程序；应用处理器，用于图形处理系统上各个模块任务的调度，例如GPU渲染完一帧图后通知应用处理器，应用处理器再启动显示控制器将GPU画完的图显示到屏幕上；内存控制器，用于连接内存设备，用于保存SOC上的数据；显示控制器，控制将内存里的frame buffer以显示接口输出到显示器上；视频解码，可以将主机硬盘上的编码的视频解码成能显示的画面；视频编码，可以将主机硬盘上原始的视频码流编码成指定的格式返回给主机。基于图3所示的图形处理系统架构，在一个实施例中，图形渲染过程如下：主机的图形API向SOC芯片发送绘图指令，要求对图像帧进行渲染。其中，图像帧中包括至少一个物体。通用DMA将图像帧中各个物体的顶点坐标信息从主机端搬运至图形处理系统内存。GPU核的计算单元获取上述绘图指令后，对该绘图指令进行译码。GPU核的顶点着色器从系统内存中获取图像帧中各个物体的顶点坐标信息，并将物体的顶点坐标信息传输给几何着色器，几何着色器将物体顶点的3D坐标转换为展开的纹理坐标坐标)。另外，计算单元还根据物体的顶点坐标信息进行图元装配，从而确定各个图元的顶点坐标。其中，纹理图中顶点坐标对应的纹理坐标处的取值为顶点颜色信息。图元的顶点坐标信息和顶点纹理坐标被保存到图元在系统内存中的数据结构中。几何处理结束后，图块划分模块根据深度缓冲区尺寸对图像帧中的图元进行第一图块划分处理，并将第一图块划分处理结果以第一图块数据结构保存，第一图块数据结构中包括图块覆盖的图元的图元索引，如图1所示，图元索引指示了图元的图元信息的存储地址。图块划分模块将第一图块数据结构的地址发送给光栅化模块。当一帧要显示的所有物体都已完成第一图块划分，那么会启动光栅化过程。根据延迟渲染的要求，光栅化模块逐个第一图块进行处理，每次从图块缓冲区读取覆盖当前第一图块的图元的图元索引；光栅化模块通过图元索引读取该图元的图元信息，并利用该图元的图元信息进行像素覆盖测试，以确定该图元覆盖的像素，然后进行像素插值计算及至少一项像素测试。本公开中，采用现有技术实现像素覆盖测试、像素插值计算及像素测试。经过光栅化处理，输出像素的信息。具体的，光栅化模块按第二图块分组保存像素信息。对像素信息的介绍可参照上述实施例的描述，此处不再赘述。当一帧所有的第一图块都完成了光栅化，那么将调用像素处理过程。具体的，GPU核的片段着色器以第二图块为单位，逐块根据图元覆盖像素的纹理坐标执行对应像素的着色计算。应当指出的是，上述以单GPU核为例对本公开实施例进行说明。但本公开实施例不仅适用于单GPU核的图形处理系统，还适用于多GPU核的图形处理系统。本公开实施例还提供一种电子装置，该电子装置包括上述任一实施例中所述的图形处理系统。在一些使用场景下，该电子装置的产品形式体现为显卡；在另一些使用场景下，该电子装置的产品形式体现为CPU主板。本公开实施例还提供一种电子设备，该电子设备包括上述的电子装置。在一些使用场景下，该电子设备的产品形式是便携式电子设备，例如智能手机、平板电脑、VR设备等；在一些使用场景下，该电子设备的产品形式是个人电脑、游戏主机、工作站、服务器等。基于相同的发明构思，本公开实施例还提供一种图形处理方法，该方法应用于图形处理器，如图4所示，该方法包括光栅化处理过程和像素处理过程。其中，光栅化处理过程包括：步骤401、逐块读取第一图块所覆盖的图元的图元信息，并逐块根据图元信息对第一图块所覆盖的图元进行光栅化处理，得到第一图块所覆盖的图元的像素信息，将各个第一图块所覆盖的图元的像素信息按第二图块分组保存到内存中；在各个第一图块所覆盖的图元的像素信息全部保存到内存后执行像素处理过程，像素处理过程包括：步骤402、逐块从内存中读取第二图块所覆盖的像素信息，并逐块根据读取到的像素信息进行像素处理。可选的，第一图块的尺寸根据光栅化处理结果对应的缓存容量确定。可选的，第二图块的尺寸根据像素处理结果对应的缓存容量确定。在上述任一图形处理方法实施例的基础上，逐块读取第一图块所覆盖的图元的图元信息之前，还可以确定每个第一图块所覆盖的图元，并按第一图块分组将每个第一图块所覆盖的图元的图元索引保存到内存，以便在光栅化处理过程中根据第一图块所覆盖的图元的图元索引读取第一图块所覆盖的图元的图元信息。进一步的，像素信息可以包括当前帧的帧标识信息。相应的，逐块根据读取到的像素信息进行像素处理得到的像素处理结果中携带帧标识信息。在上述任一图形处理方法实施例的基础上，第二图块所覆盖的像素信息可以以链表形式保存。在上述任一图形处理方法实施例的基础上，逐块根据读取到的像素信息进行像素处理，其具体实现方式可以包括：通过复用多个计算用算术逻辑单元逐块根据读取到的像素信息进行像素处理，像素处理结果对应的缓存为多个算术逻辑单元的本地存储空间。应当指出的是，上述图形处理方法与上述图形处理器基于同样的发明构思。因此，方法中各个步骤的具体实现方式及涉及到的名词解释可以参照上述实施例的描述，此处不再赘述。尽管已描述了本公开的优选实施例，但本领域内的技术人员一旦得知了基本创造性概念，则可对这些实施例作出另外的变更和修改。所以，所附权利要求意欲解释为包括优选实施例以及落入本公开范围的所有变更和修改。显然，本领域的技术人员可以对本公开进行各种改动和变型而不脱离本公开的精神和范围。这样，倘若本公开的这些修改和变型属于本公开权利要求及其等同技术的范围之内，则本公开也意图包含这些改动和变型在内。
