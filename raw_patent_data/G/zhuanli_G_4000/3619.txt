标题title
一种在线时空交通流预测方法
摘要abst
本发明公开了一种在线时空交通流预测方法，通过建立交通数据集病对交通数据集进行预处理，然后将部分数据输入到交通流预测模型中的编码器进行编码，再将编码结果由自适应解码器解码得出预测，计算自适应损失，根据该损失对编码器进行参数更新，然后将原始未分片的输入数据通过编码器和解码器得出交通流的预测值，并与标签数据共同计算预测损失，更新解码器和编码器的参数，如此往复，完成对模型的训练。本发明解决了已有发明难以对非平稳交通流数据自适应预测的缺陷，具有可靠性高，预测准确和实用性强的特点。
权利要求书clms
1.一种在线时空交通流预测方法，其特征在于，包含以下步骤：步骤 S1：获取历史交通流数据；步骤S2：对历史交通流数据进行归一化预处理，建立训练数据集；训练数据集中包括成若干组输入数据，每组输入数据按照时序分片为有标签数据、无标签数据，再将得到的无标签数据按照时序和预设比例划分为自适应有标签数据和自适应无标签数据；步骤 S3：构建包括基于自监督学习和Transformer的交通流预测模型：交通流预测模型包括编码器，编码器的输出分别作为非自适应解码器和自适应解码器的输入；非自适应解码器和自适应解码器分别计算预测损失和自适应损失，并将预测损失和自适应损失反向传播到编码器，更新编码器的参数；步骤S4：训练交通流预测模型的自监督辅助任务：训练时，先将一组输入数据的自适应无标签数据输入编码器，编码器生成包含交通数据特征的隐向量并输入自适应解码器，自适应解码器解码后得到与自适应有标签数据长度相同的自适应预测数据，将自适应预测数据与自适应有标签数据比较得到自适应预测损失，之后自适应解码器将自适应预测损失通过反向梯度传播算法传递到编码器并更新编码器的参数；步骤S5：将无标签数据输入更新参数后的编码器，编码器生成包含交通数据特征的隐向量并输入非自适应解码器，非自适应解码器输出非自适应预测值，非自适应预测值与有标签数据比较得到非自适应预测损失，非自适应解码器将非自适应预测损失通过反向梯度传播算法传递到编码器并更新编码器的参数；步骤S6：重复步骤S4和S5，直至自适应预测损失和非自适应预测损失均小于预设阈值，得到训练好的交通流预测模型；步骤S7：使用训练好的交通流预测模型执行现实中的交通流预测任务：将到达的实时的交通流数据复制并存储为两份相同的副本，第一份副本按照时序和预设比例划分为实时交通流数据的自适应无标签数据和实时交通流数据的自适应有标签数据，将实时交通流数据的自适应无标签数据输入训练好的交通流预测模型的编码器，编码器生成包含交通数据特征的隐向量并输入自适应解码器，自适应解码器输出自适应预测值，将自适应预测值与实时交通流数据的自适应有标签数据比较得到自适应预测损失，自适应解码器解码将自适应预测损失通过反向梯度传播算法传递到编码器并更新编码器的参数，得到更新后的编码器；然后将交通流数据的第二份副本输入更新后的编码器，更新后的编码器将包含交通数据特征的隐向量并输入非自适应解码器，得出最终的交通流预测值并输出。2.如权利要求1所述的在线时空交通流预测方法，其特征在于，所述编码器沿数据传输方向依次包括图注意力模块、位置编码模块、第一多头注意力模块、第一线性变换模块和归一化模块；所述自适应解码器沿数据传输方向依次包括第二多头注意力模块、第一激活函数模块、第三多头注意力模块、第二线性变换模块、第二激活函数模块、第四多头注意力模块；所述非自适应解码器沿数据传输方向依次包括第五多头注意力模块、第三激活函数模块、第三线性变换模块、第四激活函数模块和第四线性变换模块；所述图注意力模块用于提取不同传感器间的空间关联关系；位置编码模块用于对交通流数据时序间的先后关系进行编码；第一多头注意力模块、第二多头注意力模块、第三多头注意力模块、第四多头注意力模块和第五多头注意力模块均用于提取特征，建立交通流数据间时序关系；第一线性变换模块、第二线性变换模块和第三线性变换模块均用于特征的变换和融合；归一化模块用于把特征的均值和方差变换到0和1，以缓解梯度消失并提高网络的泛化性能；第一激活函数模块、第二激活函数模块、第三激活函数模块和第四激活函数模块均用来对数据进行非线性变换。3.如权利要求1所述的在线时空交通流预测方法，其特征在于，所述步骤S1中，对无标签数据分片，分为自适应无标签数据 和自适应有标签数据两个部分；其中k为分片长度， /＞ 为对应于第n个传感器的输入数据的无标签数据，/＞为对应与第n个传感器的自适应有标签数据；为采样时间在/＞时刻的路网交通流数据，/＞为输入数据的长度，即输入数据的采样的时间点个数，/＞为要预测的序列的开始时刻。4.如权利要求3所述的在线时空交通流预测方法，其特征在于，所述步骤S4中，编码器的数据处理方法如下：先经过图注意力模块编码得到/＞，如公式：其中/＞为可学习的参数矩阵，/＞为pytorch深度学习框架中的pytorch.nn.sigmoid函数，N为交通网络的传感器个数，n为路网传感器的编号；/＞为道路编号n和j间权重值，计算公式如下：其中,/＞为可学习的参数矩阵，LeakeyReLU为pytorch深度学习框架中的pytorch.nn.F.LeakeyReLU激活函数，/＞为道路编号为k的自适应无标签数据，为指数函数；将输入到位置编码模块进行编码，具体计算如下：其中sin、cos分别代表正、余弦函数，pos指示/＞中的/＞个位置，/＞代表隐状态的维数，2i和2i+ 1分别代表/＞中的/＞个位置中的奇数位置和偶数位置；/＞代表由位置编码模块得到的交通流数据位置编码；接着将/＞与/＞直接相加得到经过位置编码的隐向量/＞；使用第一多头注意力模块对提取特征得到/＞：其中，Q1、K1和V1均是参数矩阵；/＞为嵌入维度，取值为64，代表隐向量的维度，/＞即为多头注意力模块的缩放值；Softmax为python中pytorch.nn.F.Softmax函数，T表示对向量或矩阵转置；/＞为/＞提取的特征；之后，由第一线性变换模块模块处理得到/＞：其中，ReLU为python中的pytorch.nn.F.ReLU函数,/＞为神经网络中可学习的参数；最后，由pytorch.nn.F.LayerNorm函数编码后得到第一隐向量/＞：。5.如权利要求4所述的在线时空交通流预测方法，其特征在于，自适应解码器对解码的步骤如下：首先，使用第二多头注意力模块对进行运算，计算方法如公式，得到/＞:其中，均为可学习的参数，/＞为嵌入维度，取为64；/＞为隐向量特征；之后，使用pytorch框架的pytorch.nn.F.tanh激活函数对进行激活,再将结果经过与公式计算方法一致的第三多头注意力模块对隐向量/＞执行提取特征的操作得到/＞:/＞其中，/＞为可学习的参数矩阵；再使用pytorch.nn.F.ReLU函数对/＞执行激活操作，最后经过线性变换得到预测值：其中，为可学习的参数，ReLU为pytorch.nn.F包中的激活函数；然后更新编码器的参数：由MSE损失函数计算预测值与/＞的自适应损失，公式如下：之后，根据自适应损失使用pytorch的Adam优化函数反向传播更新编码器和自适应解码器的所有参数，包括：。6.如权利要求4所述的在线时空交通流预测方法，其特征在于，所述步骤S5中的编码器采用与步骤S4中编码器相同的步骤得到第二隐向量，非自适应解码器对第二隐向量的解码的步骤如下：使用Tranformer中的多头注意力机制对第二隐向量提取特征，得到/＞：其中，是可学习的参数；/＞为嵌入维度，取值为64；接着使用pytorch深度学习框架中的pytorch.nn.F.tanh激活函数对处理，得到的结果再通过非自适应解码器的线性变换和激活函数模块得到/＞：其中/＞为pytorch.nn.F.sigmoid函数,/＞为非自适应解码器的线性变换的参数；最后，在使用线性变换模块得到预测的输出:/＞其中ReLU为pytorch.nn.F.ReLU,/＞为非适应解码器中线性变换模块的参数；最后计算和/＞间的MSE误差：为对应于传感器编号为n的有标签数据；之后根据MSE误差使用pytorch的Adam优化函数反向传播更新编码器和非自适应解码器的的所有参数，包括：。/＞
说明书desc
技术领域本发明涉及交通领域，特别是涉及一种结合自监督学习和transformer的在线时空交通流预测方法。背景技术近年来，智慧交通系统得到了广泛的部署和应用，有望成为解决交通拥堵等交通问题的首选方案。智慧交通系统采用现代信息技术和通信技术，将各种交通设施和设备互相联接和信息共享，实现城市交通运行的全方位、高效率、实时监控和管理，为提高交通效率提供了有效手段。准确及时的交通流量预测对于智能交通系统的成功部署具有重要意义，可以帮助道路使用者做出更好的出行决策，缓解交通拥堵，提高交通运营效率。然而由于交通流复杂、非线性和非平稳以及时空相关的特性，交通流预测一直是一个难题。随着计算机技术和互联网技术的发展和逐步成熟，各种新型算法越来越多地应用于交通流预测中。传统的交通流预测算法需要人为地进行特征工程来处理目前仍快速增长海量的交通数据。它们还难以将交通网络的空间特征纳入算法的设计中，并且不具有实时更新和预测的特性。因此，仅凭这些算法实现精确、实时的交通流预测十分困难。目前，深度学习技术取得了巨大的发展，在人脸识别、目标检测等众多领域都有广泛的应用，深度学习技术在短时时空交通流预测领域也取得了重大的突破。通过深度学习的图神经网络可以将路网复杂的时间和空间关联融入到预测任务中，使得精度得以提升。尽管目前基于深度学习的交通流预测算法的准确性不断提升，但其往往基于离线学习模式，这会带来相当多的问题。离线式学习指搜集足够的训练数据后，停止预测算法重新训练深度网络，取得最优参数，再重新预测。这回带来三个问题，第一，停机重新训练这段时间，预测停止，预测结果不能被使用，影响到其实用性。第二，由于交通流预测任务存在时间关联和空间关联特性，且在真实的场景中，这些关联往往随时间改变，即数据分布不平稳。离线的深度学习算法往往假设训练数据的概率分布或是时空关联与使用场景的相一致，当这种假设不成立时就会使得算法的预测能力下降。第三，交通数据可能是不充足的，其中的信息无法涵盖这种不平稳特性，无论算法怎样训练模型都不可能对非平稳的情形做出准确的预测。现有的短时交通流预测算法大多基于离线式深度学习，这使得它们的实用性和准确性都存在提升的空间。虽然很多方案都尝试缓解上述缺陷，然而它们基于离线式的框架，不能从根本上解决这一问题。在线式学习的难点在于，算法如何根据当前的状态估计交通数据分布的变化，从而自适应地调整，因为神经网络毕竟不是人，它不能自主地感知外界的变化。因此，如何设计一种能在线自主更新参数，在线纠偏的时空交通流预测算法是提升实时预测能力，提升算法实用性的关键因素。名词解释：1.Pytorch 是一个开源深度学习框架,带有 Python 和 C++ 接口。2.Sigmoid函数是一个在生物学中常见的S型函数，也称为S型生长曲线，在信息科学中，由于其单增以及反函数单增等性质，Sigmoid函数常被用作神经网络的激活函数，将变量映射到0,1之间。MSE损失函数：通常用于多元线性回归和logistic回归,对应的梯度下降算法是机器学习中最常用的优化算法之一。Adam优化函数：即自适应运动估计算法，是梯度下降的扩展,是AdaGrad和RMSProp等技术的自然继承者。发明内容为解决上述技术问题，本发明提出了一种结合自监督学习和transformer的在线时空交通流预测方法。本发明的目的通过以下技术方案实现：一种在线时空交通流预测方法，包含以下步骤：步骤 S1：获取历史交通流数据；步骤S2：对历史交通流数据进行归一化预处理，建立训练数据集；训练数据集中包括成若干组输入数据，每组输入数据按照时序分片为有标签数据、无标签数据，再将得到的无标签数据按照时序和预设比例划分为自适应有标签数据和自适应无标签数据；步骤 S3：构建包括基于自监督学习和Transformer的交通流预测模型：交通流预测模型包括编码器，编码器的输出分别作为非自适应解码器和自适应解码器的输入；非自适应解码器和自适应解码器分别计算预测损失和自适应损失，并将预测损失和自适应损失反向传播到编码器，更新编码器的参数；步骤S4：训练交通流预测模型的自监督辅助任务：训练时，先将一组输入数据的自适应无标签数据输入编码器，编码器生成包含交通数据特征的隐向量并输入自适应解码器，自适应解码器解码后得到与自适应有标签数据长度相同的自适应预测数据，将自适应预测数据与自适应有标签数据比较得到自适应预测损失，之后自适应解码器将自适应预测损失通过反向梯度传播算法传递到编码器并更新编码器的参数；步骤S5：将无标签数据输入更新参数后的编码器，编码器生成包含交通数据特征的隐向量并输入非自适应解码器，非自适应解码器输出非自适应预测值，非自适应预测值与有标签数据比较得到非自适应预测损失，非自适应解码器将非自适应预测损失通过反向梯度传播算法传递到编码器并更新编码器的参数；步骤S6：重复步骤S4和S5，直至自适应预测损失和非自适应预测损失均小于预设阈值，得到训练好的交通流预测模型；步骤S7：使用训练好的交通流预测模型执行现实中的交通流预测任务：将到达的实时的交通流数据复制并存储为两份相同的副本，第一份副本按照时序和预设比例划分为实时交通流数据的自适应无标签数据和实时交通流数据的自适应有标签数据，将实时交通流数据的自适应无标签数据输入训练好的交通流预测模型的编码器，编码器生成包含交通数据特征的隐向量并输入自适应解码器，自适应解码器输出自适应预测值，将自适应预测值与实时交通流数据的自适应有标签数据比较得到自适应预测损失，自适应解码器解码将自适应预测损失通过反向梯度传播算法传递到编码器并更新编码器的参数，得到更新后的编码器；然后将交通流数据的第二份副本输入更新后的编码器，更新后的编码器将包含交通数据特征的隐向量并输入非自适应解码器，得出最终的交通流预测值并输出。进一步的改进，所述编码器沿数据传输方向依次包括图注意力模块、位置编码模块、第一多头注意力模块、第一线性变换模块和归一化模块；所述自适应解码器沿数据传输方向依次包括第二多头注意力模块、第一激活函数模块、第三多头注意力模块、第二线性变换模块、第二激活函数模块、第四多头注意力模块；所述非自适应解码器沿数据传输方向依次包括第五多头注意力模块、第三激活函数模块、第三线性变换模块、第四激活函数模块和第四线性变换模块；所述图注意力模块用于提取不同传感器间的空间关联关系；位置编码模块用于对交通流数据时序间的先后关系进行编码；第一多头注意力模块、第二多头注意力模块、第三多头注意力模块、第四多头注意力模块和第五多头注意力模块均用于提取特征，建立交通流数据间时序关系；第一线性变换模块、第二线性变换模块和第三线性变换模块均用于特征的变换和融合；归一化模块用于把特征的均值和方差变换到0和1，以缓解梯度消失并提高网络的泛化性能；第一激活函数模块、第二激活函数模块、第三激活函数模块和第四激活函数模块均用来对数据进行非线性变换。进一步的改进，所述步骤S1中，对无标签数据分片，分为自适应无标签数据/＞ 和自适应有标签数据 /＞两个部分；其中k为分片长度， /＞ 为对应于第n个传感器的输入数据的无标签数据，/＞为对应与第n个传感器的自适应有标签数据；/＞为采样时间在/＞时刻的路网交通流数据，/＞为输入数据的长度，即输入数据的采样的时间点个数，/＞为要预测的序列的开始时刻。进一步的改进，所述步骤S4中，编码器的数据处理方法如下：先经过图注意力模块编码得到/＞，如公式：其中为可学习的参数矩阵，/＞为pytorch深度学习框架中的pytorch.nn.sigmoid函数，N为交通网络的传感器个数，n为路网传感器的编号；/＞为道路编号n和j间权重值，计算公式如下：/＞其中,为可学习的参数矩阵，LeakeyReLU为pytorch深度学习框架中的pytorch.nn.F.LeakeyReLU激活函数，/＞为道路编号为k的自适应无标签数据，为指数函数；将输入到位置编码模块进行编码，具体计算如下：其中sin、cos分别代表正、余弦函数，pos指示中的/＞个位置，/＞代表隐状态的维数，2i和2i + 1分别代表/＞中的/＞个位置中的奇数位置和偶数位置；/＞代表由位置编码模块得到的交通流数据位置编码；接着将/＞与/＞直接相加得到经过位置编码的隐向量/＞；使用第一多头注意力模块对提取特征得到/＞：其中，Q1、K1和V1均是参数矩阵；为嵌入维度，取值为64，代表隐向量的维度，即为多头注意力模块的缩放值；Softmax为python中pytorch.nn.F.Softmax函数，T表示对向量或矩阵转置；/＞为/＞提取的特征；之后，由第一线性变换模块模块处理得到/＞：其中，ReLU为python中的pytorch.nn.F.ReLU函数,为神经网络中可学习的参数；最后，由pytorch.nn.F.LayerNorm函数编码后得到第一隐向量/＞：。进一步的改进，自适应解码器对解码的步骤如下：首先，使用第二多头注意力模块对进行运算，计算方法如公式，得到/＞:其中，均为可学习的参数，/＞为嵌入维度，取为64；/＞为隐向量特征；之后，使用pytorch框架的pytorch.nn.F.tanh激活函数对进行激活,再将结果经过与公式计算方法一致的第三多头注意力模块对隐向量/＞执行提取特征的操作得到/＞:其中，为可学习的参数矩阵；再使用pytorch.nn.F.ReLU函数对执行激活操作，最后经过线性变换得到预测值：其中，为可学习的参数，ReLU为pytorch.nn.F包中的激活函数；然后更新编码器的参数：由MSE损失函数计算预测值与/＞的自适应损失，公式如下：之后，根据自适应损失使用pytorch的Adam优化函数反向传播更新编码器和自适应解码器的所有参数，包括：。进一步的改进，所述步骤S5中的编码器采用与步骤S4中编码器相同的步骤得到第二隐向量，非自适应解码器对第二隐向量/＞的解码的步骤如下：/＞使用Tranformer中的多头注意力机制对第二隐向量提取特征，得到/＞：其中，是可学习的参数；/＞为嵌入维度，取值为64；接着使用pytorch深度学习框架中的pytorch.nn.F.tanh激活函数对处理，得到的结果再通过非自适应解码器的线性变换和激活函数模块得到/＞：其中为pytorch.nn.F.sigmoid函数,/＞为非自适应解码器的线性变换的参数；最后，在使用线性变换模块得到预测的输出:其中ReLU为pytorch.nn.F.ReLU,为非适应解码器中线性变换模块的参数；最后计算和/＞间的MSE误差：为对应于传感器编号为n的有标签数据；之后根据MSE误差使用pytorch的Adam优化函数反向传播更新编码器和非自适应解码器的的所有参数，包括：。相较于传统的时空交通流预测算法，本发明优势如下：1.本发明使用了自监督学习技术，由于传统的交通流预测算法在预测阶段只能收到实时到达的输入数据，而缺乏标签数据，这样就对算法的实时在线预测带来了困难，同时预测阶段的输入数据可能与步骤S2中生成并由步骤S3、S4中使用的训练数据集的概率分布不一致，这会降低方法预测的准确性，因此本发明使用了两个解码器和一个编码器的结构，这样带来两个好处。1、这可以处理不定长的数据，在步骤S4中提及的自适应输入数据和本步骤S5中输入到编码器的长度不一致，解码器处理会有困难，两个解码器的设计解决了这个问题。2、编码器训练阶段和预测阶段都要更新参数，自适应解码器的参数在预测阶段保持不变，可以提取到预测阶段输入数据与训练数据集数据的差异，从而在线修正编码器的参数，提升了算法的预测精度以及实用性，不必再像传统的时空交通流预测算法一样离线停机重新训练，再给出预测。2.利用了Transformer的多头注意力模块以及图注意模块分别提取交通流数据的时间和空间特征，这样能够有效地建模长的交通流数据，能够建立整个路网的全局依赖关系从而提取出更准确的特征，自适应地建模交通流的时空关联特性，能处理交通流数据高度非线性，非平稳性的特点。故本发明采用这种设计。附图说明利用附图对本发明做进一步说明，但附图中的内容不构成对本发明的任何限制。图1为本发明的整体流程图示意图；图2为本发明的数据流动示意图；图3为编码器的结构示意图；图4为自适应解码器的结构示意图；图5为非自适应解码器的结构示意图。具体实施方式为了使发明的目的、技术方案及优点更加清楚明白，以下结合附图及实例，对本发明进行进一步的详细说明。交通流预测属于智慧交通系统的核心功能，准确实时的预测对于智慧交通系统后续的路径规划、通行时间估计都至关重要。由于传统的交通流预测算法采用离线方式，对于变化的输入数据只能采取停机的方式重新训练，不能自适应地依据实时采样结果更新网络参数。这一缺陷影响到算法的实用性和准确性。鉴于此，本发明提供一种结合了自监督学习和Transformer的短时时空交通流预测方法，整个算法的流程图如图1所示，具体细节如下：一、训练阶段步骤S1获取历史交通流数据从城市交通管理系统收集采样自传感器的历史交通流数据，由此建立训练数据集；具体而言，本步骤时使用城市道路网络中部分街道上部署的传感器采集到的交通数据来建立训练数据集，其为一系列的交通流数据。之后对该数据集的缺失数据进行线性插值处理。步骤S2 对历史交通流数据进行归一化预处理，建立训练数据集将历史数据分片成为一系列输入数据，并形成数据集，输入数据指的是{道路编号，采样时间，交通流数据}，其中，道路编号指传感器所在的道路的编号，采样时间指到这个向量数据所对应的时间步的长度，交通流数据包括车速、车流量和车道占用率三个指标。在本步骤中输入数据可表示为： 其中的/＞,表示训练数据集中的无标签数据，n代表编号为n的传感器，/＞表示预测的开始时间，/＞表示输入数据的时间步长度，即输入长度，这里取为12，/＞代表这些数据属于实数集合，N代表路网道路的数量，3指交通流数据的具有三个指标。接着将交通流数据分片为一系列有标签数据,其中,与输入数据集相同/＞代表预测开始时间，/＞代表需要预测的时间长度，这里取为6，1代表预测的参数，在这里指车流量。这里使用不同路段的交通流数据将同步输入本预测算法中做预测，可以被后续的图注意模块模拟不同路段的相关性从而做出更准确的预测。步骤S3 构建结合自监督学习和Transformer的短时时空交通流预测模型建立模型，构建带有编码器、解码器、自适应解码器的结合自监督学习和Transformer的短时时空交通流预测模型。如图2所示。步骤S4 训练交通流预测模型的自监督辅助任务a) 由编码器对输入数据编码首先将训练数据集中的输入无标签数据分片，分为/＞ 和 /＞两个部分，其中k为分片长度取值为6,则/＞部分的长度也为6。此时， /＞ 为自适应输入数据，/＞为自适应标签数据。将输入到编码器中进行编码。/＞先经过图注意力模块编码得到/＞，如公式：其中为可学习的参数矩阵，/＞为pytorch深度学习框架中的pytorch.nn.sigmoid函数，N为交通网络的传感器个数，n为路网传感器的编号；/＞为道路编号n和j间权重值，计算公式如下：/＞其中,为可学习的参数矩阵，LeakeyReLU为pytorch深度学习框架中的pytorch.nn.F.LeakeyReLU激活函数，/＞为道路编号为k的自适应无标签数据，为指数函数。将输入到图1位置编码模块进行编码，具体计算如下：其中sin、cos分别代表正、余弦函数，pos指示中的/＞个位置，/＞代表隐状态的维数，在这里被设为64，2i和2i + 1代表/＞中的/＞个位置中的奇数位置还是偶数位置。接着将/＞与/＞与PE直接相加得到经过位置编码的隐向量/＞。之后使用Transformer模型的缩放点积注意力机制对提取特征得到/＞，如图3中的多头注意力模块所示，具体以下列公式计算：其中，Q1、K1和V1均是参数矩阵；为嵌入维度，取值为64，代表隐向量的维度，即为多头注意力模块的缩放值；Softmax为python中pytorch.nn.F.Softmax函数，T表示对向量或矩阵转置；/＞为/＞提取的特征。为了增强预测的准确性，公式使用了Transformer中的缩放点积注意力机制，进一步地提升模型拟合复杂交通流序列的能力。之后，由图3中的线性变换模块处理，具体计算如下：其中，ReLU为python中的pytorch.nn.F.ReLU函数,为神经网络中可学习的参数；最后，由pytorch.nn.F.LayerNorm得到编码后的隐向量/＞：b) 由辅助解码器对解码首先，使用图4中的自适应解码器的多头注意力模块对进行运算，计算方法如公式，得到/＞:其中，均为可学习的参数，/＞为嵌入维度，取为64。之后，使用pytorch框架的pytorch.nn.F.tanh激活函数对进行激活,再将结果经过与公式计算方法一致的另一个多头注意力模块对隐向量/＞执行提取特征的操作得到/＞:其中，为可学习的参数矩阵。再使用pytorch.nn.F.ReLU函数对隐向量执行激活操作。最后经过线性变换模块得到预测值：其中，为可学习的参数，ReLU为pytorch.nn.F包中的激活函数。c) 更新编码器的参数由MSE损失函数计算预测值与/＞的自适应损失，公式如下：之后，由自适应损失使用pytorch的Adam优化函数反向传播更新编码器的所有参数，包括：。步骤S5:执行交通流预测模型的预测训练任务a)将步骤S2中的输入数据输入到编码器编码此时将原始的未分片的输入数据输入图中所示的编码器得到隐向量/＞。计算方式与步骤S4中的a)一致。b）将编码后的隐向量送入图3的解码器解码。将隐向量送入图中的解码器中解码。首先，使用Tranformer中的多头注意力机制继续提取特征，得到/＞：其中，是可学习的参数。接着使用pytorch深度学习框架中的pytorch.nn.F.tanh激活函数对处理，得到的结果再通过解码器的线性变换模块和激活函数模块得到：其中为pytorch.nn.F.sigmoid,/＞为解码器的线性变换的参数。最后，在使用线性变换模块得到预测的输出:其中ReLU为pytorch.nn.F.ReLU,为解码器中这个线性变换模块的参数。最后计算和/＞间的MSE误差，与公式相似：步骤S6 训练交通流预测模型对训练数据集的所有输入数据和标签数据执行步骤S4和步骤S5共500次，得到预测模型的最佳参数。步骤S7 执行现实中的交通流预测任务，即预测任务a）执行自适应预测任务，在线修正编码器参数。将实时到达的交通流输入数据分片为两个部分/＞和,k取值为6，/＞取值为12,t代表当前的采样时间，用来指示这是一个实时到达的交通流数据。将/＞输入到编码器中编码，计算方法同步骤S4的a）部分。之后将编码结果输入到自适应解码器中解码得到实时的自适应预测值，方法同步骤S4中的b）部分，最后计算损失并更新编码器的参数，与步骤S4中的b）计算方式相同。本步骤的好处在于，利用了自监督学习不需要标签数据的特点，避免可现有方法在预测阶段实时的输入数据没有的标签数据，因此不能实时计算损失，也就不能在线更新编码器的参数，从而影响到预测准确性的缺陷。本发明将实时输入数据分片后，前半部分即作为预测阶段的自适应输入，后半部分/＞作为预测阶段的自适应标签，解决了这个困难，实现了在线修正编码器参数的功能。b）执行预测任务得到交通流的预测结果将输入数据输入到经过步骤S7 中A)得到的经过修正参数的编码器中编码再由图中的解码器解码，得到实时预测结果。如表1所示，在真实路网数据上的对比实验证实了本发明的预测的准确性，如下表所示。本发明的与其他七个基准方法进行了对比，包括了HA、ARIMA、VAR、SVR、LSTM、DCRNN和STGCN，结果证实本发明的有效性。表1本发明所提出的方法与其他七个基准方法在PeMS-Bay以及METR-LA数据上的对比实验结果。最后应当说明的是，以上实施例仅用于说明本发明的技术方案而非对本发明保护范围的限制，尽管参照较佳实施例对本发明作了详细说明，本领域的普通技术人员应当了解，可以对本发明的技术方案进行修改或者等同替换，而不脱离本发明技术方案的实质和范围。
