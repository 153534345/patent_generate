标题title
一种用于降低假阳率的布谷鸟过滤器设计方法及系统
摘要abst
本发明公开了一种用于降低假阳率的布谷鸟过滤器设计方法及系统，涉及布谷鸟过滤器技术领域。设计方法包括以下步骤：构建由多个桶组成的布谷鸟过滤器，每个桶中由多个槽构成，槽中存放元素的指纹；将布谷鸟过滤器均匀地分为上下两部分，上半部分过滤器称为F1，下半部分过滤器称为F2；设置p1和p2两个候选桶；通过对每部分过滤器中桶的个数取模和异或的方法使得任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中；将待查找元素利用布谷鸟过滤器进行查找，查找到候选桶p1或p2中有指纹与待查找元素的指纹相同即为查找成功。本发明不需要增加元数据和指纹长度就可实现候选桶的比较，且具有很强的兼容性，实现了假阳率的大幅降低。
权利要求书clms
1.一种用于降低假阳率的布谷鸟过滤器设计方法，其特征在于，包括以下步骤：构建由多个桶组成的布谷鸟过滤器，每个桶中由多个槽构成，槽中存放元素的指纹；将布谷鸟过滤器均匀地分为上下两部分，上半部分过滤器称为F1，下半部分过滤器称为F2；设置p1和p2两个候选桶；通过对每部分过滤器中桶的个数取模和异或的方法使得任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中；将待查找元素利用布谷鸟过滤器进行查找，查找到候选桶p1或p2中有指纹与待查找元素的指纹相同即为查找成功。2.如权利要求1所述的用于降低假阳率的布谷鸟过滤器设计方法，其特征在于，通过对每部分过滤器中桶的个数取模和异或的方法使得任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中，具体公式为：其中，f表示指纹，f＝fingerprint，fingerprint为指纹计算函数，p1、p2分别表示两个候选桶，x表示元素，M表示桶的个数，hash表示哈希函数。3.如权利要求1所述的用于降低假阳率的布谷鸟过滤器设计方法，其特征在于，查找过程中最大假阳率：其中，表示布谷鸟过滤器最大假阳率，M表示桶的个数，f表示指纹，b表示桶的大小。4.如权利要求1所述的用于降低假阳率的布谷鸟过滤器设计方法，其特征在于，所述布谷鸟过滤器槽中元素插入的具体步骤为：首选将元素x对应指纹fx存入到过滤器F1候选桶中，若候选桶/＞已满，则将指纹存入候选桶/＞中；若候选桶/＞已满，随机选取/＞中指纹fz进行驱逐，被驱逐指纹将被存放其所对应的候选桶/＞中，若/＞仍然是满的状态，则随机选择/＞中指纹将其驱逐到过滤器F2中。5.如权利要求1所述的用于降低假阳率的布谷鸟过滤器设计方法，其特征在于，所述布谷鸟过滤器通过过滤器替换方式直接应用到动态布谷鸟过滤器中。6.一种用于降低布谷鸟过滤器假阳率的设计系统，其特征在于，包括：过滤器构建模块，被配置为构建由多个桶组成的布谷鸟过滤器，每个桶中由多个槽构成，槽中存放元素的指纹；过滤器拆分模块，被配置为将布谷鸟过滤器均匀地分为上下两部分，上半部分过滤器称为F1，下半部分过滤器称为F2；候选桶设置模块，被配置为设置p1和p2两个候选桶；任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中；元素查找模块，被配置为将待查找元素利用布谷鸟过滤器进行查找，查找到候选桶p1或p2中有指纹与待查找元素的指纹相同即为查找成功。7.如权利要求6所述的用于降低布谷鸟过滤器假阳率的设计系统，其特征在于，候选桶p2在计算过程中使用异或运算，每部分过滤器桶的数量需要满足关系式M′＝2i-1，M′表示每部分过滤器的桶的个数，i取大于等于2的整数。8.如权利要求6所述的用于降低布谷鸟过滤器假阳率的设计系统，其特征在于，查找过程中最大假阳率：其中，表示布谷鸟过滤器最大假阳率，M表示桶的个数，f表示指纹，b表示桶的大小。9.如权利要求6所述的用于降低布谷鸟过滤器假阳率的设计系统，其特征在于，所述布谷鸟过滤器槽中元素插入的具体步骤为：首选将元素x对应指纹fx存入到过滤器F1候选桶中，若候选桶/＞已满，则将指纹存入候选桶/＞中；若候选桶/＞已满，随机选取/＞中指纹fz进行驱逐，被驱逐指纹将被存放其所对应的候选桶/＞中，若/＞仍然是满的状态，则随机选择/＞中指纹将其驱逐到过滤器F2中。10.如权利要求6所述的用于降低布谷鸟过滤器假阳率的设计系统，其特征在于，所述布谷鸟过滤器通过过滤器替换方式直接应用到动态布谷鸟过滤器中。
说明书desc
技术领域本发明涉及布谷鸟过滤器技术领域，尤其涉及一种用于降低假阳率的布谷鸟过滤器设计方法及系统。背景技术本部分的陈述仅仅是提供了与本发明相关的背景技术信息，不必然构成在先技术。布谷鸟过滤器是由布谷鸟哈希派生的近似集合表示结构，支持元素的插入、查找和删除操作。布谷鸟过滤器本质上是由多个桶组成的数组，每个桶中由多个槽构成，槽是布谷鸟过滤器的基本存储单元，存放元素的指纹。布谷鸟过滤器可以快速的判断元素是否在集合中，因此常被用于深度包检测、可搜索加密及IP地址黑名单检查等应用中。每个元素对应两个候选桶p1和p2，指纹存放在桶p1或p2中。在过滤器中查找元素时，首先计算其对应的两个候选桶和指纹，然后遍历这两个候选桶中所有指纹，判断其中是否有指纹与被查找指纹相同。由于指纹是通过哈希函数计算得到的，不同元素对应的指纹可能相同，因此在查找过程中存在假阳率问题。增加指纹长度可以降低假阳率，但是这会增加存储空间的开销。完美布谷鸟过滤器实现了在不增加指纹长度的前提下降低假阳率，其具体实现方法如图1所示，若将指纹存放在候选桶p1中的某个槽中则该槽中元数据值置0，若将指纹存放在候选桶p2中的某个槽中则该槽中元数据值置1。查找过程中，若槽中有指纹与被查找元素的指纹相同，则继续判断该槽中的元数据是否与该元素当前所查找的候选桶一致，若一致则查找成功，否则查找失败。虽然通过增加元数据的方式对比了候选桶的值，但是这会带来额外的空间开销，也会导致过滤器结构兼容性不强，不能直接应用于动态过滤器中。此外，查找过程中需要还对比元数据的值，这会导致额外的时间开销。在实际应用中，数据集大小是动态变化的，布谷鸟过滤器大小固定，不能满足动态数据集的存储需求，动态布谷鸟过滤器应运而生。动态布谷鸟过滤器通过调整过滤器的个数来实现存储容量的弹性变化，具体实现方式主要包括以下两种。一是基于链表或者二叉树的结构来调整过滤器个数，将一个布谷鸟过滤器视为链表或树的一个节点，如动态布谷鸟过滤器和压缩对数动态布谷鸟过滤器；二是受分布式系统启发，基于跳跃一致性哈希算法调整过滤器个数，将一个布谷鸟过滤器视为跳跃一致性哈希算法中的一个元素，如跳跃过滤器。这些动态布谷鸟过滤器方案虽然巧妙的实现了过滤器个数的弹性变化，但并没有优化布谷鸟过滤器的假阳率。当前针对布谷鸟过滤器的优化主要集中于提高其插入和查找操作的吞吐量，已有的降低过滤器假阳率方案不仅以牺牲存储空间为代价且其降低幅度较小。因此，如何在不增加存储空间前提下，大幅降低布谷鸟过滤器和动态布谷鸟过滤器的假阳率成为亟待解决的问题。发明内容针对现有技术存在的不足，本发明的目的是提供一种用于降低假阳率的布谷鸟过滤器设计方法及系统，不需要增加元数据和指纹长度就可实现候选桶的比较，实现了假阳率的大幅降低。并且本发明设计方法具有兼容性，可以应用于各种动态布谷鸟过滤器中，从而大幅降低动态布谷鸟过滤器的假阳率。为了实现上述目的，本发明是通过如下的技术方案来实现：本发明第一方面提供了一种用于降低假阳率的布谷鸟过滤器设计方法，包括以下步骤：构建由多个桶组成的布谷鸟过滤器，每个桶中由多个槽构成，槽中存放元素的指纹；将布谷鸟过滤器均匀地分为上下两部分，上半部分过滤器称为F1，下半部分过滤器称为F2；设置p1和p2两个候选桶；通过对每部分过滤器中桶的个数取模和异或的方法使得任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中；将待查找元素利用布谷鸟过滤器进行查找，查找到候选桶p1或p2中有指纹与待查找元素的指纹相同即为查找成功。进一步的，通过对每部分过滤器中桶的个数取模和异或的方法使得任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中，具体公式为：其中，f表示指纹，f＝fingerprint，fingerprint为指纹计算函数，p1、p2分别表示两个候选桶，x表示元素，M表示桶的个数，hash表示哈希函数。进一步的，查找过程中最大假阳率：其中，表示布谷鸟过滤器最大假阳率，M表示桶的个数，f表示指纹，b表示桶的大小。进一步的，所述布谷鸟过滤器槽中元素插入的具体步骤为：首选将元素x对应指纹fx存入到过滤器F1候选桶中，若候选桶/＞已满，则将指纹存入候选桶/＞中；若候选桶/＞已满，随机选取/＞中指纹fz进行驱逐，被驱逐指纹将被存放其所对应的候选桶/＞中，若/＞仍然是满的状态，则随机选择/＞中指纹将其驱逐到过滤器F2中。进一步的，所述布谷鸟过滤器通过过滤器替换方式直接应用到动态布谷鸟过滤器中。本发明第二方面提供了一种用于降低布谷鸟过滤器假阳率的设计系统，包括：过滤器构建模块，被配置为构建由多个桶组成的布谷鸟过滤器，每个桶中由多个槽构成，槽中存放元素的指纹；过滤器拆分模块，被配置为将布谷鸟过滤器均匀地分为上下两部分，上半部分过滤器称为F1，下半部分过滤器称为F2；候选桶设置模块，被配置为设置p1和p2两个候选桶；通过对每部分过滤器中桶的个数取模和异或的方法使得任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中；元素查找模块，被配置为将待查找元素利用布谷鸟过滤器进行查找，查找到候选桶p1或p2中有指纹与待查找元素的指纹相同即为查找成功。进一步的，候选桶p2在计算过程中使用异或运算，每部分过滤器桶的数量需要满足关系式M'＝2i-1，M'表示每部分过滤器的桶的个数，i取大于等于2的整数。进一步的，查找过程中最大假阳率：其中，表示布谷鸟过滤器最大假阳率，M表示桶的个数，f表示指纹，b表示桶的大小。进一步的，所述布谷鸟过滤器槽中元素插入的具体步骤为：首选将元素x对应指纹fx存入到过滤器F1候选桶中，若候选桶/＞已满，则将指纹存入候选桶/＞中；若候选桶/＞已满，随机选取/＞中指纹fz进行驱逐，被驱逐指纹将被存放其所对应的候选桶/＞中，若/＞仍然是满的状态，则随机选择/＞中指纹将其驱逐到过滤器F2中。进一步的，所述布谷鸟过滤器通过过滤器替换方式直接应用到动态布谷鸟过滤器中。以上一个或多个技术方案存在以下有益效果：本发明公开了一种用于降低假阳率的布谷鸟过滤器设计方法及系统，将过滤器分为两部分F1和F2，通过设计候选桶p1和p2计算方法，实现了p1都落在F1中、p2都落在F2的效果。从而能够在不增加元数据和指纹长度前提下大幅降低了过滤器的假阳率，本发明设计方法得到的布谷鸟过滤器假阳率是原来的此外，本发明设计方法得到的布谷鸟过滤器无需额外的对比元数据，时间开销更小。本发明没有降低过滤器的负载，仍能够达到与布谷鸟过滤器一致的负载。本发明设计方法兼容性强，可直接应用于动态布谷鸟过滤器，如DCF、CLDCF和JF，得到的新的动态过滤器假阳率更低，是原来的在与原来动态过滤器相同假阳率下，新的动态过滤器所占存储空间更少。本发明附加方面的优点将在下面的描述中部分给出，部分将从下面的描述中变得明显，或通过本发明的实践了解到。附图说明构成本发明的一部分的说明书附图用来提供对本发明的进一步理解，本发明的示意性实施例及其说明用于解释本发明，并不构成对本发明的不当限定。图1为现有完美布谷鸟过滤器示意图；图2为本发明实施例一改进后的布谷鸟过滤器示意图；图3为传统布谷鸟过滤器查找过程示意图；图4为本发明实施例一改进后的布谷鸟过滤器查找过程示意图；图5为现有DCF示意图；图6为本发明实施例一改进后的DCF示意图；图7为现有CLDCF示意图；图8为本发明实施例一改进后的CLDCF示意图；图9为现有JF示意图；图10为本发明实施例一改进后的JF示意图。具体实施方式应该指出，以下详细说明都是示例性的，旨在对本发明提供进一步的说明。除非另有指明，本文使用的所有技术和科学术语具有与本发明所属技术领域的普通技术人员通常理解的相同含义。应当说明的是，本发明实施例中，涉及到布谷鸟过滤器相关的数据，当本发明以上实施例运用到具体产品或技术中时，需要获得用户许可或者同意，且相关数据的收集、使用和处理需要遵守相关国家和地区的相关法律法规和标准。需要注意的是，这里所使用的术语仅是为了描述具体实施方式，而非意图限制根据本发明的示例性实施方式。如在这里所使用的，除非上下文另外明确指出，否则单数形式也意图包括复数形式，此外，还应当理解的是，当在本说明书中使用术语“包含”和/或“包括”时，其指明存在特征、步骤、操作、器件、组件和/或它们的组合；实施例一：本发明实施例一提供了一种用于降低假阳率的布谷鸟过滤器设计方法，包括以下步骤：构建由多个桶组成的布谷鸟过滤器，每个桶中由多个槽构成，槽中存放元素的指纹f；设过滤器中桶的数量为M，桶的大小为b，如图2所示，以M＝8,b＝4为例。由于候选桶p2在计算过程中使用了异或运算桶的数量需要满足关系式M＝2i，否则计算得到的候选桶将超出过滤器范围，一般情况下M＞＞4。在i≥2时，可将布谷鸟过滤器均匀地分为上下两个部分，且每部分过滤器中桶的个数M'仍能满足关系式M'＝2i-1，M'表示每部分过滤器的桶的个数，i取大于等于2的整数。上半部分过滤器称为F1，下半部分过滤器称为F2。设置p1和p2两个候选桶；任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中。本实施例中，布谷鸟过滤器槽中元素插入的具体步骤为：首选将元素x对应指纹fx存入到过滤器F1候选桶中，若候选桶/＞已满，则将指纹存入候选桶/＞中；若候选桶/＞已满，随机选取/＞中指纹fz进行驱逐，被驱逐指纹将被存放其所对应的候选桶/＞中，若/＞仍然是满的状态，则随机选择/＞中指纹将其驱逐到过滤器F2中，其中，fz和/＞分别为元素z对应指纹和候选桶，/＞和/＞为元素x对应候选桶。本实施例给出一种候选桶p1、p2的计算方法，通过对每部分过滤器中桶的个数取模和异或的方法使得候选桶p1都落在F1中，对应的候选桶p2都落在F2中，具体步骤如公式、所示：其中，f表示指纹，f＝fingerprint，fingerprint为指纹计算函数，p1、p2分别表示两个候选桶，x表示元素，M表示桶的个数，hash表示哈希函数。候选桶p1和p2通过异或可实现相互之间的转换，因此本实施例方法仍能保持布谷鸟过滤器指纹在两个候选桶之间驱逐的特点。传统的布谷鸟过滤器中元素x查找成功包括以下两种情况，候选桶或/＞中有指纹与fx相同。查找过程如图3所示，以M＝8,b＝4为例，第一种情况候选桶/＞中有指纹与fx相同，即图中桶3的第二个槽所存储的指纹fz与fx相同。桶3可能是元素z对应的候选桶/＞也可能是元素z对应的候选桶/＞无法断定/＞与/＞相同。同理，第二种情况也无法断定/＞与相同。传统布谷鸟过滤器在查找过程中仅对比了指纹是否相同，不同元素对应的指纹可能相同，其相同的概率为/＞共需要对比2b个指纹，因此最大假阳率而本实施例中，将待查找元素利用布谷鸟过滤器进行查找，查找到候选桶p1或p2中有指纹与待查找元素的指纹相同即为查找成功。如图4所示，候选桶p1落在F1中，p2放在F2中，因此桶3是元素z对应的候选桶可得出结论/＞与/＞相同。同理，第二种情况可以得到/＞与/＞相同，即/＞由于fx＝fz，所以因此在查找过程中，本实施例方案不仅判断了两个元素对应的指纹是否相同，还判断了两个元素对应的候选桶p1是否也相同。候选桶p1是长度为log2M-1的比特串，两个元素对应的候选桶p1和指纹f都相同的概率为/＞最大假阳率其中，/＞表示布谷鸟过滤器最大假阳率，M表示桶的个数，f表示指纹，b表示桶的大小。本实施例没有改变布谷鸟过滤器整体结构，因此设计方法兼容性强，可通过过滤器替换的方式直接应用于动态布谷鸟过滤器，如DCF、CLDCF和JF，得到的新的动态过滤器假阳率更低，是原来的在与原来动态过滤器相同假阳率下，新的动态过滤器所占存储空间更少。将本实施例设计方法得到的布谷鸟过滤器记作NewCF。具体步骤为：NewCF应用于DCF。DCF结构如图5所示，以M＝8,b＝4为例，随着动态集合中元素个数的增加，布谷鸟过滤器达到最高负载，不能继续存储元素，DCF将新建一个空布谷鸟过滤器链接在原过滤器之后。DCF最大假阳率为s为DCF中CF的个数。如图6所示，以M＝8,b＝4为例，只需将CF换为NewCF便可得到NewDCF，NewDCF最大假阳率由于CF的最大假阳率是NewCF的/＞倍，DCF的假阳率也是NewDCF的/＞倍。相同假阳率下/＞NewDCF的空间开销比DCF少比特。NewCF应用于CLDCF。CLDCF是通过二叉树的形式管理布谷鸟过滤器的个数，从而实现过滤器容量的动态变化。如图7所示，以M＝8,b＝4为例，当CF1已满时，其扩展出两个空的过滤器CF2和CF3，CF1中所有指纹根据其第一个比特值决定移动到CF2或CF3，若为0则将该指纹移动到CF2的相同位置处，若为1则将该指纹移动到CF3的相同位置处，CF1中所有指纹移动完成后删除CF1。当CF2或CF3也满时，以同样的方式进行扩展。CLDCF的最大假阳率为li为层数。如图8所示，以M＝8,b＝4为例，将CF换为NewCF后得到NewCLDCF，其假阳率为CLDCF的假阳率是NewCLDCF的/＞倍。相同假阳率下/＞NewCLDCF的存储空间比CLDCF少比特，s为CLDCF中CF的个数。NewCF应用于JF。JF是基于跳跃一致性哈希函数实现动态布谷鸟过滤器，如图9所示，以M＝8,b＝4为例，当布谷鸟过滤器CF1达到最高负载不能继续存储元素时，JF生成一个空的布谷鸟过滤器CF2，遍历CF1中所有指纹，根据j值是否为1来决定是否将其移动到CF2中，其中j是跳跃一致性哈希函数，f是指纹，“2”是当前布谷鸟过滤器个数加1得到的结果。移动完成后再插入新元素x，根据j值决定元素放入CF1还是CF2。当CF1和CF2满时，JF生成新的过滤器CF3，遍历CF1和CF2中所有指纹，根据j值是否为2来决定是否将其移动到CF3中。移动完成后再插入新元素y，根据j值决定元素放入CF1、CF2还是CF3。JF的最大假阳率为如图10所示，以M＝8,b＝4为例，将CF换为NewCF得到NewJF，NewJF的最大假阳率为/＞JF的假阳率为NewJF的/＞倍。相同假阳率下NewJF比JF少/＞比特的存储空间，s为JF中CF的个数。因此可以看出，本实施例中的设计方法可以直接应用与动态布谷鸟过滤器，有着更强的兼容性。为了证实本实施例中布谷鸟过滤器设计方法的优越性，进行如下实验验证：针对NewCF假阳率和存储空间的实验验证为了区分，将传统布谷鸟过滤器记作CF，本实施例设计方法得到的布谷鸟过滤器记作NewCF，在相同存储空间下，传统布谷鸟过滤器的最大假阳率是的倍。此外，在相同假阳率下/＞CF的存储空间比NewCF多/＞比特。最大假阳率是通过数学分析计算得到的理论值，其给定了实验中假阳率的上限。表1给出了查找过程中CF和NewCF在不同指纹长度和过滤器大小下五次实验假阳率的平均值。表15次实验假阳率平均值表由表1可得，相同指纹长度下，NewCF的假阳率更低。NewCF在指纹长度为8比特时的假阳率小于布谷鸟过滤器指纹长度为16比特时的假阳率，即NewCF在指纹更短的情况下，假阳率更低，可推理出相同假阳率下NewCF占用存储空间更小。值得注意的是，NewCF在指纹长度不小于8比特时假阳率为0。由于哈希碰撞是一种概率问题，五次实验不足以说明指纹长度不小于8比特时假阳率为0。因此本实施例进行了1000次独立实验，测试其假阳率为0的次数。实验结果如表2所示，1000次独立重复实验中，不同过滤器大小下，指纹长度为8比特时假阳率为0的次数不低于657次，指纹长度为12比特时假阳率为0的次数不低于973次，指纹长度为16比特时假阳率为0的次数为1000次，可以认为指纹长度为16比特时不存在误判的现象。此外，CF在指纹长度为16比特时假阳率为0的次数远小于NewCF在指纹长度为8比特时假阳率为0的次数。表2 1000次实验中假阳率为0的实验次数针对NewCF负载的实验验证NewCF在元素x插入过程中，首选将指纹fx存入到候选桶中，若候选桶/＞已满，则将指纹存入候选桶/＞中。若候选桶/＞已满，随机选取/＞中指纹fz进行驱逐，被驱逐指纹将被存放其所对应的候选桶/＞中，若/＞仍然是满的状态，则随机选择/＞中指纹将其驱逐到F2中。在不同过滤器大小和指纹长度下，十次实验中F1和F2负载因子平均值如表3所示，根据实验可得F1负载大于F2负载，且F1负载可达到1。表3 F1和F2负载因子表4给出了十次实验中CF和NewCF的负载因子平均值，根据实验可得，NewCF负载与CF负载大致相同，没有降低布谷鸟过滤器的负载。表4布谷鸟过滤器与我们设计方案负载情况对比实施例二：本发明实施例二提供了一种用于降低布谷鸟过滤器假阳率的设计系统，包括：过滤器构建模块，被配置为构建由多个桶组成的布谷鸟过滤器，每个桶中由多个槽构成，槽中存放元素的指纹；过滤器拆分模块，被配置为将布谷鸟过滤器均匀地分为上下两部分，上半部分过滤器称为F1，下半部分过滤器称为F2；候选桶设置模块，被配置为设置p1和p2两个候选桶；通过对每部分过滤器中桶的个数取模和异或的方法使得任何元素对应的候选桶p1都落在F1中，对应的候选桶p2都落在F2中；元素查找模块，被配置为将待查找元素利用布谷鸟过滤器进行查找，查找到候选桶p1或p2中有指纹与待查找元素的指纹相同即为查找成功。过滤器构建模块中，布谷鸟过滤器槽中元素插入的具体步骤为：首选将元素x对应指纹fx存入到过滤器F1候选桶中，若候选桶/＞已满，则将指纹存入候选桶/＞中；若候选桶/＞已满，随机选取/＞中指纹fz进行驱逐，被驱逐指纹将被存放其所对应的候选桶/＞中，若/＞仍然是满的状态，则随机选择/＞中指纹将其驱逐到过滤器F2中。候选桶设置模块中，候选桶p2在计算过程中使用异或运算，每部分过滤器桶的数量需要满足关系式M'＝2i-1，M'表示每部分过滤器的桶的个数，i取大于等于2的整数。元素查找模块中，查找过程中最大假阳率：其中，表示布谷鸟过滤器最大假阳率，M表示桶的个数，f表示指纹，b表示桶的大小。本实施例没有改变布谷鸟过滤器整体结构，因此设计方法兼容性强，可通过过滤器替换的方式直接应用于动态布谷鸟过滤器，如DCF、CLDCF和JF，得到的新的动态过滤器假阳率更低，是原来的在与原来动态过滤器相同假阳率下，新的动态过滤器所占存储空间更少。以上实施例二中涉及的各步骤与方法实施例一相对应，具体实施方式可参见实施例一的相关说明部分。本领域技术人员应该明白，上述本发明的各模块或各步骤可以用通用的计算机装置来实现，可选地，它们可以用计算装置可执行的程序代码来实现，从而，可以将它们存储在存储装置中由计算装置来执行，或者将它们分别制作成各个集成电路模块，或者将它们中的多个模块或步骤制作成单个集成电路模块来实现。本发明不限制于任何特定的硬件和软件的结合。上述虽然结合附图对本发明的具体实施方式进行了描述，但并非对本发明保护范围的限制，所属领域技术人员应该明白，在本发明的技术方案的基础上，本领域技术人员不需要付出创造性劳动即可做出的各种修改或变形仍在本发明的保护范围以内。
