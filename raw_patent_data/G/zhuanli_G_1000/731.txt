标题title
一种基于网关嵌入式Web的设备数据查看与展示方法及系统
摘要abst
本发明公开了一种基于网关嵌入式Web的设备数据查看与展示方法及系统，包括：通过南向数据处理模块提取数据采集器采集到的数据，并进行相关二次运算、分析处理后放入本地缓存中；通过前端模块根据配置向后端服务器请求数据；通过HTTP服务模块根据注册的路由地址，解析请求内容后，按照要求从本地缓存进行数据提取，再按照业务对象结构的格式进行转换后，返回给前端模块；通过前端模块接收到HTTP服务模块返回的数据后，按统一机制展示到前端页面上；其中，在按统一机制展示到前端页面上时，包括：通过前端页面生成动态页面；HTTP服务模块位于后端服务器中，前端模块包括前端页面。本发明达到便于现场调试、及时展示采集数据的目的。
权利要求书clms
1.一种基于网关嵌入式Web的设备数据查看与展示方法，其特征在于，包括以下步骤：通过南向数据处理模块提取数据采集器采集到的数据，并进行相关二次运算、分析处理后放入本地缓存中；通过前端模块根据配置向后端服务器请求数据；通过HTTP服务模块根据注册的路由地址，解析请求内容后，按照要求从所述本地缓存进行数据提取，再按照业务对象结构的格式进行转换后，返回给所述前端模块；通过前端模块接收到所述HTTP服务模块返回的数据后，按统一机制展示到前端页面上；其中，在按统一机制展示到前端页面上时，包括：通过所述前端页面生成动态页面；所述HTTP服务模块位于所述后端服务器中，所述前端模块包括所述前端页面。2.根据权利要求1所述的基于网关嵌入式Web的设备数据查看与展示方法，其特征在于，在通过前端模块根据配置向后端服务器请求数据时，包括：通过所述前端模块根据设备配置、采集测点配置以及图形配置构建数据请求，并向所述后端服务器发送请求，并在接收数据响应后，按照所述图形配置生成可视化图形；其中，所述配置包括：所述设备配置、所述数据采集测点配置以及所述图形配置；所述设备配置包括：设备标识、位置和连接参数，用于明确定义要监测的设备；所述数据采集测点配置用于明确要从设备中获取的具体数据，包括：采样频率和转换规则；所述图形配置用于指定如何以图形方式呈现数据，包括：图形类型、样式和轴标尺；所述配置还可以定义实时数据更新、交互性、错误处理和用户自定义选项。3.根据权利要求1所述的基于网关嵌入式Web的设备数据查看与展示方法，其特征在于，在通过所述前端页面生成动态页面时，包括：通过所述前端页面请求，CDN返回HTML页面；所述HTML页面中的JS代码以Ajax方式请求所述后端服务器的Restful接口；所述Restful接口返回JSON数据，所述HTML页面解析所述JSON数据，通过Dom操作渲染页面；其中，通过所述后端服务器提供以JSON为数据格式的API接口供Native端和Web端使用。4.根据权利要求3所述的基于网关嵌入式Web的设备数据查看与展示方法，其特征在于，在通过Dom操作渲染页面时，包括：确定目标DOM元素，以便将数据呈现到特定位置；获取已解析的数据，用于填充页面内容；根据数据结构和需求创建新的DOM元素或更新现有的DOM元素，并设置新的DOM元素或更新后的DOM元素的属性、文本内容和样式，得到赋值后的DOM元素；将所述赋值后的DOM元素附加到所述目标DOM元素中，以确保所述赋值后的DOM元素在页面上正确显示；绑定事件处理程序，使所述赋值后的DOM元素能够响应用户交互；若数据是动态的，使用DOM操作来定期更新页面，以反映最新数据。5.根据权利要求1所述的基于网关嵌入式Web的设备数据查看与展示方法，其特征在于，所述方法还包括：实时查看网关子设备列表和实时查看规约驱动器所采集的遥信、遥测值及相关属性；在实时查看网关子设备列表时，包括：完成身份和权限验证后，通过所述前端页面加载，并向所述后端服务器发起数据请求，请求子设备列表信息；通过所述后端服务器接收到所述数据请求后，从数据库或设备管理系统中检索子设备数据，并将检索到的子设备数据编码为JSON格式传送给所述前端页面；通过所述前端页面解析JSON数据并呈现子设备列表；通过所述前端页面设置定时任务或WebSocket连接，以定期更新子设备数据，从而保持实时性；通过所述前端页面的错误处理机制确保在数据请求失败或出现问题时提供适当的反馈；其中，用户可以与所述子设备列表进行交互，选择设备并执行相应操作；在实时查看规约驱动器所采集的遥信、遥测值及相关属性时，包括：通过在所述前端页面选择要查看的设备数据采集值，通过HTTP请求或WebSocket连接发起数据请求，向所述后端服务器请求所选设备的数据；通过所述后端服务器接收到请求后，从Redis实时库中检索与所选设备相关的遥信、遥测数据和属性，并将获取到的数据编码为JSON格式，传送回所述前端页面。6.根据权利要求1所述的基于网关嵌入式Web的设备数据查看与展示方法，其特征在于，所述方法还包括：动态配置不同的实时库表；在动态配置不同的实时库表时，包括：通过在所述前端页面输入配置参数，生成唯一的Redis key，并利用所述Redis key向所述后端服务器请求数据；通过所述后端服务器接收到请求后，利用Redis实时库的key-value存储结构，从Redis实时库检索数据；通过所述前端页面根据所述配置参数呈现实时库表，包括：列选择、筛选条件、排序；通过所述前端页面支持实时数据更新以保持数据的实时性，并提供用户反馈和错误处理机制，以确保用户能够确认配置生效并且能够处理配置错误或数据请求问题；其中，所述配置参数包括：租户ID、设备code、设备测点code。7.根据权利要求1所述的基于网关嵌入式Web的设备数据查看与展示方法，其特征在于，所述方法还包括：支持1000条历史数据在同一页展示，并且响应时间1秒级以内，以及支持上百个客户端同时浏览查看数据；在支持1000条历史数据在同一页展示，并且响应时间1秒级以内时，包括：通过采用轻量级纯HTML5前端，控制所述前端页面的大小，以减少页面加载时间；通过使用高效的数据存储引擎，快速检索和呈现大量数据；并采用数据预处理和缓存机制减少实时数据请求的计算时间，进一步提高数据访问速度；通过前端性能优化和网络优化减少数据传输和渲染时间；通过所述后端服务器采用并行处理和异步操作，确保多个请求同时处理；在支持上百个客户端同时浏览查看数据时，包括：通过利用Go语言的轻量级Goroutines实现了强大的并发处理能力，让所述后端服务器能够同时处理多个客户端请求，而不会降低响应速度；通过采用轻量级纯HTML5前端，减少前端资源占用，降低页面渲染时的资源开销；通过网络优化和数据压缩，提高数据传输效率，降低网络负担，使得多个客户端之间的数据传输更加高效；采用缓存策略减少对后端服务器的冗余请求，并进一步提升响应速度。8.根据权利要求1所述的基于网关嵌入式Web的设备数据查看与展示方法，其特征在于，所述方法还包括：将批量多个库值在一个请求中响应；在将批量多个库值在一个请求中响应时，包括：通过数组查询方式，一次性将多个库值的查询请求以数组的形式发送到所述后端服务器；通过所述后端服务器接收到所述查询请求后，同时执行多个查询操作，以减少请求的次数，提高查询的效率；通过所述后端服务器对接收到的查询数组进行优化，通过合并相似的查询，去除重复的操作，以降低数据库查询的开销，进一步提高处理效率。9.一种基于网关嵌入式Web的设备数据查看与展示系统，其特征在于，包括：南向数据处理模块，用于提取数据采集器采集到的数据，并进行相关二次运算、分析处理后放入本地缓存中；HTTP服务模块，位于后端服务器中，用于根据注册的路由地址，解析请求内容后，按照要求从所述本地缓存进行数据提取，再按照业务对象结构的格式进行转换后，返回给前端模块；前端模块，包括前端页面，根据配置向所述后端服务器请求数据，并接收到所述HTTP服务模块返回的数据后，按统一机制展示到所述前端页面上；后端服务器，使用Golang开发，支持跨平台和跨CPU架构，日志带自清理功能；其中，所述后端服务器与所述前端模块采用前后分离技术开发，并且所述前端页面能够生成动态页面；所述前端模块根据配置向所述后端服务器请求数据时，执行权利要求2所述的方法；所述前端页面在生成动态页面时，执行权利要求3或4所述的方法。10.根据权利要求9所述的基于网关嵌入式Web的设备数据查看与展示系统，其特征在于，所述系统还用于实时查看网关子设备列表、实时查看规约驱动器所采集的遥信、遥测值及相关属性、动态配置不同的实时库表；所述系统支持1000条历史数据在同一页展示，并且响应时间1秒级以内，支持上百个客户端同时浏览查看数据；所述系统能实现批量多个库值在一个请求中响应；其中，在实时查看网关子设备列表和实时查看规约驱动器所采集的遥信、遥测值及相关属性时，执行权利要求5所述的方法；在动态配置不同的实时库表时，执行权利要求6所述的方法；在支持1000条历史数据在同一页展示，并且响应时间1秒级以内时，支持上百个客户端同时浏览查看数据时，执行权利要求7所述的方法；在实现批量多个库值在一个请求中响应时，执行权利要求8所述的方法。
说明书desc
技术领域本发明涉及网关设备数据查看与展示技术领域，具体涉及一种基于网关嵌入式Web的设备数据查看与展示方法及系统。背景技术CGI是指WEB server与WEB应用程序之间的通用接口标准，即：Common GatewayInterface，前端通过表单可以向服务器发送一个URL服务器获取到很多参数，随后服务器开启CGI模块将参数存到环境变量中并调用一个CGI程序，之后CGI程序从环境变量中解析出请求的具体参数，向标准输出内容发送到浏览器，最后浏览器收到http请求，解析html代码渲染出网页。上述现有技术存在以下的技术问题：每次HTTP请求CGI，Web服务器都会启动一个新的进程去执行这个CGI程序，即颇具Unix特色的fork-and-execute。当用户请求量大的时候，这个fork-and-execute的操作会严重拖慢Web服务器的性能，大量消耗服务端资源；同时没有做到前后端分层，前端不但要知道任务做什么，还要知道任务怎么做，才能调用相应CGI脚本，后端要返回组装的html内容。最后，导致CGI脚本bug相对较多，服务器容易遭受攻击。另外用户通过浏览器查看网关子设备列表、通过浏览器查询所采集的实时数据以及展示所采集的历史数据时，网关采集APP所采集的数据会存放到各自sqlite数据库中，用户只能用命令行方式进行设备列表、数据的查看，并且相关命令也过于复杂。综上所述，现有基于CGI的设备数据查看与展示方法，存在当用户请求量大时，严重拖慢Web服务器的性能、大量消耗服务端资源、脚本bug相对较多以及查看数据过程复杂等的问题。发明内容为了克服现有技术的不足，本发明提供一种基于网关嵌入式Web的设备数据查看与展示方法及系统，用于解决现有基于CGI的设备数据查看与展示方法，存在当用户请求量大时，严重拖慢Web服务器的性能、大量消耗服务端资源、脚本bug相对较多以及查看数据过程复杂的技术问题，从而达到便于现场调试、及时展示采集数据的目的。为解决上述问题，本发明所采用的技术方案如下：一种基于网关嵌入式Web的设备数据查看与展示方法，包括以下步骤：通过南向数据处理模块提取数据采集器采集到的数据，并进行相关二次运算、分析处理后放入本地缓存中；通过前端模块根据配置向后端服务器请求数据；通过HTTP服务模块根据注册的路由地址，解析请求内容后，按照要求从所述本地缓存进行数据提取，再按照业务对象结构的格式进行转换后，返回给所述前端模块；通过前端模块接收到所述HTTP服务模块返回的数据后，按统一机制展示到前端页面上；其中，在按统一机制展示到前端页面上时，包括：通过所述前端页面生成动态页面；所述HTTP服务模块位于所述后端服务器中，所述前端模块包括所述前端页面。作为本发明优选的实施方式，在通过前端模块根据配置向后端服务器请求数据时，包括：通过所述前端模块根据设备配置、采集测点配置以及图形配置构建数据请求，并向所述后端服务器发送请求，并在接收数据响应后，按照所述图形配置生成可视化图形；其中，所述配置包括：所述设备配置、所述数据采集测点配置以及所述图形配置；所述设备配置包括：设备标识、位置和连接参数，用于明确定义要监测的设备；所述数据采集测点配置用于明确要从设备中获取的具体数据，包括：采样频率和转换规则；所述图形配置用于指定如何以图形方式呈现数据，包括：图形类型、样式和轴标尺；所述配置还可以定义实时数据更新、交互性、错误处理和用户自定义选项。作为本发明优选的实施方式，在通过所述前端页面生成动态页面时，包括：通过所述前端页面请求，CDN返回HTML页面；所述HTML页面中的JS代码以Ajax方式请求所述后端服务器的Restful接口；所述Restful接口返回JSON数据，所述HTML页面解析所述JSON数据，通过Dom操作渲染页面；其中，通过所述后端服务器提供以JSON为数据格式的API接口供Native端和Web端使用。作为本发明优选的实施方式，在通过Dom操作渲染页面时，包括：确定目标DOM元素，以便将数据呈现到特定位置；获取已解析的数据，用于填充页面内容；根据数据结构和需求创建新的DOM元素或更新现有的DOM元素，并设置新的DOM元素或更新后的DOM元素的属性、文本内容和样式，得到赋值后的DOM元素；将所述赋值后的DOM元素附加到所述目标DOM元素中，以确保所述赋值后的DOM元素在页面上正确显示；绑定事件处理程序，使所述赋值后的DOM元素能够响应用户交互；若数据是动态的，使用DOM操作来定期更新页面，以反映最新数据。作为本发明优选的实施方式，本发明所提供的方法还包括：实时查看网关子设备列表和实时查看规约驱动器所采集的遥信、遥测值及相关属性；在实时查看网关子设备列表时，包括：完成身份和权限验证后，通过所述前端页面加载，并向所述后端服务器发起数据请求，请求子设备列表信息；通过所述后端服务器接收到所述数据请求后，从数据库或设备管理系统中检索子设备数据，并将检索到的子设备数据编码为JSON格式传送给所述前端页面；通过所述前端页面解析JSON数据并呈现子设备列表；通过所述前端页面设置定时任务或WebSocket连接，以定期更新子设备数据，从而保持实时性；通过所述前端页面的错误处理机制确保在数据请求失败或出现问题时提供适当的反馈；其中，用户可以与所述子设备列表进行交互，选择设备并执行相应操作；在实时查看规约驱动器所采集的遥信、遥测值及相关属性时，包括：通过在所述前端页面选择要查看的设备数据采集值，通过HTTP请求或WebSocket连接发起数据请求，向所述后端服务器请求所选设备的数据；通过所述后端服务器接收到请求后，从Redis实时库中检索与所选设备相关的遥信、遥测数据和属性，并将获取到的数据编码为JSON格式，传送回所述前端页面。作为本发明优选的实施方式，本发明所提供的方法还包括：动态配置不同的实时库表；在动态配置不同的实时库表时，包括：通过在所述前端页面输入配置参数，生成唯一的Redis key，并利用所述Rediskey向所述后端服务器请求数据；通过所述后端服务器接收到请求后，利用Redis实时库的key-value存储结构，从Redis实时库检索数据；通过所述前端页面根据所述配置参数呈现实时库表，包括：列选择、筛选条件、排序；通过所述前端页面支持实时数据更新以保持数据的实时性，并提供用户反馈和错误处理机制，以确保用户能够确认配置生效并且能够处理配置错误或数据请求问题；其中，所述配置参数包括：租户ID、设备code、设备测点code。作为本发明优选的实施方式，本发明所提供的方法还包括：支持1000条历史数据在同一页展示，并且响应时间1秒级以内，以及支持上百个客户端同时浏览查看数据；在支持1000条历史数据在同一页展示，并且响应时间1秒级以内时，包括：通过采用轻量级纯HTML5前端，控制所述前端页面的大小，以减少页面加载时间；通过使用高效的数据存储引擎，快速检索和呈现大量数据；并采用数据预处理和缓存机制减少实时数据请求的计算时间，进一步提高数据访问速度；通过前端性能优化和网络优化减少数据传输和渲染时间；通过所述后端服务器采用并行处理和异步操作，确保多个请求同时处理；在支持上百个客户端同时浏览查看数据时，包括：通过利用Go语言的轻量级Goroutines实现了强大的并发处理能力，让所述后端服务器能够同时处理多个客户端请求，而不会降低响应速度；通过采用轻量级纯HTML5前端，减少前端资源占用，降低页面渲染时的资源开销；通过网络优化和数据压缩，提高数据传输效率，降低网络负担，使得多个客户端之间的数据传输更加高效；采用缓存策略减少对后端服务器的冗余请求，并进一步提升响应速度。作为本发明优选的实施方式，本发明所提供的方法还包括：将批量多个库值在一个请求中响应；在将批量多个库值在一个请求中响应时，包括：通过数组查询方式，一次性将多个库值的查询请求以数组的形式发送到所述后端服务器；通过所述后端服务器接收到所述查询请求后，同时执行多个查询操作，以减少请求的次数，提高查询的效率；通过所述后端服务器对接收到的查询数组进行优化，通过合并相似的查询，去除重复的操作，以降低数据库查询的开销，进一步提高处理效率。一种基于网关嵌入式Web的设备数据查看与展示系统，包括：南向数据处理模块，用于提取数据采集器采集到的数据，并进行相关二次运算、分析处理后放入本地缓存中；HTTP服务模块，位于后端服务器中，用于根据注册的路由地址，解析请求内容后，按照要求从所述本地缓存进行数据提取，再按照业务对象结构的格式进行转换后，返回给前端模块；前端模块，包括前端页面，根据配置向所述后端服务器请求数据，并接收到所述HTTP服务模块返回的数据后，按统一机制展示到所述前端页面上；后端服务器，使用Golang开发，支持跨平台和跨CPU架构，日志带自清理功能；其中，所述后端服务器与所述前端模块采用前后分离技术开发，并且所述前端页面能够生成动态页面；所述前端模块根据配置向所述后端服务器请求数据时，执行本发明所提供的方法；所述前端页面在生成动态页面时，执行本发明所提供的方法。作为本发明优选的实施方式，所述系统还用于实时查看网关子设备列表、实时查看规约驱动器所采集的遥信、遥测值及相关属性、动态配置不同的实时库表；所述系统支持1000条历史数据在同一页展示，并且响应时间1秒级以内，支持上百个客户端同时浏览查看数据；所述系统能实现批量多个库值在一个请求中响应；其中，在实时查看网关子设备列表和实时查看规约驱动器所采集的遥信、遥测值及相关属性时，执行本发明所提供的方法；在动态配置不同的实时库表时，执行本发明所提供的方法；在支持1000条历史数据在同一页展示，并且响应时间1秒级以内时，支持上百个客户端同时浏览查看数据时，执行本发明所提供的方法；在实现批量多个库值在一个请求中响应时，执行本发明所提供的方法。相比现有技术，本发明的有益效果在于：本发明所提供方法及系统，使得用户可以通过浏览器实时查看网关子设备列表，对设备进行监控和管理，为设备管理提供了便捷性和即时性；本发明所提供方法及系统，使得用户可以实时查看网关采集APP所采集的遥信、遥测值及相关属性；本发明利用Redis高效存储和检索，具备了动态配置实时库表的能力，能动态在前端配置不同的实时库表，适用于各种数据展示和监测需求，同时保证了性能和灵活性；本发明支持1000条历史记录在同一页展示，并且响应时间1秒级以内，同时保持了良好的性能和用户体验，这对于需要查看大量历史数据的应用场景，如监测和分析，提供了强大的支持；本发明能支持上百个客户端同时浏览查看数据，并且保持迅速的响应时间；本发明能实现批量多个库值在一个请求中响应，从而便于现场批量调试，并且减少了数据传输和数据库查询的成本，使得批量多个库值的响应变得高效和快速，这对于大规模数据分析和监测应用非常有益；本发明基于 B/S 架构的浏览器/服务器模式，页面直接采用纯HTML5方式，兼容市面绝大部分浏览器，能满足多用户在不同地方远程实时访问，并能同时处理很多用户的请求；本发明所提供的配置驱动的方法使前端模块非常灵活，可适应不同设备和数据采集需求，提供了强大的可视化和用户定制能力，对于设备监控和数据展示非常重要；本发明使得前端页面能够实现数据驱动的用户界面更新，这在Web应用程序和数据可视化中发挥着关键作用，为用户提供动态和交互性的体验。下面结合附图和具体实施方式对本发明作进一步详细说明。附图说明图1是本发明所提供的基于网关嵌入式Web的设备数据查看与展示方法步骤图；图2是本发明使用PDManer进行结构设计的数据模型图；图3是本发明所提供的基于网关嵌入式Web的设备数据查看与展示方法的逻辑架构图。具体实施方式本发明所提供的基于网关嵌入式Web的设备数据查看与展示方法，如图1所示，包括以下步骤：步骤S1：通过南向数据处理模块提取数据采集器采集到的数据，并进行相关二次运算、分析处理后放入本地缓存中；步骤S2：通过前端模块根据配置向后端服务器请求数据；步骤S3：通过HTTP服务模块根据注册的路由地址，解析请求内容后，按照要求从本地缓存进行数据提取，再按照业务对象结构的格式进行转换后，返回给前端模块；步骤S4：通过前端模块接收到HTTP服务模块返回的数据后，按统一机制展示到前端页面上；其中，在按统一机制展示到前端页面上时，包括：通过前端页面生成动态页面；HTTP服务模块位于后端服务器中，前端模块包括前端页面。本发明在进行物理数据结构设计时，使用PDManer进行各自的结构设计，数据模型如图2所示。本发明基于网关嵌入式Web的设备数据查看与展示方法的逻辑架构，如图3所示。进一步地，在通过南向数据处理模块提取数据采集器采集到的数据时，包括：首先，通过数据采集器从传感器、设备或数据源中获取数据，例如温度、湿度、设备状态等。接着，将这些数据存储在数据库中，通常是redis实时库，并附加时间戳和标识信息。用户访问网关嵌入式Web软件时，用户发送数据请求，后端服务器收到请求后，解析请求，根据设备编号、设备属性编号查询实时库，检索所需的数据，对数据进行处理和格式化。处理后的数据通过HTTP协议传送到前端页面，用户浏览器解析并呈现数据。这些步骤确保用户可以轻松获取和浏览采集的数据，从而更好地管理和监控设备。在进行相关二次运算时，涉及以下步骤：首先，准备原始数据，通常为设备数据采集实时值，根据既定算术式，代入关联数据进行算术运算。例如：功率计算=设备自身电压×设备自身电流。最后，解释结果以获得有意义的信息，如确定数据间的关系。相关二次运算帮助分析数据间的相互关系，提供了洞察和信息，可用于决策和分析。在分析处理时，涉及以下步骤：根据采集值进行低级处理，例如：数值变化区间处理，数值不在变化区间内，就定为无效的变化采集值，可以不进行更改采集值。其它低级处理还有：值有效区间、跳变上限。在上述步骤S2中，在通过前端模块根据配置向后端服务器请求数据时，包括：通过前端模块根据设备配置、采集测点配置以及图形配置构建数据请求，并向后端服务器发送请求，并在接收数据响应后，按照图形配置生成可视化图形；其中，配置包括：设备配置、数据采集测点配置以及图形配置；设备配置包括：设备标识、位置和连接参数，用于明确定义要监测的设备；数据采集测点配置用于明确要从设备中获取的具体数据，包括：采样频率和转换规则；图形配置用于指定如何以图形方式呈现数据，包括：图形类型、样式和轴标尺；配置还可以定义实时数据更新、交互性、错误处理和用户自定义选项。在上述步骤S3中，在根据注册的路由地址，解析请求内容时，包括：后端应用程序需要预先定义和注册路由地址，以确定哪些URL路径将由特定的处理程序或功能来处理，这通常在应用程序启动时完成。接下来，后端应用程序监听和接收来自客户端的HTTP请求，通常由Web服务器代理。一旦接收到请求，后端应用程序需要解析请求的URL，以识别请求的路径和参数。此后，根据已注册的路由表，后端应用程序将请求路由到相应的处理程序或控制器，以执行所需的操作，如数据检索、业务逻辑处理等。随后，处理程序或控制器将生成HTTP响应，包括HTTP状态码、响应头和响应正文。最后，后端应用程序将生成的响应发送回客户端，通过Web服务器传递给客户端浏览器。客户端浏览器接收响应并解析内容，以呈现用户所需的信息。这一过程确保了客户端请求按照注册的路由地址正确地解析和处理，以完成请求-响应的交互。在上述步骤S3中，在按照要求从本地缓存进行数据提取时，包括：首先，明确数据提取的需求，包括所需数据的类型、来源、时间范围和格式。随后，确定数据源，可能是数据库、文件、API等。确保具备访问数据源的权限和凭据，这通常需要身份验证和授权。然后，使用查询语言或工具执行数据查询和过滤，以满足需求。例如选择特定时间段或特定条件下的数据。提取数据后，可能需要将其转换为所需的格式，如JSON。对提取的数据进行质量检查，以确保数据的完整性和准确性。在上述步骤S3中，在按照业务对象结构的格式进行转换时，包括：首先，深入了解业务对象的结构，包括其属性、关系和数据模型。然后，获取原始数据，可能来自不同的数据源，通常以不同的格式或结构表示。在明确目标结构后，定义业务对象的目标结构，包括属性名称、数据类型和关系。数据映射是关键，它涉及将原始数据字段与目标结构的属性进行对应。数据转换包括格式、类型和值的调整，确保源数据与目标结构一致。如：单个对象查询时，只需返回单个对象；多个对象查询时返回已作排序及分页的对象列表。在上述步骤S4中，在通过前端页面生成动态页面时，包括：通过前端页面请求，CDN返回HTML页面；HTML页面中的JS代码以Ajax方式请求后端服务器的Restful接口；Restful接口返回JSON数据，HTML页面解析JSON数据，通过Dom操作渲染页面；其中，通过后端服务器提供以JSON为数据格式的API接口供Native端和Web端使用。进一步地，在通过HTML页面解析JSON数据时，包括：获取来自后端或其他数据源的JSON数据，通常通过HTTP请求或WebSocket连接。页面接收到JSON数据作为字符串，然后使用JavaScript的JSON解析函数将其转换为JavaScript对象。这将使数据可操作，可以进一步处理。进一步地，在通过Dom操作渲染页面时，包括：确定目标DOM元素，以便将数据呈现到特定位置；获取已解析的数据，用于填充页面内容；根据数据结构和需求创建新的DOM元素或更新现有的DOM元素，并设置新的DOM元素或更新后的DOM元素的属性、文本内容和样式，得到赋值后的DOM元素；将赋值后的DOM元素附加到目标DOM元素中，以确保赋值后的DOM元素在页面上正确显示；绑定事件处理程序，使赋值后的DOM元素能够响应用户交互；若数据是动态的，使用DOM操作来定期更新页面，以反映最新数据。具体地，在通过Dom操作渲染页面的整个过程中，需要处理可能出现的错误，并考虑性能优化，以提高页面的加载速度和响应性。通过这些步骤，页面能够实现数据驱动的用户界面更新，这在Web应用程序和数据可视化中发挥着关键作用，为用户提供动态和交互性的体验。在上述步骤S4中，在统一机制展示到前端页面上时，包括以下步骤：首先，从缓存中检索已存储的数据，这些数据可能是之前计算的结果或从外部源获取的。接下来，对这些数据进行清理，确保其质量和一致性。数据清理可以包括去重、填充缺失值和数据格式标准化。根据展示需求，可能需要对数据进行过滤，以选择特定的数据子集，从而提高可视化效果。数据可能需要按照统一机制进行转换，包括单位转换、时间格式标准化等，以确保数据的一致性。对于大量数据，数据聚合可以用于生成摘要信息，以便更容易理解。使用适当的图表、图形或报表工具，将经过处理的数据进行可视化呈现，以满足用户需求。进一步地，本发明所提供的方法还包括：实时查看网关子设备列表和实时查看规约驱动器所采集的遥信、遥测值及相关属性；在实时查看网关子设备列表时，包括：完成身份和权限验证后，通过前端页面加载，并向后端服务器发起数据请求，请求子设备列表信息；通过后端服务器接收到数据请求后，从数据库或设备管理系统中检索子设备数据，并将检索到的子设备数据编码为JSON格式传送给前端页面；通过前端页面解析JSON数据并呈现子设备列表；通过前端页面设置定时任务或WebSocket连接，以定期更新子设备数据，从而保持实时性；通过前端页面的错误处理机制确保在数据请求失败或出现问题时提供适当的反馈；其中，用户可以与子设备列表进行交互，选择设备并执行相应操作。具体地，上述实时查看网关子设备列表的流程使用户能够方便地通过浏览器实时查看网关子设备列表，对设备进行监控和管理，为设备管理提供了便捷性和即时性。在实时查看规约驱动器所采集的遥信、遥测值及相关属性时，包括：通过在前端页面选择要查看的设备数据采集值，通过HTTP请求或WebSocket连接发起数据请求，向后端服务器请求所选设备的数据；通过后端服务器接收到请求后，从Redis实时库中检索与所选设备相关的遥信、遥测数据和属性，并将获取到的数据编码为JSON格式，传送回前端页面。具体地，网关采集APP，即：规约驱动器，根据设备规约进行设备测试值的采集。进一步地，本发明所提供的方法还包括：动态配置不同的实时库表；在动态配置不同的实时库表时，包括：通过在前端页面输入配置参数，生成唯一的Redis key，并利用Redis key向后端服务器请求数据；通过后端服务器接收到请求后，利用Redis实时库的key-value存储结构，从Redis实时库检索数据；通过前端页面根据配置参数呈现实时库表，包括：列选择、筛选条件、排序；通过前端页面支持实时数据更新以保持数据的实时性，并提供用户反馈和错误处理机制，以确保用户能够确认配置生效并且能够处理配置错误或数据请求问题；其中，配置参数包括：租户ID、设备code、设备测点code。具体地，上述动态配置不同的实时库表的流程，利用Redis高效存储和检索，提供了动态配置实时库表的能力，适用于各种数据展示和监测需求，同时保证了性能和灵活性。进一步地，本发明所提供的方法还包括：支持1000条历史数据在同一页展示，并且响应时间1秒级以内，以及支持上百个客户端同时浏览查看数据；在支持1000条历史数据在同一页展示，并且响应时间1秒级以内时，包括：通过采用轻量级纯HTML5前端，控制前端页面的大小，以减少页面加载时间；通过使用高效的数据存储引擎，快速检索和呈现大量数据；并采用数据预处理和缓存机制减少实时数据请求的计算时间，进一步提高数据访问速度；通过前端性能优化和网络优化减少数据传输和渲染时间；通过后端服务器采用并行处理和异步操作，确保多个请求同时处理，而前端性能优化和网络优化减少了数据传输和渲染时间。具体地，上述高效的数据存储引擎包括：Redis。具体地，本发明能够支持1000条历史数据在同一页展示，主要得益于多方面的优化和技术选择。首先，本发明采用高效的数据存储引擎，如Redis，它能够快速检索和呈现大量数据。其次，采用智能的数据分页和加载策略，只在用户需要时加载数据，而不是一次性加载所有历史记录，从而减少前端页面的数据负担，提高性能。此外，前端界面采用了数据渲染的优化技巧，如虚拟列表，只在视窗内渲染可见的数据，而不是全部历史记录，降低了页面的渲染负担。另外，采用数据索引和缓存机制，以快速检索历史记录，同时后端服务器也进行了数据计算和处理的优化，减少了数据传输量和加速了数据检索过程。这些综合优化措施使得本发明能够轻松应对1000条历史记录的展示需求，同时保持了良好的性能和用户体验。这对于需要查看大量历史数据的应用场景，如监测和分析，提供了强大的支持。在支持上百个客户端同时浏览查看数据时，包括：通过利用Go语言的轻量级Goroutines实现了强大的并发处理能力，让后端服务器能够同时处理多个客户端请求，而不会降低响应速度；通过采用轻量级纯HTML5前端，减少前端资源占用，降低页面渲染时的资源开销；通过网络优化和数据压缩，提高数据传输效率，降低网络负担，使得多个客户端之间的数据传输更加高效；采用缓存策略减少对后端服务器的冗余请求，并进一步提升响应速度。综合上述因素，本发明支持多客户端同时浏览查看数据，并且保持迅速的响应时间。进一步地，本发明所提供的方法还包括：将批量多个库值在一个请求中响应；在将批量多个库值在一个请求中响应时，包括：通过数组查询方式，一次性将多个库值的查询请求以数组的形式发送到后端服务器；通过后端服务器接收到查询请求后，同时执行多个查询操作，以减少请求的次数，提高查询的效率；通过后端服务器对接收到的查询数组进行优化，通过合并相似的查询，去除重复的操作，以降低数据库查询的开销，进一步提高处理效率。具体地，通过结合数组查询方式和后端服务器的处理优化，本发明可以在一个请求中快速响应多个库值的查询需求，减少了数据传输和数据库查询的成本，使得批量多个库值的响应变得高效和快速。这对于大规模数据分析和监测应用非常有益。本发明所提供的基于网关嵌入式Web的设备数据查看与展示系统，包括：南向数据处理模块、HTTP服务模块、前端模块以及后端服务器。南向数据处理模块，用于提取数据采集器采集到的数据，并进行相关二次运算、分析处理后放入本地缓存中。HTTP服务模块，位于后端服务器中，用于根据注册的路由地址，解析请求内容后，按照要求从本地缓存进行数据提取，再按照业务对象结构的格式进行转换后，返回给前端模块。前端模块，包括前端页面，根据配置向后端服务器请求数据，并接收到HTTP服务模块返回的数据后，按统一机制展示到前端页面上。后端服务器，使用Golang开发，支持跨平台和跨CPU架构，日志带自清理功能。其中，后端服务器与前端模块采用前后分离技术开发，并且前端页面能够生成动态页面。具体地，上述CPU架构包括：amd64、arm64、i386、armhf等。在本发明中，网关使用南向接口协议采集器情况下，其与台区总表、逆变器、环境温湿度传感器、智能开关、分支监测箱、充电桩、用户电表、环境烟雾传感器等设备进行协议通讯之后，网关会将数据采集器采集的数据存放到实时库中。同时网关嵌入式Web软件能使用户可以通过浏览器实现查看网关子设备列表，查询浏览采集器所采集的设备实时数据实时、历史数据等功能。本发明所提供的网关嵌入式Web软件基于B/S架构的浏览器/服务器模式，页面直接采用纯HTML5方式，兼容市面绝大部分浏览器，能满足多用户在不同地方远程实时访问，并能同时处理很多用户的请求。进一步地，前端模块在根据配置向后端服务器请求数据时，配置包括：设备配置、数据采集测点配置以及图形配置；其中，设备配置包括：设备标识、位置和连接参数，用于明确定义要监测的设备；数据采集测点配置用于明确要从设备中获取的具体数据，包括：采样频率和转换规则；图形配置用于指定如何以图形方式呈现数据，包括：图形类型、样式和轴标尺；前端模块根据设备配置、采集测点配置以及图形配置构建数据请求，并向后端服务器发送请求，并在接收数据响应后，按照图形配置生成可视化图形；配置还可以定义实时数据更新、交互性、错误处理和用户自定义选项。具体地，前端模块的核心功能之一是根据配置来向后端服务器请求数据并按要求展示。这涉及设备配置、数据采集测点配置和图形配置的详细定义。设备配置包括设备标识、位置和连接参数，用于明确定义要监测的设备。数据采集测点配置确定了要从设备中获取的具体数据，包括采样频率和转换规则。图形配置用于指定如何以图形方式呈现数据，包括图形类型、样式和轴标尺。前端模块根据这些配置构建数据请求，向后端发送请求，接收数据响应后，按照图形配置生成可视化图形。此外，配置还可以定义实时数据更新、交互性、错误处理和用户自定义选项。这种配置驱动的方法使前端模块非常灵活，可适应不同设备和数据采集需求，提供了强大的可视化和用户定制能力，对于设备监控和数据展示非常重要。进一步地，前端页面在生成动态页面时，包括：前端页面请求，CDN返回HTML页面；HTML页面中的JS代码以Ajax方式请求后端服务器的Restful接口；Restful接口返回JSON数据，HTML页面解析JSON数据，通过Dom操作渲染页面；其中，后端服务器提供以JSON为数据格式的API接口供Native端和Web端使用。更进一步地，在通过Dom操作渲染页面时，包括：确定目标DOM元素，以便将数据呈现到特定位置；获取已解析的数据，用于填充页面内容；根据数据结构和需求创建新的DOM元素或更新现有的DOM元素，并设置新的DOM元素或更新后的DOM元素的属性、文本内容和样式，得到赋值后的DOM元素；将赋值后的DOM元素附加到目标DOM元素中，以确保赋值后的DOM元素在页面上正确显示；绑定事件处理程序，使赋值后的DOM元素能够响应用户交互；若数据是动态的，使用DOM操作来定期更新页面，以反映最新数据。进一步地，本发明所提供的系统还用于实时查看网关子设备列表，包括：完成身份和权限验证后，前端页面加载，并向后端服务器发起数据请求，请求子设备列表信息；后端服务器接收到数据请求后，从数据库或设备管理系统中检索子设备数据，并将检索到的子设备数据编码为JSON格式传送给前端页面；前端页面解析JSON数据并呈现子设备列表；前端页面通过设置定时任务或WebSocket连接，以定期更新子设备数据，从而保持实时性；前端页面还包括错误处理机制，错误处理机制用于确保在数据请求失败或出现问题时提供适当的反馈；其中，用户可以与子设备列表进行交互，选择设备并执行相应操作；本发明所提供的系统还用于实时查看规约驱动器所采集的遥信、遥测值及相关属性，包括：通过在前端页面选择要查看的设备数据采集值，通过HTTP请求或WebSocket连接发起数据请求，向后端服务器请求所选设备的数据；后端服务器接收到请求后，从Redis实时库中检索与所选设备相关的遥信、遥测数据和属性，并将获取到的数据编码为JSON格式，传送回前端页面。进一步地，本发明所提供的系统还用于动态配置不同的实时库表，包括：通过在前端页面输入配置参数，生成唯一的Redis key，并利用Redis key向后端服务器请求数据；后端服务器接收到请求后，利用Redis实时库的key-value存储结构，从Redis实时库检索数据；前端页面根据配置参数呈现实时库表，包括：列选择、筛选条件、排序；前端页面支持实时数据更新以保持数据的实时性，并提供用户反馈和错误处理机制，以确保用户能够确认配置生效并且系统能够处理配置错误或数据请求问题；其中，配置参数包括：租户ID、设备code、设备测点code。进一步地，本发明所提供的系统支持1000条历史数据在同一页展示，并且响应时间1秒级以内，包括：系统通过采用轻量级纯HTML5前端，控制前端页面的大小，以减少页面加载时间；通过使用高效的数据存储引擎，快速检索和呈现大量数据；并采用数据预处理和缓存机制减少实时数据请求的计算时间，进一步提高数据访问速度；通过前端性能优化和网络优化减少数据传输和渲染时间；后端服务器采用并行处理和异步操作，确保多个请求同时处理；前端页面支持上百个客户端同时浏览查看数据，包括：系统利用Go语言的轻量级Goroutines实现了强大的并发处理能力，让后端服务器能够同时处理多个客户端请求，而不会降低响应速度；系统通过采用轻量级纯HTML5前端，减少前端资源占用，降低页面渲染时的资源开销；通过网络优化和数据压缩，提高数据传输效率，降低网络负担，使得多个客户端之间的数据传输更加高效；采用缓存策略减少对后端服务器的冗余请求，并进一步提升响应速度。进一步地，本发明所提供的系统能实现批量多个库值在一个请求中响应，包括：通过数组查询方式，一次性将多个库值的查询请求以数组的形式发送到后端服务器；后端服务器接收到查询请求后，同时执行多个查询操作，以减少请求的次数，提高查询的效率；后端服务器还可以对接收到的查询数组进行优化，通过合并相似的查询，去除重复的操作，以降低数据库查询的开销，进一步提高处理效率。上述实施方式仅为本发明的优选实施方式，不能以此来限定本发明保护的范围，本领域的技术人员在本发明的基础上所做的任何非实质性的变化及替换均属于本发明所要求保护的范围。
