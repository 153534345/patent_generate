标题title
一种基于知识图谱和微服务的生成式低代码开发系统
摘要abst
本申请涉及微服务架构技术领域，特别是涉及一种基于知识图谱和微服务的生成式低代码开发系统，所述系统包括：第一服务平台和若干个第二服务平台，所述第一服务平台包括存储有微服务架构的初始服务三元组集的第一存储介质、处理器和存储有计算机程序的存储器，计算机程序被处理器执行时，实现以下步骤：当接收到任一所述第二服务平台发送的目标服务请求时，从初始服务三元组集中选取中间服务三元组集，当中间服务三元组的数量小于目标服务名称的数量时，构建关键服务三元组集，根据每一中间服务三元组对应的初始服务和每一关键服务三元组对应的初始服务，生成第二目标微服务集；本发明降低了开发难度，提高了开发效率和服务灵活性。
权利要求书clms
1.一种基于知识图谱和微服务的生成式低代码开发系统，其特征在于，所述系统包括：第一服务平台和若干个第二服务平台，所述第一服务平台与每一所述第二服务平台进行通信连接，所述第一服务平台包括存储有微服务架构的初始服务三元组集A={A1，A2，……，Ai，……，Am}的第一存储介质、处理器和存储有计算机程序的存储器，其中，Ai={Ai1，Ai2，Ai3}，Ai1是指微服务架构中的第i个初始服务三元组内的初始服务名称，Ai2是指微服务架构中的第i个初始服务三元组内的初始服务名称对应的属性值元素，Ai3是指微服务架构中的第i个初始服务三元组内初始服务名称和初始服务名称对应的属性值元素之间的关系，i=1，2，……，m，m为初始服务三元组的数量，当所述计算机程序被处理器执行时，实现以下步骤：S100，当接收到任一所述第二服务平台发送的目标服务请求时，从A中选取目标服务请求对应的初始服务三元组以得到中间服务三元组集B={B1，B2，……，Bj，……，Bn}，Bj是指第j个中间服务三元组，j=1，2，……，n，n为中间服务三元组的数量；所述目标服务请求包括目标服务名称和目标服务名称对应的属性值元素；S200，当n=s时，根据Bj，从A中获取到Bj对应的初始服务；其中，s为所述目标服务请求中目标服务名称的数量；S300，根据每一Bj对应的初始服务，生成所述目标服务请求对应的第一目标微服务集B0={B01，B02，……，B0j，……，B0n}，其中，B0j={B0j1，B0j2，B0j3，B0j4}，B0j1是指第j个中间服务三元组内的中间服务名称，B0j2是指第j个中间服务三元组内的中间服务名称对应的属性值元素，B0j3是指第j个中间服务三元组内中间服务名称和中间服务名称对应的属性值元素之间的关系，B0j4为Bj对应的初始服务；S400，当n＜s时，根据目标服务请求，构建关键服务三元组集C={C1，C2，……，Ck，……，Cs-n}，Ck为第k个关键服务三元组，k=1，2，……，s-n，其中，s-n为关键服务三元组中关键服务名称的数量，关键服务名称是指从所述目标服务请求中获取的与每个初始服务名称均不一致的若干个目标服务名称中的任一名称；S500，根据每一Bj对应的初始服务和每一Ck对应的关键服务，生成所述目标服务请求对应的第二目标微服务集B0C0={B01，B02，……，B0j，……，B0n，C01，C02，……，C0k，……，C0s-n}，其中，C0k={C0k1，C0k2，C0k3，C0k4}，C0k1是指第k个关键服务三元组内的关键服务名称，C0k2是指第k个关键服务三元组内的关键服务名称对应的属性值元素，C0k3是指第k个关键服务三元组内关键服务名称和关键服务名称对应的属性值元素之间的关系，C0k4为Ck对应的关键服务。2.根据权利要求1所述的基于知识图谱和微服务的生成式低代码开发系统，其特征在于，S100步骤中还包括如下步骤：S101，从A中获取任一所述目标服务名称对应的初始服务名称，并确定所述目标服务名称对应的初始服务名称为中间服务名称；S103，从A中获取所述中间服务名称对应的属性值元素；S105，当所述中间服务名称对应的属性值元素与所述目标服务名称对应的属性值元素一致时，从A中获取所述目标服务名称对应的中间服务三元组；S107，当所述中间服务名称对应的属性值元素与所述目标服务名称对应的属性值元素不一致时，将所述中间服务名称对应的属性值元素更新为所述目标服务名称对应的属性值元素。3.根据权利要求2所述的基于知识图谱和微服务的生成式低代码开发系统，其特征在于，所述目标服务名称对应的中间服务三元组是指所述中间服务名称对应的中间服务三元组。4.根据权利要求2所述的基于知识图谱和微服务的生成式低代码开发系统，其特征在于，在S107中还包括如下步骤：S1，根据所述目标服务名称对应的属性值元素，获取所述目标服务名称对应的目标服务；S2，将所述中间服务名称对应的中间服务更新为所述目标服务名称对应的目标服务。5.根据权利要求2所述的基于知识图谱和微服务的生成式低代码开发系统，其特征在于，S400步骤中还通过如下步骤构建C：S401，根据B，从所述目标服务请求中获取关键服务名称集D={D1，D2，……，Dk，……，Ds-n}和D对应的属性值元素集D0={D01，D02，……，D0k，……，D0s-n}，其中，Dk为第k个关键服务名称，D0k为Dk对应的属性值元素；S403，根据每一Dk和D0k，获取每一Dk对应的属性元素；S405，根据D、D0和每一Dk对应的属性元素，构建关键服务三元组集C={C1，C2，……，Ck，……，Cs-n}，Ck={Dk，D0k，Ck1}，其中，Ck1为Dk对应的属性元素。6.根据权利要求5所述的基于知识图谱和微服务的生成式低代码开发系统，其特征在于，在S500步骤中，Ck对应的关键服务是指第三方在构建Dk对应的属性元素时构建的服务。
说明书desc
技术领域本发明涉及微服务架构技术领域，特别是涉及一种基于知识图谱和微服务的生成式低代码开发系统。背景技术微服务，即微服务架构，是一项在云中部署应用和服务的新技术，在微服务架构中，只需要在特定的某种服务中增加所需功能，而不影响整体进程的架构。低代码开发是一种可视化的应用开发方法，用较少的代码、以较快的速度来交付应用程序，基于图形化拖拽、参数化配置等更为高效的方式，实现快速构建、数据编排、中台服务，通过少量代码或不用代码实现数字化转型中的场景应用创新。目前，现有的服务平台在进行业务处理时，采用的传统模式是：对于每个新的服务需求，都需要跟相关厂商沟通该服务的业务流程，沟通完毕再等厂商做设计、编程以及配置脚本，开发难度较大，流程复杂，降低了服务平台处理相关服务的效率。发明内容针对上述技术问题，本发明采用的技术方案为：一种基于知识图谱和微服务的生成式低代码开发系统，所述系统包括：第一服务平台和若干个第二服务平台，所述第一服务平台与每一所述第二服务平台进行通信连接，所述第一服务平台包括存储有微服务架构的初始服务三元组集A={A1，A2，……，Ai，……，Am}的第一存储介质、处理器和存储有计算机程序的存储器，其中，Ai={Ai1，Ai2，Ai3}，Ai1是指微服务架构中的第i个初始服务三元组内的初始服务名称，Ai2是指微服务架构中的第i个初始服务三元组内的初始服务名称对应的属性值元素，Ai3是指微服务架构中的第i个初始服务三元组内初始服务名称和初始服务名称对应的属性值元素之间的关系，i=1，2，……，m，m为初始服务三元组的数量，当所述计算机程序被处理器执行时，实现以下步骤：S100，当接收到任一所述第二服务平台发送的目标服务请求时，从A中选取目标服务请求对应的初始服务三元组以得到中间服务三元组集B={B1，B2，……，Bj，……，Bn}，Bj是指第j个中间服务三元组，j=1，2，……，n，n为中间服务三元组的数量；所述目标服务请求包括目标服务名称和目标服务名称对应的属性值元素。S200，当n=s时，根据Bj，从A中获取到Bj对应的初始服务；其中，s为所述目标服务请求中目标服务名称的数量。S300，根据每一Bj对应的初始服务，生成所述目标服务请求对应的第一目标微服务集B0={B01，B02，……，B0j，……，B0n}，其中，B0j={B0j1，B0j2，B0j3，B0j4}，B0j1是指第j个中间服务三元组内的中间服务名称，B0j2是指第j个中间服务三元组内的中间服务名称对应的属性值元素，B0j3是指第j个中间服务三元组内中间服务名称和中间服务名称对应的属性值元素之间的关系，B0j4为Bj对应的初始服务。S400，当n＜s时，根据目标服务请求，构建关键服务三元组集C={C1，C2，……，Ck，……，Cs-n}，Ck为第k个关键服务三元组，k=1，2，……，s-n，其中，s-n为关键服务三元组中关键服务名称的数量，关键服务名称是指从所述目标服务请求中获取的与每个初始服务名称均不一致的若干个目标服务名称中的任一名称。S500，根据每一Bj对应的初始服务和每一Ck对应的关键服务，生成所述目标服务请求对应的第二目标微服务集B0C0={B01，B02，……，B0j，……，B0n，C01，C02，……，C0k，……，C0s-n}，其中，C0k={C0k1，C0k2，C0k3，C0k4}，C0k1是指第k个关键服务三元组内的关键服务名称，C0k2是指第k个关键服务三元组内的关键服务名称对应的属性值元素，C0k3是指第k个关键服务三元组内关键服务名称和关键服务名称对应的属性值元素之间的关系，C0k4为Ck对应的关键服务。本发明与现有技术相比具有明显的有益效果，借由上述技术方案，本发明提供的一种基于知识图谱和微服务的生成式低代码开发系统可达到相当的技术进步性及实用性，并具有产业上的广泛利用价值，其至少具有以下有益效果：本发明提供了一种基于知识图谱和微服务的生成式低代码开发系统，所述系统包括：第一服务平台和若干个第二服务平台，所述第一服务平台与每一所述第二服务平台进行通信连接，所述第一服务平台包括存储有微服务架构的初始服务三元组集的第一存储介质、处理器和存储有计算机程序的存储器，计算机程序被处理器执行时，实现以下步骤：当接收到任一所述第二服务平台发送的目标服务请求时，从初始服务三元组集中选取目标服务请求对应的初始服务三元组以得到中间服务三元组集，当中间服务三元组的数量等于目标服务名称的数量时，根据每一中间服务三元组对应的初始服务，生成第一目标微服务集，当中间服务三元组的数量小于目标服务名称的数量时，根据目标服务请求构建关键服务三元组集，根据每一中间服务三元组对应的初始服务和每一关键服务三元组对应的关键服务，生成第二目标微服务集。一方面，本发明根据目标服务请求，对于第一服务平台中没有的三元组，只需构建该部分请求对应的关键服务三元组即可，即使非技术人员也可以完成上述构建，技术人员只需完成关键服务三元组对应的服务的构建，降低了开发难度，实现了低代码开发，进而提高了开发效率；另一方面，当目标服务名称与初始服务名称一致，而两者对应的属性值元素不一致时，对初始服务名称对应的属性元素和服务进行更新，使得更新后的三元组和服务符合第二服务平台的业务需求，提高了服务的灵活性，从而满足第二服务平台的多种需求。附图说明为了更清楚地说明本发明实施例中的技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本发明实施例提供的一种基于知识图谱和微服务的生成式低代码开发系统执行计算机程序的流程图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域技术人员在没有作出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。需要说明的是，本发明的说明书和权利要求书及上述附图中的术语“第一”、“第二”等是用于区别类似的对象，而不必用于描述特定的顺序或先后次序。应该理解这样使用的数据在适当情况下可以互换，以便这里描述的本发明的实施例能够以除了在这里图示或描述的那些以外的顺序实施。此外，术语“包括”和“具有”以及他们的任何变形，意图在于覆盖不排他的包含，例如，包含了一系列步骤或单元的过程、方法、系统、产品或服务器不必限于清楚地列出的那些步骤或单元，而是可包括没有清楚地列出的或对于这些过程、方法、产品或设备固有的其它步骤或单元。一种基于知识图谱和微服务的生成式低代码开发系统，所述系统包括：第一服务平台和若干个第二服务平台，所述第一服务平台与每一所述第二服务平台进行通信连接，所述第一服务平台包括存储有微服务架构的初始服务三元组集A={A1，A2，……，Ai，……，Am}的第一存储介质、处理器和存储有计算机程序的存储器，其中，Ai={Ai1，Ai2，Ai3}，Ai1是指微服务架构中的第i个初始服务三元组内的初始服务名称，Ai2是指微服务架构中的第i个初始服务三元组内的初始服务名称对应的属性值元素，Ai3是指微服务架构中的第i个初始服务三元组内初始服务名称和初始服务名称对应的属性值元素之间的关系，i=1，2，……，m，m为初始服务三元组的数量，当所述计算机程序被处理器执行时，实现以下步骤，如图1所示：S100，当接收到任一所述第二服务平台发送的目标服务请求时，从A中选取目标服务请求对应的初始服务三元组以得到中间服务三元组集B={B1，B2，……，Bj，……，Bn}，Bj是指第j个中间服务三元组，j=1，2，……，n，n为中间服务三元组的数量；所述目标服务请求包括目标服务名称和目标服务名称对应的属性值元素。具体的，所述初始服务三元组内的初始服务名称为初始服务三元组内的主实体，可以理解为：所述初始服务名称对应的初始服务为一段程序或者docker容器，例如：当所述初始服务名称为查询目标用户对应的证件信息时，其对应的初始服务是指用于实现查询目标用户对应的证件信息的一段程序。具体的，所述初始服务三元组内的初始服务名称对应的属性值元素为初始服务三元组内的副实体，例如，当初始服务三元组为“查询目标用户对应的证件信息-位数-18位”时，初始服务名称对应的属性值元素为：18位。具体的，所述初始服务三元组内初始服务名称和初始服务名称对应的属性值元素之间的关系是指所述主实体和副实体之间的关系，可以理解为：所述初始服务三元组内主实体和副实体之间的关系是指属性元素，例如，属性元素为：位数。上述，通过根据目标服务请求中的一个或若干个目标服务名称和每一目标服务名称对应的属性值元素，在初始服务三元组集中查找到与每一目标服务名称对应的中间服务三元组，使得第二服务平台能够调用所需的服务，对于第一服务平台中已有的服务无需进行代码的编写，实现低代码开发，有效提高了服务效率。在一个具体的实施例中，S100步骤中还包括如下步骤：S101，从A中获取任一所述目标服务名称对应的初始服务名称，并确定所述目标服务名称对应的初始服务名称为中间服务名称；可以理解为：所述目标服务名称与所述中间服务名称一致。S103，从A中获取所述中间服务名称对应的属性值元素。具体的，所述中间服务名称对应的属性值元素为所述初始服务名称对应的属性值元素。S105，当所述中间服务名称对应的属性值元素与所述目标服务名称对应的属性值元素一致时，从A中获取所述目标服务名称对应的中间服务三元组。具体的，所述目标服务名称对应的中间服务三元组是指所述中间服务名称对应的中间服务三元组；可以理解为：所述中间服务三元组包括所述中间服务名称、所述中间服务名称对应的属性值元素，所述中间服务名称与所述中间服务名称对应的属性值元素之间的关系。S107，当所述中间服务名称对应的属性值元素与所述目标服务名称对应的属性值元素不一致时，将所述中间服务名称对应的属性值元素更新为所述目标服务名称对应的属性值元素；可以理解为：将所述中间服务名称对应的属性值元素从A中删除，并将所述目标服务名称对应的属性值元素作为所述中间服务名称对应的属性值元素。上述，在初始服务三元组集中存在与目标服务名称对应的初始服务名称时，对目标服务名称对应的属性值元素进行核对，若所述目标服务名称对应的属性值元素与所述初始服务名称对应的属性值元素一致时，则表明该初始服务名称对应的初始服务三元组符合要求，直接调用即可，若两者的属性值元素不一致，则表明不是同一服务，需要对初始服务三元组进行更新，以得到符合要求的服务，满足用户需求。S200，当n=s时，根据Bj，从A中获取到Bj对应的初始服务；其中，s为所述目标服务请求中目标服务名称的数量，可以理解为：s为所述目标服务请求中所述目标服务名称对应的属性值元素的数量。上述，通过对目标服务名称的数量与获取到的中间服务三元组的数量进行比对，也即，当从初始服务三元组集中能够获取到每一目标服务名称对应的初始服务三元组时，表明初始服务三元组集能够满足目标服务请求的需求，直接从初始服务三元组集中获取每一中间服务三元组对应的初始服务即可，以满足第二服务平台的需求。S300，根据每一Bj对应的初始服务，生成所述目标服务请求对应的第一目标微服务集B0={B01，B02，……，B0j，……，B0n}，其中，B0j={B0j1，B0j2，B0j3，B0j4}，B0j1是指第j个中间服务三元组内的中间服务名称，B0j2是指第j个中间服务三元组内的中间服务名称对应的属性值元素，B0j3是指第j个中间服务三元组内中间服务名称和中间服务名称对应的属性值元素之间的关系，B0j4为Bj对应的初始服务。上述，通过获取每一个中间服务三元组对应的初始服务，生成满足于目标服务请求的若干个目标微服务，进而能够实现第二服务平台对若干个初始服务的调用，以使第二服务平台能够根据调用的若干个目标微服务来完成对应的业务需求，提高业务灵活性。S400，当n＜s时，根据目标服务请求，构建关键服务三元组集C={C1，C2，……，Ck，……，Cs-n}，Ck为第k个关键服务三元组，k=1，2，……，s-n，其中，s-n为关键服务三元组中关键服务名称的数量，关键服务名称是指从所述目标服务请求中获取的与每个初始服务名称均不一致的若干个目标服务名称中的任一名称；可以理解为：所述关键服务名称为所述目标服务名称中除中间服务名称外的任一服务名称。在一个具体的实施例中，S400步骤中还通过如下步骤构建C：S401，根据B，从所述目标服务请求中获取关键服务名称集D={D1，D2，……，Dk，……，Ds-n}和D对应的属性值元素集D0={D01，D02，……，D0k，……，D0s-n}，其中，Dk为第k个关键服务名称，D0k为Dk对应的属性值元素。S403，根据每一Dk和D0k，获取每一Dk对应的属性元素；本领域技术人员可以知晓现有技术中任意一种根据主实体和副实体获取主实体和副实体之间的关系的方法，也即根据关键服务名称和关键服务名称对应的属性值元素获取关键服务名称和关键服务名称对应的属性值元素之间的关系的方法均落入到本发明的保护范围，例如：根据Dk和D0k，通过第三方构建Dk对应的属性元素。S405，根据D、D0和每一Dk对应的属性元素，构建关键服务三元组集C={C1，C2，……，Ck，……，Cs-n}，Ck={Dk，D0k，Ck1}，其中，Ck1为Dk对应的属性元素。上述，当中间服务三元组的数量小于目标服务名称的数量时，也即，初始服务三元组集不能满足目标服务请求的所有需求，通过构建关键服务三元组集实现了对第一服务平台中的初始服务三元组集的扩充，从而来弥补初始服务三元组集中缺失的三元组，以满足目标服务请求中的所有服务需求，在该过程中只需对缺少的三元组进行补充，降低了开发难度，实现了低代码开发，提高了服务效率。S500，根据每一Bj对应的初始服务和每一Ck对应的关键服务，生成所述目标服务请求对应的第二目标微服务集B0C0={B01，B02，……，B0j，……，B0n，C01，C02，……，C0k，……，C0s-n}，其中，C0k={C0k1，C0k2，C0k3，C0k4}，C0k1是指第k个关键服务三元组内的关键服务名称，C0k2是指第k个关键服务三元组内的关键服务名称对应的属性值元素，C0k3是指第k个关键服务三元组内关键服务名称和关键服务名称对应的属性值元素之间的关系，C0k4为Ck对应的关键服务。进一步的，Ck对应的关键服务是指第三方在构建Dk对应的属性元素时构建的服务。上述，通过获取每一中间服务三元组对应的初始服务和每一关键服务三元组对应的初始服务，生成满足于目标服务请求的若干个目标微服务，进而能够实现第二服务平台对若干个初始服务的调用，以使第二服务平台能够根据调用的若干个目标微服务来完成对应的业务需求，提高业务灵活性。在另一个具体的实施例中，在S107中还包括如下步骤：S1，根据所述目标服务名称对应的属性值元素，获取所述目标服务名称对应的目标服务。具体的，所述目标服务名称对应的目标服务是通过第三方构建的服务，例如：第三方平台的管理员根据目标服务名称对应的属性值元素，在第三方平台构建目标服务名称对应的目标服务，并将目标服务发送至第一服务平台。S2，将所述中间服务名称对应的中间服务更新为所述目标服务名称对应的目标服务；可以理解为：将A中与目标服务名称对应的初始服务名称的初始服务更新为目标服务。上述，当目标服务名称与中间服务名称一致，但两者对应的属性值元素不一致时，由于对中间服务名称对应的属性值元素进行更新导致了业务变化，因此需要对中间服务名称和中间服务名称对应的属性值元素之间的关系进行更新，同时对中间服务名称对应的中间服务也进行更新，使得更新后的中间服务三元组和中间服务符合业务需求，提高了业务的灵活性，满足第二服务平台的多种需求。综上，本发明提供了一种基于知识图谱和微服务的生成式低代码开发系统，所述系统包括：第一服务平台和若干个第二服务平台，所述第一服务平台与每一所述第二服务平台进行通信连接，所述第一服务平台包括存储有微服务架构的初始服务三元组集的第一存储介质、处理器和存储有计算机程序的存储器，计算机程序被处理器执行时，实现以下步骤：当接收到任一所述第二服务平台发送的目标服务请求时，从初始服务三元组集中选取目标服务请求对应的初始服务三元组以得到中间服务三元组集，当中间服务三元组的数量等于目标服务名称的数量时，根据每一中间服务三元组对应的初始服务，生成第一目标微服务集，当中间服务三元组的数量小于目标服务名称的数量时，根据目标服务请求构建关键服务三元组集，根据每一中间服务三元组对应的初始服务和每一关键服务三元组对应的关键服务，生成第二目标微服务集。一方面，本发明根据目标服务请求，对于第一服务平台中没有的三元组，只需构建该部分请求对应的关键服务三元组即可，即使非技术人员也可以完成上述构建，技术人员只需完成关键服务三元组对应的服务的构建，降低了开发难度，实现了低代码开发，进而提高了开发效率；另一方面，当目标服务名称与初始服务名称一致，而两者对应的属性值元素不一致时，对初始服务名称对应的属性元素和服务进行更新，使得更新后的三元组和服务符合第二服务平台的业务需求，提高了服务的灵活性，从而满足第二服务平台的多种需求。虽然已经通过示例对本发明的一些特定实施例进行了详细说明，但是本领域的技术人员应该理解，以上示例仅是为了进行说明，而不是为了限制本发明的范围。本领域的技术人员还应理解，可以对实施例进行多种修改而不脱离本发明的范围和精神。本发明开的范围由所附权利要求来限定。
