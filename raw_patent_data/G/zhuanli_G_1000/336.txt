标题title
一种基于信息安全的数据传输方法和装置
摘要abst
本申请提供了一种基于信息安全的数据传输方法和装置，该方法中，第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件；所有子文件的文件名称的尾字符组成的序列是不连续的；第一终端将包含多份子文件的目标文件夹上传至第三方服务器。由于上传至第三方服务器的各子文件的文件名称的尾字符组成的序列是不连续的，因此能够降低第三方服务器识别出这些子文件以及降低第三方服务器将这些子文件合并为原文件的难度，同时能够在文件泄露时，降低黑客识别出这些子文件以及降低第三方服务器将这些子文件合并为原文件的难度，从而降低文件在传输过程中信息泄露的风险，提升数据传输的安全性。
权利要求书clms
1.一种基于信息安全的数据传输方法，其特征在于，所述方法包括：第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件；其中，所有子文件的文件名称的尾字符组成的序列是不连续的；第一终端将包含多份子文件的目标文件夹上传至第三方服务器；第一终端将目标下载链接发送给第二终端，所述目标下载链接为第三方服务器提供的目标文件夹对应的下载链接；第二终端基于所述目标下载链接获取目标文件夹；第二终端将获取到的目标文件夹中的多份子文件合并成目标文件。2.根据权利要求1所述的一种基于信息安全的数据传输方法，其特征在于，所述第三方服务器的数量为多个，目标文件夹数量与第三方服务器的数量匹配，所述第一终端将包含多份子文件的目标文件夹上传至第三方服务器，具体包括：第一终端将从目标文件分割得到多份子文件分配到各目标文件夹中；第一终端将各目标文件夹上传至对应的第三方服务器；所述第二终端基于所述目标下载链接获取目标文件夹，具体包括：第二终端从多个目标下载链接获取与第三方服务器数量匹配的多个目标文件夹。3.根据权利要求2所述的一种基于信息安全的数据传输方法，其特征在于，第一终端上部署有接入区块链网络的第一节点，所述方法还包括：第一终端将目标文件分割为多份子文件并且将所有子文件都上传到第三方服务器之后，按照各子文件的分割顺序，依次计算文件系统中各子文件的第一数字指纹；第一节点按照计算得到各子文件第一数字指纹的顺序，将各个第一数字指纹依次封装成目标数据传播到区块链网络中；区块链中的各节点将接收到的目标数据进行审核并认可后，将对应的目标数据存储进临时暂存区中；区块链网络中的求解验证节点根据既定策略从临时暂存区中提取所需的目标数据，封装形成当前区块序号的潜在区块传播至区块链网络中；区块链中的各节点对潜在区块进行审核并认可后，将该潜在区块加入区块链中。4.根据权利要求3所述的一种基于信息安全的数据传输方法，其特征在于，所述根据既定策略从临时暂存区中提取所需的目标数据，封装形成当前区块序号的潜在区块，具体包括：各节点在通用类临时暂存区中发现多个由相同节点形成的目标数据，并且当这些目标数据形成的时间差小于设定的第一时间阈值时，将这些目标数据转移到合并类临时暂存区中并将形成这些目标数据的节点标记为目标节点；各节点把由同一目标节点创建的多个目标数据转移到对应的合并类临时暂存区后，若在通用类临时暂存区中发现新的由目标节点形成的目标数据，则将这些新的目标数据添加到对应的合并类临时暂存区中；若某个合并类临时暂存区在经历预设时间段后没有新增数据，则各节点将该合并类临时暂存区中的所有目标数据封装形成与当前区块序号相匹配的潜在区块。5.根据权利要求4所述的一种基于信息安全的数据传输方法，其特征在于，所述第二终端将获取到的目标文件夹中的多份子文件合并成目标文件，具体包括：在第二终端从多个目标下载链接获取与第三方服务器数量匹配的多个目标文件夹之后，第二终端从多个目标文件夹中将用于合并成目标文件的多份子文件转移到合并文件夹中；第二终端检测到合并文件中的多份子文件的文件名称符合触发条件时，基于合并文件夹中的多份子文件的文件名称确定与各子文件的分割顺序对应的合并顺序，并根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件；所述触发条件为：合并文件夹内的所有子文件的文件名称的尾字符能够组成一串连续的字符序列。6.根据权利要求5所述的一种基于信息安全的数据传输方法，其特征在于，第二终端上部署有接入区块链网络的第二节点，所述方法还包括：当第二终端检测到合并文件夹中的多份子文件的文件名称不符合触发条件时，执行如下步骤：第二终端将合并文件夹内的所有子文件被上传至第三方服务器的上传时间点中最晚的上传时间点作为出发时间点；第二终端从区块链中将时间戳指示的时间在出发时间点之后的第一个区块开始，遍历各区块中由第一节点封装形成的目标数据，直到获得与合并文件夹中所有子文件数量对应的目标数据，其中，目标数据中包含有第一数字指纹；第二终端将获得的与合并文件夹中所有子文件数量对应的目标数据按照被第一节点生成的时间进行排序；第二终端计算合并文件夹中所有子文件的第二数字指纹；第二终端将各第二数字指纹与排序后的各目标数据中的第一数字指纹进行匹配，确定第二数字指纹的排序；根据第二数字指纹的排序确定合并文件夹内各子文件的合并顺序，并根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件。7.根据权利要求6所述的一种基于信息安全的数据传输方法，其特征在于，在根据第二数字指纹的排序确定合并文件夹内各子文件的合并顺序之后，并在根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件之前，还包括：根据合并文件夹内各子文件的合并顺序修改各子文件的文件名称，使得各子文件修改后的文件名称仅在文件名称的尾字符存在差异，并且各子文件名称的尾字符按照各子文件的合并顺序被设置为从预设的起点字符开始依次递增。8.根据权利要求1所述的一种基于信息安全的数据传输方法，其特征在于，所述第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件，具体包括：第一终端将需要发送的目标文件读入到内存中，形成可操作的目标数据；第一终端根据预设的文件分割参数，将内存中的目标数据划分为多份中间数据并暂存在内存中；其中，每份中间数据对应将要创建的一份子文件；第一终端将内存中暂存的多份中间数据写入到第一终端非易失存储器上的文件系统中，以实现在文件系统中创建多份子文件。9.一种基于信息安全的数据传输装置，包括存储器、处理器及存储在存储器上的计算机程序，其特征在于，所述处理器执行所述计算机程序，以实现权利要求1至8中任一项所述方法的步骤。10.一种计算机可读存储介质，其上存储有计算机程序/指令，其特征在于，该计算机程序/指令被处理器执行时实现权利要求1至8中任一项所述方法的步骤。
说明书desc
技术领域本发明属于数据传输技术领域，特别涉及一种基于信息安全的数据传输方法和装置。背景技术对于第一终端想要将某个数据传输给第二终端的需求，考虑到第一终端和第二终端不同时在线的情况，可以使用通讯软件或者网盘进行传输。例如，一些通讯软件提供了离线发送的功能，当第二终端不在线时，第一终端发送给第二终端的文件会被通讯软件服务商的服务器暂存，在检测到第二终端登录之后，点击接收文件的链接，服务器就会将暂存的文件发送给第二终端。或者第一终端将文件上传到网盘，然后将下载链接通过通讯软件发送给第二终端，第二终端可以在上线时点击下载链接下载得到文件，如此，则无需通讯软件服务器保存文件，该方案可以解决一些通讯软件对文件传输大小的限制。然而上述传统的数据传输方案需要将完整的文件暂存在第三方服务器上，第三方服务器基于多种因素考虑会扫描用户上传到服务器上的文件，例如，扫描用户上传的文件判断是否存在不符合平台规定的内容、或扫描用户上传的文件获取该文件的MD5值，通过比较网盘中是否存在相同MD5值的文件，从而实现文件秒上传或文件去重的功能等。由于上传完整的文件，第三方服务器在扫描文件时可以直接识别文件内容，该行为会导致服务器直接获取文件的完整信息，从而使得用户上传文件的全部信息存在信息泄露的风险，并且单次上传完整的文件，当受到网络攻击时，会导致完整的文件被攻击窃取，也进一步带来信息泄露的风险。通过检索发现，现有技术中披露了一种文件切割传输方法、装置和电子设备，该方案中将位于第一终端的待上传的原文件进行切割，生在多个切割文件，记录切割信息，切割文件名以原文件名后缀按切割顺序_形式命名，n为自然数，所述切割信息包括以下的至少一个：原文件名、切割文件名、切割点信息、切割文件个数和切割文件顺序；将所述切割文件上传至所述第二终端，同时将所述切割信息发送至所述第二终端，所述第二终端将所述切割文件存储在指定文件路径；在第二终端的数据库中记录所述切割文件对应的切割信息和文件路径信息；所述第二终端根据所述数据库记载的信息提供文件查询和下载服务。该方案通过将文件分割后再上传到服务器，可以避免服务器直接获得完整的文件，从而可以避免服务器在扫描文件时对文件内容直接识别，服务器无法直接读取文件完整信息，降低了信息泄露风险；同时由于将一个文件分割为多份进行传输，当受到网络攻击时，减少完整文件被窃取风险，可以降低信息泄露风险。上述方案虽然将文件进行分割后再上传，但是将文件都上传到一个服务器并且将分割文件的顺序也一并上传，同时切割文件名以原文件名后缀按切割顺序_形式命名；使得服务器很容易识别出这些分割文件是从同一文件分割得到，从而使得服务器可以轻松将这些分割文件合并为原文件进行扫描。另一方面，即使服务器并不将这些切割文件合并，但是由于所有的切割文件都上传到同一服务器，一旦发生网络攻击，仍然会同时被黑客拦截到全部文件并在切割信息中的分割文件顺序以及切割文件名以原文件名后缀按切割顺序_形式命名的提示下，轻松还合并成原文件，导致文件泄露风险较高。发明内容本发明的目的在于至少解决上述问题之一，以提供一种基于信息安全的数据传输方法和装置，在第一终端通过第三方服务器将文件分割后的子文件传输给第二终端过程中，能够降低第三方服务器识别出这些子文件以及降低第三方服务器将这些子文件合并为原文件的难度，同时能够在文件泄露时，降低黑客识别出这些子文件以及降低第三方服务器将这些子文件合并为原文件的难度，从而降低文件在传输过程中信息泄露的风险，提升数据传输的安全性。为了实现上述发明目的，本发明提供一种基于信息安全的数据传输方法，所述方法包括：第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件；其中，所有子文件的文件名称的尾字符组成的序列是不连续的；第一终端将包含多份子文件的目标文件夹上传至第三方服务器；第一终端将目标下载链接发送给第二终端，所述目标下载链接为第三方服务器提供的目标文件夹对应的下载链接；第二终端基于所述目标下载链接获取目标文件夹；第二终端将获取到的目标文件夹中的多份子文件合并成目标文件。根据本发明的一种实施方式，所述第三方服务器的数量为多个，目标文件夹数量与第三方服务器的数量匹配，所述第一终端将包含多份子文件的目标文件夹上传至第三方服务器，具体包括：第一终端将从目标文件分割得到多份子文件分配到各目标文件夹中；第一终端将各目标文件夹上传至对应的第三方服务器；所述第二终端基于所述目标下载链接获取目标文件夹，具体包括：第二终端从多个目标下载链接获取与第三方服务器数量匹配的多个目标文件夹。根据本发明的一种实施方式，第一终端上部署有接入区块链网络的第一节点，所述方法还包括：第一终端将目标文件分割为多份子文件并且将所有子文件都上传到第三方服务器之后，按照各子文件的分割顺序，依次计算文件系统中各子文件的第一数字指纹；第一节点按照计算得到各子文件第一数字指纹的顺序，将各个第一数字指纹依次封装成目标数据传播到区块链网络中；区块链中的各节点将接收到的目标数据进行审核并认可后，将对应的目标数据存储进临时暂存区中；区块链网络中的求解验证节点根据既定策略从临时暂存区中提取所需的目标数据，封装形成当前区块序号的潜在区块传播至区块链网络中；区块链中的各节点对潜在区块进行审核并认可后，将该潜在区块加入区块链中。根据本发明的一种实施方式，所述根据既定策略从临时暂存区中提取所需的目标数据，封装形成当前区块序号的潜在区块，具体包括：各节点在通用类临时暂存区中发现多个由相同节点形成的目标数据，并且当这些目标数据形成的时间差小于设定的第一时间阈值时，将这些目标数据转移到合并类临时暂存区中并将形成这些目标数据的节点标记为目标节点；各节点把由同一目标节点创建的多个目标数据转移到对应的合并类临时暂存区后，若在通用类临时暂存区中发现新的由目标节点形成的目标数据，则将这些新的目标数据添加到对应的合并类临时暂存区中；若某个合并类临时暂存区在经历预设时间段后没有新增数据，则各节点将该合并类临时暂存区中的所有目标数据封装形成与当前区块序号相匹配的潜在区块。根据本发明的一种实施方式，所述第二终端将获取到的目标文件夹中的多份子文件合并成目标文件，具体包括：在第二终端从多个目标下载链接获取与第三方服务器数量匹配的多个目标文件夹之后，第二终端从多个目标文件夹中将用于合并成目标文件的多份子文件转移到合并文件夹中；第二终端检测到合并文件中的多份子文件的文件名称符合触发条件时，基于合并文件夹中的多份子文件的文件名称确定与各子文件的分割顺序对应的合并顺序，并根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件；所述触发条件为：合并文件夹内的所有子文件的文件名称的尾字符能够组成一串连续的字符序列。根据本发明的一种实施方式，第二终端上部署有接入区块链网络的第二节点，所述方法还包括：当第二终端检测到合并文件夹中的多份子文件的文件名称不符合触发条件时，执行如下步骤：第二终端将合并文件夹内的所有子文件被上传至第三方服务器的上传时间点中最晚的上传时间点作为出发时间点；第二终端从区块链中将时间戳指示的时间在出发时间点之后的第一个区块开始，遍历各区块中由第一节点封装形成的目标数据，直到获得与合并文件夹中所有子文件数量对应的目标数据，其中，目标数据中包含有第一数字指纹；第二终端将获得的与合并文件夹中所有子文件数量对应的目标数据按照被第一节点生成的时间进行排序；第二终端计算合并文件夹中所有子文件的第二数字指纹；第二终端将各第二数字指纹与排序后的各目标数据中的第一数字指纹进行匹配，确定第二数字指纹的排序；根据第二数字指纹的排序确定合并文件夹内各子文件的合并顺序，并根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件。根据本发明的一种实施方式，在根据第二数字指纹的排序确定合并文件夹内各子文件的合并顺序之后，并在根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件之前，还包括：根据合并文件夹内各子文件的合并顺序修改各子文件的文件名称，使得各子文件修改后的文件名称仅在文件名称的尾字符存在差异，并且各子文件名称的尾字符按照各子文件的合并顺序被设置为从预设的起点字符开始依次递增。根据本发明的一种实施方式，所述第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件，具体包括：第一终端将需要发送的目标文件读入到内存中，形成可操作的目标数据；第一终端根据预设的文件分割参数，将内存中的目标数据划分为多份中间数据并暂存在内存中；其中，每份中间数据对应将要创建的一份子文件；第一终端将内存中暂存的多份中间数据写入到第一终端非易失存储器上的文件系统中，以实现在文件系统中创建多份子文件。另一方面，本发明提供一种基于信息安全的数据传输装置，包括存储器、处理器及存储在存储器上的计算机程序，所述处理器执行所述计算机程序，以实现上述方法的步骤。再一方面，本发明提供一种计算机可读存储介质，其上存储有计算机程序/指令，该计算机程序/指令被处理器执行时实现上述方法的步骤。相较于现有技术，本发明至少具有优先的有益效果：相较于现有技术中将切割文件上传服务器时，将切割文件名以原文件名后缀按切割顺序_形式命名，容易被服务商或者黑客合并出原文件导致信息泄露。本发明提供的一种基于信息安全的数据传输方法和装置，该方法中，第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件；其中，所有子文件的文件名称的尾字符组成的序列是不连续的；第一终端将包含多份子文件的目标文件夹上传至第三方服务器。由于上传至第三方服务器的各子文件的文件名称的尾字符组成的序列是不连续的，因此在第一终端通过第三方服务器将文件分割后的子文件传输给第二终端过程中，能够降低第三方服务器识别出这些子文件以及降低第三方服务器将这些子文件合并为原文件的难度，同时能够在文件泄露时，降低黑客识别出这些子文件以及降低第三方服务器将这些子文件合并为原文件的难度，从而降低文件在传输过程中信息泄露的风险，提升数据传输的安全性。附图说明为了使本发明所解决的技术问题、采用的技术手段及取得的技术效果更加清楚，下面将参照附图详细描述本发明的具体实施例。但需声明的是，下面描述的附图仅仅是本发明的示例性实施例的附图，对于本领域的技术人员来讲，在不付出创造性劳动的前提下，可以根据这些附图获得其他实施例的附图。图1为本发明一实施例提供的一种基于信息安全的数据传输方法的流程图之一；图2为本发明一实施例提供的一种基于信息安全的数据传输方法的流程图之二；图3为本发明一实施例提供的一种基于信息安全的数据传输方法的流程图之三；图4为本发明一实施例提供的一种基于信息安全的数据传输方法的流程图之四；图5为本发明一实施例提供的一种基于信息安全的数据传输方法的流程图之五；图6为本发明一实施例提供的一种基于信息安全的数据传输方法的流程图之六；图7为执行了本发明基于信息安全的数据传输方法的第一终端的界面示意图之一；图8为执行了本发明基于信息安全的数据传输方法的第一终端的界面示意图之二；图9为执行了本发明基于信息安全的数据传输方法的第二终端的界面示意图之一；图10为执行了本发明基于信息安全的数据传输方法的第二终端的界面示意图之二；图11为执行了本发明基于信息安全的数据传输方法的第二终端的界面示意图之三。具体实施方式为使本发明实施例的目的、技术方案和优点更加清楚，下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有作出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。参照图1，本实施例中提供了一种基于信息安全的数据传输方法，所述方法包括：步骤101、第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件；其中，所有子文件的文件名称的尾字符组成的序列是不连续的。举例说明，需要发送的目标文件的文件名称为‘work.pdf’,第一终端上安装有用于执行本实施例提供的基于信息安全的数据传输方法的应用程序，其界面如图7所示，用户可以在第一终端设置将该目标文件分割为4份，然后将该目标文件拖拽到图7界面中所示的捕获区，接着点击分割按钮，该应用程序会默认在指定路径创建一个名称为“分割文件夹”的文件夹，然后将对目标文件分割后，在文件系统中创建得到的4份子文件保存在分割文件夹中。如果已经在指定路径存在名称为分割文件夹的文件夹，则会将已经存在的分割文件夹的内容清空。如图7所示，按照分割的顺序，这4份子文件的名称依次是work.pdf_adc.pdf、work.pdf_ddd.pdf、work.pdf_ass.pdf、work.pdf_adx.pdf，显然所有子文件的文件名称尾字符分别是cdsx，即所有子文件的文件名称的尾字符组成的序列是不连续的。需要说明的是，此处所称的序列是连续的，是指一个由英文字母或阿拉伯数字等字符构成的序列，该序列中相邻字符之间应该是按照阿拉伯数字或者英文字母表中的顺序出现的字符，不能出现跳过某个字符的情况。例如abcd构成的序列时连续的，而acde组成的序列则是不连续的。例如，1234构成的序列是连续的，而1345组成的序列则是不连续的。在一个示例中，所述第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件，如图6所示，具体包括：步骤601、第一终端将需要发送的目标文件读入到内存中，形成可操作的目标数据。步骤602、第一终端根据预设的文件分割参数，将内存中的目标数据划分为多份中间数据并暂存在内存中；其中，每份中间数据对应将要创建的一份子文件。步骤603、第一终端将内存中暂存的多份中间数据写入到第一终端非易失存储器上的文件系统中，以实现在文件系统中创建多份子文件。需要说明的是，文件分割参数可以是如图7设置的分割得到子文件的份数，例如4份，或者从目标文件中每次分割出来的子文件的大小，例如10MB。当设置好文件分割参数并触发分割按钮之后，第一终端上的应用程序将目标文件读入到内存中，并将内存中的目标数据划分为4份，最后应用程序将这4份中间数据写入到第一终端非易失存储器上的文件系统中的分割文件夹中，以形成各个子文件。需要说明的是，某份中间数据被全部写入到文件系统中时，就是对应的子文件被创建的时间，该时间可以通过文件系统记录的元数据查询到。应当理解的是，由于将4份中间数据写入到第一终端非易失存储器上的文件系统中时，可能是由多个线程并发执行，因此，4份子文件被创建的时间并不一定与子文件的分割顺序完全一致对应。举例而已，如图7所示，按照分割的顺序，这4份子文件的名称依次是work.pdf_adc.pdf、work.pdf_ddd.pdf、work.pdf_ass.pdf、work.pdf_adx.pdf，但是有可能work.pdf_ddd.pdf这个子文件在文件系统中被创建的时间早于work.pdf_adc.pdf这个子文件。原因是，这4份子文件对应的中间数据虽然是按照分割顺序出现并暂存在内存中，但是由于将这4份中间数据从内存写入到文件系统形成对应的子文件时，存在多线程运行或者中间数据写入文件系统耗时差异的问题，所以无法通过子文件创建的时间来判断各个子文件的分割顺序。步骤102、第一终端将包含多份子文件的目标文件夹上传至第三方服务器。在如图7所示的应用程序在分割文件夹中生成4份子文件之后，用户可以通过第三方网盘或者QQ一类的通讯软件将分割文件夹直接上传给网盘或通讯软件的第三方服务器，具体的操作为用户在第一终端登录通讯软件将文件夹直接发送给其他人或者将目标文件夹上传到网盘，此处分割文件夹作为目标文件夹。步骤103、第一终端将目标下载链接发送给第二终端，所述目标下载链接为第三方服务器提供的目标文件夹对应的下载链接。已知目标文件夹被上传到网盘或通讯软件的第三方服务器上，通过目标下载链接可以使得其他用户下载保存在这些第三方服务器上的目标文件夹，从而得到该文件夹中的所有子文件。步骤104、第二终端基于所述目标下载链接获取目标文件夹。具体的，需要接收文件的用户通过第二终端上的网盘或者通讯软件访问下载链接下载目标文件夹，从而得到该文件夹中的所有子文件。步骤105、第二终端将获取到的目标文件夹中的多份子文件合并成目标文件。用户可以在第二终端将目标文件夹中的子文件合并成目标文件，从而得到完整的目标文件，实现两个用户之间的数据传输。相较于现有技术中将切割文件上传服务器时，将切割文件名以原文件名后缀按切割顺序_形式命名，容易被服务商或者黑客合并出原文件导致信息泄露。本实施例提供的一种基于信息安全的数据传输方法中，第一终端将需要发送的目标文件进行分割，以在文件系统中创建多份子文件；其中，所有子文件的文件名称的尾字符组成的序列是不连续的；第一终端将包含多份子文件的目标文件夹上传至第三方服务器。由于上传至第三方服务器的各子文件的文件名称的尾字符组成的序列是不连续的，因此在第一终端通过第三方服务器将文件分割后的子文件传输给第二终端过程中，能够降低第三方服务器识别出这些子文件以及降低第三方服务器将这些子文件合并为原文件的难度，同时能够在文件泄露时，降低黑客识别出这些子文件以及降低第三方服务器将这些子文件合并为原文件的难度，从而降低文件在传输过程中信息泄露的风险，提升数据传输的安全性。具体的，在一个示例中，第三方服务器的数量为多个，目标文件夹数量与第三方服务器的数量匹配，所述第一终端将包含多份子文件的目标文件夹上传至第三方服务器，具体包括：第一终端将从目标文件分割得到多份子文件分配到各目标文件夹中。第一终端将各目标文件夹上传至对应的第三方服务器。将第一终端的用户成为第一用户，第二终端的用户称为第二用户。本示例中，在第一终端将目标文件分割得到的多个子文件写入到分割文件夹之后，第一用户在分割文件夹之后创建了多个目标文件夹，并操作第一终端将分割文件夹中的多份子文件转移到各文件夹中。接着，可以将不同目标文件夹上传到不同网盘中，避免目标文件的所有数据都保存在一个网盘中，由于目标文件的所有数据并未保存在同一个第三方服务器上，即使该第三方服务器遭遇网络攻击导致数据泄露，也不会将目标文件的所有数据泄露出去，保证数据传输过程的安全。所述第二终端基于所述目标下载链接获取目标文件夹，具体包括：第二终端从多个目标下载链接获取与第三方服务器数量匹配的多个目标文件夹。对应的，第二用户也可以从多个网盘中下载多个目标文件夹，从而从各个目标文件夹中得到同一个目标文件的不同部分数据，即不同的子文件。如图2所示，在一个实施例中，第一终端上部署有接入区块链网络的第一节点，所述方法还包括：步骤201、第一终端将目标文件分割为多份子文件并且将所有子文件都上传到第三方服务器之后，按照各子文件的分割顺序，依次计算文件系统中各子文件的第一数字指纹。如图8所示，当第一用户将所有子文件都上传到第三方服务器之后，第一用户拖拽分割文件夹到捕获区，应用程序检测到指定路径的名称为“分割文件夹”的文件被拖拽到捕获区的事件以及用户触发上链按钮的事件发生时，就会按照在步骤101中获得的各子文件的分割顺序，依次计算文件系统中各子文件的第一数字指纹。如图8所示，依次计算work.pdf_adc.pdf、work.pdf_ddd.pdf、work.pdf_ass.pdf、work.pdf_adx.pdf等4份子文件的数字指纹，此处的第一数字指纹是各子文件的哈希摘要，则work.pdf_adc.pdf、work.pdf_ddd.pdf、work.pdf_ass.pdf、work.pdf_adx.pdf等4份子文件的第一数字指纹依次分别为hash_adc、hash_ddd、hash_ass、hash_adx。步骤202、第一节点按照计算得到各子文件第一数字指纹的顺序，将各个第一数字指纹依次封装成目标数据传播到区块链网络中。如上所述，计算得到各子文件的第一数字指纹的顺序依次为：hash_adc、hash_ddd、hash_ass、hash_adx，即第一数字指纹hash_adc比hash_ddd这个第一数字指纹更早被计算得到，所以hash_adc比hash_ddd的顺序更靠前。因此，按照hash_adc、hash_ddd、hash_ass、hash_adx的顺序依次将这些第一数字指纹封装成目标数据并通过广播的形式传播到区块链网络中的其他节点。由于各子文件在上传到网盘或者通过通讯软件传输的过程中，其名字可能会被修改，特别是通过多个第三方服务器分别传输部分子文件时，由于不同第三方服务器规范不同，上传的字文件的文件名称被修改的概率增加，所以通过子文件的文件名称来记录并传递各子文件的分割顺序的方案很容易失效。为了解决该问题，在步骤202中，同一个目标文件分割得到的各子文件的第一数字指纹被按照分割顺序形成在区块链中传播的目标数据，后续可以从区块链上取出各个子文件对应的目标数据并通过比较各目标数据形成的时间顺序，确定各子文件对应的分割顺序。步骤203、区块链中的各节点将接收到的目标数据进行审核并认可后，将对应的目标数据存储进临时暂存区中。各节点对目标数据的审核包括目标数据是否符合约定的格式以及约定的数据量大小等，在审核通过之后，即视为该节点认可了接收到的目标数据，然后就会将对应的目标数据存储仅该节点的临时暂存区。具体的，临时暂存区是节点划分出的一个内存空间，节点会将接收到的其他节点广播的目标数据先审核通过后加入到自己的临时暂存区中，然后求解验证节点会根据设定的规则从临时暂存区中选取对应的目标数据生成潜在区块。步骤204、区块链网络中的求解验证节点根据既定策略从临时暂存区中提取所需的目标数据，封装形成当前区块序号的潜在区块传播至区块链网络中。步骤205、区块链中的各节点对潜在区块进行审核并认可后，将该潜在区块加入区块链中。潜在区块的审核一般包括区块的数据结构审核以及区块中的目标数据的审核等，一旦通过审核就认为潜在区块得到了认可，于是各节点就会将该潜在区块加入区块链中。由于区块链具有不易篡改的特效，所以对于各方都具有很强的公信力。能够证明目标文件的时间戳，特别在目标文件为原始设计的作品时，由于二者之间传输的数据的数字指纹被保存在区块链上，可以提供各方均可采信的时间戳。如图3所示，在一个实施例中，所述根据既定策略从临时暂存区中提取所需的目标数据，封装形成当前区块序号的潜在区块，具体包括：步骤301、各节点在通用类临时暂存区中发现多个由相同节点形成的目标数据，并且当这些目标数据形成的时间差小于设定的第一时间阈值时，将这些目标数据转移到合并类临时暂存区中并将形成这些目标数据的节点标记为目标节点。根据现有技术可知，每个节点都唯一对应一个区块链节点地址，区块链节点地址根据公钥计算得到，计算时，以公钥作为输入，计算其哈希值，然后进行base58check编码，得到的值即为区块链节点地址。各节点在审核接收到的目标数据时可以知道各个目标数据对应的区块链节点地址，从而识别对应的节点。每个节点都配置有一个通用类临时暂存区和多个合并类临时暂存区。具体的，如图8所示，第一终端上的区块链节点生成了4项目标数据，平均每1秒生成一项目标数据。当各节点检测在通用类临时暂存区中有A节点形成的4项目标数据，并且各项目标数据形成的时间差均小于设定的第一时间阈值，则将这4项目标数据转移到合并类临时暂存区中并将形成这些目标数据的节点标记为目标节点。步骤302、各节点把由同一目标节点创建的多个目标数据转移到对应的合并类临时暂存区后，若在通用类临时暂存区中发现新的由目标节点形成的目标数据，则将这些新的目标数据添加到对应的合并类临时暂存区中。步骤303、若某个合并类临时暂存区在经历预设时间段后没有新增数据，则各节点将该合并类临时暂存区中的所有目标数据封装形成与当前区块序号相匹配的潜在区块。具体的，预设时间段为2分钟，即将这4项目标数据转移到合并类临时暂存区中经过2分钟若没有新增数据时，求解验证节点就会将该合并类临时暂存区中的所有目标数据封装形成与当前区块序号相匹配的潜在区块。可以理解的是，本实施例中，由于将一次分割的各子文件的数字指纹都先添加到同一个合并类临时暂存区中，从而可以将属于通过也目标文件的各个子文件的数字指纹都尽量保存在一个区块中，便于后续从区块链中遍历查找某个目标文件的各子文件的数字指纹时，可以集中找到某个目标文件的各子文件的数字指纹，提高在区块链中查找的效率。如图4所示，在一个实施例中，第二终端将获取到的目标文件夹中的多份子文件合并成目标文件，具体包括：步骤401、在第二终端从多个目标下载链接获取与第三方服务器数量匹配的多个目标文件夹之后，第二终端从多个目标文件夹中将用于合并成目标文件的多份子文件转移到合并文件夹中；步骤402、第二终端检测到合并文件中的多份子文件的文件名称符合触发条件时，基于合并文件夹中的多份子文件的文件名称确定与各子文件的分割顺序对应的合并顺序，并根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件；所述触发条件为：合并文件夹内的所有子文件的文件名称的尾字符能够组成一串连续的字符序列。如图10所示，当第二用户在第二终端打开应用程序时，第二终端的指定路径不存在名称为“合并文件夹”的文件夹时，应用程序会创建该文件夹，并提醒用户将从多个目标下载链接下载得到的子文件都转移到合并文件夹中。如果合并文件夹中已经存在文件的情况下，当应用程序检测到用户触发界面上的“合并预处理按钮”时，会将合并文件夹中内容清空，并打开合并文件夹，以便用户将子文件转移到该文件夹内。可以理解的是，虽然第一终端上应用程序分割时使得所有子文件的文件名称的尾字符组成的序列是不连续的，但是有些用户在知道分割顺序并且使用多个第三方服务器共同实现文件传输的情况下，由于单个服务器无法得到所有的子文件，因此认为无需通过混淆子文件的文件名来包含分割顺序，此时第一用户就可能会在将各子文件上传网盘之前进行了文件名修改，使得所有子文件的文件名称的尾字符能够组成一串连续的字符序列，即按照分割顺序给各文件命名，通过文件名来传递分割顺序。例如，4个子文件的文件名为work_pd0.pdf、work_pd1.pdf、work_pd2.pdf、work_pd3.pdf，可见所有子文件的文件名称的尾字符能够组成一串连续的字符序列，即0123。此时，若第二用户拖拽合并文件夹中任意一个子文件，例如work_pd1.pdf到捕获区并触发合并按钮就可以根据4个子文件的文件名称来确定各子文件的分割顺序，即合并顺序，合并顺序与所有子文件的文件名称的尾字符能够组成字符序列一致，依次为：work_pd0.pdf、work_pd1.pdf、work_pd2.pdf、work_pd3.pdf。如图5所示，在一个实施例中，第二终端上部署有接入区块链网络的第二节点，所述方法还包括：当第二终端检测到合并文件夹中的多份子文件的文件名称不符合触发条件时，即所有子文件的文件名称的尾字符组成的序列是不连续的，就执行如下步骤：步骤501、第二终端将合并文件夹内的所有子文件被上传至第三方服务器的上传时间点中最晚的上传时间点作为出发时间点。具体而言，第二用户在第二终端上通过网盘或通讯软件可以查看到各子文件被上传至第三方服务器的上传时间点，即第三方服务器创建对应子文件的时间点。如图9所示，第二用户可以在界面中的操作区对应输入框输入该时间点，例如为14：23：45。步骤502、第二终端从区块链中将时间戳指示的时间在出发时间点之后的第一个区块开始，遍历各区块中由第一节点封装形成的目标数据，直到获得与合并文件夹中所有子文件数量对应的目标数据，其中，目标数据中包含有第一数字指纹。每个节点从临时暂存区将目标数据封装形成潜在区块时都会打上一个时间戳，这个时间戳表示形成当前区块的时间。即从14：23：45开始，在区块链中遍历时间戳对应的时间晚于14：23：45的区块，找到由第一节点封装形成的4个目标数据，即要找到4个子文件对应的目标数据。如图9所示，当从合并文件夹中拖拽任意一个子文件到捕获区并触发排序按钮，就会首先触发第二终端上的第二节点按照步骤502遍历区块链上的区块，从而取出4个子文件对应的目标数据。接着，通过步骤503至506，实现对合并文件夹中的子文件按照分割顺序进行排序，以便实现对子文件的名称在传输过程中被改动情况下，也获得各子文件的合并顺序。步骤503、第二终端将获得的与合并文件夹中所有子文件数量对应的目标数据按照被第一节点生成的时间进行排序。由上述步骤202可知，按照被第一节点生成的时间进行排序，就是按照各子文件分割顺序进行排序。步骤504、第二终端计算合并文件夹中所有子文件的第二数字指纹。步骤505、第二终端将各第二数字指纹与排序后的各目标数据中的第一数字指纹进行匹配，确定第二数字指纹的排序。步骤506、根据第二数字指纹的排序确定合并文件夹内各子文件的合并顺序，并根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件。举例而言，假设4份子文件上传到第三方服务器之后，由于第三方服务器保存出错，导致原来文件名称与分割顺序一一对应的work_pd0.pdf、work_pd1.pdf、work_pd2.pdf、work_pd3.pdf等4个子文件的文件名称变成了pds.pdf、dsw.pdf、dsx.pdf、woe.pdf。此时从网盘中下载得到的work_pd0.pdf、work_pd1.pdf、work_pd2.pdf、work_pd3.pdf等4个子文件的第一数字指纹分别为hash_pd0、hash_pd1、hash_pd2、hash_pd3，则分别将合并文件夹中的pds.pdf、dsw.pdf、dsx.pdf、woe.pdf求出对应的第二数字指纹之后，分别与4个子文件的第一数字指纹进行匹配，确定4个子文件的合并顺序为pds.pdf、dsw.pdf、dsx.pdf、woe.pdf。本实施例对于文件传输过程可能会造成子文件的文件名称改变而导致合并顺序丢失的问题，提供了新的合并顺序传递方式。参照图11，在步骤501至步骤506的基础上，已经得到各子文件的合并顺序，但是由于各子文件的文件名依次为pds.pdf、dsw.pdf、dsx.pdf、woe.pdf，不方便第二用户记忆，因此，本实施例中，提供了重命名功能。将合并文件夹中的任意一个子文件拖拽到捕获区并触发重命名按钮则执行以下步骤。具体的，在步骤501至步骤506的基础上，在根据第二数字指纹的排序确定合并文件夹内各子文件的合并顺序之后，并在根据各子文件的合并顺序将合并文件夹中的多份子文件合并成目标文件之前，还包括：根据合并文件夹内各子文件的合并顺序修改各子文件的文件名称，使得各子文件修改后的文件名称仅在文件名称的尾字符存在差异，并且各子文件名称的尾字符按照各子文件的合并顺序被设置为从预设的起点字符开始依次递增。通过上述步骤之后，pds.pdf、dsw.pdf、dsx.pdf、woe.pdf变成了pds_0.pdf、pds_1.pdf、pds_2.pdf、pds_3.pdf，其中预设的起点字符为0。另一方面，本发明提供一种基于信息安全的数据传输装置，包括存储器、处理器及存储在存储器上的计算机程序，所述处理器执行所述计算机程序，以实现上述方法的步骤。再一方面，本发明提供一种计算机可读存储介质，其上存储有计算机程序/指令，该计算机程序/指令被处理器执行时实现上述方法的步骤。最后应说明的是，以上实施例仅用以说明本发明的技术方案而非限制，尽管参照较佳实施例对本发明进行了详细说明，本领域的普通技术人员应当理解，可以对本发明的技术方案进行修改或等同替换，而不脱离本发明技术方案的精神和范围。
