标题title
一种基于FPGA的EMC接口扩展模块、系统及方法
摘要abst
FPGA，具有设计灵活、可反复编程的优点，且具有丰富的GPIO资源。本发明提出一种基于FPGA的EMC接口扩展模块、系统及方法，涉及数字集成电路和电子信息应用领域，采用共享地址架构，将多个EMC接口及其他接口合并到同一个内存总线上，为一些需要大量外部存储器和其他接口扩展的系统提供更为高效和经济的解决方案，提高了系统的扩展性和灵活性。
权利要求书clms
1.一种基于FPGA的EMC接口扩展模块，其特征在于，包括EMC_slave模块、地址仲裁模块、中断产生模块、透明桥接通路模块、寄存器桥接通路模块和接口扩展模块；所述地址仲裁模块分别与EMC_slave模块、透明桥接通路模块、寄存器桥接通路模块、中断产生模块连接，所述接口扩展模块分别与寄存器桥接通路模块和中断产生模块连接。2.根据权利要求1所述基于FPGA的EMC接口扩展模块，其特征在于，所述寄存器桥接通路模块包括可写状态寄存器、写状态寄存器、写数据寄存器、读数据寄存器、读长度寄存器。3.根据权利要求1所述基于FPGA的EMC接口扩展模块，其特征在于，所述接口扩展模块包括网口模块、PCIe模块、串口模块、SPI模块和IIC模块。4.根据权利要求1所述基于FPGA的EMC接口扩展模块，其特征在于，所述透明桥接通路模块为外部存储扩展，用于将EMC_slave接口直接映射到EMC_master_1到EMC_master_n。5.一种基于FPGA的EMC接口扩展系统，其特征在于，包括如权利要求1-4任一所述基于FPGA的EMC接口扩展模块、CPU、外部存储接口和扩展接口，所述CPU为主设备，如权利要求1-4任一所述基于FPGA的EMC接口扩展模块为从设备，透明桥接通路模块与外部存储接口连接，接口扩展模块与扩展接口连接。6.一种基于FPGA的EMC接口扩展方法，基于权利要求1-4任一所述基于FPGA的EMC接口扩展模块实现，其特征在于，包括步骤：CPU作为主设备，主动向不同的地址写入数据，地址仲裁模块对地址进行解析，并将CPU下发的数据送往不同的数据通路；所述对地址进行解析的方法为：根据EMC_slave接收到的地址数据来区分CPU要读或写的数据通路；所述CPU下发数据的方法为：CPU要操作外部存储时，透明桥接通路模块将EMC_slave接口直接映射到EMC_master_1到EMC_master_m中，传输过程中对数据不进行处理，透明桥接通路模块依靠地址仲裁来区分各个EMC_master接口；CPU要通过外部扩展接口进行通信时，寄存器桥接通路模块根据地址数据区分选通的寄存器和接口通道。7.根据权利要求6所述基于FPGA的EMC接口扩展方法，其特征在于，所述EMC_slave接收到的地址数据EMC_slave_addr包括通信类型选择位，所述通信类型选择位为外部存储时，地址数据EMC_slave_addr还包括存储地址位；所述通信类型选择位为外部扩展接口时，地址数据EMC_slave_addr还包括通道控制位、寄存器类型位和预留位。8.根据权利要求7所述基于FPGA的EMC接口扩展方法，其特征在于，EMC_slave_addr的bit0为通信类型选择位，EMC_slave_addr=1时，表示CPU要操作外部存储，后续地址EMC_slave_addr表示外部存储的地址；EMC_slave_addr=0时，表示CPU要通过外部扩展接口进行通信，此时EMC_slave_addr为寄存器类型位，EMC_slave_addr为通道选择位，其余地址位预留。9.根据权利要求8所述基于FPGA的EMC接口扩展方法，其特征在于，EMC_slave_addr=0时：EMC_slave_addr为寄存器类型位，当EMC_slave_addr=00时，表示选通状态寄存器，此时，EMC_slave_addr=000代表可写状态寄存器，EMC_slave_addr=001代表写状态寄存器，EMC_slave_addr=010代表中断寄存器，EMC_slave_addr=011代表网口读长度寄存器，EMC_slave_addr=100代表PCIe读长度寄存器，EMC_slave_addr=101代表串口读长度寄存器，EMC_slave_addr=110表示SPI读长度寄存器，EMC_slave_addr=111代表IIC读长度寄存器；当EMC_slave_addr=01时，表示选通写数据寄存器，此时，EMC_slave_addr=000代表网口写数据寄存器，EMC_slave_addr=001代表PCIe写数据寄存器，EMC_slave_addr=010代表串口写数据寄存器，EMC_slave_addr=011代表SPI写数据寄存器，EMC_slave_addr=100代表IIC写数据寄存器；当EMC_slave_addr=10时，表示选通读数据寄存器，此时，EMC_slave_addr=000代表网口读数据寄存器，EMC_slave_addr=001代表PCIe读数据寄存器，EMC_slave_addr=010代表串口读数据寄存器，EMC_slave_addr=011代表SPI读数据寄存器，EMC_slave_addr=100代表IIC读数据寄存器。
说明书desc
技术领域本发明涉及数字集成电路和电子信息应用领域，具体涉及一种基于FPGA的EMC接口扩展模块、系统及方法。背景技术EMC，可通过连接到AHB总线来扩展CPU的存储容量。EMC接口包括选通、读/写使能、地址线、数据线和中断请求等信号。EMC接口通过划分地址线的不同区域，实现了对多个外部存储器的高效访问。然而，对于系统内核而言，每个GPIO资源都是宝贵的，EMC接口占用了大量GPIO资源，从而限制了CPU的接口数量。发明内容本发明目的是提供一种基于FPGA的EMC接口扩展模块，旨在利用FPGA的可配置性和丰富的GPIO资源实现EMC接口的功能扩展，使得CPU可以通过对EMC的读/写实现多种接口的数据交互。本发明为实现上述目的，通过以下技术方案实现：一种基于FPGA的EMC接口扩展模块，包括EMC_slave模块、地址仲裁模块、中断产生模块、透明桥接通路模块、寄存器桥接通路模块和接口扩展模块；地址仲裁模块分别与EMC_slave模块、透明桥接通路模块、寄存器桥接通路模块、中断产生模块连接，所述接口扩展模块分别与寄存器桥接通路模块和中断产生模块连接。进一步的，寄存器桥接通路模块包括可写状态寄存器、写状态寄存器、写数据寄存器、读数据寄存器、读长度寄存器。进一步的，接口扩展模块包括网口模块、PCIe模块、串口模块、SPI模块和IIC模块。进一步的，透明桥接通路模块为外部存储扩展，用于将EMC_slave接口直接映射到EMC_master_1到EMC_master_m。一种基于FPGA的EMC接口扩展系统，包括如上述基于FPGA的EMC接口扩展模块、CPU、外部存储接口和扩展接口，CPU为主设备，基于FPGA的EMC接口扩展模块为从设备，透明桥接通路模块与外部存储接口连接，接口扩展模块与扩展接口连接。一种基于FPGA的EMC接口扩展方法，基于上述基于FPGA的EMC接口扩展模块实现，包括步骤：CPU作为主设备，主动向不同的地址写入数据，地址仲裁模块对地址进行解析，并将CPU下发的数据送往不同的数据通路；对地址进行解析的方法为：根据EMC_slave接收到的地址数据来区分CPU要读或写的数据通路；CPU下发数据的方法为：CPU要操作外部存储时，透明桥接通路模块将EMC_slave接口直接映射到EMC_master_1到EMC_master_m中，传输过程中对数据不进行处理，透明桥接通路模块依靠地址仲裁来区分各个EMC_master接口；CPU要通过外部扩展接口进行通信时，寄存器桥接通路模块根据地址数据区分选通的寄存器和接口通道。进一步的，EMC_slave接收到的地址数据EMC_slave_addr包括通信类型选择位，通信类型选择位为外部存储时，地址数据EMC_slave_addr还包括存储地址位；通信类型选择位为外部扩展接口时，地址数据EMC_slave_addr还包括通道控制位、寄存器类型位和预留位。进一步的，EMC_slave_addr的bit0为通信类型选择位，EMC_slave_addr=1时，表示CPU要操作外部存储，后续地址EMC_slave_addr表示外部存储的地址；EMC_slave_addr=0时，表示CPU要通过外部扩展接口进行通信，此时EMC_slave_addr为寄存器类型位，EMC_slave_addr为通道选择位，其余地址位预留。进一步的，EMC_slave_addr=0时：EMC_slave_addr为寄存器类型位，当EMC_slave_addr=00时，表示选通状态寄存器，此时，EMC_slave_addr=000代表可写状态寄存器，EMC_slave_addr=001代表写状态寄存器，EMC_slave_addr=010代表中断寄存器，EMC_slave_addr=011代表网口读长度寄存器，EMC_slave_addr=100代表PCIe读长度寄存器，EMC_slave_addr=101代表串口读长度寄存器，EMC_slave_addr=110表示SPI读长度寄存器，EMC_slave_addr=111代表IIC读长度寄存器；当EMC_slave_addr=01时，表示选通写数据寄存器，此时，EMC_slave_addr=000代表网口写数据寄存器，EMC_slave_addr=001代表PCIe写数据寄存器，EMC_slave_addr=010代表串口写数据寄存器，EMC_slave_addr=011代表SPI写数据寄存器，EMC_slave_addr=100代表IIC写数据寄存器；当EMC_slave_addr=10时，表示选通读数据寄存器，此时，EMC_slave_addr=000代表网口读数据寄存器，EMC_slave_addr=001代表PCIe读数据寄存器，EMC_slave_addr=010代表串口读数据寄存器，EMC_slave_addr=011代表SPI读数据寄存器，EMC_slave_addr=100代表IIC读数据寄存器。本发明的优点在于：设计灵活，本发明的模块配置简单，同时实现多种功能，除了扩展出多组EMC接口外，还实现了网口、串口等多种接口；可反复编程，由于使用了现场可编程门阵列技术，该模块可以在不修改硬件的情况下重新配置其功能，提高了系统的可维护性和可靠性；高效CPU扩展，该模块通过FPGA扩展了很多接口，减轻了系统的计算压力，与CPU的连接实现高速的数据采集和处理功能，从而提高了系统的计算能力；提供丰富的GPIO资源，该模块具有大量的GPIO资源，可以用于实现各种输入输出控制功能，从而提高了系统的灵活性和可扩展性。附图说明图1为本发明实施例1基于FPGA的EMC接口扩展系统功能框图；图2为本发明实施例2EMC地址数据EMC_slave_addr示意图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述。实施例1本实施例公开了一种基于FPGA的EMC接口扩展模块及相应系统，主器件是CPU，即EMC_master，从器件是FPGA，即EMC_slave，核心为FPGA，FPGA通过EMC接口、中断gpio与CPU连接。请参照图1，基于FPGA的EMC接口扩展模块包括EMC_slave模块、地址仲裁模块、中断产生模块、透明桥接通路模块、寄存器桥接通路模块和接口扩展模块。地址仲裁模块分别与EMC_slave模块、透明桥接通路模块、寄存器桥接通路模块、中断产生模块连接，接口扩展模块分别与寄存器桥接通路模块和中断产生模块连接。寄存器桥接通路模块包括可写状态寄存器、写状态寄存器、5个写数据寄存器、5个读数据寄存器、5个读长度寄存器。接口扩展模块包括5个模块：网口模块、PCIe模块、串口模块、SPI模块和IIC模块，分别对应网口、PCIe、串口、SPI和IIC五个扩展接口。透明桥接通路模块为外部存储扩展，与m个外部存储接口EMC_master_1至EMC_master_m连接，用于将EMC_slave接口直接映射到EMC_master_1到EMC_master_m。基于FPGA的EMC接口扩展系统包括如上述基于FPGA的EMC接口扩展模块、CPU、外部存储接口和扩展接口，CPU为主设备，基于FPGA的EMC接口扩展模块为从设备，透明桥接通路模块与外部存储接口连接，接口扩展模块与扩展接口连接。本发明中，EMC地址线的位宽和EMC数据线的位宽数值由CPU的外接存储空间决定，并不局限于某种特定位宽的EMC接口，具有广泛的适用性。实施例2本实施例公开了一种基于FPGA的EMC接口扩展方法，基于上述基于FPGA的EMC接口扩展模块和系统实现，EMC是一种主从结构的接口，本实施例中，CPU是主设备，FPGA是从设备。CPU作为主设备可以主动向不同的地址写入数据，FPGA中的地址仲裁模块对地址进行解析并将CPU下发的数据送往不同的数据通路。若CPU要读取外部存储，CPU作为主设备可以主动读取相应的地址，FPGA中的地址仲裁模块将地址直接映射到对应的外部存储接口。若CPU要读取网口、PCIe、串口、SPI、IIC等扩展接口的数据，则需要在接收到FPGA发送的GPIO中断后再读取中断寄存器判断哪些接口的数据可以读取。对地址进行解析的方法为：根据EMC_slave接收到的地址数据来区分CPU要读或写的数据通路。CPU下发数据的方法为：CPU要操作外部存储时，透明桥接通路模块将EMC_slave接口直接映射到EMC_master_1到EMC_master_m中，传输过程中对数据不进行处理，透明桥接通路模块依靠地址仲裁来区分各个EMC_master接口；CPU要通过外部扩展接口进行通信时，寄存器桥接通路模块根据地址数据区分选通的寄存器和接口通道。请参照图2，EMC_slave接收到的地址数据EMC_slave_addr包括通信类型选择位，通信类型选择位为外部存储时，地址数据EMC_slave_addr还包括存储地址位；通信类型选择位为外部扩展接口时，地址数据EMC_slave_addr还包括通道控制位、寄存器类型位和预留位。EMC_slave_addr的bit0即EMC_slave_addr为通信类型选择位，EMC_slave_addr=1时，表示CPU要操作外部存储，后续地址bit1、bit2……bitn即EMC_slave_addr表示外部存储的地址；EMC_slave_addr=0时，表示CPU要通过外部扩展接口进行通信，此时bit1和bit2，即EMC_slave_addr为寄存器类型位，bit3、bit4和bit5即EMC_slave_addr为通道选择位，其余地址位bit n-6预留。EMC_slave_addr=0时：EMC_slave_addr为寄存器类型位，当EMC_slave_addr=00时，表示选通状态寄存器，此时，EMC_slave_addr=000代表可写状态寄存器，EMC_slave_addr=001代表写状态寄存器，EMC_slave_addr=010代表中断寄存器，EMC_slave_addr=011代表网口读长度寄存器，EMC_slave_addr=100代表PCIe读长度寄存器，EMC_slave_addr=101代表串口读长度寄存器，EMC_slave_addr=110表示SPI读长度寄存器，EMC_slave_addr=111代表IIC读长度寄存器；当EMC_slave_addr=01时，表示选通写数据寄存器，此时，EMC_slave_addr=000代表网口写数据寄存器，EMC_slave_addr=001代表PCIe写数据寄存器，EMC_slave_addr=010代表串口写数据寄存器，EMC_slave_addr=011代表SPI写数据寄存器，EMC_slave_addr=100代表IIC写数据寄存器；当EMC_slave_addr=10时，表示选通读数据寄存器，此时，EMC_slave_addr=000代表网口读数据寄存器，EMC_slave_addr=001代表PCIe读数据寄存器，EMC_slave_addr=010代表串口读数据寄存器，EMC_slave_addr=011代表SPI读数据寄存器，EMC_slave_addr=100代表IIC读数据寄存器。CPU读写数据分为透明桥接和寄存器桥接，本发明中的透明桥接通路模块指的是将FPGA中与CPU通信的EMC_slave接口直接映射到EMC_master_1到EMC_master_m中，FPGA在传输过程中对数据不进行处理。透明桥接通路模块依靠地址仲裁来区分各个EMC_master接口。最后应说明的是：以上所述仅为本发明的优选实施例而已，并不用于限制本发明，凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的保护范围之内。
