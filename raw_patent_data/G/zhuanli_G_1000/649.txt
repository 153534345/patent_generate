标题title
区块处理方法及装置、电子设备
摘要abst
本申请提供了一种区块处理方法及装置、电子设备，涉及区块链领域。该方法包括：在目标区块链的第N个时间区间启动时，基于当前市场交易信息，确定第N个时间区间对应的可验证延迟函数的安全参数，当前市场交易信息包括交易频次、交易周期、交易量和交易金额中的至少一种，安全参数包括区块延迟时间、出块难度系数和区块数量；获取在第N个时间区间内生成的目标区块，目标区块的生成速度由可验证延迟函数的计算速度确定，可验证延迟函数的计算速度由安全参数确定；对目标区块进行验证，若验证通过，则按照区块连接顺序，将目标区块添加到目标区块链上。本申请能够更好地调节目标区块的生成速度，并且，提高目标区块的生成质量。
权利要求书clms
1.一种区块处理方法，其特征在于，包括：在目标区块链的第N个时间区间启动时，基于当前市场交易信息，确定所述第N个时间区间对应的可验证延迟函数的安全参数，其中，所述当前市场交易信息包括交易频次、交易周期、交易量和交易金额中的至少一种，所述安全参数包括区块延迟时间、出块难度系数和所述第N个时间区间包含的区块数量；获取在所述第N个时间区间内生成的目标区块，其中，所述目标区块的生成速度由所述可验证延迟函数的计算速度确定，所述可验证延迟函数的计算速度基于所述安全参数确定；对所述目标区块进行有效性验证，若验证通过，则按照区块连接顺序，将所述目标区块添加到所述目标区块链上。2.根据权利要求1所述的区块处理方法，其特征在于，所述目标区块的生成方法包括：将指定数据输入所述可验证延迟函数，得到对应的输出结果和证明文件，其中，所述指定数据与所述目标区块链上的最新区块中的数据关联，所述最新区块表示所述目标区块添加到所述目标区块链后对应的前一相邻区块；基于所述指定数据、所述输出结果和所述证明文件，利用选定的哈希函数计算满足哈希挑战目标的随机数；在得到满足所述哈希挑战目标的随机数之后，生成所述目标区块。3.根据权利要求2所述的区块处理方法，其特征在于，所述哈希挑战目标包括：利用所述选定的哈希函数对所述指定数据、所述输出结果和所述证明文件、以及所述随机数进行计算得到的第一哈希值，与利用所述选定的哈希函数对所述输出结果进行计算得到的第二哈希值的前K位数相同。4.根据权利要求2所述的区块处理方法，其特征在于，所述指定数据包括所述最新区块对应的哈希值，所述最新区块对应的哈希值包括所述最新区块对应的区块头的哈希值。5.根据权利要求2所述的区块处理方法，其特征在于，所述基于所述指定数据、所述输出结果和所述证明文件，利用选定的哈希函数计算满足哈希挑战目标的随机数，包括：确定目标交易数据以及所述目标交易数据对应的哈希值；基于所述指定数据、所述输出结果和所述证明文件、所述目标交易数据以及所述目标交易数据对应的哈希值，利用所述选定的哈希函数计算满足所述哈希挑战目标的随机数；其中，所述目标交易数据对应的哈希值包括所述目标交易数据在所述选定的哈希函数下的根哈希值。6.根据权利要求2所述的区块处理方法，其特征在于，对所述目标区块进行有效性验证的方法包括下列各项中的至少一项：验证所述目标区块的结构的完整性；验证所述证明文件的正确性；验证满足所述哈希挑战目标的随机数的正确性。7.根据权利要求6所述的区块处理方法，其特征在于，所述验证所述证明文件的正确性，包括：在所述证明文件内，验证；其中，表示所述输出结果，/＞表示所述第N个时间区间对应的所述选定的哈希函数，/＞表示所述选定的哈希函数的输入数据，/＞表示所述第N个时间区间对应的所述区块延迟时间。8.根据权利要求1至7任一项所述的区块处理方法，其特征在于，在所述目标区块链的第0个时间区间启动时，所述方法还包括：确定由可信设置方生成的目标数值；将所述目标数值作为所述目标区块链中的初始区块的内容。9.一种区块处理装置，其特征在于，包括：确定模块，用于在目标区块链的第N个时间区间启动时，基于当前市场交易信息，确定所述第N个时间区间对应的可验证延迟函数的安全参数，其中，所述当前市场交易信息包括交易频次、交易周期、交易量和交易金额中的至少一种，所述安全参数包括区块延迟时间、出块难度系数和所述第N个时间区间包含的区块数量；获取模块，用于获取在所述第N个时间区间内生成的目标区块，其中，所述目标区块的生成速度由所述可验证延迟函数的计算速度确定，所述可验证延迟函数的计算速度基于所述安全参数确定；验证模块，用于对所述目标区块进行有效性验证，若验证通过，则按照区块连接顺序，将所述目标区块添加到所述目标区块链上。10.一种电子设备，其特征在于，包括：处理器；用于存储所述处理器可执行指令的存储器；所述处理器，用于执行上述权利要求1至8任一项所述的区块处理方法。
说明书desc
技术领域本申请涉及区块链技术领域，具体涉及一种区块处理方法及装置、电子设备。背景技术区块链交易往往具有低频次、交易周期长、交易量大、交易额高的特点，这类交易在短时间内产生的交易数据不会过多，因此，区块生成的速度也不必过高，否则，会有一部分区块将包含极少数的交易数据。因此，要保持区块链的高效运行，就需要确保新区块的生成速度与交易信息的生成速度相匹配，否则，可能会拉低区块的记录效率，造成区块链中存在大量的低质量区块或空块。发明内容有鉴于此，本申请实施例提供了一种区块处理方法及装置、电子设备。第一方面，本申请一实施例提供了一种区块处理方法，包括：在目标区块链的第N个时间区间启动时，基于当前市场交易信息，确定第N个时间区间对应的可验证延迟函数的安全参数，其中，当前市场交易信息包括交易频次、交易周期、交易量和交易金额中的至少一种，安全参数包括区块延迟时间、出块难度系数和第N个时间区间包含的区块数量；获取在第N个时间区间内生成的目标区块，其中，目标区块的生成速度由可验证延迟函数的计算速度确定，可验证延迟函数的计算速度基于安全参数确定；对目标区块进行有效性验证，若验证通过，则按照区块连接顺序，将目标区块添加到目标区块链上。结合第一方面，在第一方面的某些实现方式中，目标区块的生成方法包括：将指定数据输入可验证延迟函数，得到对应的输出结果和证明文件，其中，指定数据与目标区块链上的最新区块中的数据关联，最新区块表示目标区块添加到目标区块链后对应的前一相邻区块；基于指定数据、输出结果和证明文件，利用选定的哈希函数计算满足哈希挑战目标的随机数；在得到满足哈希挑战目标的随机数之后，生成目标区块。结合第一方面，在第一方面的某些实现方式中，哈希挑战目标包括：利用选定的哈希函数对指定数据、输出结果和证明文件、以及随机数进行计算得到的第一哈希值，与利用选定的哈希函数对输出结果进行计算得到的第二哈希值的前K位数相同。结合第一方面，在第一方面的某些实现方式中，指定数据包括最新区块对应的哈希值，最新区块对应的哈希值包括最新区块对应的区块头的哈希值。结合第一方面，在第一方面的某些实现方式中，基于指定数据、输出结果和证明文件，利用选定的哈希函数计算满足哈希挑战目标的随机数，包括：确定目标交易数据以及目标交易数据对应的哈希值；基于指定数据、输出结果和证明文件、目标交易数据以及目标交易数据对应的哈希值，利用选定的哈希函数计算满足哈希挑战目标的随机数。其中，目标交易数据对应的哈希值包括目标交易数据在选定的哈希函数下的根哈希值。结合第一方面，在第一方面的某些实现方式中，对目标区块进行有效性验证的方法包括下列各项中的至少一项：验证目标区块的结构的完整性；验证证明文件的正确性；验证满足哈希挑战目标的随机数的正确性。结合第一方面，在第一方面的某些实现方式中，验证证明文件的正确性，包括：在证明文件内，验证；其中，/＞表示输出结果，/＞表示第N个时间区间对应的选定的哈希函数，/＞表示选定的哈希函数的输入数据，/＞表示第N个时间区间对应的区块延迟时间。结合第一方面，在第一方面的某些实现方式中，在目标区块链的第0个时间区间启动时，该方法还包括：确定由可信设置方生成的目标数值；将目标数值作为目标区块链中的初始区块的内容。第二方面，本申请一实施例提供了一种区块生成装置，包括：确定模块，用于在目标区块链的第N个时间区间启动时，基于当前市场交易信息，确定第N个时间区间对应的可验证延迟函数的安全参数，其中，当前市场交易信息包括交易频次、交易周期、交易量和交易金额中的至少一种，安全参数包括区块延迟时间、出块难度系数和第N个时间区间包含的区块数量；获取模块，用于获取在第N个时间区间内生成的目标区块，其中，目标区块的生成速度由可验证延迟函数的计算速度确定，可验证延迟函数的计算速度基于安全参数确定；验证模块，用于对目标区块进行有效性验证，若验证通过，则按照区块连接顺序，将目标区块添加到目标区块链上。第三方面，本申请一实施例提供了一种计算机可读存储介质，该计算机可读存储介质存储有计算机程序，该计算机程序用于执行第一方面所述的区块处理方法。第四方面，本申请一实施例提供了一种电子设备，该电子设备包括：处理器；用于存储处理器可执行指令的存储器；该处理器用于执行第一方面所述的区块处理方法。在本申请中，可验证延迟函数的安全参数是基于市场交易信息确定的，也就是说，通过实时分析市场交易信息，可以动态地调整安全参数，进而优化目标区块链的性能以及增强目标区块链的安全性。举例来说，如果交易频次增加，则可以适应性调整区块延迟时间和第N个时间区间包含的区块数量，使得目标区块能够容纳更多的交易信息，同时，不会产生空块；如果发现恶意行为，还可以调整出块难度系数，进而提高目标区块链的抗攻击能力。简言之，通过确保市场交易信息的生成速度与目标区块的生成速度相匹配，可以避免出现空块或区块大小超出限制的问题，以提高目标区块链的稳定性和效率。此外，在获取目标区块后，对目标区块进行有效性验证，可以确保添加到目标区块链中的数据是真实且合法的、以及确保数据的完整性和一致性，防止恶意行为对目标区块链的篡改，保证目标区块链的正常运行和可靠性。并且，还可以确保目标区块符合预设的规则和条件，从而提高目标区块链的整体安全性。附图说明通过结合附图对本申请实施例进行更详细的描述，本申请的上述以及其他目的、特征和优势将变得更加明显。附图用来提供对本申请实施例的进一步理解，并且构成说明书的一部分，与本申请实施例一起用于解释本申请，并不构成对本申请的限制。在附图中，相同的参考标号通常代表相同部件或步骤。图1所示为本申请一实施例提供的区块处理方法的流程示意图。图2所示为本申请一实施例提供的目标区块生成方法的流程示意图。图3所示为本申请一实施例提供的对目标区块进行有效性验证的流程示意图。图4所示为本申请另一实施例提供的区块处理方法的流程示意图。图5所示为本申请一实施例提供的区块处理装置的结构示意图。图6所示为本申请一实施例提供的电子设备的结构示意图。具体实施方式下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。区块链是一个分布式账本，通过多个节点的共识机制来确保数据的安全性和完整性，每个节点都有机会创建新的区块并添加到区块链中。为了确保数据的安全，区块链设计了一套复杂的算法来控制新区块的生成和验证。在许多区块链系统中，新区块的生成通常与一定数量的交易信息相关联。这意味着，为了创建一个新区块，节点需要收集一定数量的交易信息。如果交易信息的生成速度较慢，而新区块的生成速度保持不变，那么可能会出现空块，即新区块中没有包含足够的交易信息。空块的出现意味着交易信息没有被有效地记录在区块链中，这会降低区块链的记录效率。此外，空块的出现还可能给恶意行为者提供机会，通过制造大量的空块来干扰区块链的正常运作。相反，如果交易信息的生成速度远高于新区块的生成速度，那么可能会导致大量的交易信息等待被记录，这会增加系统的负担。综上，为了确保区块链的性能和安全性，需要仔细平衡新区块的生成速度和交易信息的处理速度，并相应地调整新区块的生成时间，以优化区块链的性能并提高其可靠性。图1所示为本申请一实施例提供的区块处理方法的流程示意图。示例性地，图1所示实施例应用于区块链节点。如图1所示，本实施例提供的区块处理方法包括如下步骤。步骤S110，在目标区块链的第N个时间区间启动时，基于当前市场交易信息，确定第N个时间区间对应的可验证延迟函数的安全参数。本实施例中的当前市场交易信息包括交易频次、交易周期、交易量和交易金额中的至少一种。本实施例中的可验证延迟函数可以将一个输入值映射到一个输出值，并且执行这个映射的时间是非常耗时的，但是验证这个输出值是否正确的时间却非常短。可验证延迟函数的安全参数包括区块延迟时间、出块难度系数和第N个时间区间包含的区块数量。进一步地，区块延迟时间指的是出块节点需要等待多长时间才能将新生成的目标区块添加到目标区块链上，区块延迟时间可根据市场交易信息来确定，也可以将市场交易信息和出块节点的计算能力结合来确定。出块难度系数指的是出块节点需要满足的工作量证明难度，这个参数通常用于调整目标区块链的出块速度。具体地，出块速度是指区块链网络中新生成的目标区块的时间间隔，其中，出块难度系数越高，出块节点需要进行的计算量就越大，意味着生成目标区块所需满足的条件越严格，从而使得出块速度降低。因此，这个参数有助于维护目标区块链的稳定性和安全性。第N个时间区间包含的区块数量指的是目标区块链上的epoch划分，它是一个时间单位，用于衡量时间和区块的关系。在以太坊2.0中，一个epoch包含32个slots，每个epoch的时间大约为6.4分钟，在每个epoch之后，相应的区块可以被认为是固化了的。在Solana中，epoch是一个时间段，通常为一天，用于确定哪些验证者有资格参与下一个epoch的验证。示例性地，每个epoch包含20个区块，也即，当第N个epoch的区块数达到20时，就会进入第N+1个epoch。在目标区块链中，通过将整个网络分为若干个epoch来进行区块延长，一方面提高了区块链网络的安全性和可扩展性，另一方面降低了区块链网络的负担。具体而言，在每个epoch结束时，验证者可提交一个epoch转换交易，以便在下一个epoch开始时更新验证者集合，进而确定验证者集合的更新是有序的，提高区块链网络的安全性，同时验证者只需关注当前epoch的验证工作，而不需要关注整个区块链的验证工作，进而提高了区块链网络的可扩展性。其次，验证者只需验证当前epoch的交易，而不需要验证整个目标区块链上的交易，从而降低了区块链网络的负担。步骤S120，获取在第N个时间区间内生成的目标区块。目标区块的生成速度由可验证延迟函数的计算速度确定，可验证延迟函数的计算速度基于安全参数确定。示例性地，选择一个种子数据，并将其作为输入传递给可验证延迟函数。可验证延迟函数会对种子数据进行大量的计算，这个计算过程非常耗时，但是计算结果可以很容易地被验证。也就是说，可验证延迟函数需要一定的时间才能计算出结果，这个时间由安全参数决定。因此，可验证延迟函数的计算速度越快，目标区块的生成速度越快。例如，当区块延迟时间增大时，可验证延迟函数的计算速度变慢，目标区块的生成速度也会延缓，此时，目标区块包含的交易信息将会增加。相比于前一个或者多个时间区间，当第N个时间区间包含的区块数量变大时，这表示epoch推进的速度变慢，适用于交易频率平稳、市场变动较少的情况，此时，目标区块链无需频繁通过更新安全参数来适配市场交易；相应地，当第N个时间区间包含的区块数量变小时，表示一定时间内市场波动大，交易频率不稳定，此时，可适当降低第N个时间包含的区块数量，以便更好地维护目标区块链的运转。当出块难度系数增大时，计算哈希挑战的速度变慢，目标区块生成的速度也相应延缓，这能够更好地拉平算力优势。步骤S130，对目标区块进行有效性验证，若验证通过，则按照区块连接顺序，将目标区块添加到目标区块链上。示例性地，对目标区块进行有效性验证的方法包括：重新计算目标区块的哈希值，并与接收到的目标区块的哈希值进行比对，确定二者是否一致；或者，验证目标区块的工作量证明是否满足难度目标；或者，验证目标区块的时间戳是否合理，也即，目标区块的时间戳不能超过当前时间，并且，不能比目标区块链上的最新区块的时间戳早；或者，验证目标区块中的交易是否合法；或者，检查目标区块的高度是否正确，即比目标区块链上的最新区块的高度大于1。在本申请中，可验证延迟函数的安全参数是基于市场交易信息确定的，也就是说，通过实时分析市场交易信息，可以动态地调整安全参数，进而优化目标区块链的性能以及增强目标区块链的安全性。举例来说，如果交易频次增加，则可以适应性调整区块延迟时间和第N个时间区间包含的区块数量，使得目标区块能够容纳更多的交易信息，同时，不会产生空块；如果发现恶意行为，还可以调整出块难度系数，进而提高目标区块链的抗攻击能力。简言之，通过确保市场交易信息的生成速度与目标区块的生成速度相匹配，可以避免出现空块或区块大小超出限制的问题，以提高目标区块链的稳定性和效率。此外，在获取目标区块后，对目标区块进行有效性验证，可以确保添加到目标区块链中的数据是真实且合法的、以及确保数据的完整性和一致性，防止恶意行为对目标区块链的篡改，保证目标区块链的正常运行和可靠性。除此之外，还可以确保目标区块符合预设的规则和条件，从而提高目标区块链的整体安全性。图2所示为本申请一实施例提供的目标区块生成方法的流程示意图。在图1所示实施例的基础上延伸出图2所示实施例，下面着重叙述图2所示实施例与图1所示实施例的不同之处，相同之处不再赘述。如图2所示，在本实施例中，目标区块的生成方法包括如下步骤。步骤S210，将指定数据输入可验证延迟函数，得到对应的输出结果和证明文件。指定数据与目标区块链上的最新区块中的数据关联，最新区块表示目标区块添加到目标区块链后对应的前一相邻区块。例如，可以通过查询目标区块链的长度或者获取最新区块的信息，得到最新区块的高度。根据最新区块的高度，可以在目标区块链中找到对应的最新区块。在一个示例中，指定数据可以是交易信息、最新区块的区块元数据、时间戳等，这些数据可用于验证目标区块的有效性和完整性。在另一个示例中，指定数据可以是最新区块的哈希值。在一种实现方式中，最新区块对应的哈希值包括该区块的父区块的哈希值、难度、时间戳、随机数和merkle树根等数据。其中，父区块的哈希值用于连接该最新区块与最新区块对应的前一相邻区块，难度、时间戳、随机数与区块生成方式相关，merkle树根是一种用来有效地总结最新区块中所有交易的数据结构。在另一种实现方式中，最新区块的哈希值包括最新区块的区块头的哈希值。区块头的哈希值是通过区块头数据计算得到的，区块头数据具有一些特殊属性，包括但不限于最新区块对应的前一个相邻区块的哈希值、时间戳、交易数量等。这些数据有助于验证和确认最新区块的真实性和完整性，也为下一个目标区块提供了链式结构的基础和共识机制的条件。同时，目标区块链能够保持连续性和可信度，确保交易记录的真实性和不可篡改性。通过输入指定数据，可验证延迟函数会根据预定义的算法和规则进行计算，并生成对应的输出结果。该输出结果可以用来证明特定操作或计算所需时间的证明。这种证明可以被验证并确定其真实性，使得第三方可以确信操作是在规定时间内完成的。例如，本实施例中的可验证延迟函数的输出结果是一个数字签名，它包含了操作完成的时间戳以及其他相关信息。这个数字签名可以证明某个操作是在特定的时间段内完成的，并且该时间段是可以预测和验证的。此外，本实施例中的证明文件是用于证明输出结果的真实性的附加文件。证明文件通常包含了操作完成的时间戳、操作的具体内容以及其他相关信息。对于第三方来说，可以使用这个证明文件来验证计算结果是否正确，而无需重新计算可验证延迟函数。如此，可以大大减少验证的工作量，提高效率。步骤S220，基于指定数据、输出结果和证明文件，利用选定的哈希函数计算满足哈希挑战目标的随机数。在一个示例中，将指定数据、输出结果和证明文件以及候选值按照指定的顺序连接起来形成一个字符串。将上一步中得到的字符串作为输入，使用选定的哈希函数进行哈希计算。将哈希计算得到的结果与目标哈希值进行比较，如果小于目标哈希值，则表示计算成功，否则需要重新计算。如果计算成功，则该候选值就是满足哈希挑战目标的随机数。基于上述，本示例中的哈希挑战目标是对字符串进行哈希计算得到的结果小于目标哈希值。在另一个示例中，哈希挑战目标是，利用选定的哈希函数对指定数据、输出结果和证明文件、以及随机数进行计算得到的第一哈希值，与利用选定的哈希函数对输出结果进行计算得到的第二哈希值的前K位数相同。可以理解的是，K的大小可以根据市场交易情况来确定。例如，若市场交易量大，相应地，目标区块的生成速度要加快，因此，K的值可适当取小，进而降低哈希挑战的难度。哈希函数的特点是，如果输入数据有任何微小变化，其输出的哈希值都会发生巨大的变化。因此，通过对比两个哈希值的前K位数，可以确保数据的完整性、一致性和安全性。本实施例只比较哈希值的前K位数，而不是整个哈希值，这可以大大简化验证过程，提高效率。需要说明的是，哈希挑战目标还可以根据整个区块链网络的算力来动态调整的。如果整个区块链网络的算力很高，那么哈希挑战目标的难度可以增加，使得目标区块的生成难度增加。如果整个区块链网络的算力很低，那么哈希挑战目标的难度会减少，使得生成目标区块的难度降低。在又一个示例中，基于指定数据、输出结果和所述证明文件，利用选定的哈希函数计算满足哈希挑战目标的随机数，还包括：确定目标交易数据以及目标交易数据对应的哈希值；基于指定数据、输出结果和证明文件、目标交易数据以及目标交易数据对应的哈希值，利用选定的哈希函数计算满足哈希挑战目标的随机数。示例性地，可以通过下述方式中的任一种来获取目标交易数据。第一，通过节点同步；区块链节点会将新的交易广播给整个网络，因此，可以通过监听网络消息来获取这些交易数据。第二，交易池；交易池是一个存储待确认交易的内存池，当用户发起交易时，交易会被放入交易池中，等待出块节点打包确认。在确定目标交易数据后，可以将目标交易数据按照一定的规则进行排列组合，然后对排列组合后的数据进行哈希运算，得到一个哈希值。如果这个哈希值满足一定的条件，就可以作为目标区块的哈希值，被写入目标区块中。示例性地，该条件为哈希值的前W位必须为0。由于哈希函数是不可逆的，所以只有通过不断尝试不同的排列组合方式，才能找到符合条件的哈希值。在一种实现方式中，目标交易数据对应的哈希值包括目标交易数据在指定的哈希函数下的根哈希值。具体地，根哈希值是目标交易数据经过指定的哈希函数处理后的结果，与其他区块的哈希值进行比较，根哈希值可用于标识目标区块，使得目标区块具有唯一性。其次，根哈希值代表了目标交易数据的完整性，如果目标交易数据被篡改，根哈希值也会随之改变，因此，通过比较根哈希值，可以验证目标交易数据的正确性和完整性。最后，如果有人试图篡改区块数据，他们的篡改行为将会改变根哈希值，导致与其他区块的哈希值不匹配，这可以被区块链网络中的其他节点检测到，并采取相应的措施，因此，根哈希值可以防止恶意用户篡改区块数据。在前述示例的基础上，本示例在计算满足哈希挑战目标的随机数时，引入了目标交易数据以及目标交易数据的哈希值，一方面，通过其哈希值，可以确保目标交易数据的完整性和真实性。另一方面，通过将目标交易数据及其对应的哈希值输入选定的哈希函数，可以确保目标区块正确地链接到前一个区块，形成一个完整的区块链。步骤S230，在得到满足哈希挑战目标的随机数之后，生成目标区块。示例性地，目标区块包括指定数据、目标交易数据对应的哈希值、可验证延迟函数的输出结果和证明文件、以及随机数。此外，目标区块还包括区块高度、时间戳等区块信息。在本实施例中，将指定数据作为可验证延迟函数的输入，输出结果将与最新区块相关联，形成一个链式结构，确保了区块之间的连接性。并且，可以防止恶意节点通过并行计算加速生成区块，从而保证了目标区块链的安全性。由于可验证延迟函数的计算过程是非常耗时的，因此，也可以有效地防止恶意节点在短时间内篡改目标区块链的数据，保证目标区块链的不可篡改性。具体地，恶意节点若想修改一个区块的数据，则需要重新计算这个区块以及后续区块，这需要消耗大量的计算资源，因此，通过本实施例中的哈希挑战目标的机制，可以防止恶意节点篡改目标区块链的历史记录，提高了目标区块链的抗攻击能力，进一步保证了区块链网络的安全性和可靠性。图3所示为本申请一实施例提供的对目标区块进行有效性验证的流程示意图。在图2所示实施例的基础上延伸出图3所示实施例，下面着重叙述图3所示实施例与图2所示实施例的不同之处，相同之处不再赘述。如图3所示，在本实施例中，对目标区块进行有效性验证的方法包括下列各步骤中的至少一个步骤。步骤S310，验证目标区块的结构的完整性。示例性地，目标区块的结构包括以下信息：时间戳，表示目标区块被创建的时间；目标区块的哈希值，表示目标区块对应的前一相邻区块的哈希值，用于验证数据的完整性和安全性；交易信息，包括借贷、购买等交易信息；难度证明，用于证明创建该目标区块的难度，以确保目标区块链的安全性；头部信息，包括交易清单、前一相邻区块的链接等信息；目标区块序列号，表示在目标区块链上的排名；网络参数，指区块链网络相关的参数，例如交易地址和新的地址生成规则等；链ID，表示链的身份标识，方便实现快速路由等。此外，目标区块的信息都会按照特定的格式和结构进行编排，包括区块头和交易列表等部分，且整个目标区块会被编码成字节串以方便存储和传输。基于上述对目标区块的结构的举例说明，验证区块的结构完整性通常包括：检查时间戳，也即时间戳应该与区块链网络上的时间同步，并处于有效范围内；验证目标区块的哈希值，也即前一相邻区块的哈希值应该是唯一的，且目标区块的哈希值应该是当前网络上已有的已知值，确保数据完整；解析目标区块的头部信息，也即查看目标区块的区块头的所有字段是否正确，比如检查交易清单是否包含预期的交易信息，链接是否指向有效的区块等；验证难度证明，指难度证明的结果应该符合预期，这可以证明目标区块的出块节点确实花费了足够的时间和计算能力来创建该目标区块；验证链ID，也即链ID应该与预期一致，并且与其他区块的链ID相匹配。步骤S320，验证证明文件的正确性。在一个示例中，获取该证明文件，以及相应的输入数据和安全参数。使用相同的安全参数作为可验证延迟函数的输入，通过执行可验证延迟函数来计算输出，将计算得到的输出与证明文件中的输出进行比较，如果两者相等，则证明文件的正确性得到了验证，但是，这种证明文件的验证会耗费较长的时间。优选地，在另一示例中，验证证明文件的正确性，包括：在证明文件内，验证；其中，/＞表示输出结果，/＞表示第N个时间区间对应的选定的哈希函数，/＞表示选定的哈希函数的输入数据，/＞表示第N个时间区间对应的区块延迟时间。这种方法降低了验证的难度，缩短了验证时间。步骤S330，验证满足哈希挑战目标的随机数的正确性。示例性地，获取目标区块的区块头信息，包括版本号、前一相邻区块的哈希值、Merkle根、时间戳、难度目标和随机数等信息。将区块头信息进行哈希运算，得到哈希值。将得到的哈希值与难度目标进行比较，如果满足难度目标，则说明随机数的正确性得到验证。需要注意的是，在进行验证时，需要确保使用的工具和服务是可信的，以避免受到恶意攻击或误判。同时，为了确保验证的准确性和可靠性，可以多次进行验证并使用不同的验证方法和工具进行交叉验证。此外，在一个示例中，在计算满足哈希挑战目标的随机数时，若利用了目标交易数据以及目标交易数据对应的哈希值，并且，出块节点对目标交易数据进行了电子签名，那么，还可以通过验证目标交易数据的电子签名的有效性以及验证目标交易数据对应的哈希值的正确性，来对目标区块进行有效性验证。示例性地，可以从下述几个方面对目标交易数据的电子签名的有效性进行验证。第一，验证数字证书的真实性；数字证书是由CA颁发的，因此需要验证数字证书的真实性，以确保出块节点的身份是真实的。第二，验证数字证书的有效性；数字证书有有效期限，需要验证数字证书是否在有效期内，以确保出块节点的数字证书是有效的。第三，验证签名数据的完整性；签名数据需要与原始数据进行比对，以确保原始数据没有被篡改或修改。第四，验证签名数据的不可抵赖性；签名数据需要与出块节点进行比对，以确保出块节点无法否认签名数据。在一个示例中，在对目标交易数据的哈希值进行验证时，首先获取目标交易数据和前述指定的哈希函数，再利用指定的哈希函数对获取的目标交易数据进行哈希计算，得到目标交易数据对应的新的哈希值。将获取的前述实施的目标交易数据的哈希值，与本步骤中新生成的目标交易数据的哈希值进行比对，确认二者是否一致，具体地，可以使用哈希值比较工具或手动比对的方式进行验证。需要注意的是，在进行验证时，需要确保使用的工具和服务是可信的，以避免受到恶意攻击或误判。同时，为了确保验证的准确性和可靠性，可以多次进行验证并使用不同的验证方法和工具进行交叉验证。在本实施例中，从上述几个方面对目标区块的有效性进行验证，可以确保目标区块链的数据是可信的、不可篡改的。只有通过验证的目标区块才能被添加到目标区块链中，从而保证了整个目标区块链的安全性和一致性，并且验证过程可以防止恶意节点篡改目标区块链的数据。图4所示为本申请另一实施例提供的区块处理方法的流程示意图。在图1所示实施例的基础上延伸出图4所示实施例，下面着重叙述图4所示实施例与图1所示实施例的不同之处，相同之处不再赘述。如图4所示，在本实施例中，在目标区块链的第0个时间区间启动时，区块处理方法还包括如下步骤。步骤S410，确定由可信设置方生成的目标数值。区块链中的可信设置指的是那些在区块链网络中负责维护和验证区块链数据的一组参与者。这些设置方通常是一些权威的、可信任的组织或者个人，他们通过使用先进的密码学技术和去中心化的共识机制来确保区块链数据的真实性和不可篡改性。示例性地，可以基于目标区块链的随机数生成器生成目标数值，也可以基于智能合约的随机数生成器来生成目标数值，这两种方案都可以在区块链中生成可信的随机数，将可信的随机数作为目标数值。需要注意的是，由于目标区块链的公开性和透明性，目标数值的生成过程可能会被攻击者进行分析和预测。因此，在设计和使用目标区块链中的目标数值生成方案时，需要综合考虑安全性和可信度。步骤S420，将目标数值作为目标区块链中的初始区块的内容。在本实施例中，将目标数值作为初始区块的内容，具体有以下效果。第一，确保初始区块的唯一性；区块链是一个分布式账本，每个区块都包含了一定数量的交易记录。为了确保区块链的唯一性，需要为每个区块生成一个独特的标识符，在这种情况下，使用目标数值作为初始区块的内容是一种简单有效的方法，因为它能够保证每个区块都是独一无二的。第二，增加安全性；通过目标数值，可以增加交易数据的保密性，防止攻击者通过分析交易数据来确定下一个区块的生成者，进而提高区块链系统的安全性。此外，目标数值还用于生成公钥和私钥等加密密钥，这些密钥用于保护区块链网络中的交易和数据。第三，增加区块链的完整性；通过使用目标数值来创建新的区块，可以避免重复或无效的交易记录被添加到目标区块链中，有助于保持目标区块链的稳定性和可靠性，以及目标区块链的完整性。第四，简化验证过程；将目标数值作为初始区块的内容，出块节点只需根据该目标数值来确认交易数据的有效性，无需进一步识别交易的具体内容，可以简化验证过程。第五，提高交易效率；使用目标数值作为初始区块的标识符，可以减少出块节点验证交易数据的时间和精力。这样可以提高整个区块链网络的交易处理效率。上文结合图1至图4，详细描述了本申请的区块处理方法实施例，下面结合图5，详细描述本申请的区块处理装置实施例。应理解，区块处理方法实施例的描述与区块处理装置实施例的描述相互对应，因此，未详细描述的部分可以参见前面方法实施例。图5所示为本申请一示例性实施例提供的区块处理装置的结构示意图。如图5所示，本申请实施例提供的区块处理装置50包括：确定模块510，用于在目标区块链的第N个时间区间启动时，基于当前市场交易信息，确定第N个时间区间对应的可验证延迟函数的安全参数，其中，当前市场交易信息包括交易频次、交易周期、交易量和交易金额中的至少一种，安全参数包括区块延迟时间、出块难度系数和第N个时间区间包含的区块数量；获取模块520，用于获取在第N个时间区间内生成的目标区块，其中，目标区块的生成速度由可验证延迟函数的计算速度确定，可验证延迟函数的计算速度基于安全参数确定；验证模块530，用于对目标区块进行有效性验证，若验证通过，则按照区块连接顺序，将目标区块添加到目标区块链上。在本申请一实施例中，目标区块的生成方法包括：将指定数据输入可验证延迟函数，得到对应的输出结果和证明文件，其中，指定数据与目标区块链上的最新区块中的数据关联，最新区块表示目标区块添加到目标区块链后对应的前一相邻区块；基于指定数据、输出结果和证明文件，利用选定的哈希函数计算满足哈希挑战目标的随机数；在得到满足哈希挑战目标的随机数之后，生成目标区块。在本申请一实施例中，哈希挑战目标包括：利用选定的哈希函数对指定数据、输出结果和证明文件、以及随机数进行计算得到的第一哈希值，与利用选定的哈希函数对输出结果进行计算得到的第二哈希值的前K位数相同。在本申请一实施例中，指定数据包括最新区块对应的哈希值，其中，最新区块对应的哈希值包括最新区块对应的区块头的哈希值。在本申请一实施例中，基于指定数据、输出结果和证明文件，利用选定的哈希函数计算满足哈希挑战目标的随机数，包括：确定目标交易数据以及目标交易数据对应的哈希值；基于指定数据、输出结果和证明文件、目标交易数据以及目标交易数据对应的哈希值，利用选定的哈希函数计算满足哈希挑战目标的随机数；其中，目标交易数据对应的哈希值包括目标交易数据在选定的哈希函数下的根哈希值。在本申请一实施例中，验证模块530还用于，验证目标区块的结构的完整性；验证证明文件的正确性；验证满足哈希挑战目标的随机数的正确性。在本申请一实施例中，验证模块530还用于，在证明文件内，验证；其中，/＞表示输出结果，/＞表示第N个时间区间对应的选定的哈希函数，/＞表示选定的哈希函数的输入数据，/＞表示第N个时间区间对应的区块延迟时间。在本申请一实施例中，在本申请一实施例中，确定模块510还用于，确定由可信设置方生成的目标数值；将目标数值作为目标区块链中的初始区块的内容。下面，参考图6来描述根据本申请实施例的电子设备。图6所示为本申请一示例性实施例提供的电子设备的结构示意图。如图6所示，电子设备60包括一个或多个处理器601和存储器602。处理器601可以是中央处理单元或者具有数据处理能力和/或指令执行能力的其他形式的处理单元，并且可以控制电子设备60中的其他组件以执行期望的功能。存储器602可以包括一个或多个计算机程序产品，所述计算机程序产品可以包括各种形式的计算机可读存储介质，例如易失性存储器和/或非易失性存储器。所述易失性存储器例如可以包括随机存取存储器和/或高速缓冲存储器等。所述非易失性存储器例如可以包括只读存储器、硬盘、闪存等。在所述计算机可读存储介质上可以存储一个或多个计算机程序指令，处理器601可以运行所述程序指令，以实现上文所述的本申请的各个实施例的区块处理方法以及/或者其他期望的功能。在所述计算机可读存储介质中还可以存储诸如包括交易频次、交易周期、交易量、交易金额、区块延迟时间、出块难度系数、可验证延迟函数等各种内容。在一个示例中，电子设备60还可以包括：输入装置603和输出装置604，这些组件通过总线系统和/或其他形式的连接机构互连。该输入装置603可以包括例如键盘、鼠标等等。该输出装置604可以向外部输出各种信息，包括交易频次、交易周期、交易量、交易金额、区块延迟时间、出块难度系数、可验证延迟函数等。该输出装置604可以包括例如显示器、扬声器、打印机、以及通信网络及其所连接的远程输出设备等等。当然，为了简化，图6中仅示出了该电子设备60中与本申请有关的组件中的一些，省略了诸如总线、输入/输出接口等等的组件。除此之外，根据具体应用情况，电子设备60还可以包括任何其他适当的组件。除了上述方法和设备以外，本申请的实施例还可以是计算机程序产品，其包括计算机程序指令，所述计算机程序指令在被处理器运行时使得所述处理器执行本说明书上述描述的根据本申请各种实施例的区块处理方法中的步骤。所述计算机程序产品可以以一种或多种程序设计语言的任意组合来编写用于执行本申请实施例操作的程序代码，所述程序设计语言包括面向对象的程序设计语言，诸如Java、C++等，还包括常规的过程式程序设计语言，诸如“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算设备上执行、部分地在用户设备上执行、作为一个独立的软件包执行、部分在用户计算设备上部分在远程计算设备上执行、或者完全在远程计算设备或服务器上执行。此外，本申请的实施例还可以是计算机可读存储介质，其上存储有计算机程序指令，所述计算机程序指令在被处理器运行时使得所述处理器执行本说明书上述描述的根据本申请各种实施例的区块处理方法中的步骤。所述计算机可读存储介质可以采用一个或多个可读介质的任意组合。可读介质可以是可读信号介质或者可读存储介质。可读存储介质例如可以包括但不限于电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。可读存储介质的更具体的例子包括：具有一个或多个导线的电连接、便携式盘、硬盘、随机存取存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。以上结合具体实施例描述了本申请的基本原理，但是，需要指出的是，在本申请中提及的优点、优势、效果等仅是示例而非限制，不能认为这些优点、优势、效果等是本申请的各个实施例必须具备的。另外，上述公开的具体细节仅是为了示例的作用和便于理解的作用，而非限制，上述细节并不限制本申请为必须采用上述具体的细节来实现。本申请中涉及的器件、装置、设备、系统的方框图仅作为例示性的例子并且不意图要求或暗示必须按照方框图示出的方式进行连接、布置、配置。如本领域技术人员将认识到的，可以按任意方式连接、布置、配置这些器件、装置、设备、系统。诸如“包括”、“包含”、“具有”等等的词语是开放性词汇，指“包括但不限于”，且可与其互换使用。这里所使用的词汇“或”和“和”指词汇“和/或”，且可与其互换使用，除非上下文明确指示不是如此。这里所使用的词汇“诸如”指词组“诸如但不限于”，且可与其互换使用。还需要指出的是，在本申请的装置、设备和方法中，各部件或各步骤是可以分解和/或重新组合的。这些分解和/或重新组合应视为本申请的等效方案。提供所公开的方面的以上描述以使本领域的任何技术人员能够做出或者使用本申请。对这些方面的各种修改对于本领域技术人员而言是非常显而易见的，并且在此定义的一般原理可以应用于其他方面而不脱离本申请的范围。因此，本申请不意图被限制到在此示出的方面，而是按照与在此公开的原理和新颖的特征一致的最宽范围。为了例示和描述的目的已经给出了以上描述。此外，此描述不意图将本申请的实施例限制到在此公开的形式。尽管以上已经讨论了多个示例方面和实施例，但是本领域技术人员将认识到其某些变型、修改、改变、添加和子组合。
