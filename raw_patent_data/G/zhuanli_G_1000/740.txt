标题title
一种KVM虚拟机WEB终端的实现方法和装置
摘要abst
本发明提供了一种KVM虚拟机WEB终端的实现方法和装置，所述方法包括：在宿主机上创建至少一个配置有虚拟串口设备的KVM虚拟机，并在云平台管控上配置WEB终端模块，通过配置于宿主机上的套接口设备和串口网关模块，以及配置于云平台网关上的WEB服务端模块，基于三方映射关系将所述KVM虚拟机在WEB终端模块进行注册；通过WEB终端模块创建虚拟终端窗口，通过WEB服务端模块进行数据指令的转换和传输，完成WEB终端模块和KVM虚拟机串口设备的命令交互。本发明的方法和装置，使得运维工程师可以很方便的登录到虚拟机，并像在本地操作物理主机一样管理虚拟机。
权利要求书clms
1.一种KVM虚拟机WEB终端的实现方法，其特征在于，包括：S1、在宿主机上创建至少一个配置有虚拟串口设备的KVM虚拟机，并在云平台管控上配置WEB终端模块，通过配置于宿主机上的套接口设备和串口网关模块，以及配置于云平台网关上的WEB服务端模块，基于三方映射关系将所述KVM虚拟机在WEB终端模块进行注册；S2、通过WEB终端模块创建虚拟终端窗口，并于所述虚拟终端窗口被激活或锁定时监听系统键鼠消息，基于监听的键鼠消息在虚拟终端窗口中显示输入的文本信息，并基于预设键鼠触发消息调用对应的API接口形成控制指令结合虚拟机序列号作为请求数据发送给WEB服务端模块；S3、WEB服务端模块接收并解析请求数据，获取虚拟机序列号和控制指令内容，将控制指令内容转换为串口协议指令，并基于所述三方映射关系发送给对应虚拟机的虚拟串口设备，完成串口指令的执行；S4、WEB服务端模块基于WEB终端模块的查询请求查询对应宿主机的串口网关模块，获取虚拟串口设备返回的串口数据，将串口数据转换成WEB终端可以显示的文本数据，并将虚拟机序列号和文本数据打包成HTTP协议发送给WEB终端模块；S5、WEB终端模块接收WEB服务端模块返回的数据，将接收到的数据更新到虚拟终端窗口，并刷新界面显示，完成WEB终端模块和KVM虚拟机串口设备的命令交互。2.如权利要求1所述的KVM虚拟机WEB终端的实现方法，其特征在于，步骤S1具体包括：S11、在宿主机上创建配置有虚拟串口设备的KVM虚拟机，KVM虚拟机启动完成后创建套接口设备，所述套接口设备连接所述虚拟串口设备；S12、通过部署于宿主机上的串口网关模块扫描连接所述套接口设备，建立并维护更新虚拟串口设备映射表，所述虚拟串口设备映射表记录所述虚拟串口设备和套接口设备的映射关系；S13、串口网关模块定时扫描所述虚拟串口设备映射表，并将虚拟机序列号和当前宿主机的管理IP地址发送给云平台网关的WEB服务端模块；S14、WEB服务端模块接收到虚拟机序列号和宿主机的管理IP地址后，建立并维护更新虚拟机宿主机映射表，所述虚拟机宿主机映射表记录KVM虚拟机和宿主机的对应关系；S15、WEB服务端模块响应配置于云平台管控上的WEB终端模块的查询请求，基于所述虚拟机宿主机映射表生成全量虚拟机终端信息并返回给所述WEB终端模块，WEB终端模块基于返回的信息对所述KVM虚拟机进行注册。3.如权利要求2所述的KVM虚拟机WEB终端的实现方法，其特征在于，步骤S2中，基于监听的键鼠消息在虚拟终端窗口中显示输入的文本信息，并基于预设键鼠触发消息调用对应的API接口形成控制指令结合虚拟机序列号作为请求数据发送给WEB服务端模块具体包括：当检测到键盘输入键为文本，即0~9，a~z或A~Z时，虚拟终端窗口将文本信息显示到窗口中；当检测到预设键鼠触发消息时，WEB终端模块获取当前窗口输入的文本信息，并根据预设键鼠触发消息调用对应的API接口形成控制指令，所述预设键鼠触发消息包括光标向上、光标向下、Tab键、Ctrl+C或Enter键触发消息。4.如权利要求3所述的KVM虚拟机WEB终端的实现方法，其特征在于，根据预设键鼠触发消息调用对应的API接口形成控制指令具体包括：预设键鼠触发消息为光标向上时调用com_up接口，预设键鼠触发消息为光标向下时调用com_down接口，预设键鼠触发消息为Tab键时调用com_tab接口，预设键鼠触发消息为Ctrl+C时调用com_cancel接口，预设键鼠触发消息为Enter键时调用com_submit接口。5.如权利要求4所述的KVM虚拟机WEB终端的实现方法，其特征在于，步骤S3具体包括：S31、WEB服务端模块接收并解析请求数据，获取虚拟机序列号和控制指令内容，将控制指令内容转换为串口协议指令，并查询虚拟机宿主机映射关系表得到获取的虚拟机序列号对应的虚拟机所在的宿主机管理IP地址，将所述虚拟机序列号和转换后的串口协议指令发送给对应宿主机上的串口网关模块；S32、串口网关模块根据接收的虚拟机序列号查询虚拟串口设备映射表找到对应的套接口设备，并将接收到的串口协议指令通过套接口设备发送给对应虚拟机的虚拟串口设备，完成串口指令的执行。6.如权利要求5所述的KVM虚拟机WEB终端的实现方法，其特征在于，步骤S31中，将控制指令内容转换为串口协议指令具体包括：将com_up命令转换为“”，将com_down命令转换为“/＞”，将com_tab命令转换为“/＞”，将com_cancel命令转换为“/＞”；当com_submit接口被调用时，获取请求消息中的cmd字段，封装串口消息：cmd字段消息+“”。7.如权利要求6所述的KVM虚拟机WEB终端的实现方法，其特征在于，步骤S4具体包括：S41、WEB终端模块上的虚拟终端窗口定时调用com_status接口发送虚拟机序列号查询虚拟机是否有内容要输出显示到虚拟终端窗口；S42、WEB服务端模块接收到com_status接口调用后解析虚拟机序列号，并查询对应宿主机的串口网关模块；S43、串口网关模块定时检查虚拟串口设备映射表中所有宿主机上的套接口设备状态，并记录对应虚拟串口设备的输出状态信息；S44、当串口网关模块接收到WEB服务端模块的查询请求时，检查虚拟串口设备映射表中记录的虚拟串口设备的输出状态信息，如果虚拟串口设备的输出状态为有数据，则读取串口数据并返回给WEB服务端模块；如果没有数据，立刻应答并返回空数据；S45、WEB服务端模块检查串口网关模块返回的数据，如果有数据返回，则将返回的串口数据转换成WEB终端可以显示的文本数据，并将虚拟机序列号和文本数据打包成HTTP协议发送给WEB终端模块。8.一种KVM虚拟机WEB终端的实现装置，用于实现如权利要求1-7任一项所述的KVM虚拟机WEB终端的实现方法，其特征在于，包括：宿主机，所述宿主机上创建有至少一个配置有虚拟串口设备的KVM虚拟机，对应虚拟串口设备的套接口设备，以及串口网关模块，所述串口网关模块建立并维护更新虚拟串口设备映射表，所述虚拟串口设备映射表记录所述虚拟串口设备和套接口设备的映射关系；云平台网关，其上配置有WEB服务端模块，所述WEB服务端模块基于所述虚拟串口设备映射表获取虚拟机序列号和当前宿主机的管理IP地址，建立并维护更新虚拟机宿主机映射表，所述虚拟机宿主机映射表记录KVM虚拟机和宿主机的对应关系；以及云平台管控，其上配置有WEB终端模块，所述WEB终端模块创建有与虚拟机对应的虚拟终端窗口，并于所述虚拟终端窗口被激活或锁定时监听系统键鼠消息，通过WEB服务端模块与串口网关模块进行数据和命令传输，完成WEB终端模块和KVM虚拟机串口设备的命令交互。
说明书desc
技术领域本发明涉及云计算技术领域，具体涉及一种KVM虚拟机WEB终端的实现方法和装置。背景技术随着云计算应用的发展，云计算已经成为各个行业领域信息化建设的基础，云平台系统也日益的复杂庞大，云计算的日常安全保障问题显得异常重要。为了保障云平台的安全可靠，运维工程师需要对计算节点日常巡检，通过计算节点的日志信息或状态信息确认节点是否存在风险。当计算节点存在安全风险时，往往运维工程师需要第一时间登录到计算节点上确认系统状态。KVM虚拟机是一个开源的虚拟机模块，该模块在云计算平台中应用非常广泛。为了解决虚拟机远程管理问题，目前业界有两种主流的解决方案：第一种是开发一套Agent设备部署在KVM虚拟机中，该Agent作为管理接入代理，云计算平台通过Agent客户端来管理云计算节点。该方法能够解决虚拟机管理的问题，但虚拟机操作系统平台复杂多样，为了兼容不同操作系统，平台需要开发维护多套Agent组件，软件维护复杂度高。第二种是搭建一个专有的云计算VNC网络，依据该网络，运维人员通过VNC客户端来管理维护KVM虚拟机。该方法一方面需要对云计算网络定制规划，硬件部署成本较高，另一方面云计算平台对VNC客户端强依赖，管理客户端灵活性较差。发明内容基于上述背景，为了更加高效快捷方便的运维管理KVM虚拟机，本发明提出了一种KVM虚拟机WEB终端的实现方法和装置，使得运维工程师可以很方便的登录到虚拟机，并像在本地操作物理主机一样管理虚拟机。为了实现上述目的，本发明采用了如下技术方案：本发明第一个方面提供了一种KVM虚拟机WEB终端的实现方法，包括：S1、在宿主机上创建至少一个配置有虚拟串口设备的KVM虚拟机，并在云平台管控上配置WEB终端模块，通过配置于宿主机上的套接口设备和串口网关模块，以及配置于云平台网关上的WEB服务端模块，基于三方映射关系将所述KVM虚拟机在WEB终端模块进行注册；S2、通过WEB终端模块创建虚拟终端窗口，并于所述虚拟终端窗口被激活或锁定时监听系统键鼠消息，基于监听的键鼠消息在虚拟终端窗口中显示输入的文本信息，并基于预设键鼠触发消息调用对应的API接口形成控制指令结合虚拟机序列号作为请求数据发送给WEB服务端模块；S3、WEB服务端模块接收并解析请求数据，获取虚拟机序列号和控制指令内容，将控制指令内容转换为串口协议指令，并基于所述三方映射关系发送给对应虚拟机的虚拟串口设备，完成串口指令的执行；S4、WEB服务端模块基于WEB终端模块的查询请求查询对应宿主机的串口网关模块，获取虚拟串口设备返回的串口数据，将串口数据转换成WEB终端可以显示的文本数据，并将虚拟机序列号和文本数据打包成HTTP协议发送给WEB终端模块；S5、WEB终端模块接收WEB服务端模块返回的数据，将接收到的数据更新到虚拟终端窗口，并刷新界面显示，完成WEB终端模块和KVM虚拟机串口设备的命令交互。进一步的，步骤S1具体包括：S11、在宿主机上创建配置有虚拟串口设备的KVM虚拟机，KVM虚拟机启动完成后创建套接口设备，所述套接口设备连接所述虚拟串口设备；S12、通过部署于宿主机上的串口网关模块扫描连接所述套接口设备，建立并维护更新虚拟串口设备映射表，所述虚拟串口设备映射表记录所述虚拟串口设备和套接口设备的映射关系；S13、串口网关模块定时扫描所述虚拟串口设备映射表，并将虚拟机序列号和当前宿主机的管理IP地址发送给云平台网关的WEB服务端模块；S14、WEB服务端模块接收到虚拟机序列号和宿主机的管理IP地址后，建立并维护更新虚拟机宿主机映射表，所述虚拟机宿主机映射表记录KVM虚拟机和宿主机的对应关系；S15、WEB服务端模块响应配置于云平台管控上的WEB终端模块的查询请求，基于所述虚拟机宿主机映射表生成全量虚拟机终端信息并返回给所述WEB终端模块，WEB终端模块基于返回的信息对所述KVM虚拟机进行注册。进一步的，步骤S2中，基于监听的键鼠消息在虚拟终端窗口中显示输入的文本信息，并基于预设键鼠触发消息调用对应的API接口形成控制指令结合虚拟机序列号作为请求数据发送给WEB服务端模块具体包括：当检测到键盘输入键为文本，即0~9，a~z或A~Z时，虚拟终端窗口将文本信息显示到窗口中；当检测到预设键鼠触发消息时，WEB终端模块获取当前窗口输入的文本信息，并根据预设键鼠触发消息调用对应的API接口形成控制指令，所述预设键鼠触发消息包括光标向上、光标向下、Tab键、Ctrl+C或Enter键触发消息。进一步的，根据预设键鼠触发消息调用对应的API接口形成控制指令具体包括：预设键鼠触发消息为光标向上时调用com_up接口，预设键鼠触发消息为光标向下时调用com_down接口，预设键鼠触发消息为Tab键时调用com_tab接口，预设键鼠触发消息为Ctrl+C时调用com_cancel接口，预设键鼠触发消息为Enter键时调用com_submit接口。进一步的，步骤S3具体包括：S31、WEB服务端模块接收并解析请求数据，获取虚拟机序列号和控制指令内容，将控制指令内容转换为串口协议指令，并查询虚拟机宿主机映射关系表得到获取的虚拟机序列号对应的虚拟机所在的宿主机管理IP地址，将所述虚拟机序列号和转换后的串口协议指令发送给对应宿主机上的串口网关模块；S32、串口网关模块根据接收的虚拟机序列号查询虚拟串口设备映射表找到对应的套接口设备，并将接收到的串口协议指令通过套接口设备发送给对应虚拟机的虚拟串口设备，完成串口指令的执行。进一步的，步骤S31中，将控制指令内容转换为串口协议指令具体包括：将com_up命令转换为“”，将com_down命令转换为“/＞”，将com_tab命令转换为“/＞”，将com_cancel命令转换为“/＞”；当com_submit接口被调用时，获取请求消息中的cmd字段，封装串口消息：cmd字段消息+“”。进一步的，步骤S4具体包括：S41、WEB终端模块上的虚拟终端窗口定时调用com_status接口发送虚拟机序列号查询虚拟机是否有内容要输出显示到虚拟终端窗口；S42、WEB服务端模块接收到com_status接口调用后解析虚拟机序列号，并查询对应宿主机的串口网关模块；S43、串口网关模块定时检查虚拟串口设备映射表中所有宿主机上的套接口设备状态，并记录对应虚拟串口设备的输出状态信息；S44、当串口网关模块接收到WEB服务端模块的查询请求时，检查虚拟串口设备映射表中记录的虚拟串口设备的输出状态信息，如果虚拟串口设备的输出状态为有数据，则读取串口数据并返回给WEB服务端模块；如果没有数据，立刻应答并返回空数据；S45、WEB服务端模块检查串口网关模块返回的数据，如果有数据返回，则将返回的串口数据转换成WEB终端可以显示的文本数据，并将虚拟机序列号和文本数据打包成HTTP协议发送给WEB终端模块。本发明的第二个方面还提供了一种KVM虚拟机WEB终端的实现装置，用于实现如上述第一个方面所述的KVM虚拟机WEB终端的实现方法，包括：宿主机，所述宿主机上创建有至少一个配置有虚拟串口设备的KVM虚拟机，对应虚拟串口设备的套接口设备，以及串口网关模块，所述串口网关模块建立并维护更新虚拟串口设备映射表，所述虚拟串口设备映射表记录所述虚拟串口设备和套接口设备的映射关系；云平台网关，其上配置有WEB服务端模块，所述WEB服务端模块基于所述虚拟串口设备映射表获取虚拟机序列号和当前宿主机的管理IP地址，建立并维护更新虚拟机宿主机映射表，所述虚拟机宿主机映射表记录KVM虚拟机和宿主机的对应关系；以及云平台管控，其上配置有WEB终端模块，所述WEB终端模块创建有与虚拟机对应的虚拟终端窗口，并于所述虚拟终端窗口被激活或锁定时监听系统键鼠消息，通过WEB服务端模块与串口网关模块进行数据和命令传输，完成WEB终端模块和KVM虚拟机串口设备的命令交互。本发明的有益技术效果如下：1）依据本发明的方法和装置，KVM虚拟机运维管理模块被设计成一个独立的功能组件，云计算平台可以像管理普通WEB组件一样，很方便的部署到云计算管控，没有系统和平台依赖，软件适应性强。2）依据本发明的方法和装置，运维人员可以像操作本地物理服务器一样使用WEB终端管理远程KVM虚拟机，在WEB网页上与虚拟机进行命令行交互，指令交互完成后执行结果将被输出到WEB终端页面，大大降低了系统运维的成本和系统学习的时间。3）依据本发明的方法和装置，WEB终端请求的所有API接口都被设计成无状态，从设计源头解决了系统软件对网络和接口延迟的依赖，即使部分接口或命令请求超时，该系统仍然可以正确的继续运行，具有很强的系统鲁棒性。4）依据本发明的方法和装置，不需要针对KVM虚拟机中的业务操作系统定制开发Agent软件，管理和业务分离，一方面降低了系统的复杂度，另一方面也提升了系统的稳定性。附图说明图1为本发明的KVM虚拟机WEB终端的实现系统实施例的组成示意图。图2为本发明的KVM虚拟机WEB终端的实现方法实施例中WEB终端注册流程示意图。图3为本发明的KVM虚拟机WEB终端的实现方法实施例中WEB终端用户交互流程示意图。图4为本发明的KVM虚拟机WEB终端的实现方法实施例中WEB终端命令执行流程示意图。图5为本发明的KVM虚拟机WEB终端的实现方法实施例中WEB终端显示查询流程示意图。具体实施方式为了进一步理解本发明，下面结合实施例对本发明优选实施方案进行描述，但是应当理解，这些描述只是为进一步说明本发明的特征和优点，而不是对本发明权利要求的限制。名词解释：KVM虚拟机：即 Kernel-based Virtual Machine，基于内核的虚拟机，是一个开源的系统虚拟化模块，自 Linux 2.6.20 之后集成在 Linux 的各个主要发行版本中。Libvirt：用于管理虚拟化平台的开源API，后台程序和管理工具。它可以用于管理KVM、XEN、VmwareESX、Qemu等其他虚拟化技术。这些API在云计算的解决方案中广泛应用。该管理工具提供了一些方便的虚拟机管理接口，依据这些接口可以很方便的操作虚拟机的存储、网络等组件。宿主机：KVM虚拟机运行所在的物理服务器，为KVM虚拟机的运行提供所需要的软硬件环境。云平台管控：云计算运维管理平台，负责人机交互的WEB管理服务。依据该平台运维和客户的操作可以转换成云计算底座提供的API接口；进一步地，通过各种API接口的调用和功能执行，实现对云计算平台的运维管理。云平台网关：一种物理服务器，云计算平台管理接入节点，用于部署云计算平台管控依赖的服务端程序。虚拟串口设备，KVM虚拟机的一个虚拟化设备，用来模拟串口服务。WEB终端模块：用WEB实现的一个控制台终端，集成在云平台管控中，作为一个交互窗口模拟终端的输入输出。本发明实施例中WEB终端模块通过虚拟终端窗口为用户提供光标指令交互和文本命令交互，其中光标指令包括：光标向上，光标向下，TAB补全记录等，文本命令即用户将需要执行的命令输入到虚拟终端窗口，敲回车键执行并获取返回结果。WEB服务端模块：WEB终端的服务端程序，部署在云平台网关服务器上。本发明实施例中，WEB服务端模块负责接收处理WEB终端模块发送的API请求，进一步地，根据API请求，将接收到的数据打包成串口通讯指令，并发送到对应宿主机的串口网关模块。串口网关模块：部署在宿主机服务器上，负责管理维护当前宿主机上所有虚拟串口设备对应套接口设备。本发明实施例中，串口网关模块接收来自WEB服务端模块的数据，根据数据内容中的KVM虚拟机序列号将串口数据转发到对应的套接口设备。另外当套接口设备有数据输出时，该模块将KVM虚拟机序列号和对应数据内容打包转发到WEB服务端模块。套接口设备：即unix_socket，也叫“套接字”，是操作系统内核中的一个数据结构，网络中的节点进行相互通信的门户，也是网络进程的ID。本发明实施例中套接口设备为/var/kvm/com-123456通道。目前主流的操作系统都支持通过串口的方式来对系统进行维护管理。而KVM虚拟机在启动阶段，用户可以根据需求创建一个虚拟串口设备。依据该虚拟串口设备，外部终端可以使用串口协议对云实例进行维护管理。基于此，本发明第一个实施例提供了一种KVM虚拟机WEB终端的实现方法，包括以下步骤：第一步，在宿主机上创建至少一个配置有虚拟串口设备的KVM虚拟机，并在云平台管控上配置WEB终端模块，通过配置于宿主机上的套接口设备和串口网关模块，以及配置于云平台网关上的WEB服务端模块，基于三方映射关系将所述KVM虚拟机在WEB终端模块进行注册。具体的，参见附图1-图2，首先在宿主机H上使用Libvirtd工具创建包含虚拟串口设备的虚拟机VM1和虚拟机VM2，…，具体创建流程为：1）定义Libvirtd工具依赖的虚拟机xml配置，该xml配置中包括虚拟串口设备，详细配置如下：……＜channel type='unix'＞＜source mode='bind' path='/var/kvm/ com-123456'/＞＜target type='virtio' name='org.qemu.guest_cloud' state='connected'/＞＜alias name='channel0'/＞＜address type='virtio-serial' controller='0' bus='0' port='3'/＞＜/channel＞……2）初始化虚拟机依赖的CPU、内存、磁盘资源，并启动虚拟机。KVM虚拟机启动完成过程中会创建一个虚拟串口设备，并会将虚拟机的虚拟串口设备映射到宿主机的套接口设备，具体映射过程为：当虚拟机VM1和虚拟机VM2创建成功并启动完成后，虚拟机模块会在宿主机H上创建两个套接口设备，分别为/var/kvm/com-1和/var/kvm/com-2，虚拟机VM1的vcom和/var/kvm/com-1相连，虚拟机VM2的vcom和/var/kvm/com-2相连。然后，通过部署在宿主机上的串口网关模块P定时扫描连接的套接口设备，建立并维护更新虚拟串口设备映射表T1，虚拟串口设备映射表记录虚拟串口设备和套接口设备的映射关系。具体的，串口网关模块P会定时扫描/var/kvm目录，当检查到有com-开头的unix_socket时，查询当前模块维护的虚拟串口设备映射表T1，没有登记记录则尝试连接/var/kvm/com-1和/var/kvm/com-2，当设备连接成功后更新映射表T1，记录VM1和/var/kvm/com-1，VM2和/var/kvm/com-2之间的映射关系。然后，串口网关模块定时扫描虚拟串口设备映射表T1，并将虚拟机VM1和VM2的序列号和当前宿主机的管理IP地址发送给云平台网关的WEB服务端模块S。之后，WEB服务端模块S接收到虚拟机VM1和VM2的序列号ID和宿主机的管理IP地址后，建立并维护更新虚拟机宿主机映射表T2，记录虚拟机VM1在宿主机H上，虚拟机VM2在宿主机H上。最后，WEB终端模块C会定时调用com_list接口向WEB服务端模块S查询虚拟机终端列表信息；WEB服务端程序S响应com_list接口，依据虚拟机宿主机映射列表T2生成全量虚拟机终端信息，并返回给WEB终端模块C，从而完成KVM虚拟在WEB终端模块的注册。第二步，通过WEB终端模块C创建虚拟终端窗口，并于虚拟终端窗口被激活或锁定时监听系统键鼠消息，基于监听的键鼠消息在虚拟终端窗口中显示输入的文本信息，并基于预设键鼠触发消息调用对应的API接口形成控制指令结合虚拟机序列号ID作为请求数据发送给WEB服务端模块。具体的，参见附图1和附图3，当运维人员需要连接虚拟机VM1时，使用WEB终端模块C创建虚拟终端窗口vm1。当用户的窗口锁定到虚拟终端窗口vm1时，WEB终端模块C开始监听系统键盘和鼠标消息：当检测到输入键为文本，即0~9，a~z或A~Z时，WEB终端模块将文本信息追加显示到虚拟终端窗口中；当检测到输入键为预设键鼠触发消息时，WEB终端模块获取当前虚拟终端窗口输入的文本信息，并根据输入键的不同调用对应的API接口形成控制指令。预设键鼠触发消息包括光标向上、光标向下、Tab键、Ctrl+C或Enter键触发消息。预设键鼠触发消息为光标向上时调用com_up接口发送请求com_up命令，预设键鼠触发消息为光标向下时调用com_down接口发送请求com_down命令，预设键鼠触发消息为Tab键时调用com_tab接口发送请求com_tab命令，预设键鼠触发消息为Enter键时，获取窗口最后一条命令行消息，并调用com_submit接口发送请求com_submit命令，预设键鼠触发消息为Ctrl+C时调用com_cancel接口发送请求com_cancel命令。WEB终端模块将虚拟机VM1的序列号ID和命令内容信息发送给WEB服务端模块S。第三步，WEB服务端模块S接收并解析请求数据，获取虚拟机序列号ID和控制指令内容，将控制指令内容转换为串口协议指令，并基于三方映射关系发送给对应虚拟机的虚拟串口设备，完成串口指令的执行。具体的，WEB服务端模块S接收到com_submit接口消息后，解析请求数据并获得虚拟机VM1序号ID和控制指令内容，将控制指令内容转换为串口协议指令，并查询虚拟机宿主机映射关系表T2得到获取的虚拟机序列号对应的虚拟机所在的宿主机管理IP地址，将虚拟机序列号和转换后的串口协议指令发送给对应宿主机H上的串口网关模块P。然后，串口网关模块P根据接收的虚拟机序列号查询虚拟串口设备映射表，获取虚拟机VM1上虚拟串口设备映射的套接口设备，并将接收到的串口协议指令通过套接口设备发送给对应的虚拟串口设备，完成串口协议指令的执行。具体的，将控制指令内容转换为串口协议指令具体包括：将com_up命令转换为“”，将com_down命令转换为“/＞”，将com_tab命令转换为“/＞”，将com_cancel命令转换为“/＞”；当com_submit接口被调用时，获取请求消息中的cmd字段，封装串口消息：cmd字段消息+“”，并将消息信息转发到对应宿主机的串口网关模块。参见附图1和附图4，一个具体示例中，当用户将鼠标光标锁定在虚拟终端窗口vm1界面时，输入命令文本信息“pingwww.baidu.com”，按下Enter键；WEB终端模块C请求com_submit接口，请求参数：；WEB服务端模块S响应com_submit请求，查询虚拟机VM1所在宿主机H，封装请求命令，将数据发送给宿主H上的串口网关模块P；宿主机H上的串口网关模块P接收到请求消息，查询虚拟机VM1对应的unix_socket，将消息转发给/var/kvm/com-1；虚拟机VM1上的vcom执行请求ping www.baidu.com。第四步，WEB服务端模块基于WEB终端模块的查询请求查询对应宿主机的串口网关模块，获取虚拟串口设备返回的串口数据，将串口数据转换成WEB终端可以显示的文本数据，并将虚拟机序列号和文本数据打包成HTTP协议发送给WEB终端模块。具体的，参见附图5，WEB终端模块C上的虚拟终端窗口定时调用com_status接口，发送虚拟机VM1序列号查询虚拟机是否有内容要输出显示到虚拟终端窗口vm1；WEB服务端模块S接收到com_status接口调用后解析虚拟机VM1序列号，并向对应宿主机H的串口网关模块P查询VM1终端输出状态；串口网关模块P会定时检查虚拟串口设备映射表T1中所有宿主机上的套接口设备状态，检查并记录对应虚拟串口设备的输出状态信息；当串口网关模块P接收到WEB服务端模块的查询请求时，检查虚拟串口设备映射表T1中记录的虚拟串口设备的输出状态信息，如果虚拟串口设备的输出状态为有数据，则从/var/kvm/com-1通道中读取vcom输出的串口数据并返回给WEB服务端模块；如果/var/kvm/com-1通道没有数据，立刻应答并返回空数据。最后，WEB服务端模块S检查串口网关模块P返回的数据，如果有数据返回，则将返回的串口数据转换成WEB终端可以显示的文本内容，并将虚拟机序列号和文本数据打包成HTTP协议发送给WEB终端模块C。第五步，WEB终端模块接收到WEB服务端模块返回的查询数据后，将接收到的数据更新到虚拟终端窗口vm1的最后一行，并刷新界面显示，完成WEB终端模块和KVM虚拟机串口设备的命令交互。本发明的第二个实施例还提供了一种KVM虚拟机WEB终端的实现装置，用于实现上述实施例所述的KVM虚拟机WEB终端的实现方法，参见附图1，其包括：宿主机H，其上创建有至少一个配置有虚拟串口设备的KVM虚拟机，对应虚拟串口设备的套接口设备，以及串口网关模块P，串口网关模块P建立并维护更新虚拟串口设备映射表T1，虚拟串口设备映射表T1记录虚拟串口设备和套接口设备的映射关系；云平台网关G，其上配置有WEB服务端模块S，WEB服务端模块S基于虚拟串口设备映射表获取虚拟机序列号和当前宿主机的管理IP地址，建立并维护更新虚拟机宿主机映射表T2，虚拟机宿主机映射表T2记录KVM虚拟机和宿主机的对应关系；以及云平台管控Z，其上配置有WEB终端模块C，WEB终端模块C创建有与虚拟机对应的虚拟终端窗口vm1，vm2，并于虚拟终端窗口被激活或锁定时监听系统键鼠消息，通过WEB服务端模块S与串口网关模块P进行数据和命令传输，完成WEB终端模块和KVM虚拟机串口设备的命令交互。以上实施例的说明只是用于帮助理解本发明的方法及其核心思想。应当指出，对于本技术领域的普通技术人员来说，在不脱离本发明原理的前提下，还可以对本发明进行若干改进和修饰，这些改进和修饰也落入本发明权利要求的保护范围内。
