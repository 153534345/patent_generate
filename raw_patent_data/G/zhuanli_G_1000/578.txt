标题title
一种容器平台运维方法及系统
摘要abst
本申请公开了一种容器平台运维方法及系统，其涉及容器运维技术领域，首先利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息，然后利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径，最后将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。通过利用大语言模型的理解能力和知识存储能力，将输入的自然语言方式由程序自动转换到执行计划及API的调用，进而达到降低管理系统的难度，减轻运维的效果，只需进行简单描述便能实现批量化操作。
权利要求书clms
1.一种容器平台运维方法，其特征在于，所述方法包括：利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息；利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径；将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。2.如权利要求1所述的容器平台运维方法，其特征在于，利用大语言模型从结构化执行信息生成的多条多步骤可执行路径中选取最优路径的步骤，包括：利用大语言模型理解并提取结构化执行信息，并根据结构化执行信息遍历系统对象关系图得到多条可执行路径；利用结构化执行信息为每条可执行路径添加从系统动作表中获取的参数和约束条件，得到多条多步骤可执行路径；利用大语言模型从多条多步骤可执行路径中选取最优路径。3.如权利要求1所述的容器平台运维方法，其特征在于，将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果的步骤，包括：将最优路径的结构化执行信息与系统动作表进行循环匹配得到系统API信息；将系统API信息结合运行参数缓存进行API调用得到API调用类型；根据API调用输出对应的API调用结果。4.如权利要求3所述的容器平台运维方法，其特征在于，所述API调用类型包括对象列表和网页URL，根据API调用输出对应的API调用结果的步骤，包括：根据对象列表输出处理后的自然语言结果；根据网页URL调取网页。5.如权利要求1所述的容器平台运维方法，其特征在于，所述结构化执行信息包括容器平台涉及的对象、对象所做的动作以及对象或动作的约束。6.如权利要求1所述的容器平台运维方法，其特征在于，在利用结构化执行信息为每条可执行路径添加从系统动作表中获取的参数和约束条件，得到多条多步骤可执行路径之后的步骤，还包括：判断结构化执行信息中是否缺失必填参数；若缺失则构建一个缺失参数的结构化模板返回，待补齐缺失参数之后利用大语言模型从多条多步骤可执行路径中选取最优路径；若不缺失则利用大语言模型从多条多步骤可执行路径中选取最优路径。7.一种容器平台运维系统，其特征在于，所述系统包括：计划模块，用于利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息；计划模块，还用于利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径；执行模块，用于将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。8.如权利要求7所述的容器平台运维系统，其特征在于，所述计划模块，具体用于：利用大语言模型理解并提取结构化执行信息，并根据结构化执行信息遍历系统对象关系图得到多条可执行路径；利用结构化执行信息为每条可执行路径添加从系统动作表中获取的参数和约束条件，得到多条多步骤可执行路径；利用大语言模型从多条多步骤可执行路径中选取最优路径。9.如权利要求7所述的容器平台运维系统，其特征在于，所述执行模块，具体用于：将最优路径的结构化执行信息与系统动作表进行循环匹配得到系统API信息；将系统API信息结合运行参数缓存进行API调用得到API调用类型；根据API调用输出对应的API调用结果。10.如权利要求9所述的容器平台运维系统，其特征在于，所述API调用类型包括对象列表和网页URL，所述执行模块，具体用于：根据对象列表输出处理后的自然语言结果；根据网页URL调取网页。
说明书desc
技术领域本申请涉及容器运维技术领域，具体而言，涉及一种容器平台运维方法及系统。背景技术微服务架构是一种架构概念，旨在通过将功能分解到各个离散的服务中以实现对解决方案的解耦。其主要作用是将功能分解到离散的各个服务当中，从而降低系统的耦合性，并提供更加灵活的服务支持。把一个大型的单个应用程序和服务拆分为数个甚至数十个的支持微服务，它可扩展单个组件而不是整个的应用程序堆栈，从而满足服务等级协议。主流容器编排管理平台多数是基于Kubernetes平台所构建，其可以通过命令和脚本完成在部署、管理和扩展容器化应用，过程中涉及的许多手动操作，通常运维界面能够完成一些基本操作，复杂以及批量化的工作主要由各类命令来完成，因而要求对容器平台各方面知识了解，同时也需要深入到命令细节，使用适合的命令参数。在现有技术中，大型的分布式后台系统大多采用微服务架构，利用容器化平台来进行部署、管理以及扩展，但是由于其涉及到的对象、操作、命令都较为繁琐，需要管理人员具备较多的知识和实操经验才能进行操作，并不适用于分布式后台系统的广泛应用。发明内容本申请的目的在于，为了克服现有的技术缺陷，提供了一种容器平台运维方法及系统，通过利用大语言模型的理解能力和知识存储能力，将输入的自然语言方式由程序自动转换到执行计划及API的调用，进而达到降低管理系统的难度，减轻运维的效果，只需进行简单描述便能实现批量化操作。本申请目的通过下述技术方案来实现：第一方面，本申请提出了一种容器平台运维方法，所述方法包括：利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息；利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径；将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。在一种可能的实施方式中，利用大语言模型从结构化执行信息生成的多条多步骤可执行路径中选取最优路径的步骤，包括：利用大语言模型提取结构化执行信息遍历构建的系统对象关系图得到多条可执行路径；利用结构化执行信息为每条可执行路径添加从系统动作表中获取的参数和约束条件，得到多条多步骤可执行路径；利用大语言模型从多条多步骤可执行路径中选取最优路径。在一种可能的实施方式中，将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果的步骤，包括：将最优路径的结构化执行信息与系统动作表进行循环匹配得到系统API信息；将系统API信息结合运行参数缓存进行API调用得到API调用类型；根据API调用输出对应的API调用结果。在一种可能的实施方式中，所述API调用类型包括对象列表和网页URL，根据API调用输出对应的API调用结果的步骤，包括：根据对象列表输出处理后的自然语言结果；根据网页URL调取网页。在一种可能的实施方式中，所述结构化执行信息包括容器平台涉及的对象、对象所做的动作以及对象或动作的约束。在一种可能的实施方式中，在利用结构化执行信息为每条可执行路径添加从系统动作表中获取的参数和约束条件，得到多条多步骤可执行路径之后的步骤，还包括：判断结构化执行信息中是否缺失必填参数；若缺失则构建一个缺失参数的结构化模板返回，待补齐缺失参数之后利用大语言模型从多条多步骤可执行路径中选取最优路径；若不缺失则利用大语言模型从多条多步骤可执行路径中选取最优路径。第二方面，本申请提出了一种容器平台运维系统，所述系统包括：计划模块，用于利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息；计划模块，还用于利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径；执行模块，用于将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。在一种可能的实施方式中，计划模块，具体用于：利用大语言模型理解并提取结构化执行信息，并根据结构化执行信息遍历系统对象关系图得到多条可执行路径；利用结构化执行信息为每条可执行路径添加从系统动作表中获取的参数和约束条件，得到多条多步骤可执行路径；利用大语言模型从多条多步骤可执行路径中选取最优路径。在一种可能的实施方式中，所述执行模块，具体用于：将最优路径的结构化执行信息与系统动作表进行循环匹配得到系统API信息；将系统API信息结合运行参数缓存进行API调用得到API调用类型；根据API调用输出对应的API调用结果。在一种可能的实施方式中，所述API调用类型包括对象列表和网页URL，所述执行模块，具体用于：根据对象列表输出处理后的自然语言结果；根据网页URL调取网页。上述本申请主方案及其各进一步选择方案可以自由组合以形成多个方案，均为本申请可采用并要求保护的方案；且本申请，选择之间以及和其他选择之间也可以自由组合。本领域技术人员在了解本申请方案后根据现有技术和公知常识可明了有多种组合，均为本申请所要保护的技术方案，在此不做穷举。本申请公开了一种容器平台运维方法及系统，首先利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息，然后利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径，最后将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。通过利用大语言模型的理解能力和知识存储能力，将输入的自然语言方式由程序自动转换到执行计划及API的调用，进而达到降低管理系统的难度，减轻运维的效果，只需进行简单描述便能实现批量化操作。附图说明图1示出了本申请实施例提出的容器平台运维方法的流程示意图。图2示出了本申请实施例提出的一种交互示意图。图3示出了本申请实施例提出的容器平台运维系统的示意图。具体实施方式以下通过特定的具体实例说明本申请的实施方式，本领域技术人员可由本说明书所揭露的内容轻易地了解本申请的其他优点与功效。本申请还可以通过另外不同的具体实施方式加以实施或应用，本说明书中的各项细节也可以基于不同观点与应用，在没有背离本申请的精神下进行各种修饰或改变。需说明的是，在不冲突的情况下，以下实施例及实施例中的特征可以相互组合。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。在现有技术中，由于大型的分布式后台系统多采用微服务架构，利用容器化平台来进行部署、管理和扩展，其涉及的对象、操作、命令都较为繁琐，需要管理人员具备较多的知识和实操经验。为了解决上述的问题，本申请实施例提出了一种容器平台运维方法及系统，利用大语言模型的理解能力和知识存储能力，可让系统管理人员按照自然语言方式输入，由程序自动转换到执行计划及API的调用变为可能，进而达到降低管理系统的难度，减轻运维的效果，接下来对其进行详细说明。请参照图1，图1示出了本申请实施例提出的容器平台运维方法的流程示意图，该方法应用于容器化平台，包括以下各个步骤：步骤S100、利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息。结构化执行信息包括容器平台涉及的对象、对象所做的动作以及对象或动作的约束。自然语言指令为大语言模型需要执行的一段文字信息，例如：“查询集群CPU资源占用前10的工作负载”。本申请实施例选用的大语言模型是以chatGPT为代表的大语言模型产品，其是针对容器化平台进行微调过的领域大模型，其能够更好的理解容器平台运维领域的词汇、对象、动作、约束等知识。将其与COT思维链、ICL上下文学习方法进行结合能够提取到程序能够理解的结构化执行信息。步骤S200、利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径。步骤S200具体包括以下子步骤：步骤S210、利用大语言模型提取结构化执行信息遍历构建的系统对象关系图得到多条可执行路径。在准备期间根据容器化平台所涉及的结构化执行信息中的对象以及对象关系，构建一个系统对象关系图，在符合大语言模型抽取结果协议的情况下，根据包含对象、动作、约束的结构化执行信息对系统对象关系图进行遍历得到多条可执行路径。步骤S220、利用结构化执行信息为每条可执行路径添加从系统动作表中获取的参数和约束条件，得到多条多步骤可执行路径。在得到多条可执行路径之后，利用结构化执行信息为每条可执行路径上的对象和动作添加参数和约束条件，形成多条带参数和约束的多步骤可执行路径。步骤S230、利用大语言模型从多条多步骤可执行路径中选取最优路径。结合大语言模型的理解能力，将多步骤可执行路径作为输入，单条路径作为输出，对路径选择的能力进行训练微调，利用微调后的领域大模型，对多条可执行路径进行选择，得到一条最优路径，作为整个计划模块的最终输出。步骤S300、将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。步骤S300具体包括以下子步骤：步骤S310、将最优路径的结构化执行信息与系统动作表进行循环匹配得到系统API信息；按照结构化执行信息动作、对象和系统动作表中的约束条件和参数进行循环匹配，例如先对对象进行匹配，对象匹配完成之后再对动作进行匹配，以此类推，找到对应的系统API信息。步骤S320、将系统API信息结合运行参数缓存进行API调用得到API调用类型。将系统API信息结合运行时缓存补充获取运行参数缓存进行API调用，得到API调用类型。步骤S330、根据API调用输出对应的API调用结果。所述API调用类型包括对象列表和网页URL，步骤S330包括：根据对象列表输出处理后的自然语言结果；根据网页URL调取网页。在步骤S220之后还包括：判断结构化执行信息中是否缺失必填参数；若缺失则构建一个缺失参数的结构化模板返回，待补齐缺失参数之后利用大语言模型从多条多步骤可执行路径中选取最优路径；若不缺失则利用大语言模型从多条多步骤可执行路径中选取最优路径。API调用所需参数时能够获取自然语言中提取获得和系统运行时缓存获取，将这两部分信息整合后，判断是否缺失必填参数，在缺必填参数时会构建一个缺失参数的结构化模板，计算机反馈需要用户补充的参数，由用户通过填空的方式补充，并提交到底层执行。在一种可行的实施例中，请参照图2，图2示出了本申请实施例提出的一种交互示意图，由客户端和计划执行模块进行交互，首先用户按照自然语言形式提出要求，客户端将问题返回至计划执行模块，计划执行模块发出参数缺失请求反馈参数是否缺失，缺失哪些参数以及参数模板，而用户利用客户端对该模板补齐，例如填写集群和命名空间。并提交缺失参数，计划模块反馈即将执行的计划，用户确认该计划是否执行，例如确定查询集群、查询A节点、重启节点。并提交到计划执行模块直接交互驱动底层执行，计划执行模块反馈执行结果，执行结果根据情况可为页面跳转展示，也可为自然语言形式的文本。其中使用HTML呈现需要交互的结果，并且包含需要交互的控件。在另一种可行的实施例中，假设用户输入的自然语言指令为：查询集群CPU资源占用前10的工作负载，输出的是：根据指令信息，我将为你执行以下操作：1.查询集群，2.查询命名空间，3.查询CPU占用前10工作负载，在用户选择确认之后得到生成结果。在另一种可行的实施例中，用户输入的自然语言指令为查询POD，但是会缺少POD信息，于是会返回一个模板让用户重新选择一个变量，在选择之后才能够重新执行并得到输出结果。因此该本申请实施例提出的容器平台运维方法实现了一种通过自然语言输入，驱动容器平台执行运维动作的全套流程方法。该方法利用容器平台所管理的对象，对象间关系，对象支持的操作等领域知识，结合大语言模型的理解能力，提取关键要素信息，再结合图搜索方法，构建执行步骤并最终执行。下面给出一种容器平台运维系统可能的实现方式，其用于执行上述实施例及可能的实现方式中示出的容器平台运维方法各个执行步骤和相应的技术效果，请参照图3，图3示出了本申请实施例提出的容器平台运维系统的示意图，该系统包括：计划模块，用于利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息；计划模块，还用于利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径；执行模块，用于将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。其中，图3中计划模块在得到输入的自然语言指令之后进行结构化执行信息的提取，在符合大模型抽取结果协议的情况下结合系统对象关系图进行遍历得到多条路径，然后结合结构化执行信息和系统动作表整合参数及多条路径，在此期间构建模板式询问确认是否缺失参数，若缺失则用户在展示界面中将缺乏的变量交互输入至计划模块中，经过构建模板式询问返回至整合路径及参数中，再进行最优路径的选取。接下来执行模块执行，结合系统动作表采用单步调用执行将最优路径的结构化执行信息与系统动作表进行循环匹配得到系统API信息，利用运行参数缓存对API信息进行API调用得到API调用类型，最后利用回答模板构建模板式回答，将生成结果以模板的形式展示给用户，同时通过API调用类型来调取网页或者输出自然语言。在一种可能的实施方式中，计划模块，具体用于：利用大语言模型理解并提取结构化执行信息，并根据结构化执行信息遍历系统对象关系图得到多条可执行路径；利用结构化执行信息为每条可执行路径添加从系统动作表中获取的参数和约束条件，得到多条多步骤可执行路径；利用大语言模型从多条多步骤可执行路径中选取最优路径。在一种可能的实施方式中，执行模块，具体用于：将最优路径的结构化执行信息与系统动作表进行循环匹配得到系统API信息；将系统API信息结合运行参数缓存进行API调用得到API调用类型；根据API调用输出对应的API调用结果。在一种可能的实施方式中，API调用类型包括对象列表和网页URL，执行模块，具体用于：根据对象列表输出处理后的自然语言结果；根据网页URL调取网页。因此本申请公开的容器平台运维系统，计划模块利用大语言模型对输入的自然语言指令进行提取得到结构化执行信息，然后利用大语言模型提取结构化执行信息生成多条多步骤可执行路径，从多条多步骤可执行路径中选取最优路径，最后执行模块将最优路径的结构化执行信息结合系统动作表和运行参数缓存进行API调用，输出API调用结果。通过利用大语言模型的理解能力和知识存储能力，将输入的自然语言方式由程序自动转换到执行计划及API的调用，进而达到降低管理系统的难度，减轻运维的效果，只需进行简单描述便能实现批量化操作。以上所述仅为本申请的较佳实施例而已，并不用以限制本申请，凡在本申请的精神和原则之内所作的任何修改、等同替换和改进等，均应包含在本申请的保护范围之内。
