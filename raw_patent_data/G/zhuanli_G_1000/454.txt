标题title
一种UML波形平台的设计方法
摘要abst
本申请属于软件无线电通信技术领域，涉及一种UML波形平台的设计方法，本发明通过UML图形化开发的方式对SCA平台进行抽象设计开发，不仅减少代码开发的依赖，把完整的组件模型通过拖动和点击的方式进行创建，还可将属性配置和端口创建等功能全部集成到组件的创建开发功能当中；本发明使用基于UML的SCA平台设计开发方式，针对不同的平台，可通过不对任何真实硬件设备进行调整的情况下，将平台抽象放入软件当中，以模型的形式体现，而Platform平台工程也可在后续遇到不同的系统平台时不断扩展，把每个不同的平台封装成一个个独立却又能相互关联的节点，彻底体现出SCA的核心优势，以及平台的可重用性和波形的可移植性。
权利要求书clms
1.一种UML波形平台的设计方法，其特征在于，包括如下步骤：UML框架搭建：根据实际需求创建插件工程，在插件工程中创建基于UML规范的Model文件夹；完成Model文件夹的创建后，通过创建基础Class类、扩展Class类、领域Class类以及上述类的Stereotypes扩展和对应的Attribute属性，完成一个基础架构的建设；SCA平台模型创建：在E-Spectra CX IDE 插件中创建SCA4.1模型工程；在模型文件夹中创建对应的平台组件包SCA Platform；在平台组件包SCA Platform中创建三个SCA CF核心控制组件并设置属性；三个所述SCA CF核心控制组件分别为域管理器DomainManager，设备管理器DeviceManager以及日志服务组件LogService；SCA节点创建：在包含平台组件包SCA Platform的同级目录中，创建SCA Node节点，并将创建好的三个SCA CF核心控制组件和按需求创建好的设备组件放入SCA Node节点中；SCA平台创建：在Model文件夹中创建SCA Platform平台，并将参数以SCA CF核心控制组件中配置的域参数匹配。2.根据权利要求1所述的一种UML波形平台的设计方法，其特征在于，所述SCA平台模型创建还包括：完成SCA CF核心控制组件和属性设置后，将系统平台中所包含的设备，逐一创建成组件。3.根据权利要求2所述的一种UML波形平台的设计方法，其特征在于，所述逐一创建成组件的创建方式如下：在平台组件包SCA Platform中创建SCA4 Component组件，选择对应type类型，完成单个组件的创建，并在创建好的组件中设置对应的properties。4.根据权利要求1所述的一种UML波形平台的设计方法，其特征在于，在完成SCA平台创建后，还包括完善平台：打开SCA Platform平台展示图，将已创建好的节点拖入SCA Platform平台展示图中进行验证，验证通过则代表创建无误，验证未通过则根据报错提示修改，直至通过验证为止。5.根据权利要求1所述的一种UML波形平台的设计方法，其特征在于，所述SCA节点创建完成后还包括对SCA Node节点进行验证：对整个SCA Node节点进行验证，验证通过即代表完全符合SCA4.1标准，若验证未通过，则根据报错提示修改后直至验证通过为止。
说明书desc
技术领域本申请属于软件无线电通信技术领域，更具体地说，涉及一种UML波形平台的设计方法。背景技术软件无线电是一种以软件为基础的无线电通信体系结构，它支持多频段、多模式、多波形，具有很好的灵活性和适应性；然而传统的软件无线电波形平台设计方法通常以来手动编程，缺乏标准化、可视化设计，给开发带来一定的困难。发明内容本发明提供了一种UML波形平台的设计方法，拟解决目标软件无线电波形平台设计方法通常采用手动编程、缺乏标准化、可视化设计的技术问题。一种UML波形平台的设计方法，包括如下步骤：UML框架搭建：根据实际需求创建插件工程，在插件工程中创建基于UML规范的Model文件夹；完成Model文件夹的创建后，通过创建基础Class类、扩展Class类、领域Class类以及上述类的Stereotypes扩展和对应的Attribute属性，完成一个基础架构的建设；SCA平台模型创建：在E-Spectra CX IDE 插件中创建SCA4.1模型工程；在模型文件夹中创建对应的平台组件包SCA Platform；在平台组件包SCA Platform中创建三个SCA CF核心控制组件并设置属性；三个所述SCA CF核心控制组件分别为域管理器DomainManager，设备管理器DeviceManager以及日志服务组件LogService；SCA节点创建：在包含平台组件包SCA Platform的同级目录中，创建SCA Node节点，并将创建好的三个SCA CF核心控制组件和按需求创建好的设备组件放入SCA Node节点中；SCA平台创建：在Model文件夹中创建SCA Platform平台，并将参数以SCA CF控制组件中配置的域参数匹配。本发明通过UML图形化开发的方式对SCA平台进行抽象设计开发，不仅减少代码开发的依赖，把完整的组件模型通过拖动和点击的方式进行创建，还可将属性配置和端口创建等功能全部集成到组件的创建开发功能当中；而针对SCA Platform和SCA Node的设计，可将SCA Platform 想象成一个完整的系统平台，而SCA Node作为SCA Platform中的一个子系统，或者作为其中一块硬件板卡；故本发明使用基于UML的SCA平台设计开发方式，针对不同的平台，可通过不对任何真实硬件设备进行调整的情况下，将平台抽象放入软件当中，以模型的形式体现，而Platform平台工程也可在后续遇到不同的系统平台时不断扩展，把每个不同的平台封装成一个个独立却又能相互关联的节点，彻底体现出SCA的核心优势，以及平台的可重用性和波形的可移植性。优选的，所述SCA平台模型创建还包括：完成SCA CF核心控制组件和属性设置后，将系统平台中所包含的设备，逐一创建成组件。优选的，所述逐一创建成组件的创建方式如下：在平台组件包SCA Platform中创建SCA4 Component组件，选择对应type类型，完成单个组件的创建，并在创建好的组件中设置对应的properties。优选的，在完成SCA平台创建后，还包括完善平台：打开SCA Platform平台展示图，将已创建好的节点拖入SCA Platform平台展示图中进行验证，验证通过则代表创建无误，验证未通过则根据报错提示修改，直至通过验证为止。优选的，所述SCA节点创建完成后还包括对SCA Node节点进行验证：对整个SCA Node节点进行验证，验证通过即代表完全符合SCA4.1标准，若验证未通过，则根据报错提示修改后直至验证通过为止。本发明的有益效果包括：本发明通过UML图形化开发的方式对SCA平台进行抽象设计开发，不仅减少代码开发的依赖，把完整的组件模型通过拖动和点击的方式进行创建，还可将属性配置和端口创建等功能全部集成到组件的创建开发功能当中；而针对SCA Platform和SCA Node的设计，可将SCA Platform 想象成一个完整的系统平台，而SCA Node作为SCA Platform中的一个子系统，或者作为其中一块硬件板卡；故本发明使用基于UML的SCA平台设计开发方式，针对不同的平台，可通过不对任何真实硬件设备进行调整的情况下，将平台抽象放入软件当中，以模型的形式体现，而Platform平台工程也可在后续遇到不同的系统平台时不断扩展，把每个不同的平台封装成一个个独立却又能相互关联的节点，彻底体现出SCA的核心优势，以及平台的可重用性和波形的可移植性。附图说明为了更清楚地说明本申请实施例中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。图1是本发明实施例提供的流程框图。具体实施方式为了使本申请所要解决的技术问题、技术方案及有益效果更加清楚明白，以下结合附图及实施例，对本申请进行进一步详细说明。应当理解，此处所描述的具体实施例仅仅用以解释本申请，并不用于限定本申请。需要说明的是，当元件被称为“固定于”或“设置于”另一个元件，它可以直接在另一个元件上或者间接在该另一个元件上。当一个元件被称为是“连接于”另一个元件，它可以是直接连接到另一个元件或间接连接至该另一个元件上。需要理解的是，术语“长度”、“宽度”、“上”、“下”、“前”、“后”、“左”、“右”、“竖直”、“水平”、“顶”、“底”、“内”、“外”等指示的方位或位置关系为基于附图所示的方位或位置关系，仅是为了便于描述本申请和简化描述，而不是指示或暗示所指的装置或元件必须具有特定的方位、以特定的方位构造和操作，因此不能理解为对本申请的限制。此外，术语“第一”、“第二”仅用于描述目的，而不能理解为指示或暗示相对重要性或者隐含指明所指示的技术特征的数量。由此，限定有“第一”、“第二”的特征可以明示或者隐含地包括一个或者更多个该特征。在本申请的描述中，“多个”的含义是两个或两个以上，除非另有明确具体的限定。参见图1，一种UML波形平台的设计方法，包括如下步骤：UML框架搭建：根据实际需求创建插件工程，在插件工程中创建基于UML规范的Model文件夹；完成Model文件夹的创建后，通过创建基础Class类、扩展Class类、领域Class类以及上述类的Stereotypes扩展和对应的Attribute属性，完成一个基础架构的建设；SCA平台模型创建：在E-Spectra CX IDE 插件中创建SCA4.1模型工程；在模型文件夹中创建对应的平台组件包SCA Platform；在平台组件包SCA Platform中创建三个SCA CF核心控制组件并设置属性；三个所述SCA CF核心控制组件分别为域管理器DomainManager，设备管理器DeviceManager以及日志服务组件LogService；所述SCA平台模型创建还包括：完成SCA CF核心控制组件和属性设置后，将系统平台中所包含的设备，逐一创建成组件。所述逐一创建成组件的创建方式如下：在平台组件包SCA Platform中创建SCA4 Component组件，选择对应type类型，完成单个组件的创建，并在创建好的组件中设置对应的properties。SCA节点创建：在包含平台组件包SCA Platform的同级目录中，创建SCA Node节点，并将创建好的3个SCA CF核心控制组件、GPP设备、DSP设备和FPGA设备放入SCA Node节点中；所述节点创建完成后还包括对节点进行验证：对整个节点进行验证，验证通过即代表无误，若验证未通过，则根据报错提示修改后直至验证通过为止。SCA平台创建：在Model文件夹中创建SCA Platform平台，并将参数以SCA CF控制组件中配置的域参数匹配。在完成SCA平台创建后，还包括完善平台：打开SCA Platform平台展示图，将已创建好的节点拖入SCA Platform平台展示图中进行验证，验证通过则代表创建无误，验证未通过则根据报错提示修改，直至通过验证为止。本发明通过UML图形化开发的方式对SCA平台进行抽象设计开发，不仅减少代码开发的依赖，把完整的组件模型通过拖动和点击的方式进行创建，还可将属性配置和端口创建等功能全部集成到组件的创建开发功能当中；而针对SCA Platform和SCA Node的设计，可将SCA Platform 想象成一个完整的系统平台，而SCA Node作为SCA Platform中的一个子系统，或者作为其中一块硬件板卡；故本发明使用基于UML的SCA平台设计开发方式，针对不同的平台，可通过不对任何真实硬件设备进行调整的情况下，将平台抽象放入软件当中，以模型的形式体现，而Platform平台工程也可在后续遇到不同的系统平台时不断扩展，把每个不同的平台封装成一个个独立却又能相互关联的节点，彻底体现出SCA的核心优势，以及平台的可重用性和波形的可移植性。基于UML图形化开发的方式对软无平台架构进行合理设计，完美契合了SCA的优势--平台的可重用性、波形的可移植性，即在使用不同系统的情况下，可通过此方法对设备进行抽象，使其成为独立的个体组件，将抽象完成的每个组件放入平台内的节点中，每个节点均可代表一个板卡或一个子系统，而平台可代表一个系统或有多个子系统组成的完整系统平台。这种方法不仅避免了对于手动编程的依赖，同时提供了软件无线电平台的可视化开发，且为平台的重用或扩展提供了最为便利且高效的方式。以上仅为本申请的较佳实施例而已，并不用以限制本申请，凡在本申请的精神和原则之内所作的任何修改、等同替换和改进等，均应包含在本申请的保护范围之内。
