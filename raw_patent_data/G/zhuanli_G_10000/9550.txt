标题title
一种内存快照文件的压缩、解压缩方法及相关装置
摘要abst
本发明实施例提供了一种内存快照文件的压缩、解压缩方法及相关装置，该压缩方法包括：若检测到内存符合预设的触发条件，则获取内存快照文件HPROF，读取在内存快照文件HPROF中记录的原始数据，在原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据，将第二目标数据写入快照压缩文件中，在压缩时删除第一目标数据、保留第二目标数据，删除第一目标数据并不影响使用第二目标数据进行OOM分析，因此，快照压缩文件可正常执行OOM分析，快照压缩文件的体积相比于内存快照文件HPROF的体积大大减少，从而大大减少在传输快照压缩文件时耗费的流量，并维持较高的传输成功率。
权利要求书clms
1.一种内存快照文件的压缩方法，其特征在于，包括：若检测到内存符合预设的触发条件，则获取内存快照文件HPROF；读取在所述内存快照文件HPROF中记录的原始数据；在所述原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据；将所述第二目标数据写入快照压缩文件中。2.根据权利要求1所述的方法，其特征在于，所述触发条件包括如下的至少一种：发生内存溢出、内存的使用率大于或等于预设的阈值。3.根据权利要求1所述的方法，其特征在于，所述在所述原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据，包括：从所述原始数据读取第一标签；将所述第一标签与预设的第二标签进行对比，所述第二标签关联与内存溢出无关的数据所处的字段；若所述第一标签与所述第二标签相同，则在属于所述第一标签的所述原始数据中删除所述字段对应的第一目标数据、以保留与内存溢出相关的第二目标数据。4.根据权利要求3所述的方法，其特征在于，所述第一标签包括第一父标签、归属所述第一父标签的第一子标签，所述第二标签包括第二父标签、归属所述第二父标签的第二子标签；所述将所述第一标签与预设的第二标签进行对比，包括：将所述第一父标签与所述第二父标签进行对比；若所述第一父标签与所述第二父标签相同，则读取归属所述第一父标签的第一子标签；将所述第一子标签与所述第二子标签进行对比；若所述第一子标签与所述第二子标签相同，则确定所述第二标签与所述第一标签相同。5.根据权利要求3所述的方法，其特征在于，所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的所有字段；或者，所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的部分字段。6.根据权利要求3或4或5所述的方法，其特征在于，所述若所述第一标签与所述第二标签相同，则在属于所述第一标签的所述原始数据中删除所述字段对应的第一目标数据、以保留与内存溢出相关的第二目标数据，包括：若所述第一标签与所述第二标签均为堆栈帧，则在属于所述堆栈帧的所述原始数据中删除所有字段对应的第一目标数据；和/或，若所述第一标签与所述第二标签均为堆栈跟踪，则在属于所述堆栈跟踪的所述原始数据中删除所有字段对应的第一目标数据；和/或，若所述第一标签与所述第二标签均为加载类，则在属于所述加载类的所述原始数据中删除表示堆栈跟踪的序列号的字段对应的第一目标数据；和/或，若所述第一标签与所述第二标签均为堆快照或堆快照片段下的类快照，则在属于所述类快照的所述原始数据中分别删除如下至少一个字段对应的第一目标数据：表示堆栈跟踪的序列号的字段、表示签名者对象编号的字段、表示保护域对象编号的字段、表示保留内容的字段；和/或，若所述第一标签与所述第二标签均为堆快照或堆快照片段下的实例快照，则在属于所述实例快照的所述原始数据中删除表示堆栈跟踪的序列号的所述字段对应的第一目标数据；和/或，若所述第一标签与所述第二标签均为堆快照或堆快照片段下的对象数组快照，则在属于所述对象数组快照的所述原始数据中删除表示堆栈跟踪的序列号的所述字段对应的第一目标数据；和/或，若所述第一标签与所述第二标签均为堆快照或堆快照片段下的基元数组快照，则在属于所述基元数组快照的所述原始数据中删除如下至少一个字段对应的第一目标数据：表示堆栈跟踪的序列号的字段、表示元素的字段。7.一种内存快照文件的解压缩方法，其特征在于，包括：获取快照压缩文件；从所述快照压缩文件中读取与内存溢出相关的第二目标数据；将所述第二目标数据写入内存快照文件HPROF中；在所述内存快照文件HPROF写入与内存溢出无关的第一目标数据。8.根据权利要求7所述的方法，其特征在于，所述在所述内存快照文件HPROF写入与内存溢出无关的第一目标数据，包括：从所述内存快照文件HPROF中读取第一标签；将所述第一标签与预设的第二标签进行对比，所述第二标签关联与内存溢出无关的数据所处的字段；若所述第一标签与所述第二标签相同，则将预设的字符作为第一目标数据写入所述第一标签中的所述字段。9.根据权利要求8所述的方法，其特征在于，所述将预设的字符作为第一目标数据写入所述第一标签中的所述字段，包括：若所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的所有字段，则忽略将预设的字符作为第一目标数据写入所述第一标签中的所有所述字段；若所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的部分字段，则将预设的字符作为第一目标数据写入所述第一标签中的部分所述字段。10.根据权利要求8或9所述的方法，其特征在于，所述若所述第一标签与所述第二标签相同，则将预设的字符作为第一目标数据写入所述第一标签中的所述字段，包括：若所述第一标签与所述第二标签均为加载类，则将预设的字符作为第一目标数据写入所述加载类中表示堆栈跟踪的序列号的字段；和/或，若所述第一标签与所述第二标签均为堆快照或堆快照片段下的类快照，则将预设的字符作为第一目标数据写入所述类快照中如下至少一个字段：表示堆栈跟踪的序列号的字段、表示签名者对象编号的字段、表示保护域对象编号的字段、表示保留内容的字段；和/或，若所述第一标签与所述第二标签均为堆快照或堆快照片段下的实例快照，则将预设的字符作为第一目标数据写入所述实例快照中表示堆栈跟踪的序列号的字段；和/或，若所述第一标签与所述第二标签均为堆快照或堆快照片段下的对象数组快照，则将预设的字符作为第一目标数据写入所述对象数组快照中表示堆栈跟踪的序列号的字段；和/或，若所述第一标签与所述第二标签均为堆快照或堆快照片段下的基元数组快照，则将预设的字符作为第一目标数据写入所述基元数组快照中如下至少一个字段：表示堆栈跟踪的序列号的字段、表示元素的字段。11.一种内存快照文件的压缩装置，其特征在于，包括：内存快照文件获取模块，用于若检测到内存符合预设的触发条件，则获取内存快照文件HPROF；原始数据读取模块，用于读取在所述内存快照文件HPROF中记录的原始数据；目标数据删除模块，用于在所述原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据；快照压缩文件生成模块，用于将所述第二目标数据写入快照压缩文件中。12.一种内存快照文件的解压缩装置，其特征在于，包括：快照压缩文件获取模块，用于获取快照压缩文件；目标数据读取模块，用于从所述快照压缩文件中读取与内存溢出相关的第二目标数据；内存快照文件生成模块，用于将所述第二目标数据写入内存快照文件HPROF中；内存快照文件补充模块，用于在所述内存快照文件HPROF写入与内存溢出无关的第一目标数据。13.一种计算机设备，其特征在于，所述计算机设备包括：一个或多个处理器；存储器，用于存储一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行，使得所述一个或多个处理器实现如权利要求1-6中任一项所述的内存快照文件的压缩方法，或者，如权利要求7-10中任一项所述的内存快照文件的解压缩方法。14.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质上存储计算机程序，所述计算机程序被处理器执行时实现如权利要求1-6中任一项所述的内存快照文件的压缩方法，或者，如权利要求7-10中任一项所述的内存快照文件的解压缩方法。
说明书desc
技术领域本发明实施例涉及内存处理的技术领域，尤其涉及一种内存快照文件的压缩、解压缩方法及相关装置。背景技术随着移动终端的普及，用户在移动终端中安装各种各样的应用程序，这些应用程序中在运行过程当中可能会发生崩溃，出现闪退的情况。应用程序崩溃的一部分原因是OOM，OOM相对于一般的Exception或者Error都要难一些，主要是由于错误产生的根源不是很显而易见。应用程序发生OOM时，将内存dump文件上传至服务端，技术人员针对HPROF文件进行分析，但是，HPROF文件的体积一般很大，从几十上百兆不等，甚至可能几百兆，耗费的流量较多，而且，传输成功率较低。发明内容本发明实施例提出了一种内存快照文件的压缩、解压缩方法及相关装置，以解决如何降低分析OOM所需的HPROF文件的体积的问题。第一方面，本发明实施例提供了一种内存快照文件的压缩方法，包括：若检测到内存符合预设的触发条件，则获取内存快照文件HPROF；读取在所述内存快照文件HPROF中记录的原始数据；在所述原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据；将所述第二目标数据写入快照压缩文件中。第二方面，本发明实施例还提供了一种内存快照文件的解压缩方法，包括：获取快照压缩文件；从所述快照压缩文件中读取与内存溢出相关的第二目标数据；将所述第二目标数据写入内存快照文件HPROF中；在所述内存快照文件HPROF写入与内存溢出无关的第一目标数据。第三方面，本发明实施例还提供了一种内存快照文件的压缩装置，包括：内存快照文件获取模块，用于若检测到内存符合预设的触发条件，则获取内存快照文件HPROF；原始数据读取模块，用于读取在所述内存快照文件HPROF中记录的原始数据；目标数据删除模块，用于在所述原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据；快照压缩文件生成模块，用于将所述第二目标数据写入快照压缩文件中。第四方面，本发明实施例还提供了一种内存快照文件的解压缩装置，包括：快照压缩文件获取模块，用于获取快照压缩文件；目标数据读取模块，用于从所述快照压缩文件中读取与内存溢出相关的第二目标数据；内存快照文件生成模块，用于将所述第二目标数据写入内存快照文件HPROF中；内存快照文件补充模块，用于在所述内存快照文件HPROF写入与内存溢出无关的第一目标数据。第五方面，本发明实施例还提供了一种计算机设备，所述计算机设备包括：一个或多个处理器；存储器，用于存储一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行，使得所述一个或多个处理器实现如第一方面所述的内存快照文件的压缩，或者，如第二方面所述的内存快照文件的解压缩方法。第四方面，本发明实施例还提供了一种计算机可读存储介质，所述计算机可读存储介质上存储计算机程序，所述计算机程序被处理器执行时实现如第一方面所述的内存快照文件的压缩，或者，如第二方面所述的内存快照文件的解压缩方法。在本实施例中，若检测到内存符合预设的触发条件，则获取内存快照文件HPROF，读取在内存快照文件HPROF中记录的原始数据，在原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据，将第二目标数据写入快照压缩文件中，以是否与OOM相关在内存快照文件HPROF中区分出第一目标数据、第二目标数据，在压缩时删除第一目标数据、保留第二目标数据，删除第一目标数据的操作简单，在实现在作为客户端的计算机设备中，删除第一目标数据并不影响使用第二目标数据进行OOM分析，因此，快照压缩文件可正常执行OOM分析，删除第一目标数据之后，快照压缩文件的体积相比于内存快照文件HPROF的体积大大减少，从而大大减少在传输快照压缩文件时耗费的流量，并维持较高的传输成功率。附图说明图1为本发明实施例一提供的一种内存快照文件的压缩方法的流程图；图2为本发明实施例一提供的一种内存快照文件的压缩示意图；图3是本发明实施例二提供的一种内存快照文件的解压缩方法的流程图；图4A与图4B是本发明实施例二提供的一种内存快照文件的解压缩示意图；图5为本发明实施例三提供的一种内存快照文件的压缩装置的结构示意图；图6为本发明实施例四提供的一种内存快照文件的解压缩装置的结构示意图；图7为本发明实施例五提供的一种计算机设备的结构示意图。具体实施方式下面结合附图和实施例对本发明作进一步的详细说明。可以理解的是，此处所描述的具体实施例仅仅用于解释本发明，而非对本发明的限定。另外还需要说明的是，为了便于描述，附图中仅示出了与本发明相关的部分而非全部结构。实施例一图1为本发明实施例一提供的一种内存快照文件的压缩方法的流程图，本实施例可适用于在内存快照文件HPROF中删除与OOM无关的数据、实现压缩内存快照文件HPROF的情况，该方法可以由内存快照文件的压缩装置来执行，该内存快照文件的压缩装置可以由软件和/或硬件实现，可配置在计算机设备中，尤其为移动终端，可实现客户端Client的角色，例如，手机、平板电脑、智能穿戴设备，等等，具体包括如下步骤：步骤101、若检测到内存符合预设的触发条件，则获取内存快照文件HPROF。在本实施例中，计算机设备的操作系统包括Android、iOS、HarmonyOS等等，在这些操作系统中可以安装各种各样的应用程序，例如，直播应用、即时通讯软件、购物应用、短视频应用，等等。在这些应用程序中可以预先设置一个或多个触发条件，这些触发条件可以用于触发应用程序执行压缩内存快照文件HPROF的条件。示例性地，触发条件包括如下的至少一种：1、发生内存溢出当JVM因为没有足够的内存来为对象分配空间，并且垃圾回收器也已经没有空间可回收时，就会抛出表示OOM事件java.lang.OutOfMemoryError，应用程序在运行的过程中可以实时监听OOM事件java.lang.OutOfMemoryError。若监听到OOM事件java.lang.OutOfMemoryError，则可以认为内存当前的情况满足触发条件。2、内存的使用率大于或等于预设的阈值。应用程序在运行的过程中可以实时监听内存的使用率，将内存的使用率与预设的阈值进行比较，如果内存的使用率大于或等于该阈值，则可以认为内存当前的情况满足触发条件。进一步地，考虑到内存的使用率存在一定的波动，应用程序可以监听一段时间，采集多个内存的使用率，对多个内存的使用率计算平均值，将内存的使用率的平均值与预设的阈值进行比较，如果内存的使用率的平均值大于或等于该阈值，则可以认为内存当前的情况满足触发条件。当然，上述触发条件只是作为示例，在实施本发明实施例时，可以根据实际情况设置其它触发条件，本发明实施例对此不加以限制。另外，除了上述触发条件外，本领域技术人员还可以根据实际需要采用其它触发条件，本发明实施例对此也不加以限制。如果内存当前的情况满足预先设定的触发条件，则应用程序可以通过Debug.dumpHprofData等方法获取内存快照文件HPROF。内存快照文件HPROF是一个JVM本地代理库，通过一个命令行选项动态加载，在JVM启动时，成为JVM进程的一部分。在启动时通过提供内存快照文件HPROF的选项，定制内存快照文件HPROF采集的数据，其中，堆快照Heap Dump数据为JVM中的对象数据，主要包括普通的实例对象、类对象、数组对象等，产生的数据可以用文本或二进制格式存储在文件中，该文件记为内存快照文件HPROF。步骤102、读取在内存快照文件HPROF中记录的原始数据。在本实施中，如图2所示，可以在内存的空间中逐行从内存快照文件HPROF 210中读取其在先记录的数据，记为原始数据。步骤103、在原始数据中删除与内存溢出无关的第一目标数据、以保留与OOM相关的第二目标数据。一般情况下，内存快照文件HPROF本身携带了与OOM相关的数据，将内存快照文件HPROF导入MAT等OOM分析工具中，可分析这些数据，从而寻找发生OOM的原因。例如，在内存快照文件HPROF中查看前N类个中，含有对象、实例等目前的次数，次数越多代表占用内存越大，这些对象、实例等可能没有被自动回收或释放，长时间占用内存，并积压，到达一定程度就会引发OOM。以MAT为例，从overview视图看到各个对象Object占用的内存，从中找到占用内存的比例最高的对象，如果该比例比较高，则可以初步判断该对象的实例占据了大量内存，导致OOM。然后，点击overview视图下的Leak Suspects按钮，查看分析报告。从报告中看到某些类中引用的该对象共占用了的内存，从查找占用内存的最多的类。内存快照文件HPROF中除了与OOM相关的数据之外，还可能记录了其他类型的数据、冗余的数据等，这些数据均与OOM无关，不可用于OOM分析。在本实施例中，如图2所示，可以预先按照是否与OOM相关将内存快照文件HPROF210中的原始数据区分为两部分，一部分是内存快照文件HPROF中与OOM无关的原始数据、记为第一目标数据211，另一部分是内存快照文件HPROF中与OOM相关的原始数据、记为第二目标数据212。遍历内存快照文件HPROF，并在遍历内存快照文件HPROF的过程中，删除第一目标数据211，从而保留第二目标数据212。进一步地，内存快照文件HPROF中按照行业既定的格式记录原始数据，以二进制为例，二进制的存储格式中的基本字段是u1、u2、u4和u8，ID的大小实际上是由报头中的“标识符大小”字段决定的。二进制的存储格式以以下信息开始：后跟如下所示的一系列记录：u1TAG：表示记录的类型u4TIME：自标题中的时间戳记以来的微秒数u4LENGTH：跟随这个u4字段并属于这个记录的字节数*BODY：与上述u4字段中指定的字节数一样多在本发明的一个实施例中，可以预先记录内存快照文件HPROF中与OOM无关的数据所标记的标签Tag及其所处的字段，为便于区分，当前内存快照文件HPROF中读取的标签Tag记为第一标签，预先记录的与OOM无关的数据所标记的标签记为第二标签，第二标签关联与OOM无关的数据所处的字段。进一步地，随着内存快照文件HPROF的版本迭代更新，内存快照文件HPROF的字段内容可能会发生变化，本实施例可以根据内存快照文件HPROF的版本情况设置相应的字段、用以标记与OOM无关的数据，因此，第二标签关联的与OOM无关的字段，为第一标签下的所有字段，或者，第二标签关联的与OOM无关的字段，为第一标签下的部分字段，本实施例对此不加以限制。考虑到内存快照文件HPROF可支持单标签、也可以支持多标签，对于单标签的情况，第一标签为其本身、第二标签为其本身，对于多标签的情况，将第一标签中的父标签记为第一父标签、将第一标签中的子标签记为第一子标签，将第二标签中的父标签记为第二父标签、将第二标签中的子标签记为第二子标签，那么，第一标签包括第一父标签、归属第一父标签的第一子标签，第二标签包括第二父标签、归属第二父标签的第二子标签。示例性地，针对某个版本的内存快照文件HPROF，包括如下单标签：UTF8字符串STRING IN UTF8、加载类LOAD CLASS、未加载类UNLOAD CLASS、堆栈帧STACK FRAME、堆栈跟踪STACK TRACE、分配站点ALLOC SITES、堆摘要HEAP SUMMARY、开始线程START THREAD、终结线程END THREAD、堆转储结束HEAP DUMP END、CPU样本CPU SAMPLES、控制设置CONTROL SETTINGS。此外，该版本的内存快照文件HPROF中，堆快照HEAP DUMP或者堆快照片段HEAPDUMP SEGMENT属于父标签，其下包括如下子标签：根未知ROOT UNKNOWN、全球根JNI ROOT JNI GLOBAL、本地根JNI ROOT JNILOCAL、根Java框架ROOT JAVA FRAME、根原生堆栈ROOT NATIVE STACK、根粘类ROOT STICKYCLASS、根线块ROOT THREAD BLOCK、使用的根监视器ROOT MONITOR USED、根线程对象ROOTTHREAD OBJECT、类快照CLASS DUMP、实例快照INSTANCE DUMP、对象数组快照OBJECT ARRAYDUMP、基元数组快照PRIMITIVE ARRAY DUMP。那么，在本实施例中，步骤103可以包括如下步骤：步骤1031、从原始数据读取第一标签。在本实施例中，可以通过readUnsignedByte等方法，可以从原始数据读取到标签。如果该标签为单标签，则可以确认完成读取第一标签，通过该第一标签的格式读取各个字段下的原始数据。如果该标签为多标签，即该标签为第一父标签，则可以继续通过readUnsignedByte等方法读取该第一父标签下的标签，作为第一子标签，通过该第一父标签及第一子标签的格式读取各个字段下的原始数据。步骤1032、将第一标签与预设的第二标签进行对比。对于单标签，可以将第一标签依次与各个第二标签进行对比。若第一标签与某个第二标签相同，则可以删除与OOM无关的第一目标数据。若第一标签与所有第二标签均不相同，则可以确认归属该第一标签的原始数据为与OOM相关的第二目标数据，予以保留。对于多标签，可以将第一父标签依次与各个第二父标签进行对比。若第一父标签与某个第二父标签相同，则读取归属第一父标签的第一子标签，将第一子标签依次与该第二父标签下的各个第二子标签进行对比。若第一子标签与某个第二子标签相同，则可以确定第二标签与第一标签相同，可以删除与OOM无关的第一目标数据。若第一子标签与任一第二子标签均不相同，则可以确认归属该第一子标签的原始数据为与OOM相关的第二目标数据，予以保留。若第一父标签与所有第二父标签均不相同，则可以确认归属各个第一子标签的原始数据为与OOM相关的第二目标数据，予以保留。步骤1033、若第一标签与第二标签相同，则在属于第一标签的原始数据中删除字段对应的第一目标数据、以保留与内存溢出相关的第二目标数据。在第一标签与第二标签相同的情况下，则将属于第一标签的原始数据中指定字段对应的数据作为第一目标数据进行删除，在完成删除所有第一目标数据之后，即可得到内存溢出相关的第二目标数据。示例一：若第一标签与第二标签均为堆栈帧STACK FRAME，则在属于堆栈帧STACK FRAME的原始数据中删除所有字段对应的第一目标数据。本示例属于单标签，第二标签关联的与OOM无关的字段，为第一标签下的所有字段的情况。在分析OOM时，一般并不需要创建对象的堆栈，堆栈帧STACK FRAME表示当前线程的调用堆栈中的一个函数调用，在某个版本的内存快照文件HPROF中，堆栈帧STACK FRAME的格式如下：其中，0x04为堆栈帧STACK FRAME的标识，堆栈帧STACK FRAME包括如下字段：堆栈帧ID stack frame ID、方法名称字符串ID method name string ID、方法签名字符串ID method signature string ID、源文件名字符串ID source file namestring ID、类序列号class serial number。此外，线路编号line number、没有可用的线路信息no line informationavailable、未知位置unknown location、编译方法compiled method、本地方法nativemethod属于同一个字段。示例二：若第一标签与第二标签均为堆栈跟踪STACK TRACE，则在属于堆栈跟踪STACKTRACE的原始数据中删除所有字段对应的第一目标数据。本示例属于单标签，第二标签关联的与OOM无关的字段，为第一标签下的所有字段的情况。在分析OOM时，一般并不需要创建对象的堆栈，堆栈跟踪STACK TRACE表示一个堆栈跟踪，它是一个或多个堆栈帧的有序集合，在某个版本的内存快照文件HPROF中，堆栈跟踪STACK TRACE的格式如下：其中，0x05为堆栈跟踪STACK TRACE的标识，堆栈跟踪STACK TRACE包括如下字段：堆栈跟踪的序列号stack trace serial number、线程序列号thread serialnumber、帧数number of frames、一系列堆栈帧的ID series of stack frame ID's。因此，在压缩内存快照文件HPROF时，可以查找堆栈跟踪STACK TRACE下所有字段对应的原始数据，记为与OOM无关的第一目标数据，予以删除。示例三：若第一标签与第二标签均为加载类LOAD CLASS，则在属于加载类加载类LOADCLASS的原始数据中删除表示堆栈跟踪的序列号stack trace serial number的字段对应的第一目标数据。本示例属于单标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，加载类LOAD CLASS的格式如下：其中，0x02为加载类LOAD CLASS的标识，加载类LOAD CLASS包括堆栈跟踪的序列号stack trace serial number，即，堆栈跟踪STACK TRACE的ID，在删除堆栈跟踪STACKTRACE下的第一目标数据的情况下，将堆栈跟踪的序列号stack trace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除，删除堆栈跟踪的序列号stacktrace serial number之后，加载类LOAD CLASS的格式如下：示例四：若第一标签与第二标签均为堆快照HEAP DUMP或堆快照片段HEAP DUMPSEGMENT下的类快照CLASS DUMP，则在属于类快照CLASS DUMP的原始数据中分别删除如下至少一个字段对应的第一目标数据：表示堆栈跟踪的序列号stack trace serial number的字段、表示签名者对象编号signers object ID的字段、表示保护域对象编号protection domain object ID的字段、表示保留内容reserved的字段。本示例属于多标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，堆快照HEAP DUMP的标识为0x0C、堆快照片段HEAP DUMP SEGMENT的标识为0x1C，类快照CLASS DUMP的格式如下：其中，0x20为类快照CLASS DUMP的标识，类快照CLASS DUMP包括堆栈跟踪的序列号stack trace serial number，签名者对象编号signers object ID、保护域对象编号protection domain object ID、保留内容reserved。在删除堆栈跟踪STACK TRACE下的第一目标数据的情况下，将堆栈跟踪的序列号stack trace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除。签名者对象编号signers object ID为类的标记的ID，分析OOM时并不需要该信息，可将其对应的原始数据，记为与OOM无关的第一目标数据，予以删除。保护域对象编号protection domain object ID为类的ProtectionDomain，分析OOM时并不需要该信息，可将其对应的原始数据，记为与OOM无关的第一目标数据，予以删除。保留内容reserved在未记录与OOM相关的内容时，可将其对应的原始数据，记为与OOM无关的第一目标数据，予以删除。删除堆栈跟踪的序列号stack trace serial number，签名者对象编号signersobject ID、保护域对象编号protection domain object ID、保留内容reserved之后，类快照CLASS DUMP的格式如下：示例五：若第一标签与第二标签均为堆快照HEAP DUMP或堆快照片段HEAP DUMPSEGMENT下的实例快照INSTANCE DUMP，则在属于实例快照INSTANCEDUMP的原始数据中删除表示堆栈跟踪的序列号stack trace serial number的字段对应的第一目标数据。本示例属于多标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，堆快照HEAP DUMP的标识为0x0C、堆快照片段HEAP DUMP SEGMENT的标识为0x1C，实例快照INSTANCE DUMP的格式如下：其中，0x21为实例快照INSTANCE DUMP的标识，实例快照INSTANCE DUMP包括堆栈跟踪的序列号stack trace serial number，即，堆栈跟踪STACK TRACE的ID，在删除堆栈跟踪STACK TRACE下的第一目标数据的情况下，将堆栈跟踪的序列号stack trace serialnumber对应的原始数据，记为与OOM无关的第一目标数据，予以删除，删除堆栈跟踪的序列号stack trace serial number之后，实例快照INSTANCE DUMP的格式如下：示例六：若第一标签与第二标签均为堆快照HEAP DUMP或堆快照片段HEAP DUMPSEGMENT下的对象数组快照OBJECT ARRAY DUMP，则在属于对象数组快照OBJECT ARRAY DUMP的原始数据中删除表示堆栈跟踪的序列号stack trace serialnumber的字段对应的第一目标数据。本示例属于多标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，堆快照HEAP DUMP的标识为0x0C、堆快照片段HEAP DUMP SEGMENT的标识为0x1C，对象数组快照OBJECT ARRAY DUMP的格式如下：其中，0x22为对象数组快照OBJECT ARRAY DUMP的标识，对象数组快照OBJECTARRAY DUMP包括堆栈跟踪的序列号stack trace serial number，即，堆栈跟踪STACKTRACE的ID，在删除堆栈跟踪STACK TRACE下的第一目标数据的情况下，将堆栈跟踪的序列号stack trace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除，删除堆栈跟踪的序列号stack trace serial number之后，对象数组快照OBJECT ARRAYDUMP的格式如下：示例七：若第一标签与第二标签均为堆快照HEAP DUMP或堆快照片段HEAP DUMPSEGMENT下的基元数组快照PRIMITIVE ARRAY DUMP，则在属于基元数组快照PRIMITIVE ARRAY DUMP的原始数据中删除如下至少一个字段对应的第一目标数据：表示堆栈跟踪的序列号stack trace serial number的字段、表示元素elements的字段。本示例属于多标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，堆快照HEAP DUMP的标识为0x0C、堆快照片段HEAP DUMP SEGMENT的标识为0x1C，基元数组快照PRIMITIVE ARRAY DUMP的格式如下：其中，0x23为基元数组快照PRIMITIVE ARRAY DUM的标识，基元数组快照PRIMITIVE ARRAY DUM包括堆栈跟踪的序列号stack trace serial number，即，堆栈跟踪STACK TRACE的ID，在删除堆栈跟踪STACK TRACE下的第一目标数据的情况下，将堆栈跟踪的序列号stack trace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除。元素elements为数组中的数值，分析OOM时并不需要该信息，可将其对应的原始数据，记为与OOM无关的第一目标数据，予以删除。删除堆栈跟踪的序列号stack trace serial number、元素elements之后，基元数组快照PRIMITIVE ARRAY DUM的格式如下：当然，上述第二标签、字段及其压缩方式只是作为示例，在实施本发明实施例时，可以根据实际情况设置其它表示第二标签、字段及其压缩方式，本发明实施例对此不加以限制。另外，除了上述第二标签、字段及其压缩方式外，本领域技术人员还可以根据实际需要采用其它第二标签、字段及其压缩方式，本发明实施例对此也不加以限制。步骤104、将第二目标数据写入快照压缩文件中。如图2所示，在内存快照文件HPROF 210中的原始数据筛选出与OOM相关的第二目标数据212，则可以将该第二目标数据212按照预设的格式写入到一个新的文件中，该文件记为快照压缩文件zip.hprof 220。此时，快照压缩文件zip.hprof相比于内存快照文件HPROF，少了与OOM无关的第一目标数据，快照压缩文件zip.hprof的体积约为内存快照文件HPROF的体积的15％至65％，应用程序可以将快照压缩文件zip.hprof传输至服务端，进行OOM的分析。在本实施例中，若检测到内存符合预设的触发条件，则获取内存快照文件HPROF，读取在内存快照文件HPROF中记录的原始数据，在原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据，将第二目标数据写入快照压缩文件中，以是否与OOM相关在内存快照文件HPROF中区分出第一目标数据、第二目标数据，在压缩时删除第一目标数据、保留第二目标数据，删除第一目标数据的操作简单，在实现在作为客户端的计算机设备中，删除第一目标数据并不影响使用第二目标数据进行OOM分析，因此，快照压缩文件可正常执行OOM分析，删除第一目标数据之后，快照压缩文件的体积相比于内存快照文件HPROF的体积大大减少，从而大大减少在传输快照压缩文件时耗费的流量，并维持较高的传输成功率。实施例二图3为本发明实施例一提供的一种内存快照文件的解压缩方法的流程图，本实施例可适用于在快照压缩文件zip.hprof中添加与OOM无关的数据、实现快照压缩文件zip.hprof解压缩的情况，该方法可以由内存快照文件的压缩、解压缩装置来执行，该内存快照文件的解压缩装置可以由软件和/或硬件实现，可配置在计算机设备中，可实现服务端Server的角色，例如，服务器、工作站，等等，具体包括如下步骤：步骤301、获取快照压缩文件。在本实施例中，可以接收客户端在发生预设的触发条件时，上传的快照压缩文件zip.hprof，该快照压缩文件zip.hprof是内存快照文件HPROF压缩之后的文件。在压缩内存快照文件HPROF时，按照是否与OOM相关将内存快照文件HPROF中的原始数据区分为两部分，一部分是内存快照文件HPROF中与OOM无关的原始数据、记为第一目标数据，另一部分是内存快照文件HPROF中与OOM相关的原始数据、记为第二目标数据。那么，快照压缩文件zip.hprof是内存快照文件HPROF删除与OOM无关的第一目标数据之后、存储与OOM相关的第二目标数据的文件。步骤302、从快照压缩文件中读取与OOM相关的第二目标数据。在本实施中，如图4A、图4B所示，可以在内存的空间中逐行从快照压缩文件zip.hprof 410中读取其在先记录的数据，记为与OOM相关的第二目标数据412。步骤303、将第二目标数据写入内存快照文件HPROF中。在本实施例中，如图4A、图4B所示，可以生成一个空白的内存快照文件HPROF，该内存快照文件HPROF符合行业既定的格式。对于与OOM相关的第二目标数据412，可以按照行业既定的格式写入内存快照文件HPROF中。步骤304、在内存快照文件HPROF写入与OOM无关的第一目标数据。如图4A、图4B所示，内存快照文件HPROF中除了与OOM相关的第二目标数据412之外，本应该还记录了其他类型的数据、冗余的数据等与OOM无关的第一目标数据，由于在压缩内存快照文件HPROF时删除了与OOM无关的第一目标数据，为了让MAT等通用的OOM分析工具进行OOM分析，在本实施例中，可以按照一定的方式生成与OOM无关的第一目标数据，以及，将与OOM无关的第一目标数据按照行业既定的格式写入内存快照文件HPROF中，使得内存快照文件HPROF符合行业既定的格式，使得MAT等通用的OOM分析工具可以读取内存快照文件HPROF。需要说明的是，如果写入多个与OOM无关的第一目标数据，这些与OOM无关的第一目标数据可以相同，也可以不同，本实施例对此不加以限制。内存快照文件HPROF中按照行业既定的格式记录数据，以二进制为例，二进制的存储格式中的基本字段是u1、u2、u4和u8，ID的大小实际上是由报头中的“标识符大小”字段决定的。二进制的存储格式以以下信息开始：后跟如下所示的一系列记录：u1TAG：表示记录的类型u4TIME：自标题中的时间戳记以来的微秒数u4LENGTH：跟随这个u4字段并属于这个记录的字节数*BODY：与上述u4字段中指定的字节数一样多在本发明的一个实施例中，可以预先记录内存快照文件HPROF中与OOM无关的数据所标记的标签Tag及其所处的字段，为便于区分，正常的内存快照文件HPROF中读取的标签Tag记为第一标签，预先记录的与OOM无关的数据所标记的标签记为第二标签，第二标签关联与OOM无关的数据所处的字段。进一步地，随着内存快照文件HPROF的版本迭代更新，内存快照文件HPROF的字段内容可能会发生变化，本实施例可以根据内存快照文件HPROF的版本情况设置相应的字段、用以标记语与OOM无关的第一目标数据，因此，第二标签关联的与OOM无关的字段，为第一标签下的所有字段，或者，第二标签关联的与OOM无关的字段，为第一标签下的部分字段，本实施例对此不加以限制。考虑到内存快照文件HPROF可支持单标签、也可以支持多标签，对于单标签的情况，第一标签为其本身、第二标签为其本身，对于多标签的情况，将第一标签中的父标签记为第一父标签、将第一标签中的子标签记为第一子标签，将第二标签中的父标签记为第二父标签、将第二标签中的子标签记为第二子标签，那么，第一标签包括第一父标签、归属第一父标签的第一子标签，第二标签包括第二父标签、归属第二父标签的第二子标签。示例性地，针对某个版本的内存快照文件HPROF，包括如下单标签：UTF8字符串STRING IN UTF8、加载类LOAD CLASS、未加载类UNLOAD CLASS、堆栈帧STACK FRAME、堆栈跟踪STACK TRACE、分配站点ALLOC SITES、堆摘要HEAP SUMMARY、开始线程START THREAD、终结线程END THREAD、堆转储结束HEAP DUMP END、CPU样本CPU SAMPLES、控制设置CONTROL SETTINGS。此外，该版本的内存快照文件HPROF中，堆快照HEAP DUMP或者堆快照片段HEAPDUMP SEGMENT属于父标签，其下包括如下子标签：根未知ROOT UNKNOWN、全球根JNI ROOT JNI GLOBAL、本地根JNI ROOT JNILOCAL、根Java框架ROOT JAVA FRAME、根原生堆栈ROOT NATIVE STACK、根粘类ROOT STICKYCLASS、根线块ROOT THREAD BLOCK、使用的根监视器ROOT MONITOR USED、根线程对象ROOTTHREAD OBJECT、类快照CLASS DUMP、实例快照INSTANCE DUMP、对象数组快照OBJECT ARRAYDUMP、基元数组快照PRIMITIVE ARRAY DUMP。那么，在本实施例中，步骤304可以包括如下步骤：步骤3041、从内存快照文件HPROF中读取第一标签。在本实施例中，可以通过readUnsignedByte等方法，可以从原始数据读取到标签。如果该标签为单标签，则可以确认完成读取第一标签，通过该第一标签的格式读取各个字段下的原始数据。如果该标签为多标签，即该标签为第一父标签，则可以继续通过readUnsignedByte等方法读取该第一父标签下的标签，作为第一子标签。步骤3042、将第一标签与预设的第二标签进行对比。对于单标签，可以将第一标签依次与各个第二标签进行对比。若第一标签与某个第二标签相同，则可以写入与OOM无关的第一目标数据。若第一标签与所有第二标签均不相同，则可以确认该第一标签下为与OOM相关的第二目标数据。对于多标签，可以将第一父标签依次与各个第二父标签进行对比。若第一父标签与某个第二父标签相同，则读取归属第一父标签的第一子标签，将第一子标签依次与该第二父标签下的各个第二子标签进行对比。若第一子标签与某个第二子标签相同，则可以确定第二标签与第一标签相同，可以写入与OOM无关的第一目标数据。若第一子标签与任一第二子标签均不相同，则可以确认该第一子标签下为与OOM相关的第二目标数据。若第一父标签与所有第二父标签均不相同，则可以确认各个第一子标签下为与OOM相关的第二目标数据。步骤3043、若第一标签与第二标签相同，则将预设的字符作为第一目标数据写入第一标签中的字段。在第一标签与第二标签相同的情况下，则可以生成符合行业既定格式的字符，如“0”，该字符作为与OOM无关的第一目标数据，写入内存快照文件HPROF中、作为第一标签的字段。在一种情况中，如图4A所示，可以针对全部第二标签的字段生成字符，将这些字符作为第一目标数据411写入全部第一标签的字段，此时，生成的内存快照文件HPROF 420完全符合行业既定的格式，保证解压缩后内存快照文件HPROF在通用的OOM分析工具中可读。在另一种情况中，如果部分第二标签是整体性删除，部分OOM分析工具无法读取这部分第二标签对应的字段的情况下，仍然可以运行。那么，如图4B所示，可以针对部分第二标签的字段生成字符，将这些字符作为第一目标数据412写入部分第一标签的字段，此时，生成的内存快照文件HPROF 420大体符合行业既定的格式，保证解压缩后内存快照文件HPROF在至少部分OOM分析工具中可读。进一步而言，若第二标签关联的与内存溢出无关的字段，为第一标签下的所有字段，例如，堆栈帧STACK FRAME、堆栈跟踪STACK TRACE，等等，则可以忽略将预设的字符作为第一目标数据写入第一标签中的所有字段，以此减少解压缩的运算量，以及，减少解压缩后内存快照文件HPROF的体积，减少OOM分析工具的运算量，提高OOM分析工具的运行速度。若第二标签关联的与内存溢出无关的字段，为第一标签下的部分字段，则可以将预设的字符作为第一目标数据写入第一标签中的部分字段，以此保证正常执行OOM分析。示例一：若第一标签与第二标签均为加载类LOAD CLASS，则将预设的字符作为第一目标数据写入加载类LOAD CLASS中表示堆栈跟踪的序列号stack trace serial number的字段；本示例属于单标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，压缩后的加载类LOAD CLASS的格式如下：其中，0x02为加载类LOAD CLASS的标识，标准的加载类LOAD CLASS包括堆栈跟踪的序列号stack trace serial number，即，堆栈跟踪STACK TRACE的ID，在压缩内存快照文件HPROF时，删除堆栈跟踪STACK TRACE下的第一目标数据，连同将堆栈跟踪的序列号stacktrace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在加载类LOAD CLASS中将指定的字符按照行业既定的格式，作为堆栈跟踪的序列号stack trace serial number写入内存快照文件HPROF中，那么，解压缩后的加载类LOAD CLASS的格式如下：其中，value＝0表示在堆栈跟踪的序列号stack trace serial number中写入字符“0”。示例二：若第一标签与第二标签均为堆快照HEAP DUMP或堆快照片段HEAP DUMPSEGMENT下的类快照CLASS DUMP，则将预设的字符作为第一目标数据写入类快照CLASS DUMP中如下至少一个字段：表示堆栈跟踪的序列号stack trace serial number的字段、表示签名者对象编号signers object ID的字段、表示保护域对象编号protection domain object ID的字段、表示保留内容reserved的字段。本示例属于多标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，堆快照HEAP DUMP的标识为0x0C、堆快照片段HEAP DUMP SEGMENT的标识为0x1C，压缩后的类快照CLASS DUMP的格式如下：其中，0x20为类快照CLASS DUMP的标识，标准的类快照CLASS DUMP包括堆栈跟踪的序列号stack trace serial number，签名者对象编号signers object ID、保护域对象编号protection domain object ID、保留内容reserved。在压缩内存快照文件HPROF时，删除堆栈跟踪STACK TRACE下的第一目标数据，连同将堆栈跟踪的序列号stack trace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在类快照CLASS DUMP中将指定的字符按照行业既定的格式，作为堆栈跟踪的序列号stack trace serial number，写入内存快照文件HPROF中。签名者对象编号signers object ID为类的标记的ID，分析OOM时并不需要该信息，在压缩内存快照文件HPROF时可将其对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在类快照CLASS DUMP中将指定的字符按照行业既定的格式，作为签名者对象编号signers object ID，写入内存快照文件HPROF中。保护域对象编号protection domain object ID为类的ProtectionDomain，分析OOM时并不需要该信息，在压缩内存快照文件HPROF时，可将其对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在类快照CLASS DUMP中将指定的字符按照行业既定的格式，作为保护域对象编号protection domain object ID，写入内存快照文件HPROF中。保留内容reserved在未记录与OOM相关的内容时，在压缩内存快照文件HPROF时，可将其对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在类快照CLASS DUMP中将指定的字符按照行业既定的格式，作为保留内容reserved，写入内存快照文件HPROF中。在写入堆栈跟踪的序列号stack trace serial number，签名者对象编号signersobject ID、保护域对象编号protection domain object ID、保留内容reserved之后，解压缩后的类快照CLASS DUMP的格式如下：其中，value＝0表示在堆栈跟踪的序列号stack trace serial number，签名者对象编号signers object ID、保护域对象编号protection domain object ID、保留内容reserved中写入字符“0”。示例三：若第一标签与第二标签均为堆快照HEAP DUMP或堆快照片段HEAP DUMPSEGMENT下的实例快照INSTANCE DUMP，则将预设的字符作为第一目标数据写入实例快照INSTANCE DUMP中表示堆栈跟踪的序列号stack trace serial number的字段。本示例属于多标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，堆快照HEAP DUMP的标识为0x0C、堆快照片段HEAP DUMP SEGMENT的标识为0x1C，实例快照INSTANCE DUMP的格式如下：其中，0x21为实例快照INSTANCE DUMP的标识，标准的实例快照INSTANCE DUMP包括堆栈跟踪的序列号stack trace serial number，即，堆栈跟踪STACK TRACE的ID，在压缩内存快照文件HPROF时，删除堆栈跟踪STACK TRACE下的第一目标数据，连同将堆栈跟踪的序列号stack trace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在实例快照INSTANCE DUMP中将指定的字符按照行业既定的格式，作为堆栈跟踪的序列号stack trace serial number写入内存快照文件HPROF中，那么，解压缩后的实例快照INSTANCE DUMP的格式如下：其中，value＝0表示在堆栈跟踪的序列号stack trace serial number中写入字符“0”。示例四：若第一标签与第二标签均为堆快照HEAP DUMP或堆快照片段HEAP DUMPSEGMENT下的对象数组快照OBJECT ARRAY DUMP，则将预设的字符作为第一目标数据写入对象数组快照OBJECT ARRAY DUMP中表示堆栈跟踪的序列号stack traceserial number的字段。本示例属于多标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，堆快照HEAP DUMP的标识为0x0C、堆快照片段HEAP DUMP SEGMENT的标识为0x1C，压缩后的对象数组快照OBJECT ARRAY DUMP的格式如下：其中，0x22为对象数组快照OBJECT ARRAY DUMP的标识，标准的对象数组快照OBJECT ARRAY DUMP包括堆栈跟踪的序列号stack trace serial number，即，堆栈跟踪STACK TRACE的ID，在压缩内存快照文件HPROF时，删除堆栈跟踪STACK TRACE下的第一目标数据，连同将堆栈跟踪的序列号stack trace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在对象数组快照OBJECT ARRAY DUMP中将指定的字符按照行业既定的格式，作为堆栈跟踪的序列号stack trace serial number写入内存快照文件HPROF中，那么，解压缩后的对象数组快照OBJECT ARRAY DUMP的格式如下：其中，value＝0表示在堆栈跟踪的序列号stack trace serial number中写入字符“0”。示例五：若第一标签与第二标签均为堆快照HEAP DUMP或堆快照片段HEAP DUMPSEGMENT下的基元数组快照PRIMITIVE ARRAY DUMP，则将预设的字符作为第一目标数据写入基元数组快照PRIMITIVE ARRAY DUMP中如下至少一个字段：表示堆栈跟踪的序列号stack trace serial number的字段、表示元素number ofelements的字段。本示例属于多标签，第二标签关联的与OOM无关的字段，为第一标签下的部分字段的情况。在某个版本的内存快照文件HPROF中，堆快照HEAP DUMP的标识为0x0C、堆快照片段HEAP DUMP SEGMENT的标识为0x1C，压缩后的基元数组快照PRIMITIVE ARRAY DUMP的格式如下：其中，0x23为基元数组快照PRIMITIVE ARRAY DUMP的标识，标准的基元数组快照PRIMITIVE ARRAY DUMP包括堆栈跟踪的序列号stack trace serial number，即，堆栈跟踪STACK TRACE的ID，在压缩内存快照文件HPROF时，删除堆栈跟踪STACK TRACE下的第一目标数据，连同将堆栈跟踪的序列号stack trace serial number对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在基元数组快照PRIMITIVE ARRAY DUMP中将指定的字符按照行业既定的格式，作为堆栈跟踪的序列号stack trace serialnumber写入内存快照文件HPROF中。元素elements为数组中的数值，分析OOM时并不需要该信息，在压缩内存快照文件HPROF时，可将其对应的原始数据，记为与OOM无关的第一目标数据，予以删除，在本示例中，可以在基元数组快照PRIMITIVE ARRAY DUMP中将指定的字符按照行业既定的格式，作为元素elements写入内存快照文件HPROF中。那么，解压缩后的基元数组快照PRIMITIVE ARRAY DUMP的格式如下：其中，value＝0表示在堆栈跟踪的序列号stack trace serial number、元素elements中写入字符“0”。当然，上述第二标签、字段及其解压缩方式只是作为示例，在实施本发明实施例时，可以根据实际情况设置其它第二标签、字段及其解压缩方式，本发明实施例对此不加以限制。另外，除了上述第二标签、字段及其解压缩方式外，本领域技术人员还可以根据实际需要采用其它第二标签、字段及其解压缩方式，本发明实施例对此也不加以限制。此时，解压缩后的内存快照文件HPROF，与OOM无关的第一目标数据均为无意义的字符，解压缩后的内存快照文件HPROF的体积约为压缩前的内存快照文件HPROF的体积的15％至65％，将解压缩后的快照压缩文件zip.hprof导入MAT等OOM分析工具中，进行OOM分析。在本实施例中，获取快照压缩文件，从快照压缩文件中读取与内存溢出相关的第二目标数据，将第二目标数据写入内存快照文件HPROF中，在内存快照文件HPROF写入与内存溢出无关的第一目标数据，在压缩时删除第一目标数据、保留第二目标数据，使得快照压缩文件缺失第一目标数据，重新按照内存快照文件HPROF的既定格式重建内存快照文件HPROF，重新生成的第一目标数据并不影响使用第二目标数据进行OOM分析，因此，快照压缩文件可正常执行OOM分析，在压缩时删除第一目标数据，快照压缩文件的体积相比于原始的内存快照文件HPROF的体积大大减少，从而大大减少在传输快照压缩文件时耗费的流量，并维持较高的传输成功率。需要说明的是，对于方法实施例，为了简单描述，故将其都表述为一系列的动作组合，但是本领域技术人员应该知悉，本发明实施例并不受所描述的动作顺序的限制，因为依据本发明实施例，某些步骤可以采用其他顺序或者同时进行。其次，本领域技术人员也应该知悉，说明书中所描述的实施例均属于优选实施例，所涉及的动作并不一定是本发明实施例所必须的。实施例三图5为本发明实施例三提供的一种内存快照文件的压缩装置的结构框图，具体可以包括如下模块：内存快照文件获取模块501，用于若检测到内存符合预设的触发条件，则获取内存快照文件HPROF；原始数据读取模块502，用于读取在所述内存快照文件HPROF中记录的原始数据；目标数据删除模块503，用于在所述原始数据中删除与内存溢出无关的第一目标数据、以保留与内存溢出相关的第二目标数据；快照压缩文件生成模块504，用于将所述第二目标数据写入快照压缩文件中。在本发明实施例的一个示例中，所述触发条件包括如下的至少一种：发生内存溢出、内存的使用率大于或等于预设的阈值。在本发明的一个实施例中，所述目标数据删除模块503包括：原始标签读取模块，用于从所述原始数据读取第一标签；标签对比模块，用于将所述第一标签与预设的第二标签进行对比，所述第二标签关联与内存溢出无关的数据所处的字段；字段删除模块，用于若所述第一标签与所述第二标签相同，则在属于所述第一标签的所述原始数据中删除所述字段对应的第一目标数据、以保留与内存溢出相关的第二目标数据。在本发明的一个实施例中，所述第一标签包括第一父标签、归属所述第一父标签的第一子标签，所述第二标签包括第二父标签、归属所述第二父标签的第二子标签；所述标签对比模块包括：父标签对比模块，用于将所述第一父标签与所述第二父标签进行对比；子标签读取模块，用于若所述第一父标签与所述第二父标签相同，则读取归属所述第一父标签的第一子标签；子标签对比模块，用于将所述第一子标签与所述第二子标签进行对比；标签相同确定模块，用于若所述第一子标签与所述第二子标签相同，则确定所述第二标签与所述第一标签相同。在具体实现中，所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的所有字段；或者，所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的部分字段。在本发明的一个实施例中，所述字段删除模块包括：堆栈帧删除模块，用于若所述第一标签与所述第二标签均为堆栈帧，则在属于所述堆栈帧的所述原始数据中删除所有字段对应的第一目标数据；和/或，堆栈跟踪删除模块，用于若所述第一标签与所述第二标签均为堆栈跟踪，则在属于所述堆栈跟踪的所述原始数据中删除所有字段对应的第一目标数据；和/或，加载类删除模块，用于若所述第一标签与所述第二标签均为加载类，则在属于所述加载类的所述原始数据中删除表示堆栈跟踪的序列号的字段对应的第一目标数据；和/或，类快照删除模块，用于若所述第一标签与所述第二标签均为堆快照或堆快照片段下的类快照，则在属于所述类快照的所述原始数据中分别删除如下至少一个字段对应的第一目标数据：表示堆栈跟踪的序列号的字段、表示签名者对象编号的字段、表示保护域对象编号的字段、表示保留内容的字段；和/或，实例快照删除模块，用于若所述第一标签与所述第二标签均为堆快照或堆快照片段下的实例快照，则在属于所述实例快照的所述原始数据中删除表示堆栈跟踪的序列号的所述字段对应的第一目标数据；和/或，对象数组快照删除模块，用于若所述第一标签与所述第二标签均为堆快照或堆快照片段下的对象数组快照，则在属于所述对象数组快照的所述原始数据中删除表示堆栈跟踪的序列号的所述字段对应的第一目标数据；和/或，基元数组快照删除模块，用于若所述第一标签与所述第二标签均为堆快照或堆快照片段下的基元数组快照，则在属于所述基元数组快照的所述原始数据中删除如下至少一个字段对应的第一目标数据：表示堆栈跟踪的序列号的字段、表示元素的字段。本发明实施例所提供的内存快照文件的压缩装置可执行本发明任意实施例所提供的内存快照文件的压缩方法，具备执行方法相应的功能模块和有益效果。实施例四图6为本发明实施例四提供的一种内存快照文件的解压缩装置的结构框图，具体可以包括如下模块：快照压缩文件获取模块601，用于获取快照压缩文件；目标数据读取模块602，用于从所述快照压缩文件中读取与内存溢出相关的第二目标数据；内存快照文件生成模块603，用于将所述第二目标数据写入内存快照文件HPROF中；内存快照文件补充模块604，用于在所述内存快照文件HPROF写入与内存溢出无关的第一目标数据。在本发明的一个实施例中，所述目标数据读取模块602包括：目标标签读取模块，用于从所述内存快照文件HPROF中读取第一标签；标签对比模块，用于将所述第一标签与预设的第二标签进行对比，所述第二标签关联与内存溢出无关的数据所处的字段；字段填写模块，用于若所述第一标签与所述第二标签相同，则将预设的字符作为第一目标数据写入所述第一标签中的所述字段。在本发明的一个实施例中，所述第一标签包括第一父标签、归属所述第一父标签的第一子标签，所述第二标签包括第二父标签、归属所述第二父标签的第二子标签；所述标签对比模块包括：父标签对比模块，用于将所述第一父标签与所述第二父标签进行对比；子标签读取模块，用于若所述第一父标签与所述第二父标签相同，则读取归属所述第一父标签的第一子标签；子标签对比模块，用于将所述第一子标签与所述第二子标签进行对比；标签相同确定模块，用于若所述第一子标签与所述第二子标签相同，则确定所述第二标签与所述第一标签相同。在具体实现中，所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的所有字段；或者，所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的部分字段。在本发明的一个实施例中，所述字段填写模块包括：全部忽略模块，用于若所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的所有字段，则忽略将预设的字符作为第一目标数据写入所述第一标签中的所有所述字段；部分写入模块，用于若所述第二标签关联的与内存溢出无关的字段，为所述第一标签下的部分字段，则将预设的字符作为第一目标数据写入所述第一标签中的部分所述字段。在本发明的一个实施例中，所述字段填写模块包括：加载类写入模块，用于若所述第一标签与所述第二标签均为加载类，则将预设的字符作为第一目标数据写入所述加载类中表示堆栈跟踪的序列号的字段；和/或，类快照写入模块，用于若所述第一标签与所述第二标签均为堆快照或堆快照片段下的类快照，则将预设的字符作为第一目标数据写入所述类快照中如下至少一个字段：表示堆栈跟踪的序列号的字段、表示签名者对象编号的字段、表示保护域对象编号的字段、表示保留内容的字段；和/或，实例快照写入模块，用于若所述第一标签与所述第二标签均为堆快照或堆快照片段下的实例快照，则将预设的字符作为第一目标数据写入所述实例快照中表示堆栈跟踪的序列号的字段；和/或，对象数组快照写入模块，用于若所述第一标签与所述第二标签均为堆快照或堆快照片段下的对象数组快照，则将预设的字符作为第一目标数据写入所述对象数组快照中表示堆栈跟踪的序列号的字段；和/或，基元数组快照写入模块，用于若所述第一标签与所述第二标签均为堆快照或堆快照片段下的基元数组快照，则将预设的字符作为第一目标数据写入所述基元数组快照中如下至少一个字段：表示堆栈跟踪的序列号的字段、表示元素的字段。本发明实施例所提供的内存快照文件的解压缩装置可执行本发明任意实施例所提供的内存快照文件的解压缩方法，具备执行方法相应的功能模块和有益效果。实施例五图7为本发明实施例五提供的一种计算机设备的结构示意图。图7示出了适于用来实现本发明实施方式的示例性计算机设备12的框图。图7显示的计算机设备12仅仅是一个示例，不应对本发明实施例的功能和使用范围带来任何限制。如图7所示，计算机设备12以通用计算设备的形式表现。计算机设备12的组件可以包括但不限于：一个或者多个处理器或者处理单元16，系统存储器28，连接不同系统组件的总线18。总线18表示几类总线结构中的一种或多种，包括存储器总线或者存储器控制器，外围总线，图形加速端口，处理器或者使用多种总线结构中的任意总线结构的局域总线。举例来说，这些体系结构包括但不限于工业标准体系结构总线，微通道体系结构总线，增强型ISA总线、视频电子标准协会局域总线以及外围组件互连总线。计算机设备12典型地包括多种计算机系统可读介质。这些介质可以是任何能够被计算机设备12访问的可用介质，包括易失性和非易失性介质，可移动的和不可移动的介质。系统存储器28可以包括易失性存储器形式的计算机系统可读介质，例如随机存取存储器30和/或高速缓存存储器32。计算机设备12可以进一步包括其它可移动/不可移动的、易失性/非易失性计算机系统存储介质。仅作为举例，存储系统34可以用于读写不可移动的、非易失性磁介质。尽管图7中未示出，可以提供用于对可移动非易失性磁盘读写的磁盘驱动器，以及对可移动非易失性光盘读写的光盘驱动器。在这些情况下，每个驱动器可以通过一个或者多个数据介质接口与总线18相连。存储器28可以包括至少一个程序产品，该程序产品具有一组程序模块，这些程序模块被配置以执行本发明各实施例的功能。具有一组程序模块42的程序/实用工具40，可以存储在例如存储器28中，这样的程序模块42包括但不限于操作系统、一个或者多个应用程序、其它程序模块以及程序数据，这些示例中的每一个或某种组合中可能包括网络环境的实现。程序模块42通常执行本发明所描述的实施例中的功能和/或方法。计算机设备12也可以与一个或多个外部设备14通信，还可与一个或者多个使得用户能与该计算机设备12交互的设备通信，和/或与使得该计算机设备12能与一个或多个其它计算设备进行通信的任何设备通信。这种通信可以通过输入/输出接口22进行。并且，计算机设备12还可以通过网络适配器20与一个或者多个网络，广域网和/或公共网络，例如因特网)通信。如图所示，网络适配器20通过总线18与计算机设备12的其它模块通信。应当明白，尽管图中未示出，可以结合计算机设备12使用其它硬件和/或软件模块，包括但不限于：微代码、设备驱动器、冗余处理单元、外部磁盘驱动阵列、RAID系统、磁带驱动器以及数据备份存储系统等。处理单元16通过运行存储在系统存储器28中的程序，从而执行各种功能应用以及数据处理，例如实现本发明实施例所提供的内存快照文件的压缩、内存快照文件的解压缩方法。实施例六本发明实施例六还提供一种计算机可读存储介质，计算机可读存储介质上存储有计算机程序，该计算机程序被处理器执行时实现上述内存快照文件的压缩、内存快照文件的解压缩方法的各个过程，且能达到相同的技术效果，为避免重复，这里不再赘述。其中，计算机可读存储介质例如可以包括但不限于电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。计算机可读存储介质的更具体的例子包括：具有一个或多个导线的电连接、便携式计算机磁盘、硬盘、随机存取存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑磁盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。在本文件中，计算机可读存储介质可以是任何包含或存储程序的有形介质，该程序可以被指令执行系统、装置或者器件使用或者与其结合使用。注意，上述仅为本发明的较佳实施例及所运用技术原理。本领域技术人员会理解，本发明不限于这里所述的特定实施例，对本领域技术人员来说能够进行各种明显的变化、重新调整和替代而不会脱离本发明的保护范围。因此，虽然通过以上实施例对本发明进行了较为详细的说明，但是本发明不仅仅限于以上实施例，在不脱离本发明构思的情况下，还可以包括更多其他等效实施例，而本发明的范围由所附的权利要求范围决定。
