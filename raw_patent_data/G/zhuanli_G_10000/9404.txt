标题title
一种数据处理方法、装置、设备及介质
摘要abst
本公开涉及一种数据处理方法、装置、设备及介质，通过获取包括多个坐标点的点序列，对点序列进行插值处理，并利用插值处理后的点序列构建多维数据结构树，对获取的点序列进行抽稀处理，并对抽稀处理后的点序列进行插值处理，得到第一点序列，根据多维数据结构树和第一点序列，得到第一点序列中所有坐标点对应的高程，有效的减少了数据的存储，最大限度地确保了点序列中的高程信息，同时对高程信息进行了平滑处理，计算速度快，数据处理的效率高。
权利要求书clms
1.一种数据处理方法，其特征在于，包括：获取包括多个坐标点的点序列；对所述点序列进行插值，并利用所述插值后的点序列构建多维数据结构树；对所述点序列进行抽稀，并对所述抽稀后的点序列进行插值，得到第一点序列；根据所述多维数据结构树和所述第一点序列，得到所述第一点序列的高程。2.根据权利要求1所述的方法，其特征在于，所述对所述点序列进行插值，并利用所述插值后的点序列构建多维数据结构树，包括：根据所述点序列中的坐标点进行线性插值；根据所述插值后的点序列中的坐标点构建多维数据结构树。3.根据权利要求2所述的方法，其特征在于，所述根据所述点序列中的坐标点进行线性插值，包括：计算所述点序列中任意两个坐标点之间的欧氏距离；根据所述欧氏距离与预设密度，得到插值数量；根据所述插值数量以及所述点序列中任意两个坐标点，生成插值后的点序列。4.根据权利要求3所述的方法，其特征在于，所述根据所述欧氏距离与预设密度，得到插值数量，包括：根据所述欧氏距离与预设密度的乘积，得到所述点序列中待插入坐标点的插值数量。5.根据权利要求3所述的方法，其特征在于，所述根据所述插值数量以及所述点序列中任意两个坐标点，生成插值后的点序列，包括：根据所述点序列中任意两个坐标点之间的差值以及所述插值数量，得到与所述插值数量对应的待插值的坐标点；根据所述待插值的坐标点以及所述点序列中的坐标点，生成插值后的点序列。6.根据权利要求2所述的方法，其特征在于，所述根据所述插值后的点序列中的坐标点构建多维数据结构树，包括：计算所述插值后的点序列中坐标点的中位数；根据所述中位数将所述点序列中坐标点分为两个区域，直到所述点序列中坐标点无法确定区域，生成多维数据结构树。7.根据权利要求1所述的方法，其特征在于，所述对所述点序列进行抽稀，具体包括：构建所述点序列中最小坐标点与最大坐标点之间的直线；统计所述点序列中坐标点到所述直线的距离，并确定最大距离；判断所述最大距离是否大于预设阈值，若是，则保留所述最大距离对应的坐标点；若否，则保留所述点序列中与所述直线对应的坐标点。8.根据权利要求1所述的方法，其特征在于，所述根据所述多维数据结构树和所述第一点序列，得到所述第一点序列的高程，包括：针对所述第一点序列中任一坐标点，在所述多维数据结构树中确定与所述坐标点相近的预设数量个坐标点；根据所述坐标点以及所述预设数量个坐标点中的子坐标点，确定所述子坐标点对应的权重；根据所述子坐标点对应的权重以及所述子坐标点对应的高程，得到所述坐标点的高程。9.根据权利要求8所述的方法，其特征在于，所述根据所述坐标点以及所述预设数量个坐标点中的子坐标点，确定所述子坐标点对应的权重，包括：计算所述坐标点与所述预设数量个坐标点中的子坐标点的差值，并将所述差值映射为权重；对所述权重进行归一化处理，确定所述子坐标点对应的权重。10.根据权利要求8所述的方法，其特征在于，所述根据所述子坐标点对应的权重以及所述子坐标点对应的高程，得到所述坐标点的高程，包括：计算所述子坐标点对应的权重与所述子坐标点对应的高程的乘积，并统计所述乘积的和，得到所述坐标点的高程。11.一种数据处理装置，其特征在于，包括：获取模块，用于获取包括多个坐标点的点序列；第一处理模块，用于对所述点序列进行插值，并利用所述插值后的点序列构建多维数据结构树；第二处理模块，用于对所述点序列进行抽稀，并对所述抽稀后的点序列进行插值，得到第一点序列；计算模块，用于根据所述多维数据结构树和所述第一点序列，得到所述第一点序列的高程。12.根据权利要求11所述的装置，其特征在于，所述第一处理模块具体用于：根据所述点序列中的坐标点进行线性插值；根据所述插值后的点序列中的坐标点构建多维数据结构树。13.根据权利要求11所述的装置，其特征在于，所述第二处理模块具体用于：构建所述点序列中最小坐标点与最大坐标点之间的直线；统计所述点序列中坐标点到所述直线的距离，并确定最大距离；判断所述最大距离是否大于预设阈值，若是，则保留所述最大距离对应的坐标点；若否，则保留所述点序列中与所述直线对应的坐标点。14.一种数据处理设备，其特征在于，包括：存储器；处理器；以及计算机程序；其中，所述计算机程序存储在所述存储器中，并被配置为由所述处理器执行以实现如权利要求1-10中任一所述的数据处理方法。15.一种计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1-10中任一所述的数据处理方法的步骤。
说明书desc
技术领域本公开涉及电子信息技术领域，尤其涉及一种数据处理方法、装置、设备及介质。背景技术现如今地理信息系统应用广泛，空间地理数据的数据量大，且存在大量的重复数据，因此，在使用地理数据之前经常需要对地理数据进行抽稀，在一定程度上保持地理数据的特征。目前，通常使用曲线抽稀算法进行抽稀，地理数据中包含的坐标点是三维数据，在三维空间表现为一条明显波动的曲线，但是采用现有技术会将有起伏的曲线抽稀为一条直线，从而丢失了地理数据中的高程信息，导致抽稀后的地理数据不精确，应用地理数据进行处理会出现误差。发明内容为了解决上述技术问题或者至少部分地解决上述技术问题，本公开提供了一种数据处理方法、装置、设备及介质。第一方面，本公开实施例提供了一种数据处理方法，包括：获取包括多个坐标点的点序列；对点序列进行插值，并利用插值后的点序列构建多维数据结构树；对点序列进行抽稀，并对抽稀后的点序列进行插值，得到第一点序列；根据多维数据结构树和第一点序列，得到第一点序列的高程。可选的，对点序列进行插值，并利用插值后的点序列构建多维数据结构树，包括：根据点序列中的坐标点进行线性插值；根据插值后的点序列中的坐标点构建多维数据结构树。可选的，根据点序列中的坐标点进行线性插值，包括：计算点序列中任意两个坐标点之间的欧氏距离；根据欧氏距离与预设密度，得到插值数量；根据插值数量以及点序列中任意两个坐标点，生成插值后的点序列。可选的，根据欧氏距离与预设密度，得到插值数量，包括：根据欧氏距离与预设密度的乘积，得到点序列中待插入坐标点的插值数量。可选的，根据插值数量以及点序列中任意两个坐标点，生成插值后的点序列，包括：根据点序列中任意两个坐标点之间的差值以及插值数量，得到与插值数量对应的待插值的坐标点；根据待插值的坐标点以及点序列中的坐标点，生成插值后的点序列。可选的，根据插值后的点序列中的坐标点构建多维数据结构树，包括：计算插值后的点序列中坐标点的中位数；根据中位数将点序列中坐标点分为两个区域，直到点序列中坐标点无法确定区域，生成多维数据结构树。可选的，对点序列进行抽稀，具体包括：构建点序列中最小坐标点与最大坐标点之间的直线；统计点序列中坐标点到直线的距离，并确定最大距离；判断最大距离是否大于预设阈值，若是，则保留最大距离对应的坐标点；若否，则保留点序列中与直线对应的坐标点。可选的，根据多维数据结构树和第一点序列，得到第一点序列的高程，包括：针对第一点序列中任一坐标点，在多维数据结构树中确定与坐标点相近的预设数量个坐标点；根据坐标点以及预设数量个坐标点中的子坐标点，确定子坐标点对应的权重；根据子坐标点对应的权重以及子坐标点对应的高程，得到坐标点的高程。可选的，根据坐标点以及预设数量个坐标点中的子坐标点，确定子坐标点对应的权重，包括：计算坐标点与预设数量个坐标点中的子坐标点的差值，并将差值映射为权重；对权重进行归一化处理，确定子坐标点对应的权重。可选的，根据子坐标点对应的权重以及子坐标点对应的高程，得到坐标点的高程，包括：计算子坐标点对应的权重与子坐标点对应的高程的乘积，并统计乘积的和，得到坐标点的高程。第二方面，本公开实施例提供一种数据处理装置，包括：获取模块，用于获取包括多个坐标点的点序列；第一处理模块，用于对点序列进行插值，并利用插值后的点序列构建多维数据结构树；第二处理模块，用于对点序列进行抽稀，并对抽稀后的点序列进行插值，得到第一点序列；计算模块，用于根据多维数据结构树和第一点序列，得到第一点序列的高程。可选的，第一处理模块具体用于：根据点序列中的坐标点进行线性插值；根据插值后的点序列中的坐标点构建多维数据结构树。可选的，第二处理模块具体用于：构建点序列中最小坐标点与最大坐标点之间的直线；统计点序列中坐标点到所述直线的距离，并确定最大距离；判断最大距离是否大于预设阈值，若是，则保留最大距离对应的坐标点；若否，则保留点序列中与直线对应的坐标点。第三方面，本公开实施例提供一种数据处理设备，包括：存储器；处理器；以及计算机程序；其中，计算机程序存储在存储器中，并被配置为由处理器执行以实现如上述的数据处理方法。第四方面，本公开实施例提供一种计算机可读存储介质，其上存储有计算机程序，计算机程序被处理器执行时实现如上述的数据处理方法的步骤。本公开实施例提供的一种数据处理方法、装置、设备及介质，通过获取包括多个坐标点的点序列，对点序列进行插值处理，并利用插值处理后的点序列构建多维数据结构树，对获取的点序列进行抽稀处理，并对抽稀处理后的点序列进行插值处理，得到第一点序列，根据多维数据结构树和第一点序列，得到第一点序列中所有坐标点对应的高程。数据处理方法通过对点序列进行插值处理，利用插值后的点序列构建多维数据结构树，同时对原始点序列进行抽稀处理，对抽稀后的点序列进行插值得到第一点序列，根据多维数据结构树计算第一点序列中每个坐标点的高程信息，完成数据抽稀处理，有效的减少了数据的存储空间，最大限度地确保了抽稀后点序列中的高程信息，同时对高程信息进行了平滑处理，计算速度快，数据处理的效率高。附图说明此处的附图被并入说明书中并构成本说明书的一部分，示出了符合本公开的实施例，并与说明书一起用于解释本公开的原理。为了更清楚地说明本公开实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，对于本领域普通技术人员而言，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。图1为本公开实施例提供的一种应用场景的示意图；图2为本公开实施例提供的一种数据处理方法的流程示意图；图3为本公开实施例提供的一种数据处理方法的流程示意图；图4为本公开实施例提供的一种数据处理方法的流程示意图；图5为本公开实施例提供的一种多维数据结构树的平面示意图；图6为本公开实施例提供的一种数据处理方法的流程示意图；图7为本公开实施例提供的一种数据处理方法的流程示意图；图8为本公开实施例提供的一种苏剧处理方法的结果示意图；图9为本公开实施例提供的一种数据处理装置的结构示意图；图10为本公开实施例提供的一种数据处理设备的结构示意图。具体实施方式为了能够更清楚地理解本公开的上述目的、特征和优点，下面将对本公开的方案进行进一步描述。需要说明的是，在不冲突的情况下，本公开的实施例及实施例中的特征可以相互组合。在下面的描述中阐述了很多具体细节以便于充分理解本公开，但本公开还可以采用其他不同于在此描述的方式来实施；显然，说明书中的实施例只是本公开的一部分实施例，而不是全部的实施例。现有技术中，在地理信息系统领域，经常需要对地理数据进行抽稀处理，由于获取的GIS数据在高程方向误差较大，一般多是在二维空间上使用曲线抽稀算法对GIS数据进行抽稀，而众多地理坐标系下的数据多是三维空间内的曲线，在XOY平面投影为直线、在Z轴上有明显波动的曲线，但是，直接对GIS数据进行抽稀会将其从有起伏的曲线拉成直线，极易造成GIS数据中的高程信息的丢失。具体的，图1为本公开实施例提供的一种应用场景的示意图，本实施例可适用于终端11进行数据处理的情况，该方法可以由数据处理装置执行，该装置可以采用软件和/或硬件的方式实现，该装置可配置于电子设备中，例如终端11，具体包括但不限于智能手机、掌上电脑、平板电脑、台式机、笔记本电脑、一体机、或车载智能终端等。或者，本实施例可适用于服务器12中进行数据处理的情况，该方法可以由数据处理装置执行，该装置可以采用软件和/或硬件的方式实现，该装置可配置于服务器12中。图2为本公开实施例提供的一种数据处理方法的流程示意图，具体可以由终端11或服务器12进行数据处理，下面以服务器12进行数据处理为例，对下述实施例进行具体说明，可以理解的是，该数据处理方法同样适用于终端11进行数据处理的场景中，包括如图2所示的如下步骤：S210、获取包括多个坐标点的点序列。可理解的，可以获取UTM坐标系下的点序列，点序列中包括多个坐标点，坐标点为三维数据，包括经纬度信息以及高程信息。S220、对点序列进行插值，并利用插值后的点序列构建多维数据结构树。可选的，对点序列进行插值，并利用插值后的点序列构建多维数据结构树，包括：根据点序列中的坐标点进行线性插值；根据插值后的点序列中的坐标点构建多维数据结构树。可理解的，在上述S210的基础上，根据获取的点序列中的坐标点进行线性插值，利用插值后的点序列中的坐标点构建多维数据结构树，其中，插值后的点序列中包含的坐标点的数量要大于没有插值前的点序列，其中，多维数据结构树是指K-D树，是一种分割k维数据空间的数据结构。主要应用于多维空间关键数据的搜索，例如，利用多维数据结构树进行范围搜索和最近邻搜索，K-D树也可以理解为是二进制空间分割树的特殊情况。S230、对点序列进行抽稀，并对抽稀后的点序列进行插值，得到第一点序列。可理解的，在上述S220的基础上，对开始获取的原始点序列进行抽稀，可以采用曲线抽稀算法进行数据抽稀，对抽稀后的点序列进行线性插值，采用的插值方法不作限定，但是需要采用同一种插值方法对抽稀后点序列以及原始点序列进行插值，得到抽稀和插值处理后的第一点序列，可理解的，第一点序列是进行抽稀和插值后得到的，多维数据结构树是通过对原始点序列进行插值后构建的。S240、根据多维数据结构树和第一点序列，得到第一点序列的高程。可理解的，在上述S220和S230的基础上，根据构建的多维数据结构和第一点序列，计算第一点序列中所有坐标点的高程，第一点序列中包括原始点序列进行抽稀后保留的坐标点以及插值处理后生成的坐标点，其中，高程是指某一点相对于基准面的高度。本公开实施例提供的一种数据处理方法，通过获取包括多个坐标点的点序列，对点序列进行插值处理，并利用插值处理后的点序列构建多维数据结构树，对获取的点序列进行抽稀处理，并对抽稀处理后的点序列进行插值处理，得到第一点序列，根据多维数据结构树和第一点序列，得到第一点序列中所有坐标点对应的高程。数据处理方法通过对点序列进行插值处理，利用插值后的点序列构建多维数据结构树，同时对原始点序列进行抽稀处理，对抽稀后的点序列进行插值得到第一点序列，根据多维数据结构树计算第一点序列中每个坐标点的高程信息，完成数据抽稀处理，有效的减少了数据的存储空间，最大限度的确保了抽稀后点序列中的高程信息，同时对高程信息进行了平滑处理，计算速度快，数据处理的效率高。在上述实施例的基础上，图3为本公开实施例提供的一种数据处理方法的流程示意图，可选的，根据点序列中的坐标点进行线性插值，包括如图3所示的下述步骤：S310、计算点序列中任意两个坐标点之间的欧氏距离。可理解的，计算原始点序列中任意两个坐标点之间的欧氏距离，可以计算点序列中任意两个坐标点之间的二维空间的欧氏距离。欧式距离的计算公式为如下公式：其中，d表示欧氏距离，点序列中任意两个坐标点为A和B，只计算点序列中任意两个坐标点中二维空间即xy之间的欧氏距离。S320、根据欧氏距离与预设密度，得到插值数量。可选的，根据欧氏距离与预设密度，得到插值数量，包括：根据欧氏距离与预设密度的乘积，得到点序列中待插入坐标点的插值数量。可理解的，在上述S310的基础上，根据上述原始点序列中任意两个坐标点之间的欧氏距离以及预设密度的乘积，得到插值数量，其中预设密度可以是每米插入4个点，插值数量为整数，插值数量是指原始点序列中任意两个坐标点A和B中可以插入的坐标点的数量。插值数量的计算公式为如下公式：num＝int其中，num是插值数量，d为A和B两个坐标点之间的欧氏距离，k为预设密度。S330、根据插值数量以及点序列中任意两个坐标点，生成插值后的点序列。可选的，根据插值数量以及点序列中任意两个坐标点，生成插值后的点序列，包括：根据点序列中任意两个坐标点之间的差值以及插值数量，得到与插值数量对应的待插值的坐标点；根据待插值的坐标点以及点序列中的坐标点，生成插值后的点序列。可理解的，在上述S320的基础上，计算原始点序列中任意两个坐标点的之间对应的二维空间的差值，根据差值以及插值数量，计算得到每个待插值的坐标点，待插值的坐标点的数量与插值数量相同，也就是计算插值数量中每个待插值的坐标点，其中计算得到的待插值的坐标点可能会存在原始点序列中任意两个坐标点之间，也可能在两个坐标点周围，将插值数量中每个待插值的坐标点以及对应的原始点序列进行存储，得到插值后的点序列。插值数量中每个待插值的坐标点的计算公式，也就是插值数量个坐标点的计算公式为如下公式：其中，i表示插值数量num中第i个点，x、y和z是通过插值数量以及点序列中任意两个坐标点A和B计算得到的，是插值数量中第i个坐标点的三维数据，也就是计算每个待插值的坐标点，计算得到的所有待插值的坐标点的数量与插值数量相同。示例性的，原始点序列中任意两个坐标点A和B中A和B的二维空间为和，计算得到的欧式距离d为2.828，插值数量num为8，即根据原始点序列A和B可以在原始点序列中插入8个坐标点，其中，8个坐标点的第1个坐标点为，第8个坐标点为。本公开实施例提供的一种数据处理方法，通过计算点序列中任意两个坐标点之间的欧氏距离，根据欧氏距离与预设密度，得到插值数量，根据插值数量以及点序列中任意两个坐标点，生成插值后的点序列。通过线性插值可以获取原始点序列中任意两个坐标点周围近似的多个坐标点的值，便于搜索到坐标点周围准确的坐标点。在上述实施例的基础上，图4为本公开实施例提供的一种数据处理方法的流程示意图，可选的，根据插值后的点序列中的坐标点构建多维数据结构树，包括如图4所示的如下步骤：S410、计算插值后的点序列中坐标点的中位数。可理解的，计算对原始点序列进行插值后的点序列中坐标点的二维空间的中位数，其中，中位数的计算方式为如下公式：其中，j表示维度，midj表示j维度下所有数据的中位数。可理解的，计算原始点序列中，两个维度xoy的中位数，以x为第一维度，y为第二维度。S420、根据中位数将点序列中坐标点分为两个区域，直到点序列中坐标点无法确定区域，生成多维数据结构树。可理解的，在上述S410的基础上，根据计算得到的中位数mid1将原始点序列中所有坐标点划分为两个区域，原始点序列中所有坐标点小于中位数的确定为左区域，大于中位数的确定为右区域，继续分别计算左区域与右区域中的中位数，根据左区域与右区域各自对应的中位数将左区域和右区域继续划分为两个区域，此时整个原始点序列就划分成了四个区域，直到点序列中坐标点无法继续确定明确的左右区域时，多维数据结构树构建完成。示例性的，以图5为例，在xoy二维空间下，将上述点序列中的二维空间、、和在xoy平面上进行展示，确定y维度的中位数为1.9后，将小于中位数1.9的和划分为左区域，将大于中位数1.9的和划分为右区域，利用直线段L将左区域与右区域划分开。本公开实施例提供的一种数据处理方法，通过计算插值后的点序列中坐标点的中位数，根据中位数将点序列中坐标点分为两个区域，直到点序列中坐标点无法确定区域，生成多维数据结构树，通过构建多维数据结构树，能够减少计算数据量以及数据搜索的时间，加快数据处理的速度，便于后续进行数据搜索。在上述实施例的基础上，图6为本公开实施例提供的一种数据处理方法的流程示意图，可选的，对点序列进行抽稀，包括如图6所示的如下步骤：S610、构建点序列中最小坐标点与最大坐标点之间的直线。可理解的，统计原始点序列中所有坐标点，确定由坐标点构成的曲线的起始坐标点即最小坐标点以及终止坐标点即最大坐标点，根据最小坐标点和最大坐标点连接成直线。S620、统计点序列中坐标点到直线的距离，并确定最大距离。可理解的，计算原始点序列中所有坐标点到直线的距离，统计所有坐标点对应的距离，确定最大距离。S630、判断最大距离是否大于预设阈值，若是，则保留最大距离对应的坐标点；若否，则保留点序列中与直线对应的坐标点。可理解的，判断最大距离是否大于预设阈值，若是，则保留当前最大距离对应的坐标点，并且以该坐标点为界限，将原始点序列中所有坐标点构成的曲线分为两部分，继续重复上述操作；若否，则将原始点序列中坐标点不在直线上的所有坐标点删除，只保留直线上的坐标点。本公开实施例提供的一种数据处理方法，通过构建点序列中最小坐标点与最大坐标点之间的直线，统计点序列中坐标点到直线的距离，并确定最大距离，判断最大距离是否大于预设阈值，若是，则保留最大距离对应的坐标点；若否，则保留点序列中与直线对应的坐标点，能够对数据中包含的大量的坐标点进行抽稀处理，减少数据量。在上述实施例的基础上，图7为本公开实施例提供的一种数据处理方法的流程示意图，可选的，根据多维数据结构树和第一点序列，得到第一点序列的高程，包括如图7所示的如下步骤：S710、针对第一点序列中任一坐标点，在多维数据结构树中确定与坐标点相近的预设数量个坐标点。可理解的，针对进行抽稀插值处理生成的第一点序列中的任一坐标点C，根据任一坐标点C，在对原始点序列进行插值处理后得到的多维数据结构树中确定与C相近的预设数量k个坐标点，其中，对抽稀后的点序列进行插值的方法与直接对原始点序列进行插值的方法相同，可以采用上述线性插值方法。S720、根据坐标点以及预设数量个坐标点中的子坐标点，确定子坐标点对应的权重。可选的，根据坐标点以及预设数量个坐标点中的子坐标点，确定子坐标点对应的权重，包括：计算坐标点与预设数量个坐标点中的子坐标点的差值，并将差值映射为权重；对权重进行归一化处理，确定子坐标点对应的权重。可理解的，在上述S710的基础上，根据上述第一序列中的坐标点以及与第一序列中坐标点对应的预设数量个坐标点，预设数量个坐标点中的子坐标点，例如，预设数量的取值可以与上述预设密度对应，优选的，确定预设数量为4，则根据C在多维数据结构树中找到最近的4个坐标点，其中4个坐标点中的每个坐标点可以称为子坐标点；计算C与子坐标点D的差值，可以采用高斯核函数将C和D差值映射为权重，以C和D坐标点中的x维度为例，高斯核函数的计算公式为如下公式：其中，w为权重，i为预设数量k个坐标点中的序号，σ为带宽参数，xi表示搜索到的子坐标点的值，x0表示第一序列中与子坐标点对应的任一坐标点的值。可理解的，对预设数量个子坐标点以及任一坐标点计算得到的权重进行归一化处理，确定每个子坐标点对应的权重，归一化处理的计算公式为如下公式：其中，w′表示归一化处理得到的子坐标点对应的权重。可理解的，采用上述计算权重的方法，子坐标点与第一序列中任一坐标点的差值越大，权重越小，可以选择高斯核函数将差值映射为权重，并且权重随差值指数下降，较远点即差值较大对应的子坐标点对坐标点的高程的影响比较小，并且预设数量k的取值也可以控制从K-D树中搜索的预设数量个坐标点到第一序列中任一坐标点的最大差值，可以提高计算高程的准确度，还可以调节高斯核函数的带宽参数，从而确定子坐标点对任一坐标点的高程的影响程度。S730、根据子坐标点对应的权重以及子坐标点对应的高程，得到坐标点的高程。可选的，根据子坐标点对应的权重以及子坐标点对应的高程，得到坐标点的高程，包括：计算子坐标点对应的权重与子坐标点对应的高程的乘积，并统计乘积的和，得到坐标点的高程。可理解的，在上述S710的基础上，计算子坐标点对应的权重与子坐标点对应的高程的乘积，对所有子坐标点的乘积进行求和，得到，第一序列中任一坐标点的高程。高程的计算公式为如下公式：其中，w表示预设数量个坐标点中的第i个坐标点对应的权重，zi表示在多维数据结构树中第i个坐标点对应的高程。示例性的，以图8数据处理的结果示意图为例，图8中L1表示原始点序列中所有坐标点组成的曲线，L2表示本公开实施例提供的数据处理方法得到的对原始点序列L1进行处理后生成的坐标点组成的曲线，L3表示的曲线L1中起始坐标点与终止坐标点之间的直线，也可以看作利用现有技术直接进行抽稀后的坐标点组成的曲线。本公开实施例提供的一种数据处理方法，通过针对第一点序列中任一坐标点，在多维数据结构树中确定与坐标点相近的预设数量个坐标点，根据坐标点以及预设数量个坐标点中的子坐标点，确定子坐标点对应的权重，根据子坐标点对应的权重以及子坐标点对应的高程，得到坐标点的高程，能够计算经过抽稀和插值处理后生成的第一点序列中所有坐标点的高程，在减少数据量的同时，最大限度的保留了数据的特征即数据中的高程信息，同时对计算得到的高程进行了平滑处理，计算简便，处理速度比较快，准确率高。本公开实施例还包括如下应用场景，在图1中，终端11和服务器12在数据处理过程中存在交互操作，也就是说，终端11和服务器12在数据处理的过程中可以进行数据的传输，下述实施例以此应用场景为例结合图2所示的流程图进行说明。一种可行的应用场景的实施例，终端11可以执行图2中S210以及S220，完成构建多维数据结构树的操作，并将获取的点序列和构建的多维数据结构树发送至服务器12，服务器12接收终端11发送的数据，并执行图2中S230以及S240的操作，根据点序列和多维数据结构树，得到第一点序列和第一点序列的高程，终端11和服务器12协同操作完成数据处理。另一种可行的应用场景的实施例，终端11可以执行图2中S210、S220和S230，完成多维数据结构树的构建和第一点序列的生成，并将多维数据结构树以及第一点序列发送至服务器12，服务器12接收终端11发送的数据，并执行图2中S240的操作，根据接收的多维数据结构树以及第一点序列，得到数据处理后的第一点序列的高程，终端11和服务器12协同操作完成数据处理。可理解的，上述两种可行的应用场景的实施例中具体包括的构建多维数据结构数、生成第一点序列以及得到第一点序列的高程的方法，同上述实施例中只采用终端11或服务器12中任一设备进行数据处理的方法相同，在此不作赘述。可理解的，终端11和服务器12之间还可以包括其他数据传输的场景，在此不作赘述。本公开实施例提供的终端11和服务器12在数据处理过程中存在交互操作的应用场景，对于处理的海量数据来说，能够加快处理速度，减少处理内存，最大限度的使用硬件资源，同时还保证数据处理的准确率，在数据传输的过程中，也能够通过终端11和服务器12对数据进行备份，保证处理数据的安全性。图9为本公开实施例提供的一种数据处理装置的结构示意图。本公开实施例提供的数据处理装置可以执行数据处理方法实施例提供的处理流程，如图9所示，数据处理装置900包括：获取模块910，用于获取包括多个坐标点的点序列；第一处理模块920，用于对点序列进行插值，并利用插值后的点序列构建多维数据结构树；第二处理模块930，用于对点序列进行抽稀，并对抽稀后的点序列进行插值，得到第一点序列；计算模块940，用于根据多维数据结构树和第一点序列，得到第一点序列的高程。可选的，第一处理模块920中对点序列进行插值，并利用插值后的点序列构建多维数据结构树，具体用于：根据点序列中的坐标点进行线性插值；根据插值后的点序列中的坐标点构建多维数据结构树。可选的，第一处理模块920中根据点序列中的坐标点进行线性插值，具体用于：计算点序列中任意两个坐标点之间的欧氏距离；根据欧氏距离与预设密度，得到插值数量；根据插值数量以及点序列中任意两个坐标点，生成插值后的点序列。可选的，第一处理模块920中根据欧氏距离与预设密度，得到插值数量，具体用于：根据欧氏距离与预设密度的乘积，得到点序列中待插入坐标点的插值数量。可选的，第一处理模块920中根据插值数量以及点序列中任意两个坐标点，生成插值后的点序列，具体用于：根据点序列中任意两个坐标点之间的差值以及插值数量，得到与插值数量对应的待插值的坐标点；根据待插值的坐标点以及点序列中的坐标点，生成插值后的点序列。可选的，第一处理模块920中根据插值后的点序列中的坐标点构建多维数据结构树，具体用于：计算插值后的点序列中坐标点的中位数；根据中位数将点序列中坐标点分为两个区域，直到点序列中坐标点无法确定区域，生成多维数据结构树。可选的，第二处理模块930中对点序列进行抽稀，具体用于：构建点序列中最小坐标点与最大坐标点之间的直线；统计点序列中坐标点到直线的距离，并确定最大距离；判断最大距离是否大于预设阈值，若是，则保留最大距离对应的坐标点；若否，则保留点序列中与直线对应的坐标点。可选的，计算模块940中根据多维数据结构树和第一点序列，得到第一点序列的高程，具体用于：针对第一点序列中任一坐标点，在多维数据结构树中确定与坐标点相近的预设数量个坐标点；根据坐标点以及预设数量个坐标点中的子坐标点，确定子坐标点对应的权重；根据子坐标点对应的权重以及子坐标点对应的高程，得到坐标点的高程。可选的，计算模块940中根据坐标点以及预设数量个坐标点中的子坐标点，确定子坐标点对应的权重，具体用于：计算坐标点与预设数量个坐标点中的子坐标点的差值，并将差值映射为权重；对权重进行归一化处理，确定子坐标点对应的权重。可选的，计算模块940中根据子坐标点对应的权重以及子坐标点对应的高程，得到坐标点的高程，具体用于：计算子坐标点对应的权重与子坐标点对应的高程的乘积，并统计乘积的和，得到坐标点的高程。图9所示实施例的数据处理装置可用于执行上述方法实施例的技术方案，其实现原理和技术效果类似，此处不再赘述。图10为本公开实施例提供的数据处理设备的结构示意图。该数据处理设备可以是如上的服务器或终端。本公开实施例提供的数据处理设备可以执行上述数据处理方法实施例提供的处理流程，如图10所示，数据处理设备1000包括：处理器1100、通讯接口1200和存储器1300；其中，计算机程序存储在存储器1300中，并被配置为由处理器1100执行如上述的数据处理方法。另外，本公开实施例还提供一种计算机可读存储介质，其上存储有计算机程序，计算机程序被处理器执行以实现上述实施例的数据处理方法。此外，本公开实施例还提供了一种计算机程序产品，该计算机程序产品包括计算机程序或指令，该计算机程序或指令被处理器执行时实现如上的数据处理方法。需要说明的是，在本文中，诸如“第一”和“第二”等之类的关系术语仅仅用来将一个实体或者操作与另一个实体或操作区分开来，而不一定要求或者暗示这些实体或操作之间存在任何这种实际的关系或者顺序。而且，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括要素的过程、方法、物品或者设备中还存在另外的相同要素。以上仅是本公开的具体实施方式，使本领域技术人员能够理解或实现本公开。对这些实施例的多种修改对本领域的技术人员来说将是显而易见的，本文中所定义的一般原理可以在不脱离本公开的精神或范围的情况下，在其它实施例中实现。因此，本公开将不会被限制于本文的这些实施例，而是要符合与本文所公开的原理和新颖特点相一致的最宽的范围。
