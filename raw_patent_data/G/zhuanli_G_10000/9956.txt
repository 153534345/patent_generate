标题title
一种动画状态机的实现方法和装置
摘要abst
本申请涉及一种动画状态机的实现方法和装置，其中，该方法包括：创建目标虚拟角色对应的第一子类动画状态机，其中，所述第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑；创建所述目标虚拟角色对应的第二子类动画状态机，其中，所述第二子类动画状态机用于继承父类动画状态机所实现的所述基类动画状态机逻辑，并基于所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述目标虚拟角色的动画转换逻辑；将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上。本申请解决了为虚拟角色创建动画状态机的冗余度和复杂度较高的技术问题。
权利要求书clms
1.一种动画状态机的实现方法，其特征在于，包括：创建目标虚拟角色对应的第一子类动画状态机，其中，所述第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑；创建所述目标虚拟角色对应的第二子类动画状态机，其中，所述第二子类动画状态机用于继承父类动画状态机所实现的所述基类动画状态机逻辑，并基于所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述目标虚拟角色的动画转换逻辑；将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上。2.根据权利要求1所述的方法，其特征在于，创建目标虚拟角色对应的第一子类动画状态机包括：创建所述目标虚拟角色对应的第一初始状态机；在所述第一初始状态机中实现所述子类动画状态机逻辑，所述目标虚拟角色的反向运动逻辑和所述目标虚拟角色的物理逻辑，得到所述第一子类动画状态机。3.根据权利要求1所述的方法，其特征在于，创建所述目标虚拟角色对应的第二子类动画状态机包括：创建所述目标虚拟角色对应的第二初始状态机；从所述父类动画状态机中获取所述目标虚拟角色所属于的目标角色类型对应的目标角色类型表；在所述第二初始状态机中引用所述目标角色类型表，得到所述基类动画状态机逻辑，使用所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述动画转换逻辑，得到所述第二子类动画状态机。4.根据权利要求3所述的方法，其特征在于，在所述第二初始状态机中引用所述目标角色类型表，得到所述基类动画状态机逻辑包括：获取所述目标虚拟角色对应的配置信息，其中，所述配置信息用于指示开启所述目标角色类型表中记录的第一部分动画状态机逻辑，和/或，禁用所述目标角色类型表中记录的第二部分动画状态机逻辑；将所述目标角色类型表引用到所述第二初始状态机中，并依据所述配置信息的指示从所述目标角色类型表中确定所述基类动画状态机逻辑。5.根据权利要求1所述的方法，其特征在于，创建所述目标虚拟角色对应的第二子类动画状态机包括：创建所述目标虚拟角色对应的第三初始状态机；将所述第三初始状态机继承所述父类动画状态机中所述目标虚拟角色所属于的目标类型对应的目标角色类型表；将目标路径所指示的目标动画素材集合映射到所述目标角色类型表的多个共用变量上，得到所述第二子类动画状态机，其中，所述目标动画素材集合中包括允许所述目标虚拟角色使用的目标动画素材。6.根据权利要求5所述的方法，其特征在于，将目标路径所指示的目标动画素材集合映射到所述目标角色类型表的多个共用变量上包括：将所述目标角色类型表的多个共用变量中的每个共用变量与所述目标动画素材中未匹配到共用变量的动画素材的素材标识进行匹配；建立匹配一致的共用变量与动画素材之间的映射关系，得到所述多个共用变量和所述目标动画素材之间的映射关系。7.根据权利要求5所述的方法，其特征在于，在将所述第三初始状态机继承所述父类动画状态机中所述目标虚拟角色所属于的目标类型对应的目标角色类型表之前，所述方法还包括：在所述父类动画状态机中创建对应角色类型的至少一个初始角色类型表，其中，所述角色类型包括所述目标类型；在所述至少一个初始角色类型表包括的每个初始角色类型表中，建立一组共用变量，得到具有对应关系的角色类型和角色类型表，其中，所述一组共用变量用于标识允许属于所述每个初始角色类型表对应的角色类型的虚拟角色共用的一组动画状态；创建共用变量与动画素材之间的映射逻辑，其中，所述映射逻辑用于指示从指定路径中为共用变量匹配动画素材。8.根据权利要求1所述的方法，其特征在于，将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上包括：将所述第二子类动画状态机关联到所述目标虚拟角色的角色模型上；将所述第一子类动画状态机通过所述目标虚拟角色的骨架网格体下的后期处理动画蓝图接口关联到所述骨架网格体上。9.一种动画状态机的实现装置，其特征在于，包括：第一创建模块，用于创建目标虚拟角色对应的第一子类动画状态机，其中，所述第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑；第二创建模块，用于创建所述目标虚拟角色对应的第二子类动画状态机，其中，所述第二子类动画状态机用于继承父类动画状态机所实现的基类动画状态机逻辑，并基于所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述目标虚拟角色的动画转换逻辑；挂载模块，用于将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上。10.一种存储介质，其特征在于，所述存储介质包括存储的程序，其中，所述程序运行时执行上述权利要求1至8任一项中所述的方法。11.一种电子装置，包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，其特征在于，所述处理器通过所述计算机程序执行上述权利要求1至8任一项中所述的方法。
说明书desc
技术领域本申请涉及计算机领域，尤其涉及一种动画状态机的实现方法和装置。背景技术在不同游戏类型开发过程中，一个游戏中可能会有不同类型的NPC或玩家等虚拟角色。对于不同虚拟角色的动画状态机，目前采用的一种实现方案是游戏中有多少种角色就需要构建多少全套的动画状态机逻辑，各个角色重复的部分无法共用，导致冗余度提高。另一种实现方案中所有角色都继承基类状态机，但不同角色能够实现的动作又不同，导致所有需要实现的动作在基类状态机中都需要实现，复杂度越来越高。针对上述的问题，目前尚未提出有效的解决方案。发明内容本申请提供了一种动画状态机的实现方法和装置，以至少解决相关技术中为虚拟角色创建动画状态机的冗余度和复杂度较高的技术问题。根据本申请实施例的一个方面，提供了一种动画状态机的实现方法，包括：创建目标虚拟角色对应的第一子类动画状态机，其中，所述第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑；创建所述目标虚拟角色对应的第二子类动画状态机，其中，所述第二子类动画状态机用于继承父类动画状态机所实现的所述基类动画状态机逻辑，并基于所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述目标虚拟角色的动画转换逻辑；将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上。可选地，创建目标虚拟角色对应的第一子类动画状态机包括：创建所述目标虚拟角色对应的第一初始状态机；在所述第一初始状态机中实现所述子类动画状态机逻辑，所述目标虚拟角色的反向运动逻辑和所述目标虚拟角色的物理逻辑，得到所述第一子类动画状态机。可选地，创建所述目标虚拟角色对应的第二子类动画状态机包括：创建所述目标虚拟角色对应的第二初始状态机；从所述父类动画状态机中获取所述目标虚拟角色所属于的目标角色类型对应的目标角色类型表；在所述第二初始状态机中引用所述目标角色类型表，得到所述基类动画状态机逻辑,使用所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述动画转换逻辑，得到所述第二子类动画状态机。可选地，在所述第二初始状态机中引用所述目标角色类型表，得到所述基类动画状态机逻辑包括：获取所述目标虚拟角色对应的配置信息，其中，所述配置信息用于指示开启所述目标角色类型表中记录的第一部分动画状态机逻辑，和/或，禁用所述目标角色类型表中记录的第二部分动画状态机逻辑；将所述目标角色类型表引用到所述第二初始状态机中，并依据所述配置信息的指示从所述目标角色类型表中确定所述基类动画状态机逻辑。可选地，创建所述目标虚拟角色对应的第二子类动画状态机包括：创建所述目标虚拟角色对应的第三初始状态机；将所述第三初始状态机继承所述父类动画状态机中所述目标虚拟角色所属于的目标类型对应的目标角色类型表；将目标路径所指示的目标动画素材集合映射到所述目标角色类型表的多个共用变量上，得到所述第二子类动画状态机，其中，所述目标动画素材集合中包括允许所述目标虚拟角色使用的目标动画素材。可选地，将目标路径所指示的目标动画素材集合映射到所述目标角色类型表的多个共用变量上包括：将所述目标角色类型表的多个共用变量中的每个共用变量与所述目标动画素材中未匹配到共用变量的动画素材的素材标识进行匹配；建立匹配一致的共用变量与动画素材之间的映射关系，得到所述多个共用变量和所述目标动画素材之间的映射关系。可选地，在将所述第三初始状态机继承所述父类动画状态机中所述目标虚拟角色所属于的目标类型对应的目标角色类型表之前，所述方法还包括：在所述父类动画状态机中创建对应角色类型的至少一个初始角色类型表，其中，所述角色类型包括所述目标类型；在所述至少一个初始角色类型表包括的每个初始角色类型表中，建立一组共用变量，得到具有对应关系的角色类型和角色类型表，其中，所述一组共用变量用于标识允许属于所述每个初始角色类型表对应的角色类型的虚拟角色共用的一组动画状态；创建共用变量与动画素材之间的映射逻辑，其中，所述映射逻辑用于指示从指定路径中为共用变量匹配动画素材。可选地，将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上包括：将所述第二子类动画状态机关联到所述目标虚拟角色的角色模型上；将所述第一子类动画状态机通过所述目标虚拟角色的骨架网格体下的后期处理动画蓝图接口关联到所述骨架网格体上。根据本申请实施例的另一方面，还提供了一种动画状态机的实现装置，包括：第一创建模块，用于创建目标虚拟角色对应的第一子类动画状态机，其中，所述第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑；第二创建模块，用于创建所述目标虚拟角色对应的第二子类动画状态机，其中，所述第二子类动画状态机用于继承父类动画状态机所实现的基类动画状态机逻辑，并基于所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述目标虚拟角色的动画转换逻辑；挂载模块，用于将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上。可选地，所述第一创建模块包括：第一创建单元，用于创建所述目标虚拟角色对应的第一初始状态机；第一实现单元，用于在所述第一初始状态机中实现所述子类动画状态机逻辑，所述目标虚拟角色的反向运动逻辑和所述目标虚拟角色的物理逻辑，得到所述第一子类动画状态机。可选地，所述第二创建模块包括：第二创建单元，用于创建所述目标虚拟角色对应的第二初始状态机；第一继承单元，用于从所述父类动画状态机中获取所述目标虚拟角色所属于的目标角色类型对应的目标角色类型表；第二实现单元，用于在所述第二初始状态机中引用所述目标角色类型表，得到所述基类动画状态机逻辑，使用所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述动画转换逻辑，得到所述第二子类动画状态机。可选地，所述第一继承单元用于：获取所述目标虚拟角色对应的配置信息，其中，所述配置信息用于指示开启所述目标角色类型表中记录的第一部分动画状态机逻辑，和/或，禁用所述目标角色类型表中记录的第二部分动画状态机逻辑；将所述目标角色类型表引用到所述第二初始状态机中，并依据所述配置信息的指示从所述目标角色类型表中确定所述基类动画状态机逻辑。可选地，所述第二创建模块包括：第三创建单元，用于创建所述目标虚拟角色对应的第三初始状态机；第二继承单元，用于将所述第三初始状态机继承所述父类动画状态机中所述目标虚拟角色所属于的目标类型对应的目标角色类型表；映射单元，用于将目标路径所指示的目标动画素材集合映射到所述目标角色类型表的多个共用变量上，得到所述第二子类动画状态机，其中，所述目标动画素材集合中包括允许所述目标虚拟角色使用的目标动画素材。可选地，所述映射单元用于：将所述目标角色类型表的多个共用变量中的每个共用变量与所述目标动画素材中未匹配到共用变量的动画素材的素材标识进行匹配；建立匹配一致的共用变量与动画素材之间的映射关系，得到所述多个共用变量和所述目标动画素材之间的映射关系。可选地，所述装置还包括：第三创建模块，用于在将所述第三初始状态机继承所述父类动画状态机中所述目标虚拟角色所属于的目标类型对应的目标角色类型表之前，在所述父类动画状态机中创建对应角色类型的至少一个初始角色类型表，其中，所述角色类型包括所述目标类型；建立模块，用于在所述至少一个初始角色类型表包括的每个初始角色类型表中，建立一组共用变量，得到具有对应关系的角色类型和角色类型表，其中，所述一组共用变量用于标识允许属于所述每个初始角色类型表对应的角色类型的虚拟角色共用的一组动画状态；第四创建模块，用于创建共用变量与动画素材之间的映射逻辑，其中，所述映射逻辑用于指示从指定路径中为共用变量匹配动画素材。可选地，所述挂载模块包括：第一关联单元，用于将所述第二子类动画状态机关联到所述目标虚拟角色的角色模型上；第二关联单元，用于将所述第一子类动画状态机通过所述目标虚拟角色的骨架网格体下的后期处理动画蓝图接口关联到所述骨架网格体上。根据本申请实施例的另一方面，还提供了一种存储介质，该存储介质包括存储的程序，程序运行时执行上述的方法。根据本申请实施例的另一方面，还提供了一种电子装置，包括存储器、处理器及存储在存储器上并可在处理器上运行的计算机程序，处理器通过计算机程序执行上述的方法。在本申请实施例中，采用创建目标虚拟角色对应的第一子类动画状态机，其中，第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许目标虚拟角色执行的子类动画状态机逻辑，基类动画状态机逻辑由父类动画状态机实现；创建目标虚拟角色对应的第二子类动画状态机，其中，第二子类动画状态机用于继承父类动画状态机所实现的基类动画状态机逻辑，并实现目标虚拟角色的动画转换逻辑；将第一子类动画状态机和第二子类动画状态机挂载到目标虚拟角色的角色模型上的方式，虚拟角色间可共用的基类动画状态机逻辑在父类动画状态机中实现，除基类动画状态机逻辑之外的、允许虚拟角色执行的动画状态机逻辑在第一子类动画状态机中实现，虚拟角色的第二子类动画状态机继承父类动画状态机并能够实现虚拟角色的动画转换逻辑，将第一子类动画状态机和第二子类动画状态机挂载到虚拟角色的角色模型上，实现了虚拟角色的整套动画状态机的同时，能够减少相同动画状态机逻辑的重复创建，并降低基类动画状态机逻辑的复杂度，从而实现了降低为虚拟角色创建动画状态机的冗余度和复杂度的技术效果，进而解决了为虚拟角色创建动画状态机的冗余度和复杂度较高的技术问题。附图说明此处的附图被并入说明书中并构成本说明书的一部分，示出了符合本申请的实施例，并与说明书一起用于解释本申请的原理。为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，对于本领域普通技术人员而言，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。图1是根据本申请实施例的动画状态机的实现方法的硬件环境的示意图；图2是根据本申请实施例的一种可选的动画状态机的实现方法的流程图；图3是根据本申请实施例的一种一键自动化素材读取设置工具的示意图；图4是根据本申请实施例的一种虚拟角色的动画状态机挂载过程的示意图；图5是根据本申请实施例的一种可选的动画状态机的实现装置的示意图；图6是根据本申请实施例的一种电子装置的结构框图。具体实施方式为了使本技术领域的人员更好地理解本申请方案，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本申请一部分的实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都应当属于本申请保护的范围。需要说明的是，本申请的说明书和权利要求书及上述附图中的术语“第一”、“第二”等是用于区别类似的对象，而不必用于描述特定的顺序或先后次序。应该理解这样使用的数据在适当情况下可以互换，以便这里描述的本申请的实施例能够以除了在这里图示或描述的那些以外的顺序实施。此外，术语“包括”和“具有”以及他们的任何变形，意图在于覆盖不排他的包含，例如，包含了一系列步骤或单元的过程、方法、系统、产品或设备不必限于清楚地列出的那些步骤或单元，而是可包括没有清楚地列出的或对于这些过程、方法、产品或设备固有的其它步骤或单元。根据本申请实施例的一方面，提供了一种动画状态机的实现的方法实施例。可选地，在本实施例中，上述动画状态机的实现方法可以应用于如图1所示的由终端101和服务器103所构成的硬件环境中。如图1所示，服务器103通过网络与终端101进行连接，可用于为终端或终端上安装的客户端提供服务，可在服务器上或独立于服务器设置数据库，用于为服务器103提供数据存储服务，上述网络包括但不限于：广域网、城域网或局域网，终端101并不限定于PC、手机、平板电脑等。本申请实施例的动画状态机的实现方法可以由服务器103来执行，也可以由终端101来执行，还可以是由服务器103和终端101共同执行。其中，终端101执行本申请实施例的动画状态机的实现方法也可以是由安装在其上的客户端来执行。图2是根据本申请实施例的一种可选的动画状态机的实现方法的流程图，如图2所示，该方法可以包括以下步骤：步骤S202，创建目标虚拟角色对应的第一子类动画状态机，其中，第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许目标虚拟角色执行的子类动画状态机逻辑；步骤S204，创建目标虚拟角色对应的第二子类动画状态机，其中，第二子类动画状态机用于继承父类动画状态机所实现的基类动画状态机逻辑，并基于基类动画状态机逻辑和子类动画状态机逻辑实现目标虚拟角色的动画转换逻辑；步骤S206，将第一子类动画状态机和第二子类动画状态机挂载到目标虚拟角色的角色模型上。通过上述步骤S202至步骤S206，虚拟角色间可共用的基类动画状态机逻辑在父类动画状态机中实现，除基类动画状态机逻辑之外的、允许虚拟角色执行的动画状态机逻辑在第一子类动画状态机中实现，虚拟角色的第二子类动画状态机继承父类动画状态机并能够实现虚拟角色的动画转换逻辑，将第一子类动画状态机和第二子类动画状态机挂载到虚拟角色的角色模型上，实现了虚拟角色的整套动画状态机的同时，能够减少相同动画状态机逻辑的重复创建，并降低基类动画状态机逻辑的复杂度，从而实现了降低为虚拟角色创建动画状态机的冗余度和复杂度的技术效果，进而解决了为虚拟角色创建动画状态机的冗余度和复杂度较高的技术问题。可选地，在本实施例中，上述动画状态机的实现方法可以但不限于应用于在游戏开发引擎或动画开发引擎中为虚拟角色实现动画状态机的场景中。上述游戏开发引擎可以但不限于包括：UE4，Unity3D引擎等等。可选地，在本实施例中，动画状态机是实现游戏角色动画控制的编辑工具，根据不同类型的游戏，可以通过设置不同的动画状态来实现不同的动画表现。在步骤S202提供的技术方案中，目标虚拟角色可以但不限于包括游戏中的虚拟角色，玩家角色等等)，动画中的虚拟角色。可选地，在本实施例中，第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许目标虚拟角色执行的子类动画状态机逻辑。也就是说，第一子类动画状态机可以用于实现目标虚拟角色所特有的、区别于基类的额外的动画行为逻辑。可选地，在本实施例中，第一子类动画状态机又可以称为后期处理的子类动画状态机，比如：为NPC1创建的第一子类动画状态机可以表示为NPC1_AnimBP_Child，为玩家角色2创建的第一子类动画状态机可以表示为Player2_AnimBP_Child。NPC1_AnimBP_Child中可以实现NPC1特有的Swimming行为的动画状态机逻辑。Player2_AnimBP_Child中可以实现玩家角色2特有的Flying行为的动画状态机逻辑。可选地，在本实施例中，基类动画状态机逻辑可以但不限于由父类动画状态机实现，基类动画状态机逻辑可以但不限于是虚拟角色间共用的动画状态机逻辑，比如：Idle、Walk、Run等行为的动画状态机逻辑。可选地，在本实施例中，父类动画状态机可以但不限于表示为Base_AnimBP，父类动画状态机中可以但不限于实现不同角色类型间可共用的状态机逻辑，如Idle、Walk、Run等。状态机逻辑之间的转化规则可在子类动画状态机中分别设置。这样就实现了不同骨骼状态机逻辑的共用。作为一种可选的实施例，创建目标虚拟角色对应的第一子类动画状态机包括：S11，创建所述目标虚拟角色对应的第一初始状态机；S12，在所述第一初始状态机中实现所述子类动画状态机逻辑，所述目标虚拟角色的反向运动逻辑和所述目标虚拟角色的物理逻辑，得到所述第一子类动画状态机。可选地，在本实施例中，在第一子类动画状态机中除了实现子类动画状态机逻辑之外，还可以实现反向运动逻辑和目标虚拟角色的物理逻辑等。可选地，在本实施例中，反向运动逻辑IK，即Inverse Kinematics，是计算运动关节末端相对于关节起始位置和方向到达所需位置的关节参数的数学过程。可选地，在本实施例中，第一子类动画状态机可单独实现基于不同骨骼的动画行为逻辑、IK及物理逻辑。在第一子类动画状态机中实现各自的额外动画逻辑及IK逻辑，也能够使得不同虚拟角色的第一子类动画状态机间相互独立，减小各个虚拟角色间的耦合度。在步骤S204提供的技术方案中，第二子类动画状态机用于继承父类动画状态机所实现的基类动画状态机逻辑，并实现目标虚拟角色的动画转换逻辑。第二子类动画状态机可以但不限于表示为AnimBP，比如：为NPC1创建的第二子类动画状态机可以表示为NPC1_AnimBP，为玩家角色2创建的第二子类动画状态机可以表示为Player2_AnimBP。NPC1_AnimBP和Player2_AnimBP均可以继承父类动画状态机中所实现的基类动画状态机逻辑。可选地，在本实施例中，动画转换逻辑可以但不限于指动画行为之间的转换逻辑，比如：从Idle到Walk，或者从Walk到Run的过程转换条件。不同的虚拟角色可以构建不同的动画转换逻辑。比如：从Walk到Run的转换条件，NPC1的血量需要大于50才可以转换，NPC2血量需要大于80才可以转换。作为一种可选的实施例，创建所述目标虚拟角色对应的第二子类动画状态机包括：S21，创建所述目标虚拟角色对应的第二初始状态机；S22，将所述第二初始状态机继承所述父类动画状态机；S23，使用所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述动画转换逻辑，得到所述第二子类动画状态机。可选地，在本实施例中，第二初始状态机继承父类动画状态机中的基类动画状态机逻辑，并且第一子类动画状态机中实现了除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑，使用基类动画状态机逻辑和子类动画状态机逻辑能够实现目标虚拟角色的动画转换逻辑。作为一种可选的实施例，将所述第二初始状态机继承所述父类动画状态机包括：S31，从所述父类动画状态机中获取所述目标虚拟角色所属于的目标角色类型对应的目标角色类型表，其中，所述父类动画状态机中包括具有对应关系的角色类型和角色类型表，所述目标角色类型表中记录了允许属于所述目标角色类型的虚拟角色执行的动画状态机逻辑；S32，在所述第二初始状态机中引用所述目标角色类型表，得到所述基类动画状态机逻辑。可选地，在本实施例中，父类动画状态机中包括具有对应关系的角色类型和角色类型表，每个角色类型表中记录了允许属于相应的角色类型的虚拟角色执行的动画状态机逻辑。可选地，在本实施例中，不同的角色类型可以但不限于是根据不同的骨骼信息划分的。在不同游戏类型中，不同形态的NPC或玩家角色可以根据需求设计不同的骨骼形态及数量，比如：人形态的骨骼不同于兽类形态的骨骼。能够完成类似行为的骨骼可以划分为相同的角色类型中，比如：NPC1是兽类形态的骨骼和玩家角色1是人形态的骨骼，二者可以实现类似的站立，跑，跳，行走等行为，可以划分为第一角色类型。NPC2是蛇类形态的骨骼，NPC3是蠕虫形态的骨骼，玩家角色2是龙形态的骨骼，三者可以实现类似的左右蠕动，上下蠕动，头部支起等行为，可以划分为第二角色类型等等。可选地，在本实施例中，可以但不限于通过上述角色类型表引用的方式来继承父类动画状态机。作为一种可选的实施例，在所述第二初始状态机中引用所述目标角色类型表，得到所述基类动画状态机逻辑包括：S41，获取所述目标虚拟角色对应的配置信息，其中，所述配置信息用于指示开启所述目标角色类型表中记录的第一部分动画状态机逻辑，和/或，禁用所述目标角色类型表中记录的第二部分动画状态机逻辑；S42，将所述目标角色类型表引用到所述第二初始状态机中，并依据所述配置信息的指示从所述目标角色类型表中确定所述基类动画状态机逻辑。可选地，在本实施例中，可以通过配置信息开启目标角色类型表中记录的需要使用的第一部分动画状态机逻辑，或者，禁用目标角色类型表中记录的不需要使用的第二部分动画状态机逻辑。配置信息中可以仅指示需要开启的第一部分动画状态机逻辑，或者仅指示需要禁用的第二部分动画状态机逻辑，或者也可以既指示需要开启的第一部分动画状态机逻辑又指示需要禁用的第二部分动画状态机逻辑。可选地，在本实施例中，第一部分动画状态机逻辑可以但不限于是目标角色类型表中记录的全部动画状态机逻辑，也就是说，目标角色类型表中记录的动画状态机逻辑可以全部开启。作为一种可选的实施例，创建所述目标虚拟角色对应的第二子类动画状态机包括：S51，创建所述目标虚拟角色对应的第三初始状态机；S52，将所述第三初始状态机继承所述父类动画状态机中的目标类型所对应的目标角色类型表，其中，所述目标虚拟角色属于所述目标类型，所述目标角色类型表中记录了多个共用变量，所述多个共用变量用于标识允许属于所述目标类型的虚拟角色共用的多个动画状态；S53，将目标路径所指示的目标动画素材集合映射到所述多个共用变量上，得到所述第二子类动画状态机，其中，所述目标动画素材集合中包括允许所述目标虚拟角色使用的目标动画素材。可选地，在本实施例中，第二子类动画状态机一方面继承了父类动画状态机中的动画状态机逻辑，另一方面也继承了父类动画状态机中的共用变量所标识的动画状态。为这些动画状态配置上相应的动画素材后，就能够依据动画状态机逻辑控制虚拟角色执行相应操作展示相应动作。可选地，在本实施例中，上述第三初始状态机与第二初始状态机可以但不限于是相同的初始状态机，得到的第二子类动画状态机既继承了父类动画状态机中的动画状态机逻辑，又实现了各动作的动画展示。可选地，在本实施例中，第三初始状态机从父类动画状态机中继承的目标角色类型表可以看做是没有关联动画素材的“空表”，表中创建了多个共用变量“Idle、Walk”等，并给出了共用变量与动画素材之间的映射逻辑用来指示哪些资源关联到哪个动画状态上，在填入目标路径来指示目标动画素材集合的所在路径后，会在目标路径指定的文件夹下根据父类动画状态机所提供的映射逻辑把动画素材映射到对应的动画状态上，形成该角色能够使用的完整的角色类型表。可选地，在本实施例中，目标角色类型表中的多个共用变量可以但不限于在动画C++类中进行定义。比如：在动画的C++类中创建变量Idle、Walk、Run、Jump等变量名称，例如：UAnimSequence*Idle＝nullptr，是闲置状态的变量，父类动画状态机中将共用变量配置为nullptr，表示还没有为变量映射动画素材，当有子类动画状态机继承时，可以将nullptr替换成为相应虚拟角色制作的动画素材的素材路径，从而使得控制虚拟角色处于该状态时能够展示相应的动作动画。作为一种可选的实施例，将目标路径所指示的目标动画素材集合映射到所述多个共用变量上包括：S61，将所述多个共用变量中的每个共用变量与所述目标动画素材中未匹配到共用变量的动画素材的素材标识进行匹配；S62，建立匹配一致的共用变量与动画素材之间的映射关系，得到所述多个共用变量和所述目标动画素材之间的映射关系。可选地，在本实施例中，可以但不限于通过共用变量和动画素材的素材标识之间的匹配来确定多个共用变量和所述目标动画素材之间的映射关系。比如：Walk变量可以匹配到素材标识为Walk的动画素材，从而建立Walk变量与素材标识为Walk的动画素材之间的映射关系，在控制虚拟角色时能够使得虚拟角色在Walk状态下展示相应的Walk动作。可选地，在本实施例中，可以但不限于通过正则匹配等匹配方式进行共用变量和动画素材的素材标识之间的匹配，也就是说，按照共用变量为目标动画素材集合中的目标动画素材分配素材标识，在继承角色类型表的过程中就能够自动将与共用变量名称相同的目标动画素材映射到该共用变量上。作为一种可选的实施例，在将所述第三初始状态机继承所述父类动画状态机中的目标类型所对应的目标角色类型表之前，还包括：S71，在所述父类动画状态机中创建对应角色类型的至少一个初始角色类型表，其中，所述角色类型包括所述目标类型；S72，在所述至少一个初始角色类型表包括的每个初始角色类型表中，建立一组共用变量，得到具有对应关系的角色类型和角色类型表，其中，所述一组共用变量用于标识允许属于所述每个初始角色类型表对应的角色类型的虚拟角色共用的一组动画状态；S73，创建共用变量与动画素材之间的映射逻辑，其中，所述映射逻辑用于指示从指定路径中为共用变量匹配动画素材。可选地，在本实施例中，在将第三初始状态机继承父类动画状态机中的目标类型所对应的目标角色类型表之前，可以在父类动画状态机中创建该父类动画状态机对应角色类型的至少一个初始角色类型表，在该初始角色类型表中建立该类型角色对应的一组共用变量，并创建共用变量与动画素材之间的映射逻辑来指示从指定路径中为共用变量匹配动画素材，该指定路径后续可以在创建第二子类动画状态机时进行指定。可选地，在本实施例中，映射逻辑给出了将动画素材映射到共用变量上的映射规则，比如：可以通过共用变量与素材标识之间的字符匹配来进行映射。可选地，在本实施例中，提供了一种一键自动化素材读取设置工具，该工具可以但不限于通过游戏开发引擎中的插件，功能，模块等形式来实现，或者也可以是单独的应用程序。在该工具中可以但不限于通过表配置的方式，实现一键将指定路径下的所有动画素材读取并配置到相应的角色类型表中，在父类动画状态机中创建素材的引用变量，并指示动画素材与变量之间的映射逻辑，得到角色类型表。在第二子类动画状态机中引用创建的角色类型表，并按照上述映射逻辑将制定路径下的动画素材映射到相应的变量上。图3是根据本申请实施例的一种一键自动化素材读取设置工具的示意图，如图3所示，初始的子类动画状态机继承父类动画状态机中的目标角色类型表，该目标角色类型表中包括Idle_xxx，Walk_xxx，Run_xxx等共用变量，通过点击Asset Path按钮指定动画素材的目标路径为/Game/xxx/xxx，通过点击Bind All Animation Data Assets按钮自动读取目标路径中的动画素材数据，并建立变量与动画素材之间的映射关系，得到具有映射关系的Idle_xxx与Idle动画素材，具有映射关系的Walk_xxx与Walk动画素材以及具有映射关系的Run_xxx与Run动画素材等等。从而得到目标虚拟角色对应的第二子类动画状态机，实现目标虚拟角色对基类动画状态机逻辑，以及各动画状态的动画素材进行引用。一键自动化素材读取设置工具的设计实现配合动画状态机的实现过程更大程度的提高了需求方的配置效率，使得需求方可实现一键配置所有的动画素材。在步骤S206提供的技术方案中，将第一子类动画状态机和第二子类动画状态机挂载到目标虚拟角色的角色模型上，从而实现目标虚拟角色的整套动画状态机。作为一种可选的实施例，将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上包括：S81，将所述第二子类动画状态机关联到所述目标虚拟角色的角色模型上；S82，将所述第一子类动画状态机通过所述目标虚拟角色的骨架网格体下的后期处理动画蓝图接口关联到所述骨架网格体上。可选地，在本实施例中，第二子类动画状态机可以直接关联到角色模型上。可选地，在本实施例中，可以但不限于通过骨架网格体下的后期处理动画蓝图接口将第一子类动画状态机关联到骨架网格体上。可选地，在本实施例中，后期处理动画蓝图是可对骨骼信息进行访问和应用的动画蓝图。动画蓝图是UE4中处理动画逻辑使用的蓝图，可控制骨架网格体的动画，也可编辑输出动画。图4是根据本申请实施例的一种虚拟角色的动画状态机挂载过程的示意图，如图4所示，对于虚拟角色NPC1，其子类动画状态机通过引用NPC1的角色类型对应的角色类型表继承父类动画状态机，并挂载到NPC1的角色模型上。其后期处理的子类动画状态机通过PostProcessAnimBlueprint挂载到NPC1的Mesh上，从而实现NPC1的全套动画状态机。对于虚拟角色Player1，其子类动画状态机通过引用Player1的角色类型对应的角色类型表继承父类动画状态机，并挂载到Player1的角色模型上。其后期处理的子类动画状态机通过PostProcessAnimBlueprint挂载到Player1的Mesh上，从而实现Player1的全套动画状态机。通过上述过程，可实现基于不同骨骼信息下的动画状态机共用，并解决子类中不可单独实现各自额外动画状态机逻辑、IK及物理逻辑的问题。并且在结构设计上各类动画状态机的功能分工更加清晰明了，大大减小耦合度。需要说明的是，对于前述的各方法实施例，为了简单描述，故将其都表述为一系列的动作组合，但是本领域技术人员应该知悉，本申请并不受所描述的动作顺序的限制，因为依据本申请，某些步骤可以采用其他顺序或者同时进行。其次，本领域技术人员也应该知悉，说明书中所描述的实施例均属于优选实施例，所涉及的动作和模块并不一定是本申请所必须的。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到根据上述实施例的方法可借助软件加必需的通用硬件平台的方式来实现，当然也可以通过硬件，但很多情况下前者是更佳的实施方式。基于这样的理解，本申请的技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台电子设备执行本申请各个实施例所述的方法。根据本申请实施例的另一个方面，还提供了一种用于实施上述动画状态机的实现方法的动画状态机的实现装置。图5是根据本申请实施例的一种可选的动画状态机的实现装置的示意图，如图5所示，该装置可以包括：第一创建模块52，用于创建目标虚拟角色对应的第一子类动画状态机，其中，所述第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑，所述基类动画状态机逻辑由父类动画状态机实现；第二创建模块54，用于创建所述目标虚拟角色对应的第二子类动画状态机，其中，所述第二子类动画状态机用于继承所述父类动画状态机所实现的所述基类动画状态机逻辑，并实现所述目标虚拟角色的动画转换逻辑；挂载模块56，用于将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上。需要说明的是，该实施例中的第一创建模块52可以用于执行本申请实施例中的步骤S202，该实施例中的第二创建模块54可以用于执行本申请实施例中的步骤S204，该实施例中的挂载模块56可以用于执行本申请实施例中的步骤S206。此处需要说明的是，上述模块与对应的步骤所实现的示例和应用场景相同，但不限于上述实施例所公开的内容。需要说明的是，上述模块作为装置的一部分可以运行在如图1所示的硬件环境中，可以通过软件实现，也可以通过硬件实现。通过上述模块，虚拟角色间可共用的基类动画状态机逻辑在父类动画状态机中实现，除基类动画状态机逻辑之外的、允许虚拟角色执行的动画状态机逻辑在第一子类动画状态机中实现，虚拟角色的第二子类动画状态机继承父类动画状态机并能够实现虚拟角色的动画转换逻辑，将第一子类动画状态机和第二子类动画状态机挂载到虚拟角色的角色模型上，实现了虚拟角色的整套动画状态机的同时，能够减少相同动画状态机逻辑的重复创建，并降低基类动画状态机逻辑的复杂度，从而实现了降低为虚拟角色创建动画状态机的冗余度和复杂度的技术效果，进而解决了为虚拟角色创建动画状态机的冗余度和复杂度较高的技术问题。作为一种可选的实施例，所述第一创建模块包括：第一创建单元，用于创建所述目标虚拟角色对应的第一初始状态机；第一实现单元，用于在所述第一初始状态机中实现所述子类动画状态机逻辑，所述目标虚拟角色的反向运动逻辑和所述目标虚拟角色的物理逻辑，得到所述第一子类动画状态机。作为一种可选的实施例，所述第二创建模块包括：第二创建单元，用于创建所述目标虚拟角色对应的第二初始状态机；第一继承单元，用于将所述第二初始状态机继承所述父类动画状态机；第二实现单元，用于使用所述基类动画状态机逻辑和所述子类动画状态机逻辑实现所述动画转换逻辑，得到所述第二子类动画状态机。作为一种可选的实施例，所述第一继承单元用于：从所述父类动画状态机中获取所述目标虚拟角色所属于的目标角色类型对应的目标角色类型表，其中，所述父类动画状态机中包括具有对应关系的角色类型和角色类型表，所述目标角色类型表中记录了允许属于所述目标角色类型的虚拟角色执行的动画状态机逻辑；在所述第二初始状态机中引用所述目标角色类型表，得到所述基类动画状态机逻辑。作为一种可选的实施例，所述第一继承单元用于：获取所述目标虚拟角色对应的配置信息，其中，所述配置信息用于指示开启所述目标角色类型表中记录的第一部分动画状态机逻辑，和/或，禁用所述目标角色类型表中记录的第二部分动画状态机逻辑；将所述目标角色类型表引用到所述第二初始状态机中，并依据所述配置信息的指示从所述目标角色类型表中确定所述基类动画状态机逻辑。作为一种可选的实施例，所述第二创建模块包括：第三创建单元，用于创建所述目标虚拟角色对应的第三初始状态机；第二继承单元，用于将所述第三初始状态机继承所述父类动画状态机中的目标类型所对应的目标角色类型表，其中，所述目标虚拟角色属于所述目标类型，所述目标角色类型表中记录了多个共用变量，所述多个共用变量用于标识允许属于所述目标类型的虚拟角色共用的多个动画状态；映射单元，用于将目标路径所指示的目标动画素材集合映射到所述多个共用变量上，得到所述第二子类动画状态机，其中，所述目标动画素材集合中包括允许所述目标虚拟角色使用的目标动画素材。作为一种可选的实施例，所述映射单元用于：将所述多个共用变量中的每个共用变量与所述目标动画素材中未匹配到共用变量的动画素材的素材标识进行匹配；建立匹配一致的共用变量与动画素材之间的映射关系，得到所述多个共用变量和所述目标动画素材之间的映射关系。作为一种可选的实施例，所述装置还包括：第三创建模块，用于在将所述第三初始状态机继承所述父类动画状态机中的目标类型所对应的目标角色类型表之前，在所述父类动画状态机中创建对应角色类型的至少一个初始角色类型表，其中，所述角色类型包括所述目标类型；建立模块，用于在所述至少一个初始角色类型表包括的每个初始角色类型表中，建立一组共用变量，得到具有对应关系的角色类型和角色类型表，其中，所述一组共用变量用于标识允许属于所述每个初始角色类型表对应的角色类型的虚拟角色共用的一组动画状态；第四创建模块，用于创建共用变量与动画素材之间的映射逻辑，其中，所述映射逻辑用于指示从指定路径中为共用变量匹配动画素材。作为一种可选的实施例，所述挂载模块包括：第一关联单元，用于将所述第二子类动画状态机关联到所述目标虚拟角色的角色模型上；第二关联单元，用于将所述第一子类动画状态机通过所述目标虚拟角色的骨架网格体下的后期处理动画蓝图接口关联到所述骨架网格体上。此处需要说明的是，上述模块与对应的步骤所实现的示例和应用场景相同，但不限于上述实施例所公开的内容。需要说明的是，上述模块作为装置的一部分可以运行在如图1所示的硬件环境中，可以通过软件实现，也可以通过硬件实现，其中，硬件环境包括网络环境。根据本申请实施例的另一个方面，还提供了一种用于实施上述动画状态机的实现方法的电子装置。图6是根据本申请实施例的一种电子装置的结构框图，如图6所示，该电子装置可以包括：一个或多个处理器601、存储器603、以及传输装置605，如图6所示，该电子装置还可以包括输入输出设备607。其中，存储器603可用于存储软件程序以及模块，如本申请实施例中的动画状态机的实现方法和装置对应的程序指令/模块，处理器601通过运行存储在存储器603内的软件程序以及模块，从而执行各种功能应用以及数据处理，即实现上述的动画状态机的实现方法。存储器603可包括高速随机存储器，还可以包括非易失性存储器，如一个或者多个磁性存储装置、闪存、或者其他非易失性固态存储器。在一些实例中，存储器603可进一步包括相对于处理器601远程设置的存储器，这些远程存储器可以通过网络连接至电子装置。上述网络的实例包括但不限于互联网、企业内部网、局域网、移动通信网及其组合。上述的传输装置605用于经由一个网络接收或者发送数据，还可以用于处理器与存储器之间的数据传输。上述的网络具体实例可包括有线网络及无线网络。在一个实例中，传输装置605包括一个网络适配器，其可通过网线与其他网络设备与路由器相连从而可与互联网或局域网进行通讯。在一个实例中，传输装置605为射频模块，其用于通过无线方式与互联网进行通讯。其中，具体地，存储器603用于存储应用程序。处理器601可以通过传输装置605调用存储器603存储的应用程序，以执行下述步骤：创建目标虚拟角色对应的第一子类动画状态机，其中，所述第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑，所述基类动画状态机逻辑由父类动画状态机实现；创建所述目标虚拟角色对应的第二子类动画状态机，其中，所述第二子类动画状态机用于继承所述父类动画状态机所实现的所述基类动画状态机逻辑，并实现所述目标虚拟角色的动画转换逻辑；将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上。采用本申请实施例，提供了一种动画状态机的实现的方案。虚拟角色间可共用的基类动画状态机逻辑在父类动画状态机中实现，除基类动画状态机逻辑之外的、允许虚拟角色执行的动画状态机逻辑在第一子类动画状态机中实现，虚拟角色的第二子类动画状态机继承父类动画状态机并能够实现虚拟角色的动画转换逻辑，将第一子类动画状态机和第二子类动画状态机挂载到虚拟角色的角色模型上，实现了虚拟角色的整套动画状态机的同时，能够减少相同动画状态机逻辑的重复创建，并降低基类动画状态机逻辑的复杂度，从而实现了降低为虚拟角色创建动画状态机的冗余度和复杂度的技术效果，进而解决了为虚拟角色创建动画状态机的冗余度和复杂度较高的技术问题。可选地，本实施例中的具体示例可以参考上述实施例中所描述的示例，本实施例在此不再赘述。本领域普通技术人员可以理解，图6所示的结构仅为示意，电子装置可以是智能手机、平板电脑、掌上电脑以及移动互联网设备、PAD等电子设备。图6其并不对上述电子装置的结构造成限定。例如，电子装置还可包括比图6中所示更多或者更少的组件，或者具有与图6所示不同的配置。本领域普通技术人员可以理解上述实施例的各种方法中的全部或部分步骤是可以通过程序来指令电子设备相关的硬件来完成，该程序可以存储于一计算机可读存储介质中，存储介质可以包括：闪存盘、只读存储器、随机存取器、磁盘或光盘等。本申请的实施例还提供了一种存储介质。可选地，在本实施例中，上述存储介质可以用于执行动画状态机的实现方法的程序代码。可选地，在本实施例中，上述存储介质可以位于上述实施例所示的网络中的多个网络设备中的至少一个网络设备上。可选地，在本实施例中，存储介质被设置为存储用于执行以下步骤的程序代码：创建目标虚拟角色对应的第一子类动画状态机，其中，所述第一子类动画状态机用于实现除基类动画状态机逻辑之外的、允许所述目标虚拟角色执行的子类动画状态机逻辑，所述基类动画状态机逻辑由父类动画状态机实现；创建所述目标虚拟角色对应的第二子类动画状态机，其中，所述第二子类动画状态机用于继承所述父类动画状态机所实现的所述基类动画状态机逻辑，并实现所述目标虚拟角色的动画转换逻辑；将所述第一子类动画状态机和所述第二子类动画状态机挂载到所述目标虚拟角色的角色模型上。可选地，本实施例中的具体示例可以参考上述实施例中所描述的示例，本实施例在此不再赘述。可选地，在本实施例中，上述存储介质可以包括但不限于：U盘、只读存储器、随机存取存储器、移动硬盘、磁碟或者光盘等各种可以存储程序代码的介质。上述本申请实施例序号仅仅为了描述，不代表实施例的优劣。上述实施例中的集成的单元如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在上述计算机可读取的存储介质中。基于这样的理解，本申请的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的全部或部分可以以软件产品的形式体现出来，该计算机软件产品存储在存储介质中，包括若干指令用以使得一台或多台计算机设备执行本申请各个实施例所述方法的全部或部分步骤。在本申请的上述实施例中，对各个实施例的描述都各有侧重，某个实施例中没有详述的部分，可以参见其他实施例的相关描述。在本申请所提供的几个实施例中，应该理解到，所揭露的客户端，可通过其它的方式实现。其中，以上所描述的装置实施例仅仅是示意性的，例如所述单元的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，例如多个单元或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另一点，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些接口，单元或模块的间接耦合或通信连接，可以是电性或其它的形式。所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本申请各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。上述集成的单元既可以采用硬件的形式实现，也可以采用软件功能单元的形式实现。以上所述仅是本申请的优选实施方式，应当指出，对于本技术领域的普通技术人员来说，在不脱离本申请原理的前提下，还可以做出若干改进和润饰，这些改进和润饰也应视为本申请的保护范围。
