标题title
一种界面推荐方法、装置、电子设备及介质
摘要abst
本申请提供了一种界面推荐方法、装置、电子设备及介质，方法包括：获取第一树形结构；针对每一个第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树；对相似子树进行迭代处理，得到该第二树形结构对应的第三树形结构；计算每个第三树形结构和第一树形结构之间的第二相似度，以将第二相似度大于第二预设阈值的第三树形结构对应的界面作为推荐界面。本申请能够通过将信息架构图和界面转化为对应的树形结构，基于节点属性和子树结构对界面对应的树形结构进行约简后，再将两个树形结构进行整体相似度计算，以将相似度高的树形结构对应的界面推荐给用户。
权利要求书clms
1.一种界面推荐方法，其特征在于，所述方法包括：获取信息架构图对应的第一树形结构；针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度，其中，所述第二树形结构中每个节点存在节点属性，所述一级子树为该第二树形结构的根节点的子树，所述一级子数组是由任意两个一级子树构成的；对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树；对所述相似子树进行迭代处理，得到该第二树形结构对应的第三树形结构，其中，所述第三树形结构中不存在所述相似子树，在进行每次迭代时，删除目标子树的相似子树，所述目标子树为每次迭代中拥有最多相似子树的子树，直至得到所述第三树形结构；对于每个所述第三树形结构，计算该第三树形结构和所述第一树形结构之间的第二相似度，以将第二相似度大于第二预设阈值的第三树形结构对应的界面作为推荐界面。2.根据权利要求1所述的界面推荐方法，其特征在于，在针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度之前，所述方法还包括：对于每一第二树形结构，删除该第二树形结构中第四节点属性为false的节点及其全部子孙节点，得到第一约简树形结构，其中，所述第四节点属性用于表示节点是否对用户可见；对于每一第一约简树形结构，删除该第一约简树形结构中的冗余节点，并将所述冗余节点的子节点接入所述冗余节点所处的位置，得到第二约简树形结构，其中，所述冗余节点为有且仅有一个子节点的节点，且该节点与其子节点的第五节点属性相同，所述第五节点属性用于表示节点在代码层中的坐标；对于每一第二约简树形结构，删除该第二约简树形结构中每个节点除第一节点属性、第二节点属性和第三节点属性以外的全部节点属性，得到第三约简树形结构，将所述第三约简树形结构作为所述第二树形结构，其中，所述第一节点属性用于表示节点的元素类型，所述第二节点属性用于表示节点的元素语义，所述第三节点属性用于表示节点具有的子节点。3.根据权利要求1所述的界面推荐方法，其特征在于，在对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树之后，所述方法还包括：判断一级子树中是否存在相似子树，若否，则针对每一一级子树，计算该一级子树对应的每两个二级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个二级子树作为相似子树，其中，所述二级子树为该一级子树的根节点的子树；判断二级子树中是否存在相似子树，若否，则针对每一二级子树，计算该二级子树对应的每两个三级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个三级子树作为相似子树，其中，所述三级子树为该二级子树的根节点的子树；以此类推，直至N级子树中存在相似子树。4.根据权利要求2所述的界面推荐方法，其特征在于，计算两个一级子树之间的节点属性相似度，包括：对于第一一级子树中的每一个节点，若在第二一级子树中不存在与该节点的第一节点属性和/或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第一数值，其中，所述第一一级子树为两个一级子树之间总节点数较少的一级子树，所述第二一级子树为两个一级子树之间总节点数较多的一级子树；对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第二数值，其中，所述第二数值大于所述第一数值；对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性和第二节点属性均相同的节点，则将该节点的节点属性相似值设置为第三数值，其中，所述第三数值大于所述第二数值；根据以下第一公式计算两个一级子树之间的节点属性相似度；其中，t1为所述第一一级子树，t2为所述第二一级子树，为所述第一一级子树的总节点数，为所述第一一级子树中第i个节点的节点属性相似值。5.根据权利要求2所述的界面推荐方法，其特征在于，计算两个一级子树之间的结构相似度，包括：对第三一级子树和第四一级子树中的同类节点和非同类节点进行编号，其中，所述第三一级子树为两个一级子树中根节点的子节点数较少的一级子树，所述第四一级子树为两个一级子树中根节点的子节点数较多的一级子树，所述同类节点为第一节点属性和第二节点属性均相同的节点，且所述同类节点的编号相同，所述非同类节点为第一节点属性和第二节点属性不均相同的节点，且所述非同类节点的编号不同；从所述第四一级子树中的每条路径中选取候选匹配路径，其中，所述候选匹配路径为同时存在于所述第三一级子树和所述第四一级子树中的对应编号顺序组合相同的路径，所述第三一级子树和所述第四一级子树均包括多条路径，对于每条路径，该路径是通过编号顺序组合的形式表示的；从所述候选匹配路径中选取对应编号最多的路径作为目标匹配路径；按照以下第二公式进行递归计算，得到所述结构相似度；其中，Strusim为所述结构相似度，t1为所述第三一级子树，t2为所述第四一级子树，Rt为所述第四一级子树的根节点的第t个子节点，L为以Rt为根节点的树的层数，N为第四一级子树的根节点的子节点数量；若t1的根节点和t2的根节点的第一节点属性和第二节点属性均相同，则MR＝1，否则，MR＝0；若Rt为叶节点，则V＝F，否则其中，Ct为Rt的子节点集合，e为Rt的子节点，N为Rt的子节点数量，若Rt对应的编号包括于所述目标匹配路径对应的编号顺序组合中，则F＝1，否则F＝0。6.根据权利要求2所述的界面推荐方法，其特征在于，所述第一树形结构中每个节点存在节点属性；所述计算每一第三树形结构和所述第一树形结构之间的第二相似度，包括：按照以下第三公式进行递归计算得到所述第二相似度；其中，TA为所述第一树形结构，TB为所述第三树形结构，RA为所述第一树形结构的根节点，RA为所述第三树形结构的根节点，RA≠RA的含义为RA与RB的第一节点属性和第二节点属性不均相同，RA＝RB的含义为RA与RB的第一节点属性和第二节点属性均相同，nA为所述第一树形结构的总节点数量，nB为所述第三树形结构的总节点数量，m为RA的子节点数量，n为RB的子节点数量，nAi为RA的第i个子树的总节点数量，nBj为RB的第j个子树的总节点数量，refi为RA的第i个子树与其第一匹配对象的第二相似度，refj为RB的第j个子树与其第二匹配对象对应的第二相似度里值最高的第二相似度；其中，所述第一匹配对象为与RA的第i个子树的第二相似度最高的RB的子树，所述第二匹配对象为RB的第j个子树对应的RA的子树。7.一种界面推荐装置，其特征在于，所述装置包括：获取模块，用于获取信息架构图对应的第一树形结构；第一计算模块，用于针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度，其中，所述第二树形结构中每个节点存在节点属性，所述一级子树为该第二树形结构的根节点的子树，所述一级子数组是由任意两个一级子树构成的；第二计算模块，用于对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树；删除模块，用于对所述相似子树进行迭代处理，得到该第二树形结构对应的第三树形结构，其中，所述第三树形结构中不存在所述相似子树，在进行每次迭代时，删除目标子树的相似子树，所述目标子树为每次迭代中拥有最多相似子树的子树，直至得到所述第三树形结构；第三计算模块，用于对于每个所述第三树形结构，计算该第三树形结构和所述第一树形结构之间的第二相似度，以将第二相似度大于第二预设阈值的第三树形结构对应的界面作为推荐界面。8.根据权利要求7所述的界面推荐装置，其特征在于，所述装置还包括：第一约简模块，用于在针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度之后，对于每一第二树形结构，删除该第二树形结构中第四节点属性为false的节点及其全部子孙节点，得到第一约简树形结构，其中，所述第四节点属性用于表示节点是否对用户可见；第二约简模块，用于对于每一第一约简树形结构，删除该第一约简树形结构中的冗余节点，并将所述冗余节点的子节点接入所述冗余节点所处的位置，得到第二约简树形结构，其中，所述冗余节点为有且仅有一个子节点的节点，且该节点与其子节点的第五节点属性相同，所述第五节点属性用于表示节点在代码层中的坐标；第三约简模块，用于对于每一第二约简树形结构，删除该第二约简树形结构中每个节点除第一节点属性、第二节点属性和第三节点属性以外的全部节点属性，得到第三约简树形结构，将所述第三约简树形结构作为所述第二树形结构，其中，所述第一节点属性用于表示节点的元素类型，所述第二节点属性用于表示节点的元素语义，所述第三节点属性用于表示节点具有的子节点。9.一种电子设备，其特征在于，包括：处理器、存储介质和总线，所述存储介质存储有所述处理器可执行的机器可读指令，当电子设备运行时，所述处理器与所述存储介质之间通过总线通信，所述处理器执行所述机器可读指令，以执行如权利要求1至6任一项所述的界面推荐方法的步骤。10.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质上存储有计算机程序，所述计算机程序被处理器运行时执行如权利要求1至6任一项所述的界面推荐方法的步骤。
说明书desc
技术领域本申请涉及软件应用设计领域，具体而言，涉及一种界面推荐方法、装置、电子设备及介质。背景技术在软件应用设计中，在进行功能设计之后，在需求和功能都明确的情况下，将这些分散的内容与功能，通过分析、组织、设计的方法，最终形成的一个合理且有价值的整体便是信息架构，这种形式反映在界面上的可视化表达便是信息架构图。下一阶段，就是设计人员根据信息架构图绘制线框图，而这时设计人员需要寻找符合当前设计需求，适合当前信息架构的类似界面作为绘制线框图的参考。目前，类似界面的检索方式如下：基于界面属性描述如“购物”“列表”进行检索。然而，由于产品需求描述较为主观，很难用简单的几个词语准确表达，所以基于界面属性进行检索的方式得到的界面与当前信息架构的相似度并不高，并不适合作为绘制线框图的参考。发明内容有鉴于此，本申请的目的在于提供一种界面推荐方法、装置、电子设备及介质，能够通过将信息架构图和界面库中的界面转化为对应的树形结构，基于节点属性和子树结构对界面对应的树形结构进行约简后，再将两个树形结构进行整体相似度计算，以将相似度高的树形结构对应的界面推荐给用户。第一方面，本申请实施例提供了一种界面推荐方法，所述方法包括：获取信息架构图对应的第一树形结构；针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度，其中，所述第二树形结构中每个节点存在节点属性，所述一级子树为该第二树形结构的根节点的子树，所述一级子数组是由任意两个一级子树构成的；对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树；对所述相似子树进行迭代处理，得到该第二树形结构对应的第三树形结构，其中，所述第三树形结构中不存在所述相似子树，在进行每次迭代时，删除目标子树的相似子树，所述目标子树为每次迭代中拥有最多相似子树的子树，直至得到所述第三树形结构；对于每个所述第三树形结构，计算该第三树形结构和所述第一树形结构之间的第二相似度，以将第二相似度大于第二预设阈值的第三树形结构对应的界面作为推荐界面。在一种可能的实施方式中，在针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度之前，所述方法还包括：对于每一第二树形结构，删除该第二树形结构中第四节点属性为false的节点及其全部子孙节点，得到第一约简树形结构，其中，所述第四节点属性用于表示节点是否对用户可见；对于每一第一约简树形结构，删除该第一约简树形结构中的冗余节点，并将所述冗余节点的子节点接入所述冗余节点所处的位置，得到第二约简树形结构，其中，所述冗余节点为有且仅有一个子节点的节点，且该节点与其子节点的第五节点属性相同，所述第五节点属性用于表示节点在代码层中的坐标；对于每一第二约简树形结构，删除该第二约简树形结构中每个节点除第一节点属性、第二节点属性和第三节点属性以外的全部节点属性，得到第三约简树形结构，将所述第三约简树形结构作为所述第二树形结构，其中，所述第一节点属性用于表示节点的元素类型，所述第二节点属性用于表示节点的元素语义，所述第三节点属性用于表示节点具有的子节点。在一种可能的实施方式中，在对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树之后，所述方法还包括：判断一级子树中是否存在相似子树，若否，则针对每一一级子树，计算该一级子树对应的每两个二级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个二级子树作为相似子树，其中，所述二级子树为该一级子树的根节点的子树；判断二级子树中是否存在相似子树，若否，则针对每一二级子树，计算该二级子树对应的每两个三级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个三级子树作为相似子树，其中，所述三级子树为该二级子树的根节点的子树；以此类推，直至N级子树中存在相似子树。在一种可能的实施方式中，计算两个一级子树之间的节点属性相似度，包括：对于第一一级子树中的每一个节点，若在第二一级子树中不存在与该节点的第一节点属性和/或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第一数值，其中，所述第一一级子树为两个一级子树之间总节点数较少的一级子树，所述第二一级子树为两个一级子树之间总节点数较多的一级子树；对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第二数值，其中，所述第二数值大于所述第一数值；对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性和第二节点属性均相同的节点，则将该节点的节点属性相似值设置为第三数值，其中，所述第三数值大于所述第二数值；根据以下第一公式计算两个一级子树之间的节点属性相似度；其中，t1为所述第一一级子树，t2为所述第二一级子树，k为所述第一一级子树的总节点数，为所述第一一级子树中第i个节点的节点属性相似值。在一种可能的实施方式中，计算两个一级子树之间的结构相似度，包括：对第三一级子树和第四一级子树中的同类节点和非同类节点进行编号，其中，所述第三一级子树为两个一级子树中根节点的子节点数较少的一级子树，所述第四一级子树为两个一级子树中根节点的子节点数较多的一级子树，所述同类节点为第一节点属性和第二节点属性均相同的节点，且所述同类节点的编号相同，所述非同类节点为第一节点属性和第二节点属性不均相同的节点，且所述非同类节点的编号不同；从所述第四一级子树中的每条路径中选取候选匹配路径，其中，所述候选匹配路径为同时存在于所述第三一级子树和所述第四一级子树中的对应编号顺序组合相同的路径，所述第三一级子树和所述第四一级子树均包括多条路径，对于每条路径，该路径是通过编号顺序组合的形式表示的。从所述候选匹配路径中选取对应编号最多的路径作为目标匹配路径；按照以下第二公式进行递归计算，得到所述结构相似度；其中，Strusim为所述结构相似度，t1为所述第三一级子树，t2为所述第四一级子树，Rt为所述第四一级子树的根节点的第t个子节点，L为以Rt为根节点的树的层数，N为第四一级子树的根节点的子节点数量；若t1的根节点和t2的根节点的第一节点属性和第二节点属性均相同，则MR＝1，否则，MR＝0；若Rt为叶节点，则V＝F，否则其中，Ct为Rt的子节点集合，e为Rt的子节点，N为Rt的子节点数量，若Rt对应的编号包括于所述目标匹配路径对应的编号顺序组合中，则F＝1，否则F＝0。在一种可能的实施方式中，所述第一树形结构中每个节点存在节点属性；所述计算每一第三树形结构和所述第一树形结构之间的第二相似度，包括：按照以下第三公式进行递归计算得到所述第二相似度；其中，TA为所述第一树形结构，TB为所述第三树形结构，RA为所述第一树形结构的根节点，RB为所述第三树形结构的根节点，RA≠RB的含义为RA与RB的第一节点属性和第二节点属性不均相同，RA＝RB的含义为RA与RB的第一节点属性和第二节点属性均相同，nA为所述第一树形结构的总节点数量，nB为所述第三树形结构的总节点数量，m为RA的子节点数量，n为RB的子节点数量，nAi为RA的第i个子树的总节点数量，nBj为RB的第j个子树的总节点数量，refi为RA的第i个子树与其第一匹配对象的第二相似度，refj为RB的第j个子树与其第二匹配对象对应的第二相似度里值最高的第二相似度；其中，所述第一匹配对象为与RA的第i个子树的第二相似度最高的RB的子树，所述第二匹配对象为RB的第j个子树对应的RA的子树。第二方面，本申请实施例提供了一种界面推荐装置，所述装置包括：获取模块，用于获取信息架构图对应的第一树形结构；第一计算模块，用于针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度，其中，所述第二树形结构中每个节点存在节点属性，所述一级子树为该第二树形结构的根节点的子树，所述一级子数组是由任意两个一级子树构成的；第二计算模块，用于对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树；删除模块，用于对所述相似子树进行迭代处理，得到该第二树形结构对应的第三树形结构，其中，所述第三树形结构中不存在所述相似子树，在进行每次迭代时，删除目标子树的相似子树，所述目标子树为每次迭代中拥有最多相似子树的子树，直至得到所述第三树形结构；第三计算模块，用于对于每个所述第三树形结构，计算该第三树形结构和所述第一树形结构之间的第二相似度，以将第二相似度大于第二预设阈值的第三树形结构对应的界面作为推荐界面。在一种可能的实施方式中，所述装置还包括：第一约简模块，用于在针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度之前，对于每一第二树形结构，删除该第二树形结构中第四节点属性为false的节点及其全部子孙节点，得到第一约简树形结构，其中，所述第四节点属性用于表示节点是否对用户可见；第二约简模块，用于对于每一第一约简树形结构，删除该第一约简树形结构中的冗余节点，并将所述冗余节点的子节点接入所述冗余节点所处的位置，得到第二约简树形结构，其中，所述冗余节点为有且仅有一个子节点的节点，且该节点与其子节点的第五节点属性相同，所述第五节点属性用于表示节点在代码层中的坐标；第三约简模块，用于对于每一第二约简树形结构，删除该第二约简树形结构中每个节点除第一节点属性、第二节点属性和第三节点属性以外的全部节点属性，得到第三约简树形结构，将所述第三约简树形结构作为所述第二树形结构，其中，所述第一节点属性用于表示节点的元素类型，所述第二节点属性用于表示节点的元素语义，所述第三节点属性用于表示节点具有的子节点。在一种可能的实施方式中，所述装置还包括：判断模块，用于在对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树之后，判断一级子树中是否存在相似子树，若否，则针对每一一级子树，计算该一级子树对应的每两个二级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个二级子树作为相似子树，其中，所述二级子树为该一级子树的根节点的子树；判断二级子树中是否存在相似子树，若否，则针对每一二级子树，计算该二级子树对应的每两个三级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个三级子树作为相似子树，其中，所述三级子树为该二级子树的根节点的子树；以此类推，直至N级子树中存在相似子树。在一种可能的实施方式中，所述第一计算模块，还用于：对于第一一级子树中的每一个节点，若在第二一级子树中不存在与该节点的第一节点属性和/或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第一数值，其中，所述第一一级子树为两个一级子树之间总节点数较少的一级子树，所述第二一级子树为两个一级子树之间总节点数较多的一级子树；对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第二数值，其中，所述第二数值大于所述第一数值；对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性和第二节点属性均相同的节点，则将该节点的节点属性相似值设置为第三数值，其中，所述第三数值大于所述第二数值；根据以下第一公式计算两个一级子树之间的节点属性相似度；其中，t1为所述第一一级子树，t2为所述第二一级子树，k为所述第一一级子树的总节点数，为所述第一一级子树中第i个节点的节点属性相似值。在一种可能的实施方式中，所述第一计算模块，还用于：对第三一级子树和第四一级子树中的同类节点和非同类节点进行编号，其中，所述第三一级子树为两个一级子树中根节点的子节点数较少的一级子树，所述第四一级子树为两个一级子树中根节点的子节点数较多的一级子树，所述同类节点为第一节点属性和第二节点属性均相同的节点，且所述同类节点的编号相同，所述非同类节点为第一节点属性和第二节点属性不均相同的节点，且所述非同类节点的编号不同；从所述第四一级子树中的每条路径中选取候选匹配路径，其中，所述候选匹配路径为同时存在于所述第三一级子树和所述第四一级子树中的对应编号顺序组合相同的路径，所述第三一级子树和所述第四一级子树均包括多条路径，对于每条路径，该路径是通过编号顺序组合的形式表示的；从所述候选匹配路径中选取对应编号最多的路径作为目标匹配路径；按照以下第二公式进行递归计算，得到所述结构相似度；其中，Strusim为所述结构相似度，t1为所述第三一级子树，t2为所述第四一级子树，Rt为所述第四一级子树的根节点的第t个子节点，L为以Rt为根节点的树的层数，N为第四一级子树的根节点的子节点数量；若t1的根节点和t2的根节点的第一节点属性和第二节点属性均相同，则MR＝1，否则，MR＝0；若Rt为叶节点，则V＝F，否则其中，Ct为Rt的子节点集合，e为Rt的子节点，N为Rt的子节点数量，若Rt对应的编号包括于所述目标匹配路径对应的编号顺序组合中，则F＝1，否则F＝0。在一种可能的实施方式中，所述第一树形结构中每个节点存在节点属性；所述第三计算模块，具体用于：按照以下第三公式进行递归计算得到所述第二相似度；其中，TA为所述第一树形结构，TB为所述第三树形结构，RA为所述第一树形结构的根节点，RB为所述第三树形结构的根节点，RA≠RB的含义为RA与RB的第一节点属性和第二节点属性不均相同，RA＝RB的含义为RA与RB的第一节点属性和第二节点属性均相同，nA为所述第一树形结构的总节点数量，nB为所述第三树形结构的总节点数量，m为RA的子节点数量，n为RB的子节点数量，nAi为RA的第i个子树的总节点数量，nBj为RB的第j个子树的总节点数量，refi为RA的第i个子树与其第一匹配对象的第二相似度，refj为RB的第j个子树与其第二匹配对象对应的第二相似度里值最高的第二相似度；其中，所述第一匹配对象为与RA的第i个子树的第二相似度最高的RB的子树，所述第二匹配对象为RB的第j个子树对应的RA的子树。第三方面，本申请实施例提供了一种电子设备，包括：处理器、存储介质和总线，所述存储介质存储有所述处理器可执行的机器可读指令，当电子设备运行时，所述处理器与所述存储介质之间通过总线通信，所述处理器执行所述机器可读指令，以执行如第一方面任一项所述的界面推荐方法的步骤。第四方面，本申请实施例提供了一种计算机可读存储介质，所述计算机可读存储介质上存储有计算机程序，所述计算机程序被处理器运行时执行第一方面任一项所述的界面推荐方法的步骤。本申请实施例提供的一种界面推荐方法、装置、电子设备及介质，能够通过将信息架构图和界面库中的界面转化为对应的树形结构，基于节点属性和子树结构对界面对应的树形结构进行约简后，再将两个树形结构进行整体相似度计算，以将相似度高的树形结构对应的界面推荐给用户。为使本申请的上述目的、特征和优点能更明显易懂，下文特举较佳实施例，并配合所附附图，作详细说明如下。附图说明为了更清楚地说明本申请实施例的技术方案，下面将对实施例中所需要使用的附图作简单地介绍，应当理解，以下附图仅示出了本申请的某些实施例，因此不应被看作是对范围的限定，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他相关的附图。图1示出了本申请实施例提供的一种树形结构示意图；图2示出了本申请实施例提供的另一种界面推荐方法的流程图；图3示出了本申请实施例提供的另一种界面推荐方法的流程图；图4示出了本申请实施例提供的另一种界面推荐方法的流程图；图5示出了本申请实施例提供的另一种界面推荐方法的流程图；图6示出了本申请实施例提供的另一种界面推荐方法的流程图；图7示出了本申请实施例提供的另一种树形结构示意图；图8示出了本申请实施例提供的一种界面推荐装置的结构示意图；图9示出了本申请实施例提供的一种电子设备的结构示意图。具体实施方式为使本申请实施例的目的、技术方案和优点更加清楚，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，应当理解，本申请中附图仅起到说明和描述的目的，并不用于限定本申请的保护范围。另外，应当理解，示意性的附图并未按实物比例绘制。本申请中使用的流程图示出了根据本申请的一些实施例实现的操作。应该理解，流程图的操作可以不按顺序实现，没有逻辑的上下文关系的步骤可以反转顺序或者同时实施。此外，本领域技术人员在本申请内容的指引下，可以向流程图添加一个或多个其他操作，也可以从流程图中移除一个或多个操作。另外，所描述的实施例仅仅是本申请一部分实施例，而不是全部的实施例。通常在此处附图中描述和示出的本申请实施例的组件可以以各种不同的配置来布置和设计。因此，以下对在附图中提供的本申请的实施例的详细描述并非旨在限制要求保护的本申请的范围，而是仅仅表示本申请的选定实施例。基于本申请的实施例，本领域技术人员在没有做出创造性劳动的前提下所获得的所有其他实施例，都属于本申请保护的范围。需要说明的是，本申请实施例中将会用到术语“包括”，用于指出其后所声明的特征的存在，但并不排除增加其它的特征。术语解释：根节点：对树形结构中没有父节点的节点称为根节点，一个树形结构中只有一个根节点。非根非叶节点：对树形结构中既有父节点也有子节点的节点称为非根非叶节点。叶节点：对树形结构中没有子节点的节点称为叶节点。子孙节点：以某节点为根的子树中的任一节点。参照图1所示，本申请实施例提供的一种树形结构示意图，进一步说明如下：其中，该树形结构的层数即为5层，有A～Q共计17个节点，A即为该树形结构的根节点，Q、K、L、M、H、N、O、P即为叶节点，其余节点即为非根非叶节点；若以A为例，B～Q均为A的子孙节点；根节点A的子树有3个，分别为：由B、E、J、K、Q组成的树，由C、F、G、L、M组成的树和由D、H、I、N、O、P组成的树。再以节点C为例，节点C的子树有2个，分别为：由F、L组成的树，以及，由G、M组成的树。参照图2所示，本申请实施例提供的一种界面推荐方法的流程图，所述方法包括：S201、获取信息架构图对应的第一树形结构。例如，思维导图便是一种常见的信息架构图，将用户提供的信息架构图进行数据解析，转换为计算机可处理的树形结构的形式。S202、针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度，其中，所述第二树形结构中每个节点存在节点属性，所述一级子树为该第二树形结构的根节点的子树，所述一级子数组是由任意两个一级子树构成的。对界面库中每一个界面进行架构抽取，得到每一个界面对应的第二树形结构。以其中某一界面对应的第二树形结构为例，该第二树形结构中每个节点都存在节点属性，计算该第二树形结构的根节点的每两个子树之间的节点属性相似度和结构相似度。S203、对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树。假设该第二信息架构树的根节点存在3个一级子树：一级子树1、一级子树2、一级子树3。以一级子树1和一级子树2为例：计算得到一级子树1和一级子树2之间的节点属性相似度SemSim和结构相似度StruSim后，按以下公式对二者进行加权求和：Sim＝λ1SemSim+λ2StruSim其中，一般λ1取0.2，λ2取0.8，Sim即一级子树1和一级子树2之间的第一相似度。按此方式，得到每两个一级子树之间的第一相似度，以将第一相似度大于预设阈值的两个一级子树作为相似子树。S204、对所述相似子树进行迭代处理，得到该第二树形结构对应的第三树形结构，其中，所述第三树形结构中不存在所述相似子树，在进行每次迭代时，删除目标子树的相似子树，所述目标子树为每次迭代中拥有最多相似子树的子树，直至得到所述第三树形结构。例如，存在一级子树1～一级子树10这10个一级子树，其中，一级子树1和一级子树2为相似子树，一级子树1和一级子树3为相似子树，一级子树1和一级子树4为相似子树，一级子树4和一级子树5为相似子树，一级子树4和一级子树6为相似子树，一级子树4和一级子树7为相似子树，一级子树4和一级子树8为相似子树，一级子树2和一级子树9为相似子树，一级子树2和一级子树10为相似子树。删除顺序即为：第一次迭代时，由于拥有最多相似子树的为一级子树4，因此将一级子树4的相似子树删除，本次迭代后，剩下一级子树2、一级子树3、一级子树4、一级子树9和一级子树10。对这5个一级子树进行第二次迭代，此时，拥有最多相似子树的为一级子树2，因此将一级子树2的相似子树删除，本次迭代后，剩下一级子树2、一级子树3和一级子树4，不再存在相似子树，迭代完成，得到第二树形结构对应的第三树形结构。S205、对于每个所述第三树形结构，计算该第三树形结构和所述第一树形结构之间的第二相似度，以将第二相似度大于第二预设阈值的第三树形结构对应的界面作为推荐界面。其中，第二预设阈值可根据情况进行调整。此外，用户还可以按照第二相似度以升序排列或降序排列的方式对推荐界面进行排列；以及，用户可以在全部推荐界面按照第二相似度以升序排列或降序排列的方式进行排列后，选择只展示全部推荐界面中的前k个。参照图3所示，本申请实施例提供的另一种界面推荐方法的流程图，在一种可能的实施方式中，在针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度之前，所述方法还包括：S301、对于每一第二树形结构，删除该第二树形结构中第四节点属性为false的节点及其全部子孙节点，得到第一约简树形结构，其中，所述第四节点属性用于表示节点是否对用户可见。一般，第四节点属性名称为“visible-to-user”，用于表示节点是否对用户可见。对于每一第二树形结构，对该第二树形结构进行遍历，删除该第二树形结构中对用户不可见的节点，若该节点为叶节点，则将该节点删除，若该节点为非根非叶节点，则将该节点及其子孙节点一起删除。遍历完成后，得到第一约简树形结构。S302、对于每一第一约简树形结构，删除该第一约简树形结构中的冗余节点，并将所述冗余节点的子节点接入所述冗余节点所处的位置，得到第二约简树形结构，其中，所述冗余节点为有且仅有一个子节点的节点，且该节点与其子节点的第五节点属性相同，所述第五节点属性用于表示节点在代码层中的坐标。一般，第五节点属性名称为“rel-bounds”，用于表示节点在代码层中的坐标。对于每一第二树形结构，对该第二树形结构进行遍历，删除该第二树形结构中的冗余节点，并将冗余节点的子节点接入冗余节点原本所处的位置。遍历完成后，得到第二约简树形结构。此外，步骤S302可以在步骤S301之前执行，也可以在步骤S301之后执行S303、对于每一第二约简树形结构，删除该第二约简树形结构中每个节点除第一节点属性、第二节点属性和第三节点属性以外的全部节点属性，得到第三约简树形结构，将所述第三约简树形结构作为所述第二树形结构，其中，所述第一节点属性用于表示节点的元素类型，所述第二节点属性用于表示节点的元素语义，所述第三节点属性用于表示节点具有的子节点。一般，第一节点属性名称为“class”，用于表示节点的元素类型；第二节点属性名称为“componentLabel”，用于表示节点的元素语义；第三节点属性名称为“children”，用于表示节点具有的子节点。对对于每一第二树形结构，对该第二树形结构进行遍历，只保留每个节点的“class”、“componentLabel”、“children”这三个节点属性，将其余节点属性删除。遍历完成后，得到第三约简树形结构，并将第三约简树形结构作为第二树形结构。参照图4所示，本申请实施例提供的另一种界面推荐方法的流程图，在一种可能的实施方式中，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树之后，所述方法还包括：S401、判断一级子树中是否存在相似子树，若否，则针对每一一级子树，计算该一级子树对应的每两个二级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个二级子树作为相似子树，其中，所述二级子树为该一级子树的根节点的子树。S402、判断二级子树中是否存在相似子树，若否，则针对每一二级子树，计算该二级子树对应的每两个三级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个三级子树作为相似子树，其中，所述三级子树为该二级子树的根节点的子树。S403、以此类推，直至N级子树中存在相似子树。结合步骤S401～S403，以某一N层的第二树形结构为例，该第二树形结构中除叶节点外每个节点均具有3个子节点，若该第二树形结构的根节点的3个子树中不存在相似子树，那么针对每一个一级子树，计算该一级子树的每两个二级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个二级子树作为相似子树。具体来说，假设一级子树1、一级子树2和一级子树3均不互为相似子树，则计算一级子树1对应的三个二级子树两两之间的第一相似度，以将其中第一相似度大于第一预设阈值的两者作为相似子树；同理，计算一级子树2对应的三个二级子树两两之间的相似度，以将其中第一相似度大于第一预设阈值的两者作为相似子树；计算一级子树3对应的三个二级子树两两之间的相似度，以将其中第一相似度大于第一预设阈值的两者作为相似子树。假设二级子树11，二级子树12，二级子树13之间存在相似子树，则无需再计算二级子树11的根节点的每两个子树之间的第一相似度、二级子树12的根节点的每两个子树之间的第一相似度、二级子树13的根节点的每两个子树之间的第一相似度；同理，若二级子树21，二级子树22，二级子树23之间存在相似子树，无需再计算二级子树21的根节点的每两个子树之间的第一相似度、二级子树22的根节点的每两个子树之间的第一相似度、二级子树23的根节点的每两个子树之间的第一相似度；而若二级子树31，二级子树32，二级子树33之间不存在相似子树，则需再计算二级子树31的根节点的每两个子树之间的第一相似度、二级子树32的根节点的每两个子树之间的第一相似度、二级子树33的根节点的每两个子树之间的第一相似度。以此类推。参照图5所示，本申请实施例提供的另一种界面推荐方法的流程图，在一种可能的实施方式中，计算两个一级子树之间的节点属性相似度，包括：S501、对于第一一级子树中的每一个节点，若在第二一级子树中不存在与该节点的第一节点属性和/或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第一数值，其中，所述第一一级子树为两个一级子树之间总节点数较少的一级子树，所述第二一级子树为两个一级子树之间总节点数较多的一级子树。针对第一一级子树中的每一个节点，若在第二一级子树中任一节点与该节点的第一节点属性和第二节点属性均不相同，则将该节点的节点属性相似值设置为第一数值，其中，第一数值可以设置为0。S502、对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第二数值，其中，所述第二数值大于所述第一数值。针对第一一级子树中的每一个节点，若在第二一级子树中仅存在与该节点的第一节点属性或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第一数值，其中，第二数值可以设置为1。S503、对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性和第二节点属性均相同的节点，则将该节点的节点属性相似值设置为第三数值，其中，所述第三数值大于所述第二数值。针对第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性和第二节点属性均相同的节点，则将该节点的节点属性相似值设置为第一数值，其中，第三数值可以设置为2。此外，步骤S501～步骤S503的执行顺序可以任意调整，即谁先执行谁后执行结果相同。S504、根据以下第一公式计算两个一级子树之间的节点属性相似度；其中，t1为所述第一一级子树，t2为所述第二一级子树，k为所述第一一级子树的总节点数，为所述第一一级子树中第i个节点的节点属性相似值。在得到第三一级子树中每个节点的节点属性相似值后，按照上述公式计算便可得到两个一级子树之间的节点属性相似度SemSim。参照图6所示，本申请实施例提供的另一种界面推荐方法的流程图，在一种可能的实施方式中，计算两个一级子树之间的结构相似度，包括：S601、对第三一级子树和第四一级子树中的同类节点和非同类节点进行编号，其中，所述第三一级子树为两个一级子树中根节点的子节点数较少的一级子树，所述第四一级子树为两个一级子树中根节点的子节点数较多的一级子树，所述同类节点为第一节点属性和第二节点属性均相同的节点，且所述同类节点的编号相同，所述非同类节点为第一节点属性和第二节点属性不均相同的节点，且所述非同类节点的编号不同。S602、从所述第四一级子树中的每条路径中选取候选匹配路径，其中，所述候选匹配路径为同时存在于所述第三一级子树和所述第四一级子树中的对应编号顺序组合相同的路径，所述第三一级子树和所述第四一级子树均包括多条路径，对于每条路径，该路径是通过编号顺序组合的形式表示的。S603、从所述候选匹配路径中选取对应编号最多的路径作为目标匹配路径。结合步骤S601～S603，通过图7进行说明：图7中，假设子树1中的A和子树2中的J的第一节点属性和第二节点属性均相同，那么A和J即为同类型节点，因此，二者的编号相同，A、J与其他节点均为非同类型节点，因此，其他节点与A和J的编号不同。同理，B、K、L也是同类型节点编号相同；C、D、N也是同类型节点编号相同；E、O为同类型节点编号相同；G、Q为同类型节点编号相同；H、R为同类型节点编号相同；M和I不存在同类型节点，与其他节点编号均不同。然后，便可以用节点对应的编号对两个子树中的每条路径以编号顺序组合的形式表示，以图中的子树1为例，子树1中存在路径：，，，，，，，，，，，，，，那么同时存在于子树1和子树2中的候选匹配路径即有，，，，，其中，路径包括的编号最多，所以路径即为目标匹配路径。S604、按照以下第二公式进行递归计算，得到所述结构相似度；其中，Strusim为所述结构相似度，t1为所述第三一级子树，t2为所述第四一级子树，Rt为所述第四一级子树的根节点的第t个子节点，L为以Rt为根节点的树的层数，N为第四一级子树的根节点的子节点数量；若t1的根节点和t2的根节点的第一节点属性和第二节点属性均相同，则MR＝1，否则，MR＝0；若Rt为叶节点，则V＝F，否则其中，Ct为Rt的子节点集合，e为Rt的子节点，N为Rt的子节点数量，若Rt对应的编号包括于所述目标匹配路径对应的编号顺序组合中，则F＝1，否则F＝0。同理，L为以e为根节点的树的层数，V也是按照第二公式进行递归计算得到的。在一种可能的实施方式中，所述第一树形结构中每个节点存在节点属性；所述计算每一第三树形结构和所述第一树形结构之间的第二相似度，包括：按照以下第三公式进行递归计算得到所述第二相似度；其中，TA为所述第一树形结构，TB为所述第三树形结构，RA为所述第一树形结构的根节点，RA为所述第三树形结构的根节点，RA≠RA的含义为RA与RB的第一节点属性和第二节点属性不均相同，RA＝RB的含义为RA与RB的第一节点属性和第二节点属性均相同，nA为所述第一树形结构的总节点数量，nB为所述第三树形结构的总节点数量，m为RA的子节点数量，n为RB的子节点数量，nAi为RA的第i个子树的总节点数量，nBj为RB的第j个子树的总节点数量，refi为RA的第i个子树与其第一匹配对象的第二相似度，refj为RB的第j个子树与其第二匹配对象对应的第二相似度里值最高的第二相似度；其中，所述第一匹配对象为与RA的第i个子树的第二相似度最高的RB的子树，所述第二匹配对象为RB的第j个子树对应的RA的子树。对refi和refj的具体说明如下：例如，第一树形结构的根节点存在4个子树O、P、Q、R，第三树形结构的根节点存在4个子树A、B、C、D，子树O与子树A的第二相似度最高，子树P与子树B的第二相似度最高，子树Q也与子树A的第二相似度最高,子树R也与子树A的第二相似度最高。那么，当i＝1时，refi即为子树O与子树A之间的第二相似度，当i＝2时，refi即为子树P与子树B之间的第二相似度，当i＝3时，refi即为子树Q与子树A之间的第二相似度，那么，当i＝4时，refi即为子树R与子树A之间的第二相似度。此时，子树A对应三个子树，而子树A与子树O的第二相似度最高，因此，当j＝1时，refj即为子树A与子树O之间的第二相似度；子树B仅对应子树P，因此，当j＝2时，refj即为子树B与子树P之间的第二相似度，子树C和子树D不存在对应的子树，因此当j＝3或j＝4时，refj＝0。其中，子树O、P、Q、R和子树A、B、C、D之间的第二相似度也是按照第三公式进行递归得到的。本申请实施例提供的一种界面推荐方法，能够通过将信息架构图和界面库中的界面转化为对应的树形结构，基于节点的属性和子树的结构对界面对应的树形结构进行约简后，根据节点属性，子树层级，子树路径等参数，并通过递归的方式，与信息架构图对应的树形结构进行整体的相似度计算，以将相似度高的界面推荐给用户作为绘制线框图的参考。基于同一发明构思，本申请实施例中还提供了与界面推荐方法对应的界面推荐装置，由于本申请实施例中的界面推荐装置解决问题的原理与本申请实施例上述界面推荐方法相似，因此界面推荐装置的实施可以参见界面推荐方法的实施，重复之处不再赘述。参照图8所示，为本申请实施例提供的一种界面推荐装置示意图，所述装置包括：获取模块801，用于获取信息架构图对应的第一树形结构；第一计算模块802，用于针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度，其中，所述第二树形结构中每个节点存在节点属性，所述一级子树为该第二树形结构的根节点的子树，所述一级子数组是由任意两个一级子树构成的；第二计算模块803，用于对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树；删除模块804，用于对所述相似子树进行迭代处理，得到该第二树形结构对应的第三树形结构，其中，所述第三树形结构中不存在所述相似子树，在进行每次迭代时，删除目标子树的相似子树，所述目标子树为每次迭代中拥有最多相似子树的子树，直至得到所述第三树形结构；第三计算模块805，用于对于每个所述第三树形结构，计算该第三树形结构和所述第一树形结构之间的第二相似度，以将第二相似度大于第二预设阈值的第三树形结构对应的界面作为推荐界面。在一种可能的实施方式中，所述装置还包括：第一约简模块，用于在针对界面库中每一个界面对应的第二树形结构，计算该第二树形结构中一级子树组中包括的两个一级子树之间的节点属性相似度和结构相似度之前，对于每一第二树形结构，删除该第二树形结构中第四节点属性为false的节点及其全部子孙节点，得到第一约简树形结构，其中，所述第四节点属性用于表示节点是否对用户可见；第二约简模块，用于对于每一第一约简树形结构，删除该第一约简树形结构中的冗余节点，并将所述冗余节点的子节点接入所述冗余节点所处的位置，得到第二约简树形结构，其中，所述冗余节点为有且仅有一个子节点的节点，且该节点与其子节点的第五节点属性相同，所述第五节点属性用于表示节点在代码层中的坐标；第三约简模块，用于对于每一第二约简树形结构，删除该第二约简树形结构中每个节点除第一节点属性、第二节点属性和第三节点属性以外的全部节点属性，得到第三约简树形结构，将所述第三约简树形结构作为所述第二树形结构，其中，所述第一节点属性用于表示节点的元素类型，所述第二节点属性用于表示节点的元素语义，所述第三节点属性用于表示节点具有的子节点。在一种可能的实施方式中，所述装置还包括：判断模块，用于在对于每个一级子树组，对该一级子树组对应的节点属性相似度和结构相似度进行加权求和，得到该一级子树组对应的两个一级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个一级子树作为相似子树之后，判断一级子树中是否存在相似子树，若否，则针对每一一级子树，计算该一级子树对应的每两个二级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个二级子树作为相似子树，其中，所述二级子树为该一级子树的根节点的子树；判断二级子树中是否存在相似子树，若否，则针对每一二级子树，计算该二级子树对应的每两个三级子树之间的第一相似度，以将第一相似度大于第一预设阈值的两个三级子树作为相似子树，其中，所述三级子树为该二级子树的根节点的子树；以此类推，直至N级子树中存在相似子树。在一种可能的实施方式中，所述第一计算模块802，还用于：对于第一一级子树中的每一个节点，若在第二一级子树中不存在与该节点的第一节点属性和/或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第一数值，其中，所述第一一级子树为两个一级子树之间总节点数较少的一级子树，所述第二一级子树为两个一级子树之间总节点数较多的一级子树；对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性或第二节点属性相同的节点，则将该节点的节点属性相似值设置为第二数值，其中，所述第二数值大于所述第一数值；对于第一一级子树中的每一个节点，若在第二一级子树中存在与该节点的第一节点属性和第二节点属性均相同的节点，则将该节点的节点属性相似值设置为第三数值，其中，所述第三数值大于所述第二数值；根据以下第一公式计算两个一级子树之间的节点属性相似度；其中，t1为所述第一一级子树，t2为所述第二一级子树，k为所述第一一级子树的总节点数，为所述第一一级子树中第i个节点的节点属性相似值。在一种可能的实施方式中，所述第一计算模块802，还用于：对第三一级子树和第四一级子树中的同类节点和非同类节点进行编号，其中，所述第三一级子树为两个一级子树中根节点的子节点数较少的一级子树，所述第四一级子树为两个一级子树中根节点的子节点数较多的一级子树，所述同类节点为第一节点属性和第二节点属性均相同的节点，且所述同类节点的编号相同，所述非同类节点为第一节点属性和第二节点属性不均相同的节点，且所述非同类节点的编号不同；从所述第四一级子树中的每条路径中选取候选匹配路径，其中，所述候选匹配路径为同时存在于所述第三一级子树和所述第四一级子树中的对应编号顺序组合相同的路径，所述第三一级子树和所述第四一级子树均包括多条路径，对于每条路径，该路径是通过编号顺序组合的形式表示的；从所述候选匹配路径中选取对应编号最多的路径作为目标匹配路径；按照以下第二公式进行递归计算，得到所述结构相似度；其中，Strusim为所述结构相似度，t1为所述第三一级子树，t2为所述第四一级子树，Rt为所述第四一级子树的根节点的第t个子节点，L为以Rt为根节点的树的层数，N为第四一级子树的根节点的子节点数量；若t1的根节点和t2的根节点的第一节点属性和第二节点属性均相同，则MR＝1，否则，MR＝0；若Rt为叶节点，则V＝F，否则其中，Ct为Rt的子节点集合，e为Rt的子节点，N为Rt的子节点数量，若Rt对应的编号包括于所述目标匹配路径对应的编号顺序组合中，则F＝1，否则F＝0。在一种可能的实施方式中，所述第一树形结构中每个节点存在节点属性；所述第三计算模块805，具体用于：按照以下第三公式进行递归计算得到所述第二相似度；其中，TA为所述第一树形结构，TB为所述第三树形结构，RA为所述第一树形结构的根节点，RB为所述第三树形结构的根节点，RA≠RB的含义为RA与RB的第一节点属性和第二节点属性不均相同，RA＝RB的含义为RA与RB的第一节点属性和第二节点属性均相同，nA为所述第一树形结构的总节点数量，nB为所述第三树形结构的总节点数量，m为RA的子节点数量，n为RB的子节点数量，nAi为RA的第i个子树的总节点数量，nBj为RB的第j个子树的总节点数量，refi为RA的第i个子树与其第一匹配对象的第二相似度，refj为RB的第j个子树与其第二匹配对象对应的第二相似度里值最高的第二相似度；其中，所述第一匹配对象为与RA的第i个子树的第二相似度最高的RB的子树，所述第二匹配对象为RB的第j个子树对应的RA的子树。本申请实施例提供的一种界面推荐装置，能够通过将信息架构图和界面库中的界面转化为对应的树形结构，基于节点的属性和子树的结构对界面对应的树形结构进行约简后，根据节点属性，子树层级，子树路径等参数，并通过递归的方式，与信息架构图对应的树形结构进行整体的相似度计算，以将相似度高的界面推荐给用户作为绘制线框图的参考。参照图9所示，本申请实施例提供的一种电子设备900，包括：处理器901、存储器902和总线，所述存储器902存储有所述处理器901可执行的机器可读指令，当电子设备运行时，所述处理器901与所述存储器902之间通过总线通信，所述处理器901执行所述机器可读指令，以执行如上述界面推荐方法的步骤。具体地，上述存储器902和处理器901能够为通用的存储器和处理器，这里不做具体限定，当处理器901运行存储器902存储的计算机程序时，能够执行上述界面推荐方法。对应于上述方法，本申请实施例还提供了一种计算机可读存储介质，所述计算机可读存储介质上存储有计算机程序，所述计算机程序被处理器运行时执行上述界面推荐方法的步骤。所属领域的技术人员可以清楚地了解到，为描述的方便和简洁，上述描述的系统和装置的具体工作过程，可以参考方法实施例中的对应过程，本申请中不再赘述。在本申请所提供的几个实施例中，应该理解到，所揭露的系统、装置和方法，可以通过其它的方式实现。以上所描述的装置实施例仅仅是示意性的，例如，所述模块的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，又例如，多个模块或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另一点，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些通信接口，装置或模块的间接耦合或通信连接，可以是电性，机械或其它的形式。所述作为分离部件说明的模块可以是或者也可以不是物理上分开的，作为模块显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本申请各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。所述功能如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个处理器可执行的非易失的计算机可读取存储介质中。基于这样的理解，本申请的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台计算机设备执行本申请各个实施例所述方法的全部或部分步骤。而前述的存储介质包括：U盘、移动硬盘、ROM、RAM、磁碟或者光盘等各种可以存储程序代码的介质。以上仅为本申请的具体实施方式，但本申请的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本申请揭露的技术范围内，可轻易想到变化或替换，都应涵盖在本申请的保护范围之内。因此，本申请的保护范围应以权利要求的保护范围为准。
