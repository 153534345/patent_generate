标题title
基于RISC-V架构的数据存储方法及系统
摘要abst
本发明提供了一种基于RISC‑V架构的数据存储系统及方法，包括：步骤S1：安全存储系统通过RISC‑V的物理内存保护机制维护独占的内部存储区域，并在内部存储区域设置永久计数器；步骤S2：根据设备唯一安全标识符得到设备唯一密钥；步骤S3：当安全存储系统进行更新对象元信息操作时，永久计数器递增；步骤S4：根据永久计数器当前计数、对象元信息以及设备唯一密钥生成消息认证码，存放在加密元信息中；步骤S5：从外部存储中读取加密元信息和对象元信息，利用加密元信息对当前读取的对象元信息进行认证，确保数据元信息没有被非法篡改。
权利要求书clms
1.一种基于RISC-V架构的数据存储方法，其特征在于，包括：步骤S1：安全存储系统通过RISC-V的物理内存保护机制维护独占的内部存储区域，并在内部存储区域设置永久计数器；步骤S2：根据设备唯一安全标识符得到设备唯一密钥；步骤S3：当安全存储系统进行更新对象元信息操作时，永久计数器递增；步骤S4：根据永久计数器当前计数、对象元信息以及设备唯一密钥生成消息认证码，存放在加密元信息中；步骤S5：从外部存储中读取加密元信息和对象元信息，利用加密元信息对当前读取的对象元信息进行认证，确保数据元信息没有被非法篡改。2.根据权利要求1所述的基于RISC-V架构的数据存储方法，其特征在于，所述步骤S2采用：设备唯一安全标识符利用密钥推导算法得到设备唯一密钥。3.根据权利要求1所述的基于RISC-V架构的数据存储方法，其特征在于，所述步骤S4采用：根据永久计数器当前计数、对象元信息以及设备唯一密钥利用AEAD加密算法生成消息认证码，存放在加密元信息中。4.根据权利要求1所述的基于RISC-V架构的数据存储方法，其特征在于，安全存储系统维护多个文件索引，交替写入元信息，保证始终有一个索引指向的文件是有效的；在实际写入元信息时，将元信息写入当前活动文件ID指针未指向的元信息文件中，当写入成功，则将活动文件ID指针指向写入成功的元信息文件。5.根据权利要求1所述的基于RISC-V架构的数据存储方法，其特征在于，在对象元信息中分配新的位置给修改的对象，备份后删除原来的位置，安全存储系统只会处于写入成功或者修改之前的状态。6.根据权利要求1所述的基于RISC-V架构的数据存储方法，其特征在于，更新数据和元信息时均采用写时复制的方式；所述元信息包括对象元信息和加密元信息。7.一种基于RISC-V架构的数据存储系统，其特征在于，包括：模块M1：安全存储系统通过RISC-V的物理内存保护机制维护独占的内部存储区域，并在内部存储区域设置永久计数器；模块M2：根据设备唯一安全标识符得到设备唯一密钥；模块M3：当安全存储系统进行更新对象元信息操作时，永久计数器递增；模块M4：根据永久计数器当前计数、对象元信息以及设备唯一密钥生成消息认证码，存放在加密元信息中；模块M5：从外部存储中读取加密元信息和对象元信息，利用加密元信息对当前读取的对象元信息进行认证，确保数据元信息没有被非法篡改。8.根据权利要求7所述的基于RISC-V架构的数据存储系统，其特征在于，所述模块M2采用：设备唯一安全标识符利用密钥推导算法得到设备唯一密钥；所述模块M4采用：根据永久计数器当前计数、对象元信息以及设备唯一密钥利用AEAD加密算法生成消息认证码，存放在加密元信息中。9.根据权利要求7所述的基于RISC-V架构的数据存储系统，其特征在于，安全存储系统维护多个文件索引，交替写入元信息，保证始终有一个索引指向的文件是有效的；在实际写入元信息时，将元信息写入当前活动文件ID指针未指向的元信息文件中，当写入成功，则将活动文件ID指针指向写入成功的元信息文件；在对象元信息中分配新的位置给修改的对象，备份后删除原来的位置，安全存储系统只会处于写入成功或者修改之前的状态。10.根据权利要求7所述的基于RISC-V架构的数据存储系统，其特征在于，更新数据和元信息时均采用写时复制的方式；所述元信息包括对象元信息和加密元信息。
说明书desc
技术领域本发明涉及数据安全存储技术领域，具体地，涉及基于RISC-V架构的数据存储方法及系统，更为具体地，涉及安全存储。背景技术数据敏感的业务对数据存储的安全性具有很高的要求，存储系统遭受攻击所导致的重要数据的泄露会造成很大的损失。专利文献CN110909391A公开了一种基于RISC-V的安全存储方法包括：步骤S1：利用RISC-V特权指令集对flash的存储区域进行安全隔离；步骤S2：应用程序使用KDF秘钥派生出存数据密钥并对私密数据加密后存储在flash对应的存储区域；应用程序读取数据时，使用KDF密钥派生出读数据密钥并对存储的数据进行解密，得到私密数据。安全存储需要解决数据的隐私性，完整性以及防重放攻击。保护隐私性和完整性的常规做法是采用认证加密的方式同时存储密文和验证码，读取数据时再使用验证码验证密文是否被篡改。加密和验证这两个步骤保证了隐私性和完整性。然而各个硬件平台关于密钥存储以及防重放攻击则有不同的措施。RISC-V是一个逐渐流行的体系结构，本发明介绍了一种RISC-V架构下密钥存储以及防重放攻击的软硬件协同机制。RISC-V具有独特的物理内存保护机制，能够控制应用程序对不同物理内存区域的访问权限。本发明中，安全存储系统需要维护一块独占的内部存储区域，独占区域中包含一个根密钥以及一个永久计数器。安全存储系统将所有数据的验证码存放在一个称为对象元信息的持久化结构中，另外有一块称为加密元信息的持久化区域包含对象元信息进行认证加密后生成的验证码。通过令所有对象的验证码抵抗防重放攻击，达到了所有对象本身也能抵抗防重放攻击的效果。发明内容针对现有技术中的缺陷，本发明的目的是提供一种基于RISC-V架构的数据存储方法及系统。根据本发明提供的一种基于RISC-V架构的数据存储方法，包括：步骤S1：安全存储系统通过RISC-V的物理内存保护机制维护独占的内部存储区域，并在内部存储区域设置永久计数器；步骤S2：根据设备唯一安全标识符得到设备唯一密钥；步骤S3：当安全存储系统进行更新对象元信息操作时，永久计数器递增；步骤S4：根据永久计数器当前计数、对象元信息以及设备唯一密钥生成消息认证码，存放在加密元信息中；步骤S5：从外部存储中读取加密元信息和对象元信息，利用加密元信息对当前读取的对象元信息进行认证，确保数据元信息没有被非法篡改。优选地，所述步骤S2采用：设备唯一安全标识符利用密钥推导算法得到设备唯一密钥。优选地，所述步骤S4采用：根据永久计数器当前计数、对象元信息以及设备唯一密钥利用AEAD加密算法生成消息认证码，存放在加密元信息中。优选地，安全存储系统维护多个文件索引，交替写入元信息，保证始终有一个索引指向的文件是有效的；在实际写入元信息时，将元信息写入当前活动文件ID指针未指向的元信息文件中，当写入成功，则将活动文件ID指针指向写入成功的元信息文件。优选地，在对象元信息中分配新的位置给修改的对象，备份后删除原来的位置，安全存储系统只会处于写入成功或者修改之前的状态。优选地，更新数据和元信息时均采用写时复制的方式；所述元信息包括对象元信息和加密元信息。根据本发明提供的一种基于RISC-V架构的数据存储系统，包括：模块M1：安全存储系统通过RISC-V的物理内存保护机制维护独占的内部存储区域，并在内部存储区域设置永久计数器；模块M2：根据设备唯一安全标识符得到设备唯一密钥；模块M3：当安全存储系统进行更新对象元信息操作时，永久计数器递增；模块M4：根据永久计数器当前计数、对象元信息以及设备唯一密钥生成消息认证码，存放在加密元信息中；模块M5：从外部存储中读取加密元信息和对象元信息，利用加密元信息对当前读取的对象元信息进行认证，确保数据元信息没有被非法篡改。优选地，所述模块M2采用：设备唯一安全标识符利用密钥推导算法得到设备唯一密钥；所述模块M4采用：根据永久计数器当前计数、对象元信息以及设备唯一密钥利用AEAD加密算法生成消息认证码，存放在加密元信息中。优选地，安全存储系统维护多个文件索引，交替写入元信息，保证始终有一个索引指向的文件是有效的；在实际写入元信息时，将元信息写入当前活动文件ID指针未指向的元信息文件中，当写入成功，则将活动文件ID指针指向写入成功的元信息文件；在对象元信息中分配新的位置给修改的对象，备份后删除原来的位置，安全存储系统只会处于写入成功或者修改之前的状态。优选地，更新数据和元信息时均采用写时复制的方式；所述元信息包括对象元信息和加密元信息。与现有技术相比，本发明具有如下的有益效果：1、本发明通过RISC-V的物理内存保护机制保证了永久计数器的隐私性，物理内存保护机制确保只有安全存储系统能获取它们的值；2、本发明通过RISC-V的物理内存保护机制保证了永久计数器的完整性，RISC-V的物理内存保护机制和存储芯片的内部存储特性分别从软件和物理层面限制了对密钥的非法修改；3、本发明通过加密元信息阻止通过物理手段从外部存储介质获取数据信息，并且当加密后的数据受损时能识别到错误；4、本发明通过永久计数器，每次更新元信息后，携带永久计数器递增后的值生成认证码信息，保证了完整性和防重放攻击，保证元信息的内容被修改或者被替换为旧的有效版本时能识别出错误；5、本发明当发生断电异常时，先用超前的计数器生成认证码信息再实际递增永久计数器，防止发生异常时出现不一致而导致系统不可用；6、本发明更新数据和元信息时采用写时复制的方式保证写入数据时的原子性；7、本发明单个设备上密钥的泄露不会影响其他设备。附图说明通过阅读参照以下附图对非限制性实施例所作的详细描述，本发明的其它特征、目的和优点将会变得更明显：图1为安全存储读写流程图。图2为元信息消息认证码的生成过程。图3为对象简易读写流程。具体实施方式下面结合具体实施例对本发明进行详细说明。以下实施例将有助于本领域的技术人员进一步理解本发明，但不以任何形式限制本发明。应当指出的是，对本领域的普通技术人员来说，在不脱离本发明构思的前提下，还可以做出若干变化和改进。这些都属于本发明的保护范围。实施例1根据本发明提供的一种基于RISC-V架构的数据存储方法，如图1至3所示，包括：步骤S1：安全存储系统通过RISC-V的物理内存保护机制维护独占的内部存储区域，并在内部存储区域设置永久计数器；步骤S2：根据设备唯一安全标识符得到设备唯一密钥；步骤S3：当安全存储系统进行更新对象元信息操作时，永久计数器递增；步骤S4：根据永久计数器当前计数、对象元信息以及设备唯一密钥生成消息认证码，存放在加密元信息中；步骤S5：从外部存储中读取加密元信息和对象元信息，利用加密元信息对当前读取的对象元信息进行认证，确保数据元信息没有被非法篡改。具体地，所述步骤S2采用：设备唯一安全标识符利用密钥推导算法得到设备唯一密钥。具体地，所述步骤S4采用：根据永久计数器当前计数、对象元信息以及设备唯一密钥利用AEAD加密算法生成消息认证码，存放在加密元信息中。具体地，安全存储系统维护多个文件索引，交替写入元信息，保证始终有一个索引指向的文件是有效的；在实际写入元信息时，将元信息写入当前活动文件ID指针未指向的元信息文件中，当写入成功，则将活动文件ID指针指向写入成功的元信息文件。具体地，在对象元信息中分配新的位置给修改的对象，备份后删除原来的位置，安全存储系统只会处于写入成功或者修改之前的状态。具体地，更新数据和元信息时均采用写时复制的方式；所述元信息包括对象元信息和加密元信息。根据本发明提供的一种基于RISC-V架构的数据存储系统，包括：模块M1：安全存储系统通过RISC-V的物理内存保护机制维护独占的内部存储区域，并在内部存储区域设置永久计数器；模块M2：根据设备唯一安全标识符得到设备唯一密钥；模块M3：当安全存储系统进行更新对象元信息操作时，永久计数器递增；模块M4：根据永久计数器当前计数、对象元信息以及设备唯一密钥生成消息认证码，存放在加密元信息中；模块M5：从外部存储中读取加密元信息和对象元信息，利用加密元信息对当前读取的对象元信息进行认证，确保数据元信息没有被非法篡改。具体地，所述模块M2采用：设备唯一安全标识符利用密钥推导算法得到设备唯一密钥；所述模块M4采用：根据永久计数器当前计数、对象元信息以及设备唯一密钥利用AEAD加密算法生成消息认证码，存放在加密元信息中。具体地，安全存储系统维护多个文件索引，交替写入元信息，保证始终有一个索引指向的文件是有效的；在实际写入元信息时，将元信息写入当前活动文件ID指针未指向的元信息文件中，当写入成功，则将活动文件ID指针指向写入成功的元信息文件；在对象元信息中分配新的位置给修改的对象，备份后删除原来的位置，安全存储系统只会处于写入成功或者修改之前的状态。具体地，更新数据和元信息时均采用写时复制的方式；所述元信息包括对象元信息和加密元信息。实施例2实施例2是实施例1的优选例防重放设计在安全存储系统中，数据元信息用来追踪所有对象的存储位置和验证信息。因此可以将数据元信息作为存储系统中所有对象的信任根，只要数据元信息是可信的，对象即是可信的。为了保证数据元信息的完整性和防重放特性，需要在每次变动数据元信息时将永久计数器和数据元信息混杂在一起生成消息认证码。数据元信息的消息认证码和initialization vector初始向量存储在加密元信息中，生成消息认证码后需要将加密元信息和数据元信息一并写入非易失性存储。因为最新的数据元信息和加密元信息和永久计数器的当前值相关联，所以如果数据元信息被替换将无法通过验证。安全存储系统启动时，从非易失性存储读取加密元信息和数据元信息，数据元信息的内容需要使用加密元信息进行验证以确保数据元信息没有被非法篡改。非易失行存储即持久化存储。包含外部存储和内部存储。通过RISC-V的物理内存保护机制，内部存储可以变为安全存储应用的独占内部存储。永久计数器实现：永久计数器必须存储在安全级别较高的存储中，攻击者无法从物理上更改永久计数器所在存储器的内容。在软件层面，RISC-V架构下的安全存储系统可以使用物理内存保护机制。监视器将永久计数器的读和修改权限只开放给安全存储系统。初始化以及读写流程初始化流程：读取元信息。生成对象元信息和永久计数器的消息认证码，和加密元信息中记录的消息认证码比对。写流程：对数据进行认证加密，将initialization vector初始向量,和密文写入外部存储。将认证加密生成的对象消息认证码更新至内存中的对象元信息区域。生成永久计数器和对象元信息整体的消息认证码，存放在加密元信息中，并将对象元信息和加密元信息一起写入的持久化区域中。读流程：读取密文，从对象元信息中获取该对象的消息认证码，执行解密操作。初始化：从根密钥推导出AEAD加密所需要的密钥将安全存储系统的元信息从Flash读入内存，并且进行完整性和防回滚检查。步骤1，密钥初始化。安全存储系统从高安全级别非易失性存储中获取密钥原始字节，使用确定的密钥推导算法导出AEAD加密算法需要的设备唯一密钥。步骤2，存储系统初始化。安全存储系统的基本逻辑是维护对象的存储位置和验证信息，实际的数据存储以及操作的原子性交给底层的文件系统来完成。对象的存储位置和验证信息都可以通过数据元信息中的对象槽得到。对象加密后的数据实际上保存在一个文件中，文件的ID由对象槽的索引隐式的计算出。对象的验证信息显式地保存在对象槽中。所以存储系统的初始化就是将元信息从非易失性存储读入内存。为了防重放攻击，保证元信息的完整性，需要在读取元信息之后进行完整性验证。合法状态下，加密元信息中存有数据元信息和永久计数器共同参与计算的消息认证码，以及用于计算的初始向量。因此利用这些信息进行一次逆运算就能验证数据元信息的完整性。具体步骤为从非易失性存储读取元信息和永久计数器。将永久计数器和数据元信息作为AEAD的附加数据，使用设备唯一密钥、初始向量、加密元信息中的消息认证码、密文为空进行解密。如果解密成功则通过验证。由于消息认证码和最新的永久计数器关联，所以如果元信息被篡改或者被替换为旧的元信息，一定无法通过这里的完整性验证，从而达到了防重放攻击的效果。写对象：安全存储系统收到来自客户端的写请求时，会采用AEAD加密方式对数据进行操作，产生两个输出：加密数据以及消息认证码。步骤1，应用向安全存储系统发起写请求。步骤2，安全存储系统采用写时复制策略，防止原地修改时出现异常导致存储系统丧失一致性。方法如下。步骤3，计算新的存储地址，新的存储地址由写成功后将会占用的空闲对象槽计算出，反之也能够通过存储地址计算出对应的空闲对象槽。因此需要从数据元信息中锁定一个空闲的对象槽，根据对象槽的索引计算出该对象槽对应的文件ID，如果该文件ID对应的文件存在，则删除对应文件。步骤4，将对象的明文数据进行加密和持久化存储。从加密元信息获取新的initialization vector初始向量，对明文采用AEAD加密的方式生成密文和消息认证码。将initialization vector初始向量和密文写入步骤3中对应的文件。步骤5，备份旧的对象槽。从数据元信息中找到对象ID对应的旧的对象槽，拷贝到临时备份中。清空旧的对象槽，使之变为空闲状态。步骤6，填充新的对象槽。由步骤3得到的文件ID反计算出锁定的空闲对象槽。将填充到锁定的空闲对象槽中。步骤7，更新元信息的验证码，并进行持久化存储。从加密元信息获取新的initialization vector初始向量,将永久计数器和数据元信息作为附加数据，明文为空，进行AEAD加密。将生成的消息认证码写入加密元信息。最后将加密元信息和数据元信息写入非易失性存储，如果写入成功则递增永久计数器。如果写入失败，则将备份的对象槽恢复到数据元信息中，清空新分配的对象槽。删除对象：步骤1，应用向安全存储系统发起删除请求。步骤2，检查请求删除的对象是否在安全存储系统中。查找数据元信息中是否存在对象槽有对应的。如果存在则根据对象槽的索引计算对应的存储位置，即实际的文件ID。步骤3，备份旧的对象槽。从数据元信息中找到对象ID对应的旧的对象槽，拷贝到临时备份中。清空旧的对象槽，使之变为空闲状态。步骤4，更新元信息的验证码，并进行持久化存储。从加密元信息获取新的IV,将永久计数器和数据元信息作为附加数据，明文为空，进行AEAD加密。将生成的消息认证码写入加密元信息。最后将加密元信息和数据元信息写入非易失性存储，如果写入成功则递增永久计数器。如果写入失败，则将备份的对象槽恢复到数据元信息中。步骤5，删除文件ID对应的内容。读对象：步骤1，应用向安全存储系统发起读请求。步骤2，检查请求读取的对象是否在安全存储系统中。安全存储系统获取应用ID,查找数据元信息中是否存在对象槽有对应的。如果存在则获取对象槽，并根据对象槽的索引计算对应的存储位置，即实际的文件ID，否则返回读失败。步骤3，读取对象数据、解密、验证完整性。根据文件ID从非易失性存储读取IV和密文。使用进行解密。如果解密失败，则数据可能被篡改，通知应用读失败。如果解密成功，则将明文返回给应用。应用ID的获取：配置安全存储系统的RISC-V设备，可以为所有处于S/U特权级的应用分配一个全局唯一应用标识符。安全存储系统在收到任何请求时会通过系统调用，从监视器获取请求应用的全局唯一标识符，即应用ID。由于监视器是可信的，所以任何应用都无法将自己伪造成其他应用来请求安全存储系统以获取或修改其他应用的数据。断电恢复机制在写入数据元信息之后，递增永久计数器之前，如果发生了断电将会导致非易失性存储上的数据元信息超前永久计数器，那么安全存储系统下一次启动时就无法成功验证数据元信息。为了使安全存储系统具有断电时的恢复机制，需要在验证失败时使用永久计数器+1验证一次数据元信息的完整性，如果通过验证，则说明发生了以上的情况，需要将在验证完之后递增永久计数器使之和生成消息认证码的永久计数器保持一致。如果验证失败，则说明数据元信息的完整性遭到破坏。其他的异常断电情况下，由于非易失性存储中的元信息和永久计数器是一致的，所以也能够成功的初始化安全存储系统，即数据元信息中内容都是有效的。由于在写对象时采用了写时复制的技术，所以也保证了对象槽指向的文件也是有效的。在删除对象时，采用了先删元数据，再删实际文件的方式，也能够保证一致性。元信息写入的原子性为了保证安全存储系统的一致性，需要原子的更新元信息。这样如果更新过程中发生异常，下次恢复时会得到更新之前的状态而不是被破坏的状态。通过写时复制技术来保证这一点。安全存储系统有两个固定的文件ID用于写元信息，分别为【元信息文件ID1】和【元信息文件ID2】。安全存储系统初始化后会在内存中维护一个【活动文件ID指针】指向当前有效的元信息文件。在实际写入元信息时，如果【活动文件ID指针】指向【元信息文件ID1】，则先将内存中的元信息写入【元信息文件ID2】，如果写入成功则将【活动文件ID指针】指向【元信息文件ID2】否则不改变指向。通过这种方式，【元信息文件ID1】和【元信息文件2】在任何情况下至少有一个包含有效的元信息，从而保证了安全存储系统的一致性。其中，应用ID为RISC-V系统为每个应用分配的唯一标识符。应用ID是静态的，系统重启也不会发生变化。对象是安全存储系统中的数据实体。对象包含对象ID，所属应用ID，数据内容，数据长度等性质。对象ID：在每个应用内部，对象所拥有的唯一标识符。对象ID为0为无效ID。对象槽：对象元信息的组成单元，包含对象ID，所属应用ID，对象消息认证码。元信息：包含加密元信息和对象元信息。加密元信息：加密元信息包含初始向量和对象元信息的消息认证码。对象元信息：用来追踪安全存储系统中所有对象的信息。对象元信息是固定长度的数组，数组的每个元素为对象槽。当对象槽中的对象ID有效时，说明该对象存在于安全存储系统中。对象槽中的所属应用ID用做标识该对象的所有者，对象消息认证码用做验证对象数据的完整性。每当安全存储系统中对象的状态改变时，数据元信息都需要生成新的消息认证码，并且和消息认证码一并写入非易失性存储。初始向量：安全存储系统中递增的计数器，作为AEAD的参数之一。安全存储系统每次进行AEAD加密操作时会获取初始向量，并且将初始向量递增。初始向量存储在加密元信息中。永久计数器：高安全级别非易失性存储介质中的计数器，用于防重放攻击。只可以进行读和递增两种操作。通过RISC-V的物理内存保护机制将访问权限只提供给安全存储系统。生成数据元信息的消息认证码时需要永久计数器的参与，每次生成消息认证码后，永久计数器需要递增。因此只有和永久计数器一致的数据元信息才能通过验证。密钥原始字节：高安全级别非易失性存储介质中的一串字节，用于推导设备唯一密钥。通过RISC-V的物理内存保护机制将访问权限只暴露给安全存储系统。每个设备必须拥有不同的密钥原始字节，用于保证推导出的密钥是设备唯一的。设备唯一密钥：安全存储系统中用于加密操作的密钥。密钥原始字节经过确定的密钥推导函数导出设备唯一密钥，因此设备唯一密钥具有确定性，系统的关闭和启动不会改变密钥的值。在RISC-V的物理内存保护机制下，只有安全存储系统能够获得密钥原始字节，因此推导出的密钥也具有隐私性。同时由于在运行时，密钥也存储在受到RISC-V物理内存保护的内存中，外部应用无法获取也无法篡改密钥的值，进一步保证了密钥的隐私性和完整性。物理内存保护：RISC-V平台下限制应用对物理内存访问的机制。监视器为每个应用划分物理内存，应用对划分之外的物理内存不具有权限。监视器：RISC-V平台下权限最高的管理者，拥有所有硬件资源的访问权限，负责将硬件资源划分给上层应用。本领域技术人员知道，除了以纯计算机可读程序代码方式实现本发明提供的系统、装置及其各个模块以外，完全可以通过将方法步骤进行逻辑编程来使得本发明提供的系统、装置及其各个模块以逻辑门、开关、专用集成电路、可编程逻辑控制器以及嵌入式微控制器等的形式来实现相同程序。所以，本发明提供的系统、装置及其各个模块可以被认为是一种硬件部件，而对其内包括的用于实现各种程序的模块也可以视为硬件部件内的结构；也可以将用于实现各种功能的模块视为既可以是实现方法的软件程序又可以是硬件部件内的结构。以上对本发明的具体实施例进行了描述。需要理解的是，本发明并不局限于上述特定实施方式，本领域技术人员可以在权利要求的范围内做出各种变化或修改，这并不影响本发明的实质内容。在不冲突的情况下，本申请的实施例和实施例中的特征可以任意相互组合。
