标题title
区块链子网运行状态的控制方法和区块链系统
摘要abst
本说明书一个或多个实施例提供一种区块链子网运行状态的控制方法和区块链系统；该方法可以包括：区块链主网中的主网节点获取控制区块链子网运行状态的交易，所述交易包含的控制信息和目标子网标识被传递至所述交易执行后触发生成的子网状态控制事件中；部署第一主网节点的节点设备从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，并在确定本地已经部署有所述目标子网标识对应的第一区块链子网中的第一子网节点的情况下，根据所述控制信息控制第一子网节点的运行状态。
权利要求书clms
1.一种区块链子网运行状态的控制方法，包括：区块链主网中的主网节点获取控制区块链子网运行状态的交易，所述交易包含的控制信息和目标子网标识被传递至所述交易执行后触发生成的子网状态控制事件中；部署第一主网节点的节点设备从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，并在确定本地已经部署有所述目标子网标识对应的第一区块链子网中的第一子网节点的情况下，根据所述控制信息控制第一子网节点的运行状态。2.根据权利要求1所述的方法，还包括：所述节点设备通过查询自身维护的本地子网列表，确定本地是否已经部署第一子网节点；其中，所述本地子网列表用于记录所述节点设备本地部署的各子网节点所属区块链子网的子网标识。3.根据权利要求1所述的方法，所述根据所述控制信息控制第一子网节点的运行状态，包括：在确定所述控制信息匹配于第一区块链子网的运行状态的情况下，根据所述控制信息控制第一子网节点的运行状态。4.根据权利要求3所述的方法，所述确定所述控制信息匹配于第一子网节点的运行状态，包括：当所述控制信息匹配于本地子网列表中对应于所述目标子网标识的第一区块链子网的运行状态时，确定所述控制信息匹配于第一区块链子网的运行状态，其中，所述本地子网列表包含所述节点设备本地部署的各子网节点所属区块链子网的子网标识和运行状态。5.根据权利要求1所述的方法，还包括：区块链主网中的主网节点在确定第一区块链子网处于所述区块链主网的管理下，且所述控制信息与第一区块链子网的运行状态相匹配的情况下同意执行所述交易。6.根据权利要求3-5中任一项所述的方法，当所述控制信息用于将第一区块链子网由第一运行状态切换至第二运行状态，且第一区块链子网正处于第一运行状态的情况下，所述控制信息被确认为与第一区块链子网的运行状态相匹配。7.根据权利要求6所述的方法，当第一运行状态为开启状态时，第二运行状态为关闭状态；当第一运行状态为关闭状态时，第二运行状态为开启状态。8.根据权利要求1所述的方法，所述节点设备根据所述控制信息控制第一子网节点的运行状态，包括：所述节点设备控制第一子网节点对应的插件管理器，以根据所述控制信息启动或关闭用于构成第一子网节点的插件模块。9.根据权利要求8所述的方法，所述插件管理器为所述节点设备上部署的所有区块链节点对应的共享插件管理器；或者，所述插件管理器为单独应用于第一子网节点的独立插件管理器。10.根据权利要求8所述的方法，所述节点设备根据所述控制信息启动或关闭用于构成第一子网节点的插件模块，包括：所述节点设备通过所述插件管理器确定第一子网节点对应的插件配置信息，并根据所述控制信息启动或关闭所述插件配置信息对应的用于构成第一子网节点的插件模块。11.根据权利要求8所述的方法，所述节点设备根据所述控制信息启动或关闭用于构成第一子网节点的插件模块，包括：所述节点设备根据所述控制信息启动或关闭第一子网节点中除共享插件以外的插件模块，所述共享插件为第一子网节点与至少一个部署于所述节点设备的其他区块链节点共同使用、且所述其他区块链节点正在使用的插件模块。12.根据权利要求8所述的方法，所述节点设备部署的插件管理器中维护有各插件模块之间的依赖关系；所述节点设备根据所述控制信息启动或关闭用于构成第一子网节点的插件模块，包括：所述节点设备按照构成第一子网节点的各个插件模块之间的启停顺序，根据所述控制信息启动或关闭第一子网节点的插件模块；其中，所述启停顺序与各个插件模块之间的依赖关系相关。13.根据权利要求1所述的方法，还包括：当所述控制区块链子网运行状态的交易中未包含控制信息时，所述控制信息被默认为预设控制信息；当所述控制区块链子网运行状态的交易中未包含目标子网标识时，所述目标子网标识被默认为预设子网标识。14.根据权利要求1所述的方法，所述控制区块链子网运行状态的交易包括调用合约的交易。15.根据权利要求14所述的方法，所述合约包括创世合约或系统合约。16.根据权利要求14所述的方法，所述合约的合约状态中维护有第一区块链子网的运行状态；其中，所述控制区块链子网运行状态的交易还触发所述合约在所述合约状态中更新第一区块链子网的运行状态。17.根据权利要求14所述的方法，所述节点设备从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，包括：第一主网节点监听所述合约执行后生成的收据，触发所述节点设备获取所述收据中包含的所述子网状态控制事件，并从所述子网状态控制事件中提取所述控制信息和所述目标子网标识；或者，所述节点设备通过监听所述合约执行后生成的收据，获得所述收据中包含的所述子网状态控制事件，并从所述子网状态控制事件中提取所述控制信息和所述目标子网标识。18.根据权利要求1所述的方法，所述控制区块链子网运行状态的交易由所述区块链主网的管理员发起；或者，所述控制区块链子网运行状态的交易由所述区块链主网的普通用户发起。19.根据权利要求1所述的方法，所述节点设备上部署的各区块链节点为运行在所述节点设备上的不同区块链实例。20.根据权利要求1所述的方法，所述节点设备部署的各区块链节点生成的区块分别存入所述节点设备上的不同存储。21.根据权利要求20所述的方法，所述节点设备部署的各区块链节点分别使用的存储之间相互隔离。22.根据权利要求20所述的方法，所述存储为数据库。23.根据权利要求1所述的方法，所述区块链主网为底层区块链网络；或者，所述区块链主网为被其他区块链网络所管理的子网。24.一种区块链系统，包括：区块链主网中的主网节点，用于获取控制区块链子网运行状态的交易，所述交易包含的控制信息和目标子网标识被传递至所述交易执行后触发生成的子网状态控制事件中；部署第一主网节点的节点设备，用于从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，并在确定本地已经部署有所述目标子网标识对应的第一区块链子网中的第一子网节点的情况下，根据所述控制信息控制第一子网节点的运行状态。
说明书desc
技术领域本说明书一个或多个实施例涉及区块链技术领域，尤其涉及一种区块链子网运行状态的控制方法和区块链系统。背景技术区块链技术构建在传输网络之上。区块链网络中的节点利用链式数据结构来验证与存储数据，并采用分布式节点共识算法来生成和更新数据。在基于现有区块链网络系统组建新区块链网络的场景下，同一个节点设备上往往会部署并运行多个区块链网络节点，因此在实际应用时，用户可能希望仅对单个区块链网络进行启动或关闭，而不干扰其他区块链网络的正常运行。发明内容有鉴于此，本说明书一个或多个实施例提供一种区块链子网运行状态的控制方法和区块链系统。为实现上述目的，本说明书一个或多个实施例提供技术方案如下：根据本说明书一个或多个实施例的第一方面，提出了一种区块链子网运行状态的控制方法，包括：区块链主网中的主网节点获取控制区块链子网运行状态的交易，所述交易包含的控制信息和目标子网标识被传递至所述交易执行后触发生成的子网状态控制事件中；部署第一主网节点的节点设备从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，并在确定本地已经部署有所述目标子网标识对应的第一区块链子网中的第一子网节点的情况下，根据所述控制信息控制第一子网节点的运行状态。根据本说明书一个或多个实施例的第二方面，提出了一种区块链系统，包括：区块链主网中的主网节点，用于获取控制区块链子网运行状态的交易，所述交易包含的控制信息和目标子网标识被传递至所述交易执行后触发生成的子网状态控制事件中；部署第一主网节点的节点设备，用于从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，并在确定本地已经部署有所述目标子网标识对应的第一区块链子网中的第一子网节点的情况下，根据所述控制信息控制第一子网节点的运行状态。应当理解的是，以上的一般描述和后文的细节描述仅是示例性和解释性的，并不能限制本说明书。附图说明图1是一示例性实施例提供的一种创建智能合约的示意图。图2是一示例性实施例提供的一种调用智能合约的示意图。图3是一示例性实施例提供的一种创建和调用智能合约的示意图。图4是一示例性实施例提供的一种基于区块链主网组建区块链子网的示意图。图5是一示例性实施例提供的一种区块链子网运行状态的控制方法的流程图。图6是一示例性实施例提供的一种区块链系统的结构示意图。图7是一示例性实施例提供的一种设备的结构示意图。具体实施方式这里将详细地对示例性实施例进行说明，其示例表示在附图中。下面的描述涉及附图时，除非另有表示，不同附图中的相同数字表示相同或相似的要素。以下示例性实施例中所描述的实施方式并不代表与本说明书一个或多个实施例相一致的所有实施方式。相反，它们仅是与如所附权利要求书中所详述的、本说明书一个或多个实施例的一些方面相一致的装置和方法的例子。需要说明的是：在其他实施例中并不一定按照本说明书示出和描述的顺序来执行相应方法的步骤。在一些其他实施例中，其方法所包括的步骤可以比本说明书所描述的更多或更少。此外，本说明书中所描述的单个步骤，在其他实施例中可能被分解为多个步骤进行描述；而本说明书中所描述的多个步骤，在其他实施例中也可能被合并为单个步骤进行描述。区块链一般被划分为三种类型：公有链，私有链和联盟链。此外，还有多种类型的结合，比如私有链+联盟链、联盟链+公有链等不同组合形式。其中去中心化程度最高的是公有链。公有链以比特币、以太坊为代表，加入公有链的参与者可以读取链上的数据记录、参与交易以及竞争新区块的记账权等。而且，各参与者可自由加入以及退出网络，并进行相关操作。私有链则相反，该网络的写入权限由某个组织或者机构控制，数据读取权限受组织规定。简单来说，私有链可以为一个弱中心化系统，参与节点具有严格限制且少。这种类型的区块链更适合于特定机构内部使用。联盟链则是介于公有链以及私有链之间的区块链，可实现“部分去中心化”。联盟链中各个节点通常有与之相对应的实体机构或者组织；参与者通过授权加入网络并组成利益相关联盟，共同维护区块链运行。不论是公有链、私有链还是联盟链，都可能提供智能合约的功能。区块链上的智能合约是在区块链系统上可以被交易触发执行的合约。智能合约可以通过代码的形式定义。以以太坊为例，支持用户在以太坊网络中创建并调用一些复杂的逻辑，这是以太坊区别于比特币区块链技术的最大挑战。以太坊作为一个可编程区块链的核心是以太坊虚拟机，每个以太坊节点都可以运行EVM。EVM是一个图灵完备的虚拟机，这意味着可以通过它实现各种复杂的逻辑。用户在以太坊中发布和调用智能合约就是在EVM上运行的。实际上，虚拟机直接运行的是虚拟机代码。部署在区块链上的智能合约可以是字节码的形式。例如图1所示，Bob将一个包含创建智能合约信息的交易发送到以太坊网络后，节点1的EVM可以执行这个交易并生成对应的合约实例。图1中的“0x6f8ae93…”代表了这个合约的地址，交易的data字段保存的可以是字节码，交易的to字段为空。节点间通过共识机制达成一致后，这个合约成功创建，并且可以在后续过程中被调用。合约创建后，区块链上出现一个与该智能合约对应的合约账户，并拥有一个特定的地址，合约代码将保存在该合约账户中。智能合约的行为由合约代码控制。换句话说，智能合约使得区块链上产生包含合约代码和账户存储的虚拟账户。如图2所示，仍以以太坊为例，Bob将一个用于调用智能合约的交易发送到以太坊网络后，某一节点的EVM可以执行这个交易并生成对应的合约实例。图2中交易的from字段是交易发起方的账户的地址，to字段中的“0x6f8ae93…”代表了被调用的智能合约的地址，value字段在以太坊中是以太币的值，交易的data字段保存的调用智能合约的方法和参数。调用智能合约后，balance的值可能改变。后续，某个客户端可以通过某一区块链节点查看balance的当前值。智能合约以规定的方式在区块链网络中每个节点独立的执行，所有执行记录和数据都保存在区块链上，所以当交易完成后，区块链上就保存了无法篡改、不会丢失的交易凭证。创建智能合约和调用智能合约的示意图如图3所示。以太坊中要创建一个智能合约，需要经过编写智能合约、编译成字节码、部署到区块链等过程。以太坊中调用智能合约，是发起一笔指向智能合约地址的交易，智能合约代码分布式的运行在以太坊网络中每个节点的虚拟机中。需要说明的是，除了可以由用户创建智能合约，也可以在创世块中由系统设置智能合约。这类合约一般称为创世合约。一般的，创世合约中可以设置一些区块链网络的数据结构、参数、属性和方法。此外，具有系统管理员权限的账户可以创建系统级的合约，或者修改系统级的合约。另外除了以太坊中的EVM外，不同的区块链网络还可能采用各种的虚拟机，这里并不限定。区块链网络中的节点在执行调用智能合约的交易后，会生成相应的收据，以用于记录与执行该智能合约相关的信息。这样，可以通过查询交易的收据来获得合约执行结果的相关信息。合约执行结果可以表现为收据中的事件。消息机制可以通过收据中的事件实现消息传递，以触发区块链节点执行相应的处理。事件的结构譬如可以为：Event：......在上述示例中，事件的数量可以为一个或多个；其中，每个事件分别包括主题和数据等字段。区块链节点可以通过监听事件的topic，从而在监听到预定义的topic的情况下，执行预设处理，或者从相应事件的data字段读取相关内容，以及可以基于读取的内容执行预设处理。上述的事件机制中，相当于在监听方处存在具有监听功能的客户端，譬如该客户端上运行了用于实现监听功能的SDK等，由该客户端对区块链节点产生的事件进行监听，而区块链节点只需要正常生成收据即可。除了上述的事件机制之外，还可以通过其他方式实现交易信息的透出。例如，可以通过在区块链节点运行的区块链平台代码中嵌入监听代码，使得该监听代码可以监听区块链交易的交易内容、智能合约的合约状态、合约产生的收据等其中的一种或多种数据，并将监听到的数据发送至预定义的监听方。由于监听代码部署于区块链平台代码中，而非监听方的客户端处，因而相比于事件机制而言，这种基于监听代码的实现方式相对更加的主动。其中，上述的监听代码可以由区块链平台的开发人员在开发过程中加入区块链平台代码，也可以由监听方基于自身的需求而嵌入，本说明书并不对此进行限制。区块链技术区别于传统技术的去中心化特点之一，就是在各个节点上进行记账，或者称为分布式记账，而不是传统的集中式记账。区块链系统要成为一个难以攻破的、公开的、不可篡改数据记录的去中心化诚实可信系统，需要在尽可能短的时间内做到分布式数据记录的安全、明确及不可逆。不同类型的区块链网络中，为了在各个记录账本的节点中保持账本的一致，通常采用共识算法来保证，即前述提到的共识机制。例如，区块链节点之间可以实现区块粒度的共识机制，比如在节点产生一个区块后，如果产生的这个区块得到其它节点的认可，其它节点记录相同的区块。再例如，区块链节点之间可以实现交易粒度的共识机制，比如在节点获取一笔区块链交易后，如果这笔区块链交易得到其他节点的认可，认可该区块链交易的各个节点可以分别将该区块链交易添加至自身维护的最新区块中，并且最终能够确保各个节点产生相同的最新区块。共识机制是区块链节点就区块信息达成全网一致共识的机制，可以保证最新区块被准确添加至区块链。当前主流的共识机制包括：工作量证明、股权证明、委任权益证明、实用拜占庭容错算法，HoneyBadgerBFT算法等。由于区块链网络的去中心化特性，使得区块链网络中的所有区块链节点均会维护相同的区块数据，无法满足部分节点的特殊需求。以联盟链为例，所有联盟成员可以组成一区块链网络，所有联盟成员在该区块链网络中分别存在对应的区块链节点，并可以通过对应的区块链节点获得该区块链网络上发生的所有交易和相关数据。但在一些情况下，可能存在部分联盟成员希望完成一些具有保密需求的交易，这些联盟成员既希望这些交易能够在区块链上存证或借助于区块链技术的其他优势，又能够避免其他联盟成员查看到这些交易和相关数据。虽然这些联盟成员可以额外组建一新的区块链网络，其建立方式与上述包含所有联盟成员的区块链网络类似，但是从头开始建立一条新的区块链网络需要消耗大量的资源，且无论是该区块链网络的建立过程或是建成后的配置过程都非常耗时。联盟成员之间的需求往往是临时的或者具有一定的时效性，使得新建的区块链网络很快就会由于需求消失而失去存在的意义，从而进一步增加了上述区块链网络的建链成本。而联盟成员之间的需求经常会变化，而每一需求所对应的联盟成员也往往不同，因而每当联盟成员发生变化时就可能需要组建一新的区块链网络，从而造成资源和时间的大量浪费。为此，可以将已组建的区块链网络作为区块链主网，并在该区块链主网的基础上组建区块链子网。那么，在诸如上述的联盟链场景下，联盟成员可以在已经参与区块链主网的情况下，基于自身需求而在区块链主网的基础上组建所需的区块链子网。由于区块链子网是在区块链主网的基础上所建立，使得区块链子网的组建过程相比于完全独立地组建一条区块链网络，所消耗的资源和所需的耗时等都极大地降低，灵活性极高。基于区块链主网快捷组建区块链子网的过程如下：区块链主网中的各主网节点分别获取组建区块链子网的交易以透出配置信息，当所述配置信息包含第一主网节点对应节点成员的身份信息时，部署第一主网节点的节点设备基于所述包含所述配置信息的创世块并启动属于所述区块链子网的第一子网节点。组建区块链子网的交易可由区块链主网的管理员发起，即仅允许管理员在区块链主网的基础上组建区块链子网，而避免将区块链子网的组建权限开放给普通用户，以防止由此导致的安全性问题。在一些情况下，也可以允许区块链主网的普通用户发起上述组建区块链子网的交易，以满足普通用户的组网需求，使得普通用户能够在管理员不便于发起交易的情况下依然能够快捷地组建区块链子网。以图4所示为例，区块链主网为subnet0，该subnet0包含的区块链节点为nodeA、nodeB、nodeC、nodeD和nodeE等。假定nodeA、nodeB、nodeC 和nodeD希望组建一区块链子网：如果nodeA为管理员且仅允许管理员发起组建区块链子网的交易，那么可由nodeA向subnet0发起上述组建区块链子网的交易；如果nodeE为管理员且仅允许管理员发起组建区块链子网的交易，那么nodeA~nodeD需要向nodeE进行请求，使得nodeE向subnet0发起上述组建区块链子网的交易；如果nodeE为管理员但允许普通用户发起组建区块链子网的交易，那么nodeA~nodeE均可以向subnet0发起上述组建区块链子网的交易。当然，不论是管理员或者普通用户，发起组建区块链子网的交易的区块链节点并不一定参与所组建的区块链子网，比如虽然最终由nodeA、nodeB、nodeC 和nodeD组建区块链子网，但可由nodeE向subnet0发起上述组建区块链子网的交易，而并不一定由nodeA~nodeD来发起该组建区块链子网的交易。在区块链主网的基础上组建区块链子网时，容易理解的是，会使得该区块链子网与区块链主网之间存在逻辑上的层次关系。比如在图4所示的subnet0上组建区块链子网subnet1时，可以认为subnet0处于第一层、subnet1处于第二层，subnet0为subnet1的父网，subnet1为subnet0的子网。并且区块链子网也可以组建对应的区块链子网，例如可以在图4中subnet1的基础上进一步组建另一区块链子网subnet3，此时可以认为subnet处于第三层，subnet1为subnet3对应的父网，subnet3为subnet1的子网，而subnet3则为subnet0的孙子网，同样的，subnet3仍然可以在其基础上新的组建区块链子网，使得各区块链网络之间构成这种多层次树形结构，而在本说明书中，任一区块链网络是由其对应的父网所管理，也即由组建该任一区块链网络的区块链网络所管理，因此在如图4这种由以区块链主网为根结点、各个区块链子网分别为其他结点的区块链网络树形系统中，任一结点代表的区块链子网由其父结点对应的区块链网络所管理，而作为特例，区块链主网为底层区块链网络时，区块链主网由区块链主网自身进行管理。本说明书中的区块链主网可以为底层区块链网络，底层区块链网络是指并非在其他区块链网络的基础上组建的区块链子网，因此除该区块链主网以外不存在其他区块链网络能够对区块链主网进行管理，比如图4中的subnet0可以认为属于底层区块链网络类型的区块链主网，subnet0管理subnet0自身，当然，区块链主网也可以为其他区块链网络的子网，本说明书对此不作任何限制。上述区块链网络树形系统通过父结点管理对应子结点的方式，实现了逐层管理，降低了区块链主网的管理压力，同时避免向下层网络暴露上层网络的子网信息，从而实现各级网络的隐秘管理。上述组建区块链子网的交易在被发送至区块链主网后，由区块链主网内的共识节点进行共识，并在通过共识后由各主网节点执行该交易，以完成区块链子网的组建。共识过程取决于所采用的共识机制，譬如上文所述的任一共识机制，本说明书并不对此进行限制。通过在上述组建区块链子网的交易中包含配置信息，该配置信息可以用于对所组建的区块链子网进行配置，使得组建的区块链子网符合组网需求。例如，通过在配置信息中包含节点成员的身份信息，可以指定组建的区块链子网包含哪些区块链节点。节点成员的身份信息可以包括节点的公钥，或者采用节点ID等其他能够表征节点身份的信息，本说明书并不对此进行限制。以公钥为例，每个区块链节点都存在对应的一组或多组公私钥对，由区块链节点持有私钥而公钥被公开且唯一对应于该私钥，因而可以通过公钥来表征相应区块链节点的身份。因此，对于希望作为区块链子网的节点成员的区块链节点，可以将这些区块链节点的公钥添加至上述组建区块链子网的交易中，以作为上述节点成员的身份信息。上述的公私钥对可以用于签名验证的过程。例如，在采用有签名的共识算法中，譬如subnet1上述的nodeA1采用自身维护的私钥对消息进行签名后，将经过签名的消息在subnet1中广播，而nodeB1、nodeC1和nodeD1可以用nodeA1的公钥对收到的消息进行签名验证，以确认自身收到的消息确实来自nodeA1且没有经过篡改。第一主网节点可以为区块链主网上属于配置信息所指示的节点成员的区块链节点。在组建区块链子网时，并非由第一主网节点直接参与组建区块链子网、成为其节点成员，而是需要由用于部署该第一主网节点的节点设备生成第一子网节点，并由第一子网节点成为区块链子网中的节点成员。第一主网节点和第一子网节点对应于同一个区块链成员，比如在联盟链场景下对应于同一联盟链成员，但第一主网节点属于区块链主网、第一子网节点属于区块链子网，使得该区块链成员可以分别参与到区块链主网和区块链子网的交易中；并且，由于区块链主网和区块链子网属于相互独立的两个区块链网络，使得第一主网节点生成的区块与第一子网节点生成的区块分别存入所述节点设备上的不同存储，实现了第一主网节点与第一子网节点分别使用的存储之间的相互隔离，因而区块链子网所产生的数据仅会在区块链子网的节点成员之间同步，使得仅参与了区块链主网的区块链成员无法获得区块链子网上产生的数据，实现了区块链主网与区块链子网之间的数据隔离，满足了部分区块链成员之间的交易需求。可见，第一主网节点和第一子网节点是在逻辑上划分出来的区块链节点，而从物理设备的角度来说，相当于上述部署了第一主网节点和第一子网节点的节点设备同时参与了区块链主网和区块链子网。由于区块链主网与区块链子网之间相互独立，使得这两个区块链网络的身份体系也相互独立，因而即便第一主网节点和第一子网节点可以采用完全相同的公钥，仍然应当将两者视为不同的区块链节点。譬如在图4中，subnet0中的nodeA相当于第一主网节点，而部署该nodeA的节点设备生成了属于subnet1的nodeA1，该nodeA1相当于第一子网节点。可见，由于身份体系相互独立，所以即便第一子网节点所采用的公钥区别于第一主网节点，也不影响本说明书方案的实施。当然，区块链子网的节点成员并不一定只是区块链主网的部分节点成员。在一些情况下，区块链子网的节点成员可以与区块链主网的节点成员完全一致，此时所有的区块链成员都可以获得区块链主网和区块链子网上的数据，但是区块链主网与区块链子网所产生的数据依然可以相互隔离，比如可以通过在区块链主网上实现一类业务、在区块链子网上实现另一类业务，从而可以使得这两类业务分别产生的业务数据之间相互隔离。除了上述的节点成员的身份信息之外，配置信息还可以包括下述至少之一：所述区块链子网的网络标识、所述区块链子网的管理员的身份信息、针对区块链平台代码的属性配置等，本说明书并不对此进行限制。网络标识用于唯一表征该区块链子网，因而该区块链子网的网络标识应当区别于区块链主网和该区块链主网上组建的其他区块链子网。区块链子网的管理员的身份信息，譬如可以为作为管理员的节点成员的公钥；其中，区块链主网与区块链子网的管理员可以相同，也可以不同。通过区块链主网来组建区块链子网的优势之一，就是由于生成第一子网节点的节点设备上已经部署了第一主网节点，因而可以将第一主网节点所使用的区块链平台代码复用在第一子网节点上，免去了区块链平台代码的重复部署，极大地提高了区块链子网的组建效率。那么，如果配置信息中未包含针对区块链平台代码的属性配置，第一子网节点可以复用第一主网节点上采用的属性配置；如果配置信息中包含了针对区块链平台代码的属性配置，第一子网节点可以采用该属性配置，使得第一子网节点所采用的属性配置不受限于第一主网节点的属性配置、与第一主网节点无关。针对区块链平台代码的属性配置可以包括下述至少之一：代码版本号、是否需要共识、共识算法类型、区块大小等，本说明书并不对此进行限制。组建区块链子网的交易包括调用合约的交易。该交易中可以指明被调用的智能合约的地址、调用的方法和传入的参数。例如，调用的合约可以为前述的创世合约或系统合约，调用的方法可以为组建区块链子网的方法，传入的参数可以包括上述的配置信息。在一实施例中，该交易可以包含如下信息：from：Administratorto：Subnetmethod：AddSubnetstring：genesis其中，from字段为该交易的发起方的信息，譬如Administrator表明该发起方为管理员；to字段为被调用的智能合约的地址，譬如该智能合约可以为Subnet合约，则to字段具体为该Subnet合约的地址；method字段为调用的方法，譬如在Subnet合约中用于组建区块链子网的方法可以为AddSubnet，而string为AddSubnet方法中的参数，上述示例中通过genesis表征该参数的取值，该genesis具体为前述的配置信息。以Subnet0上的节点nodeA~nodeE执行调用Subnet合约中AddSubnet方法的交易为例。在交易通过共识后，nodeA~nodeE分别执行AddSubnet方法并传入配置信息，得到相应的执行结果。合约的执行结果可以包括所述配置信息，该执行结果可以处于前文所述的收据中，该收据中可以包含与执行AddSubnet方法相关的event，即组网事件。组网事件的topic可以包含预定义的组网事件标识，以区别于其他的事件。譬如在与执行AddSubnet方法相关的event中，topic的内容为关键词subnet，且该关键词区别于其他方法所产生event中的topic。那么，nodeA~nodeE通过监听生成的收据中各个event所含的topic，可以在监听到包含关键词subnet的topic的情况下，确定监听到与执行AddSubnet方法相关的event，即组网事件。例如，收据中的event如下：Event：......那么，nodeA~nodeE在监听到第1条event时，由于所含topic的内容为other，确定该event与AddSubnet方法无关；以及，nodeA~nodeE在监听到第2条event时，由于所含topic的内容为subnet，确定该event与AddSubnet方法相关，并进而读取该event对应的data字段，该data字段包含上述的配置信息。以配置信息包括区块链子网的节点成员的公钥为例，data字段的内容例如可以包括：{subnet1；nodeA的公钥，nodeA的IP、nodeA的端口号…；nodeB的公钥，nodeB的IP、nodeB的端口号…；nodeC的公钥，nodeC的IP、nodeC的端口号…；nodeD的公钥，nodeD的IP、nodeD的端口号…；}其中，subnet1为希望创建的区块链子网的网络标识。区块链主网中的各个区块链节点可以记录该区块链主网上已创建的所有区块链子网的网络标识，或者与这些区块链子网相关的其他信息，这些信息譬如可以维护在上述的Subnet合约中，具体可以对应于该Subnet合约所含的一个或多个合约状态的取值。那么，nodeA~nodeE可以根据记录的已创建的所有区块链子网的网络标识，确定上述的subnet1是否已经存在；如果不存在，说明subnet1是当前需要创建的新区块链子网，如果存在则说明subnet1已经存在。除了采用希望创建的新的区块链子网的网络标识之外，还可以采用预定义的新建网络标识，该新建网络标识表明相应的组网事件用于组建新的区块链子网。例如，可以将上述的subnet1替换为newsubnet，该newsubnet为预定义的新建网络标识，nodeA~nodeE在识别到data字段包含newsubnet时，即可确定包含该newsubnet的event为组网事件，需要创建新的区块链子网。除了网络标识subnet1之外，上述data字段中还包含各个节点成员的身份信息等内容。部署第一主网节点的节点设备可以监听生成的收据，并在监听到所述组网事件且所述组网事件的内容表明第一主网节点属于所述节点成员的情况下，由部署第一主网节点的节点设备获取所述组网事件包含的配置信息或创世块。例如，nodeA~nodeE在确定subnet1是需要新组建的区块链子网的情况下，会进一步识别data字段中包含的节点成员的身份信息，以确定自身的处理方式。比如，nodeA~nodeD会发现在data字段包含自身的公钥、IP地址和端口号等身份信息，假定nodeA~nodeD分别部署在节点设备1~4上，以nodeA和节点设备1为例： nodeA会触发节点设备1，使得节点设备1基于上述的消息机制从data字段获得配置信息并生成包含该配置信息的创世块，且节点设备1会在本地部署nodeA1，进而由nodeA1加载生成的创世块，从而形成为subnet1中的1个节点成员；类似地，nodeB会触发节点设备2生成nodeB1、nodeC会触发节点设备3生成nodeC1、nodeD会触发节点设备4生成nodeD1。以及，nodeE会发现data字段包含的身份信息与自身均不匹配，假定nodeE部署在节点设备5上，那么该节点设备5不会根据data字段中的配置信息生成创世块，也不会生成subnet1中的节点。如前所述，第一主网节点与第一子网节点并不一定采用相同的身份信息。因此，在上述实施例中，data字段中可以包含预先为nodeA1~nodeD1生成的身份信息，且区别于nodeA~nodeD的身份信息。仍以nodeA和节点设备1为例：节点设备1如果在data字段中发现了nodeA1的身份信息，可以生成创世块、部署nodeA1，并由nodeA1加载该创世块，或者，nodeA如果在data字段中发现了nodeA1的身份信息，那么nodeA会触发节点设备1生成创世块、部署nodeA1，并由nodeA1加载该创世块；nodeB~nodeD的处理方式类似，此处不再一一赘述。除了配置信息之外，合约的执行结果可以包括创世块。换言之，除了可以在data字段中包含配置信息，还可以直接在执行合约调用的过程中生成包含配置信息的创世块，从而将创世块包含于data字段中，那么对于上述的nodeA~nodeD而言，相应的节点设备1~4可以通过消息机制直接从data字段获得创世块，而无需自行生成，可以提升对nodeA1~nodeD1的部署效率。在本说明书中，组建区块链子网的交易可以并非是调用智能合约的交易，使得不支持智能合约的区块链网络也可以实现本说明书的技术方案，从而在区块链主网的基础上快捷地创建出区块链子网。例如，可以预先定义一组网交易类型标识，当交易包含该组网交易类型标识时，就表明该交易用于组建新的区块链子网，即该交易为组建区块链子网的交易。区块链平台代码可以包含相关的用于组件区块链子网的处理逻辑，使得运行该区块链平台代码的第一主网节点在执行交易时，如果发现该交易中包含上述的组网交易类型标识，且第一主网节点属于该交易中的配置信息所指示的节点成员，可以基于上述处理逻辑来触发部署第一主网节点的节点设备生成包含该配置信息的创世块并启动第一子网节点，由第一子网节点加载该创世块，以形成为区块链子网中的区块链节点。节点设备通过在该进程中创建一个运行区块链平台代码的实例，实现在该节点设备上部署一区块链节点。对于第一主网节点而言，由节点设备在上述进程中创建第一实例，并由该第一实例运行区块链平台代码而形成。类似地，对于第一子网节点而言，由节点设备在上述进程中创建区别于第一实例的第二实例，并由该第二实例运行区块链平台代码而形成。例如，节点设备可以首先在进程中创建第一实例，以形成区块链主网中的第一区块链节点；而当该节点设备对应的节点成员希望参与组建区块链子网时，可以在上述进程中创建第二实例，该第二实例区别于上述的第一实例，并由该第二实例形成区块链子网中的第二区块链节点。当第一实例与第二实例位于同一进程时，由于不涉及跨进程交互，可以降低对第一子网节点的部署难度、提高部署效率。当然，第二实例也可能与第一实例分别处于节点设备上的不同进程中，本说明书并不对此进行限制。事实上，本说明书实施例中涉及的任一节点设备上部署的各区块链节点均为运行在所述任一节点设备上的不同的区块链实例，任一节点设备上部署的各区块链节点生成的区块分别存入所述任一节点设备上的不同存储，且任一节点设备部署的各区块链节点分别使用的存储之间相互隔离；例如，节点设备可以在第一进程中创建第一实例，以形成区块链主网中的第一区块链节点；而当该节点设备对应的节点成员希望参与组建区块链子网时，可以启动区别于第一进程的第二进程，并在该第二进程中创建第二实例，该第二实例区别于上述的第一实例，进而由该第二实例形成区块链子网中的第二区块链节点。通过上述方式，可以在区块链主网上创建出区块链子网。以图4为例，subnet0原本包含nodeA~nodeE，而在subnet0的基础上可以组建出subnet1，该subnet1包含nodeA1~nodeD1，且nodeA与nodeA1、nodeB与nodeB1、nodeC与nodeC1、nodeD与nodeD1分别部署在同一节点设备上。类似地，还可以在subnet0上组建出subnet2或更多的区块链子网，其中subnet2包含nodeA2、nodeB2、nodeC2和nodeE2，且nodeA与nodeA1、nodeA2，nodeB与nodeB1、nodeB2，nodeC与nodeC1，nodeD与nodeD1，nodeE与nodeE2分别部署在同一节点设备上。以及，可以将subnet1、subnet2等作为区块链主网，并在此基础上进一步组建出区块链子网，例如在subnet1的基础上组建出区块链子网subnet3，其过程与subnet1或subnet2的组建相似，仅仅是将区块链主网替换为区块链子网subnet1，此处不再赘述，最后得到subnet3包含nodeA3、nodeB3和nodeC3，使得且nodeA与nodeA1、nodeA2、nodeA3，nodeB与nodeB1、nodeB2、nodeB3，nodeC与nodeC1、nodeC2、nodeC3分别部署在同一节点设备上。通过上述方式来组建区块链子网，该区块链子网中包含的节点成员由前文所述的配置信息所确定。因此，在上述基于区块链主网组建区块链子网的场景下，同一节点设备上往往部署有多个区块链节点，例如图4中nodeA、nodeA1和nodeA2就部署在同一节点设备上，那么当用户如管理员希望对subnet1的运行状态进行控制时，就会涉及对各节点设备中subnet1对应的区块链节点进行启动或关闭，具体而言，是需要控制节点设备1~4中分别对应的nodeA1~D1进行启动或关闭。因此如何独立地控制特定区块链子网的运行状态，以及如何在控制特定区块链子网的同时不干扰其他区块链子网的正常运行，是该场景下的必然要求。为此，本说明书提出了一种区块链子网运行状态的控制方法，可使在区块链主网组建并管理有区块链子网的情况下，独立地控制特定区块链子网的运行状态，而不会干扰其他区块链子网的正常运行。图5是一示例性实施例提供的一种区块链子网运行状态的控制方法的流程图。如图5所示，该方法包括：步骤502，区块链主网中的主网节点获取控制区块链子网运行状态的交易，所述交易包含的控制信息和目标子网标识被传递至所述交易执行后触发生成的子网状态控制事件中。与组建区块链子网的交易类似，控制区块链子网运行状态的交易可由区块链主网的管理员发起，也可以允许区块链主网的普通用户发起上述组建区块链子网的交易。控制区块链子网运行状态的交易包括调用合约的交易。该交易中可以指明被调用的智能合约的地址、调用的方法和传入的参数。例如，调用的合约可以为前述的创世合约或系统合约，调用的方法可以为控制区块链子网运行状态的方法，传入的参数可以包括上述的控制信息和目标子网标识。在一实施例中，该交易可以包含如下信息：from：Administratorto：Subnetmethod：ControlSubnet其中，from字段为该交易的发起方的信息，譬如Administrator表明该发起方为管理员；to字段为被调用的智能合约的地址，譬如该智能合约可以为Subnet合约，则to字段具体为该Subnet合约的地址；method字段为调用的方法，譬如在Subnet合约中用于组建区块链子网的方法可以为ControlSubnet，而string为ControlSubnet方法中的参数，包括上述的控制信息和目标子网标识，控制信息可以包括子网启动、子网关闭和子网切换，其中，子网切换是指将指定区块链子网的运行状态从当前状态切换至另一状态。以图4中的Subnet0上的节点nodeA~nodeE执行调用Subnet合约中ControlSubnet方法的交易为例。在交易通过共识后，nodeA~nodeE分别执行ControlSubnet方法并传入参数string，得到相应的执行结果。合约的执行结果可以包括前文所述的收据，该收据中可以包含与执行ControlSubnet方法相关的event，即子网状态控制事件，对应的topic为关键词ControlSubnet，那么nodeA~nodeE或者部署nodeA~nodeE的节点设备1~5通过监听生成的收据中各个event所含的topic，可以在监听到包含关键词ControlSubnet的topic的情况下，确定监听到与执行ControlSubnet方法相关的event，即子网状态控制事件。例如，收据中的event如下：Event：......那么，在监听到第1条event时，由于所含topic的内容为other，确定该event与ControlSubnet方法无关；以及，在监听到第2条event时，由于所含topic的内容为ControlSubnet，确定该event与ControlSubnet 方法相关，并进而读取该event对应的data字段，该data字段包含上述的控制信息和目标子网标识。以控制信息为子网关闭、目标子网标识为subnet1对应的子网标识为例，data字段的内容例如可以包括：{stop；subnet1}其中，stop为控制信息，subnet1为希望进行控制的区块链子网的子网标识，因此该子网状态控制事件对应于“关闭subnet1”的控制任务。区块链主网中的各主网节点在执行该交易并生成上述子网状态控制事件的过程中，可以更新Subnet合约中记录的有关subnet1的子网合约状态，更新subnet1的运行状态，使得合约状态中subnet1的运行状态能够正确反映出本次控制完成后subnet1所处于的运行状态，例如在本例中，subnet1对应的子网合约状态中的表示运行状态的字段会被更新为“SubnetState close”，代表subnet1在本次控制过程结束后将处于关闭状态。该子网合约状态除了包含subnet1的运行状态，还包含subnet1的各类子网信息，包括子网标识、节点成员的公钥和共识类型信息、插件配置信息、创世块等，该子网合约状态会被记录在subnet0的世界状态中。控制区块链子网的交易在被发送至区块链主网后，不一定会被执行，在交易执行前，区块链主网中的各主网节点可以根据交易包含的目标子网标识首先检验目标子网标识对应的第一区块链子网是否处于所述区块链主网的管理下，当能够确定第一区块链子网处于所述区块链主网的管理下时，才会同意执行所述交易。例如，区块链主网中的各主网节点可以在区块链主网对应的子网列表查找是否含有目标子网标识，当子网列表中含有目标子网标识时，才会同意执行所述交易，否则不会执行所述交易，其中，区块链主网对应的子网列表中记录有区块链主网管理下的各区块链子网的子网标识、运行状态、节点成员等信息，该子网列表可以维护在各主网节点的区块链平台代码中，也可以维护在系统合约的合约状态中。通过上述对交易配置信息进行初步检验，可以在确定所述交易对应的区块链子网未处于区块链主网的管理下时避免执行该交易，从而节省区块链系统的计算资源和时间资源。进一步的，在上述初步检验的过程中，还可以加入对交易中包含的控制信息的检验，例如在确定第一区块链子网处于所述区块链主网的管理下时，还可以进一步检验所述控制信息与第一区块链子网的运行状态是否匹配，并在相匹配的情况下才最终同意执行所述交易。其中，控制信息与第一区块链子网的运行状态相匹配，指的是当所述控制信息用于将第一区块链子网由第一运行状态切换至第二运行状态，且第一区块链子网正处于第一运行状态的情况下，所述控制信息被确认为与第一区块链子网的运行状态相匹配，例如当第一运行状态为开启状态时，第二运行状态为关闭状态；当第一运行状态为关闭状态时，第二运行状态为开启状态。更具体地说，控制信息与运行状态相匹配包括以下情况中任意一种：所述控制信息为子网启动且所述区块链子网的运行状态为关闭状态、所述控制信息为子网关闭且所述区块链子网的运行状态为开启状态、所述控制信息为子网切换。上述的初步检验过程可以发生在针对该交易的共识之前，此时该交易会被直接废弃而不会参与共识机制；或者可以发生在交易的共识机制之后，这种情况下，该交易会被标记上不合法的标签，从而不会被各主网节点执行；又或者，可以发生在交易执行的预处理阶段，此时虽然该交易已经执行但由于被检验出不合法，从而立即放弃执行后续过程并在交易执行后生成的收据中记录本次交易执行失败的结果和原因。当区块链主网中的各主网节点接收到的交易中未包含控制信息时，所述控制信息被默认为预设控制信息；当所述控制区块链子网运行状态的交易中未包含目标子网标识时，所述目标子网标识被默认为预设子网标识。本说明书实施例中，各主网节点在检测到所接收交易的method字段包含ControlSubnet的情况下，能够判断该交易是用于控制区块链子网运行状态的交易，从而进一步读取string中具体的参数，如果string中的控制信息或目标子网标识存在缺失时，则会将预设的控制信息或目标子网标识填充至该交易的string中，从而保证后续交易的执行以及控制过程不会出错。其中，预设的控制信息或目标子网标识可以由用于预先设定，也可以是各主网节点按照统一的算法得到，例如，各主网节点在区块链平台代码或被所述交易调用的智能合约中设置有如下逻辑：若接收到的交易中的method字段为ControlSubnet，且参数string为空或部分缺失，则当string中的控制信息缺失控制时，将其默认为子网切换；当string中的目标子网标识缺失时，将其默认为区块链主网所组建的第一个区块链子网的子网标识。步骤504，部署第一主网节点的节点设备从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，并在确定本地已经部署有所述目标子网标识对应的第一区块链子网中的第一子网节点的情况下，根据所述控制信息控制第一子网节点的运行状态。部署第一主网节点的节点设备可以直接监听合约执行后生成的收据，并在监听到所述收据中包含所述子网状态控制事件的情况下，从所述子网状态控制事件中提取所述控制信息和所述目标子网标识。或者，第一主网节点可以监听所述合约执行后生成的收据，并在监听到所述收据中包含所述子网状态控制事件的情况下，触发部署第一主网节点的节点设备从所述子网状态控制事件中提取所述控制信息和所述目标子网标识。部署有主网节点的各节点设备均维护有各自的本地子网列表，各本地子网列表记录有相应节点设备本地部署的各子网节点所属区块链子网的子网标识，于是部署第一主网节点的节点设备维护的本地子网列表中记录有该节点设备本地部署的各子网节点所属区块链子网的子网标识，因此该节点设备可以通过查询自身维护的本地子网列表中是否包含所述目标子网标识，从而确定本地是否已经部署所述目标子网标识对应的第一区块链子网中的第一子网节点。以图4为例，假定subnet0上nodeA~nodeE分别部署在节点设备1~5上，因而节点设备1除了部署有主网节点nodeA，还部署有属于subnet1的子网节点nodeA1和subnet2的子网节点nodeA2，因此对于节点设备1而言，其本地维护的本地子网列表中记录有subnet1和subnet2的子网标识，若节点设备1通过子网状态控制事件提取到的目标子网标识为subnet1，包含于其所维护的本地子网列表中，因此节点设备1可以确定本地已经部署有subnet1对应的nodeA1，此时节点设备1可以根据控制信息控制nodeA1的运行状态；而对于节点设备5而言，其本地部署有属于subnet0的nodeE和属于subnet2的nodeE2，于是节点设备5维护的本地子网列表中记录有subnet2的子网标识，而目标子网标识subnet1未包含于其所维护的本地子网列表中，由此节点设备1可以确定本地未部署有subnet1相应的区块链节点，此时节点设备5将不做任何操作。类似的，节点设备2、3和4在完成上述流程后将根据控制信息分别控制subnet1中nodeB1、nodeC1和nodeD1的运行状态，从而在各个节点设备的配合下，共同完成对subnet1中所有子网节点运行状态的控制，即完成了控制subnet1这一区块链子网运行状态的过程。本地子网列表中包含的子网标识可以通过所述节点设备监听子网信息查询事件得到，所述子网信息查询事件通过第一主网节点执行调用所述区块链主网上子网管理合约的子网信息查询交易生成，所述子网信息查询事件包含所述区块链主网管理下的各区块链子网的子网信息，所述子网信息包括子网标识和节点成员身份信息。例如，节点设备1在从子网状态控制事件中提取出目标子网标识后，会向区块链主网上子网管理合约发起子网信息查询交易，并监听子网管理合约执行该交易后生成的子网信息查询事件，其topic关键词为ListSubnet，data字段包含区块链主网管理下的各区块链子网的子网信息，包括各区块链子网的子网标识、节点成员身份信息、运行状态、插件配置信息等，子网信息查询事件可以表示为如下形式：其被节点设备1监听到后，读取data字段中的内容为：{subnet1：nodeA1，nodeB1，nodeC1，nodeD1；subnet2：nodeA2，nodeB2，nodeC2，nodeE2；}其中，前缀subnet1、subnet2代表区块链子网的子网标识，后缀nodeA1等代表子网节点的节点身份信息，例如节点公钥。节点设备1将自身维护的各个节点身份信息与上述data字段中的内容进行对比，找到自身所部署的子网节点所属的区块链子网，例如节点设备1维护有nodeA1和nodeA2的身份信息，而data字段中相应子网节点对应的区块链子网的子网标识为subnet1和subnet2，因此节点设备1可以确定本地已经部署有subnet1和subnet2对应的子网节点，于是将subnet1与subnet2加入本地子网列表，在另一实施例中，节点设备1可以预先向该子网管理合约发起所述子网信息查询交易，从而已经维护有包含subnet1与subnet2的本地子网列表，当节点设备1通过子网状态控制事件提取到的目标子网标识为subnet1后，便无需再向子网管理合约发起子网信息查询交易。子网管理合约的合约状态中维护有区块链主网管理的各区块链子网的子网合约状态，每一区块链子网对应的子网合约状态中记录有对应区块链子网的子网标识、节点成员的公钥和共识类型信息、插件配置信息、创世块等，事实上，子网管理合约可以与前文所述的Subnet合约为同一合约。如前所述，节点设备可以通过查询自身维护的本地子网列表，确定本地是否已经部署所述目标子网标识对应的第一区块链子网中的第一子网节点，而在另一实施例中，当获取上述子网信息查询事件的data字段后，节点设备也可以直接根据data字段中的各区块链子网的子网信息确定本地是否部署有目标子网标识对应的第一区块链子网中的第一子网节点，而无需利用或整理出本地子网列表，例如，节点设备1通过子网状态控制事件提取到的目标子网标识为subnet1，这种情况下，节点设备1会直接根据目标子网标识在上述data字段中进行查询，得到subnet1所对应的子网节点的身份信息为nodeA1、nodeB1、nodeC1和nodeD1，然后将自身维护的身份信息nodeA1和nodeA2与之比对，判断自身维护的身份信息是否包含其中，如果包含则可以确定本地部署有目标子网标识中。区块链主网管理下的各区块链子网可以包括在区块链主网下组建的区块链子网，也可以包括不在区块链主网下组建的区块链子网。一般而言，在任一区块链网络上组建的区块链子网将受到该任一区块链网络的管理，例如在subnet1的基础上如果再创建有以nodeA3和nodeB3为节点成员的subnet1.1，那么subnet1将获取subnet1.1的管理权，可以对subnet1.1的运行状态进行控制，而subnet0则无法对subnet1.1进行管理，这种场景下，节点设备会对不同区块链网络采用不同的权限管理，例如当监听到的事件属于subnet0时，则节点设备在响应该事件完成各类操作时，只能读取subnet0对应权限的本地子网列表，该本地子网列表只会包含受subnet0管理的区块链子网的子网标识，即包含subnet1和subnet2，而不会包含subnet1.1。然而通过一些方法，可以实现subnet0的跨层管理，使得subnet0能够管理subnet1.1。例如，subnet0可以通过跨链技术将从subnet1.1的父网subnet1处获得的有关subnet1.1的子网信息添加至subnet0上子网管理合约的合约状态中，从而使得subnet0获取subnet1.1的管理权，后续subnet0上的主网节点可以通过子网信息查询交易将subnet1.1的子网信息写入子网信息查询事件，以使各节点设备将subnet1.1的子网信息加入subnet0对应权限的本地子网列表；或者，可以在subnet1上发出管理权转移交易，使得各节点设备监听到所述管理权转移交易执行后生成的管理权转移事件后，在节点设备层面将subnet1对应权限的本地子网列表中subnet1.1的子网信息添加至subnet0对应权限的本地子网列表中，使得subnet0上子网管理合约的合约状态虽然尚未记载subnet1.1的子网信息，但对于节点设备而言却可以通过监听subnet0发生的事件时从subnet0对应权限的本地子网列表中读取到subnet1.1的子网信息，因此实质上使subnet0获取了获得对subnet1.1的管理权。除了确认本地是否已经部署所述目标子网标识对应的第一区块链子网中的第一子网节点，部署有第一主网节点的节点设备还可以通过其他检验方式来决定是否控制第一子网节点的运行状态，例如在确定本地已经部署有第一子网节点的情况下，进一步确定子网状态控制事件中提取出的控制信息是否匹配于第一区块链子网的运行状态，并在确定控制信息与第一区块链子网的运行状态相匹配的情况下，才会最终根据控制信息控制第一子网节点的运行状态。如前所述，子网状态查询事件中不仅包含各区块链子网的子网标识和节点成员身份信息，还会包含各区块链子网的运行状态，这使得部署有第一主网节点的节点设备对应的本地子网列表中除了记录本地部署的各子网节点所属区块链子网的子网标识，还会记录各子网节点所属区块链子网的运行状态，因此，部署有第一主网节点的节点设备可以通过查询本地子网列表中对应于目标子网标识的区块链子网的运行状态是否匹配于子网状态控制事件中提取出的控制信息，从而在控制信息匹配于第一子网节点的运行状态时，根据控制信息控制第一子网节点的运行状态。关于控制信息与第一子网节点的运行状态相匹配的各种情况前文已经解释，这里不再赘述。在本说明书实施例中，节点设备在控制第一子网节点之前，需要进行多种检验方式以检验节点设备当前是否能够正常执行子网状态控制事件所指示的控制任务，按照控制信息控制第一子网节点的运行状态，保证控制过程不会出错。当节点设备上未部署子网状态控制事件所指示的第一区块链子网对应的第一子网节点时，说明控制第一区块链子网的运行状态与该节点设备无关，因此该节点设备无需做任何操作，只需保持自身的正常运行，或者当该节点设备虽然部署有第一区块链子网对应的第一子网节点，但第一区块链子网对应的运行状态与子网状态控制事件指示的控制信息不匹配时，例如当第一区块链子网已经处于关闭状态而控制信息也是子网关闭时，此时也无需进行任何操作，从而预先避免了进行无意义的控制过程。在通过上述校验过程后，节点设备确认自身能够正常执行子网状态控制事件对应的控制任务，根据控制信息控制第一子网节点的运行状态，下面具体介绍这一控制过程。在本说明书涉及的区块链网络系统中，节点设备上部署的各区块链节点实质是运行在所述节点设备上且由各自插件模块构成的不同区块链实例，各节点设备都部署有相应的插件管理器，用于管理相应节点设备上部署的各区块链节点在运行时所依赖的插件模块，也即用于构成各区块链节点的插件模块。因此，节点设备可以通过控制第一子网节点对应的插件管理器，以根据所述控制信息启动或关闭用于构成第一子网节点的插件模块，例如当控制信息为子网关闭时，节点设备控制插件管理器关闭用于构成第一子网节点的插件模块；当控制信息为子网启动时，节点设备控制插件管理器启动用于构成第一子网节点的插件模块；当控制信息为子网切换时，节点设备控制插件管理器根据当前第一子网节点的运行状态，将用于构成第一子网节点的插件模块切换至另一运行状态。在一种情况下，某一节点设备只会部署一个共享插件管理器，用于管理该节点设备下部署的所有区块链节点对应的插件模块，具体而言，共享插件管理器中维护有本地部署的各区块链节点的插件配置信息，而由于同一区块链网络中的不同区块链节点的插件模块往往相同，所以区块链节点的插件配置信息与该区块链节点所属的区块链网络的插件配置信息一般是一致的，当然同一区块链网络中的不同区块链节点的插件模块也可能不同。区块链节点的插件配置信息用于指示构成所述某一区块链节点的具体的插件模块，例如可以包括：业务网络插件、服务插件、P2P插件、区块链子网管理插件、Cache插件、验证插件、事件管理插件、共识插件、同步插件、执行插件、区块链插件、存储插件等，本说明书对此并不做任何限制。在另一种情况下，某一节点设备会根据该节点设备部署的每个区块链节点均单独分配一个对应的独立插件管理器，使得独立插件管理器仅维护有对应区块链节点的插件配置信息，专门负责管理对应区块链节点的插件模块，例如开启、关闭、替换相应区块链节点的插件模块。如前所述，子网状态查询事件中可以包含各区块链子网的插件配置信息，而区块链子网的插件配置信息中包含有该区块链子网下的各子网节点的插件配置信息，这使得节点设备可以根据自身身份信息确定本地部署的子网节点的插件配置信息，所以节点设备对应的本地子网列表中可以记录有本地部署的各子网节点所属区块链子网的插件配置信息，因此，节点设备中部署的插件管理器其能够通过读取本地子网列表获取节点设备本地部署的各区块链节点的插件配置信息。节点设备在确认自身能够正常执行子网状态控制事件对应的控制任务后，会控制第一子网节点对应的插件管理器，以根据所述控制信息启动或关闭用于构成第一子网节点的插件模块。例如，当节点设备1从子网控制事件中提取出控制信息为子网关闭，且目标子网标识为subnet1对应的子网标识时，在一种情况下，节点设备1可以控制subnet1对应的子网节点即nodeA1的独立插件管理器，以使nodeA1的独立插件管理器根据nodeA1的插件配置信息，关闭用于构成nodeA1的插件模块；在另一种情况下，节点设备1可以控制共享插件管理器，以使共享插件管理器查找得到subnet1对应的子网节点即nodeA1的插件配置信息，并根据nodeA1的插件配置信息关闭用于构成nodeA1的插件模块。节点设备上不同的区块链节点可能在运行时依赖于同一个插件模块，而这样的插件就是共享插件。例如节点设备1上目前处于开启状态的区块链节点包括nodeA和nodeA1，用于构成nodeA的插件模块包括插件1.0、插件2.0、插件3.0和插件4.0，用于构成nodeA1的插件模块包括插件1.1、插件2.0、插件3.1、插件4.1和插件5.1，其中，插件1.0和插件1.1、插件3.0和插件3.1、插件4.0和插件4.1虽然属于同一类型的插件模块，具有相同的插件功能，但依然是两个不同的插件模块被分别嵌入不同的区块链节点，彼此不会共享信息，本质上属于不同的插件模块。而插件2.0则是同时被nodeA和nodeA1所依赖，因此，像插件2.0这种同时被两个或两个以上的区块链节点共同使用的插件模块就属于节点设备1下的共享插件，与之对应的，仅被一个区块链节点单独依赖的插件模块则属于节点设备1下的独立插件，例如上述除插件2.0以外的插件均属于独立插件。节点设备上部署的插件管理器，会根据本地部署的各区块链节点的插件配置信息以及运行状态，维护一个插件信息属性列表，用于标注所有插件模块的属性信息，包括是共享插件还是独立插件，与其他插件模块的依赖关系等。插件信息属性列表是实时更新的，例如，当插件管理器读取本地子网列表后，发现当前运行状态为开启状态的区块链子网只有subnet0和subnet1，那么就会进一步查找得到本地部署的subnet0和subnet1分别对应的nodeA与nodeA1的插件配置信息，进而比对可以得到nodeA与nodeA1所共同使用的插件模块为插件2.0，于是将插件信息属性列表中的插件2.0标注为共享插件，而当subnet1关闭后，插件管理器再次读取本地子网列表发现运行状态为开启状态的区块链子网只有subnet0，那么就只能查找得到的nodeA的插件配置信息，因此此时不存在任何共享插件，于是将插件信息属性列表中的插件2.0从共享插件更改为独立插件。除了通过本地子网列表中各区块链子网的子网信息获取本地部署的各子网节点的插件配置信息、运行状态以外，插件管理器也可以单独维护本地部署的主网节点和各子网节点的插件配置信息与运行状态，而在对相应子网节点完成控制后，自行更新维护的运行状态等信息，从而可以更加及时、准确地更新插件信息属性列表中的各插件模块的属性信息。由于共享插件的存在，节点设备在根据所述控制信息启动或关闭用于构成第一子网节点的插件模块时，需要避免关闭或重复启动共享插件，从而防止影响第一子网节点或其他区块链节点的正常运行。即节点设备可以根据所述控制信息启动或关闭第一子网节点中除共享插件以外的插件模块，所述共享插件为第一子网节点与至少一个部署于所述节点设备的其他区块链节点共同使用、且所述其他区块链节点正在使用的插件模块。具体而言，当节点设备1从子网控制事件中提取出控制信息为子网关闭，且目标子网标识为subnet1对应的子网标识时，节点设备1可以通过插件管理器，获取subnet1对应的子网节点nodeA1的插件配置信息并排除该插件配置信息中的共享插件，例如nodeA1的插件配置信息为“插件1.1、插件2.0、插件3.1、插件4.1和插件5.1”，而插件管理器维护的插件信息属性列表表明插件2.0为共享插件，因此节点设备将插件2.0排除所述插件配置信息，以得到最终的插件配置信息为“插件1.1、插件3.1、插件4.1和插件5.1”，并根据最终的插件配置信息关闭相应的插件模块插件1.1、插件3.1、插件4.1和插件5.1。插件管理器中维护有各插件模块之间的依赖关系。假如插件A的正常运行必须要求插件B已经运行，那么可以认为插件A与插件B之间具有依赖关系，并且插件A依赖于插件B，可以表示为“插件A→插件B”。插件管理器中涉及的各插件模块之间的依赖关系可以通过系统预制或用于预先定义，并记录在插件信息属性列表中，如表1所示，根据各插件之间的依赖关系，可以整理得到两条依赖关系：“插件A→插件B→插件D”、“插件C→插件D和插件E”。当节点设备根据所述控制信息启动或关闭用于构成第一子网节点的插件模块时，可以按照构成第一子网节点的各个插件模块之间的启停顺序，根据所述控制信息启动或关闭第一子网节点的插件模块；其中，所述启停顺序与各个插件模块之间的依赖关系相关。具体来说，假设构成第一子网节点的插件模块为插件A、插件B和插件D，其依赖关系为“插件A→插件B→插件D”，那么在关闭用于构成第一子网节点的插件模块的情况下，关闭顺序与依赖顺序相同，也是“插件A→插件B→插件D”，这样通过先关闭有依赖的上层插件模块，后关闭无依赖的底层插件模块；而在启动用于构成第一子网节点的插件模块的情况下，启动顺序将与依赖顺序相反，也即“插件D→插件B→插件A”，这样通过先开启自身无依赖的上层插件模块，后开启有依赖的上层插件模块。在上述方案中，通过按照各个插件模块之间的依赖关系决定启停顺序，可以使在启停过程中不会出现插件模块因缺少依赖插件而运行出错的情况，避免导致数据丢失甚至节点崩溃，同时充分地使用和释放内存资源。例如，当节点设备1从子网控制事件中提取出控制信息为子网关闭，且目标子网标识为subnet1对应的子网标识时，节点设备1可以通过插件管理器，获取subnet1对应的子网节点nodeA1的插件配置信息为“插件1.1、插件2.0、插件3.1、插件4.1和插件5.1”，以及相应的依赖关系为“插件1.1→插件3.1→插件2.0”、“插件4.1→插件5.1”，由于控制信息为子网关闭，因此确定得到“插件1.1→插件3.1→插件2.0”、“插件4.1→插件5.1”的关闭顺序，其中，按照“插件1.1→插件3.1→插件2.0”关闭插件1.1、插件3.1和插件2.0，与按照“插件4.1→插件5.1”关闭插件4.1和5.1之间相互独立，节点设备按照上述关闭顺序关闭相应的插件模块，从而起到无损关闭的效果当然，当然，当插件2.0为共享插件时，可以将“插件1.1→插件3.1→插件2.0”的关闭顺序替换为“插件1.1→插件3.1”，即不关闭作为共享插件的插件2.0，从而不影响其他子网节点的正常运行。图6是一示例性实施例提供的一种区块链系统的示意结构图。如图6所示，该区块链系统包括：区块链主网600中的主网节点，用于获取控制区块链子网运行状态的交易，所述交易包含的控制信息和目标子网标识被传递至所述交易执行后触发生成的子网状态控制事件中；部署第一主网节点601的节点设备，用于从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，并在确定本地已经部署有所述目标子网标识对应的第一区块链子网中的第一子网节点的情况下，根据所述控制信息控制第一子网节点的运行状态。可选的，还包括：所述节点设备通过查询自身维护的本地子网列表，确定本地是否已经部署第一子网节点；其中，所述本地子网列表用于记录所述节点设备本地部署的各子网节点所属区块链子网的子网标识。可选的，所述根据所述控制信息控制第一子网节点的运行状态，包括：在确定所述控制信息匹配于第一区块链子网的运行状态的情况下，根据所述控制信息控制第一子网节点的运行状态。可选的，所述确定所述控制信息匹配于第一子网节点的运行状态，包括：当所述控制信息匹配于本地子网列表中对应于所述目标子网标识的第一区块链子网的运行状态时，确定所述控制信息匹配于第一区块链子网的运行状态，其中，所述本地子网列表包含所述节点设备本地部署的各子网节点所属区块链子网的子网标识和运行状态。可选的，还包括：区块链主网600中的主网节点在确定第一区块链子网处于所述区块链主网600的管理下，且所述控制信息与第一区块链子网的运行状态相匹配的情况下同意执行所述交易。可选的，当所述控制信息用于将第一区块链子网由第一运行状态切换至第二运行状态，且第一区块链子网正处于第一运行状态的情况下，所述控制信息被确认为与第一区块链子网的运行状态相匹配。可选的，当第一运行状态为开启状态时，第二运行状态为关闭状态；当第一运行状态为关闭状态时，第二运行状态为开启状态。可选的，所述节点设备根据所述控制信息控制第一子网节点的运行状态，包括：所述节点设备控制第一子网节点对应的插件管理器，以根据所述控制信息启动或关闭用于构成第一子网节点的插件模块。可选的，所述插件管理器为所述节点设备上部署的所有区块链节点对应的共享插件管理器；或者，所述插件管理器为单独应用于第一子网节点的独立插件管理器。可选的，所述节点设备根据所述控制信息启动或关闭用于构成第一子网节点的插件模块，包括：所述节点设备通过所述插件管理器确定第一子网节点对应的插件配置信息，并根据所述控制信息启动或关闭所述插件配置信息对应的用于构成第一子网节点的插件模块。可选的，所述节点设备根据所述控制信息启动或关闭用于构成第一子网节点的插件模块，包括：所述节点设备根据所述控制信息启动或关闭第一子网节点中除共享插件以外的插件模块，所述共享插件为第一子网节点与至少一个部署于所述节点设备的其他区块链节点共同使用、且所述其他区块链节点正在使用的插件模块。可选的，所述节点设备部署的插件管理器中维护有各插件模块之间的依赖关系；所述节点设备根据所述控制信息启动或关闭用于构成第一子网节点的插件模块，包括：所述节点设备按照构成第一子网节点的各个插件模块之间的启停顺序，根据所述控制信息启动或关闭第一子网节点的插件模块；其中，所述启停顺序与各个插件模块之间的依赖关系相关。可选的，还包括：当所述控制区块链子网运行状态的交易中未包含控制信息时，所述控制信息被默认为预设控制信息。当所述控制区块链子网运行状态的交易中未包含目标子网标识时，所述目标子网标识被默认为预设子网标识。可选的，所述控制区块链子网运行状态的交易包括调用合约的交易。可选的，所述合约包括创世合约或系统合约。可选的，所述合约的合约状态中维护有第一区块链子网的运行状态；其中，所述控制区块链子网运行状态的交易还触发所述合约在所述合约状态中更新第一区块链子网的运行状态。可选的，所述节点设备从所述子网状态控制事件中提取所述控制信息和所述目标子网标识，包括：第一主网节点601监听所述合约执行后生成的收据，触发所述节点设备获取所述收据中包含的所述子网状态控制事件，并从所述子网状态控制事件中提取所述控制信息和所述目标子网标识；或者，所述节点设备通过监听所述合约执行后生成的收据，获得所述收据中包含的所述子网状态控制事件，并从所述子网状态控制事件中提取所述控制信息和所述目标子网标识。可选的，所述控制区块链子网运行状态的交易由所述区块链主网600的管理员发起；或者，所述控制区块链子网运行状态的交易由所述区块链主网600的普通用户发起。可选的，所述节点设备上部署的各区块链节点为运行在所述节点设备上的不同区块链实例。可选的，所述节点设备部署的各区块链节点生成的区块分别存入所述节点设备上的不同存储。可选的，所述节点设备部署的各区块链节点分别使用的存储之间相互隔离。可选的，所述存储为数据库。可选的，所述区块链主网600为底层区块链网络；或者，所述区块链主网600为被其他区块链网络所管理的子网。图7是一示例性实施例提供的一种设备的示意结构图。请参考图7，在硬件层面，该设备包括处理器702、内部总线704、网络接口706、内存708以及非易失性存储器710，当然还可能包括其他业务所需要的硬件。本说明书一个或多个实施例可以基于软件方式来实现，比如由处理器702从非易失性存储器710中读取对应的计算机程序到内存708中然后运行。当然，除了软件实现方式之外，本说明书一个或多个实施例并不排除其他实现方式，比如逻辑器件抑或软硬件结合的方式等等，也就是说上述方案的处理流程的执行主体并不限定于各个逻辑单元，也可以是硬件或逻辑器件。上述实施例阐明的系统、装置、模块或单元，具体可以由计算机芯片或实体实现，或者由具有某种功能的产品来实现。一种典型的实现设备为计算机。具体的，计算机例如可以为个人计算机、膝上型计算机、蜂窝电话、相机电话、智能电话、个人数字助理、媒体播放器、导航设备、电子邮件设备、游戏控制台、平板计算机、可穿戴设备或者这些设备中的任何设备的组合。为了描述的方便，描述以上装置时以功能分为各种单元分别描述。当然，在实施本说明书时可以把各单元的功能在同一个或多个软件和/或硬件中实现。本领域内的技术人员应明白，本发明的实施例可提供为方法、系统、或计算机程序产品。因此，本发明可采用完全硬件实施例、完全软件实施例、或结合软件和硬件方面的实施例的形式。而且，本发明可采用在一个或多个其中包含有计算机可用程序代码的计算机可用存储介质上实施的计算机程序产品的形式。本发明是参照根据本发明实施例的方法、设备、和计算机程序产品的流程图和／或方框图来描述的。应理解可由计算机程序指令实现流程图和／或方框图中的每一流程和／或方框、以及流程图和／或方框图中的流程和／或方框的结合。可提供这些计算机程序指令到通用计算机、专用计算机、嵌入式处理机或其他可编程数据处理设备的处理器以产生一个机器，使得通过计算机或其他可编程数据处理设备的处理器执行的指令产生用于实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能的装置。本说明书可以在由计算机执行的计算机可执行指令的一般上下文中描述，例如程序模块。一般地，程序模块包括执行特定任务或实现特定抽象数据类型的例程、程序、对象、组件、数据结构等等。也可以在分布式计算环境中实践本说明书，在这些分布式计算环境中，由通过通信网络而被连接的远程处理设备来执行任务。在分布式计算环境中，程序模块可以位于包括存储设备在内的本地和远程计算机存储介质中。这些计算机程序指令也可存储在能引导计算机或其他可编程数据处理设备以特定方式工作的计算机可读存储器中，使得存储在该计算机可读存储器中的指令产生包括指令装置的制造品，该指令装置实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能。这些计算机程序指令也可装载到计算机或其他可编程数据处理设备上，使得在计算机或其他可编程设备上执行一系列操作步骤以产生计算机实现的处理，从而在计算机或其他可编程设备上执行的指令提供用于实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能的步骤。在一个典型的配置中，计算机包括一个或多个处理器 、输入/输出接口、网络接口和内存。内存可能包括计算机可读介质中的非永久性存储器，随机存取存储器  和/或非易失性内存等形式，如只读存储器  或闪存。内存是计算机可读介质的示例。计算机可读介质包括永久性和非永久性、可移动和非可移动媒体可以由任何方法或技术来实现信息存储。信息可以是计算机可读指令、数据结构、程序的模块或其他数据。计算机的存储介质的例子包括，但不限于相变内存 、静态随机存取存储器 、动态随机存取存储器 、其他类型的随机存取存储器 、只读存储器 、电可擦除可编程只读存储器 、快闪记忆体或其他内存技术、只读光盘只读存储器、数字多功能光盘  或其他光学存储、磁盒式磁带、磁盘存储、量子存储器、基于石墨烯的存储介质或其他磁性存储设备或任何其他非传输介质，可用于存储可以被计算设备访问的信息。按照本文中的界定，计算机可读介质不包括暂存电脑可读媒体，如调制的数据信号和载波。还需要说明的是，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、商品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、商品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括所述要素的过程、方法、商品或者设备中还存在另外的相同要素。上述对本说明书特定实施例进行了描述。其它实施例在所附权利要求书的范围内。在一些情况下，在权利要求书中记载的动作或步骤可以按照不同于实施例中的顺序来执行并且仍然可以实现期望的结果。另外，在附图中描绘的过程不一定要求示出的特定顺序或者连续顺序才能实现期望的结果。在某些实施方式中，多任务处理和并行处理也是可以的或者可能是有利的。在本说明书一个或多个实施例使用的术语是仅仅出于描述特定实施例的目的，而非旨在限制本说明书一个或多个实施例。在本说明书一个或多个实施例和所附权利要求书中所使用的单数形式的“一种”、“所述”和“该”也旨在包括多数形式，除非上下文清楚地表示其他含义。还应当理解，本文中使用的术语“和/或”是指并包含一个或多个相关联的列出项目的任何或所有可能组合。应当理解，尽管在本说明书一个或多个实施例可能采用术语第一、第二、第三等来描述各种信息，但这些信息不应限于这些术语。这些术语仅用来将同一类型的信息彼此区分开。例如，在不脱离本说明书一个或多个实施例范围的情况下，第一信息也可以被称为第二信息，类似地，第二信息也可以被称为第一信息。取决于语境，如在此所使用的词语“如果”可以被解释成为“在……时”或“当……时”或“响应于确定”。以上所述仅为本说明书一个或多个实施例的较佳实施例而已，并不用以限制本说明书一个或多个实施例，凡在本说明书一个或多个实施例的精神和原则之内，所做的任何修改、等同替换、改进等，均应包含在本说明书一个或多个实施例保护的范围之内。
