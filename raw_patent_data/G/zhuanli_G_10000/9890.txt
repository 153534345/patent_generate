标题title
软件升级方法、装置、电子设备及存储介质
摘要abst
本公开涉及控制器软件升级技术领域，提供了一种软件升级方法、装置、电子设备及存储介质。该方法应用于无人车，即无人驾驶设备或自动驾驶设备，包括：在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，接收云端服务器发送的加密升级包和解密密钥，加密升级包为云端服务器基于版本信息和传输协议并使用预设加密算法对多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的，使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级。本公开减小了服务器的压力。
权利要求书clms
1.一种软件升级方法，应用于包括多个控制器的车辆，其特征在于，包括：在设定时刻获取所述多个控制器的中的每个控制器的版本信息，并将所述车辆的车辆标识和所有的版本信息发送至云端服务器，其中，所述设定时刻包括车辆唤醒、车辆上电或车辆下电；接收所述云端服务器发送的加密升级包和解密密钥，其中，所述加密升级包为所述云端服务器基于所述版本信息和传输协议并使用预设加密算法对所述多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合；使用所述解密密钥对所述加密升级包进行解密，得到所述至少一个升级包，并基于所述传输协议和所述至少一个升级包对所述至少一个待升级控制器进行软件升级。2.根据权利要求1所述的方法，其特征在于，所述方法还包括：获取所述车辆的行驶数据，并基于所述行驶数据确定所述车辆是否处于行驶状态；其中，所述基于所述传输协议和所述至少一个升级包对所述至少一个待升级控制器进行软件升级，包括：在所述车辆处于驻车状态的情况下，基于所述传输协议和所述至少一个升级包同时对所述至少一个待升级控制器进行软件升级；或者在所述车辆处于驻车状态的情况下，按照所述至少一个待升级控制器的优先级从高到低的顺序，并基于所述传输协议和所述至少一个升级包对所述至少一个待升级控制器进行软件升级；或者在所述车辆处于驻车状态的情况下，基于所述传输协议和所述至少一个升级包的大小对所述至少一个待升级控制器进行软件升级。3.根据权利要求2所述的方法，其特征在于，所述方法还包括：在所述车辆处于行驶状态的情况下，当所述至少一个待升级控制器为一个待升级控制器时，确定所述待升级控制器是否为主控制器；在确定所述待升级控制器为所述主控制器的情况下，控制所述车辆减速直至所述车辆的行驶速度为零，并基于所述主控制器对应的升级包和所述传输协议对所述主控制器进行软件升级；在确定所述待升级控制器为辅控制器的情况下，控制所述车辆保持所述行驶状态，并基于所述辅控制器对应的升级包和所述传输协议对所述辅控制器进行软件升级。4.根据权利要求2所述的方法，其特征在于，所述方法还包括：在所述车辆处于行驶状态的情况下，当所述至少一个待升级控制器包括多个待升级控制器时，按照所述多个待升级控制器的优先级从低到高的顺序，基于所述传输协议和所述多个待升级控制器对应的多个升级包对所述多个待升级控制器进行软件升级。5.根据权利要求4所述的方法，其特征在于，所述方法还包括：当确定所述多个待升级控制器中的至少一个主控制器需要进行软件升级时，控制所述车辆减速直至所述车辆的行驶速度为零；按照所述至少一个主控制器的优先级从高到低的顺序，并基于所述至少一个主控制器对应的至少一个升级包和所述传输协议对所述至少一个主控制器进行软件升级。6.根据权利要求4所述的方法，其特征在于，所述方法还包括：当确定所述多个待升级控制器中的至少一个辅控制器需要进行软件升级时，控制所述车辆保持所述行驶状态；基于所述至少一个辅控制器对应的至少一个升级包和所述传输协议同时对所述至少一个辅控制器进行软件升级；或者按照所述至少一个辅控制器的优先级从高到低的顺序，并基于所述至少一个辅控制器对应的至少一个升级包和所述传输协议对所述至少一个辅控制器进行软件升级；或者基于所述至少一个辅控制器对应的至少一个升级包的大小和所述传输协议对所述至少一个辅控制器进行软件升级。7.根据权利要求1至6中任一项所述的方法，其特征在于，所述预设加密算法包括对称加密算法、非对称加密算法和哈希算法中的任一种。8.一种控制器升级装置，应用于包括多个控制器的车辆，其特征在于，包括：发送模块，被配置为在设定时刻获取所述多个控制器的中的每个控制器的版本信息，并将所述车辆的车辆标识和所有的版本信息发送至云端服务器，其中，所述设定时刻包括车辆唤醒、车辆上电或车辆下电；接收模块，被配置为接收所述云端服务器发送的加密升级包和解密密钥，其中，所述加密升级包为所述云端服务器基于所述版本信息和传输协议并使用预设加密算法对所述多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合；升级模块，被配置为使用所述解密密钥对所述加密升级包进行解密，得到所述至少一个升级包，并基于所述传输协议和所述至少一个升级包对所述至少一个待升级控制器进行软件升级。9.一种电子设备，包括存储器、处理器以及存储在所述存储器中并且可以在所述处理器上运行的计算机程序，其特征在于，所述处理器执行所述计算机程序时实现如权利要求1至7中任一项所述方法的步骤。10.一种计算机可读存储介质，所述计算机可读存储介质存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1至7中任一项所述方法的步骤。
说明书desc
技术领域本公开涉及控制器软件升级技术领域，尤其涉及一种软件升级方法、装置、电子设备及计算机可读存储介质。背景技术随着汽车逐渐智能化，汽车的控制器越来越多，由原来的几个到现在的几十个甚至上百个，因此，控制器存在软件升级的需求。目前，智能汽车大多采用空中下载技术对控制器进行软件升级，然而，在进行软件升级时，多个控制器需要与服务器进行多次交互来下载所需的升级包，导致服务器的压力增大，服务器的资源浪费，软件的安全性低。发明内容有鉴于此，本公开实施例提供了一种软件升级方法、装置、电子设备及计算机可读存储介质，以解决现有技术中在进行软件升级时，多个控制器需要与服务器进行多次交互来下载所需的升级包，导致服务器的压力增大，服务器的资源浪费，软件的安全性低的问题。本公开实施例的第一方面，提供了一种软件升级方法，包括：在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，其中，设定时刻包括车辆唤醒、车辆上电或车辆下电，接收云端服务器发送的加密升级包和解密密钥，其中，加密升级包为云端服务器基于版本信息和传输协议并使用预设加密算法对多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合，使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级。本公开实施例的第二方面，提供了一种软件升级装置，包括：发送模块，被配置为在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，其中，设定时刻包括车辆唤醒、车辆上电或车辆下电，接收模块，被配置为接收云端服务器发送的加密升级包和解密密钥，其中，加密升级包为云端服务器基于版本信息和传输协议并使用预设加密算法对多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合，升级模块，被配置为使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级。本公开实施例的第三方面，提供了一种电子设备，包括存储器、处理器以及存储在存储器中并且可以在处理器上运行的计算机程序，该处理器执行计算机程序时实现上述方法的步骤。本公开实施例的第四方面，提供了一种计算机可读存储介质，该计算机可读存储介质存储有计算机程序，该计算机程序被处理器执行时实现上述方法的步骤。本公开实施例与现有技术相比存在的有益效果是：通过在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，其中，设定时刻包括车辆唤醒、车辆上电或车辆下电，接收云端服务器发送的加密升级包和解密密钥，其中，加密升级包为云端服务器基于版本信息和传输协议并使用预设加密算法对多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合，使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级，能够在仅与服务器进行一次交互的情况下实现多个控制器的软件升级，因此，减小了服务器的压力，节省了服务器的资源，调高了软件的安全性。附图说明为了更清楚地说明本公开实施例中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本公开的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其它的附图。图1是本公开实施例的应用场景的场景示意图；图2是本公开实施例提供的一种软件升级方法的流程图；图3是本公开实施例提供的另一种软件升级方法的流程图；图4是本公开实施例提供的一种软件升级装置的框图；图5是本公开实施例提供的一种电子设备的示意图。具体实施方式以下描述中，为了说明而不是为了限定，提出了诸如特定系统结构、技术之类的具体细节，以便透彻理解本公开实施例。然而，本领域的技术人员应当清楚，在没有这些具体细节的其它实施例中也可以实现本公开。在其它情况中，省略对众所周知的系统、装置、电路以及方法的详细说明，以免不必要的细节妨碍本公开的描述。下面将结合附图详细说明根据本公开实施例的一种软件升级方法和装置。图1是本公开实施例的应用场景的场景示意图。该应用场景可以包括无人车1、服务器2以及网络3。无人车1可以是支持无人驾驶、自动驾驶、人工驾驶和远程驾驶中的任一功能的车辆。这里，车辆可以是现有的交通工具，也可以是应用在不同领域的运输工具。例如，无人车1可以是无人零售车，该无人零售车可以通过自动驾驶程序实现自动驾驶，也可以经由网络3连接至服务器2以通过服务器2实现远程控制，本公开实施例对此不作限制。服务器2可以是提供各种服务的服务器，例如，对与其建立通信连接的终端设备发送的请求进行接收的后台服务器，该后台服务器可以对终端设备发送的请求进行接收和分析等处理，并生成处理结果。服务器2可以是一台服务器，也可以是由若干台服务器组成的服务器集群，或者还可以是一个云计算服务中心，本公开实施例对此不作限制。需要说明的是，服务器2可以是硬件，也可以是软件。当服务器2为硬件时，其可以是为无人车1提供各种服务的各种电子设备。当服务器2为软件时，其可以实现为为无人车1提供各种服务的多个软件或软件模块，也可以实现为为无人车1提供各种服务的单个软件或软件模块，本公开实施例对此不作限制。网络3可以是采用同轴电缆、双绞线和光纤连接的有线网络，也可以是无需布线就能实现各种通信设备互联的无线网络，例如，蓝牙、近场通信、红外等，本公开实施例对此不作限制。无人车1可以经由网络3与服务器2建立通信连接，以接收或发送信息等。具体地，在无人车1将获取到的所有控制器的版本信息和车辆标识发送到服务器2之后，服务器2根据车辆标识和所有控制器的版本信息确定至少一个待升级控制器，并基于传输协议生成与至少一个待升级控制器对应的至少一个升级包；进一步地，服务器2将至少一个升级包合并成一个升级包，使用预设加密算法对合并后的升级包进行加密得到加密升级包，并将加密升级包以及解密密钥发送至无人车1；无人车1接收服务器2发送的加密升级包和解密密钥，并使用解密密钥对加密升级包进行解密，得到至少一个升级包，从而基于加密协议和至少一个升级包对至少一个待升级控制器进行软件升级。需要说明的是，无人车1、服务器2以及网络3的具体类型、数量和组合可以根据应用场景的实际需求进行调整，本公开实施例对此不作限制。图2是本公开实施例提供的一种软件升级方法的流程图。图2的软件升级方法可以由图1的无人车1执行。如图2所示，该软件升级方法包括：S201，在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，其中，设定时刻包括车辆唤醒、车辆上电或车辆下电；S202，接收云端服务器发送的加密升级包和解密密钥，其中，加密升级包为云端服务器基于版本信息和传输协议并使用预设加密算法对多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合；S203，使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级。具体地，无人车在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，其中，设定时刻包括车辆唤醒、车辆上电或车辆下电，云端服务器根据车辆标识和所有的版本信息提取至少一个升级包，并基于传输协议将至少一个升级包使用预设加密算法进行加密得到加密升级包，将加密升级包以及解密密钥发送至无人车，无人车接收云端服务器发送的加密升级包和解密密钥，并使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级。这里，车辆可以是能够实现无人驾驶的各种设备，例如，无人零售车或无人售卖车、自动配送设备、机器人等；也可以是具有自动巡航控制功能的车辆，例如，轿车、房车、卡车、越野车、运动型实用汽车、电动车、自行车等，本公开实施例对此不作限制。优选地，在本公开实施例中，车辆可以是图1所示的无人车1。控制器是指按照预定顺序改变主电路或控制电路的接线和改变电路中电阻值来控制电动机的启动、调速、制动和反向的主令装置。由程序计数器、指令寄存器、指令译码器、时序产生器和操作控制器组成，是发布命令的“决策机构”，即完成协调和指挥整个计算机系统的操作。电动汽车控制器是用来控制电动车电机的启动、运行、进退、速度、停止以及电动车的其它电子器件的核心控制器件，是电动车上重要的部件。在本公开实施例中，车辆可以包括多个控制器，例如，控制器域网总线类控制器、以太网总线类控制器和其他类总线控制器。这里，控制器域网总线类控制器可以包括但不限于整车控制器、电池控制单元、电子驻车制动系统和电子液压制动系统；以太网总线类控制器可以包括但不限于激光雷达、计算单元等；其他类总线控制器可以包括但不限于超声波雷达、RS485的车窗控制器、座椅控制器等。需要说明的是，多个控制器不限于如上所述的控制器，例如，还可以包括混合动力控制器、自动变速箱控制器、车身控制器、电子助力转向系统、方向盘转角传感器、电子稳定性系统等。车辆内设置有无线通信模块，以经由网络向云端服务器发送请求升级的信息。这里，网络可以是采用同轴电缆、双绞线和光纤连接的有线网络，也可以是无需布线就能实现各种通信设备互联的无线网络，例如，蓝牙、近场通信、红外等，本公开实施例对此不作限制。云端服务器可以是一台服务器，也可以是由若干台服务器组成的服务器集群，或者还可以是一个云计算服务中心，本公开实施例对此不作限制。设定时刻可以是根据经验设定的时刻，例如，车辆唤醒、车辆上电或车辆下电等。以车辆唤醒为例，当车辆被唤醒时，车辆的中控器可以获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，从而确保车辆在每次行驶时都基于最新的软件程序。这里，中控器是车辆的升级管理控制器，用于向云端服务器发送车辆的车辆标识和所有的版本信息，以及下载并拆分云端服务器生成的升级包，将拆分后的升级包发送至每个待升级控制器，并控制每个待升级控制器的升级过程。版本信息是控制器中所运行的软件版本的信息，可以包括但不限于版本号、版本日期等。车辆标识可以包括但不限于车辆的商标或厂标、产品标牌、发动机型号、生产厂家、车型、出厂编号、车辆识别代号等。云端服务器也称云计算服务器或云主机，是云计算服务体系中的一项主机产品，该产品有效地解决了传统物理主机与虚拟专用服务器服务中存在的管理难度大、业务扩展性弱的缺陷。进一步地，云端服务器可以是一个或多个。加密升级包可以是经过加密的压缩文件。举例来说，将所有的升级包经过压缩算法压缩为一个完整的压缩包，这里，压缩方法可以包括但不限于PCX行程压缩方法、霍夫曼编码压缩、LZW压缩方法、DEFLATE和算术压缩方法。在OTA的升级过程中，为了保护产品不受外界恶意攻击，被窃取数据，或者被植入恶意代码，在本地上传升级包前的加密以及客户端下载升级包并解密的操作是必不可少的。可以通过预设加密算法对压缩包进行加密，这里，预设加密算法可以包括对称加密算法、非对称加密算法和哈希算法中的任一种，对称加密算法可以包括但不限于DES、3DES、Blowfish、IDEA、RC4、RC5、RC6和AES等；非对称加密算法可以包括但不限于RSA、ECC、Diffie-Hellman、El Gamal、DSA等；HASH算法可以包括但不限于MD2、MD4、MD5、HAVAL、SHA等。密钥是指某个用来完成加密、解密、完整性验证等密码学应用的秘密信息。在对称密码学中，加密和解密使用的是同一个钥匙，因此，钥匙需要保密；在非对称密码学中，加密和解密使用的是不同的钥匙，即公开的钥匙和非公开的钥匙。解密密钥也是根据不同的加密算法得到的。传输协议是指升级管理控制器向待升级控制器发送升级包时所用的通信传输协议，传输协议可以包括但不限于CAN协议、LIN总线、Modbus通讯协议、PROFIBUS、以太网等。根据本公开实施例提供的技术方案，通过在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，其中，设定时刻包括车辆唤醒、车辆上电或车辆下电，接收云端服务器发送的加密升级包和解密密钥，其中，加密升级包为云端服务器基于版本信息和传输协议并使用预设加密算法对多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合，使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级，能够在仅与服务器进行一次交互的情况下实现多个控制器的软件升级，因此，减小了服务器的压力，节省了服务器的资源，调高了软件的安全性。在一些实施例中，该软件升级方法还包括：获取车辆的行驶数据，并基于行驶数据确定车辆是否处于行驶状态；其中，基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级，包括：在车辆处于驻车状态的情况下，基于传输协议和至少一个升级包同时对至少一个待升级控制器进行软件升级；或者在车辆处于驻车状态的情况下，按照至少一个待升级控制器的优先级从高到低的顺序，并基于传输协议和至少一个升级包对至少一个待升级控制器进行软件升级；或者在车辆处于驻车状态的情况下，基于传输协议和至少一个升级包的大小对至少一个待升级控制器进行软件升级。具体地，行驶数据可以是无人车的行驶速度，可以通过安装在无人车上的速度传感器采集无人车的行驶速度，以确定无人车是否处于行驶状态。在车辆处于驻车状态的情况下，由于控制器之间没有逻辑联系，因此，可以同时进行软件升级。举例来说，假设第一控制器需要依赖于第二控制器运行，在云端服务器返回的加密升级包中，同时包括第一控制器和第二控制器所对应的升级包，即，第一控制器和第二控制器均需要升级；进一步地，在车辆处于驻车状态的情况下，由于第一控制器和第二控制器均处于未运行状态，因此，可以同时对第一控制器和第二控制器进行软件升级。在一些实施例中，该软件升级方法还包括：在车辆处于行驶状态的情况下，当至少一个待升级控制器为一个待升级控制器时，确定待升级控制器是否为主控制器；在确定待升级控制器为主控制器的情况下，控制车辆减速直至车辆的行驶速度为零，并基于主控制器对应的升级包和传输协议对主控制器进行软件升级；在确定待升级控制器为辅控制器的情况下，控制车辆保持行驶状态，并基于辅控制器对应的升级包和传输协议对辅控制器进行软件升级。具体地，在车辆处于行驶状态的情况下，当云端服务器返回的加密升级包中包括主控制器所对应的升级包，并且确定主控制器需要升级时，可以控制车辆减速直至车辆的行驶速度为零，即，控制车辆停靠至安全的位置，并对主控制器进行软件升级。可选地，当云端服务器返回的加密升级包中包括辅控制器所对应的升级包，并且确定辅控制器需要升级时，由于辅控制器对车辆的行驶没有影响，因此，可以控制车辆继续保持行驶状态，并对辅控制器进行软件升级。在一些实施例中，该软件升级方法还包括：在车辆处于行驶状态的情况下，当至少一个待升级控制器包括多个待升级控制器时，按照多个待升级控制器的优先级从低到高的顺序，基于传输协议和多个待升级控制器对应的多个升级包对多个待升级控制器进行软件升级。具体地，在车辆处于行驶状态的情况下，当确定有多个控制器需要进行软件升级时，考虑到一些控制器之间的耦合性，因此，可以按照多个待升级控制器的优先级从低到高的顺序对多个待升级控制器进行软件升级。例如，当云端服务器返回的加密升级包中包括主控制器和辅控制器所对应的升级包，并且确定主控制器和辅控制器都需要升级时，可以控制车辆减速直至车辆的行驶速度为零，即，控制车辆停靠至安全的位置，并先对主控制进行软件升级；在主控制器升级完成后，车辆可以以设定速度行驶并继续对辅控制器进行软件升级，因此，保证了车辆的稳定性。在一些实施例中，该软件升级方法还包括：当确定多个待升级控制器中的至少一个主控制器需要进行软件升级时，控制车辆减速直至车辆的行驶速度为零；按照至少一个主控制器的优先级从高到低的顺序，并基于至少一个主控制器对应的至少一个升级包和传输协议对至少一个主控制器进行软件升级。具体地，在多个主控制器均需要进行软件升级时，可以按照设定的优先级分别对多个主控制器进行软件升级，这里，优先级可以根据多个主控制器之间的逻辑关系进行设定，例如，在第一主控制器中包括一个新加入的方法，在第二主控制器中引用了第一控制器中新加入的方法，就需要先对第一控制器进行软件升级，再对第二控制器进行软件升级，避免第二控制器因找不到该方法而出错。在一些实施例中，该软件升级方法还包括：当确定多个待升级控制器中的至少一个辅控制器需要进行软件升级时，控制车辆保持行驶状态；基于至少一个辅控制器对应的至少一个升级包和传输协议同时对至少一个辅控制器进行软件升级；或者按照至少一个辅控制器的优先级从高到低的顺序，并基于至少一个辅控制器对应的至少一个升级包和传输协议对至少一个辅控制器进行软件升级；或者基于至少一个辅控制器对应的至少一个升级包的大小和传输协议对至少一个辅控制器进行软件升级。具体地，当多个辅控制器需要进行软件升级时，可以基于多个辅控制器对应的多个升级包的大小分别对多个辅控制器进行软件升级。举例来说，在第一辅控制器与第二辅控制器均需要进行软件升级的情况下，如果第一辅控制器的升级包的大小为1兆字节，第二辅控制器的升级包的大小为813千字节，则优先对第二辅控制器进行软件升级，再对第一辅控制器进行软件升级。上述所有可选技术方案，可以采用任意结合形成本申请的可选实施例，在此不再一一赘述。图3是本公开实施例提供的另一种软件升级方法的流程图。如图3所示，该软件升级方法包括：S301，在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器；S302，接收云端服务器发送的加密升级包和解密密钥；S303，使用解密密钥对加密升级包进行解密，得到至少一个升级包；S304，获取车辆的行驶数据；S305，基于行驶数据确定车辆是否处于行驶状态，如果是，则执行S306；否则，执行S315；S306，确定至少一个待升级控制器是否为多个待升级控制器，如果是，则执行S307；否则，执行S312；S307，确定多个待升级控制器中的至少一个主控制器是否需要进行软件升级，如果是，则执行S308；否则，执行S310；S308，控制车辆减速直至车辆的行驶速度为零；S309，按照主控制器的优先级从高到低的顺序，并基于主控制器对应的升级包和传输协议对主控制器进行软件升级；S310，控制车辆保持行驶状态；S311，基于至少一个辅控制器对应的至少一个升级包和传输协议同时对至少一个辅控制器进行软件升级；或者按照至少一个辅控制器的优先级从高到低的顺序，并基于至少一个辅控制器对应的至少一个升级包和传输协议对至少一个辅控制器进行软件升级；或者基于至少一个辅控制器对应的至少一个升级包的大小和传输协议对至少一个辅控制器进行软件升级；S312，确定待升级控制器是否为主控制器，如果是，则执行S313；否则，执行S314；S313，控制车辆减速直至车辆的行驶速度为零，并基于主控制器对应的升级包和传输协议对主控制器进行软件升级；S314，控制车辆保持行驶状态，并基于辅控制器对应的升级包和传输协议对辅控制器进行软件升级；S315，基于至少一个升级包同时和传输协议对至少一个待升级控制器进行软件升级；或者按照至少一个待升级控制器的优先级从高到低的顺序，并基于至少一个升级包和传输协议对至少一个待升级控制器进行软件升级；或者基于至少一个升级包的大小和传输协议对至少一个待升级控制器进行软件升级。具体地，在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器；接收云端服务器发送的加密升级包和解密密钥；使用解密密钥对加密升级包进行解密，得到至少一个升级包；获取车辆的行驶数据，并基于行驶数据确定车辆是否处于行驶状态；在车辆处于行驶状态的情况下，确定至少一个待升级控制器是否为多个待升级控制器；在确定至少一个待升级控制器为多个待升级控制器的情况下，确定多个待升级控制器中的至少一个主控制器是否需要进行软件升级；在确定多个待升级控制器中的至少一个主控制器需要进行软件升级的情况下，控制车辆减速直至车辆的行驶速度为零，按照主控制器的优先级从高到低的顺序，并基于至少一个主控制器对应的至少一个升级包对至少一个主控制器进行软件升级；在确定多个待升级控制器中的至少一个主控制器不需要进行软件升级的情况下，控制车辆保持行驶状态，并基于至少一个辅控制器对应的至少一个升级包同时对至少一个辅控制器进行软件升级；或者按照至少一个辅控制器的优先级从高到低的顺序，并基于至少一个辅控制器对应的至少一个升级包对至少一个辅控制器进行软件升级；或者基于至少一个辅控制器对应的至少一个升级包的大小对至少一个辅控制器进行软件升级；在确定至少一个待升级控制器为一个待升级控制器的情况下，确定该待升级控制器是否为主控制器；在确定待升级控制器为主控制器的情况下，控制车辆减速直至车辆的行驶速度为零，并基于主控制器对应的升级包对主控制器进行软件升级；在确定待升级控制器不是主控制器的情况下，控制车辆保持行驶状态，并基于辅控制器对应的升级包对辅控制器进行软件升级；在车辆处于驻车状态的情况下，基于至少一个升级包同时对至少一个待升级控制器进行软件升级；或者按照至少一个待升级控制器的优先级从高到低的顺序，并基于至少一个升级包对至少一个待升级控制器进行软件升级；或者基于至少一个升级包的大小对至少一个待升级控制器进行软件升级。根据本公开实施例提供的技术方案，能够使车辆仅与云端服务器进行一次交互便可实现对控制器的软件进行升级，因此，减小了服务器的压力，节省了服务器的资源，并进一步的提升了软件升级的效率。下述为本公开装置实施例，可以用于执行本公开方法实施例。对于本公开装置实施例中未披露的细节，请参照本公开方法实施例。图4是本公开实施例提供的一种软件升级装置的示意图。如图4所示，该软件升级装置包括：发送模块401，被配置为在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，其中，设定时刻包括车辆唤醒、车辆上电或车辆下电；接收模块402，被配置为接收云端服务器发送的加密升级包和解密密钥，其中，加密升级包为云端服务器基于版本信息和加密协议并使用预设加密算法对多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合；升级模块403，被配置为使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于加密协议和至少一个升级包对至少一个待升级控制器进行软件升级。根据本公开实施例提供的技术方案，通过在设定时刻获取多个控制器的中的每个控制器的版本信息，并将车辆的车辆标识和所有的版本信息发送至云端服务器，其中，设定时刻包括车辆唤醒、车辆上电或车辆下电，接收云端服务器发送的加密升级包和解密密钥，其中，加密升级包为云端服务器基于版本信息和加密协议并使用预设加密算法对多个控制器中的至少一个待升级控制器对应的至少一个升级包合并后再进行加密得到的升级包集合，使用解密密钥对加密升级包进行解密，得到至少一个升级包，并基于加密协议和至少一个升级包对至少一个待升级控制器进行软件升级，在仅与服务器进行一次交互的情况下实现多个控制器的软件升级，因此，减小了服务器的压力，节省了服务器的资源，调高了软件的安全性。在一些实施例中，该软件升级装置还包括：确定模块404，被配置为获取车辆的行驶数据，并基于行驶数据确定车辆是否处于行驶状态；其中，在车辆处于驻车状态的情况下，图4的升级模块403基于至少一个升级包同时对至少一个待升级控制器进行软件升级；或者在车辆处于驻车状态的情况下，图4的升级模块403按照至少一个待升级控制器的优先级从高到低的顺序，并基于至少一个升级包对至少一个待升级控制器进行软件升级；或者在车辆处于驻车状态的情况下，图4的升级模块403基于至少一个升级包的大小对至少一个待升级控制器进行软件升级。在一些实施例中，在车辆处于行驶状态的情况下，当至少一个待升级控制器为一个待升级控制器时，图4的升级模块403确定待升级控制器是否为主控制器；在确定待升级控制器为主控制器的情况下，图4的升级模块403控制车辆减速直至车辆的行驶速度为零，并基于主控制器对应的升级包对主控制器进行软件升级；在确定待升级控制器为辅控制器的情况下，图4的升级模块403控制车辆保持行驶状态，并基于辅控制器对应的升级包对辅控制器进行软件升级。在一些实施例中，在车辆处于行驶状态的情况下，当至少一个待升级控制器包括多个待升级控制器时，图4的升级模块403按照多个待升级控制器的优先级从低到高的顺序，基于多个待升级控制器对应的多个升级包对多个待升级控制器进行软件升级。在一些实施例中，当确定多个待升级控制器中的至少一个主控制器需要进行软件升级时，图4的升级模块403控制车辆减速直至车辆的行驶速度为零，按照至少一个主控制器的优先级从高到低的顺序，并基于至少一个主控制器对应的至少一个升级包对至少一个主控制器进行软件升级。在一些实施例中，当确定多个待升级控制器中的至少一个辅控制器需要进行软件升级时，图4的升级模块403控制车辆保持行驶状态，基于至少一个辅控制器对应的至少一个升级包同时对至少一个辅控制器进行软件升级；或者按照至少一个辅控制器的优先级从高到低的顺序，并基于至少一个辅控制器对应的至少一个升级包对至少一个辅控制器进行软件升级；或者基于至少一个辅控制器对应的至少一个升级包的大小对至少一个辅控制器进行软件升级。在一些实施例中，预设加密算法包括对称加密算法、非对称加密算法和哈希算法中的任一种。应理解，上述实施例中各步骤的序号的大小并不意味着执行顺序的先后，各过程的执行顺序应以其功能和内在逻辑确定，而不应对本公开实施例的实施过程构成任何限定。图5是本公开实施例提供的一种电子设备5的示意图。如图5所示，该实施例的电子设备5包括：处理器501、存储器502以及存储在该存储器502中并且可以在处理器501上运行的计算机程序503。处理器501执行计算机程序503时实现上述各个方法实施例中的步骤。或者，处理器501执行计算机程序503时实现上述各装置实施例中各模块/单元的功能。示例性地，计算机程序503可以被分割成一个或多个模块/单元，一个或多个模块/单元被存储在存储器502中，并由处理器501执行，以完成本公开。一个或多个模块/单元可以是能够完成特定功能的一系列计算机程序指令段，该指令段用于描述计算机程序503在电子设备5中的执行过程。电子设备5可以是桌上型计算机、笔记本、掌上电脑及云端服务器等电子设备。电子设备5可以包括但不仅限于处理器501和存储器502。本领域技术人员可以理解，图5仅仅是电子设备5的示例，并不构成对电子设备5的限定，可以包括比图示更多或更少的部件，或者组合某些部件，或者不同的部件，例如，电子设备还可以包括输入输出设备、网络接入设备、总线等。处理器501可以是中央处理单元，也可以是其它通用处理器、数字信号处理器、专用集成电路、现场可编程门阵列或者其它可编程逻辑器件、分立门或者晶体管逻辑器件、分立硬件组件等。通用处理器可以是微处理器或者该处理器也可以是任何常规的处理器等。存储器502可以是电子设备5的内部存储单元，例如，电子设备5的硬盘或内存。存储器502也可以是电子设备5的外部存储设备，例如，电子设备5上配备的插接式硬盘，智能存储卡，安全数字卡，闪存卡等。进一步地，存储器502还可以既包括电子设备5的内部存储单元也包括外部存储设备。存储器502用于存储计算机程序以及电子设备所需的其它程序和数据。存储器502还可以用于暂时地存储已经输出或者将要输出的数据。所属领域的技术人员可以清楚地了解到，为了描述的方便和简洁，仅以上述各功能单元、模块的划分进行举例说明，实际应用中，可以根据需要而将上述功能分配由不同的功能单元、模块完成，即将装置的内部结构划分成不同的功能单元或模块，以完成以上描述的全部或者部分功能。实施例中的各功能单元、模块可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中，上述集成的单元既可以采用硬件的形式实现，也可以采用软件功能单元的形式实现。另外，各功能单元、模块的具体名称也只是为了便于相互区分，并不用于限制本申请的保护范围。上述系统中单元、模块的具体工作过程，可以参考前述方法实施例中的对应过程，在此不再赘述。在上述实施例中，对各个实施例的描述都各有侧重，某个实施例中没有详述或记载的部分，可以参见其它实施例的相关描述。本领域普通技术人员可以意识到，结合本文中所公开的实施例描述的各示例的单元及算法步骤，能够以电子硬件、或者计算机软件和电子硬件的结合来实现。这些功能究竟以硬件还是软件方式来执行，取决于技术方案的特定应用和设计约束条件。专业技术人员可以对每个特定的应用来使用不同方法来实现所描述的功能，但是这种实现不应认为超出本公开的范围。在本公开所提供的实施例中，应该理解到，所揭露的装置/电子设备和方法，可以通过其它的方式实现。例如，以上所描述的装置/电子设备实施例仅仅是示意性的，例如，模块或单元的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，多个单元或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另一点，所显示或讨论的相互之间的耦合或直接耦合或通讯连接可以是通过一些接口，装置或单元的间接耦合或通讯连接，可以是电性，机械或其它的形式。作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本公开各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。上述集成的单元既可以采用硬件的形式实现，也可以采用软件功能单元的形式实现。集成的模块/单元如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读存储介质中。基于这样的理解，本公开实现上述实施例方法中的全部或部分流程，也可以通过计算机程序来指令相关的硬件来完成，计算机程序可以存储在计算机可读存储介质中，该计算机程序在被处理器执行时，可以实现上述各个方法实施例的步骤。计算机程序可以包括计算机程序代码，计算机程序代码可以为源代码形式、对象代码形式、可执行文件或某些中间形式等。计算机可读介质可以包括：能够携带计算机程序代码的任何实体或装置、记录介质、U盘、移动硬盘、磁碟、光盘、计算机存储器、只读存储器、随机存取存储器、电载波信号、电信信号以及软件分发介质等。需要说明的是，计算机可读介质包含的内容可以根据司法管辖区内立法和专利实践的要求进行适当的增减，例如，在某些司法管辖区，根据立法和专利实践，计算机可读介质不包括电载波信号和电信信号。以上实施例仅用以说明本公开的技术方案，而非对其限制；尽管参照前述实施例对本公开进行了详细的说明，本领域的普通技术人员应当理解：其依然可以对前述各实施例所记载的技术方案进行修改，或者对其中部分技术特征进行等同替换；而这些修改或者替换，并不使相应技术方案的本质脱离本公开各实施例技术方案的精神和范围，均应包含在本公开的保护范围之内。
