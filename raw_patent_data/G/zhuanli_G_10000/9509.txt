标题title
数据处理方法、系统及设备
摘要abst
本申请实施例提供数据处理方法、系统及设备。所述方法包括：确定待写入的目标对象，其中，目标对象包含文件数据及目录名称。对目录名称进行拆分，得到第一名称及第二名称；其中，第一名称包含有至少一级文件夹名，第二名称包含有文件名。获取与第一名称关联的唯一标识符；基于唯一标识符、第二名称及文件数据，得到第一子对象；将第一子对象及第二子对象作为目标对象写入存储空间，其中第二子对象是由第一名称及唯一标识符确定的。本申请技术方案中，第二子对象中包含有表示目录层级文件夹名，在针对目标对象的目录进行相关操作时，只需对第二子对象操作就可以了，能够降低针对对象存储的目录进行操作的复杂程度，提升对象存储方式目录维护效率。
权利要求书clms
1.一种数据处理方法，所述方法包括：确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称；对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象；将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。2.根据权利要求1所述的方法，所述获取与所述第一名称关联的唯一标识符，包括：查询内存中是否包含有所述第一名称的第二子对象；若包含，根据所述第二子对象，获取所述唯一标识符；若不包含，则为所述第一名称生成所述唯一标识符。3.根据权利要求1所述的方法，还包括：将所述第一名称作为第二键值对的键，所述唯一标识符作为所述第二键值对的值；所述第二子对象即所述第二键值对。4.根据权利要求1所述的方法，所述基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象，包括：根据所述唯一标识符、所述第二名称，生成第一键值对的键；所述文件数据作为所述第一键值对的值；所述第一子对象即所述第一键值对。5.根据权利要求1所述的方法，还包括：获取任务的任务名称；将所述任务名称作为所述唯一标识符的前缀，以便于在所述任务结束后，将带有所述任务名称前缀的对象删除。6.一种数据处理方法，所述方法包括：确定待读取的目标对象，其中，所述目标对象包含文件数据及目录名称；对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；读取存储空间与所述唯一标识符关联的所述文件数据。7.一种数据处理方法，所述方法包括：确定需进行操作的目标目录；基于所述目标目录，确定至少一个对象对应的第一子对象；根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，即完成对所述目标目录的操作。8.根据权利要求7所述的方法，所述根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，包括：所述目标操作的操作类型为移动类型时，获取至少一个对象对应的第一子对象包含的第一名称；其中，所述第一名称包含至少一级文件夹名；响应于用户针对至少一个对象的文件夹名进行的拷贝操作，确定移动目标文件夹名；响应于用户针对至少一个对象的文件夹名的粘贴操作，将所述第一子对象包含的第一名称修改为所述移动目标文件夹名。9.根据权利要求7所述的方法，根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，还包括：所述目标操作的操作类型为目录复制类型时，复制所述至少一个对象对应的第一子对象；所述目标操作的操作类型为目录删除类型时，删除所述至少一个对象对应的所述第一子对象。10.一种数据处理系统，所述系统包括：客户端，用于确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称；服务端，用于对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象；将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。11.一种数据处理系统，所述系统包括：客户端，用于确定待读取的目标对象，其中，所述目标对象包含文件数据及目录名称；服务端，用于对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；读取存储空间与所述唯一标识符关联的所述文件数据。12.一种数据处理系统，所述系统包括：客户端，用于确定需进行操作的目标目录；服务端，用于基于所述目标目录，确定至少一个对象对应的第一子对象；根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，即完成对所述目标目录的操作。13.一种电子设备，包括存储器及处理器；其中，所述存储器，用于存储程序；所述处理器，与所述存储器耦合，用于执行所述存储器中存储的所述程序，以用于实现上述权利要求1至5中任一项所述的方法；或上述权利要求6所述的方法；或上述权利要求7至9中任一项所述的方法。
说明书desc
技术领域本申请涉及计算机技术领域，尤其涉及数据处理方法、系统及设备。背景技术随着大数据应用需求的发展，对数据的存储需求日益多样化。为此也衍生出多种多样的存储方式，比如，块存储、文件存储、对象存储等等。对象存储作为一种新兴存储方式，同时具有高速直接访问磁盘和分布式共享的特点。能够很好的满足大多数据对象的存储需求。然而，在一些场景当中，利用某些计算框架去实现一些大型计算任务的时候，计算框架需要频繁使用文件系统的目录相关语义，然而对象存储本身并不支持目录结构相关操作，比如无法实现目录移动相关操作。在现有技术中，采用通过客户端模拟目录的方式来满足对称存储方式中基于目录语义进行相应操作的需求，但是这种方式仅具有目录形态，无法真正实现目录得到功能，在基于目录语义进行相关目录操作的时候，操作过程繁琐，费时费力。发明内容为解决或改善现有技术中存在的问题，本申请各实施例提供了数据处理方法、系统及设备。第一方面，在本申请的一个实施例中，提供了一种数据处理方法。该方法包括：确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称；对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象；将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。第二方面，在本申请的一个实施例中，提供了另一种数据处理方法。该方法包括：确定待读取的目标对象，其中，所述目标对象包含文件数据及目录名称；对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；读取存储空间与所述唯一标识符关联的所述文件数据。第三方面，在本申请的一个实施例中，提供了再一种数据处理方法。该方法包括：确定需进行操作的目标目录；基于所述目标目录，确定至少一个对象对应的第一子对象；根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，即完成对所述目标目录的操作。第四方面，在本申请的一个实施例中，提供了一种数据处理系统。所述系统包括：客户端，用于确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称；服务端，用于对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象；将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。第五方面，在本申请的一个实施例中，提供了另一种数据处理系统。所述系统包括：客户端，用于确定待读取的目标对象，其中，所述目标对象包含文件数据及目录名称；服务端，用于对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；读取存储空间与所述唯一标识符关联的所述文件数据。第六方面，在本申请的一个实施例中，提供了再一种数据处理系统。所述系统包括：客户端，用于确定需进行操作的目标目录；服务端，用于基于所述目标目录，确定至少一个对象对应的第一子对象；根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，即完成对所述目标目录的操作。第七方面，在本申请的一个实施例中，提供了一种电子设备，包括存储器及处理器；其中，所述存储器，用于存储程序；所述处理器，与所述存储器耦合，用于执行所述存储器中存储的所述程序，以用于实现第一方面所述的方法或第二方面所述的方法或第三方面所述的方法。本申请实施例提供的技术方案，在进行对象存储的时候，为了满足一下计算框架对存储目录的需求，对对象存储方式进行优化，具体包括：确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称；对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象；将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。采用上述技术方案，在进行对象存储的时候，对目标对象的目录名称进行拆分处理，得到包含有至少一个层级文件夹名的第二子对象和包含文件名的第一子对象。第二子对象中包含有表示目录层级关系的至少一级文件夹名，在针对某个对象的目录进行修改的时候，只需要修改第二子对象就可以了，能够降低针对对象的目录进行操作的复杂程度，提升对象存储方式中目录维护效率。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作一简单地介绍，显而易见地，下面描述中的附图是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本申请实施例提供的数据处理方法的流程示意图；图2为本申请实施例提供的一种对象存储目录结构示意图；图3为本申请实施例举例说明目标对象写入存储空间的流程示意图；图4为本申请实施例提供的另一种数据处理方法的流程示意图；图5为本申请实施例提供的一种对象读取过程的流程示意图；图6为本申请实施例提供的再一种数据处理方法的流程示意图；图7为本申请实施例提供的一种数据处理装置的结构示意图；图8为本申请实施例提供的一种客户端设备或服务端设备的结构示意图；图9为本申请实施例提供的另一种数据处理装置的结构示意图；图10为本申请实施例提供的另一种客户端设备或服务端设备的结构示意图；图11为本申请实施例提供的再一种数据处理装置的结构示意图；图12为本申请实施例提供的再一种客户端设备或服务端设备的结构示意图。具体实施方式现有存储方式越来越多样化，而对象存储作为其中一个比较热门的技术，可以应用于各种类型文件的存储。和传统的文件系统不同，对象没有文件目录层级结构的关系。对象由元信息，用户数据和文件名组成，并且由存储空间内部唯一的Key来标识。对象元信息是一组键值对，表示了对象的一些属性，比如最后修改时间、大小等信息，同时用户也可以在元信息中存储一些自定义的信息。然而，在一些应用场景中，进行大型计算任务处理的会用到很多目录语义。但是对象存储并不支持目录语义相关功能，通常会采用客户端模拟的方式来实现一些目录功能。虽然通过客户端模拟的方式可以实现一些类似目录语义的效果，然而这种模拟效果只有目录形态确不具有目录功能，在实际操作过程中完成目录任务所消耗时间比较长。因此，需要一种在对象存储场景中，能够实现目录语义相关功能的技术方案。为了使本技术领域的人员更好地理解本申请方案，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述。在本申请的说明书、权利要求书及上述附图中描述的一些流程中，包含了按照特定顺序出现的多个操作，这些操作可以不按照其在本文中出现的顺序来执行或并行执行。操作的序号如101、102等，仅仅是用于区分各个不同的操作，序号本身不代表任何的执行顺序。另外，这些流程可以包括更多或更少的操作，并且这些操作可以按顺序执行或并行执行。需要说明的是，本文中的“第一”、“第二”等描述，是用于区分不同的消息、设备、模块等，不代表先后顺序，也不限定“第一”和“第二”是不同的类型。此外，下文描述的实施例仅仅是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。下面将通过具体实施例进行说明。如图1为本申请实施例提供的数据处理方法的流程示意图。在实际应用场景中，该方法的执行主体可以是客户端设备和/或服务端设备和/或由客户端设备与服务端设备所组成的系统。该方法具体包括如下步骤：101：确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称。102：对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名。103：获取与所述第一名称关联的唯一标识符。104：基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象。105：将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。这里所说的目标对象，是将要进行对象存储的任一类型文件。该目标对象中包含有元信息、用户数据和目录名称。在本申请实施例中，将元信息、用户数据统称为文件数据。此外，在目录名称中包含有至少一级文件夹名和文件名。在目录名称中，可以根据目录层级需要设定至少一个文件夹名，而且同一个文件夹中还可能同时包含有至少一个文件名。比如，可以设定目录名称为/dir1/dir2/dir3/file1、/dir1/dir2/dir3/file2，或者/dir1/dir2/ file1。其中，这里的/dir1/dir2/dir3或/dir1/dir2可以称为包含多级文件夹名，每个dir1、dir2、dir3可以理解为一级文件夹名。file1、file2可以理解为文件名。需要说明的是，在为目标对象对应的目录名称命名的时候，需要考虑到后续该目标对象对应的第二子对象或文件数据所对应的目录层级关系；比如，需要将文件数据放置在第四层级文件夹中，那么就需要在命名的时候按照目录层级关系和文件夹名命名需求确定目录名称。在对目录名称进行拆分的时候，可以根据特定标识符进行拆分。比如，假设目录名称为/dir1/dir2/dir3/file1，要对其进行文件名与文件夹名的拆分，那么可以从目录名称最右侧开始查找到第一个“/”，基于此对目录名称进行拆分。拆分后，得到第一名称/dir1/dir2/dir3和第二名称file1。这里的第一名称/dir1/dir2/dir3可以不再进一步拆分，作为多级文件夹名整体使用。在实际应用中，为了方便对对象目录的操作，需要对所有当前已存储或者待存储的目标对象中文件名对应的目录名称拆分为包含至少一级文件夹名的第一名称和包含文件名的第二名称。每个目标对象的目录名称中只有一个文件名，通过上述方式对目录名称进行拆分后能够方便后续基于目录对目标对象实现快速移动、查询、删除等目录操作。需要说明的是，在对目标名称进行拆分的时候，可以由客户端对目标名称进行拆分，也可以由服务端对目标名称进行拆分。这里所说的唯一标识符可以是通用唯一识别码等具有唯一标记作用的编码，通过该唯一标识符可以区分不同的对象。唯一标识符可以是采用某种算法计算生成的唯一标识符，也可以基于目标对象的属性信息综合计算得到的。这里不做具体限定，凡是能够起到唯一标记作用的标识符都可以作为本申请的唯一标识符。在确定唯一标识符之后，可以进一步生成用于表示目标对象的第一子对象和第二子对象。其中，第一子对象由唯一标识符、第二名称以及文件数据生成的键值对，第二子对象是由第一名称和唯一标识符生成的键值对。举例来说，如图2为本申请实施例提供的一种对象存储目录结构示意图。如图2所示，假设拆分得到的第一名称为/dir1/dir2/dir3，第二名称为file1，对应的，唯一标识符为uuid3，文件数据为file1value。所生成的第一子对象为uuid3/file-file1value，所生成的第二子对象为/dir1/dir2/dir3-uuid3。若同一个第一名称对应多个不同的第二名称，比如，分别为file1、file2、file3、file4；对应的，得到的第二子对象只有一个，就是/dir1/dir2/dir3-uuid3；而有4个不同的第一子对象，包括：uuid3/file1-file1value、uuid3/file2-file2value、uuid3/file3-file3value、uuid3/file4-file4value。可以表示为在同一目录中同时包含有4个第一子对象。在通过上述方式得到第一子对象和第二子对象之后，可以作为目标对象写入存储空间中。为了便于理解，下面以目标对象写入存储空间为例进行具体举例说明。如图3为本申请实施例举例说明目标对象写入存储空间的流程示意图。从图3中可以看到，包含拆、查、写三步。具体如下：假设目标对象的目录名称为/dir1/dir2/dir3/filename。通过对目录名称的识别，查找到从右向左数第一个“/”。基于这个位置的“/”进行拆分，得到两个用于生成子对象的名称。第一子对象为Dirobject，表示为具有键值对关系的/dir-uuid；第二子对象为BaseObject，表示为具有键值对关系的uuid/filename-filevalue，这里的filevalue表示文件数据。通过上述拆分，得到了子对象的部分内容，/dir1/dir2/dir3和filename，还需要继续确定uuid。在得到第一名称/dir1/dir2/dir3之后，进一步查询当前是否已经存储有对应的DirObject，如果存在，则直接从内存中获取到该DirObject的uuid，进而生成第一子对象和第二子对象。如果不存在，则需要生成该uuid，进而将新生成的uuid写入到DirObject的值，以及利用新生成的uuid、filename、filevalue拼写生成BaseObject。需要说明的是，在生成uuid的时候，即便同一第一名称对应多个第二名称，所得到的uuid只有一个；这里所说的第一名称是文件名以前的所有文件夹名所构成的名称。在通过上述步骤得到第二子对象DirObject和第一子对象BaseObject，将这两个子对象作为目标对象存入存储空间。当需要针对某个文件的目录进行移动、查询、删除操作的时候，可以快速确定包含有文件名的第一子对象确定对应的表示目录关系的第二子对象，并对包含多个层级文件夹的第二子对象进行目录操作，而不需要将每个文件夹层级分别作为独立对象操作，能够有效提升目录操作效率。在本申请一个或者多个实施例中，获取任务的任务名称。将所述任务名称作为所述唯一标识符的前缀，以便于在所述任务结束后，将带有所述任务名称前缀的对象删除。在一些应用场景中，用户为了完成某项特定任务，这里第一子对象BaseObject 客户端可以根据特定的"自建"文件系统用途，在唯一标识符uuid前加特定前缀，方便后续任务结束后简便快速地进行对象的删除工作。例如，在任务A 的所有第二子对象BaseObject的唯一标识符uuid前面加taskA/, 任务结束之后把目录及taskA/ 前缀的Object 一次清除。在本申请技术方案中，对目标对象的目录名称进行拆分，得到用于表示目录层级关系的第二子对象以及包含有文件数据的第一子对象，第一子对象与第二子对象之间通过唯一标识符进行关联，实现目录层级关系与文件数据的分离，当需要对目录进行相关操作的时候，仅对第二子对象中的第一名称进行操作就可以了，不需要对唯一标识符和第一子对象做任何操作。如图4为本申请实施例提供的另一种数据处理方法的流程示意图。在实际应用场景中，该方法的执行主体可以是客户端设备和/或服务端设备。该方法具体包括如下步骤：401：确定待读取的目标对象，其中，所述目标对象包含文件数据及目录名称。402：对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名。403：获取与所述第一名称关联的唯一标识符。404：读取存储空间与所述唯一标识符关联的所述文件数据。通过图1对应的实施例将目标对象写入存储空间之后，用户可以根据需要对其中的对象进行读取操作。假设，通过客户端获取到了某个目标对象，从该目标对象的目录名称中查找拆分标识符“/”，将目录名称右侧向左数第一个“/”作为拆分标识符，并基于此拆分得到第一名称/dir1/dir2/dir3和第二名称/file1。其中，第一名称中包含有至少一级文件夹名，表示目标对象所具有的目录层级关系。需要说明的是，上述基于拆分标识符“/”进行拆分的方式是基于目录名称的命名规则确定的，在实际应用中可以根据目录名称的命名规则进行适应性调整。比如，目录命名规则为/文件夹名1/文件夹名2/文件夹名3/文件名1/任务标识，则此时的拆分规则可以设定为从目录名称中查找拆分标识符“/”，将目录名称右侧向左数第一个和第二个“/”作为拆分标识符，进而只留下至少一级文件夹名作为第一名称和文件名作为第二名称。如图5为本申请实施例提供的一种对象读取过程的流程示意图。从图5中可以看到，对目标对象的目录名称进行拆分得到第一名称dirname和第二名称Basename，进而基于该第一名称查询当前是否已存储有对应的DirObject。若已经存储有该DirObject，则读取出对应的uuid。查询到uuid之后，基于该uuid和Basename准确的从存储空间中读取BaseObject。如果查询后发现没有存储该DirObject，则会提示错误并退出。当用户有对某个对象存储的读取需求的时候，可以利用拆分得到的第一名称快速查找到被存储对象所对应的文件夹层级，进而基于唯一标识符快速读取目标对象的文件数据。如图6为本申请实施例提供的再一种数据处理方法的流程示意图。在实际应用场景中，该方法的执行主体可以是客户端设备和/或服务端设备。该方法具体包括如下步骤：601：确定需进行操作的目标目录。602：基于所述目标目录，确定至少一个对象对应的第一子对象。603：根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，即完成对所述目标目录的操作。需要说明的是，这里所说的目标目录为用于表示存储在存储空间中的对象的目录。这个目标目录包括第一子对象和第二子对象。这里所说的第一子对象包括第一名称和唯一标识符；其中，第一名称为包含至少一级文件夹名。这里所说的第二子对象包括第二名称、唯一标识符和文件数据；其中，第二名称为文件名。在本申请中，通过第一名称包含的文件夹名层级关系来表示第二子对象存储的目录层级关系。换言之，通过第一子对象来表示第二子对象的目录关系。当要对第二子对象的目录层级关系进行操作的时候，只需要对第一子对象中的多级文件夹名进行相应操作处理。这里所说的目标操作的操作类型包括：移动类型操作、复制类型操作、删除类型操作中至少一种。在实际应用中，可能会出现多个对象对应一个第一子对象的情况。比如，有3个对象，分别为/dir1/dir2/dir3/file1、/dir1/dir2/dir3/file2、/dir1/dir2/dir3/file3这三个，通过对对象中目录名称的拆分处理后得到的第一子对象为/dir1/dir2/dir3-uuid，对应的多个第二子对象分别为uuid/file1-file1value、uuid/file2-file2value、uuid/file3-file3value。当需要对多个不同对象或者多个不同的第二子对象的目录进行操作时，由于都对应同一个第一子对象，因此，只需要基于第一子对象进行一次目录操作就可以实现对多个对象或多个第二子对象的目录操作。为了便于理解，下面对各种目标操作的操作类型进行举例说明。所述目标操作的操作类型为移动类型时，获取至少一个对象对应的第一子对象包含的第一名称；其中，所述第一名称包含至少一级文件夹名。响应于用户针对至少一个对象的文件夹名进行的拷贝操作，确定移动目标文件夹名。响应于用户针对至少一个对象的文件夹名的粘贴操作，将所述第一子对象包含的第一名称修改为所述移动目标文件夹名。在对第一子对象的目录进行移动操作的时候，由于对象存储环境中不支持目录移动相关的目录语义，因此，需要对目录移动操作进行分解，分解为复制类型操作和删除类型操作。具体来说，在确定对第一名称进行移动之后，首先对至少一个对象的第一名称进行拷贝操作，然后进行粘贴，在粘贴的时候对第一名称进行修改，将第一名称修改为移动目标文件夹名。在完成复制操作之后，会对至少一个对象的第一名称所在第一子对象进行删除，这样就不会出现一个对象对应多个用于表示目录层级关系的子对象的情况，基于新的移动目标文件夹名实现了对目录的移动操作。在整个目录移动类型操作中，不需要对文件数据进行任何修改，也不需要对第一子对象中的值进行任何修改，只需要基于第一名称的拷贝、删除操作就能够实现移动的效果。在目标操作的操作类型为目录复制类型时，复制所述至少一个对象对应的第一子对象。在需要对目录进行复制操作的时候，可以对第一子对象中的第一名称进行复制，不需要对第一子对象中的值进行修改。所述目标操作的操作类型为目录删除类型时，删除所述至少一个对象对应的所述第一子对象。在需要对目录进行删除操作的时候，可以对第一子对象整体进行删除。在本方案中，第一子对象与第二子对象之间通过唯一标识符建立对应关系，从而实现一个第一子对象可能同时对应多个第二子对象。不同于现有的客户端模拟目录方式中第一子对象与第二子对象一对一关系，或者是第一子对象与第二子对象是多对一关系，本申请中第一子对象与第二子对象是一对多关系。因此，当需要对对应于同一第一子对象的多个第二子对象进行目录操作的时候，只需要操作一个第一子对象就能够实现所需要的目录操作类型。基于同样的思路，本申请实施例还提供一种数据处理装置。如图7为本申请实施例提供的一种数据处理装置的结构示意图。该装置可以应用于客户端、服务端或是应用于客户端与服务端所组成的系统当中。该数据处理装置包括：确定模块71，用于确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称。拆分模块72，用于对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名。获取模块73，用于获取与所述第一名称关联的唯一标识符。生成模块74，用于基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象。写入模块75，用于将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。获取模块73，还用于查询内存中是否包含有所述第一名称的第二子对象。若包含，根据所述第二子对象，获取所述唯一标识符。若不包含，则为所述第一名称生成所述唯一标识符。生成模块74，还用于将所述第一名称作为第二键值对的键，所述唯一标识符作为所述第二键值对的值。所述第二子对象即所述第二键值对。生成模块74，还用于根据所述唯一标识符、所述第二名称，生成第一键值对的键。所述文件数据作为所述第一键值对的值。所述第一子对象即所述第一键值对。获取模块73，用于获取任务的任务名称。将所述任务名称作为所述唯一标识符的前缀，以便于在所述任务结束后，将带有所述任务名称前缀的对象删除。本申请一个实施例还提供一种电子设备。如图8为本申请实施例提供的一种客户端设备或服务端设备的结构示意图。该电子设备包括存储器801、处理器802及通信组件803；其中，所述存储器801，用于存储程序；所述处理器802，与所述存储器耦合，用于执行所述存储器中存储的所述程序，以用于：确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称；对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象；将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。上述存储器801可被配置为存储其它各种数据以支持在电子设备上的操作。这些数据的示例包括用于在电子设备上操作的任何应用程序或方法的指令。存储器可以由任何类型的易失性或非易失性存储设备或者它们的组合实现，如静态随机存取存储器，电可擦除可编程只读存储器，可擦除可编程只读存储器，可编程只读存储器，只读存储器，磁存储器，快闪存储器，磁盘或光盘。进一步地，本实施例中的所述处理器802可以具体是：可编程交换处理芯片，该可编程交换处理芯片中配置有数据复制引擎，能对接收到的数据进行复制。上述处理器802在执行存储器中的程序时，除了上面的功能之外，还可实现其它功能，具体可参见前面各实施例的描述。进一步，如图8所示，电子设备还包括：电源组件804等其它组件。基于同样的思路，本申请实施例还提供另一种数据处理装置。如图9为本申请实施例提供的另一种数据处理装置的结构示意图。该数据处理装置包括：确定模块91，用于确定待读取的目标对象，其中，所述目标对象包含文件数据及目录名称。拆分模块92，用于对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名。获取模块93，用于获取与所述第一名称关联的唯一标识符。读取模块94，用于读取存储空间与所述唯一标识符关联的所述文件数据。本申请一个实施例还另提供一种电子设备。如图10为本申请实施例提供的一种客户端设备或服务端设备的结构示意图。该电子设备包括存储器1001、处理器1002及通信组件1003；其中，所述存储器1001，用于存储程序；所述处理器1002，与所述存储器耦合，用于执行所述存储器中存储的所述程序，以用于：确定待读取的目标对象，其中，所述目标对象包含文件数据及目录名称；对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；读取存储空间与所述唯一标识符关联的所述文件数据。上述存储器1001可被配置为存储其它各种数据以支持在电子设备上的操作。这些数据的示例包括用于在电子设备上操作的任何应用程序或方法的指令。存储器可以由任何类型的易失性或非易失性存储设备或者它们的组合实现，如静态随机存取存储器，电可擦除可编程只读存储器，可擦除可编程只读存储器，可编程只读存储器，只读存储器，磁存储器，快闪存储器，磁盘或光盘。进一步地，本实施例中的所述处理器1002可以具体是：可编程交换处理芯片，该可编程交换处理芯片中配置有数据复制引擎，能对接收到的数据进行复制。上述处理器1002在执行存储器中的程序时，除了上面的功能之外，还可实现其它功能，具体可参见前面各实施例的描述。进一步，如图10所示，电子设备还包括：电源组件1004等其它组件。基于同样的思路，本申请实施例还提供再一种数据处理装置。如图11为本申请实施例提供的再一种数据处理装置的结构示意图。该数据处理装置包括：第一确定模块1101，用于确定需进行操作的目标目录。第二确定模块1102还用于基于所述目标目录，确定至少一个对象对应的第一子对象。处理模块1103，用于根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，即完成对所述目标目录的操作。本申请一个实施例还提供一种电子设备。如图12为本申请实施例提供的再一种客户端设备或服务端设备的结构示意图。该电子设备包括存储器1201、处理器1202及通信组件1203；其中，所述存储器1201，用于存储程序；所述处理器1202，与所述存储器耦合，用于执行所述存储器中存储的所述程序，以用于：确定需进行操作的目标目录；基于所述目标目录，确定至少一个对象对应的第一子对象；根据所述目标操作的操作类型，对所述至少一个对象对应的第一子对象进行处理，即完成对所述目标目录的操作。上述存储器1201可被配置为存储其它各种数据以支持在电子设备上的操作。这些数据的示例包括用于在电子设备上操作的任何应用程序或方法的指令。存储器可以由任何类型的易失性或非易失性存储设备或者它们的组合实现，如静态随机存取存储器，电可擦除可编程只读存储器，可擦除可编程只读存储器，可编程只读存储器，只读存储器，磁存储器，快闪存储器，磁盘或光盘。进一步地，本实施例中的所述处理器1202可以具体是：可编程交换处理芯片，该可编程交换处理芯片中配置有数据复制引擎，能对接收到的数据进行复制。上述处理器1202在执行存储器中的程序时，除了上面的功能之外，还可实现其它功能，具体可参见前面各实施例的描述。进一步，如图12所示，电子设备还包括：电源组件1204等其它组件。基于上述实施例，确定待写入的目标对象，其中，所述目标对象包含文件数据及目录名称；对所述目录名称进行拆分，得到第一名称及第二名称；其中，所述第一名称包含有至少一级文件夹名，所述第二名称包含有文件名；获取与所述第一名称关联的唯一标识符；基于所述唯一标识符、所述第二名称及所述文件数据，得到第一子对象；将所述第一子对象及第二子对象作为所述目标对象写入存储空间，其中，所述第二子对象是由所述第一名称及所述唯一标识符确定的。采用上述技术方案，在进行对象存储的时候，对目标对象的目录名称进行拆分处理，得到包含有至少一个层级文件夹名的第二子对象和包含文件名的第一子对象，第二子对象中包含有表示目录层级关系的至少一级文件夹名，在针对某个对象的目录进行修改的时候，只需要修改第二子对象就可以了，能够降低针对对象的目录进行操作的复杂程度，提升对象存储方式中目录维护效率。以上所描述的装置实施例仅仅是示意性的，其中所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部模块来实现本实施例方案的目的。本领域普通技术人员在不付出创造性的劳动的情况下，即可以理解并实施。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到各实施方式可借助软件加必需的通用硬件平台的方式来实现，当然也可以通过硬件。基于这样的理解，上述技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品可以存储在计算机可读存储介质中，如ROM/RAM、磁碟、光盘等，包括若干指令用以使得一台计算机设备执行各个实施例或者实施例的某些部分所述的方法。最后应说明的是：以上实施例仅用以说明本申请的技术方案，而非对其限制；尽管参照前述实施例对本申请进行了详细的说明，本领域的普通技术人员应当理解：其依然可以对前述各实施例所记载的技术方案进行修改，或者对其中部分技术特征进行等同替换；而这些修改或者替换，并不使相应技术方案的本质脱离本申请各实施例技术方案的精神和范围。
