标题title
一种芯片设计前端质量行为的执行方法、装置及设备
摘要abst
本发明公开了一种芯片设计前端质量行为的执行方法、装置及设备，包括：构建芯片前端质量模型，其中，芯片前端质量模型中包括拓扑结构模型、工作流模型和调度模型；当确定接收到芯片质量行为的触发指令时，对前端质量模型进行解析获取调度配置信息；通过调度器对调度配置信息进行并发调度以自动执行质量行为。通过预先构建芯片质量模型，并根据对芯片质量模型的解析结果来实现对质量行为的自动执行，从而极大地降低SoC前端质量行为的沟通和执行成本。
权利要求书clms
1.一种芯片设计前端质量行为的执行方法，其特征在于，包括：构建芯片前端质量模型，其中，所述芯片前端质量模型中包括拓扑结构模型、工作流模型和调度模型；当确定接收到芯片质量行为的触发指令时，对所述前端质量模型进行解析获取调度配置信息；通过调度器对所述调度配置信息进行并发调度以自动执行质量行为。2.根据权利要求1所述的方法，其特征在于，所述拓扑结构模型中包括芯片的结构以及结构的属性信息，其中，所述结构包括顶层模块和子系统，所述结构的属性信息包括拓扑层次和结构质量等级；所述工作流模型中包括与芯片质量行为关联的工作流以及工作流的属性信息，其中，所述工作流的属性信息包括工作流名称、工具链、依赖条件、参数定义、质量标准和工作流质量等级；所述调度模型中包括子系统优先级、工作流优先级、工作流并发策略、子系统依赖策略和子系统影响范围策略。3.根据权利要求2所述的方法，其特征在于，所述对所述前端质量模型进行解析获取调度配置信息，包括：对所述前端质量模型进行解析获取所述拓扑结构模型、所述工作流模型和所述调度模型；根据所述拓扑结构模型和所述工作流模型分别确定子系统数量和工作流数量，并根据所述子系统数量和所述工作流数量的乘积结果确定调度配置信息的数量；根据所述拓扑结构模型、所述工作流模型和所述调度模型确定各调度配置信息的参数；根据所述调度配置信息的数量和各所述调度配置信息的参数构建出全部所述调度配置信息。4.根据权利要求3所述的方法，其特征在于，所述根据所述拓扑结构模型、所述工作流模型和所述调度模型确定各调度配置信息的参数，包括：根据所述拓扑结构模型确定每个调度配置信息所匹配的拓扑结构参数，其中，所述匹配的拓扑结构参数中包括匹配的子系统，以及所述匹配的子系统的属性信息；根据所述工作流模型确定每个调度配置信息所匹配的工作流参数，其中，所述工作流参数中包括匹配的工作流，以及所述匹配的工作流的属性信息；根据所述调度模型确定每个调度配置信息所匹配的调度参数，其中，所述调度参数中包括所述匹配的子系统的优先级、所述匹配的工作流的优先级、所述匹配的工作流的资源并发占用数量、所述匹配的子系统的依赖子系统以及影响范围；根据所述匹配的拓扑结构参数、所述匹配的工作流参数和所述匹配的调度参数确定各所述调度配置信息的参数。5.根据权利要求4所述的方法，其特征在于，所述通过调度器对所述调度配置信息进行并发调度以自动执行质量行为，包括：通过调度器将各所述调度配置信息作为任务进行同步触发，其中，各所述任务分别与所述调度配置信息匹配对应；根据所述调度配置信息从已经触发的任务中确定出目标任务，通过所述调度器执行所述目标任务以自动执行质量行为。6.根据权利要求5所述的方法，其特征在于，所述根据所述调度配置信息从已经触发的任务中确定出目标任务，包括：确定已触发的任务所匹配的调度配置信息；根据所述匹配的调度配置信息确定所述已触发的任务不满足指定条件时，则将所述已触发的任务作为所述目标任务；其中，所述指定条件包括存在依赖的任务且依赖的任务未完成，或者存在依赖的任务且依赖的任务已完成但执行所需资源不足，或者不存在依赖的任务但执行所需资源不足。7.根据权利要求5所述的方法，其特征在于，所述方法还包括：在通过所述调度器执行所述目标任务时，当确定存在执行失败的目标任务时获取所述执行失败的目标任务的质量等级；当确定所述质量等级为最高等级时，获取所述执行失败的目标任务的影响范围；当确定所述影响范围为子系统内部时，则筛选中与所述执行失败的目标任务属于同一子系统内的目标任务，并中止所筛选出的目标任务的执行过程；当确定所述影响范围为芯片整体时，则中止全部所述目标任务的执行过程。8.根据权利要求2所述的方法，其特征在于，所述通过调度器对所述调度配置信息进行并发调度以自动执行质量行为之后，还包括：对各子系统的质量行为执行结果进行汇总获取各子系统的质量结果；对所述各子系统的质量结果进行汇总获取芯片总体的质量结果。9.一种芯片设计前端质量行为的执行装置，其特征在于，包括：前端质量模型构建模块，用于构建芯片前端质量模型，其中，所述芯片前端质量模型中包括拓扑结构模型、工作流模型和调度模型；调度配置信息获取模块，用于当确定接收到芯片质量行为的触发指令时，对所述前端质量模型进行解析获取调度配置信息；质量行为自动执行模块，用于通过调度器对所述调度配置信息进行并发调度以自动执行质量行为。10.一种计算机设备，其特征在于，所述设备包括：一个或多个处理器；存储装置，用于存储一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行，使得所述一个或多个处理器实现如权利要求1-8中任一所述的方法。11.一种计算机可执行指令的存储介质，其上存储有计算机程序，其特征在于，该程序被处理器执行时实现如权利要求1-8中任一项所述方法。
说明书desc
技术领域本发明涉及芯片技术领域，尤其涉及一种芯片设计前端质量行为的执行方法、装置及设备。背景技术目前芯片设计例如系统级芯片SOC设计趋于大型化复杂化，因而SOC芯片所需的质量环节也越来越多，通常SOC芯片设计前端质量涉及到多个环节。目前大型SOC芯片一般由10多个乃至更多的子系统组成，从项目质量收敛的角度出发，需要执行分层的质量策略，因而除了SOC顶层以外，各子系统也需要执行上述质量环节。但是在执行上述质量环节的过程中，通常需要多个团队的协作执行，各环节依赖关系复杂，质量行为执行成本高，并且大量质量行为集中在子系统层面，各子系统间的质量行为沟通不足，从而造成SOC整体质量管理滞后。发明内容本发明提供了一种芯片设计前端质量行为的执行方法、装置及设备，以实现对芯片设计前端高效低成本的质量行为执行。根据本发明的一方面，提供了一种芯片设计前端质量行为的执行方法，包括：构建芯片前端质量模型，其中，所述芯片前端质量模型中包括拓扑结构模型、工作流模型和调度模型；当确定接收到芯片质量行为的触发指令时，对所述前端质量模型进行解析获取调度配置信息；通过调度器对所述调度配置信息进行并发调度以自动执行质量行为。根据本发明的另一方面，提供了一种芯片设计前端质量行为的执行装置，包括：前端质量模型构建模块，用于构建芯片前端质量模型，其中，所述芯片前端质量模型中包括拓扑结构模型、工作流模型和调度模型；调度配置信息获取模块，用于当确定接收到芯片质量行为的触发指令时，对所述前端质量模型进行解析获取调度配置信息；质量行为自动执行模块，用于通过调度器对所述调度配置信息进行并发调度以自动执行质量行为。根据本发明的另一方面，提供了一种计算机设备，其特征在于，所述设备包括：一个或多个处理器；存储装置，用于存储一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行，使得所述一个或多个处理器执行本发明任一实施例所述的方法。根据本发明的另一方面，提供了一种计算机可执行指令的存储介质，其上存储有计算机程序，该程序被处理器执行时实现如本发明实施例中任一所述的方法。本发明实施例的技术方案，通过预先构建芯片质量模型，并根据对芯片质量模型的解析结果来实现对质量行为的自动执行，从而极大地降低SoC前端质量行为的沟通和执行成本。应当理解，本部分所描述的内容并非旨在标识本发明的实施例的关键或重要特征，也不用于限制本发明的范围。本发明的其它特征将通过以下的说明书而变得容易理解。附图说明为了更清楚地说明本发明实施例中的技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1是根据本发明实施例一提供的一种芯片设计前端质量行为的执行方法的流程图；图2是根据本发明实施例一提供的芯片前端质量模型的结构示意图；图3是根据本发明实施例一提供的调度器的调度原理示意图；图4是根据本发明实施例二提供的一种芯片设计前端质量行为的执行方法的流程图；图5是根据本发明实施例三提供的一种芯片设计前端质量行为的执行装置的结构示意图；图6为本发明实施例四提供的一种电子设备的结构框图。具体实施方式为了使本技术领域的人员更好地理解本发明方案，下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本发明一部分的实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都应当属于本发明保护的范围。需要说明的是，本发明的说明书和权利要求书及上述附图中的术语“第一”、“第二”等是用于区别类似的对象，而不必用于描述特定的顺序或先后次序。应该理解这样使用的数据在适当情况下可以互换，以便这里描述的本发明的实施例能够以除了在这里图示或描述的那些以外的顺序实施。此外，“包括”和“具有”以及他们的任何变形，意图在于覆盖不排他的包含，例如，包含了一系列步骤或单元的过程、方法、装置、产品或设备不必限于清楚地列出的那些步骤或单元，而是可包括没有清楚地列出的或对于这些过程、方法、产品或设备固有的其它步骤或单元。实施例一图1为本发明实施例一提供了一种芯片设计前端质量行为的执行方法的流程图，本实施例可适用于对芯片设计前端自动执行质量行为的情况，该方法可以由一种芯片设计前端质量行为的执行装置来执行，该芯片设计前端质量行为的执行装置可以采用硬件和/或软件的形式实现，该芯片设计前端质量行为的执行装置可集成配置于电子设备中。如图1所示，该方法包括：步骤S101，构建芯片前端质量模型。其中，本实施方式中会预先构建出芯片前端质量模型，如图2所示为所构建的芯片前端质量模型的结构示意图，芯片前端质量模型中包括拓扑结构模型、工作流模型和调度模型。拓扑结构模型中包括芯片的结构以及结构的属性信息，其中，结构包括顶层模块和子系统，结构的属性信息包括拓扑层次和结构质量等级；工作流模型中包括与芯片质量行为关联的工作流以及工作流的属性信息，其中，工作流的属性信息包括工作流名称、工具链、依赖条件、参数定义、质量标准和工作流质量等级；调度模型中包括子系统优先级、工作流优先级、工作流并发策略、子系统依赖策略和子系统影响范围策略。具体的说，拓扑结构模型主要是对SOC芯片的结构进行定义，通过拓扑结构模型可以定义芯片所包含顶层模块以及子系统的数量，而针对每个结构都有对应的结构的属性信息进行说明，在结构的属性信息中包括拓扑层次和结构质量等级，其中，拓扑层次主要是用于表明各子系统与顶层模块之间，以及子系统之间的拓扑关系，例如，在子系统1的拓扑层次中说明了子系统1所相邻的上层结构，上次结构具体可以是子系统2或者顶层模块，同时还说明了子系统1所相邻的下层结构，下层结构可以是子系统3，当然，本实施方式中仅是举例说明，而并不对各结构的拓扑层次的具体内容进行限定。另外，在结构的属性信息中还包括质量等级，而此处的质量等级主要指的是结构质量等级，而根据项目不同阶段的质量要求来划分和定义，可以有以下两种方式：功能覆盖等级方式，在项目早期阶段，有些子系统没有开发完成或者对整体SoC质量影响很小，可以设置为可选，其他子系统则可以设置为必选；优先级等级方式：对各个子系统进行不同的优先级设计，可以用于在项目里对其进行不同优先级的调度、资源分配，或是用于在最终评估整体质量结果时，作为质量决策以及对各个子系统进行质量打分加权的依据。当然，本实施方式中仅是举例说明，而并不对结构质量等级的具体划分和定义方式进行限定。其中，工作流模型主要是对SOC芯片质量行为所关联的工作流的数量进行定义，并且还会定义各工作流的属性信息，工作流的属性信息包括工作流名称、工具链、依赖条件、参数定义、质量标准和工作流质量等级。工作流的名称可以包括静态代码分析Lint Check、预综合检查、RTL仿真验证、DFT DRC检查、时钟数据同步检查以及逻辑综合Synthesis等，当然，本实施方式中仅是举例说明，而并不对工作流的名称进行限定。工具链指的是工作流所使用的工具版本、路径及系统环境变量配置等信息。依赖条件指的是本工作流所依赖的前置环节，用于项目执行质量行为的时候，根据其前置环节的质量结果，决定是否需要执行本工作流。参数定义通常用于设置工作流的输入参数，可以是一个列表组合，如测试用例集名称等。质量标准用于断言工作流的执行结果是否达标，可以是一个列表组合，如代码覆盖率＞80%等。步骤S102，当确定接收到芯片质量行为的触发指令时，对前端质量模型进行解析获取调度配置信息。可选的，对前端质量模型进行解析获取调度配置信息，包括：对前端质量模型进行解析获取拓扑结构模型、工作流模型和调度模型；根据拓扑结构模型和工作流模型分别确定子系统数量和工作流数量，并根据子系统数量和工作流数量的乘积结果确定调度配置信息的数量；根据拓扑结构模型、工作流模型和调度模型确定各调度配置信息的参数；根据调度配置信息的数量和各调度信息的参数构建出全部调度配置信息。可选的，根据拓扑结构模型、工作流模型和调度模型确定各调度配置信息的参数，包括：根据拓扑结构模型确定每个调度配置信息所匹配的拓扑结构参数，其中，匹配的拓扑结构参数中包括匹配的子系统，以及匹配的子系统的属性信息；根据工作流模型确定每个调度配置信息所匹配的工作流参数，其中，工作流参数中包括匹配的工作流，以及匹配的工作流的属性信息；根据调度模型确定每个调度配置信息所匹配的调度参数，其中，调度参数中包括匹配的子系统的优先级、匹配的工作流的优先级、匹配的工作流的资源并发占用数量、匹配的子系统的依赖子系统以及影响范围；根据匹配的拓扑结构参数、匹配的工作流参数和匹配的调度参数确定各调度配置信息的参数。具体的说，本实施方式中当确定接收到芯片质量行为的触发指令时，例如，代码变更指令时，则会对之前所构建的芯片前端质量模型进行解析以获取调度配置信息。如图2所示，当芯片中涉及到M=10个子系统以及N=5个工作流的情况下，则所生成的调度配置信息的数量为10*5=50个，例如，子系统1下执行工作流A的调度配置信息1，子系统1下执行工作流B的调度配置信息2…子系统10下执行工作流E的调度配置信息50等，当然，本实施方式中仅是举例说明，而并不对所生成的调度配置信息的数量进行限定。另外，通过对拓扑结构模型、工作流模型和调度模型进行解析，分别获取到针对每项调度配置信息的拓扑结构参数、工作流参数以及调度参数，根据所获取的参数确定出各调度配置信息，例如，针对调度配置信息1，参数中包括所匹配的子系统为子系统1，以及子系统1的拓扑层级和结构质量等级等属性信息；所匹配的工作流为工作流A，以及工作流A的工具链、依赖条件和工作流质量等级等属性信；子系统1的优先级、工作流A的优先级、工作流A的资源并发占用数量为2，子系统1所依赖的子系统为子系统2，子系统1的影响范围为芯片整体。当然，本实施方式中仅是举例说明，而并不对调度配置信息的具体参数内容进行限定。步骤S103，通过调度器对调度配置信息进行并发调度以自动执行质量行为。可选的，通过调度器对调度配置信息进行并发调度以自动执行质量行为，包括：通过调度器将各调度配置信息作为任务进行同步触发，其中，各任务分别与调度配置信息匹配对应；根据调度配置信息从已经触发的任务中确定出目标任务，通过调度器执行目标任务以自动执行质量行为。具体的说，本实施方式中在获取到调度配置信息后，会通过调度器将各调度配置信息作为任务进行同步触发，如图3所示为调度器的调度原理示意图，如图所3，各任务task分别与调度配置信息相匹配对应，因此当确定调度配置信息为50个时，相应的所同步触发的任务分别为50个，但是所同步触发的50个任务并不一定都满足执行条件，因此会根据调度配置信息从已经触发的任务中确定出目标任务，并将所确定出的目标任务作为执行任务进行执行。可选的，根据调度配置信息从已经触发的任务中确定出目标任务，包括：确定已触发的任务所匹配的调度配置信息；根据匹配的调度配置信息确定已触发的任务不满足指定条件时，则将已触发的任务作为目标任务；其中，指定条件包括存在依赖的任务且依赖的任务未完成，或者存在依赖的任务且依赖的任务已完成但执行所需资源不足，或者不存在依赖的任务但执行所需资源不足。其中，本申请总体上的调度原则为各子系统并行调度，子系统内部各个任务按依赖关系顺序调度，子系统内部无依赖关系的任务按优先级进行并行调度。因此当存在两个优先级相同的任务时，调度器将对二者进行并发调度；存在一个任务同时依赖于两个不同任务的情况，则该任务需要等待所依赖的任务全部执行完毕时才能得到调度；在系统资源不足的情况下，低优先级任务需要暂停，等待系统有空闲资源后才会被调度。由于每个任务分别标注了所匹配的子系统和所匹配的工作流，因此可以根据工作流和子系统之间的依赖关系确定出任务之间的依赖关系。因此当上述50个任务同时触发后，在下一时刻并不一定会同步执行，例如，针对task1当确定依赖task2，但所依赖的task2目前还未完成的情况下，则task1不会执行，而会作为待执行任务存放到待执行队列中，并且task1在队列中的位置具体可以根据task1的优先级进行确定；针对task1当确定依赖task2，虽然task2 已经完成但是目前资源不足的情况下，task1也不会执行；针对task1当确定不存在依赖的任务但目前资源不足的情况下，task1也不会执行。只有当task1上述情况都不符合情况下，才会将task1作为目标任务执行。需要说明的是，当任务的优先级比较高，只有由于其所依赖的任务未完成造成该任务无法执行的情况下，系统会为该高优先级的任务预留出执行资源，因此当上述task1在进行资源检测时，是需要将该部分预留的资源进行刨除的情况下进行资源充足的判断，例如，系统总体资源为10G，给高优先级任务所预留出的资源为6G ，则需要针对剩余的4G进行判断是否满足task1的执行。可选的，方法还包括：在通过调度器执行目标任务时，当确定存在执行失败的目标任务时获取执行失败的目标任务的质量等级；当确定质量等级为最高等级时，获取执行失败的目标任务的影响范围；当确定影响范围为子系统内部时，则筛选中与执行失败的目标任务属于同一子系统内的目标任务，并中止所筛选出的目标任务的执行过程；当确定影响范围为芯片整体时，则中止全部目标任务的执行过程。具体的说，当对所确定出的目标任务进行执行的过程中，可能会存在执行失败的情况下，例如当确定目标任务为task2、task3、task4和task50，在task1出现故障失败的情况下，会进一步确定task1的质量等级。其中，task1的质量等级是基于所匹配的系统结构质量等级和工作流质量等级所确定的，例如所匹配的子系统1的系统结构质量等级为P1，所匹配的工作流A的工作流质量等级为P0，则将P0作为task1的质量等级，当然，本实施方式中仅是举例说明，而并不对各任务的质量等级的确定方式进行限定，用户可以根据实际需要进行配置。其中，当确定质量等级为P0，即最高等级时，则会确定task1的影响范围，关于影响范围具体可以根据所解析出的调度参数中的匹配的子系统的影响范围进行确定，当确定仅是子系统内部受影响时，则仅需要中断task3的执行，从而task4和 task50不受影响；当确定是芯片整体受影响时则task3、task4和 task50都会中断。本实施方式中通过预先构建芯片质量模型，并根据对芯片质量模型的解析结果来实现对质量行为的自动执行，从而极大地降低SoC前端质量行为的沟通和执行成本。实施例二图4为本发明实施例二提供的芯片设计前端质量行为的执行方法的流程图，在上述实施例的基础上，在通过调度器对调度配置信息进行并发调度以自动执行质量行为之后，还包括对各子系统的质量行为执行结果进行汇总获取各子系统的质量结果，对各子系统的质量结果进行汇总获取芯片总体的质量结果。如图4所示，该方法包括：步骤S201，构建芯片前端质量模型。步骤S202，当确定接收到芯片质量行为的触发指令时，对前端质量模型进行解析获取调度配置信息。可选的，对前端质量模型进行解析获取调度配置信息，包括：对前端质量模型进行解析获取拓扑结构模型、工作流模型和调度模型；根据拓扑结构模型和工作流模型分别确定子系统数量和工作流数量，并根据子系统数量和工作流数量的乘积结果确定调度配置信息的数量；根据拓扑结构模型、工作流模型和调度模型确定各调度配置信息的参数；根据调度配置信息的数量和各调度信息的参数构建出全部调度配置信息。可选的，根据拓扑结构模型、工作流模型和调度模型确定各调度配置信息的参数，包括：根据拓扑结构模型确定每个调度配置信息所匹配的拓扑结构参数，其中，匹配的拓扑结构参数中包括匹配的子系统，以及匹配的子系统的属性信息；根据工作流模型确定每个调度配置信息所匹配的工作流参数，其中，工作流参数中包括匹配的工作流，以及匹配的工作流的属性信息；根据调度模型确定每个调度配置信息所匹配的调度参数，其中，调度参数中包括匹配的子系统的优先级、匹配的工作流的优先级、匹配的工作流的资源并发占用数量、匹配的子系统的依赖子系统以及影响范围；根据匹配的拓扑结构参数、匹配的工作流参数和匹配的调度参数确定各调度配置信息的参数。步骤S203，通过调度器对调度配置信息进行并发调度以自动执行质量行为。可选的，通过调度器对调度配置信息进行并发调度以自动执行质量行为，包括：通过调度器将各调度配置信息作为任务进行同步触发，其中，各任务分别与调度配置信息匹配对应；根据调度配置信息从已经触发的任务中确定出目标任务，通过调度器执行目标任务以自动执行质量行为。可选的，根据调度配置信息从已经触发的任务中确定出目标任务，包括：确定已触发的任务所匹配的调度配置信息；根据匹配的调度配置信息确定已触发的任务不满足指定条件时，则将已触发的任务作为目标任务；其中，指定条件包括存在依赖的任务且依赖的任务未完成，或者存在依赖的任务且依赖的任务已完成但执行所需资源不足，或者不存在依赖的任务但执行所需资源不足。步骤S204，对各子系统的质量行为执行结果进行汇总获取各子系统的质量结果，对各子系统的质量结果进行汇总获取芯片总体的质量结果。具体的说，本实施方式中在通过上述方式自动执行完质量行为之后，会对各子系统的质量行为执行结果进行汇总，以便于准确的获知各子系统的质量结果，例如，对各子系统的执行成功或失败状态、执行时间、执行所占用的资源等信息进行汇总，当然，本实施方式中仅是举例说明，而并不对汇总信息的具体内容进行限定。其中，当获取到各子系统的质量结果之后，还会对各子系统的质量结果进行汇总，以获取芯片总体的质量结果，例如，芯片总体的执行成功率，总体执行时间以及总体占用资源数等，并且便于用户及时的获取质量结果，还会将各子系统的质量结果以及芯片总体的质量结果在人工交互界面上进行展示，并且当芯片总体的质量结果中芯片总体的执行成功率比较低的情况下，还会生成报警信息以对用户进行提示。当然，本实施方式中仅是举例说明，而并不对质量结果的展示方式进行具体限定。本实施方式中通过预先构建芯片质量模型，并根据对芯片质量模型的解析结果来实现对质量行为的自动执行，从而极大地降低SoC前端质量行为的沟通和执行成本。实施例三图为本发明实施例三提供的一种芯片设计前端质量行为的执行装置的结构示意图。如图5所示，该装置包括：前端质量模型构建模块310、调度配置信息获取模块320和质量行为自动执行模块330。前端质量模型构建模块310，用于构建芯片前端质量模型，其中，芯片前端质量模型中包括拓扑结构模型、工作流模型和调度模型；调度配置信息获取模块320，用于当确定接收到芯片质量行为的触发指令时，对前端质量模型进行解析获取调度配置信息；质量行为自动执行模块330，用于通过调度器对调度配置信息进行并发调度以自动执行质量行为。可选的，拓扑结构模型中包括芯片的结构以及结构的属性信息，其中，结构包括顶层模块和子系统，结构的属性信息包括拓扑层次和结构质量等级；工作流模型中包括与芯片质量行为关联的工作流以及工作流的属性信息，其中，工作流的属性信息包括工作流名称、工具链、依赖条件、参数定义、质量标准和工作流质量等级；调度模型中包括子系统优先级、工作流优先级、工作流并发策略、子系统依赖策略和子系统影响范围策略。可选的，调度配置信息获取模块包括：解析单元，用于对前端质量模型进行解析获取拓扑结构模型、工作流模型和调度模型；调度配置信息的数量确定单元，用于根据拓扑结构模型和工作流模型分别确定子系统数量和工作流数量，并根据子系统数量和工作流数量的乘积结果确定调度配置信息的数量；调度配置信息的参数确定单元，用于根据拓扑结构模型、工作流模型和调度模型确定各调度配置信息的参数；调度配置信息构建单元，用于根据调度配置信息的数量和各调度信息的参数构建出全部调度配置信息。可选的，调度配置信息的参数确定单元，用于根据拓扑结构模型确定每个调度配置信息所匹配的拓扑结构参数，其中，匹配的拓扑结构参数中包括匹配的子系统，以及匹配的子系统的属性信息；根据工作流模型确定每个调度配置信息所匹配的工作流参数，其中，工作流参数中包括匹配的工作流，以及匹配的工作流的属性信息；根据调度模型确定每个调度配置信息所匹配的调度参数，其中，调度参数中包括匹配的子系统的优先级、匹配的工作流的优先级、匹配的工作流的资源并发占用数量、匹配的子系统的依赖子系统以及影响范围；根据匹配的拓扑结构参数、匹配的工作流参数和匹配的调度参数确定各调度配置信息的参数。可选的，质量行为自动执行模块，包括：触发单元，用于通过调度器将各调度配置信息作为任务进行同步触发，其中，各任务分别与调度配置信息匹配对应；目标任务确定单元，用于根据调度配置信息从已经触发的任务中确定出目标任务，通过调度器执行目标任务以自动执行质量行为。可选的，目标任务确定单元，用于确定已触发的任务所匹配的调度配置信息；根据匹配的调度配置信息确定已触发的任务不满足指定条件时，则将已触发的任务作为目标任务；其中，指定条件包括存在依赖的任务且依赖的任务未完成，或者存在依赖的任务且依赖的任务已完成但执行所需资源不足，或者不存在依赖的任务但执行所需资源不足。可选的，装置还包括任务中止单元，用于在通过调度器执行目标任务时，当确定存在执行失败的目标任务时获取执行失败的目标任务的质量等级；当确定质量等级为最高等级时，获取执行失败的目标任务的影响范围；当确定影响范围为子系统内部时，则筛选中与执行失败的目标任务属于同一子系统内的目标任务，并中止所筛选出的目标任务的执行过程；当确定影响范围为芯片整体时，则中止全部目标任务的执行过程。可选的，装置还包括质量结果汇总模块，用于对各子系统的质量行为执行结果进行汇总获取各子系统的质量结果；对各子系统的质量结果进行汇总获取芯片总体的质量结果。本发明实施例所提供的一种芯片设计前端质量行为的执行装置可执行本发明任意实施例所提供的一种芯片设计前端质量行为的执行方法，具备执行方法相应的功能模块和有益效果。实施例四图6示出了可以用来实施本发明的实施例的电子设备10的结构示意图。电子设备旨在表示各种形式的数字计算机，诸如，膝上型计算机、台式计算机、工作台、个人数字助理、服务器、刀片式服务器、大型计算机、和其它适合的计算机。电子设备还可以表示各种形式的移动装置。本文所示的部件、它们的连接和关系、以及它们的功能仅仅作为示例，并且不意在限制本文中描述的和/或者要求的本发明的实现。本文所示的部件、它们的连接和关系、以及它们的功能仅仅作为示例，并且不意在限制本文中描述的和/或者要求的本发明的实现。如图6所示，电子设备10包括至少一个处理器11，以及与至少一个处理器11通信连接的存储器，如只读存储器12、随机访问存储器13等，其中，存储器存储有可被至少一个处理器执行的计算机程序，处理器11可以根据存储在只读存储器12中的计算机程序或者从存储单元18加载到随机访问存储器13中的计算机程序，来执行各种适当的动作和处理。在RAM 13中，还可存储电子设备10操作所需的各种程序和数据。处理器11、ROM 12以及RAM 13通过总线14彼此相连。输入/输出接口15也连接至总线14。电子设备10中的多个部件连接至I/O接口15，包括：输入单元16，例如键盘、鼠标等；输出单元17，例如各种类型的显示器、扬声器等；存储单元18，例如磁盘、光盘等；以及通信单元19，例如网卡、调制解调器、无线通信收发机等。通信单元19允许电子设备10通过诸如因特网的计算机网络和/或各种电信网络与其他设备交换信息/数据。处理器11可以是各种具有处理和计算能力的通用和/或专用处理组件。处理器11的一些示例包括但不限于中央处理单元、图形处理单元、各种专用的人工智能计算芯片、各种运行机器学习模型算法的处理器、数字信号处理器、以及任何适当的处理器、控制器、微控制器等。处理器11执行上文所描述的各个方法和处理，例如芯片设计前端质量行为的执行方法。在一些实施例中，芯片设计前端质量行为的执行方法可被实现为计算机程序，其被有形地包含于计算机可读存储介质，例如存储单元18。在一些实施例中，计算机程序的部分或者全部可以经由ROM 12和/或通信单元19而被载入和/或安装到设备10上。当计算机程序加载到RAM 13并由处理器11执行时，可以执行上文描述的芯片设计前端质量行为的执行方法的一个或多个步骤。备选地，在其他实施例中，处理器11可以通过其他任何适当的方式而被配置为执行芯片设计前端质量行为的执行方法。本文中以上描述的装置和技术的各种实施方式可以在数字电子电路装置、集成电路装置、现场可编程门阵列、专用集成电路、专用标准产品、芯片上装置的装置、复杂可编程逻辑设备、计算机硬件、固件、软件、和/或它们的组合中实现。这些各种实施方式可以包括：实施在一个或者多个计算机程序中，该一个或者多个计算机程序可在包括至少一个可编程处理器的可编程装置上执行和/或解释，该可编程处理器可以是专用或者通用可编程处理器，可以从存储装置、至少一个输入装置、和至少一个输出装置接收数据和指令，并且将数据和指令传输至该存储装置、该至少一个输入装置、和该至少一个输出装置。用于实施本发明的芯片设计前端质量行为的执行方法的计算机程序可以采用一个或多个编程语言的任何组合来编写。这些计算机程序可以提供给通用计算机、专用计算机或其他可编程天车作业报警装置的处理器，使得计算机程序当由处理器执行时使流程图和/或框图中所规定的功能/操作被实施。计算机程序可以完全在机器上执行、部分地在机器上执行，作为独立软件包部分地在机器上执行且部分地在远程机器上执行或完全在远程机器或服务器上执行。在本发明的上下文中，计算机可读存储介质可以是有形的介质，其可以包含或存储以供指令执行装置、装置或设备使用或与指令执行装置、装置或设备结合地使用的计算机程序。计算机可读存储介质可以包括但不限于电子的、磁性的、光学的、电磁的、红外的、或半导体装置、装置或设备，或者上述内容的任何合适组合。备选地，计算机可读存储介质可以是机器可读信号介质。机器可读存储介质的更具体示例会包括基于一个或多个线的电气连接、便携式计算机盘、硬盘、随机存取存储器、只读存储器、可擦除可编程只读存储器、光纤、便捷式紧凑盘只读存储器、光学储存设备、磁储存设备、或上述内容的任何合适组合。为了提供与用户的交互，可以在设备上实施此处描述的装置和技术，该设备具有：用于向用户显示信息的显示装置；以及按键，用户可以通过触摸屏或按键来将输入提供给设备。其它种类的装置还可以用于提供与用户的交互；例如，提供给用户的反馈可以是任何形式的传感反馈；并且可以用任何形式来接收来自用户的输入。应该理解，可以使用上面所示的各种形式的流程，重新排序、增加或删除步骤。例如，本发明中记载的各步骤可以并行地执行也可以顺序地执行也可以不同的次序执行，只要能够实现本发明的技术方案所期望的结果，本文在此不进行限制。上述具体实施方式，并不构成对本发明保护范围的限制。本领域技术人员应该明白的是，根据设计要求和其他因素，可以进行各种修改、组合、子组合和替代。任何在本发明的精神和原则之内所作的修改、等同替换和改进等，均应包含在本发明保护范围之内。
