标题title
基于改进贪婪算法的道路巡检方法、系统、设备和介质
摘要abst
本发明涉及道路巡检路径规划技术领域，提供一种基于改进贪婪算法的道路巡检方法、系统、设备和介质，方法包括：S1：建立道路巡检模型；S2：对检查点进行编号，设置已访问检查点序列和未访问检查点序列；S3：初始化道路代价数组；S4：构造已访问检查点序列，加入起始点；S5：判断已访问检查点序列内的检查点的数量是否小于所有检查点的数量，如果不小于，则形成道路巡检路径；S6：获取未访问检查点序列的第一个检查点作为当前检查点；S7：算出当前检查点在已访问检查点序列所有位置中的最小代价，将当前检查点插入已访问检查点序列；S8：重复步骤S5至S7，直到形成道路巡检路径。本方案能够在有限时间内对道路巡检路径作出最优规划。
权利要求书clms
1.一种基于改进贪婪算法的道路巡检方法，其特征在于，包括以下步骤：S1：建立道路巡检模型，包括：在指定区域内的每条道路上设有多个检查点，获取带权无向图，该带权无向图包括检查点集、道路集以及每两个检查点连线的道路代价数组；S2：对检查点进行编号，设置已访问检查点序列和未访问检查点序列；S3：初始化每两个检查点连线的道路代价数组；S4：构造已访问检查点序列，加入起始点，起始点为第一个检查点；S5：判断已访问检查点序列内的检查点的数量是否小于所有检查点的数量，如果不小于，则形成道路巡检路径，该已访问检查点序列所连成的路径为道路巡检路径，否则进行步骤S6；S6：获取未访问检查点序列的第一个检查点，作为当前检查点；删除未访问检查点序列的第一个检查点，形成新的未访问检查点序列；S7：算出当前检查点在已访问检查点序列所有位置中的最小代价，并将当前检查点插入最小代价对应的已访问检查点序列的位置，形成新的已访问检查点序列；S8：重复步骤S5至步骤S7，直到形成道路巡检路径。2.根据权利要求1所述的基于改进贪婪算法的道路巡检方法，其特征在于，步骤S3中，所述初始化每两个检查点连线的道路代价数组的方法包括：按照邻接矩阵的方法填充每两个检查点连线的道路代价数组。3.根据权利要求1所述的基于改进贪婪算法的道路巡检方法，其特征在于，步骤S6中，所述获取未访问检查点序列的第一个检查点之前，先判断未访问检查点序列中检查点的数量是否为0，如果为0则执行步骤S5。4.根据权利要求1所述的基于改进贪婪算法的道路巡检方法，其特征在于，步骤S7中，所述算出当前检查点在已访问检查点序列所有位置中的最小代价的方法包括：计算当前检查点插入已访问检查点序列中第二个位置至最后一个位置的最小的路径代价和作为最小代价。5.根据权利要求4所述的基于改进贪婪算法的道路巡检方法，其特征在于，所述计算当前检查点插入已访问检查点序列中第二个位置至最后一个位置的最小的路径代价和最为最小代价的方法包括：S71：从已访问检查点序列中第二个位置开始遍历至最后一个位置；S72：将当前检查点插入已访问检查点序列；S73：计算当前已访问检查点序列的路径代价和；S74：记录最小的路径代价和并保存当前检查点在已访问检查点序列中的位置；S75：从已访问检查点序列中删除当前检查点；S76：重复步骤S71至步骤S75，完成第二个位置开始遍历至最后一个位置后，获取最小的路径代价和及对应的当前检查点在已访问检查点序列中的位置；该最小的路径代价和为最小代价。6.根据权利要求1所述的基于改进贪婪算法的道路巡检方法，其特征在于，步骤S7由贪婪算法决定。7.一种道路巡检系统，其特征在于，该系统可实现权利要求1-6中任一种所述的基于改进贪婪算法的道路巡检方法。8.根据权利要求7所述的道路巡检系统，其特征在于，包括：模型初始化模块、模型数据填写模块及道路巡检路径计算模块；所述模型初始化模块用于建立道路巡检模型，包括：在指定区域内的每条道路上设有多个检查点，获取带权无向图，该带权无向图包括检查点集、道路集以及每两个检查点连线的道路代价数组；所述模型数据填写模块用于对检查点进行编号，设置已访问检查点序列和未访问检查点序列；初始化每两个检查点连线的道路代价数组；所述道路巡检路径计算模块用于构造已访问检查点序列，加入起始点，起始点为第一个检查点；判断已访问检查点序列内的检查点的数量是否小于所有检查点的数量，如果不小于，则形成道路巡检路径，该已访问检查点序列所连成的路径为道路巡检路径；获取未访问检查点序列的第一个检查点，作为当前检查点；删除未访问检查点序列的第一个检查点，形成新的未访问检查点序列；算出当前检查点在已访问检查点序列所有位置中的最小代价，并将当前检查点插入最小代价对应的已访问检查点序列的位置，形成新的已访问检查点序列；重复取出未访问检查点序列的检查点插入已访问检查点序列，直到形成道路巡检路径。9.一种电子设备，其特征在于，包括：一个或多个处理器；存储装置，用于存储一个或多个程序；当所述一个或多个程序被所述一个或多个处理器执行时，使得所述一个或多个处理器实现如权利要求1-6中任一所述的基于改进贪婪算法的道路巡检方法。10.一种计算机可读介质，其上存储有计算机程序，其特征在于，所述程序被处理器执行时实现如权利要求1-6中任一所述的基于改进贪婪算法的道路巡检方法。
说明书desc
技术领域本发明涉及道路巡检路径规划技术领域，尤其涉及一种基于改进贪婪算法的道路巡检方法、道路巡检系统、设备和介质。背景技术随着城市迅速发展，城市内的车辆与日俱增，交通压力不断上涨，道路健康是保障交通顺畅的基础，因此，需要频繁进行道路巡检工作，以检查道路的健康程度。道路巡检工作中，合理选择巡检路径对加快巡检速度、提高服务质量、降低成本以及增加经济效益有很大的影响，所以道路巡检业务需要一种切实可行的路径规划方法。现有的道路巡检路径规划方法主要有两种，第一种为精确算法，可以求出其最优解，主要运用线性规划、整数规划、非线性规划等数学规划技术来描述巡检路径的模型关系，以便求得最优决策，精确算法基于严格的数学手段，在可以求解的情况下，通常要优于启发式人工智能算法，但是由于引入严格的数学方法，计算量随问题规模的增大呈指数增长，计算量大，耗时长，无法避开指数爆炸问题，适应能力较差，不能满足实时计算的要求，在实际中应用范围非常有限；第二种为启发式算法，是在状态空间中的改进搜索算法，它对每一个搜索的位置进行评价，得到最好的位置，再从这个位置进行搜索直到目标，目前已提出的启发式人工算法较多，其中贪婪算法常被用来解决路径规划的问题，但是传统贪婪算法不能从整体最优上加以考虑，尽管每一步都确保能获得局部最优解，但并不是所有的输入数据都能找到可行解。因此，需要提供一种基于改进贪婪算法的道路巡检方法、道路巡检系统、设备和介质，能够在有限时间内对道路巡检路径作出最优规划，减小测量误差。在所述背景技术部分公开的上述信息仅用于加强对本申请的背景的理解，因此它可以包括不构成对本领域普通技术人员已知的现有技术的信息。发明内容本发明主要目的是克服道路巡检路径规划不能同时具备计算量小和计算准确的问题，提供一种基于改进贪婪算法的道路巡检方法、道路巡检系统、设备和介质，能够在有限时间内对道路巡检路径作出最优规划，减小测量误差。为实现上述的目的，本发明第一方面提供了一种基于改进贪婪算法的道路巡检方法，包括以下步骤：S1：建立道路巡检模型，包括在指定区域内的每条道路上设有多个检查点，获取带权无向图，该带权无向图包括检查点集、道路集以及每两个检查点连线的道路代价数组；S2：对检查点进行编号，设置已访问检查点序列和未访问检查点序列；S3：初始化每两个检查点连线的道路代价数组；S4：构造已访问检查点序列，加入起始点，起始点为第一个检查点；S5：判断已访问检查点序列内的检查点的数量是否小于所有检查点的数量，如果不小于，则形成道路巡检路径，该已访问检查点序列所连成的路径为道路巡检路径，否则进行步骤S6；S6：获取未访问检查点序列的第一个检查点，作为当前检查点；删除未访问检查点序列的第一个检查点，形成新的未访问检查点序列；S7：算出当前检查点在已访问检查点序列所有位置中的最小代价，并将当前检查点插入最小代价对应的已访问检查点序列的位置，形成新的已访问检查点序列；S8：重复步骤S5至步骤S7，直到形成道路巡检路径。根据本发明一示例实施方式，步骤S3中，所述初始化每两个检查点连线的道路代价数组的方法包括：按照邻接矩阵的方法填充每两个检查点连线的道路代价数组。根据本发明一示例实施方式，步骤S6中，所述获取未访问检查点序列的第一个检查点之前，先判断未访问检查点序列中检查点的数量是否为0，如果为0则执行步骤S5。根据本发明一示例实施方式，步骤S7中，所述算出当前检查点在已访问检查点序列所有位置中的最小代价的方法包括：计算当前检查点插入已访问检查点序列中第二个位置至最后一个位置的最小的路径代价和作为最小代价。根据本发明一示例实施方式，所述计算当前检查点插入已访问检查点序列中第二个位置至最后一个位置的最小的路径代价和作为最小代价的方法包括：S71：从已访问检查点序列中第二个位置开始遍历至最后一个位置；S72：将当前检查点插入已访问检查点序列；S73：计算当前已访问检查点序列的路径代价和；S74：记录最小的路径代价和并保存当前检查点在已访问检查点序列中的位置；S75：从已访问检查点序列中删除当前检查点；S76：重复步骤S71至步骤S75，完成第二个位置开始遍历至最后一个位置后，获取最小的路径代价和及对应的当前检查点在已访问检查点序列中的位置；该最小的路径代价和为最小代价。根据本发明一示例实施方式，步骤S7由贪婪算法决定。作为本发明的第二个方面，本发明提供一种道路巡检系统，该道路巡检系统可实现所述基于改进贪婪算法的道路巡检方法。根据本发明一示例实施方式，所述道路巡检系统包括模型初始化模块、模型数据填写模块及道路巡检路径计算模块；所述模型初始化模块用于建立道路巡检模型，包括在指定区域内的每条道路上设有多个检查点，获取带权无向图，该带权无向图包括检查点集、道路集以及每两个检查点连线的道路代价数组；所述模型数据填写模块用于对检查点进行编号，设置已访问检查点序列和未访问检查点序列；初始化每两个检查点连线的道路代价数组；所述道路巡检路径计算模块用于构造已访问检查点序列，加入起始点，起始点为第一个检查点；判断已访问检查点序列内的检查点的数量是否小于所有检查点的数量，如果不小于，则形成道路巡检路径，该已访问检查点序列所连成的路径为道路巡检路径；获取未访问检查点序列的第一个检查点，作为当前检查点；删除未访问检查点序列的第一个检查点，形成新的未访问检查点序列；算出当前检查点在已访问检查点序列所有位置中的最小代价，并将当前检查点插入最小代价对应的已访问检查点序列的位置，形成新的已访问检查点序列；重复取出未访问检查点序列的检查点插入已访问检查点序列，直到形成道路巡检路径。作为本发明的第三个方面，本发明提供一种电子设备，包括：一个或多个处理器；存储装置，用于存储一个或多个程序；当所述一个或多个程序被所述一个或多个处理器执行时，使得所述一个或多个处理器实现所述基于改进贪婪算法的道路巡检方法。作为本发明的第四个方面，本发明提供一种计算机可读介质，其上存储有计算机程序，所述程序被处理器执行时实现所述基于改进贪婪算法的道路巡检方法。本发明的优势效果是，本发明基于改进贪婪算法找到最优的道路巡检路径规划，能够在有限时间内对道路巡检路径作出最优规划，减小测量误差。附图说明通过参照附图详细描述其示例实施例，本申请的上述和其它目标、特征及优点将变得更加显而易见。下面描述的附图仅仅是本申请的一些实施例，对于本领域的普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1示意性示出了道路巡检系统的结构图。图2示意性示出了基于改进贪婪算法的道路巡检方法的步骤图。图3示意性示出了基于改进贪婪算法的道路巡检方法的流程图。图4示意性示出了带权无向图的示意图。图5示意性示出了一种电子设备的框图。图6示意性示出了一种计算机可读介质的框图。具体实施方式现在将参考附图更全面地描述示例实施例。然而，示例实施例能够以多种形式实施，且不应被理解为限于在此阐述的实施例；相反，提供这些实施例使得本申请将全面和完整，并将示例实施例的构思全面地传达给本领域的技术人员。在图中相同的附图标记表示相同或类似的部分，因而将省略对它们的重复描述。此外，所描述的特征、结构或特性可以以任何合适的方式结合在一个或更多实施例中。在下面的描述中，提供许多具体细节从而给出对本申请的实施例的充分理解。然而，本领域技术人员将意识到，可以实践本申请的技术方案而没有特定细节中的一个或更多，或者可以采用其它的方法、组元、装置、步骤等。在其它情况下，不详细示出或描述公知方法、装置、实现或者操作以避免模糊本申请的各方面。附图中所示的方框图仅仅是功能实体，不一定必须与物理上独立的实体相对应。即，可以采用软件形式来实现这些功能实体，或在一个或多个硬件模块或集成电路中实现这些功能实体，或在不同网络和/或处理器装置和/或微控制器装置中实现这些功能实体。附图中所示的流程图仅是示例性说明，不是必须包括所有的内容和操作/步骤，也不是必须按所描述的顺序执行。例如，有的操作/步骤还可以分解，而有的操作/步骤可以合并或部分合并，因此实际执行的顺序有可能根据实际情况改变。应理解，虽然本文中可能使用术语第一、第二、第三等来描述各种组件，但这些组件不应受这些术语限制。这些术语乃用以区分一组件与另一组件。因此，下文论述的第一组件可称为第二组件而不偏离本申请概念的教示。如本文中所使用，术语“及/或”包括相关联的列出项目中的任一个及一或多者的所有组合。本领域技术人员可以理解，附图只是示例实施例的示意图，附图中的模块或流程并不一定是实施本申请所必须的，因此不能用于限制本申请的保护范围。根据本发明的第一个具体实施方式，本发明提供一种道路巡检系统，如图1所示，包括依次连接的模型初始化模块、模型数据填写模块及道路巡检路径计算模块。模型初始化模块用于建立道路巡检模型，包括在指定区域内的每条道路上设有多个检查点，获取带权无向图，该带权无向图包括检查点集、道路集以及每两个检查点连线的道路代价数组。模型数据填写模块用于对检查点进行编号，设置已访问检查点序列和未访问检查点序列；初始化每两个检查点连线的道路代价数组。道路巡检路径计算模块用于构造解序列，加入起始点，起始点为第一个检查点；判断已访问检查点序列内的检查点的数量是否小于所有检查点的数量，如果不小于，则形成道路巡检路径，该已访问检查点序列所连成的路径为道路巡检路径；获取未访问检查点序列的第一个检查点，作为当前检查点；删除未访问检查点序列的第一个检查点，形成新的未访问检查点序列；算出当前检查点在已访问检查点序列所有位置中的最小代价，并将当前检查点插入最小代价对应的已访问检查点序列的位置，形成新的已访问检查点序列；重复取出未访问检查点序列的检查点插入已访问检查点序列，直到形成道路巡检路径。根据本发明的第二个具体实施方式，本发明提供一种基于改进贪婪算法的道路巡检方法，该方法基于第一个具体实施方式的道路巡检系统实现。如图2和图3所示，基于改进贪婪算法的道路巡检方法包括以下步骤：S1：建立道路巡检模型，包括在指定区域内的每条道路上设有多个检查点，获取带权无向图，该带权无向图包括检查点集、道路集以及每两个检查点连线的道路代价数组。如图4所示，假设给定一个带权无向图G，G={C，R}，检查点集C={0,1,2,3,4} ,道路集R = {,,,,,}。每一条边带有权重，表示两点之间的代价。巡检路径规划问题就是要找到遍历所有节点的序列，同时满足遍历路径代价最小。S2：对检查点进行编号，设置已访问检查点序列和未访问检查点序列。对检查点进行编号，从0开始编号，0，1，2，...，t，t为自然数，检查点的数量为t+1；编号0的检查点即为第一个检查点，也就是巡检的起始点。设置已访问过检查点序列R和未访问检查点序列S。S3：初始化每两个检查点连线的道路代价数组。初始化每两个检查点连线的道路代价数组的方法包括：按照邻接矩阵的方法填充每两个检查点连线的道路代价数组。设置两个检查点之间的道路代价数组Value，n和m为自然数，表示检查点编号，Value为代价数组的值。S4：构造已访问过检查点序列，加入起始点，起始点为第一个检查点。S5：判断已访问检查点序列内的检查点的数量是否小于所有检查点的数量，如果不小于，则形成道路巡检路径，该已访问检查点序列所连成的路径为道路巡检路径，否则进行步骤S6。S6：获取未访问检查点序列的第一个检查点，作为当前检查点；删除未访问检查点序列的第一个检查点，形成新的未访问检查点序列。获取未访问检查点序列的第一个检查点之前，先判断未访问检查点序列中检查点的数量是否为0，如果为0则执行步骤S5。S7：算出当前检查点在已访问检查点序列所有位置中的最小代价，并将当前检查点插入最小代价对应的已访问检查点序列的位置，形成新的已访问检查点序列。所述算出当前检查点在已访问检查点序列所有位置中的最小代价的方法包括：计算当前检查点插入已访问检查点序列中第二个位置至最后一个位置的最小的路径代价和作为最小代价。根据本发明一示例实施方式，所述计算当前检查点插入已访问检查点序列中第二个位置至最后一个位置的最小的路径代价和作为最小代价的方法包括：S71：从已访问检查点序列中第二个位置开始遍历至最后一个位置。S72：将当前检查点插入已访问检查点序列。S73：计算当前已访问检查点序列的路径代价和。路径代价和即为当前已访问检查点序列中的所有道路代价数组的和。S74：记录最小的路径代价和并保存当前检查点在已访问检查点序列中的位置。S75：从已访问检查点序列中删除当前检查点。S76：重复步骤S71至步骤S75，完成第二个位置开始遍历至最后一个位置后，获取最小的路径代价和及对应的当前检查点在已访问检查点序列中的位置；该最小的路径代价和为最小代价。S8：重复步骤S5至步骤S7，直到形成道路巡检路径。本方案基于改进贪婪算法找到最优的道路巡检路径规划，能够在有限时间内对道路巡检路径作出最优规划，减小测量误差。根据本发明的第三个具体实施方式，本发明提供一种电子设备，如图5所示，图5是根据一示例性实施例示出的一种电子设备的框图。下面参照图5来描述根据本申请的这种实施方式的电子设备500。图5显示的电子设备500仅仅是一个示例，不应对本申请实施例的功能和使用范围带来任何限制。如图5所示，电子设备500以通用计算设备的形式表现。电子设备500的组件可以包括但不限于：至少一个处理单元510、至少一个存储单元520、连接不同系统组件的总线530、显示单元540等。其中，所述存储单元存储有程序代码，所述程序代码可以被所述处理单元510执行，使得所述处理单元510执行本说明书中描述的根据本申请各种示例性实施方式的步骤。例如，所述处理单元510可以执行第二个具体实施方式所示的步骤。所述存储单元520可以包括易失性存储单元形式的可读介质，例如随机存取存储单元5201和/或高速缓存存储单元5202，还可以进一步包括只读存储单元5203。所述存储单元520还可以包括具有一组程序模块5205的程序/实用工具5204，这样的程序模块5205包括但不限于：操作系统、一个或者多个应用程序、其它程序模块以及程序数据，这些示例中的每一个或某种组合中可能包括网络环境的实现。总线530可以为表示几类总线结构中的一种或多种，包括存储单元总线或者存储单元控制器、外围总线、图形加速端口、处理单元或者使用多种总线结构中的任意总线结构的局域总线。电子设备500也可以与一个或多个外部设备500’通信，使得用户能与该电子设备500交互的设备通信，和/或该电子设备500能与一个或多个其它计算设备进行通信的任何设备通信。这种通信可以通过输入/输出接口550进行。并且，电子设备500还可以通过网络适配器560与一个或者多个网络，广域网和/或公共网络，例如因特网）通信。网络适配器560可以通过总线530与电子设备500的其它模块通信。应当明白，尽管图中未示出，可以结合电子设备500使用其它硬件和/或软件模块，包括但不限于：微代码、设备驱动器、冗余处理单元、外部磁盘驱动阵列、RAID系统、磁带驱动器以及数据备份存储系统等。通过以上的实施方式的描述，本领域的技术人员易于理解，这里描述的示例实施方式可以通过软件实现，也可以通过软件结合必要的硬件的方式来实现。因此，根据本发明的第四个具体实施方式，本发明提供一种计算机可读介质。如图6所示，根据本发明实施方式的技术方案可以以软件产品的形式体现出来，该软件产品可以存储在一个非易失性存储介质中或网络上，包括若干指令以使得一台计算设备执行根据本发明实施方式的上述方法。所述软件产品可以采用一个或多个可读介质的任意组合。可读介质可以是可读信号介质或者可读存储介质。可读存储介质例如可以为但不限于电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。可读存储介质的更具体的例子包括：具有一个或多个导线的电连接、便携式盘、硬盘、随机存取存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。所述计算机可读存储介质可以包括在基带中或者作为载波一部分传播的数据信号，其中承载了可读程序代码。这种传播的数据信号可以采用多种形式，包括但不限于电磁信号、光信号或上述的任意合适的组合。可读存储介质还可以是可读存储介质以外的任何可读介质，该可读介质可以发送、传播或者传输用于由指令执行系统、装置或者器件使用或者与其结合使用的程序。可读存储介质上包含的程序代码可以用任何适当的介质传输，包括但不限于无线、有线、光缆、RF等等，或者上述的任意合适的组合。可以以一种或多种程序设计语言的任意组合来编写用于执行本发明操作的程序代码，所述程序设计语言包括面向对象的程序设计语言—诸如Java、C++等，还包括常规的过程式程序设计语言—诸如“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算设备上执行、部分地在用户设备上执行、作为一个独立的软件包执行、部分在用户计算设备上部分在远程计算设备上执行、或者完全在远程计算设备或服务器上执行。在涉及远程计算设备的情形中，远程计算设备可以通过任意种类的网络，包括局域网或广域网，连接到用户计算设备，或者，可以连接到外部计算设备。上述计算机可读介质承载有一个或者多个程序，当上述一个或者多个程序被一个该设备执行时，使得该计算机可读介质实现第二个实施方式的功能。本领域技术人员可以理解上述各模块可以按照实施例的描述分布于装置中，也可以进行相应变化唯一不同于本实施例的一个或多个装置中。上述实施例的模块可以合并为一个模块，也可以进一步拆分成多个子模块。通过以上的实施例的描述，本领域的技术人员易于理解，这里描述的示例实施例可以通过软件实现，也可以通过软件结合必要的硬件的方式来实现。因此，根据本发明实施例的技术方案可以以软件产品的形式体现出来，该软件产品可以存储在一个非易失性存储介质中或网络上，包括若干指令以使得一台计算设备执行根据本发明实施例的方法。以上具体地示出和描述了本发明的示例性实施例。应可理解的是，本发明不限于这里描述的详细结构、设置方式或实现方法；相反，本发明意图涵盖包含在所附权利要求的精神和范围内的各种修改和等效设置。
