标题title
一种仿真元器件的构建方法、装置及存储介质
摘要abst
本申请公开了一种仿真元器件的构建方法、装置及存储介质，方法应用于EDA仿真软件，包括步骤：获取仿真元器件的配置参数；根据配置参数构建边界网格；根据配置参数构建至少一个几何体网格并组合生成元器件网格；根据配置参数构建元器件端口网格；通过布尔运算组合边界网格、元器件网格以及元器件端口网格，生成仿真元器件；根据仿真元器件生成仿真元器件网格文件。装置包括：配置参数获取模块、边界构建模块、元器件构建模块、端口构建模块、组合模块和文件生成模块。本申请具有仿真元器件构建速度快，存储空间占用小，数据解析简单，便于网格边界识别与后续元器件仿真处理的技术特点。
权利要求书clms
1.一种仿真元器件的构建方法，应用于EDA仿真软件，其特征在于，包括步骤：获取仿真元器件的配置参数，所述配置参数包括：边界尺寸、边界形状、元器件结构和元器件结构尺寸；根据所述边界尺寸和所述边界形状构建三维的边界网格，所述边界网格用于模拟所述仿真元器件的仿真环境；在所述边界网格内，根据所述元器件结构和所述元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格；所述边界网格、所述几何体网格和所述元器件网格包括多个网格单元，所述网格单元至少为一种多面体；根据所述配置参数构建元器件端口网格；通过布尔运算组合所述边界网格、所述元器件网格以及所述元器件端口网格，生成三维的所述仿真元器件；根据所述仿真元器件生成仿真元器件网格文件。2.根据权利要求1所述的一种仿真元器件的构建方法，其特征在于，所述根据所述边界尺寸和所述边界形状构建三维的边界网格，具体包括：根据所述边界形状确定所述边界网格的形状；根据所述边界形状和所述边界尺寸，计算出所述边界网格在空间直角坐标系的平面中的多个平面坐标点坐标，连线形成边界平面，并向垂直于所述边界平面的方向拉伸形成三维的所述边界网格。3.根据权利要求1所述的一种仿真元器件的构建方法，其特征在于，所述根据所述元器件结构和所述元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格，具体包括：根据所述元器件结构确定组成所述元器件网格的所述几何体网格的形状；根据所述元器件结构尺寸计算出所述几何体网格在空间直角坐标系的平面中的多个平面坐标点坐标，连线形成几何平面，并向垂直于所述几何平面的方向拉伸形成所述几何体网格；将所述几何体网格合并得到所述元器件网格。4.根据权利要求1所述的一种仿真元器件的构建方法，其特征在于，所述根据所述配置参数构建元器件端口网格，具体包括：所述配置参数还包括：所述仿真元器件对应的端口类型以及端口尺寸，所述端口类型包括线端口和面端口；根据所述端口类型和所述端口尺寸计算出所述元器件端口网格在空间直角坐标系的平面中的多个平面坐标点，连线生成线端口网格或面端口网格。5.根据权利要求1-4任一项所述的一种仿真元器件的构建方法，其特征在于，所述根据所述仿真元器件生成仿真元器件网格文件，具体包括：对所述边界网格、所述元器件网格以及所述元器件端口网格分别添加标注信息，并进行网格加密。6.根据权利要求5所述的一种仿真元器件的构建方法，其特征在于，所述仿真元器件的配置参数存储在Json配置文件中，所述配置参数的数据格式一致。7.一种仿真元器件的构建装置，其特征在于，包括：配置参数获取模块，用于获取仿真元器件的配置参数，所述配置参数包括：边界尺寸、边界形状、元器件结构和元器件结构尺寸；边界构建模块，根据所述边界尺寸和所述边界形状构建三维的边界网格，所述边界网格用于模拟所述仿真元器件的仿真环境；元器件构建模块，用于在所述边界网格内，根据所述元器件结构和所述元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格；端口构建模块，用于根据所述配置参数构建元器件端口网格；组合模块，用于通过布尔运算组合所述边界网格、所述元器件网格以及所述元器件端口网格，生成三维的所述仿真元器件；文件生成模块，用于根据所述仿真元器件生成仿真元器件网格文件。8.根据权利要求7所述的一种仿真元器件的构建装置，其特征在于，还包括：信息标注模块，用于对所述边界网格、所述元器件网格以及所述元器件端口网格分别添加标注信息；网格加密模块，对所述边界网格、所述元器件网格以及所述元器件端口网格分别进行网格加密。9.根据权利要求8所述的一种仿真元器件的构建装置，其特征在于，还包括：参数存储模块，用于通过Json配置文件存储所述仿真元器件的配置参数，并使所述配置参数的数据格式一致。10.一种计算机可读存储介质，其上存储有计算机程序，其特征在于：所述计算机程序被处理器执行时实现权利要求1至6中任一项所述的仿真元器件的构建方法。
说明书desc
技术领域本申请涉及仿真设计技术领域，特别涉及一种仿真元器件的构建方法、装置及存储介质。背景技术EDA，即电子设计自动化，是指利用计算机设计软件，来完成大规模集成电路的功能设计、综合、验证、物理设计等流程的设计方式。在使用EDA工具时，就不可避免的需要建立数学模型来进行计算，同时，由于大规模集成电路的器件种类广、数量多，建模过程中所需的几何信息处理量非常大，如何简洁高效地记录、处理和使用这些信息，是提高EDA工具效率的重要途径。发明内容有鉴于此，本申请提供了一种仿真元器件的构建方法、装置及存储介质，以期解决集成电路电子设计过程中几何信息量庞大导致使用效率低的技术问题。具体的，本申请的技术方案如下：一种仿真元器件的构建方法，应用于EDA仿真软件，包括步骤：获取仿真元器件的配置参数，配置参数包括：边界尺寸、边界形状、元器件结构和元器件结构尺寸；根据边界尺寸和边界形状构建三维的边界网格，边界网格用于模拟仿真元器件的仿真环境；在边界网格内，根据元器件结构和元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格；边界网格、几何体网格和元器件网格包括多个网格单元，网格单元至少为一种多面体；根据配置参数构建元器件端口网格；通过布尔运算组合边界网格、元器件网格以及元器件端口网格，生成三维的仿真元器件；根据仿真元器件生成仿真元器件网格文件。在一些实现中，根据边界尺寸和边界形状构建三维的边界网格，具体包括：根据边界形状确定边界网格的形状；根据边界形状和边界尺寸，计算出边界网格在空间直角坐标系的平面中的多个平面坐标点坐标，连线形成边界平面，并向垂直于边界平面的方向拉伸形成三维的边界网格。在一些实现中，根据元器件结构和元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格，具体包括：根据元器件结构确定组成元器件网格的几何体网格的形状；根据元器件结构尺寸，计算出几何体网格在空间直角坐标系的平面中的多个平面坐标点坐标，连线形成几何平面，并向垂直于几何平面的方向拉伸形成几何体网格；将几何体网格合并得到元器件网格。在一些实现中，根据配置参数构建元器件端口网格，具体包括：配置参数还包括：仿真元器件对应的端口类型以及端口尺寸，端口类型包括线端口和面端口；根据端口类型和端口尺寸计算出元器件端口网格在空间直角坐标系的平面中的多个平面坐标点，连线生成线端口网格或面端口网格。在一些实现中，根据仿真元器件生成仿真元器件网格文件，具体包括：对边界网格、元器件网格以及元器件端口网格分别添加标注信息，并进行网格加密。在一些实现中，仿真元器件的配置参数存储在Json配置文件中，配置参数的数据格式一致。基于相同的技术构思，本申请还提供了一种仿真元器件的构建装置，包括：配置参数获取模块，用于获取仿真元器件的配置参数，配置参数包括：边界尺寸、边界形状、元器件结构和元器件结构尺寸；边界构建模块，用于根据边界尺寸和边界形状构建三维的边界网格，边界网格用于模拟仿真元器件的仿真环境；元器件构建模块，用于在边界网格内，根据元器件结构和元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格；端口构建模块，用于根据配置参数构建元器件端口网格；组合模块，用于通过布尔运算组合边界网格、元器件网格以及元器件端口网格，生成三维的仿真元器件；文件生成模块，用于根据仿真元器件生成仿真元器件网格文件。在一些实现中，一种仿真元器件的构建装置，还包括：信息标注模块，用于对边界网格、元器件网格以及元器件端口网格分别添加标注信息；网格加密模块，对边界网格、元器件网格以及元器件端口网格分别进行网格加密。在一些实现中，一种仿真元器件的构建装置，还包括：参数存储模块，用于通过Json配置文件存储仿真元器件的配置参数，并使配置参数的数据格式一致。基于相同的技术构思，本申请还提供了一种计算机可读存储介质，其上存储有计算机程序，计算机程序被处理器执行时实现上述任一项的仿真元器件的构建方法。与现有技术相比，本申请至少具有以下一项有益效果：1.存储在Json配置文件中的配置参数，使得元器件配置参数的数据格式具有简单、易于解析，压缩程度大等优点，使得在构建仿真元器件的过程中数据读取方便，建立不同仿真元器件过程具有较好的通用适配性。2.通过构建边界网格，划定仿真元器件的空间范围，在调用仿真元器件时，用户更具可操作性，能够帮助用户根据使用需求进行整体规划，使得仿真电路更加整齐。3.通过获取配置参数得到元器件的各个组成部分的几何体，针对每个组成部分的几何体进行单独建模，建模完成后进行组合，能够通过几种较为简单的几何体实现多种元器件整体形状的构建，简化了仿真元器件的构建过程。4.通过布尔运算使得构建完成的边界网格、元器件网格以及元器件端口网格形成一个统一的整体，从而达到在仿真过程中进行电磁有限元仿真的要求。附图说明下面将以明确易懂的方式，结合附图说明优选实施方式，对本申请的上述特性、技术特征、优点及其实现方式予以进一步说明。图1是本申请一种仿真元器件的构建方法的流程图；图2是本申请一种仿真元器件的构建方法构建微带线四面体网格示意图；图3是本申请一种仿真元器件的构建方法构建微带线主体结构示意图；图4是本申请一种仿真元器件的构建装置的结构图。具体实施方式为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对照附图说明本申请的具体实施方式。显而易见地，下面描述中的附图仅仅是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图，并获得其他的实施方式。为使图面简洁，各图中只示意性地表示出了与申请相关的部分，它们并不代表其作为产品的实际结构。另外，以使图面简洁便于理解，在有些图中具有相同结构或功能的部件，仅示意性地绘示了其中的一个，或仅标出了其中的一个。在本文中，“一个”不仅表示“仅此一个”，也可以表示“多于一个”的情形。还应当进一步理解，在本申请说明书和所附权利要求书中使用的术语“和/或”是指相关联列出的项中的一个或多个的任何组合以及所有可能组合，并且包括这些组合。在本文中，需要说明的是，除非另有明确的规定和限定，术语“安装”、“相连”、“连接”应做广义理解，例如，可以是固定连接，也可以是可拆卸连接，或一体地连接；可以是机械连接，也可以是电连接；可以是直接相连，也可以通过中间媒介间接相连，可以是两个元件内部的连通。对于本领域的普通技术人员而言，可以具体情况理解上述术语在本申请中的具体含义。另外，在本申请的描述中，术语“第一”、“第二”等仅用于区分描述，而不能理解为指示或暗示相对重要性。参考说明书附图1，本申请提供的一种仿真元器件的构建方法，应用于EDA仿真软件，包括步骤：S100，获取仿真元器件的配置参数，配置参数包括：边界尺寸、边界形状、元器件结构和元器件结构尺寸；具体的，EDA全称为“电子设计自动化”，是一种利用计算机技术来辅助设计、分析和验证电子系统的过程。在电子系统的设计中，涉及诸多复杂的步骤，如电路设计、芯片设计、电路仿真、布局布线等，而EDA工具就是专门为这些步骤提供支持和自动化的软件工具集合。而在上述设计与仿真中，用户通常需要在EDA工具预设的元器件库中选择设计与仿真所需的相应的仿真元器件，比如对一个简单的RLC滤波电路进行仿真，通常需要一个电阻、一个电感和一个电容，用户则根据自身需要选择元器件后，对元器件进行赋值，然后将三个仿真元器件的输入输出端对应连接，形成RLC滤波仿真电路。这些仿真元器件在EDA库中存储时会占用较大的存储空间，同时调用时，也会影响用户进行仿真时程序运行的兼容性与效率，数据的优化是解决此问题的关键，因此，需要在构建仿真元器件环节进一步提高构建效率，从获取配置参数开始便进行优化，比如将配置参数存储在Json配置文件中，利用其易读、易写、轻量级、易解析、跨平台、广泛应用等优点，实现仿真元器件各项参数的快速获取与进一步优化存储资源。在仿真元器件的构建当中，需要对仿真元器件的整体结构、组成、各个结构的尺寸以及组件的物理属性、特定计算参数等属性信息进行读取后，方可进行仿真元器件的构建。S200，根据边界尺寸和边界形状构建三维的边界网格，边界网格用于模拟仿真元器件的仿真环境；具体的，在构建仿真元器件时，首先根据预设的配置参数构建整个仿真元器件的边界，此边界由网格进行构建实质上为一个空气盒子，边界网格的构建同时也要参考即将构建的仿真元器件的整体尺寸，据此向外扩展一定的距离。在电子设计仿真中，空气盒子通常是指一个虚拟的三维空间，用于模拟电子器件或电路在真实环境中的工作情况，在集成电路、电子组件、散热问题等仿真中具有一定作用。比如进行热分析和散热仿真时，空气盒子可以用来模拟电子器件在真实环境中的热分布和散热情况，通过设置空气盒子的尺寸和边界条件，可以模拟电子器件产生的热量如何通过空气传导、对流和辐射传输，从而帮助设计人员优化散热设计，确保器件在工作时的温度在安全范围内，抑或进行电磁干扰和电磁兼容性的仿真设计，空气盒子可以用来模拟电子器件的电磁环境，包括电磁波的传播和反射，帮助设计人员评估电子器件的抗干扰和抗干扰性能，预测可能的EMI问题，以及进行电磁兼容性分析，空气盒子在电子设计仿真中充当了一个模拟环境的角色，帮助设计人员更准确地预测电子器件在实际工作环境中的行为，从而进行性能优化、问题排查和可靠性评估。同时，此边界通过网格构建，网格是一种常用的数据结构，用于表示空间中的离散化点、线、面或体元素，既可以使用四面体网格进行构建，同时也可以使用六面体网格进行构建，四面体网格是由连接在一起的四面体元素组成的网格，在三维空间中可以表示体积和复杂几何体，仿真元器件的构成则正是基于多个几何体而构建形成的，具有一定的复杂程度，通常六面体网格多用于构建相对比较规则的几何体，具体构建的网格类型选择在此不作具体限定。S300，在边界网格内，根据元器件结构和元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格；具体的，一个仿真元器件通常由多个基础的几何体构成，比如常见的微带线，则是由多个长方体共同构建，通过分别构建每个长方体，最后再进行组合，可以使仿真元器件的构建更具多样性，并且边界网格、几何体网格和元器件网格包括多个网格单元，网格单元至少为一种多面体；同时，使用四面体网格，则会使这一构建过程更加灵活，组合以后能够形成完整的仿真元器件的整体样式，成为用户使用时所能看见的最终形态，但此时尚未完成整体的仿真元器件构建。S400，根据配置参数构建元器件端口网格；具体的，仿真元器件最终要应用于整体电路结构的设计，通常电路由若干个元器件共同组成，多个元器件之间通过连线进行电能和信号的传输，就像在现实中进行电路的搭建时，元器件通常具有管脚，以便用户在使用时进行连线，仿真元器件也是一样，元器件端口网格的构建便是仿真元器件引脚或连接面的构建过程，主要包括线端口和面端口两种，以实现在仿真过程中沟通各个元器件形成仿真电路。S500，通过布尔运算组合边界网格、元器件网格以及元器件端口网格，生成三维的仿真元器件；具体的，边界网格、元器件网格以及元器件端口网格是通过上述三个步骤分别进行构建完成的，此时三者并非一个整体，在进行电路仿真时，需要进行电磁有限元仿真，元器件各个结构分立则不能实现此目的，需要进行结合。结合的过程应用到布尔运算，布尔运算在计算机图形学和三维建模中用于操作和组合几何体，通过布尔运算，可以对独立的四面体网格结构进行合并、相交、减去等操作，以便创建更复杂的几何体，形成仿真元器件最完整的形态。S600，根据仿真元器件生成仿真元器件网格文件。最终，将构建生成的仿真元器件以网格文件的形式进行存储，便于用户在仿真过程中进行调用选择。在一个实施例中，通过上述方法构建仿真微带线，仿真微带线的仿真元器件配置参数存储在Json配置文件中，对Json配置文件进行读取，获取各项参数。首先构建边界网格，从配置文件中获取到边界网格空气盒子的几何类型和需要外扩的大小，这些具体的参数值是用户根据实际需要自行确定存储在Json配置文件中，利用四面体网格构建边界网格。然后从配置文件读取微带线的全部信息，建立结构名称和几何信息的一一映射关系，微带线的主要几何结构主要由三个重叠在一起的长方体构建，根据读取到的微带线的配置参数分别通过四面体网格构建三个长方体网格，构建完成后将三个长方体网格进行组合，形成微带线的整体结构。之后，根据配置参数的读取结果来判断微带线的端口是线端口还是面端口，进行对应的结构构建，将低维的端口嵌入到高维的结构中；最后将形成的边界网格、元器件网格和端口网格通过布尔运算进行组合，生成仿真微带线，输出仿真微带线网格文件，完成构建。在一个实现中，根据边界尺寸和边界形状构建三维的边界网格，具体包括：根据边界形状确定边界网格的形状；根据边界形状和边界尺寸，计算出边界网格在空间直角坐标系的平面中的多个平面坐标点坐标，连线形成边界平面，并向垂直于边界平面的方向拉伸形成边界网格。具体的，在构建边界网格的过程中，需要对边界网格的范围进行划定，同时确定边界网格的形状，形状可以是长方体、圆柱体等几何体形状。边界尺寸同时需要参考即将构建的仿真元器件主体的尺寸，根据实际使用需要从仿真元器件主体向外扩展一定距离，因此能够从配置参数中获取到的边界形状和边界尺寸计算出边界其在xoy平面上的点的坐标。在构建时，首先根据点的坐标确定位置，然后将点连成线生成面，再将平面沿着z轴拉伸一定高度，生成三维的网格，构建出边界网格。如果此过程中使用四面体网格进行构建，则生成的边界网格是基于四面体构建形成的四面体网格空气盒子，如果基于六面体进行构建，则生成的边界网格的组成部分是若干个六面体。在一个实现中，根据元器件结构和元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格，具体包括：根据元器件结构确定组成元器件网格的几何体网格的形状；根据元器件结构尺寸计算出几何体网格在空间直角坐标系的平面中的多个平面坐标点坐标，连线形成几何平面，并向垂直于几何平面的方向拉伸形成几何体网格；将几何体网格合并得到元器件网格。具体的，从配置文件读取仿真元器件的全部结构信息，根据建立的仿真元器件名称和几何信息的映射关系；遍历结构名称，根据元器件结构尺寸计算出在空间直角坐标系的xoy平面上的点的坐标，然后找出点的位置之后将点连成线生成面，再将平面沿着z轴拉伸一定高度，生成三维的网格，另外还支持对元器件进行几何变换，如旋转、平移等操作，通过确定元器件的旋转操作，绕第几个点，旋转多少度完成元器件结构的构建。此过程中，若一个仿真元器件由多个几何构成，则依次添加并生成网格，再经过合并操作得到元器件网格，合并操作使得仿真元器件的形状具备了多样性。循环上述过程即可生成元器件主体的全部网格；同时因为每个组成元器件的几何体网格的Json数据格式一致，所以便于程序化处理。并且，网格的构建可以选择使用四面体网格或六面体网格，根据实际使用需要进行选择和设计。在一个实现中，根据配置参数构建元器件端口网格，具体包括：配置参数还包括：仿真元器件对应的端口类型以及端口尺寸，端口类型包括线端口和面端口；根据端口类型和端口尺寸计算出元器件端口网格在空间直角坐标系的平面中的多个平面坐标点，连线生成线端口网格或面端口网格。在一个实现中，根据仿真元器件生成仿真元器件网格文件，具体包括：对边界网格、元器件网格以及元器件端口网格分别添加标注信息，并进行网格加密。具体的，将网格结构添加标注信息的目的是为了在模型上标记、注释或嵌入额外的信息，以增强模型的可理解性、可视化效果、文档化和数据交流能力。这些标注信息可以是文字、图形、颜色、纹理等形式的数据，有助于提供关于模型、对象或场景的更多上下文信息。在计算仿真中，添加标注可以标识感兴趣的区域、边界条件、观察点等，以便在仿真过程中进行监测和分析。标注可以帮助将设计或分析结果传达给其他人员，以便共享信息和决策，在文档化过程中，标注可以作为解释、说明和说明，提供关键细节和背景信息。网格加密是指将原始网格细分为更小的单元，以增加模拟或计算的精度。这种操作可以在数值模拟、结构分析等领域中用来改进结果的准确性。网格加密之所以可以提高精度，主要是因为它可以解决以下几个方面的问题：更精细的几何表示，加密网格使得模拟能够更准确地捕捉复杂几何形状、细节和曲线。原始网格可能无法有效地表示弯曲或复杂的几何特征，而细分后的网格可以更好地逼近实际几何。更准确的数值解，在数值模拟中，网格加密会导致更小的单元，从而使数值方程在每个单元内的近似更精确。这有助于减少数值误差，并提供更准确的结果。针对特定区域进行加密即在需要更高精度的区域加密网格，而在其他区域保持较粗的网格，这种局部加密可以在有限计算资源下提供更好的结果。在一个实现中，仿真元器件的配置参数存储在Json配置文件中，配置参数的数据格式一致。具体的，Json配置文件具有许多优点，使其成为许多应用程序和系统中常用的配置格式之一，首先是Json配置文件具有易读性和易写性，是一种文本格式，以键值对的方式组织数据，具有很好的可读性，人们可以轻松地阅读和编写Json配置文件，不需要专门的工具或编辑器。同时，Json是一种轻量级数据交换格式，不需要大量的额外标记或元数据，因此配置文件相对较小，占用较少的存储空间，特别是其易于解析的特点，在大多数编程语言中都有简单且易于使用的解析器，使得读取和处理Json配置文件变得简单，便于在应用程序中进行模块化处理。在层级结构方面支持嵌套的层级结构，可以将配置信息分组和组织起来，使其更具有结构性，这使得配置文件可以更好地表示复杂的配置需求。根据Json的性质，其具有跨平台和跨语言支持的特点，它一种通用的数据格式，几乎所有的编程语言都有Json的解析和序列化库，因此可以在不同的平台和语言之间轻松地共享和使用配置信息。Json已经成为互联网上的一种标准数据交换格式，许多API和服务都使用Json来传递数据，因此大多数开发人员对Json都非常熟悉。支持基本数据类型比较常见，如字符串、数字、布尔值、数组和对象，这使得能够表示各种不同类型的配置信息。综上，Json配置文件具有易读、易写、轻量级、易解析、跨平台、广泛应用等优点，使其成为许多应用程序中常用的配置文件格式。同时，参数配置文件也可以使用具有类似于JSON结构的YAML，其更强调可读性，它使用缩进和换行来表示层级结构，适用于配置文件、数据序列化和其他用途。或者XML，可用于表示层级化的数据结构，虽然它比JSON更冗长，但由于其广泛的支持和丰富的工具生态系统，仍然在许多系统中用作配置文件格式。或者使用TOML，它的特点是设计简单且易于阅读，语法注重易读性和可维护性，支持表格、键值对和数组，常用于配置应用程序、软件和项目。上述参数配置文件在不同的场景和应用中都有各自的优势和用途，用户可以根据项目的需求、开发团队的偏好以及所使用的工具和平台应用上述配置文件，并且通过这些参数配置文件实现本申请的方法均在本申请的保护范围之内。在一个实施例中，通过上述方法进行仿真元器件的构建，比如构建仿真微带线，在本实施例中，从Json配置文件中获取仿真微带线的配置参数，并基于Json配置文件搭建了一个添加面端口的微带线四面体网格，其主要结构定义包括：边界网格为空气盒子AirBox，仿真元器件网格为Structures，端口网格为Ports。形状定义为Shape，边界网格相对于仿真元器件向外扩展的尺寸定义为Extend，在本实施例关于微带线的构建用到的几何结构的Shape为Cube与Rectangle，另外需要添加的几何结构数量也较少，包括2个面端口在内共计6个，所以可以看到，基于Json数据格式，能够很简洁精准的构造一个传输线的四面体网格模型。边界网格的生成过程为：首先，从配置文件中获取到边界网格的边界形状Shape和需要外扩的边界尺寸Extend大小，其值由用户根据实际需要自行确定；其次，根据从配置文件中读取到的微带线主体的元器件网格Structures的各结构几何信息，计算出边界网格的Cube_Data的值。需要提到的是，由于微带线主体Structrues的各结构Shape除Cube之外，还有其他类型如Cylinder，HollowedCube等。然后，根据Cube_Data即可很简单地计算出边界网格在空间直角坐标系xoy平面上的点的坐标，然后在将点连成线段并生成平面；最后，将生成的平面沿着z轴方向拉伸一定高度为立体图形，再经处理之后生成边界网格的空气盒子四面体网格。微带线主体Structrues的生成过程为：首先，从配置文件读取Structures的全部信息，根据通过结构名称和几何信息的一一映射关系，根据元器件结构和元器件结构尺寸，计算出其在空间直角坐标系xoy平面上的点的坐标，然后将点连成线生成面，再将平面沿着z轴拉伸一定高度，生成三维的四面体网格；然后，循环上述过程即可生成传输线主体Structures的三个几何体的四面体网格，进行结合后生成微带线主体；微带线的端口添加过程为：首先，根据Json数据的Shape类型来判断是线端口或面端口，Line对应线端口，Rectangle对应面端口；然后，根据端口类型和所述端口尺寸计算相应的点的坐标，再连线或生成平面；最后，将生成的端口嵌入到边界网格中；添加完由构建的微带线四面体网格全部结构之后，继续对网格进行处理。由于以上步骤都是单独进行的，添加的各网格结构都是相互独立的，这并不符合电路仿真中进行电磁有限元仿真的要求，所以还需进行布尔操作，将所有结构变为一个整体，参考说明书附图2和图3示出的微带线主体四面体网格示意图以及仿真元器件整体轮廓的示意图，再分别对前述步骤的各个网格结构添加特有的标注信息，同时，还需要对局部网格进行特别加密，以满足精度的要求，具体的加密规则在此不再赘述，后续对形成的微带线整体输出网格文件，完成构建。基于相同的技术构思，本申请还提供了一种仿真元器件的构建装置，参考说明书附图4，包括：配置参数获取模块10，用于获取仿真元器件的配置参数，配置参数包括：边界尺寸、边界形状、元器件结构和元器件结构尺寸；具体的，在构建仿真元器件环节进一步提高构建效率，从获取配置参数开始便进行优化，比如将配置参数存储在Json配置文件中，利用其易读、易写、轻量级、易解析、跨平台、广泛应用等优点，实现仿真元器件各项参数的快速获取与进一步优化存储资源。在仿真元器件的构建当中，需要对仿真元器件的整体结构、组成、各个结构的尺寸等多种参数进行读取后，方可进行仿真元器件的构建。边界构建模块20，用于根据边界尺寸和边界形状构建三维的边界网格，边界网格用于模拟仿真元器件的仿真环境；具体的，在构建仿真元器件时，首先根据预设的配置参数构建整个仿真元器件的边界，此边界由网格进行构建实质上为一个空气盒子，在电子设计仿真中充当了一个模拟环境的角色，帮助设计人员更准确地预测电子器件在实际工作环境中的行为，从而进行性能优化、问题排查和可靠性评估。同时，此边界通过网格构建，网格是一种常用的数据结构，用于表示空间中的离散化点、线、面或体元素，边界构建模块20在进行边界网格构建时既可以使用四面体网格进行构建，同时也可以使用六面体网格进行构建，抑或是混合网格实现，四面体网格是由连接在一起的四面体元素组成的网格，在三维空间中可以表示体积和复杂几何体，仿真元器件的构成则具有一定的复杂程度。元器件构建模块30，用于在边界网格内，根据元器件结构和元器件结构尺寸构建至少一个几何体网格并组合生成元器件网格；具体的，一个仿真元器件通常由多个基础的几何体构成，比如常见的微带线，则是由多个长方体共同构建，通过分别构建每个长方体，最后再进行组合，再比如一个封装的电容，则由一个圆柱体即可实现整体结构的构建，而元器件构建模块30同时构建多个基础的几何体进而组成仿真元器件整体结构的方式可以使仿真元器件的构建更具多样性，利用四面体网格的特性，则会使这一构建过程更加灵活，组合以后能够形成完整的仿真元器件的整体样式，成为用户使用时所能看见的最终形态。端口构建模块40，用于根据配置参数构建元器件端口网格；具体的，仿真元器件最终要应用于整体电路结构的设计，通常电路由若干个元器件共同组成，多个元器件之间通过连线进行电能和信号的传输，就像在现实中进行电路的搭建时，元器件通常具有管脚，以便用户在使用时进行连线，仿真元器件也是一样，端口构建模块40在进行元器件端口网格的构建即仿真元器件引脚或连接面的构建过程，主要包括线端口和面端口两种，以实现在仿真过程中沟通各个元器件形成仿真电路。组合模块50，用于通过布尔运算组合边界网格、元器件网格以及元器件端口网格，生成三维的仿真元器件；具体的，边界网格、元器件网格以及元器件端口网格是通过边界构建模块20、元器件构建模块30和端口构建模块40分别独立进行构建完成的，此时三者并非一个整体，在进行电路仿真时，需要进行电磁有限元仿真，元器件各个结构分立则不能实现此目的，需要进行结合。组合模块50在进行结合的过程应用布尔运算，布尔运算在计算机图形学和三维建模中用于操作和组合几何体，通过布尔运算，可以对独立的四面体网格结构进行合并、相交、减去等操作，以便创建更复杂的几何体，形成仿真元器件最完整的形态。文件生成模块60，用于根据仿真元器件生成仿真元器件网格文件。在一个实现中，一种仿真元器件的构建装置，还包括：信息标注模块，用于对边界网格、元器件网格以及元器件端口网格分别添加标注信息；网格加密模块，对边界网格、元器件网格以及元器件端口网格分别进行网格加密。具体的，信息标注模块在网格上添加标注信息是为了增强模型的可理解性、可视化效果、文档化和数据交流能力，以便在仿真过程中进行监测和分析，标注可以帮助将设计或分析结果传达给其他人员，以便共享信息和决策，在文档化过程中，标注可以作为解释、说明和说明，提供关键细节和背景信息。网格加密模块可以将网格细分为更小的单元，以增加模拟或计算的精度。这种操作可以在数值模拟、结构分析等领域中用来改进结果的准确性，使得几何更精细，更准确地捕捉复杂几何形状、细节和曲线。未加密网格可能无法有效地表示弯曲或复杂的几何特征，而细分后的网格可以更好地逼近实际几何。更准确的数值解，在数值模拟中，网格加密会导致更小的单元，从而使数值方程在每个单元内的近似更精确。这有助于减少数值误差，并提供更准确的结果。当然，网格加密模块既可以进行整体加密，也可以有选择性地加密某局部位置，在有限计算资源下提供更好的结果。在一个实现中，一种仿真元器件的构建装置，还包括：参数存储模块，用于通过Json配置文件存储仿真元器件的配置参数，并使配置参数的数据格式一致。基于相同的技术构思，本申请还提供了一种计算机可读存储介质，其上存储有计算机程序，计算机程序被处理器执行时实现上述仿真元器件的构建方法。应当说明的是，上述实施例均可根据需要自由组合。以上仅是本申请的优选实施方式，应当指出，对于本技术领域的普通技术人员来说，在不脱离本申请原理的前提下，还可以做出若干改进和润饰，这些改进和润饰也应视为本申请的保护范围。
