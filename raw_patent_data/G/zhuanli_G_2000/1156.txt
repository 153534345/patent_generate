标题title
中断控制器的自动测试方法、系统及相关设备
摘要abst
本发明适用于计算机领域，提供了一种中断控制器的自动测试方法、系统及相关设备。本发明所达到的有益效果，在于将测试的过程分为配置测试用例、生成测试文件以及执行测试文件得到中断控制器的测试结果，将过程分层使得测试过程更加灵活；测试用例可以进行定向配置、随机配置以及手动配置，定向配置实现对中断控制器定向测试用例的持续集成，随机配置实现对中断控制器的随机测试，可手动配置测试用例使得测试用例生成更灵活，同时三种配置方式保证了中断控制器的测试覆盖率并且满足了测试方法的完备性和高效性；采用头文件让测试程序的源码更加简洁，便于在测试发现问题时，测试人员能够快速的核对寄存器值，提高了审核以及调试分析的效率。
权利要求书clms
1.一种中断控制器的自动测试方法，其特征在于，所述自动测试方法包括以下步骤：基于脚本语言建立所述中断控制器的自动测试脚本，所述自动测试脚本用于配置测试用例以及生成头文件；通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存；其中，所述参数包括所述测试用例的名称、所述测试用例的输入和输出的属性设定和连接关系、所述测试用例的预设中断行为以及所述测试用例的预期中断行为；通过所述自动测试脚本根据所述测试用例的参数，计算出所述中断控制器对应的寄存器值，并生成与所述寄存器值对应的宏命令的所述头文件；依次将所述头文件在编程语言中运行，生成与所述测试用例对应的测试文件；执行所述测试文件，得到所述中断控制器的测试结果。2.如权利要求1所述的中断控制器的自动测试方法，其特征在于，所述通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存的步骤中，所述测试用例使用Json记录和保存。3.如权利要求1所述的中断控制器的自动测试方法，其特征在于，在通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存的步骤中，配置包括定向配置、随机配置以及手动配置中的任意一种。4.如权利要求3所述的中断控制器的自动测试方法，其特征在于，所述定向配置具体为：通过在所述自动测试脚本中确定明确的约束并自动配置生成所述测试用例；所述随机配置具体为：通过在所述自动测试脚本中增加受约束的随机值，从而随机生成所述测试用例。5.如权利要求1所述的中断控制器的自动测试方法，其特征在于，所述脚本语言为Pyhton。6.如权利要求1所述的中断控制器的自动测试方法，其特征在于，所述测试文件的格式为elf。7.一种中断控制器的自动测试系统，其特征在于，所述自动测试系统包括：脚本模块，基于脚本语言建立所述中断控制器的自动测试脚本，所述自动测试脚本用于配置测试用例以及生成头文件；配置模块，通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存；其中，所述参数包括所述测试用例的名称、所述测试用例的输入和输出的属性设定和连接关系、所述测试用例的预设中断行为以及所述测试用例的预期中断行为；头文件模块，通过所述自动测试脚本根据所述测试用例的参数，计算出所述中断控制器对应的寄存器值，并生成与所述寄存器值对应的宏命令的所述头文件；运行模块，依次将所述头文件在编程语言中运行，生成与所述测试用例对应的测试文件；执行模块，执行所述测试文件，得到所述中断控制器的测试结果。8.一种计算机设备，其特征在于，包括：存储器、处理器及存储在所述存储器上并可在所述处理器上运行的中断控制器的自动测试程序，所述处理器执行所述中断控制器的自动测试程序时实现如权利要求1-6中任意一项所述的中断控制器的自动测试方法中的步骤。9.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质上存储有中断控制器的自动测试程序，所述中断控制器的自动测试程序被处理器执行时实现如权利要求1-6中任意一项所述的中断控制器的自动测试方法中的步骤。
说明书desc
技术领域本发明适用于计算机领域，尤其涉及一种中断控制器的自动测试方法、系统及相关设备。背景技术中断控制器是计算机系统的关键组成部分。RISC-V 提出了平台级中断控制器用于配合RISC-V 处理器良好的支持各种计算业务。平台级中断控制器有以下特点：输入众多：最多支持1023个输入源头。输出众多：最多支持15872个输出。配置灵活：可支持一对一，一对多，多对一设置。优先级配置：输入支持7级优先级配置，输出支持7级门限设置，同一优先级中断根据输入顺序定优先级。而平台级中断控制器需要海量的测试用例保证其质量的可靠性，在现有技术中通常有两个方向：通过尽可能全的测试用例覆盖保证质量；通过构造特别的测试用例去探测corner case是否存在。但是前者导致了测试用例数量众多，后者导致了测试用例持续集成的需求。并且现有技术中只能自动生成规则清晰的用例；不易于配合平台级中断控制器硬件实现进行修改，也不易于增加测试用例；并且测试过程没有实现分层无法实现灵活的随机测试。发明内容本发明提供一种中断控制器的自动测试方法、系统及相关设备，旨在解决平台级中断控制器的测试覆盖率不全的问题，同时保证平台级中断控制器测试用例的增加、更改、审核以及调试的效率。第一方面，本发明提供一种中断控制器的自动测试方法，所述自动测试方法包括以下步骤：基于脚本语言建立所述中断控制器的自动测试脚本，所述自动测试脚本用于配置测试用例以及生成头文件；通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存；其中，所述参数包括所述测试用例的名称、所述测试用例的输入和输出的属性设定和连接关系、所述测试用例的预设中断行为以及所述测试用例的预期中断行为；通过所述自动测试脚本根据所述测试用例的参数，计算出所述中断控制器对应的寄存器值，并生成与所述寄存器值对应的宏命令的所述头文件；依次将所述头文件在编程语言中运行，生成与所述测试用例对应的测试文件；执行所述测试文件，得到所述中断控制器的测试结果。优选的，所述通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存的步骤中，所述测试用例使用Json记录和保存。优选的，在通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存的步骤中配置包括定向配置、随机配置以及手动配置中的任意一种。优选的，所述定向配置具体为：通过在所述自动测试脚本中确定明确的约束并自动配置生成所述测试用例；所述随机配置具体为：通过在所述自动测试脚本中增加受约束的随机值，从而随机生成所述测试用例。优选的，所述脚本语言为Pyhton。优选的，所述测试文件的格式为elf。第二方面，本发明还提供一种中断控制器的自动测试系统，所述自动测试系统包括：脚本模块，基于脚本语言建立所述中断控制器的自动测试脚本，所述自动测试脚本用于配置测试用例以及生成头文件；配置模块，通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存；其中，所述参数包括所述测试用例的名称、所述测试用例的输入和输出的属性设定和连接关系、所述测试用例的预设中断行为以及所述测试用例的预期中断行为；头文件模块，通过所述自动测试脚本根据所述测试用例的参数，计算出所述中断控制器对应的寄存器值，并生成与所述寄存器值对应的宏命令的所述头文件；运行模块，依次将所述头文件在编程语言中运行，生成与所述测试用例对应的测试文件；执行模块，执行所述测试文件，得到所述中断控制器的测试结果。第三方面，本发明还提供一种计算机设备，包括：存储器、处理器及存储在所述存储器上并可在所述处理器上运行的中断控制器的自动测试程序，所述处理器执行所述中断控制器的自动测试程序时实现如上述实施例中任意一项所述的中断控制器的自动测试方法中的步骤。第四方面，本发明还提供一种计算机可读存储介质，所述计算机可读存储介质上存储有中断控制器的自动测试程序，所述中断控制器的自动测试程序被处理器执行时实现如上述实施例中任意一项所述的中断控制器的自动测试方法中的步骤。本发明所达到的有益效果，在于将测试的过程分为配置测试用例、生成测试文件以及执行测试文件得到中断控制器的测试结果，将过程分层使得测试过程更加灵活；测试用例可以进行定向配置、随机配置以及手动配置，定向配置实现对中断控制器定向测试用例的持续集成，随机配置实现对中断控制器的随机测试，并且可手动配置测试用例使得测试用例生成更灵活，同时三种配置方式保证了中断控制器的测试覆盖率并且满足了测试方法的完备性和高效性；采用头文件让测试程序的源码更加简洁，便于在测试发现问题时，测试人员能够快速的核对寄存器值，提高了审核以及调试分析的效率；基于Python建立自动测试脚本，并配合Json记录和保存测试用例提高了测试用例的增加、改动、审核的效率，通过自动测试脚本自动配置测试用例和生成测试文件从而达到低成本实现高质量的测试。附图说明下面结合附图详细说明本发明。通过结合以下附图所作的详细描述，本发明的上述或其他方面的内容将变得更清楚和更容易理解。附图中：图1是本发明实施例提供的中断控制器的自动测试方法的流程框图；图2是本发明实施例提供的中断控制器的自动测试系统的结构示意图；图3是本发明实施例提供的中断控制器的自动测试计算机设备的结构示意图。具体实施方式下面结合附图详细说明本发明的具体实施方式。在此记载的具体实施方式/实施例为本发明的特定的具体实施方式，用于说明本发明的构思，均是解释性和示例性的，不应解释为对本发明实施方式及本发明范围的限制。除在此记载的实施例外，本领域技术人员还能够基于本申请权利要求书和说明书所公开的内容采用显而易见的其它技术方案，这些技术方案包括采用对在此记载的实施例的做出任何显而易见的替换和修改的技术方案，都在本发明的保护范围之内。请参考图1，图1是本发明实施例提供的中断控制器的自动测试方法的流程框图，本发明提供一种中断控制器的自动测试方法，所述自动测试方法包括以下步骤：S101、基于脚本语言建立所述中断控制器的自动测试脚本，所述自动测试脚本用于配置测试用例以及生成头文件；在本发明实施例中，脚本语言采用Python这种支持面向对象的脚本语言。S102、通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存；其中，所述参数包括所述测试用例的名称、所述测试用例的输入和输出的属性设定和连接关系、所述测试用例的预设中断行为以及所述测试用例的预期中断行为；在本发明实施例中，根据平台级中断控制器PLIC的定义，输入和输出具备非常灵活配置实现一对一，一对多，多对多的中断配置。例如，在具有63个输入和16个输出的中断控制器中，可以实现的组合是非常多的。因此平台级中断控制器PLIC的测试需要满足多种测试用例的配置方式，以满足验证覆盖率的需求。而本发明提供了三种配置方式，1、定向配置：在测试的基本功能验证阶段和完备功能验证阶段的定向测试，通过明确的约束自动配置生成测试用例；2、随机配置：在测试的基本功能验证阶段和完备功能验证阶段的随机测试，通过随机的约束自动配置生成测试用例；3、边界情况验证阶段的定向补充测试，通过手动配置约束生成测试用例。三种配置方式有效保证了平台级中断控制器的测试覆盖率。本发明很好的支持中断控制器在不同测试阶段，不同测试方法的完备性和高效性。在本发明实施例中，在配置出多个测试用例后使用Json记录和保存测试用例，这有益于保证测试用例增加、改动、审核的效率。示例性的，以随机配置为例，随机配置的步骤为：随机中断源的数量；根据中断源的数量，随机选取中断序号；对每一个中断源，随机选择优先级权重，随机选择触发方式；随机选择输出的数量、序号以及权重；配置好测试用例的参数，最后将这些信息记录和保存在Json文件中。S103、通过所述自动测试脚本根据所述测试用例的参数，计算出所述中断控制器对应的寄存器值，并生成与所述寄存器值对应的宏命令的所述头文件；在本发明实施例中，通过自动测试脚本根据测试用例计算出对应的寄存器值，再生成具有清晰明确的宏定义的C语言头文件，这样在C语言代码中每个测试用例的差异体现就局限于寄存器值，这便于在调试过程中技术人员核对寄存器配置时间和难度降低。S104、依次将所述头文件在编程语言中运行，生成与所述测试用例对应的测试文件；在本发明实施例中，生成的测试文件为可执行可链接的elf文件格式。S105、执行所述测试文件，得到所述中断控制器的测试结果。在本发明实施例中，上述步骤中的Json文件和C语言头文件也会在得到测试结果后保存下来，以便于在后续进行回归测试的时候进行验证。本发明所达到的有益效果，在于将测试的过程分为配置测试用例、生成测试文件以及执行测试文件得到中断控制器的测试结果，将过程分层使得测试过程更加灵活；测试用例可以进行定向配置、随机配置以及手动配置，定向配置实现对中断控制器定向测试用例的持续集成，随机配置实现对中断控制器的随机测试，并且可手动配置测试用例使得测试用例生成更灵活，同时三种配置方式保证了中断控制器的测试覆盖率并且满足了测试方法的完备性和高效性；采用头文件让测试程序的源码更加简洁，便于在测试发现问题时，测试人员能够快速的核对寄存器值，提高了审核以及调试分析的效率；基于Python建立自动测试脚本，并配合Json记录和保存测试用例提高了测试用例的增加、改动、审核的效率，通过自动测试脚本自动配置测试用例和生成测试文件从而达到低成本实现高质量的测试。本发明实施例还提供一种中断控制器的自动测试系统，请参照图2，图2是本发明实施例提供的中断控制器的自动测试系统200的结构示意图，其包括：201、脚本模块，基于脚本语言建立所述中断控制器的自动测试脚本，所述自动测试脚本用于配置测试用例以及生成头文件；在本发明实施例中，脚本语言采用Python这种支持面向对象的脚本语言。202、配置模块，通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存；其中，所述参数包括所述测试用例的名称、所述测试用例的输入和输出的属性设定和连接关系、所述测试用例的预设中断行为以及所述测试用例的预期中断行为；在本发明实施例中，根据平台级中断控制器PLIC的定义，输入和输出具备非常灵活配置实现一对一，一对多，多对多的中断配置。例如，在具有63个输入和16个输出的中断控制器中，可以实现的组合是非常多的。因此平台级中断控制器PLIC的测试需要满足多种测试用例的配置方式，以满足验证覆盖率的需求。而本发明提供了三种配置方式，1、定向配置：在测试的基本功能验证阶段和完备功能验证阶段的定向测试，通过明确的约束自动配置生成测试用例；2、随机配置：在测试的基本功能验证阶段和完备功能验证阶段的随机测试，通过随机的约束自动配置生成测试用例；3、边界情况验证阶段的定向补充测试，通过手动配置约束生成测试用例。三种配置方式有效保证了平台级中断控制器的测试覆盖率。本发明很好的支持中断控制器在不同测试阶段，不同测试方法的完备性和高效性。在本发明实施例中，在配置出多个测试用例后使用Json记录和保存测试用例，这有益于保证测试用例增加、改动、审核的效率。203、头文件模块，通过所述自动测试脚本根据所述测试用例的参数，计算出所述中断控制器对应的寄存器值，并生成与所述寄存器值对应的宏命令的所述头文件；在本发明实施例中，通过自动测试脚本根据测试用例计算出对应的寄存器值，再生成具有清晰明确的宏定义的C语言头文件，这样在C语言代码中每个测试用例的差异体现就局限于寄存器值，这便于在调试过程中技术人员核对寄存器配置时间和难度降低。204、运行模块，依次将所述头文件在编程语言中运行，生成所述测试用例对应的测试文件；在本发明实施例中，生成的测试文件为可执行可链接的elf文件格式。205、执行模块，执行所述测试文件，得到所述中断控制器的测试结果。在本发明实施例中，上述步骤中的Json文件和C语言头文件也会在得到测试结果后保存下来，以便于在后续进行回归测试的时候进行验证。所述中断控制器的自动测试系统200能够实现如上述实施例中的中断控制器的自动测试方法中的步骤，且能实现同样的技术效果，参上述实施例中的描述，此处不再赘述。本发明实施例还提供一种计算机设备，请参照图3，图3是本发明实施例提供的计算机设备的结构示意图，所述计算机设备300包括：存储器302、处理器301及存储在所述存储器302上并可在所述处理器301上运行的中断控制器的自动测试程序。所述处理器301调用所述存储器302存储的中断控制器的自动测试程序，执行本发明实施例提供的中断控制器的自动测试方法中的步骤，请结合图1，具体包括以下步骤：S101、基于脚本语言建立所述中断控制器的自动测试脚本，所述自动测试脚本用于配置测试用例以及生成头文件；S102、通过所述自动测试脚本配置多个所述测试用例的参数，并将多个所述测试用例记录和保存；其中，所述参数包括所述测试用例的名称、所述测试用例的输入和输出的属性设定和连接关系、所述测试用例的预设中断行为以及所述测试用例的预期中断行为；S103、通过所述自动测试脚本根据所述测试用例的参数，计算出所述中断控制器对应的寄存器值，并生成与所述寄存器值对应的宏命令的所述头文件；S104、依次将所述头文件在编程语言中运行，生成与所述测试用例对应的测试文件；S105、执行所述测试文件，得到所述中断控制器的测试结果。本发明实施例提供的计算机设备300能够实现如上述实施例中的中断控制器的自动测试方法中的步骤，且能实现同样的技术效果，参上述实施例中的描述，此处不再赘述。本发明实施例还提供一种计算机可读存储介质，所述计算机可读存储介质上存储有中断控制器的自动测试程序，该中断控制器的自动测试程序被处理器执行时实现本发明实施例提供的中断控制器的自动测试方法中的各个过程及步骤，且能实现相同的技术效果，为避免重复，这里不再赘述。本领域普通技术人员可以理解实现上述实施例方法中的全部或部分流程，是可以通过计算机程序来指令相关的硬件来完成，所述的程序可存储于一计算机可读取存储介质中，该程序在执行时，可包括如上述各方法的实施例的流程。其中，所述的存储介质可为磁碟、光盘、只读存储记忆体或随机存取存储器等。需要说明的是，在本文中，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者装置不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者装置所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括该要素的过程、方法、物品或者装置中还存在另外的相同要素。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到上述实施例方法可借助软件加必需的通用硬件平台的方式来实现，当然也可以通过硬件，但很多情况下前者是更佳的实施方式。基于这样的理解，本发明的技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台终端执行本发明各个实施例所述的方法。上面结合附图对本发明的实施例进行了描述，所揭露的仅为本发明较佳实施例而已，但是本发明并不局限于上述的具体实施方式，上述的具体实施方式仅仅是示意性的，而不是限制性的，本领域的普通技术人员在本发明的启示下，在不脱离本发明宗旨和权利要求所保护的范围情况下，还可做出很多形式用等同变化，均属于本发明的保护之内。
