标题title
救援时间限制下基于性能影响的多机器人任务分配方法
摘要abst
本发明公开了一种救援时间限制下基于性能影响的多机器人任务分配方法，包括：S1、配置多机器人任务分配时的相关参数；S2、基于相关参数，使用性能影响算法构造多机器人任务分配方案初始解；S3、基于改进的性能影响算法对任务分配方案初始解进行优化，获得新的任务分配方案；S4、利用扰动机制和改进策略对新的任务分配方案优化，获得最终任务分配方案；本发明设计了改进性能影响算法来获得初始分配方案，使每个机器人能够独立计算其分配方案。基于不同的局部搜索策略，提出一种扰动机制和局部搜索改进策略，将改进性能影响算法与扰动机制和提升策略相结合，得到一种耦合的性能影响算法，与传统的性能影响算法相比，该算法解的质量更高。
权利要求书clms
1.救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，包括以下步骤：S1、配置多机器人任务分配时的相关参数；S2、基于配置的相关参数，使用性能影响算法构造多机器人任务分配方案初始解；S3、基于改进的性能影响算法对任务分配方案初始解进行优化，获得新的任务分配方案；S4、利用扰动机制和改进策略对新的任务分配方案进行优化，获得最终任务分配方案；其中，扰动机制包括交换操作和2-opt操作；改进策略为优先全局任务插入再耦合1-opt阶段。2.根据权利要求1所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S1中的相关参数包括：各机器人的初始位置点/＞与各待营救幸存者的目标点的位置之间欧氏距离的代价矩阵/＞；其中，下标n为目标点的数量，下标m为机器人的数量；各机器人在各目标点执行营救任务所消耗的时间/＞；各机器人与目标点的对应关系，若机器人/＞能为目标点/＞提供所需救援服务，则设置参数/＞，反之/＞；所述步骤S1中，基于配置的相关参数，将各机器人的任务列表表示为，其中，/＞表示机器人/＞在对应的救援截止时间前服务于其指定位置的幸存者的路径，/＞表示机器人/＞在其路径/＞的第/＞个位置访问位于目标点位置/＞的幸存者；其中，机器人沿着路径/＞移动到第/＞个救援位置/＞时的总服务时间/＞表示为：式中，为机器人/＞的位置，/＞机器人/＞的移动速度，/＞为表示机器人在目标点/＞执行营救任务所消耗的时间，/＞表示机器人/＞沿着路径/＞移动到第/＞个救援位置。3.根据权利要求2所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S2具体为：S21、任务插入阶段：根据各机器人的任务插入性能影响将任务插入至机器人任务列表；S22、共识及任务移除阶段：在各机器人之间通过通信连接网络更新任务移除性能影响和机器人任务列表，并基于任务移除性能影响列表将冲突任务从任务列表中移除；S23、收敛判断：判断各机器人的任务列表是否有新的任务插入操作或任务移除操作；若是，则返回步骤S21，执行对应操作；若否，则算法收敛，获得任务分配方案初始解。4.根据权利要求3所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S21中，将任务插入至机器人任务列表的判定公式为：式中，当，则将对应的任务插入到机器人的任务列表，/＞为机器人r当前已知的任务t的最小移除性能影响，/＞为任务插入性能影响IPI，其计算公式为：式中，为操作算子，表示将任务/＞插入到/＞的位置/＞处，/＞为服务时长计算函数，为机器人任务列表/＞中包含的任务数量；所述步骤S22中，将冲突任务从任务列表中移除的公式为：式中，当时，存在需要移除的冲突任务/＞，/＞为机器人r当前已知的任务t的最小移除性能影响，/＞为任务移除性能影响RPI，其计算公式为：式中，为操作算子，表示将任务/＞从路径/＞中移除。5.根据权利要求3所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S3具体为：S31、计算任务插入阶段的新的任务插入性能影响IPI；S32、计算任务移除阶段的新的任务移除性能影响RPI；S33、按照新的任务插入性能影响IPI和任务移除性能RPI，在各机器人的任务列表循环执行任务插入阶段和共识及任务移除阶段，直到算法收敛，获得新的任务分配方案。6.根据权利要求5所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S31中，计算新的任务插入性能影响IPI时，定义待分配救援任务集合，对于任意待分配任务/＞，设置其满足条件/＞，/＞以及/＞，其中，/＞为设定常数；任意待分配任务的任务插入性能影响计算方法为：若存在位置，使得将待分配的任务/＞插入到路径/＞中后，路径上所有任务仍满足救援截止时间约束，则将任务/＞的IPI设置为0；所述步骤S32中，计算新的任务移除性能影响初始化RPI时，将未分配的任务RPI设置为最大定值 ，已分配任务的RPI设置为0；机器人的任务列表/＞中任务/＞的新的RPI的计算方法为：如果中的任务/＞可以被任务/＞替换，则任务/＞的RPI计算为/＞的RPI减去常数/＞，如果中的任务/＞可以被两个或多个具有不同RPI的任务/＞替换，将其最高的RPI作为新的RPI；所述步骤S33中，循环执行任务插入阶段和共识及任务移除阶段时：设置任务移除的限制次数，对于任意机器人/＞任务列表上的任务/＞，初始化其移除次数为/＞；在任务移除阶段，将任务从机器人/＞中移除时/＞的值增加1；在任务插入阶段，待分配给机器人的救援任务/＞满足/＞。7.根据权利要求5所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S4具体为：S41、对任务分配方案中各机器人任务列表执行交换操作，并判断是否得到更优的任务分配方案；若是，则进入步骤S42；若否，则进入步骤S43；S42、更新当前任务分配方案中的各机器人任务列表，进入步骤S46；S43、对任务分配方案中的各机器人任务列表执行2-opt操作，并判断是否得到更优的任务分配方案；若是，则进入步骤S44；若否，则进入步骤S45；S44、则更新当前任务分配方案中的各机器人任务列表，进入步骤S46；S45、保留当前最优方案作为当前任务分配方案，进入步骤S46；S46、执行待分配任务集合的全局任务插入，计算任务插入代价g+，并判断是否成立； 其中，/＞为设置的任务插入性能影响阈值；若是，则更新待分配任务集合及当前任务列表，并返回步骤S41；若否，则进入耦合的1-opt阶段，并确定最终任务分配方案。8.根据权利要求7所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S41中的交换操作为：在具有相同功能的机器人之间交换其任务列表；所述步骤S43中的2-opt操作为：当两个机器人具有相同功能或救援任务服务类型相同时，在其之间交换两个任务的分配。9.根据权利要求7所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S46具体为：S46-1、对于待分配任务集合，计算全局任务插入时的任务插入代价；其中，/＞为待分配任务/＞对应的路径；S46-2、判断是否成立；其中，/＞为设置的任务插入性能影响阈值；若是，则进入步骤S46-3；若否，则进入步骤S46-4；S46-3、更新未分配任务集合和机器人当前任务列表，并返回步骤S41；S46-4、进入耦合的1-opt阶段，计算最大总节省服务时间；S46-5、判断是否成立；若是，更新未分配任务集合，并返回步骤S41；若否，则将当前分配方案作为最终任务分配方案。10.根据权利要求9所述的救援时间限制下基于性能影响的多机器人任务分配方法，其特征在于，所述步骤S46-4中，最大总节省服务时间，其计算公式为：式中，和/＞为机器人集合/＞中的两个机器人，/＞为从机器人/＞中移除的任务，/＞为待分配任务集合中的任务或从机器人/＞中移除的任务/＞，/＞为任务/＞分配到机器人/＞的位置，/＞为将任务/＞从路径/＞中移除的移除性能影响，/＞将任务/＞插入到路径/＞中的插入性能影响。
说明书desc
技术领域本发明属于多机器人系统技术领域，具体涉及一种救援时间限制下基于性能影响的多机器人任务分配方法。背景技术近年来，多机器人系统被越来越多地用于完成各种复杂的任务，如救灾、区域勘探、环境监测、地形测绘和物流等。多机器人任务分配与高效完成任务之间密不可分，是实现任务高效完成的关键。不同的任务分配问题可能涉及到不同的变量，如机器人数量、任务数量、任务紧急程度、任务类型、机器人能力等等。因此，需要根据实际应用场景的需求，设计相应的任务分配算法，以保证算法的有效性和高效性。在灾难救援场景中，多机器人任务分配问题被广泛应用于搜索和救援、灾后重建、环境监测等方面，以提高救援效率和质量。在搜索和救援方面，多机器人任务分配可以协调多个机器人优化搜索和救援任务，提高搜救幸存者的速度和效率。多机器人任务分配问题是一个复杂的NP难问题，其研究主要存在以下几个问题：首先，多机器人任务分配问题需要考虑机器人的操作时间，即机器人在完成任务的过程中，需要考虑电量、燃料等资源的限制。然而，现有的多机器人任务分配算法大多没有考虑机器人操作时间的限制，导致机器人可能在任务完成之前耗尽资源，从而无法完成任务。此外，在救援场景下，任务的完成时间往往是非常紧迫的，需要在规定的时间内完成任务。然而，现有的多机器人任务分配算法往往没有考虑救援截止时间的限制，导致任务的完成时间无法满足救援的要求。其次，多机器人任务分配问题需要同时考虑多个目标，如任务完成时间、任务完成质量、数量等多个因素。然而，现有的多机器人任务分配算法往往只考虑了单一目标，没有考虑多目标优化问题，导致算法的性能不够优秀。最后，随着机器人数量的增加，多机器人任务分配问题的规模也会不断增大，需要设计可扩展的算法来解决大规模任务分配问题。然而，现有的多机器人任务分配算法往往不能很好地扩展到大规模问题中，导致算法的实用性受到限制。经典的启发式算法有最小边际代价算法和最大化任务分配的性能影响算法：其中最大化任务分配的性能影响算法旨在最大化可执行的任务数量，但其没有考虑多目标优化的情况；最小边际代价算法属于基于经验的启发式算法，其耗时较短，但缺乏对解空间的广域搜索能力，导致解的质量较低。发明内容针对现有技术中的上述不足，本发明提供的救援时间限制下基于性能影响的多机器人任务分配方法是一种在灾难救援背景下，在有限工作时长和救援截止时间约束下的多机器人多目标点幸存者救援任务分配方法。为了达到上述发明目的，本发明采用的技术方案为：救援时间限制下基于性能影响的多机器人任务分配方法，包括以下步骤：S1、配置多机器人任务分配时的相关参数；S2、基于配置的相关参数，使用性能影响算法构造多机器人任务分配方案初始解；S3、基于改进的性能影响算法对任务分配方案初始解进行优化，获得新的任务分配方案；S4、利用扰动机制和改进策略对新的任务分配方案进行优化，获得最终任务分配方案；其中，扰动机制包括交换操作和2-opt操作；改进策略为优先全局任务插入再耦合1-opt阶段。进一步地，所述步骤S1中的相关参数包括：各机器人的初始位置点/＞与各待营救幸存者的目标点/＞的位置之间欧氏距离的代价矩阵/＞；其中，下标n为目标点的数量，下标m为机器人的数量；各机器人在各目标点执行营救任务所消耗的时间/＞；各机器人与目标点的对应关系，若机器人/＞能为目标点/＞提供所需救援服务，则设置参数/＞，反之/＞；所述步骤S1中，基于配置的相关参数，将各机器人的任务列表表示为，其中，/＞表示机器人/＞在对应的救援截止时间前服务于其指定位置的幸存者的路径，/＞表示机器人/＞在其路径/＞的第/＞个位置访问位于目标点位置/＞的幸存者；其中，机器人沿着路径/＞移动到第/＞个救援位置/＞时的总服务时间/＞表示为：式中，为机器人/＞的位置，/＞机器人/＞的移动速度，/＞为表示机器人在目标点/＞执行营救任务所消耗的时间，/＞表示机器人/＞沿着路径/＞移动到第/＞个救援位置。进一步地，所述步骤S2具体为：S21、任务插入阶段：根据各机器人的任务插入性能影响将任务插入至机器人任务列表；S22、共识及任务移除阶段：在各机器人之间通过通信连接网络更新任务移除性能影响和机器人任务列表，并基于任务移除性能影响列表将冲突任务从任务列表中移除；S23、收敛判断：判断各机器人的任务列表是否有新的任务插入操作或任务移除操作；若是，则返回步骤S21，执行对应操作；若否，则算法收敛，获得任务分配方案初始解。进一步地，所述步骤S21中，将任务插入至机器人任务列表的判定公式为：式中，当，则将对应的任务插入到机器人的任务列表，/＞为机器人r当前已知的任务t的最小移除性能影响，/＞为任务插入性能影响IPI，其计算公式为：式中，为操作算子，表示将任务/＞插入到/＞的位置/＞处，/＞为服务时长计算函数，/＞为机器人任务列表/＞中包含的任务数量；所述步骤S22中，将冲突任务从任务列表中移除的公式为：式中，当时，存在需要移除的冲突任务/＞，/＞为机器人r当前已知的任务t的最小移除性能影响，/＞为任务移除性能影响RPI，其计算公式为：式中，为操作算子，表示将任务/＞从路径/＞中移除。进一步地，所述步骤S3具体为：S31、计算任务插入阶段的新的任务插入性能影响IPI；S32、计算任务移除阶段的新的任务移除性能影响RPI；S33、按照新的任务插入性能影响IPI和任务移除性能RPI，在各机器人的任务列表循环执行任务插入阶段和共识及任务移除阶段，直到算法收敛，获得新的任务分配方案。进一步地，所述步骤S31中，计算新的任务插入性能影响IPI时，定义待分配救援任务集合，对于任意待分配任务/＞，设置其满足条件/＞，/＞以及/＞，其中，/＞为设定常数；任意待分配任务的任务插入性能影响计算方法为：若存在位置，使得将待分配的任务/＞插入到路径/＞中后，路径上所有任务仍满足救援截止时间约束，则将任务/＞的IPI设置为0；所述步骤S32中，计算新的任务移除性能影响初始化RPI时，将未分配的任务RPI设置为最大定值 ，已分配任务的RPI设置为0；机器人的任务列表/＞中任务/＞的新的RPI的计算方法为：如果中的任务/＞可以被任务/＞替换，则任务/＞的RPI计算为/＞的RPI减去常数/＞，如果/＞中的任务/＞可以被两个或多个具有不同RPI的任务/＞替换，将其最高的RPI作为新的RPI；所述步骤S33中，循环执行任务插入阶段和共识及任务移除阶段时：设置任务移除的限制次数，对于任意机器人/＞任务列表上的任务/＞，初始化其移除次数为/＞；在任务移除阶段，将任务从机器人/＞中移除时/＞的值增加1；在任务插入阶段，待分配给机器人的救援任务/＞满足/＞。进一步地，所述步骤S4具体为：S41、对任务分配方案中各机器人任务列表执行交换操作，并判断是否得到更优的任务分配方案；若是，则进入步骤S42；若否，则进入步骤S43；S42、更新当前任务分配方案中的各机器人任务列表，进入步骤S46；S43、对任务分配方案中的各机器人任务列表执行2-opt操作，并判断是否得到更优的任务分配方案；若是，则进入步骤S44；若否，则进入步骤S45；S44、则更新当前任务分配方案中的各机器人任务列表，进入步骤S46；S45、保留当前最优方案作为当前任务分配方案，进入步骤S46；S46、执行待分配任务集合的全局任务插入，计算任务插入代价g+，并判断是否成立； 其中，/＞为设置的任务插入性能影响阈值；若是，则更新待分配任务集合及当前任务列表，并返回步骤S41；若否，则进入耦合的1-opt阶段，并确定最终任务分配方案。进一步地，所述步骤S41中的交换操作为：在具有相同功能的机器人之间交换其任务列表；所述步骤S43中的2-opt操作为：当两个机器人具有相同功能或救援任务服务类型相同时，在其之间交换两个任务的分配。进一步地，所述步骤S46具体为：S46-1、对于待分配任务集合，计算全局任务插入时的任务插入代价；其中，/＞为待分配任务/＞对应的路径；S46-2、判断是否成立；其中，/＞为设置的任务插入性能影响阈值；若是，则进入步骤S46-3；若否，则进入步骤S46-4；S46-3、更新未分配任务集合和机器人当前任务列表，并返回步骤S41；S46-4、进入耦合的1-opt阶段，计算最大总节省服务时间；S46-5、判断是否成立；若是，更新未分配任务集合，并返回步骤S41；若否，则将当前分配方案作为最终任务分配方案。进一步地，所述步骤S46-4中，最大总节省服务时间，其计算公式为：式中，和/＞为机器人集合/＞中的两个机器人，/＞为从机器人/＞中移除的任务，/＞为待分配任务集合中的任务或从机器人/＞中移除的任务/＞，/＞为任务/＞分配到机器人/＞的位置，/＞为将任务/＞从路径/＞中移除的移除性能影响，/＞将任务插入到路径/＞中的插入性能影响。本发明的有益效果为：本发明设计了一个分布式的性能影响算法来获得初始分配方案，使每个机器人能够独立计算其分配方案。本发明中，基于不同的局部搜索策略，提出了一种扰动机制和局部搜索改进策略，即优先全局任务插入再耦合1-opt阶段，以对初始解进行破坏和提升。本发明中，将分布式性能影响算法与扰动机制和提升策略相结合，得到了一种耦合的性能影响算法，与传统的性能影响算法相比，该算法解的质量更高。附图说明图1为本发明提供的救援时间限制下基于性能影响的多机器人任务分配方法流程图。图2为本发明提供的交换操作下的路径对比示意图。图3为本发明提供的2-opt操作下的路径对比示意图。图4为本发明提供的任务分配仿真实验对比图。图5为本发明提供的任务分配仿真实验对比图。图6为本发明提供的任务分配仿真实验对比图药物配送；2）食物配送；3）药物和食物配送。因此，机器人的种类也有三种： 1)只能提供药物服务的机器人；2)只能提供食物服务的机器人；3)可以同时提供药物和食物服务的机器人；基于此，给定各机器人为各目标点提供对应救援服务的救援截止时间/＞、各机器人的移动速度/＞以及最大工作时间/＞；各机器人与目标点的对应关系，对于能够同时提供药物和食物服务的机器人而言，它可以为每个幸存者提供服务，而对于只能提供一种服务的单功能机器人，即机器人只能提供药物或食物服务，它只能为有相应需求的幸存者提供服务。若机器人能为目标点/＞提供所需救援服务，则设置参数/＞，反之/＞；在本发明实施例的步骤S1中，基于配置的相关参数，将各机器人的任务列表表示为，其中，/＞表示机器人/＞在对应的救援截止时间前服务于其指定位置的幸存者的路径，/＞表示机器人/＞在其路径/＞的第/＞个位置访问位于目标点位置的幸存者；其中，机器人沿着路径/＞移动到第/＞个救援位置/＞时的总服务时间/＞表示为：式中，为机器人/＞的位置，/＞机器人/＞的移动速度，/＞为表示机器人在目标点/＞执行营救任务所消耗的时间，/＞表示机器人/＞沿着路径/＞移动到第/＞个救援位置。其中，表示机器人/＞在幸存者的救援截止时间前访问有序列表/＞中所有救援地点以执行救援任务并返回基站进行必要维护所花费的总服务时间。为了简单起见，具有与/＞相同的定义。在本发明实施例的步骤S2中，使用性能影响算法构造任务分配方案初始解，性能影响算法包括任务插入阶段和共识及任务移除阶段两个阶段，这两个阶段迭代运行，直到分配方案收敛；基于此，本实施例步骤S2具体为：S21、任务插入阶段：根据各机器人的任务插入性能影响将任务插入至机器人任务列表；S22、共识及任务移除阶段：在各机器人之间通过通信连接网络更新任务移除性能影响和机器人任务列表，并基于任务移除性能影响列表将冲突任务从任务列表中移除；S23、收敛判断：判断各机器人的任务列表是否有新的任务插入操作或任务移除操作；若是，则返回步骤S21，执行对应操作；若否，则算法收敛，获得任务分配方案初始解。在本实施例步骤S21中，对于任务插入性能影响IPI的计算，对于机器人，/＞表示待分配给机器人/＞的救援任务，其中对于任意的任务/＞，满足条件/＞和/＞。为了降低机器人的总服务时间，针对所有待分配任务/＞，将/＞插入机器人/＞的当前路径/＞的任务插入性能影响IPI为：式中，为操作算子，表示将任务/＞插入到/＞的位置/＞处，/＞为服务时长计算函数，/＞为机器人任务列表/＞中包含的任务数量。基于此，在任务插入阶段，每个机器人首先将它可以执行的所有任务插入到任务列表中；如果当前分配无法进一步减少机器人的总服务时间，那么机器人的任务插入阶段结束，因此，根据下述判定公式将任务插入至机器人任务列表：式中，当，则将对应的任务插入到机器人的任务列表，/＞为机器人r当前已知的任务t的最小移除性能影响，/＞为任务插入性能影响IPI。在本实施例步骤S22中，对于任务移除性能RPI的计算，机器人的任意任务/＞的初始RPI被设置为一个较大值/＞。将任务/＞插入到任务列表/＞中后，将任务/＞从任务列表/＞中移除的移除性能影响RPI定义为：式中，操作算子表示将任务/＞从路径/＞中移除。对于机器人/＞，每个任务的RPI都被保留在其对应的RPI列表/＞中，其中/＞存储的是机器人/＞已知的任务/＞当前最小RPI。基于此，在本实施例步骤S22中，在共识及任务移除阶段中，类似于RPI列表，每个机器人/＞存储着一个机器人列表/＞，该列表记录了分配给每个任务/＞的机器人索引。在共识阶段，每个机器人存储在/＞和/＞中的RPI和机器人列表通过所有机器人全连通的通信连接网络更新，其中对于冲突的分配任务，即该任务同时被分配给多个机器人，具有较高RPI的机器人释放该任务，因为较低的RPI表示更高效的分配。在共识阶段之后，每个机器人都有相同的RPI列表和机器人列表，即机器人实现了普遍共识。在任务移除阶段，让集合包含路径/＞中的冲突任务，其中对于任意任务/＞，有/＞。在集合/＞中的任务按照如下公式被迭代地移除，直到/＞为空集。得到将冲突任务从任务列表中移除的公式为：式中，当时，存在需要移除的冲突任务/＞，/＞为机器人r当前已知的任务t的最小移除性能影响，/＞为任务移除性能影响RPI。在本发明实施例步骤S3中，为了使机器人能够执行最大数量的搜救和救援任务，本实施例中引入了一种改进的性能影响算法来最大化分配任务的数量，基于此，本实施例的步骤S3具体为：S31、计算任务插入阶段的新的任务插入性能影响IPI；S32、计算任务移除阶段的新的任务移除性能影响RPI；S33、按照新的任务插入性能影响IPI和任务移除性能RPI，在各机器人的任务列表循环执行任务插入阶段和共识及任务移除阶段，直到算法收敛，获得新的任务分配方案。在本实施例的步骤S31中，计算新的任务插入性能影响IPI时，定义待分配救援任务集合，对于任意待分配任务/＞，设置其满足条件/＞，/＞以及/＞，其中，/＞为设定常数；任意待分配任务的任务插入性能影响计算方法为：若存在位置，使得将待分配的任务/＞插入到路径/＞中后，路径上所有任务仍满足救援截止时间约束，则将任务/＞的IPI设置为0，即存在路径/＞为可行路径时，。在本实施例的步骤S32中，计算新的任务移除性能影响初始化RPI时，将未分配的任务RPI设置为最大定值 ，已分配任务的RPI设置为0；机器人的任务列表/＞中任务/＞的新的RPI的计算方法为：如果中的任务/＞可以被任务/＞替换，则任务/＞的RPI计算为/＞的RPI减去常数/＞，即存在可行路径/＞时，有/＞，其中，/＞表示将任务/＞从路径/＞中移除。如果中的任务/＞可以被两个或多个具有不同RPI的任务/＞替换，将其最高的RPI作为新的RPI；在本实施例的步骤S33中，循环执行任务插入阶段和共识及任务移除阶段时：为了避免算法进入无限循环和保障算法收敛，设置任务移除的限制次数，对于任意机器人/＞任务列表上的任务/＞，初始化其移除次数为/＞；在任务移除阶段，将任务从机器人/＞中移除时/＞的值增加1；在任务插入阶段，待分配给机器人的救援任务/＞满足/＞。在本发明实施例步骤S4中，为了实现更好的任务分配，本实施例设计了一个改进的扰动机制和改进策略，旨在进一步改进分配方案；其中，改进的扰动机制利用了两种局部搜索策略，包括交换操作和2-opt操作，改进策略为优先全局任务插入再耦合1-opt阶段。基于此，本实施例步骤S4具体为：S41、对任务分配方案中各机器人任务列表执行交换操作，并判断是否得到更优的任务分配方案；若是，则进入步骤S42；若否，则进入步骤S43；S42、更新当前任务分配方案中的各机器人任务列表，进入步骤S46；S43、对任务分配方案中的各机器人任务列表执行2-opt操作，并判断是否得到更优的任务分配方案；若是，则进入步骤S44；若否，则进入步骤S45；S44、则更新当前任务分配方案中的各机器人任务列表，进入步骤S46；S45、保留当前最优方案作为当前任务分配方案，进入步骤S46；S46、执行待分配任务集合的全局任务插入，计算任务插入代价g+，并判断是否成立； 其中，/＞为设置的任务插入性能影响阈值；若是，则更新待分配任务集合及当前任务列表，并返回步骤S41；若否，则进入耦合的1-opt阶段，并确定最终任务分配方案。在本实施例步骤S41中，如图2所示，交换操作为：在具有相同功能的机器人之间交换其任务列表；在本实施例步骤S43中，如图3所示，2-opt操作为：当两个机器人具有相同功能或救援任务服务类型相同时，在其之间交换两个任务的分配。本实施例的步骤S46具体为：S46-1、对于待分配任务集合，计算全局任务插入时的任务插入代价；其中，/＞为待分配任务/＞对应的路径；S46-2、判断是否成立；其中，/＞为设置的任务插入性能影响阈值；若是，则进入步骤S46-3；若否，则进入步骤S46-4；S46-3、更新未分配任务集合和机器人当前任务列表，并返回步骤S41S46-4、进入耦合的1-opt阶段，计算最大总节省服务时间；S46-5、判断是否成立；若是，更新未分配任务集合，并返回步骤S41；若否，则将当前分配方案作为最终任务分配方案。本实施例步骤S46-1中，令集合表示所有待分配任务集合，其中对于任意机器人及任务/＞，有/＞。然后，确定在当前/＞中要分配的救援任务/＞，以及分配给它的机器人/＞，以及插入位置/＞为：式中，和/＞为机器人集合/＞中的两个机器人，/＞为从机器人/＞中移除的任务，/＞为待分配任务集合中的任务或从机器人/＞中移除的任务/＞，/＞，/＞为任务/＞分配到机器人/＞的位置，/＞为将任务/＞从路径/＞中移除的移除性能影响，/＞将任务/＞插入到路径/＞中的插入性能影响。本实施例步骤S46-3中，若，则将分配的救援任务/＞从未分配任务集合/＞中移除，并插入到机器人/＞的路径/＞的位置/＞处，以更新未分配任务集合和机器人当前任务列表，并返回步骤S46-1。本实施例步骤S46-4中，从机器人的当前路径/＞中移除救援任务/＞，并将救援任务/＞重新分配到机器人/＞路径的位置/＞，得到最大总节省服务时间，其计算公式为：式中，和/＞为机器人集合/＞中的两个机器人，/＞为从机器人/＞中移除的任务，/＞为待分配任务集合中的任务或从机器人/＞中移除的任务/＞，/＞为任务/＞分配到机器人/＞的位置，/＞为将任务/＞从路径/＞中移除的移除性能影响，/＞将任务插入到路径/＞中的插入性能影响。在本实施例步骤S46-5中，如果为正数，则将任务/＞从路径/＞中移除并插入到未分配任务集合/＞中，将救援任务/＞从未分配任务集合/＞中移除并插入到路径/＞的位置/＞处，以更新未分配任务集合，并返回步骤S41。反之，算法结束。实施例2：本发明实施例提供了实施例1中方法的具体实验例；如图4~图6所示为本实施例为解决救援截止时间约束和工作时长约束下的多机器人在灾难救援背景下的位于多目标点的幸存者搜索与救援任务分配问题的仿真实验，图中PI-Copt为本发明设计的算法，PI-Dopt为本发明的对照算法，MMA表示最小边际代价算法，PI-MaxAss为多最大化任务分配的性能影响算法。图中所有目标点和仓库点都在的地图中随机生成，每个机器人在完成其分配的任务后必须返回基站。根据幸存者的需求，/＞个幸存者被分为三组：三分之一的幸存者需要药物，三分之一幸存者需要食物，其余幸存者同时需要药物和食物服务。相应地，三分之一的机器人只能提供食物服务，三分一的机器人只能供应药物服务，剩下的机器人可以同时提供药物和食物服务。对于只能提供药物/食物服务的机器人，设置30/50 m/s的恒定速度，而同时能提供药物和食物服务的机器人则保持40 m/s的移动速度。机器人只提供药物/食物服务的平均执行时间被设置为300/350秒，而同时提供药物/食物服务的平均执行时间则被设置为400秒。为每个幸存者提供服务的救援截止时间在0到4000秒的范围内随机设置，每个机器人的最大工作时长为4000 秒。/＞和/＞分别表示幸存者数量和机器人数量。对于每个/＞和/＞，随机生成40个不同幸存者和机器人位置的案例进行蒙特卡洛模拟。基于图4~图6所示的仿真实验图表明，与现有的性能影响算法PI-MaxAss和最小边际代价算法MMA相比，本发明方法具有优越的性能，因为它始终提供更优的解决方案。图4~图6显示，在固定幸存者数量的情况下，机器人可以服务的幸存者数量随着机器人数量的增加而显著增加。此外，图5和图6表明，与图4相比，MMA与本发明所设计的算法PI-Copt之间的性能差距显著。这展示了PI-Copt的可扩展性。本发明中应用了具体实施例对本发明的原理及实施方式进行了阐述，以上实施例的说明只是用于帮助理解本发明的方法及其核心思想；同时，对于本领域的一般技术人员，依据本发明的思想，在具体实施方式及应用范围上均会有改变之处，综上所述，本说明书内容不应理解为对本发明的限制。本领域的普通技术人员将会意识到，这里所述的实施例是为了帮助读者理解本发明的原理，应被理解为本发明的保护范围并不局限于这样的特别陈述和实施例。本领域的普通技术人员可以根据本发明公开的这些技术启示做出各种不脱离本发明实质的其它各种具体变形和组合，这些变形和组合仍然在本发明的保护范围内。
