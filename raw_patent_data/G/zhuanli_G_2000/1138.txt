标题title
一种基于客制化需求的程序处理方法和装置
摘要abst
本发明提供一种基于客制化需求的程序处理方法和装置，属于数据处理技术领域，具体包括：获取构建客制化需求的目标组件以及不同的目标组件的定制化处理的组件脚本，获取不同的目标组件在不同的应用场景下的历史异常处理数据，并结合不同的目标组件在不同的应用场景下与客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及目标组件中的不可靠目标组件的确定，通过客制化需求下的不同的目标组件的组件使用可靠性以及目标组件中的不可靠目标组件的数量进行客制化需求下的定制处理可靠性的确定，并当定制处理可靠性满足要求时，通过目标组件进行客制化需求下的程序处理，提升了程序处理的可靠性。
权利要求书clms
1.一种基于客制化需求的程序处理方法，其特征在于，具体包括：获取构建客制化需求的目标组件，并根据所述客制化需求进行不同的目标组件的定制化处理的组件脚本的确定；基于不同的目标组件在不同的应用场景下的应用的组件脚本的类型确定与所述客制化需求的场景相似度以及历史相似场景，根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行所述客制化需求下的组件处理可靠性的确定，当所述组件处理可靠性满足要求时，进入下一步骤；获取不同的目标组件在不同的应用场景下的历史异常处理数据，并结合不同的目标组件在不同的应用场景下与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的确定；通过所述客制化需求下的不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的数量进行所述客制化需求下的定制处理可靠性的确定，并当定制处理可靠性满足要求时，通过所述目标组件进行客制化需求下的程序处理。2.如权利要求1所述的基于客制化需求的程序处理方法，其特征在于，所述构建客制化需求的目标组件根据所述客制化需求的输入业务数据以及输出业务数据进行确定，具体的根据所述输入业务数据以及输出业务数据进行所述客制化需求的数据处理需求的确定，并根据所述数据处理需求确定构建所述客制化需求的目标组件。3.如权利要求1所述的基于客制化需求的程序处理方法，其特征在于，所述组件脚本根据所述目标组件的输入数据和输出数据进行确定，具体的根据所述目标组件的输入数据与所述客制化需求的输入业务数据的偏差情况、输出数据与所述客制化需求的输出业务数据的偏差情况进行所述组件脚本的确定。4.如权利要求1所述的基于客制化需求的程序处理方法，其特征在于，所述历史相似场景的确定的方法为：通过所述目标组件在不同的应用场景下的应用的组件脚本的类型以及所述客制化需求下的目标组件的定制化处理的组件脚本进行相同的组件脚本的数量的确定，并基于所述相同的组件脚本的数量确定与所述客制化需求的场景相似度，通过所述场景相似度确定历史相似场景。5.如权利要求1所述的基于客制化需求的程序处理方法，其特征在于，所述客制化需求下的组件处理可靠性的确定的方法为：根据不同的目标组件在不同的历史相似场景的历史异常处理数据确定存在所述历史异常处理数据的目标组件，并将其作为异常处理组件，判断所述客制化需求下的异常处理组件的数量占比是否满足要求，若是，则进入下一步骤，若否，则确定所述组件处理可靠性不满足要求；通过不同的异常处理组件在不同的历史相似场景的历史异常处理数据进行不同的历史相似场景的异常处理中断次数的确定，并结合不同的历史相似场景的异常处理延时次数以及不同的异常处理延时次数的处理延时进行所述异常处理组件在不同的历史相似场景的处理异常值的确定，通过不同的历史相似场景的处理异常值、所述历史相似场景的场景相似度以及历史相似场景的数量进行所述异常处理组件的组件异常值的确定；通过所述组件异常值确定是否存在组件异常值不满足要求的异常处理组件，若否，则进入下一步骤，若是，则确定所述组件处理可靠性不满足要求；获取所述客制化需求下的不同的异常处理组件的历史相似场景的数量和以及异常处理组件的数量，并结合不同的异常处理组件的组件异常值进行所述客制化需求下的组件处理可靠性的确定。6.如权利要求5所述的基于客制化需求的程序处理方法，其特征在于，判断所述客制化需求下的异常处理组件的数量占比是否满足要求，具体包括:当所述客制化需求下的异常处理组件的数量占比小于预设数量占比时，则确定所述客制化需求下的异常处理组件的数量占比满足要求。7.如权利要求1所述的基于客制化需求的程序处理方法，其特征在于，所述目标组件的组件使用可靠性的确定的方法为：根据所述目标组件在不同的应用场景下的历史异常处理数据获取所述目标组件在不同的应用场景下的异常处理中断次数的确定，并结合不同的应用场景下的异常处理延时次数以及不同的异常处理延时次数的处理延时进行所述目标组件在不同的应用场景下的处理异常值的确定；通过所述目标组件在不同的应用场景下的处理异常值以及在不同的应用场景下与所述客制化需求的场景相似度进行所述目标组件的组件使用可靠性的确定。8.如权利要求1所述的基于客制化需求的程序处理方法，其特征在于，当所述目标组件的组件使用可靠性不满足要求时，则确定所述目标组件为不可靠目标组件。9.如权利要求1所述的基于客制化需求的程序处理方法，其特征在于，通过所述目标组件进行客制化需求下的程序处理，具体包括：基于所述客制化需求进行所述目标组件的串联顺序以及不同的目标组件的组件脚本的确定，并根据所述目标组件的串联顺序以及不同的目标组件的组件脚本进行所述客制化需求下的程序处理。10.一种基于客制化需求的程序处理装置，采用权利要求1-9任一项所述的一种基于客制化需求的程序处理方法，其特征在于，具体包括：需求匹配模块，可靠性评估模块，组件评估模块，程序处理模块；其中所述需求匹配模块负责获取构建客制化需求的目标组件，并根据所述客制化需求进行不同的目标组件的定制化处理的组件脚本的确定；所述可靠性评估模块负责基于不同的目标组件在不同的应用场景下的应用的组件脚本的类型确定与所述客制化需求的场景相似度以及历史相似场景，根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行所述客制化需求下的组件处理可靠性的确定，当所述组件处理可靠性满足要求时，进入下一步骤；所述组件评估模块负责获取不同的目标组件在不同的应用场景下的历史异常处理数据，并结合不同的目标组件在不同的应用场景下与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的确定；所述程序处理模块负责通过所述客制化需求下的不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的数量进行所述客制化需求下的定制处理可靠性的确定，并当定制处理可靠性满足要求时，通过所述目标组件进行客制化需求下的程序处理。
说明书desc
技术领域本发明属于数据处理技术领域，尤其涉及一种基于客制化需求的程序处理方法和装置。背景技术随着消费金融机构用于用户的授信申请处理的业务场景的数量日益增大，使得软件系统的更新以及开发过程中的工作量也日益增大，因此如何快速响应个性化的客制化需求，减低软件开发处理的难度成为亟待解决的技术问题。为解决上述技术问题，在发明专利CN202311154017.8《一种组件组装和大语言模型结合的应用开发方法及装置》中通过接收业务人员根据业务需求从组件数据库中选取的目标组件，并通过进一步接收业务人员设置的目标组件之间的编排关系生成应用程序，降低了开发难度，但是却存在以下技术问题：组件数据库中的不同的目标组件的应用可靠性存在一定程度的差异，对于不同的目标组件，在以往的不同的业务场景的使用过程中，存在的报错或者处理时间等存在一定程度的差异，因此若不能对不同的目标组件在不同的业务场景的应用情况进行差异化的应用可靠性的评估，则无法保证目标组件生成的业务场景的应用可靠性。针对上述技术问题，本发明提供了一种基于客制化需求的程序处理方法和装置。发明内容为实现本发明目的，本发明采用如下技术方案：根据本发明的一个方面，提供了一种基于客制化需求的程序处理方法。一种基于客制化需求的程序处理方法，其特征在于，具体包括：S1获取构建客制化需求的目标组件，并根据所述客制化需求进行不同的目标组件的定制化处理的组件脚本的确定；S2基于不同的目标组件在不同的应用场景下的应用的组件脚本的类型确定与所述客制化需求的场景相似度以及历史相似场景，根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行所述客制化需求下的组件处理可靠性的确定，当所述组件处理可靠性满足要求时，进入下一步骤；S3获取不同的目标组件在不同的应用场景下的历史异常处理数据，并结合不同的目标组件在不同的应用场景下与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的确定；S4通过所述客制化需求下的不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的数量进行所述客制化需求下的定制处理可靠性的确定，并当定制处理可靠性满足要求时，通过所述目标组件进行客制化需求下的程序处理。本发明的有益效果在于：1、通过根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行客制化需求下的组件处理可靠性的确定，从而实现了从目标组件在相似场景下的历史异常处理情况对客制化需求下的应用可靠性的评估，避免了由于目标组件的可靠性不足导致的客制化需求下的程序生成的可靠性不足的技术问题的出现。2、通过目标组件在不同的应用场景下的历史异常处理数据以及与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及目标组件中的不可靠目标组件的确定，既考虑到不同的目标组件在不同的应用场景下的异常处理情况，同时通过综合考虑不同的应用场景与客制化需求的场景相似度，从而实现了对不同的组件使用的可靠性的准确评估。3、通过客制化需求下的不同的目标组件的组件使用可靠性以及目标组件中的不可靠目标组件的数量进行客制化需求下的定制处理可靠性的确定，避免了原有的直接采用目标组件导致的定制处理可靠性不足的问题的出现，也使得采用目标组件进行客制化需求的定制处理的可靠性得到更好的把控。进一步的技术方案在于，所述构建客制化需求的目标组件根据所述客制化需求的输入业务数据以及输出业务数据进行确定，具体的根据所述输入业务数据以及输出业务数据进行所述客制化需求的数据处理需求的确定，并根据所述数据处理需求确定构建所述客制化需求的目标组件。进一步的技术方案在于，所述组件脚本根据所述目标组件的输入数据和输出数据进行确定，具体的根据所述目标组件的输入数据与所述客制化需求的输入业务数据的偏差情况、输出数据与所述客制化需求的输出业务数据的偏差情况进行所述组件脚本的确定。进一步的技术方案在于，所述目标组件的组件使用可靠性的确定的方法为：根据所述目标组件在不同的应用场景下的历史异常处理数据获取所述目标组件在不同的应用场景下的异常处理中断次数的确定，并结合不同的应用场景下的异常处理延时次数以及不同的异常处理延时次数的处理延时进行所述目标组件在不同的应用场景下的处理异常值的确定；通过所述目标组件在不同的应用场景下的处理异常值以及在不同的应用场景下与所述客制化需求的场景相似度进行所述目标组件的组件使用可靠性的确定。进一步的技术方案在于，当所述目标组件的组件使用可靠性不满足要求时，则确定所述目标组件为不可靠目标组件。进一步的技术方案在于，通过所述目标组件进行客制化需求下的程序处理，具体包括：基于所述客制化需求进行所述目标组件的串联顺序以及不同的目标组件的组件脚本的确定，并根据所述目标组件的串联顺序以及不同的目标组件的组件脚本进行所述客制化需求下的程序处理。第二方面，本发明提供了一种基于客制化需求的程序处理装置，采用上述的一种基于客制化需求的程序处理方法，其特征在于，具体包括：需求匹配模块，可靠性评估模块，组件评估模块，程序处理模块；其中所述需求匹配模块负责获取构建客制化需求的目标组件，并根据所述客制化需求进行不同的目标组件的定制化处理的组件脚本的确定；所述可靠性评估模块负责基于不同的目标组件在不同的应用场景下的应用的组件脚本的类型确定与所述客制化需求的场景相似度以及历史相似场景，根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行所述客制化需求下的组件处理可靠性的确定，当所述组件处理可靠性满足要求时，进入下一步骤；所述组件评估模块负责获取不同的目标组件在不同的应用场景下的历史异常处理数据，并结合不同的目标组件在不同的应用场景下与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的确定；所述程序处理模块负责通过所述客制化需求下的不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的数量进行所述客制化需求下的定制处理可靠性的确定，并当定制处理可靠性满足要求时，通过所述目标组件进行客制化需求下的程序处理。其他特征和优点将在随后的说明书中阐述，本发明的目的和其他优点在说明书以及附图中所特别指出的结构来实现和获得。为使本发明的上述目的、特征和优点能更明显易懂，下文特举较佳实施例，并配合所附附图，作详细说明如下。附图说明通过参照附图详细描述其示例实施方式，本发明的上述和其它特征及优点将变得更加明显；图1是一种基于客制化需求的程序处理方法的流程图；图2是客制化需求下的组件处理可靠性的确定的方法的流程图；图3是目标组件的组件使用可靠性的确定的方法的流程图；图4是客制化需求下的定制处理可靠性的确定的方法的流程图；图5是一种基于客制化需求的程序处理装置的框架图。具体实施方式为了使本技术领域的人员更好地理解本说明书中的技术方案，下面将结合本说明书实施例中的附图，对本说明书实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本说明书一部分实施例，而不是全部的实施例。基于本说明书实施例，本领域普通技术人员在没有作出创造性劳动前提下所获得的所有其他实施例，都应当属于本说明书保护的范围。为了减少软件开发的难度，现有技术方案中往往通过组件数据库中的组件与客制化需求进行匹配，并根据匹配结果采用现成的组件进行程序的生成和处理，但是却忽略了不同的组件的应用可靠性，具体的，不同的组件在不同的历史应用过程中存在的异常处理数据存在一定程度的差异，因此若不能根据上述数据对组件在客制化需求下的程序可靠性进行评估，则有可能导致生成的程序可靠性不足导致自动生成的程序的可靠性难以满足求的问题的出现。为了解决上述技术问题，采用以下技术方案：首先根据客制化需求的进行客制化需求的目标组件的确定，此外由于目标组件之间的输入数据和输出数据的差异，因此还需要根据所述客制化需求进行不同的目标组件的定制化处理的组件脚本的确定；然后通过所述目标组件在不同的应用场景下的应用的组件脚本的类型以及所述客制化需求下的目标组件的定制化处理的组件脚本进行相同的组件脚本的数量的确定，并基于所述相同的组件脚本的数量确定与所述客制化需求的场景相似度，通过所述场景相似度确定历史相似场景，根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行所述客制化需求下的组件处理可靠性的确定，具体的可以通过历史相似场景中存在异常处理数据的目标组件的占比进行所述客制化需求下的组件处理可靠性的确定，当所述组件处理可靠性满足要求时，进入下一步骤，若组件处理可靠性不满足要求时，则无法通过目标组件进行客制化需求下的程序自动化生成处理；紧接着获取不同的目标组件在不同的应用场景下的历史异常处理数据，并结合不同的目标组件在不同的应用场景下与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的确定，具体的可以通过不同的应用场景下的历史异常处理次数与预设次数的比值、不同的应用场景下与所述客制化需求的场景相似度的乘积进行不同的应用场景下的问题评估量的确定，最后根据不同的应用场景下的问题评估量的归一化处理后的数量和进行不同的目标组件的组件使用可靠性的确定，并将组件使用可靠性较小的目标组件作为不可靠目标组件；最后通过所述客制化需求下的不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的数量进行客制化需求下的定制处理可靠性的确定，具体的可以通过组件使用可靠性的平均值以及不可靠目标组件的数量占比的乘积进行客制化需求下的定制处理可靠性的确定，并当定制处理可靠性满足要求时，基于所述客制化需求进行所述目标组件的串联顺序以及不同的目标组件的组件脚本的确定，并根据所述目标组件的串联顺序以及不同的目标组件的组件脚本进行所述客制化需求下的程序处理。以下将从方法类和系统类两个角度进行详尽阐述。为解决上述问题，根据本发明的一个方面，如图1所示，提供了一种基于客制化需求的程序处理方法，其特征在于，具体包括：S1获取构建客制化需求的目标组件，并根据所述客制化需求进行不同的目标组件的定制化处理的组件脚本的确定；具体的，所述构建客制化需求的目标组件根据所述客制化需求的输入业务数据以及输出业务数据进行确定，具体的根据所述输入业务数据以及输出业务数据进行所述客制化需求的数据处理需求的确定，并根据所述数据处理需求确定构建所述客制化需求的目标组件。需要说明的是，所述组件脚本根据所述目标组件的输入数据和输出数据进行确定，具体的根据所述目标组件的输入数据与所述客制化需求的输入业务数据的偏差情况、输出数据与所述客制化需求的输出业务数据的偏差情况进行所述组件脚本的确定。S2基于不同的目标组件在不同的应用场景下的应用的组件脚本的类型确定与所述客制化需求的场景相似度以及历史相似场景，根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行所述客制化需求下的组件处理可靠性的确定，当所述组件处理可靠性满足要求时，进入下一步骤；在可能的一个实施例中，上述步骤S2中的所述历史相似场景的确定的方法为：通过所述目标组件在不同的应用场景下的应用的组件脚本的类型以及所述客制化需求下的目标组件的定制化处理的组件脚本进行相同的组件脚本的数量的确定，并基于所述相同的组件脚本的数量确定与所述客制化需求的场景相似度，通过所述场景相似度确定历史相似场景。在可能的一个实施例中，如图2所示，上述步骤S2中的所述客制化需求下的组件处理可靠性的确定的方法为：根据不同的目标组件在不同的历史相似场景的历史异常处理数据确定存在所述历史异常处理数据的目标组件，并将其作为异常处理组件，判断所述客制化需求下的异常处理组件的数量占比是否满足要求，若是，则进入下一步骤，若否，则确定所述组件处理可靠性不满足要求；通过不同的异常处理组件在不同的历史相似场景的历史异常处理数据进行不同的历史相似场景的异常处理中断次数的确定，并结合不同的历史相似场景的异常处理延时次数以及不同的异常处理延时次数的处理延时进行所述异常处理组件在不同的历史相似场景的处理异常值的确定，通过不同的历史相似场景的处理异常值、所述历史相似场景的场景相似度以及历史相似场景的数量进行所述异常处理组件的组件异常值的确定；在可能的一个实施例中，通过异常处理中断次数与历史相似场景的处理次数的比值、异常处理延时次数与历史相似场景的处理次数的比值、不同的异常处理延时次数的处理延时的平均值与预设处理时间的比值经过归一化处理后的数量和进行异常处理组件在不同的历史相似场景的处理异常值的确定。在可能的一个实施例中，通过不同的历史相似场景的处理异常值与所述历史相似场景的场景相似度的乘积进行不同的历史相似场景的权值的确定，然后根据不同的历史相似场景的权值的数量和进行异常处理组件的组件异常值的确定。通过所述组件异常值确定是否存在组件异常值不满足要求的异常处理组件，若否，则进入下一步骤，若是，则确定所述组件处理可靠性不满足要求；获取所述客制化需求下的不同的异常处理组件的历史相似场景的数量和以及异常处理组件的数量，并结合不同的异常处理组件的组件异常值进行所述客制化需求下的组件处理可靠性的确定。在可能的一个实施例中，可以通过不同的历史相似场景的数量和在所有的历史相似场景的占比对不同的异常处理组件的组件异常值进行修正得到组件修正异常值，然后根据组件修正异常值的数量和进行所述客制化需求下的组件处理可靠性的确定。可以理解的是，判断所述客制化需求下的异常处理组件的数量占比是否满足要求，具体包括:当所述客制化需求下的异常处理组件的数量占比小于预设数量占比时，则确定所述客制化需求下的异常处理组件的数量占比满足要求。在另外的一个可能的实施例中，上述步骤S2中的所述客制化需求下的组件处理可靠性的确定的方法为：根据不同的目标组件在不同的历史相似场景的历史异常处理数据确定存在所述历史异常处理数据的目标组件，并将其作为异常处理组件，判断所述客制化需求下的异常处理组件的数量以及数量占比是否均满足要求，若是，则进入下一步骤，若否，则确定所述组件处理可靠性不满足要求；通过不同的异常处理组件在不同的历史相似场景的历史异常处理数据进行不同的历史相似场景的异常处理中断次数的确定，并结合不同的历史相似场景的异常处理延时次数以及不同的异常处理延时次数的处理延时进行所述异常处理组件在不同的历史相似场景的处理异常值的确定，判断所述客制化需求下的异常处理组件的历史相似场景的处理异常值的数量和是否满足要求，若是，则进入下一步骤，若否，则确定所述组件处理可靠性不满足要求；通过不同的历史相似场景的处理异常值以及不同的历史相似场景的场景相似度进行不同的历史相似场景的综合处理异常值的确定，判断是否存在综合处理异常值不满足要求的历史相似场景，若否，则进入下一步骤，若是，则确定所述组件处理可靠性不满足要求；通过不同的历史相似场景的综合处理异常值以及历史相似场景的数量进行所述异常处理组件的组件异常值的确定，通过所述组件异常值确定是否存在组件异常值不满足要求的异常处理组件，若否，则进入下一步骤，若是，则确定所述组件处理可靠性不满足要求；获取所述客制化需求下的不同的异常处理组件的数量以及不同的异常处理组件的组件异常值，并结合所述客制化需求下的异常处理组件的历史相似场景的处理异常值的数量和进行所述客制化需求下的组件处理可靠性的确定。在本实施例中，通过根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行客制化需求下的组件处理可靠性的确定，从而实现了从目标组件在相似场景下的历史异常处理情况对客制化需求下的应用可靠性的评估，避免了由于目标组件的可靠性不足导致的客制化需求下的程序生成的可靠性不足的技术问题的出现。S3获取不同的目标组件在不同的应用场景下的历史异常处理数据，并结合不同的目标组件在不同的应用场景下与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的确定；在可能的一个实施例中，如图3所示，上述步骤S3中的所述目标组件的组件使用可靠性的确定的方法为：S31根据所述目标组件在不同的应用场景下的历史异常处理数据获取所述目标组件在不同的应用场景下的异常处理中断次数的确定，并结合不同的应用场景下的异常处理延时次数以及不同的异常处理延时次数的处理延时进行所述目标组件在不同的应用场景下的处理异常值的确定；S32通过所述目标组件在不同的应用场景下的处理异常值以及在不同的应用场景下与所述客制化需求的场景相似度进行所述目标组件的组件使用可靠性的确定。需要说明的是，当所述目标组件的组件使用可靠性不满足要求时，则确定所述目标组件为不可靠目标组件。在本实施例中，通过目标组件在不同的应用场景下的历史异常处理数据以及与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及目标组件中的不可靠目标组件的确定，既考虑到不同的目标组件在不同的应用场景下的异常处理情况，同时通过综合考虑不同的应用场景与客制化需求的场景相似度，从而实现了对不同的组件使用的可靠性的准确评估。S4通过所述客制化需求下的不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的数量进行所述客制化需求下的定制处理可靠性的确定，并当定制处理可靠性满足要求时，通过所述目标组件进行客制化需求下的程序处理。在可能的一个实施例中，如图4所示，上述步骤S4中的所述客制化需求下的定制处理可靠性的确定的方法为：S41获取所述客制化需求下的目标组件中的不可靠目标组件的数量，并结合所述目标组件中的不可靠目标组件的数量占比确定所述目标组件是否可靠，若是，则进入下一步骤，若否，则确定所述客制化需求下的定制处理可靠性不满足要求；S42通过所述客制化需求下的目标组件中的不可靠目标组件的组件使用可靠性以及不可靠目标组件的数量进行所述不可靠目标组件的组件使用可靠性的数量和的确定，通过所述不可靠目标组件的组件使用可靠性的数量和确定所述目标组件是否可靠，若是，则进入下一步骤，若否，则确定所述客制化需求下的定制处理可靠性不满足要求；S43通过所述客制化需求下的目标组件中的不可靠目标组件的组件使用可靠性进行所述不可靠目标组件的组件使用可靠性小于预设可靠性阈值的不可靠目标组件的数量的确定，并结合不可靠目标组件的数量以及不同的不可靠目标组件的组件使用可靠性的平均值进行所述客制化需求下的不可靠目标组件的组件综合使用可靠性的确定，判断所述不可靠目标组件的组件综合使用可靠性是否满足要求，若是，则进入下一步骤，若否，则确定所述客制化需求下的定制处理可靠性不满足要求；S44基于所述客制化需求下的不同的目标组件的组件使用可靠性以及目标组件的数量进行所述目标组件的组件使用可靠性的平均值以及最大值的确定，并结合所述不可靠目标组件的组件综合使用可靠性进行所述客制化需求下的定制处理可靠性的确定。在另外的一个可能的实施例中，上述步骤S4中的所述客制化需求下的定制处理可靠性的确定的方法为：获取所述客制化需求下的目标组件中的不可靠目标组件的数量，并结合所述目标组件中的不可靠目标组件的数量占比确定所述目标组件是否可靠，若是，则进入下一步骤，若否，则确定所述客制化需求下的定制处理可靠性不满足要求；通过所述客制化需求下的目标组件中的不可靠目标组件的组件使用可靠性以及不可靠目标组件的数量进行所述不可靠目标组件的组件使用可靠性的数量和的确定，通过所述不可靠目标组件的组件使用可靠性的数量和确定所述目标组件是否可靠，若是，则进入下一步骤，若否，则确定所述客制化需求下的定制处理可靠性不满足要求；通过所述客制化需求下的目标组件中的不可靠目标组件的组件使用可靠性进行所述不可靠目标组件的组件使用可靠性小于预设可靠性阈值的不可靠目标组件的数量的确定，并结合不可靠目标组件的数量以及不同的不可靠目标组件的组件使用可靠性的平均值进行所述客制化需求下的不可靠目标组件的组件综合使用可靠性的确定，判断所述不可靠目标组件的组件综合使用可靠性是否满足要求，若是，则进入下一步骤，若否，则确定所述客制化需求下的定制处理可靠性不满足要求；基于所述客制化需求下的不同的目标组件的组件使用可靠性以及目标组件的数量进行所述目标组件的组件使用可靠性的平均值以及最大值的确定，并结合所述不可靠目标组件的组件综合使用可靠性进行所述客制化需求下的定制处理可靠性的确定。需要进一步说明的是，通过所述目标组件进行客制化需求下的程序处理，具体包括：基于所述客制化需求进行所述目标组件的串联顺序以及不同的目标组件的组件脚本的确定，并根据所述目标组件的串联顺序以及不同的目标组件的组件脚本进行所述客制化需求下的程序处理。在本实施例中，通过客制化需求下的不同的目标组件的组件使用可靠性以及目标组件中的不可靠目标组件的数量进行客制化需求下的定制处理可靠性的确定，避免了原有的直接采用目标组件导致的定制处理可靠性不足的问题的出现，也使得采用目标组件进行客制化需求的定制处理的可靠性得到更好的把控。另一方面，如图5所示，本发明提供了一种基于客制化需求的程序处理装置，采用上述的一种基于客制化需求的程序处理方法，其特征在于，具体包括：需求匹配模块，可靠性评估模块，组件评估模块，程序处理模块；其中所述需求匹配模块负责获取构建客制化需求的目标组件，并根据所述客制化需求进行不同的目标组件的定制化处理的组件脚本的确定；所述可靠性评估模块负责基于不同的目标组件在不同的应用场景下的应用的组件脚本的类型确定与所述客制化需求的场景相似度以及历史相似场景，根据不同的目标组件在不同的历史相似场景的历史异常处理数据进行所述客制化需求下的组件处理可靠性的确定，当所述组件处理可靠性满足要求时，进入下一步骤；所述组件评估模块负责获取不同的目标组件在不同的应用场景下的历史异常处理数据，并结合不同的目标组件在不同的应用场景下与所述客制化需求的场景相似度进行不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的确定；所述程序处理模块负责通过所述客制化需求下的不同的目标组件的组件使用可靠性以及所述目标组件中的不可靠目标组件的数量进行所述客制化需求下的定制处理可靠性的确定，并当定制处理可靠性满足要求时，通过所述目标组件进行客制化需求下的程序处理。本说明书中的各个实施例均采用递进的方式描述，各个实施例之间相同相似的部分互相参见即可，每个实施例重点说明的都是与其他实施例的不同之处。尤其，对于装置、设备、非易失性计算机存储介质实施例而言，由于其基本相似于方法实施例，所以描述的比较简单，相关之处参见方法实施例的部分说明即可。上述对本说明书特定实施例进行了描述。其它实施例在所附权利要求书的范围内。在一些情况下，在权利要求书中记载的动作或步骤可以按照不同于实施例中的顺序来执行并且仍然可以实现期望的结果。另外，在附图中描绘的过程不一定要求示出的特定顺序或者连续顺序才能实现期望的结果。在某些实施方式中，多任务处理和并行处理也是可以的或者可能是有利的。以上所述仅为本说明书的一个或多个实施例而已，并不用于限制本说明书。对于本领域技术人员来说，本说明书的一个或多个实施例可以有各种更改和变化。凡在本说明书的一个或多个实施例的精神和原理之内所作的任何修改、等同替换、改进等，均应包含在本说明书的权利要求范围之内。
