标题title
在存储阵列中使用的熔断器单元及其处理方法、存储阵列
摘要abst
本公开的实施例提供一种在存储阵列中使用的熔断器单元及其处理方法、存储阵列。熔断器单元包括：K个熔断器子单元。每个熔断器子单元包括多个熔断器组。K等于2M。每个熔断器组的默认值的每一位都为0。在熔断器组的值不等于默认值时，与熔断器组相关联的冗余存储地址用于替换熔断器组所存储的缺陷存储地址。第i熔断器子单元不存储指定M位的值等于i且其余位都为0的缺陷存储地址。在缺陷存储地址被存入第j熔断器子单元之前，缺陷存储地址的目标位被反相。在第j熔断器子单元中的任一熔断器组的值不等于默认值时，该熔断器组的值的目标位被反相以获得该熔断器组的输出值。j大于0且小于K。目标位是指定M位中与j的等于1的位相对应的位。
权利要求书clms
1.一种在存储阵列中使用的熔断器单元，其特征在于，所述熔断器单元包括：K个熔断器子单元，每个熔断器子单元包括多个熔断器组，每个熔断器组包括N个熔断器，K等于2M，M为正整数，N等于所述存储阵列的存储地址的位数，其中，每个熔断器组能够存储所述存储阵列的一个缺陷存储地址，每个熔断器组与所述存储阵列的一个冗余存储地址相关联，每个熔断器组的默认值的每一位都为0，在所述熔断器组的值不等于所述默认值的情况下，与所述熔断器组相关联的冗余存储地址用于替换所述熔断器组所存储的缺陷存储地址；所述K个熔断器子单元中的第i熔断器子单元被配置为不存储指定M位的值等于i且其余位都为0的缺陷存储地址，其中，所述其余位是所述缺陷存储地址中除了所述指定M位之外的位，i大于或者等于0且小于K；所述K个熔断器子单元中的第j熔断器子单元还包括多个反相器；在所述缺陷存储地址被存入所述第j熔断器子单元之前，所述缺陷存储地址的目标位被所述反相器反相；在所述第j熔断器子单元中的任一熔断器组的值不等于所述默认值的情况下，该熔断器组的值的所述目标位被所述反相器反相以获得该熔断器组的输出值，其中，j大于0且小于K，所述目标位是所述指定M位中与j的等于1的位相对应的位。2.根据权利要求1所述的熔断器单元，其特征在于，对于每个熔断器组，在与该熔断器组相关联的冗余存储地址损坏的情况下，该熔断器组的值被设置成损坏指示值，所述损坏指示值的每一位都为1；在任一熔断器组的值等于所述损坏指示值的情况下，与该熔断器组相关联的冗余存储地址不用于替换所述存储阵列的缺陷存储地址；所述第i熔断器子单元还被配置为不存储所述指定M位的值等于i的反码且所述其余位都为1的缺陷存储地址；在所述第j熔断器子单元中的任一熔断器组的值等于所述损坏指示值的情况下，该熔断器组的输出值被设置为等于该熔断器组的值。3.根据权利要求1或2所述的熔断器单元，其特征在于，每个熔断器子单元中的熔断器组的数量不相等。4.根据权利要求1或2所述的熔断器单元，其特征在于，所述指定M位是所述缺陷存储地址的最低M位。5.根据权利要求1或2所述的熔断器单元，其特征在于，所述指定M位是所述缺陷存储地址的不连续的M位。6.一种处理方法，用于处理根据权利要求1所述的熔断器单元，其特征在于，所述处理方法包括：接收所述存储阵列的缺陷存储地址；获取所述缺陷存储地址的所述指定M位的值作为分配参考值；确定所述缺陷存储地址的其余位是否都为0，所述其余位是所述缺陷存储地址中除了所述指定M位之外的位；以及响应于所述缺陷存储地址的所述其余位都为0，将所述缺陷存储地址存储到所述K个熔断器子单元中的第p熔断器子单元中的未使用的一个熔断器组，其中，p不等于所述分配参考值，未使用的熔断器组的值等于默认值，所述默认值的每一位都为0。7.根据权利要求6所述的处理方法，其特征在于，所述处理方法还包括：响应于所述存储阵列被访问，将每个熔断器组作为目标熔断器组并执行以下操作：确定所述目标熔断器组的值是否等于所述默认值；响应于所述目标熔断器组的值不等于所述默认值，将访问所述存储阵列的访问地址与所述目标熔断器组的输出值进行比较；以及响应于所述访问地址与所述目标熔断器组的所述输出值匹配，将对所述访问地址的访问链接至与所述目标熔断器组相关联的冗余存储地址。8.根据权利要求6所述的处理方法，其特征在于，所述处理方法还包括：确定所述缺陷存储地址的所述其余位是否都为1；响应于所述缺陷存储地址的所述其余位都为1，将所述缺陷存储地址存储到所述K个熔断器子单元中的第q熔断器子单元中的未使用的一个熔断器组，其中，q的反码不等于所述分配参考值；以及对于每个熔断器组，响应于与该熔断器组相关联的冗余存储地址损坏，将该熔断器组的值设置成损坏指示值，所述损坏指示值的每一位都为1。9.根据权利要求8所述的处理方法，其特征在于，所述处理方法还包括：响应于所述存储阵列被访问，将每个熔断器组作为目标熔断器组并执行以下操作：确定所述目标熔断器组的值是否等于所述默认值或者所述损坏指示值；响应于所述目标熔断器组的值不等于所述默认值且不等于所述损坏指示值，将访问所述存储阵列的访问地址与所述目标熔断器组的输出值进行比较；以及响应于所述访问地址与所述目标熔断器组的所述输出值匹配，将对所述访问地址的访问链接至与所述目标熔断器组相关联的冗余存储地址。10.一种存储阵列，其特征在于，所述存储阵列包括：根据权利要求1至5中任一项所述的熔断器单元。
说明书desc
技术领域本公开的实施例涉及半导体器件技术领域，具体地，涉及在存储阵列中使用的熔断器单元及其处理方法、存储阵列。背景技术存储器通常包含存储阵列。存储阵列包括多个存储单元。在常规存储类芯片的存储阵列中，每份信息都是分别独立的存储在阵列的存储单元之中，该存储单元具有唯一的行地址及列地址。读取数据时只要找到对应的行/列地址就能读取数据。为避免当某个行/列的存储单元发生损坏时无法写入/读取数据，可采用“备用”的行或者列。当原存储阵列中某处出现损坏无法访问时，则启用提前准备的“备用”行/列地址，将数据写入备用地址。相同的，数据也从“备用”地址中读出，使存储功能得以正常进行。原存储阵列中应被替换的地址信息被保存进熔断器组中，每一个熔断器组和备用的行或列是一一对应的。当选择的地址和熔断器组内存储的地址对应时，表示该地址对应的行或列发生损坏，应切换到熔断器组对应的备用地址。但是，熔断器组有默认值。如果输入的地址对应上默认值，则无法区分到底是否需要替换。因此，每个熔断器组中设置有一个主熔断器，用来表示该熔断器组是否被使用。如果输入的地址对应上默认值，但主熔断器不设置为“使用”，则不需要替换；反之则替换。因此，一个熔断器组一般由N个记录地址的熔断器与1个主熔断器构成，N等于最大需要存储的地址的位数。由于每个熔断器组都需要N个记录地址的熔断器和额外的1个主熔断器记录该熔断器组是否被使用，因此在存储阵列中使用的熔断器组需要使用的熔断器数量大，导致存储阵列的芯片面积大。发明内容本文中描述的实施例提供了一种在存储阵列中使用的熔断器单元及其处理方法、存储阵列。根据本公开的第一方面，提供了一种在存储阵列中使用的熔断器单元。该熔断器单元包括：K个熔断器子单元。每个熔断器子单元包括多个熔断器组。每个熔断器组包括N个熔断器。K等于2M。M为正整数。N等于存储阵列的存储地址的位数。其中，每个熔断器组能够存储存储阵列的一个缺陷存储地址。每个熔断器组与存储阵列的一个冗余存储地址相关联。每个熔断器组的默认值的每一位都为0。在熔断器组的值不等于默认值的情况下，与熔断器组相关联的冗余存储地址用于替换熔断器组所存储的缺陷存储地址。K个熔断器子单元中的第i熔断器子单元被配置为不存储指定M位的值等于i且其余位都为0的缺陷存储地址。其中，其余位是缺陷存储地址中除了指定M位之外的位。i大于或者等于0且小于K。K个熔断器子单元中的第j熔断器子单元还包括多个反相器。在缺陷存储地址被存入第j熔断器子单元之前，缺陷存储地址的目标位被反相器反相。在第j熔断器子单元中的任一熔断器组的值不等于默认值的情况下，该熔断器组的值的目标位被反相器反相以获得该熔断器组的输出值。其中，j大于0且小于K。目标位是指定M位中与j的等于1的位相对应的位。在本公开的一些实施例中，对于每个熔断器组，在与该熔断器组相关联的冗余存储地址损坏的情况下，该熔断器组的值被设置成损坏指示值。损坏指示值的每一位都为1。在任一熔断器组的值等于损坏指示值的情况下，与该熔断器组相关联的冗余存储地址不用于替换存储阵列的缺陷存储地址。第i熔断器子单元还被配置为不存储指定M位的值等于i的反码且其余位都为1的缺陷存储地址。在第j熔断器子单元中的任一熔断器组的值等于损坏指示值的情况下，该熔断器组的输出值被设置为等于该熔断器组的值。在本公开的一些实施例中，每个熔断器子单元中的熔断器组的数量不相等。在本公开的一些实施例中，每个熔断器子单元中的熔断器组的数量相等。在本公开的一些实施例中，指定M位是缺陷存储地址的最低M位。在本公开的一些实施例中，指定M位是缺陷存储地址的不连续的M位。根据本公开的第二方面，提供了一种处理方法，用于处理根据本公开的第一方面所述的熔断器单元。该处理方法包括：接收存储阵列的缺陷存储地址；获取缺陷存储地址的指定M位的值作为分配参考值；确定缺陷存储地址的其余位是否都为0，其余位是缺陷存储地址中除了指定M位之外的位；以及响应于缺陷存储地址的其余位都为0，将缺陷存储地址存储到K个熔断器子单元中的第p熔断器子单元中的未使用的一个熔断器组。其中，p不等于分配参考值。未使用的熔断器组的值等于默认值。默认值的每一位都为0。在本公开的一些实施例中，处理方法还包括：响应于存储阵列被访问，将每个熔断器组作为目标熔断器组并执行以下操作：确定目标熔断器组的值是否等于默认值；响应于目标熔断器组的值不等于默认值，将访问存储阵列的访问地址与目标熔断器组的输出值进行比较；以及响应于访问地址与目标熔断器组的输出值匹配，将对访问地址的访问链接至与目标熔断器组相关联的冗余存储地址。在本公开的一些实施例中，处理方法还包括：确定缺陷存储地址的其余位是否都为1；响应于缺陷存储地址的其余位都为1，将缺陷存储地址存储到K个熔断器子单元中的第q熔断器子单元中的未使用的一个熔断器组，其中，q的反码不等于分配参考值；以及对于每个熔断器组，响应于与该熔断器组相关联的冗余存储地址损坏，将该熔断器组的值设置成损坏指示值。损坏指示值的每一位都为1。在本公开的一些实施例中，处理方法还包括：响应于存储阵列被访问，将每个熔断器组作为目标熔断器组并执行以下操作：确定目标熔断器组的值是否等于默认值或者损坏指示值；响应于目标熔断器组的值不等于默认值且不等于损坏指示值，将访问存储阵列的访问地址与目标熔断器组的输出值进行比较；以及响应于访问地址与目标熔断器组的输出值匹配，将对访问地址的访问链接至与目标熔断器组相关联的冗余存储地址。根据本公开的第三方面，提供了一种存储阵列。该存储阵列包括：根据本公开的第一方面所述的熔断器单元。根据本公开的第四方面，提供了一种半导体器件。该半导体器件包括根据本公开的第三方面所述的存储阵列。根据本公开的第五方面，提供了一种处理装置。该处理装置用于处理根据本公开的第一方面所述的熔断器单元。该处理装置包括至少一个处理器；以及存储有计算机程序的至少一个存储器。当计算机程序由至少一个处理器执行时，使得处理装置执行根据本公开的第二方面所述的处理方法。附图说明为了更清楚地说明本公开的实施例的技术方案，下面将对实施例的附图进行简要说明，应当知道，以下描述的附图仅仅涉及本公开的一些实施例，而非对本公开的限制，其中：图1是一种在存储阵列中使用的熔断器单元的示例性结构图；图2是根据本公开的实施例的在存储阵列中使用的熔断器单元的示例性结构图；图3是图2所示的第0熔断器子单元的示意性工作原理图；图4是图2所示的第1熔断器子单元的示意性工作原理图；图5是图2所示的第2熔断器子单元的示意性工作原理图；图6是图2所示的第3熔断器子单元的示意性工作原理图；图7是图2所示的第0熔断器子单元处理冗余损坏的示意性工作原理图；图8是图2所示的第1熔断器子单元处理冗余损坏的示意性工作原理图；图9是图2所示的第2熔断器子单元处理冗余损坏的示意性工作原理图；图10是图2所示的第3熔断器子单元处理冗余损坏的示意性工作原理图；图11是根据本公开的实施例的用于处理熔断器单元的处理方法的示意性流程图；图12是根据本公开的实施例的用于处理熔断器单元的处理方法的进一步步骤的示意性流程图；图13是根据本公开的实施例的用于处理熔断器单元的处理方法的进一步步骤的示意性流程图；图14是根据本公开的实施例的存储阵列的示意性框图；图15是根据本公开的实施例的处理装置的示意性框图。需要注意的是，附图中的元素是示意性的，没有按比例绘制。具体实施方式为了使本公开的实施例的目的、技术方案和优点更加清楚，下面将结合附图，对本公开的实施例的技术方案进行清楚、完整的描述。显然，所描述的实施例是本公开的一部分实施例，而不是全部的实施例。基于所描述的本公开的实施例，本领域技术人员在无需创造性劳动的前提下所获得的所有其它实施例，也都属于本公开保护的范围。除非另外定义，否则在此使用的所有术语具有与本公开主题所属领域的技术人员所通常理解的相同含义。进一步将理解的是，诸如在通常使用的词典中定义的那些的术语应解释为具有与说明书上下文和相关技术中它们的含义一致的含义，并且将不以理想化或过于正式的形式来解释，除非在此另外明确定义。如在此所使用的，将两个或更多部分“连接”或“耦接”到一起的陈述应指这些部分直接结合到一起或通过一个或多个中间部件结合。另外，诸如“第一”和“第二”的术语仅用于将一个部件与另一个部件区分开。如上所述，存储阵列中出现坏点的行或者列的地址需要存储在熔断器组中。一个熔断器组与一个冗余存储地址相关联。当存储阵列被访问的地址与熔断器组所存储的地址对应时，表示该地址对应的行或列已损坏，需要用与该熔断器组相关联的冗余存储地址来替换该熔断器组所存储的地址。但是，熔断器组有默认值。如果存储阵列被访问的地址与熔断器组的默认值对应，则无法区分是否需要进行地址替换。因此，可在每个熔断器组中增设一个主熔断器，用来表示该熔断器组是否被使用。如果存储阵列被访问的地址与熔断器组的默认值对应，但主熔断器没有被设置为“被使用”，则不需要进行地址替换；反之则进行地址替换。存储阵列中的所有熔断器组的集合在本文中可被称为熔断器单元。图1示出此类熔断器单元100的示例性结构图。如图1所示，熔断器单元100包括S个熔断器组Fu1，Fu2，Fu3，……，FuS。每个熔断器组包括一个主熔断器11与N个地址熔断器12。N等于最大需要存储的地址的位数。在图1的示例中，N等于7。为便于举例说明，在下文中主要以N=7为例来进行描述。当存储阵列能正常工作时，S个熔断器组的地址首先会被初始化为默认值，一般为“0000000,0”。前7位表示地址位，后额外的1位表示该组的使用情况。一旦存储阵列出现行故障不能正常读写，故障的行地址信息就会在修复的过程中存入熔断器组。假设使用冗余第1行来修复出现故障的行地址0101110，那么冗余第1行对应的熔断器组就会被写入“0101110,1”。在“0101110,1”中，前7位表示行地址0101110，后额外的1位表示该组已经被使用。记录在熔断器组内的内容会在熔断器载入的过程中载入对应的电路结构中。当下一次准备访问已记录的故障行时，会直接跳转访问到对应的冗余行，从而保证存储阵列读写过程的完整。对于一块含有冗余结构的存储阵列来说，一般需要准备对应冗余行个数的熔断器组。假设存储阵列有S个冗余的行结构，且在存储阵列正常工作下，行寻址的位数为N位，那么，加上表示使用状态的主熔断器，就需要使用×S个熔断器资源。如果能够减少需要使用的熔断器资源，则可以节省硬件成本以及减小存储阵列的面积。本公开提出了一种在存储阵列中使用的熔断器单元，其通过去除主熔断器来节省硬件成本以及减小存储阵列的面积。该熔断器单元包括：K个熔断器子单元。每个熔断器子单元包括多个熔断器组。每个熔断器组包括N个熔断器。K等于2M。M为正整数。N等于存储阵列的存储地址的位数。其中，每个熔断器组能够存储存储阵列的一个缺陷存储地址。每个熔断器组与存储阵列的一个冗余存储地址相关联。每个熔断器组的默认值的每一位都为0。在熔断器组的值不等于默认值的情况下，与熔断器组相关联的冗余存储地址用于替换熔断器组所存储的缺陷存储地址。在熔断器组的值等于默认值的情况下，与熔断器组相关联的冗余存储地址不用于修复存储阵列。K个熔断器子单元中的第i熔断器子单元被配置为不存储指定M位的值等于i且其余位都为0的缺陷存储地址。其中，其余位是缺陷存储地址中除了指定M位之外的位。i大于或者等于0且小于K。换句话说，第i熔断器子单元指的是K个熔断器子单元中的每个熔断器子单元，K个熔断器子单元中的每个熔断器子单元都服从上述配置方式。i的值可转换成M位的二进制数来与缺陷存储地址的指定M位的值进行比较。在M等于2且i等于0的示例中，第0熔断器子单元被配置为不存储指定2位的值等于二进制数00且其余位都为0的缺陷存储地址。在M等于2且i等于1的示例中，第1熔断器子单元被配置为不存储指定2位的值等于二进制数01且其余位都为0的缺陷存储地址。在M等于2且i等于2的示例中，第2熔断器子单元被配置为不存储指定2位的值等于二进制数10且其余位都为0的缺陷存储地址。在M等于2且i等于3的示例中，第3熔断器子单元被配置为不存储指定2位的值等于二进制数11且其余位都为0的缺陷存储地址。K个熔断器子单元中的第j熔断器子单元还包括多个反相器。其中，j大于0且小于K。也就是说，第j熔断器子单元指的是K个熔断器子单元中除了第0熔断器子单元之外的每个熔断器子单元。在缺陷存储地址被存入第j熔断器子单元之前，缺陷存储地址的目标位被反相器反相。在第j熔断器子单元中的任一熔断器组的值不等于默认值的情况下，该熔断器组的值的目标位被反相器反相以获得该熔断器组的输出值。目标位是指定M位中与j的等于1的位相对应的位。在指定M位是缺陷存储地址的最低2位且j等于1的示例中，目标位是缺陷存储地址的最低1位。在缺陷存储地址被存入第1熔断器子单元之前，缺陷存储地址的最低1位被反相器反相。假设缺陷存储地址为“XXXXX10”，则缺陷存储地址的最低1位被反相器反相后得到地址“XXXXX11”，地址“XXXXX11”被存入第1熔断器子单元中未使用的一个熔断器组。在第1熔断器子单元中的任一熔断器组的值不等于默认值“0000000”的情况下，该熔断器组的值的最低1位被反相器反相以获得该熔断器组的输出值。因此，值为“XXXXX11”的熔断器组的输出值等于“XXXXX10”，与存入该熔断器组的缺陷存储地址“XXXXX10”一致。因此，尽管缺陷存储地址在被存入熔断器组之前被改变，但是该熔断器组的输出值与缺陷存储地址保持一致，需要修复的缺陷存储地址依然能够被正确识别。在上下文中，“X”表示任意二进制值。下面以图2为例来说明根据本公开的实施例的在存储阵列中使用的熔断器单元200的示例性结构图。在图2的示例中，M等于2，K等于4，N等于7。该熔断器单元200包括：4个熔断器子单元GP0，GP1，GP2和GP3。每个熔断器子单元GP0，GP1，GP2和GP3包括多个熔断器组Fu。每个熔断器组Fu包括7个熔断器12。每个熔断器组Fu能够存储存储阵列的一个缺陷存储地址。在本文中，“缺陷存储地址”指的是故障的行地址信息或列地址信息。在一个示例中，缺陷存储地址可以是存储阵列中出现故障的行地址。在另一个示例中，缺陷存储地址可以是存储阵列中出现故障的列地址。每个熔断器组Fu与存储阵列的一个冗余存储地址相关联。在缺陷存储地址是行地址的情况下，冗余存储地址是用于替换缺陷存储地址的行地址。在缺陷存储地址是列地址的情况下，冗余存储地址是用于替换缺陷存储地址的列地址。为便于举例，在下文中以缺陷存储地址是“行地址”为例来进行说明。每个熔断器组Fu的默认值的每一位都为0。在N=7的示例中，每个熔断器组Fu的默认值为“0000000”。在熔断器组Fu的值不等于默认值的情况下，与熔断器组Fu相关联的冗余存储地址用于替换熔断器组Fu所存储的缺陷存储地址。在熔断器组Fu的值等于默认值的情况下，该熔断器组Fu未使用，与该熔断器组Fu相关联的冗余存储地址不用于修复存储阵列。下面以指定M位是缺陷存储地址的最低2位为例，参考图3至图6来说明图2中的4个熔断器子单元GP0，GP1，GP2和GP3的工作原理。图3示出图2所示的第0熔断器子单元GP0的示意性工作原理图。图4示出图2所示的第1熔断器子单元的示意性工作原理图。图5示出图2所示的第2熔断器子单元的示意性工作原理图。图6示出图2所示的第3熔断器子单元的示意性工作原理图。在图3的示例中，第0熔断器子单元被配置为不存储最低2位的值等于二进制数00且其余位都为0的缺陷存储地址，即“0000000”。在需修复地址为“0000000”的情况下，通过除第0熔断器子单元之外的熔断器子单元来修复。因此，当熔断器内地址为“0000000”时，说明该熔断器组未使用，该熔断器组不用于修复存储阵列。在需修复地址为“XXXXXXX”的情况下，“XXXXXXX”可被存入第0熔断器子单元中的未使用的一个熔断器组。第0熔断器子单元中的每个熔断器组的输出值与熔断器内地址相同。当“XXXXXXX”与外部访问地址匹配时，对“XXXXXXX”的访问被链接至与存储“XXXXXXX”的熔断器组相关联的冗余地址。在图3的示例中，“XXXXXXX”表示除了“0000000”之外的所有值。在图4的示例中，第1熔断器子单元被配置为不存储最低2位的值等于二进制数01且其余位都为0的缺陷存储地址，即“0000001”。如上所述，目标位是指定M位中与j的等于1的位相对应的位。在图4的示例中，j=1，指定M位是最低2位，目标位是最低1位。在缺陷存储地址被存入第1熔断器子单元之前，缺陷存储地址的最低1位被反相器反相。在第1熔断器子单元中的任一熔断器组的值不等于默认值“0000000”的情况下，该熔断器组的值的最低1位被反相器反相以获得该熔断器组的输出值。参考图4，在需修复地址为“0000001”的情况下，通过除第1熔断器子单元之外的熔断器子单元来修复。如果“0000001”的最低1位被反相器反相，则得到“0000000”。由于第1熔断器子单元不修复地址“0000001”，因此，当熔断器内地址为“0000000”时，说明该熔断器组未使用，不用于修复存储阵列。在需修复地址为“XXXXXXX”的情况下，“XXXXXXX”的最低1位被反相器反相，得到“XXXXXXP”。其中，P表示X的反码。在X等于0时P等于1，在X等于1时P等于0。“XXXXXXP”可被存入第1熔断器子单元中的未使用的一个熔断器组。在存储“XXXXXXP”的熔断器组被读取之前，“XXXXXXP”的最低1位被反相器反相，得到“XXXXXXX”。当“XXXXXXX”与外部访问地址匹配时，对“XXXXXXX”的访问被链接至与存储“XXXXXXP”的熔断器组相关联的冗余地址。在图4的示例中，“XXXXXXX”表示除了“0000001”之外的所有值。在需修复地址为“0000000”的情况下，“0000000”的最低1位被反相器反相，得到“0000001”。“0000001”被存入第1熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的默认值“0000000”。“0000001”对应的输出地址为“0000000”，因此，在外部访问地址为“0000000”时，能够将对“0000000”的访问链接至与存储“0000001”的熔断器组相关联的冗余地址。在图5的示例中，第2熔断器子单元被配置为不存储最低2位的值等于二进制数10且其余位都为0的缺陷存储地址，即“0000010”。如上所述，目标位是指定M位中与j的等于1的位相对应的位。在图5的示例中，j=2，指定M位是最低2位，目标位是倒数第2位。在缺陷存储地址被存入第2熔断器子单元之前，缺陷存储地址的倒数第2位被反相器反相。在第2熔断器子单元中的任一熔断器组的值不等于默认值“0000000”的情况下，该熔断器组的值的倒数第2位被反相器反相以获得该熔断器组的输出值。参考图5，在需修复地址为“0000010”的情况下，通过除第2熔断器子单元之外的熔断器子单元来修复。如果“0000010”的倒数第2位被反相器反相，则得到“0000000”。由于第2熔断器子单元不修复地址“0000010”，因此，当熔断器内地址为“0000000”时，说明该熔断器组未使用，不用于修复存储阵列。在需修复地址为“XXXXXXX”的情况下，“XXXXXXX”的倒数第2位被反相器反相，得到“XXXXXPX”。“XXXXXPX”可被存入第2熔断器子单元中的未使用的一个熔断器组。在存储“XXXXXPX”的熔断器组被读取之前，“XXXXXPX”的倒数第2位被反相器反相，得到“XXXXXXX”。当“XXXXXXX”与外部访问地址匹配时，对“XXXXXXX”的访问被链接至与存储“XXXXXPX”的熔断器组相关联的冗余地址。在图5的示例中，“XXXXXXX”表示除了“0000010”之外的所有值。在需修复地址为“0000000”的情况下，“0000000”的倒数第2位被反相器反相，得到“0000010”。“0000010”被存入第2熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的默认值“0000000”。“0000010”对应的输出地址为“0000000”，因此，在外部访问地址为“0000000”时，能够将对“0000000”的访问链接至与存储“0000010”的熔断器组相关联的冗余地址。在图6的示例中，第3熔断器子单元被配置为不存储最低2位的值等于二进制数11且其余位都为0的缺陷存储地址，即“0000011”。如上所述，目标位是指定M位中与j的等于1的位相对应的位。在图6的示例中，j=3，指定M位是最低2位，目标位是最低2位。在缺陷存储地址被存入第3熔断器子单元之前，缺陷存储地址的最低2位被反相器反相。在第3熔断器子单元中的任一熔断器组的值不等于默认值“0000000”的情况下，该熔断器组的值的最低2位被反相器反相以获得该熔断器组的输出值。参考图6，在需修复地址为“0000011”的情况下，通过除第3熔断器子单元之外的熔断器子单元来修复。如果“0000011”的最低2位被反相器反相，则得到“0000000”。由于第3熔断器子单元不修复地址“0000011”，因此，当熔断器内地址为“0000000”时，说明该熔断器组未使用，不用于修复存储阵列。在需修复地址为“XXXXXXX”的情况下，“XXXXXXX”的最低2位被反相器反相，得到“XXXXXPP”。“XXXXXPP”可被存入第3熔断器子单元中的未使用的一个熔断器组。在存储“XXXXXPP”的熔断器组被读取之前，“XXXXXPP”的最低2位被反相器反相，得到“XXXXXXX”。当“XXXXXXX”与外部访问地址匹配时，对“XXXXXXX”的访问被链接至与存储“XXXXXPP”的熔断器组相关联的冗余地址。在图6的示例中，“XXXXXXX”表示除了“0000011”之外的所有值。在需修复地址为“0000000”的情况下，“0000000”的最低2位被反相器反相，得到“0000011”。“0000011”被存入第3熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的默认值“0000000”。“0000011”对应的输出地址为“0000000”，因此，在外部访问地址为“0000000”时，能够将对“0000000”的访问链接至与存储“0000011”的熔断器组相关联的冗余地址。根据本公开的实施例的熔断器单元200通过分组修复来区分熔断器组是否被使用，在任一熔断器组的值等于默认值的情况下，表示该熔断器组未被使用。当缺陷存储地址等于熔断器组的默认值时，该缺陷存储地址被存入除第0熔断器子单元之外的熔断器子单元。这些熔断器子单元会将该缺陷存储地址的目标位进行反相之后再存储，因此能够与熔断器组的默认值区别开。这样，熔断器单元200可在不设置主熔断器的情况下也能准确区分各个熔断器组是否被使用，并正确修复缺陷存储地址。在图1的示例中，需要×S =N×S +S个熔断器资源，其中S表示冗余地址的数量。而在图2的示例中，只需要N×S个熔断器资源，可节省S个熔断器资源。尽管根据本公开的实施例的熔断器单元需要布置若干反相器，但是每个熔断器子单元需要的反相器数量较少，相比于节省的S个熔断器资源，反相器的硬件成本和面积可忽略。因此，根据本公开的实施例的熔断器单元通过分组修复来取消主熔断器的方式可显著减少需要使用的熔断器资源，从而节省硬件成本以及减小存储阵列的面积。本公开的实施例还进一步考虑了冗余存储单元本身也有可能损坏的情况。如果某一冗余存储地址处的冗余存储单元已损坏，则将与该冗余存储地址相关联的熔断器组的值设置成损坏指示值。损坏指示值的每一位都为1。在任一熔断器组的值等于损坏指示值的情况下，与该熔断器组相关联的冗余存储地址不用于替换存储阵列的缺陷存储地址。在考虑冗余损坏的情况下，第i熔断器子单元被配置为：不存储指定M位的值等于i且其余位都为0的缺陷存储地址以及不存储指定M位的值等于i的反码且其余位都为1的缺陷存储地址。其中，i大于或者等于0且小于K。换句话说，第i熔断器子单元指的是K个熔断器子单元中的每个熔断器子单元，K个熔断器子单元中的每个熔断器子单元都服从上述配置方式。i的值可转换成M位的二进制数来与缺陷存储地址的指定M位的值进行比较。在M等于2且i等于0的示例中，第0熔断器子单元被配置为不存储指定2位的值等于二进制数00且其余位都为0的缺陷存储地址以及不存储指定2位的值等于二进制数11且其余位都为1的缺陷存储地址。在M等于2且i等于1的示例中，第1熔断器子单元被配置为不存储指定2位的值等于二进制数01且其余位都为0的缺陷存储地址以及不存储指定2位的值等于二进制数10且其余位都为1的缺陷存储地址。在M等于2且i等于2的示例中，第2熔断器子单元被配置为不存储指定2位的值等于二进制数10且其余位都为0的缺陷存储地址以及不存储指定2位的值等于二进制数01且其余位都为1的缺陷存储地址。在M等于2且i等于3的示例中，第3熔断器子单元被配置为不存储指定2位的值等于二进制数11且其余位都为0的缺陷存储地址以及不存储指定2位的值等于二进制数00且其余位都为1的缺陷存储地址。在第j熔断器子单元中的任一熔断器组的值等于损坏指示值的情况下，该熔断器组的输出值被设置为等于该熔断器组的值。也就是说，在这种情况下，该熔断器组的值的目标位不会被反相器反相来获得该熔断器组的输出值。下面以指定M位是缺陷存储地址的最低2位为例，参考图7至图10来说明图2中的4个熔断器子单元GP0，GP1，GP2和GP3的工作原理。图7示出图2所示的第0熔断器子单元GP0的示意性工作原理图。图8示出图2所示的第1熔断器子单元的示意性工作原理图。图9示出图2所示的第2熔断器子单元的示意性工作原理图。图10示出图2所示的第3熔断器子单元的示意性工作原理图。在图7的示例中，第0熔断器子单元被配置为不存储最低2位的值等于二进制数00且其余位都为0的缺陷存储地址以及不存储最低2位的值等于二进制数11且其余位都为1的缺陷存储地址即“1111111”。在需修复地址为“0000000”的情况下，通过除第0熔断器子单元之外的熔断器子单元来修复。因此，当熔断器内地址为“0000000”时，说明该熔断器组未使用，该熔断器组不用于修复存储阵列。在需修复地址为“1111111”的情况下，通过除第0熔断器子单元之外的熔断器子单元来修复。因此，当熔断器内地址为“1111111”时，说明与该熔断器组相关联的冗余存储单元已损坏，不用于修复存储阵列。在需修复地址为“XXXXXXX”的情况下，“XXXXXXX”可被存入第0熔断器子单元中的未使用的一个熔断器组。第0熔断器子单元中的每个熔断器组的输出值与熔断器内地址相同。当“XXXXXXX”与外部访问地址匹配时，对“XXXXXXX”的访问被链接至与存储“XXXXXXX”的熔断器组相关联的冗余地址。在图7的示例中，“XXXXXXX”表示除了“0000000”和“1111111”之外的所有值。在图8的示例中，第1熔断器子单元被配置为不存储最低2位的值等于二进制数01且其余位都为0的缺陷存储地址以及不存储最低2位的值等于二进制数10且其余位都为1的缺陷存储地址。在缺陷存储地址被存入第1熔断器子单元之前，缺陷存储地址的最低1位被反相器反相。在第1熔断器子单元中的任一熔断器组的值不等于默认值“0000000”且不等于损坏指示值“1111111”的情况下，该熔断器组的值的最低1位被反相器反相以获得该熔断器组的输出值。参考图8，在需修复地址为“0000001”的情况下，通过除第1熔断器子单元之外的熔断器子单元来修复。如果“0000001”的最低1位被反相器反相，则得到“0000000”。由于第1熔断器子单元不修复地址“0000001”，因此，当熔断器内地址为“0000000”时，说明该熔断器组未使用，不用于修复存储阵列。在需修复地址为“1111110”的情况下，通过除第1熔断器子单元之外的熔断器子单元来修复。如果“1111110”的最低1位被反相器反相，则得到“1111111”。由于第1熔断器子单元不修复地址“1111110”，因此，当熔断器内地址为“1111111”时，说明与该熔断器组相关联的冗余存储单元已损坏，不用于修复存储阵列。在需修复地址为“XXXXXXX”的情况下，“XXXXXXX”的最低1位被反相器反相，得到“XXXXXXP”。其中，P表示X的反码。在X等于0时P等于1，在X等于1时P等于0。“XXXXXXP”可被存入第1熔断器子单元中的未使用的一个熔断器组。在存储“XXXXXXP”的熔断器组被读取之前，“XXXXXXP”的最低1位被反相器反相，得到“XXXXXXX”。当“XXXXXXX”与外部访问地址匹配时，对“XXXXXXX”的访问被链接至与存储“XXXXXXP”的熔断器组相关联的冗余地址。在图8的示例中，“XXXXXXX”表示除了“0000001”和“1111110”之外的所有值。在需修复地址为“0000000”的情况下，“0000000”的最低1位被反相器反相，得到“0000001”。“0000001”被存入第1熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的默认值“0000000”。“0000001”对应的输出地址为“0000000”，因此，在外部访问地址为“0000000”时，能够将对“0000000”的访问链接至与存储“0000001”的熔断器组相关联的冗余地址。在需修复地址为“1111111”的情况下，“1111111”的最低1位被反相器反相，得到“1111110”。“1111110”被存入第1熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的损坏指示值“1111111”。“1111110”对应的输出地址为“1111111”，因此，在外部访问地址为“1111111”时，能够将对“1111111”的访问链接至与存储“1111110”的熔断器组相关联的冗余地址。在图9的示例中，第2熔断器子单元被配置为不存储最低2位的值等于二进制数10且其余位都为0的缺陷存储地址以及不存储最低2位的值等于二进制数01且其余位都为1的缺陷存储地址。在缺陷存储地址被存入第2熔断器子单元之前，缺陷存储地址的倒数第2位被反相器反相。在第2熔断器子单元中的任一熔断器组的值不等于默认值“0000000”且不等于损坏指示值“1111111”的情况下，该熔断器组的值的倒数第2位被反相器反相以获得该熔断器组的输出值。参考图9，在需修复地址为“0000010”的情况下，通过除第2熔断器子单元之外的熔断器子单元来修复。如果“0000010”的倒数第2位被反相器反相，则得到“0000000”。由于第2熔断器子单元不修复地址“0000010”，因此，当熔断器内地址为“0000000”时，说明该熔断器组未使用，不用于修复存储阵列。在需修复地址为“1111101”的情况下，通过除第2熔断器子单元之外的熔断器子单元来修复。如果“1111101”的倒数第2位被反相器反相，则得到“1111111”。由于第2熔断器子单元不修复地址“1111101”，因此，当熔断器内地址为“1111111”时，说明与该熔断器组相关联的冗余存储单元已损坏，不用于修复存储阵列。在需修复地址为“XXXXXXX”的情况下，“XXXXXXX”的倒数第2位被反相器反相，得到“XXXXXPX”。“XXXXXPX”可被存入第2熔断器子单元中的未使用的一个熔断器组。在存储“XXXXXPX”的熔断器组被读取之前，“XXXXXPX”的倒数第2位被反相器反相，得到“XXXXXXX”。当“XXXXXXX”与外部访问地址匹配时，对“XXXXXXX”的访问被链接至与存储“XXXXXPX”的熔断器组相关联的冗余地址。在图9的示例中，“XXXXXXX”表示除了“0000010”和“1111101”之外的所有值。在需修复地址为“0000000”的情况下，“0000000”的倒数第2位被反相器反相，得到“0000010”。“0000010”被存入第2熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的默认值“0000000”。“0000010”对应的输出地址为“0000000”，因此，在外部访问地址为“0000000”时，能够将对“0000000”的访问链接至与存储“0000010”的熔断器组相关联的冗余地址。在需修复地址为“1111111”的情况下，“1111111”的倒数第2位被反相器反相，得到“1111101”。“1111101”被存入第2熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的损坏指示值“1111111”。“1111101”对应的输出地址为“1111111”，因此，在外部访问地址为“1111111”时，能够将对“1111111”的访问链接至与存储“1111101”的熔断器组相关联的冗余地址。在图10的示例中，第3熔断器子单元被配置为不存储最低2位的值等于二进制数11且其余位都为0的缺陷存储地址以及不存储最低2位的值等于二进制数00且其余位都为1的缺陷存储地址。在缺陷存储地址被存入第3熔断器子单元之前，缺陷存储地址的最低2位被反相器反相。在第3熔断器子单元中的任一熔断器组的值不等于默认值“0000000”且不等于损坏指示值“1111111”的情况下，该熔断器组的值的最低2位被反相器反相以获得该熔断器组的输出值。参考图10，在需修复地址为“0000011”的情况下，通过除第3熔断器子单元之外的熔断器子单元来修复。如果“0000011”的最低2位被反相器反相，则得到“0000000”。由于第3熔断器子单元不修复地址“0000011”，因此，当熔断器内地址为“0000000”时，说明该熔断器组未使用，不用于修复存储阵列。在需修复地址为“1111100”的情况下，通过除第3熔断器子单元之外的熔断器子单元来修复。如果“1111100”的最低2位被反相器反相，则得到“1111111”。由于第3熔断器子单元不修复地址“1111100”，因此，当熔断器内地址为“1111111”时，说明与该熔断器组相关联的冗余存储单元已损坏，不用于修复存储阵列。在需修复地址为“XXXXXXX”的情况下，“XXXXXXX”的最低2位被反相器反相，得到“XXXXXPP”。“XXXXXPP”可被存入第3熔断器子单元中的未使用的一个熔断器组。在存储“XXXXXPP”的熔断器组被读取之前，“XXXXXPP”的最低2位被反相器反相，得到“XXXXXXX”。当“XXXXXXX”与外部访问地址匹配时，对“XXXXXXX”的访问被链接至与存储“XXXXXPP”的熔断器组相关联的冗余地址。在图10的示例中，“XXXXXXX”表示除了“0000011”和“1111100”之外的所有值。在需修复地址为“0000000”的情况下，“0000000”的最低2位被反相器反相，得到“0000011”。“0000011”被存入第3熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的默认值“0000000”。“0000011”对应的输出地址为“0000000”，因此，在外部访问地址为“0000000”时，能够将对“0000000”的访问链接至与存储“0000011”的熔断器组相关联的冗余地址。在需修复地址为“1111111”的情况下，“1111111”的最低2位被反相器反相，得到“1111100”。“1111100”被存入第3熔断器子单元中的未使用的一个熔断器组，以区别于熔断器组的损坏指示值“1111111”。“1111100”对应的输出地址为“1111111”，因此，在外部访问地址为“1111111”时，能够将对“1111111”的访问链接至与存储“1111100”的熔断器组相关联的冗余地址。通过将第i熔断器子单元进一步配置为不存储指定M位的值等于i的反码且其余位都为1的缺陷存储地址，熔断器单元200可在不设置主熔断器的情况下也能准确判断与熔断器组相关联的冗余存储地址是否已损坏，并正确修复缺陷存储地址。在本公开的一些实施例中，每个熔断器子单元中的熔断器组的数量可相等。在本公开的一些替代实施例中，每个熔断器子单元中的熔断器组的数量可以不相等。在本公开的一些实施例中，指定M位可以是缺陷存储地址的连续的M位。例如，指定M位是缺陷存储地址的最低M位。在本公开的另一些实施例中，指定M位可以是缺陷存储地址的不连续的M位。本公开的实施例不限制M位中每一位的位置。此外，本公开的实施例也不限制M的值。图11示出根据本公开的实施例的用于处理熔断器单元的处理方法1100的示意性流程图。在图11的框S1102处，接收存储阵列的缺陷存储地址。缺陷存储地址可以是行地址，也可以是列地址。在框S1104处，获取缺陷存储地址的指定M位的值作为分配参考值。假设指定M位为最低2位，则从缺陷存储地址“XXXXX00”获取的分配参考值是00，从缺陷存储地址“XXXXX01”获取的分配参考值是01，从缺陷存储地址“XXXXX10”获取的分配参考值是10，从缺陷存储地址“XXXXX11”获取的分配参考值是11。在框S1106处，确定缺陷存储地址的其余位是否都为0。其余位是缺陷存储地址中除了指定M位之外的位。如果缺陷存储地址的其余位都为0，则在框S1108处，将缺陷存储地址存储到K个熔断器子单元中的第p熔断器子单元中的未使用的一个熔断器组。其中，p不等于分配参考值。在指定M位为最低2位的示例中，缺陷存储地址“0000000”可被存储到除了第0熔断器子单元之外的任一熔断器子单元，缺陷存储地址“0000001”可被存储到除了第1熔断器子单元之外的任一熔断器子单元，缺陷存储地址“0000010”可被存储到除了第2熔断器子单元之外的任一熔断器子单元，缺陷存储地址“0000011”可被存储到除了第3熔断器子单元之外的任一熔断器子单元。在考虑冗余存储单元本身也有可能损坏的实施例中，尽管未示出，图11所示的处理方法1100还包括：对于每个熔断器组，响应于与该熔断器组相关联的冗余存储地址损坏，将该熔断器组的值设置成损坏指示值。损坏指示值的每一位都为1。在N=7的示例中，损坏指示值为“1111111”。参考图11，如果缺陷存储地址的其余位不都为0，则在框S1110处，确定缺陷存储地址的其余位是否都为1。如果缺陷存储地址的其余位都为1，则在框S1112处，将缺陷存储地址存储到K个熔断器子单元中的第q熔断器子单元中的未使用的一个熔断器组。其中，q的反码不等于分配参考值。在指定M位为最低2位的示例中，缺陷存储地址“1111111”可被存储到除了第0熔断器子单元之外的任一熔断器子单元，缺陷存储地址“1111110”可被存储到除了第1熔断器子单元之外的任一熔断器子单元，缺陷存储地址“1111101”可被存储到除了第2熔断器子单元之外的任一熔断器子单元，缺陷存储地址“1111100”可被存储到除了第3熔断器子单元之外的任一熔断器子单元。如果缺陷存储地址的其余位不都为1，则在框S1114处，将缺陷存储地址存储到K个熔断器子单元中的任一未使用的熔断器组。本公开的实施例还提供了对熔断器单元中的各个熔断器组的状态的判断方式。图12示出在不考虑冗余存储单元本身也有可能损坏的实施例中对熔断器单元中的各个熔断器组的状态的判断过程的示意性流程图。在图12的框S1202处，在存储阵列被访问的情况下，将每个熔断器组作为目标熔断器组。在框S1204处，确定目标熔断器组的值是否等于默认值。如果确定目标熔断器组的值等于默认值，则表示目标熔断器组未使用，即目标熔断器组对应的冗余存储地址未使用，过程回到框S1202处继续将下一个熔断器组作为目标熔断器组。如果确定目标熔断器组的值不等于默认值，则在框S1206处将访问存储阵列的访问地址与目标熔断器组的输出值进行比较，确定访问地址与目标熔断器组的输出值是否匹配。如果访问地址与目标熔断器组的输出值匹配，则在框S1208处将对访问地址的访问链接至与目标熔断器组相关联的冗余存储地址。如果访问地址与目标熔断器组的输出值不匹配，则过程回到框S1202处继续将下一个熔断器组作为目标熔断器组。图13示出在考虑冗余存储单元本身也有可能损坏的情况下对熔断器单元中的各个熔断器组的状态的判断过程的示意性流程图。在图13的框S1302处，在存储阵列被访问的情况下，将每个熔断器组作为目标熔断器组。在框S1304处，确定目标熔断器组的值是否等于默认值或损坏指示值。如果确定目标熔断器组的值等于默认值或损坏指示值，则表示目标熔断器组对应的冗余存储地址未使用或者已损坏，过程回到框S1302处继续将下一个熔断器组作为目标熔断器组。如果确定目标熔断器组的值不等于默认值且不等于损坏指示值，则在框S1306处将访问存储阵列的访问地址与目标熔断器组的输出值进行比较，确定访问地址与目标熔断器组的输出值是否匹配。如果访问地址与目标熔断器组的输出值匹配，则在框S1308处将对访问地址的访问链接至与目标熔断器组相关联的冗余存储地址。如果访问地址与目标熔断器组的输出值不匹配，则过程回到框S1302处继续将下一个熔断器组作为目标熔断器组。图14示出根据本公开的实施例的存储阵列1400的示意性框图。该存储阵列1400可包括如图2所示的熔断器单元200。本公开的实施例还提供了一种半导体器件。该半导体器件包括如图14所示的存储阵列1400。图15示出根据本公开的实施例的处理装置1500的示意性框图。处理装置1500用于处理根据本公开的实施例的熔断器单元。如图15所示，该处理装置1500可包括处理器1510和存储有计算机程序的存储器1520。当计算机程序由处理器1510执行时，使得处理装置1500可执行如图11至图13所示的处理方法的步骤。在一个示例中，处理装置1500可以是计算机设备或中央处理器。处理装置1500可接收存储阵列的缺陷存储地址。处理装置1500可获取缺陷存储地址的指定M位的值作为分配参考值。处理装置1500可确定缺陷存储地址的其余位是否都为0。其余位是缺陷存储地址中除了指定M位之外的位。响应于缺陷存储地址的其余位都为0，处理装置1500可将缺陷存储地址存储到K个熔断器子单元中的第p熔断器子单元中的未使用的一个熔断器组。其中，p不等于分配参考值。在本公开的一些实施例中，响应于存储阵列被访问，处理装置1500可将每个熔断器组作为目标熔断器组并执行以下操作：确定目标熔断器组的值是否等于默认值；响应于目标熔断器组的值不等于默认值，将访问存储阵列的访问地址与目标熔断器组的输出值进行比较；以及响应于访问地址与目标熔断器组的输出值匹配，将对访问地址的访问链接至与目标熔断器组相关联的冗余存储地址。在本公开的一些实施例中，处理装置1500可确定缺陷存储地址的其余位是否都为1。响应于缺陷存储地址的其余位都为1，处理装置1500可将缺陷存储地址存储到K个熔断器子单元中的第q熔断器子单元中的未使用的一个熔断器组。其中，q的反码不等于分配参考值。对于每个熔断器组，响应于与该熔断器组相关联的冗余存储地址损坏，处理装置1500可将该熔断器组的值设置成损坏指示值。损坏指示值的每一位都为1。在本公开的一些实施例中，响应于存储阵列被访问，处理装置1500可将每个熔断器组作为目标熔断器组并执行以下操作：确定目标熔断器组的值是否等于默认值或者损坏指示值；响应于目标熔断器组的值不等于默认值且不等于损坏指示值，将访问存储阵列的访问地址与目标熔断器组的输出值进行比较；以及响应于访问地址与目标熔断器组的输出值匹配，将对访问地址的访问链接至与目标熔断器组相关联的冗余存储地址。在本公开的实施例中，处理器1510可以是例如中央处理单元、微处理器、数字信号处理器、基于多核的处理器架构的处理器等。存储器1520可以是使用数据存储技术实现的任何类型的存储器，包括但不限于随机存取存储器、只读存储器、基于半导体的存储器、闪存、磁盘存储器等。此外，在本公开的实施例中，装置1500也可包括输入设备1530，用于输入缺陷存储地址。另外，装置1500还可包括输出设备1540，用于输出熔断器组的输出值。在本公开的其它实施例中，还提供了一种存储有计算机程序的计算机可读存储介质，其中，计算机程序在由处理器执行时能够实现如图11至图13所示的处理方法的步骤。综上所述，通过分组修复的方式，根据本公开的实施例的在存储阵列中使用的熔断器单元能够在取消主熔断器的情况下依然正常修复存储阵列，从而减少需要使用的熔断器资源，节省硬件成本以及减小存储阵列的面积。根据本公开的实施例的在存储阵列中使用的熔断器单元还能够处理冗余存储单元损坏的情况，并准确反映各个熔断器组的状态。附图中的流程图和框图显示了根据本公开的多个实施例的装置和方法的可能实现的体系架构、功能和操作。在这点上，流程图或框图中的每个方框可以代表一个模块、程序段或指令的一部分，所述模块、程序段或指令的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。在有些作为替换的实现中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个连续的方框实际上可以基本并行地执行，它们有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图和/或流程图中的每个方框、以及框图和/或流程图中的方框的组合，可以用执行规定的功能或动作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。除非上下文中另外明确地指出，否则在本文和所附权利要求中所使用的词语的单数形式包括复数，反之亦然。因而，当提及单数时，通常包括相应术语的复数。相似地，措辞“包含”和“包括”将解释为包含在内而不是独占性地。同样地，术语“包括”和“或”应当解释为包括在内的，除非本文中明确禁止这样的解释。在本文中使用术语“示例”之处，特别是当其位于一组术语之后时，所述“示例”仅仅是示例性的和阐述性的，且不应当被认为是独占性的或广泛性的。适应性的进一步的方面和范围从本文中提供的描述变得明显。应当理解，本申请的各个方面可以单独或者与一个或多个其它方面组合实施。还应当理解，本文中的描述和特定实施例旨在仅说明的目的并不旨在限制本申请的范围。以上对本公开的若干实施例进行了详细描述，但显然，本领域技术人员可以在不脱离本公开的精神和范围的情况下对本公开的实施例进行各种修改和变型。本公开的保护范围由所附的权利要求限定。
