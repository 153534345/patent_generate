标题title
应用于UVM验证平台的验证方法及装置
摘要abst
本申请的实施例提供了一种应用于UVM验证平台的验证方法及装置，该方法包括：根据待测设计中的需求特征参数生成对应的基础单元序列；基于基础单元序列创建待测设计中各项待测功能分别对应的初始化案例和测试案例；根据初始化案例和测试案例更新UVM验证平台中的验证程序。本申请实施例的技术方案可以在创建各项待测功能分别对应的初始化案例和测试案例时基于基础单元序列直接获取到基础单元序列中的需求特征参数，从而减少创建初始化案例和测试案例的所需参数，以降低整体的代码量和开发复杂度，进而达到提升开发效率且缩短开发耗时的目的。
权利要求书clms
1.一种应用于UVM验证平台的验证方法，其特征在于，所述方法包括：根据待测设计中的需求特征参数生成对应的基础单元序列；基于所述基础单元序列创建所述待测设计中各项待测功能分别对应的初始化案例和测试案例；根据所述初始化案例和所述测试案例更新所述UVM验证平台中的验证程序。2.根据权利要求1所述的验证方法，其特征在于，所述基于所述基础单元序列创建所述待测设计中各项待测功能分别对应的初始化案例和测试案例，包括：获取所述待测设计对应的初始化参数；根据所述初始化参数生成所述待测设计对应的初始化序列，所述初始化序列为所述基础单元序列的子类；基于所述初始化序列创建所述待测设计对应的初始化案例，并将所述待测设计对应的初始化案例作为每一待测功能对应的初始化案例。3.根据权利要求2所述的验证方法，其特征在于，所述验证方法还包括：获取所述待测功能中的初始化调节参数，基于所述初始化调节参数生成初始化调节序列；所述初始化调节序列为所述基础单元序列的子类；根据所述初始化调节序列更新所述待测功能对应的初始化案例。4.根据权利要求1所述的验证方法，其特征在于，所述基于所述基础单元序列创建所述待测设计中各项待测功能分别对应的初始化案例和测试案例，包括：获取所述待测功能中不同待执行动作分别对应的执行参数；根据每一待执行动作对应的执行参数生成驱动序列，以得到所述待测功能中各个待执行动作分别对应的驱动序列，所述驱动序列为所述基础单元序列的子类；基于所述各个待执行动作分别对应的驱动序列创建所述测试案例。5.根据权利要求4所述的验证方法，其特征在于，所述基于所述各个待执行动作分别对应的驱动序列创建所述测试案例，包括：获取所述待测功能中各个待执行动作的优先级参数；根据所述各个待执行动作分别对应的优先级参数生成所述待测功能对应的测试序列，所述测试序列为所述基础单元序列的子类；将所述待测功能中各个待执行动作分别对应的驱动序列封装至所述测试序列中，并将所述测试序列中驱动序列对应的调用等级调整至所述测试序列的调用等级；基于所述测试序列创建所述测试案例。6.根据权利要求1所述的验证方法，其特征在于，所述根据待测设计中的需求特征参数生成对应的基础单元序列，包括：获取所述待测设计中各项待测功能所需的数据类型；将所述各项待测功能所需的数据类型作为所述需求特征参数，并基于需求特征参数创建对应的事务包；基于所述事务包生成所述待测设计对应的基础单元序列。7.根据权利要求6所述的验证方法，其特征在于，所述待测设计还包括新增待测功能，所述验证方法还包括：确定所述待测设计中新增待测功能所需的数据类型；若确定所述事务包中未包含所述新增待测功能所需的数据类型，则将所述新增待测功能所需的数据类型添加至所述事务包中，以得到更新后的事务包；基于所述更新后的事务包对所述待测设计对应的基础单元序列进行更新。8.一种应用于UVM验证平台的验证装置，其特征在于，包括：序列生成模块，配置为根据待测设计中的需求特征参数生成对应的基础单元序列；案例创建模块，配置为基于所述基础单元序列创建所述待测设计中各项待测功能分别对应的初始化案例和测试案例；更新模块，配置为根据所述初始化案例和所述测试案例更新所述UVM验证平台中的验证程序。9.一种计算机可读存储介质，其特征在于，其上存储有计算机可读指令，当所述计算机可读指令被计算机的处理器执行时，使计算机执行权利要求1至7中的任一项所述的应用于UVM验证平台的验证方法。10.一种电子设备，其特征在于，包括：一个或多个处理器；存储装置，用于存储一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行时，使得所述电子设备实现如权利要求1至7中任一项所述的应用于UVM验证平台的验证方法。
说明书desc
技术领域本申请涉及设计验证技术领域，具体而言，涉及一种应用于UVM验证平台的验证方法及装置。背景技术随着数字集成电路设计规模的不断扩大，芯片验证工作量在芯片设计周期中的占比越来越大，相关技术中，为了高效完成对待测设计的验证，通常采用UVM验证平台对待测设计进行验证，其中， UVM验证平台提供了一个完整的框架和一组规范。但在根据待测设计对UVM验证平台中的验证程序进行更新时，若待测设计中包含多个待测功能，则开发人员便需要分别为多个待测功能开发编写各自对应的验证案例，并将多个待测功能对应的验证案例均更新至UVM验证平台针对待测设计进行验证的验证程序中，UVM验证平台才能对待测设计中的多个待测功能实施验证，导致开发的工作量极具增加，致使出现开发效率降低且开发耗时延长的问题。发明内容为解决上述技术问题，本申请的实施例提供了一种应用于UVM验证平台的验证方法、装置、计算机可读存储介质及电子设备。根据本申请实施例的一个方面，提供了一种应用于UVM验证平台的验证方法，包括：根据待测设计中的需求特征参数生成对应的基础单元序列；基于所述基础单元序列创建所述待测设计中各项待测功能分别对应的初始化案例和测试案例；根据所述初始化案例和所述测试案例更新所述UVM验证平台中的验证程序。根据本申请实施例的一个方面，提供了一种应用于UVM验证平台的验证装置，包括：序列生成模块，配置为根据待测设计中的需求特征参数生成对应的基础单元序列；案例创建模块，配置为基于所述基础单元序列创建所述待测设计中各项待测功能分别对应的初始化案例和测试案例；更新模块，配置为根据所述初始化案例和所述测试案例更新所述UVM验证平台中的验证程序。本申请的一些实施例中，基于前述方案，所述案例创建模块还配置为：获取所述待测设计对应的初始化参数；根据所述初始化参数生成所述待测设计对应的初始化序列，所述初始化序列为所述基础单元序列的子类；基于所述初始化序列创建所述待测设计对应的初始化案例，并将所述待测设计对应的初始化案例作为每一待测功能对应的初始化案例。本申请的一些实施例中，基于前述方案，所述案例创建模块还配置为：获取所述待测功能中的初始化调节参数；基于所述初始化调节参数生成初始化调节序列；根据所述初始化调节序列更新所述待测功能对应的初始化案例。本申请的一些实施例中，基于前述方案，所述案例创建模块还配置为：获取所述待测功能中不同待执行动作分别对应的执行参数；根据每一待执行动作对应的执行参数生成驱动序列，以得到所述待测功能中各个待执行动作分别对应的驱动序列，所述驱动序列为所述基础单元序列的子类；基于所述各个待执行动作分别对应的驱动序列创建所述测试案例。本申请的一些实施例中，基于前述方案，所述案例创建模块还配置为：获取所述待测功能中各个待执行动作的优先级参数；根据所述各个待执行动作分别对应的优先级参数生成所述待测功能对应的测试序列，所述测试序列为所述基础单元序列的子类；将所述待测功能中各个待执行动作分别对应的驱动序列封装至所述测试序列中，并将所述测试序列中驱动序列对应的调用等级调整至所述测试序列的调用等级；基于所述测试序列创建所述测试案例。本申请的一些实施例中，基于前述方案，所述序列生成模块还配置为：获取所述待测设计中各项待测功能所需的数据类型；将所述各项待测功能所需的数据类型作为所述需求特征参数，并基于需求特征参数创建对应的事务包；基于所述事务包生成所述待测设计对应的基础单元序列。本申请的一些实施例中，基于前述方案，所述待测设计还包括新增待测功能，所述序列生成模块还配置为：确定所述待测设计中新增待测功能所需的数据类型；若确定所述事务包中未包含所述新增待测功能所需的数据类型，则将所述新增待测功能所需的数据类型添加至所述事务包中，以得到更新后的事务包；基于所述更新后的事务包对所述待测设计对应的基础单元序列进行更新。根据本申请实施例的一个方面，提供了一种计算机可读存储介质，其上存储有计算机可读指令，当所述计算机可读指令被计算机的处理器执行时，使计算机执行如上述实施例中所述的应用于UVM验证平台的验证方法。根据本申请实施例的一个方面，提供了一种电子设备，包括：一个或多个处理器；存储装置，用于存储一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行时，使得所述电子设备实现如上述实施例中所述的应用于UVM验证平台的验证方法。本申请实施例的技术方案中，得益于由待测设计中的需求特征参数生成的基础单元序列，使得基于基础单元序列所创建的初始化案例和测试案例均能够直接获取到基础单元序列中的需求特征参数，从而减少创建初始化案例和测试案例的所需参数，进而降低整体的代码量和开发复杂度，达到提升开发效率且缩短开发耗时的目的。另外，通过区分初始化案例和测试案例，开发人员还可以根据自身能力有选择地针对初始化案例或测试案例进行开发，降低开发人员的技术要求，降低更新后的验证程序中出现错误的可能性。附图说明此处的附图被并入说明书中并构成本说明书的一部分，示出了符合本申请的实施例，并与说明书一起用于解释本申请的原理。显而易见地，下面描述中的附图仅仅是本申请的一些实施例，对于本领域普通技术者来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1是本申请的一示例性实施例示出的一种应用于UVM验证平台的验证方法的流程图。图2是图1所示实施例中步骤S120在一示例实施例中的流程图。图3是图1所示实施例中步骤S120在另一示例实施例中的流程图。图4是在图2所示实施例的基础上提出的一种应用于UVM验证平台的验证方法的流程图。图5是图3所示实施例中步骤S330在一示例实施例中的流程图。图6是本申请的另一示例性实施例示出的一种应用于UVM验证平台的验证方法的流程图。图7是本申请的一示例性实施例示出的应用于UVM验证平台的验证装置的框图。图8是本申请的一示例性实施例示出的电子设备的结构示意图。具体实施方式现在将参考附图更全面地描述示例实施方式。然而，示例实施方式能够以多种形式实施，且不应被理解为限于在此阐述的范例；相反，提供这些实施方式使得本申请将更加全面和完整，并将示例实施方式的构思全面地传达给本领域的技术人员。此外，所描述的特征、结构或特性可以以任何合适的方式结合在一个或更多实施例中。在下面的描述中，提供许多具体细节从而给出对本申请的实施例的充分理解。然而，本领域技术人员将意识到，可以实践本申请的技术方案而没有特定细节中的一个或更多，或者可以采用其它的方法、组元、装置、步骤等。在其它情况下，不详细示出或描述公知方法、装置、实现或者操作以避免模糊本申请的各方面。附图中所示的方框图仅仅是功能实体，不一定必须与物理上独立的实体相对应。即，可以采用软件形式来实现这些功能实体，或在一个或多个硬件模块或集成电路中实现这些功能实体，或在不同网络和/或处理器装置和/或微控制器装置中实现这些功能实体。附图中所示的流程图仅是示例性说明，不是必须包括所有的内容和操作/步骤，也不是必须按所描述的顺序执行。例如，有的操作/步骤还可以分解，而有的操作/步骤可以合并或部分合并，因此实际执行的顺序有可能根据实际情况改变。需要说明的是：在本文中提及的“多个”是指两个或两个以上。“和/或”描述关联对象的关联关系，表示可以存在三种关系，例如，A和/或B可以表示：单独存在A，同时存在A和B，单独存在B这三种情况。字符“/”一般表示前后关联对象是一种“或”的关系。首先需要说明的是，UVM验证平台用于针对硬件设计进行验证，该UVM验证平台提供了一个完整的框架和一组规范。其中，UVM验证平台为基于UVM验证方法所搭建的验证平台。相关技术中，UVM验证平台对待测设计实施验证时，通常需要先开发编写出该待测设计对应的验证程序，以使得UVM验证平台基于该验证程序对该待测设计实施验证。若待测设计中包含多个待测功能，则开发人员便需要为多个待测功能开发编写各自对应的验证案例，并将多个待测功能对应的验证案例均更新至UVM验证平台针对待测设计进行验证的验证程序中，UVM验证平台才能对待测设计中的多个待测功能实施验证。但目前分别对多个待测功能各自对应的验证案例进行开发编写的工作量较大，导致待测设计对应的验证程序开发效率较低，致使验证耗时延长。因此，本申请实施例的技术方案提出了一种应用于UVM验证平台的验证方法，具体参照图1所示。该方法可以应用于UVM验证平台或其他基于UVM构建的验证平台。该方法至少包括步骤S110至步骤S130，详细介绍如下：在步骤S110中，根据待测设计中的需求特征参数生成对应的基础单元序列。需要说明的是，序列在UVM验证平台的验证程序中用于组织、描述和控制测试行为。通常待测设计对应的验证程序由多个不同的序列构成，也就是说，基于序列将待测设计分解为更小的、可管理的多个单元，以降低验证程序的开发难度，同时便于开发人员排除故障。另外，不同的序列之间还可以通过继承的方式任意组合，以实现测试行为的复用和扩展，满足待测设计中不同待测功能的测试需求。其中，需求特征参数表征当前待测设计中各项待测功能执行所需的基本参数，而在本申请中根据待测设计中的需求特征参数生成对应的基础单元序列的方式可以根据需要灵活设置，在一个示例中，可以先获取待测设计中各项待测功能所需的数据类型；其中，各项待测功能所需的数据类型为执行各项待测功能的硬性条件，将各项待测功能所需的数据类型作为需求特征参数，并基于需求特征参数创建事务包；再基于事务包生成待测设计对应的基础单元序列，也就是将事务包添加至生成的基础单元序列中作为待传递参数，以便于继承于该基础单元序列的序列接收到作为待传递参数的事务包。例如，若各项待测功能所需的数据类型包括第一数据类型、第二数据类型和第三数据类型，则将第一数据类型、第二数据类型和第三数据类型作为需求特征参数，再根据需求特征参数中的第一数据类型、第二数据类型和第三数据类型生成多个待添加字段，并按照UVM检测平台预设的排列规则对多个待添加字段进行排列，再基于排列后的多个待添加字段创建待测设计对应的事务包，即将排列后的多个待添加字段添加至创建的事务包中。最后将该事务包添加至生成的基础单元序列中作为待传递参数，以得出待测设计对应的基础单元序列。在另一个示例中，还可以获取各项待测功能所需的数据类型对应的约束规则，将各项待测功能所需的数据类型和约束规则作为需求特征参数，再基于共性参数创建待测设计对应的事务包，从而在将事务包添加至生成的基础单元序列中作为待传递参数之后，能够在确保基础单元序列的生成难易度较低的前提下，扩展基础单元序列的传递内容，提高基础单元序列的可复用性。另外，考虑到待测设计在开发阶段存在进一步新增待测功能的可能性，本申请还可以在待测设计中还包括新增待测功能时，确定待测设计中新增待测功能所需的数据类型，若确定事务包中未包含新增待测功能所需的数据类型，则表征基于当前事务包生成的基础单元序列无法复用在新增待测功能中，便将新增待测功能所需的数据类型添加至当前事务包中，以得到更新后的事务包，最后基于更新后的事务包对待测设计对应的基础单元序列进行更新，从而使得更新后的基础单元序列能够复用在新增待测功能中。同时，基于更新后的基础单元序列能够进一步扩大基础单元序列的可复用性。在步骤S120中，基于基础单元序列创建待测设计中各项待测功能分别对应的初始化案例和测试案例。需要说明的是，初始化案例和测试案例均是待测功能的验证案例的组成部分。其中，初始化案例用于提供实施待测功能的初始实施环境。测试案例用于对待测功能进行仿真。在本申请的实施方式中，根据待测设计生成出对应的基础单元序列之后，便可以基于基础单元序列创建待测设计中各项待测功能对应的初始化案例和测试案例，以便于后续搭建待测功能的初始实施环境完成待测功能的仿真。在本申请的一个实施例中，请参阅图2，步骤S120中基于基础单元序列创建待测设计中各项待测功能分别对应的初始化案例和测试案例的过程，可以包括步骤S210至步骤S230。步骤S210，获取待测设计对应的初始化参数。其中，初始化参数表征待测设计中实施各项待测功能之前所对应的初始实施环境的参数信息。例如，寄存器配置、等待状态等参数信息。步骤S220，根据初始化参数生成待测设计对应的初始化序列，初始化序列为基础单元序列的子类。在本申请的实施方式中，获取到待测设计对应的初始化参数之后，便可以根据初始化参数生成待测设计对应的初始化序列，也就是将待测设计对应的初始化参数添加至创建的初始化序列中，得出待测设计对应的初始化序列。同时，初始化序列作为基础单元序列的子类，也就是将该初始化序列继承于基础单元序列，以使得执行待测设计对应的初始化序列时，能够直接接收到基础单元序列所传递的需求特征参数，从而减少创建初始化序列的所需参数，进而减少初始化序列中的代码量，降低开发难度且减少故障率。在一个示例中，生成初始化序列的过程中，可以利用pre_body指令将初始化参数添加至初始化序列中，以提高初始化序列中初始化参数的执行优先级。步骤S230，基于初始化序列创建待测设计对应的初始化案例，并将待测设计对应的初始化案例作为每一待测功能对应的初始化案例。在本申请的实施方式中，生成出待测设计对应的初始化序列之后，便可以基于初始化序列创建待测设计对应的初始化案例，也就是将初始化序列在创建的初始化案例中实例化，并使初始化序列在初始化案例对应的序列器中启动执行，从而得到初始化案例，进而将待测设计对应的初始化案例作为每一待测功能对应的初始化案例，以便于在执行各项待测功能时，均能够根据该初始化案例搭建出待测设计对应的初始实施环境。通过上述实施方式，在基于基础单元序列创建各项待测功能分别对应的初始化案例的过程中，根据获取到的待测设计对应的初始化参数生成出各项待测功能对应的用于创建初始化案例的初始化序列，将初始化序列继承于基础单元序列，使初始化序列作为基础单元序列的子类，以直接接收基础单元序列传递的需求特征参数，减少创建初始化序列的所需参数，从而降低整体的代码量和开发难度，缩短开发耗时。在本申请的一个实施例中，请参阅图3，步骤S120中基于基础单元序列创建待测设计中各项待测功能分别对应的初始化案例和测试案例的过程，还可以包括步骤S310至步骤S330。步骤S310，获取待测功能中不同待执行动作各自对应的执行参数。其中，待测功能由多个待执行动作构成。执行参数为待执行动作所执行的参数信息。步骤S320，根据每一待执行动作对应的执行参数生成驱动序列，以得到待测功能中各个待执行动作分别对应的驱动序列，驱动序列为基础单元序列的子类。在本申请的实施方式中，获取到待测功能中不同待执行动作对应的执行参数之后，便可以根据每一待执行动作各自对应的执行参数生成驱动序列，也就是针对每一待测动作均通过将对应的执行参数添加至创建的驱动序列中，得出每一待测动作各自对应的驱动序列，以得到待测功能中各个待执行动作分别对应的驱动序列。同时，每一驱动序列均作为基础单元序列的子类，也就是将每一驱动序列继承于基础单元序列，以使得执行每一待测动作对应的驱动序列时，能够直接接收到基础单元序列所传递的需求特征参数，从而减少创建驱动序列的所需参数，进而减少驱动序列中的代码量，进一步降低整体的代码量，且使得开发难度和故障率进一步下降。步骤S330，基于各个待执行动作分别对应的驱动序列创建测试案例。在本申请的实施方式中，生成出待测功能中各个待执行动作分别对应的驱动序列之后，便可以基于各个待执行动作分别对应的驱动序列创建测试案例，也就是将多个驱动序列均在创建的测试案例中实例化，并使每一驱动序列均在测试案例对应的序列器中启动执行，从而得出每一待测功能对应的测试案例，以便于根据测试案例对每一待测功能中的各个待执行动作进行仿真。通过上述实施方式，在基于基础单元序列创建各项待测功能分别对应的测试案例的过程中，根据获取到的每一待测功能中不同待执行动作各自对应的执行参数生成不同待执行动作各自对应的驱动序列，再基于每一待测功能中各个待执行动作分别对应的驱动序列创建得到该待测功能对应的测试案例，由于每一驱动序列均继承于基础单元序列，驱动序列作为基础单元序列的子类，能够直接接收基础单元序列传递的需求特征参数，减少创建驱动序列的所需参数，以达到缩短开发耗时的目的。在步骤S130中，根据初始化案例和测试案例更新UVM验证平台中的验证程序。在本申请的实施方式中，基于基础单元序列创建好待测设计中各项待测功能分别对应的初始化案例和测试案例之后，便可以根据初始化案例和测试案例更新UVM验证平台中的验证程序，以便于UVM验证平台基于该更新后的验证程序完成对待测设计的验证。其中，根据初始化案例和测试案例更新验证程序的方式可以根据需要灵活设置，在一个示例中，可以将每一项待测功能对应的测试案例继承于该待测功能对应的初始化案例，使每一项待测功能对应的测试案例作为对应的初始化案例的子类，再将待测设计中各项待测功能分别对应的初始化案例均继承于验证程序，使待测设计中各项待测功能分别对应的初始化案例均作为验证程序的子类，以对验证程序进行更新，使得UVM验证平台在执行验证程序的过程中，能够依次执行初始化案例和测试案例，即先搭建待测设计中待测功能的初始实施环境，再对待测功能中的各个待执行动作进行仿真，从而完成对待测设计的验证。在另一个示例中，可以获取每一项待测功能的测试案例对应的多个预设标号，将每一测试案例按照多个预设标号分别继承于每一预设标号对应的初始化案例，使每一测试案例基于多个预设标号作为每一预设标号对应的初始化案例的子类，再将待测设计中各项待测功能分别对应的初始化案例均继承于验证程序，使待测设计中各项待测功能分别对应的初始化案例均作为验证程序的子类，以对验证程序进行更新，以便于开发人员在UVM验证平台中验证单个测试案例在不同的初始化案例对应的初始实施环境中的执行情况，同时，在待测设计中不同待测功能对应的初始实施环境相同时，通过待测功能中预设标号分配初始化案例的方式，能够显著提升初始化案例的可复用性，进一步降低整体的代码量。通过上述实施方式，在UVM验证平台中对待测设计实施验证的过程中，可以先根据待测设计中的需求特征参数生成对应的基础单元序列，再基于基础单元序列创建待测设计中各项待测功能分别对应的初始化案例和测试案例，最后根据初始化案例和测试案例更新UVM验证平台中的验证程序，以便于后续在UVM验证平台中运行该更新后的验证程序对待测设计进行验证，由于基础单元序列由待测设计中的需求特征参数生成，使得基于基础单元序列创建的初始化案例和测试案例中包含的序列均可以继承于该基础单元序列，也就是说每一初始化案例和测试案例均可以获取到基础单元序列中的需求特征参数，从而减少创建初始化案例和测试案例的所需参数，进而降低整体的代码量和开发复杂度，达到提升开发效率缩短开发耗时的目的。另外，通过区分初始化案例和测试案例，开发人员还可以根据自身能力有选择地针对初始化案例或测试案例进行开发，降低开发人员的技术要求，降低更新后的验证程序中出现错误的可能性。参见图4，图4是在图2所示实施例的基础上提出的一种应用于UVM验证平台的验证方法的流程图。如图4所示，该方法还可以包括步骤S410至步骤S420，详细介绍如下：在步骤S410中，获取待测功能中的初始化调节参数，基于初始化调节参数生成初始化调节序列，初始化调节序列为基础单元序列的子类。在本申请的实施方式中，考虑到待测设计中不同待测功能所对应的初始实施环境可能存在差异，便在创建各项待测功能分别对应的初始化案例的过程中，可以进一步获取待测功能中的初始化调节参数，再基于初始化调节参数生成初始化调节序列，也就是将待测功能的初始化调节参数添加至创建的初始化调节序列中，得出待测功能对应的初始化调节序列。同时，初始化调节序列作为基础单元序列的子类，也就是将该初始化调节序列继承于基础单元序列，以使得初始化调节序列能够直接接收到基础单元序列所传递的需求特征参数，减少创建初始化调节序列的所需参数。在步骤S420中，根据初始化调节序列更新待测功能对应的初始化案例。在本申请的实施方式中，生成出初始化调节序列之后，便可以根据初始化调节序列更新待测功能对应的初始化案例，以构建该待测功能所需的初始实施环境。其中，根据初始化调节序列更新待测功能对应的初始化案例的方式可以根据需要灵活设置，在一个示例中，基于初始化序列创建出的待测设计的初始化案例可以包含有多个初始实施环境，且每一初始实施环境均对应设置有响应条件，以根据响应条件切换初始化案例所构建的初始实施环境，从而便可以根据初始化调节序列确定对应的响应条件，进而基于响应条件更新待测功能对应的初始化案例，使得待测功能对应的初始化案例构建出当前待测功能所需的初始实施环境。在另一个示例中，可以将初始化调节序列直接在待测功能对应的初始化案例中实例化，并使初始化调节序列在该待测功能的初始化案例所对应的序列器中启动执行，从而达到更新待测功能对应的初始化案例的目的。参见图5，图5是在图3所示实施例中步骤S330在一示例性实施例中的流程图。如图5所示，基于所述各个待执行动作分别对应的驱动序列创建所述测试案例的过程，可以包括步骤S510至步骤S540，详细介绍如下：在步骤S510中，获取待测功能中各个待执行动作的优先级参数。其中，优先级参数表征待测功能中各个待执行动作的执行规则，即每一待执行动作的执行次序。在步骤S520中，根据各个待执行动作分别对应的优先级参数生成待测功能对应的测试序列，测试序列为基础单元序列的子类。在本申请的实施方式中，获取到各个待执行动作的优先级参数之后，便可以根据各个待执行动作分别对应的优先级参数生成待测功能对应的测试序列，以通过该测试序列按照各个待执行动作对应的优先级参数依次调用执行各个待执行动作对应的驱动序列，从而降低每一待执行动作对应的驱动序列的开发难度。同时，测试序列作为基础单元序列的子类，即将该测试序列继承于基础单元序列，使得测试序列执行时同样可以直接接收到基础单元序列所传递的需求特征参数，减少创建测试序列的所需参数，能够有效降低整体的代码量。在步骤S530中，将待测功能中各个待执行动作分别对应的驱动序列封装至测试序列中，并将测试序列中驱动序列对应的调用等级调整至测试序列的调用等级。考虑到待测设计中多个待执行动作内存在嵌套同一待执行动作的可能性，即在完全执行当前待执行动作的前提，需要使用到另一待执行动作的执行结果，因此在本申请的实施方式中，可以将待测功能中各个待执行动作分别对应的驱动序列均封装至测试序列中，再将测试序列中驱动序列对应的调用等级调整至测试序列的调用等级，使得待测功能对应的测试序列内的驱动序列在执行的过程中，可以直接调用执行测试序列内封装的其他驱动序列，从而使得当前待执行动作对应的驱动序列在执行的过程，可以直接获取到待测设计中其他待执行动作对应的驱动序列的执行结果，以满足当前待执行动作的执行条件，进而无需在每一待执行动作的驱动序列中重复嵌套另一待执行动作的驱动序列，进一步减少每一待执行动作对应的驱动序列内的代码量，故而进一步提升开发效率。具体的，将测试序列中驱动序列对应的调用等级调整至测试序列的调用等级的方式可以利用p_sequencer转换指令，即将测试序列中的驱动序列放置在测试序列对应的p_sequencer上启动执行。在步骤S540中，基于测试序列创建测试案例。在本申请的实施方式中，将各个待执行动作分别对应的驱动序列封装至测试序列中，并将测试序列内的驱动序列对应的调用等级调整至测试序列的调用等级之后，便可以基于测试序列创建测试案例，也就是将测试序列在创建的测试案例中实例化，并使测试序列在测试案例对应的序列器上启动执行，从而得到待测设计中各项待测功能对应的测试案例。图6是本申请实施例提供的一种应用于UVM验证平台的验证方法的流程图，如图6所示，该验证方法至少包括步骤S601至步骤S614，详细介绍如下：步骤S601，获取待测设计中各项待测功能所需的数据类型。其中，各项待测功能所需的数据类型为执行各项待测功能的硬性条件。步骤S602，根据各项待测功能所需的数据类型创建待测设计对应的事务包。根据数据类型创建事务包的方式已在上述实施方式中记载，在此不做赘述。步骤S603，基于事务包生成待测设计对应的基础单元序列。由于基础单元序列中包含由各项待测功能所需的数据类型创建的事务包，使得继承于该基础单元序列的序列能够直接接收到基础单元序列中作为待传递参数的各项待测功能所需的数据类型，从而使得作为基础单元序列的子类的序列在创建时的所需参数便可以对应减少，进而降低整体的代码量。在执行步骤S603之后，可以先按照步骤S604到步骤S606的顺序执行，以获取待测设计中各项待测功能分别对应的初始化案例，再按照步骤S607到步骤S611的顺序执行，获取待测设计中各项待测功能分别对应的测试案例。或是，同步执行获取初始化案例的步骤S604到步骤S606，以及获取测试案例的步骤S607到步骤S611。其中，用于获取待测设计中各项待测功能分别对应的初始化案例的步骤S604到步骤S606所对应的具体内容如下所示：步骤S604，获取待测设计对应的初始化参数。步骤S605，根据初始化参数生成待测设计对应的初始化序列，其中，初始化序列为基础单元序列的子类。步骤S606，基于初始化序列创建待测设计对应的初始化案例，并将待测设计对应的初始化案例作为每一待测功能对应的初始化案例。具体的，基于初始化序列创建初始化案例的方式已在上述实施方式中记载，在此不做赘述。在执行步骤S603之后，所执行的用于获取待测设计中各项待测功能分别对应的测试案例的步骤S607到步骤S611所对应的具体内容如下所示：步骤S607，获取待测功能中不同待执行动作分别对应的执行参数。步骤S608，根据每一待执行动作对应的执行参数生成驱动序列，以得到待测功能中各个待执行动作分别对应的驱动序列，其中，驱动序列为基础单元序列的子类。需要说明的是，驱动序列用于对待执行动作进行仿真，以得出待执行动作对应的执行结果。在执行步骤S608生成驱动序列的过程中，使驱动序列为基础单元序列的子类，以使驱动序列能够继承基础单元序列所传递的需求特征参数，从而减少生成驱动序列的所需参数，进而达到降低开发难度以及缩短开发耗时的目的。步骤S609，获取待测功能中各个待执行动作的优先级参数，并基于优先级参数生成待测功能对应的测试序列，其中，测试序列为基础单元序列的子类。需要说明的是，测试序列用于设置待测功能中各个待执行动作对应的驱动序列的执行规则。相应的，在执行步骤S609生成测试序列的过程中，使测试序列为基础单元序列的子类，同样用于减少生成测试序列的所需参数，进一步降低开发难度以及缩短开发耗时。步骤S610，将待测功能中各个待执行动作分别对应的驱动序列封装至测试序列中，并将测试序列中驱动序列对应的调用等级调整至测试序列的调用等级。通过执行步骤S610，可以使得各个待执行动作对应的驱动序列在执行的过程中，能够调用到所属测试序列中封装的其他驱动序列，以满足当前待执行动作的执行条件，无需在当前待执行动作的驱动序列中嵌套其他待执行动作的驱动序列的相关内容。步骤S611，基于测试序列创建测试案例。具体的，基于测试序列创建测试案例的方式已在上述实施方式中记载，在此不做赘述。另外，步骤S607到步骤S611记载的是待测设计中各项待测功能中的其中一项待测功能对应的测试案例的生成过程，也就是说，待测设计中各项待测功能的数量，即是步骤S607到步骤S611循环执行的次数，以确保待测设计中每一待测功能均创建有对应的测试案例。在获取初始化案例的和获取测试案例的步骤执行结束后，也就是步骤S604到步骤S611执行结束后，便跳转执行步骤S612，判断待测设计中是否还包括新增待测功能。在步骤S612中，若判断为是，则表征待测设计中存在新增的待测功能，便执行步骤S613，判断存在于基础单元序列内的事务包中是否包含新增待测功能所需的数据类型，若判断为是，则表征当前基础单元序列依旧能够复用在创建新增待测功能对应的初始化案例和测试案例中，便跳转执行步骤S607到步骤S611，以创建新增待测功能对应的初始化案例和测试案例。相反的，在执行步骤S613的过程中，若判断为否，则表征当前基础单元序列无法复用在创建新增待测功能对应的初始化案例和测试案例中，便跳转执行步骤S601，以重新进一步获取到待测设计中新增待测功能所需的数据类型，并在后续步骤中对事务包进行更新，确保基础单元序列能够复用在新增待测功能中。同时，基于更新后的基础单元序列能够进一步扩大基础单元序列的可复用性。而在执行步骤S612的过程中，若判断为否，则表征待测设计中并不存在新增的待测功能，便可以直接执行步骤S614，根据初始化案例和测试案例更新UVM验证平台中的验证程序，以便于UVM验证平台基于该更新后的验证程序完成对待测设计的验证。另外，步骤S612和步骤S613也可以放置在执行完步骤S602之后再执行，也就是在根据各项待测功能所需的数据类型创建得出了待测设计对应的事务包之后执行，以提前确定待测设计中是否存在新增待测功能，并对事务包进行更新。以下介绍本申请的装置实施例，可以用于执行本申请上述实施例中的应用于UVM验证平台的验证方法。对于本申请装置实施例中未披露的细节，请参照本申请上述的应用于UVM验证平台的验证方法的实施例。图7示出了根据本申请的一个实施例的应用于UVM验证平台的验证装置700的框图。参照图7所示，根据本申请的一个实施例，提供了一种应用于UVM验证平台的验证装置，包括：序列生成模块710，配置为根据待测设计中的需求特征参数生成对应的基础单元序列；案例创建模块720，配置为基于基础单元序列创建待测设计中各项待测功能分别对应的初始化案例和测试案例；更新模块730，配置为根据初始化案例和测试案例更新UVM验证平台中的验证程序。本申请的一些实施例中，基于前述方案，案例创建模块720还配置为：获取待测设计对应的初始化参数；根据初始化参数生成待测设计对应的初始化序列，初始化序列为基础单元序列的子类；基于初始化序列创建待测设计对应的初始化案例，并将待测设计对应的初始化案例作为每一待测功能对应的初始化案例。本申请的一些实施例中，基于前述方案，案例创建模块720还配置为：获取待测功能中的初始化调节参数，基于初始化调节参数生成初始化调节序列；初始化调节序列为基础单元序列的子类；根据初始化调节序列更新待测功能对应的初始化案例。本申请的一些实施例中，基于前述方案，案例创建模块720还配置为：获取待测功能中不同待执行动作分别对应的执行参数；根据每一待执行动作对应的执行参数生成驱动序列，以得到待测功能中各个待执行动作分别对应的驱动序列，驱动序列为基础单元序列的子类；基于各个待执行动作分别对应的驱动序列创建测试案例。本申请的一些实施例中，基于前述方案，案例创建模块720还配置为：获取待测功能中各个待执行动作的优先级参数；根据各个待执行动作分别对应的优先级参数生成待测功能对应的测试序列，测试序列为基础单元序列的子类；将待测功能中各个待执行动作分别对应的驱动序列封装至测试序列中，并将测试序列中驱动序列对应的调用等级调整至测试序列的调用等级；基于测试序列创建测试案例。本申请的一些实施例中，基于前述方案，序列生成模块710还配置为：获取待测设计中各项待测功能所需的数据类型；将各项待测功能所需的数据类型作为需求特征参数，并基于需求特征参数创建对应的事务包；基于事务包生成待测设计对应的基础单元序列。本申请的一些实施例中，基于前述方案，待测设计还包括新增待测功能，序列生成模块710还配置为：确定待测设计中新增待测功能所需的数据类型；若确定事务包中未包含新增待测功能所需的数据类型，则将新增待测功能所需的数据类型添加至事务包中，以得到更新后的事务包；基于更新后的事务包对待测设计对应的基础单元序列进行更新。需要说明的是，上述实施例所提供的应用于UVM验证平台的验证装置700与上述实施例所提供的应用于UVM验证平台的验证方法属于同一构思，其中各个模块和单元执行操作的具体方式已经在方法实施例中进行了详细描述，此处不再赘述。本申请的实施例还提供了一种电子设备，包括处理器和存储器，其中，存储器上存储有计算机可读指令，该计算机可读指令被处理器执行时实现如前所述的应用于UVM验证平台的验证方法。图8示出了适于用来实现本申请实施例的电子设备的计算机系统的结构示意图。需要说明的是，图8示出的电子设备的计算机系统800仅是一个示例，不应对本申请实施例的功能和使用范围带来任何限制。如图8所示，计算机系统800包括中央处理单元801，其可以根据存储在只读存储器802中的程序或者从存储部分808加载到随机访问存储器803中的程序而执行各种适当的动作和处理，例如执行上述实施例中所述的方法。在RAM 803中，还存储有系统操作所需的各种程序和数据。CPU 801、ROM 802以及RAM 803通过总线804彼此相连。输入/输出接口805也连接至总线804。以下部件连接至I/O接口805：包括键盘、鼠标等的输入部分806；包括诸如阴极射线管、液晶显示器等以及扬声器等的输出部分807；包括硬盘等的存储部分808；以及包括诸如LAN卡、调制解调器等的网络接口卡的通信部分809。通信部分809经由诸如因特网的网络执行通信处理。驱动器810也根据需要连接至I/O接口805。可拆卸介质811，诸如磁盘、光盘、磁光盘、半导体存储器等等，根据需要安装在驱动器810上，以便于从其上读出的计算机程序根据需要被安装入存储部分808。特别地，根据本申请的实施例，上文参考流程图描述的过程可以被实现为计算机软件程序。例如，本申请的实施例包括一种计算机程序产品，其包括承载在计算机可读介质上的计算机程序，该计算机程序包含用于执行流程图所示的方法的计算机程序。在这样的实施例中，该计算机程序可以通过通信部分809从网络上被下载和安装，和/或从可拆卸介质811被安装。在该计算机程序被中央处理单元801执行时，执行本申请的系统中限定的各种功能。需要说明的是，本申请实施例所示的计算机可读介质可以是计算机可读信号介质或者计算机可读存储介质或者是上述两者的任意组合。计算机可读存储介质例如可以是——但不限于——电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。计算机可读存储介质的更具体的例子可以包括但不限于：具有一个或多个导线的电连接、便携式计算机磁盘、硬盘、随机访问存储器、只读存储器、可擦式可编程只读存储器、闪存、光纤、便携式紧凑磁盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。在本申请中，计算机可读存储介质可以是任何包含或存储程序的有形介质，该程序可以被指令执行系统、装置或者器件使用或者与其结合使用。而在本申请中，计算机可读的信号介质可以包括在基带中或者作为载波一部分传播的数据信号，其中承载了计算机可读的计算机程序。这种传播的数据信号可以采用多种形式，包括但不限于电磁信号、光信号或上述的任意合适的组合。计算机可读的信号介质还可以是计算机可读存储介质以外的任何计算机可读介质，该计算机可读介质可以发送、传播或者传输用于由指令执行系统、装置或者器件使用或者与其结合使用的程序。计算机可读介质上包含的计算机程序可以用任何适当的介质传输，包括但不限于：无线、有线等等，或者上述的任意合适的组合。附图中的流程图和框图，图示了按照本申请各种实施例的系统、方法和计算机程序产品的可能实现的体系架构、功能和操作。其中，流程图或框图中的每个方框可以代表一个模块、程序段、或代码的一部分，上述模块、程序段、或代码的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。也应当注意，在有些作为替换的实现中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个接连地表示的方框实际上可以基础并行地执行，它们有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图或流程图中的每个方框、以及框图或流程图中的方框的组合，可以用执行规定的功能或操作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。描述于本申请实施例中所涉及到的单元可以通过软件的方式实现，也可以通过硬件的方式来实现，所描述的单元也可以设置在处理器中。其中，这些单元的名称在某种情况下并不构成对该单元本身的限定。作为另一方面，本申请还提供了一种计算机可读存储介质，该计算机可读存储介质可以是上述实施例中描述的电子设备中所包含的；也可以是单独存在，而未装配入该电子设备中。上述计算机可读存储介质承载有一个或者多个程序，当上述一个或者多个程序被一个该电子设备执行时，使得该电子设备实现上述实施例中所述的方法。应当注意，尽管在上文详细描述中提及了用于动作执行的设备的若干模块或者单元，但是这种划分并非强制性的。实际上，根据本申请的实施方式，上文描述的两个或更多模块或者单元的特征和功能可以在一个模块或者单元中具体化。反之，上文描述的一个模块或者单元的特征和功能可以进一步划分为由多个模块或者单元来具体化。通过以上的实施方式的描述，本领域的技术人员易于理解，这里描述的示例实施方式可以通过软件实现，也可以通过软件结合必要的硬件的方式来实现。因此，根据本申请实施方式的技术方案可以以软件产品的形式体现出来，该软件产品可以存储在一个非易失性存储介质中或网络上，包括若干指令以使得一台计算设备执行根据本申请实施方式的方法。本领域技术人员在考虑说明书及实践这里公开的实施方式后，将容易想到本申请的其它实施方案。本申请旨在涵盖本申请的任何变型、用途或者适应性变化，这些变型、用途或者适应性变化遵循本申请的一般性原理并包括本申请未公开的本技术领域中的公知常识或惯用技术手段。应当理解的是，本申请并不局限于上面已经描述并在附图中示出的精确结构，并且可以在不脱离其范围进行各种修改和改变。本申请的范围仅由所附的权利要求来限制。
