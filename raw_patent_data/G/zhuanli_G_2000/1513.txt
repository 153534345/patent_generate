标题title
基于字符编码压缩的屏蔽词识别方法、装置、设备及介质
摘要abst
本发明公开了基于字符编码压缩的屏蔽词识别方法、装置、设备及介质，方法包括：对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树；根据预置的编码压缩规则对屏蔽词树进行遍历，从而对屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列；将线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行；若接收到用户输入的文字段，根据编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。上述识别方法，通过先行构建线性编码序列，并基于线性编码序列进行屏蔽词的识别，大幅缩短了应用程序整体的加载时间且提高了屏蔽词符的识别效率，应用程序整体运行效率显著提升。
权利要求书clms
1.一种基于字符编码压缩的屏蔽词识别方法，其特征在于，所述方法包括：对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树；根据预置的编码压缩规则对所述屏蔽词树进行遍历，从而对所述屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列；将所述线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行；若接收到用户输入的文字段，根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。2.根据权利要求1所述的基于字符编码压缩的屏蔽词识别方法，其特征在于，所述对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树，包括：构建基础节点；根据所述屏蔽词库中各屏蔽词的字符数在基础节点外围创建对应的树杈，每一树杈均包含与一个屏蔽词对应的节点链；将各所述屏蔽词包含的字符根据由基础节点至对应节点链的延伸方向依次填充至所述树杈中，以构建得到屏蔽词树。3.根据权利要求1所述的基于字符编码压缩的屏蔽词识别方法，其特征在于，所述根据预置的编码压缩规则对所述屏蔽词树进行遍历，从而对所述屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列，包括：创建与所述编码压缩规则中编码词典对应的第一序列及第二序列，所述编码词典包含字符及与各字符一一对应的编码值；根据所述编码压缩规则中的偏移标识策略及树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，以在所述第一序列中添加与各树杈对应的偏移值；根据树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，以在所述第二序列中添加与各树杈对应的跳转值；对添加偏移值的第一序列及添加跳转值的第二序列进行组合，得到所述线性编码序列。4.根据权利要求3所述的基于字符编码压缩的屏蔽词识别方法，其特征在于，所述根据所述编码压缩规则中的偏移标识策略及树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，以在所述第一序列中添加与各树杈对应的偏移值，包括：根据树杈延伸方向对各树杈包含的字符进行遍历，并根据所述编码词典确定树杈中字符在所述第一序列中对应的位置；判断树杈中的字符是否为末尾字符；若不为末尾字符，将所述第一序列中与字符对应位置的数值配置为所述偏移标识策略中的第一偏移值；若为末尾字符，将所述第一序列中与字符对应位置的数值配置为所述偏移标识策略中的第二偏移值。5.根据权利要求3所述的基于字符编码压缩的屏蔽词识别方法，其特征在于，所述根据树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，以在所述第二序列中添加与各树杈对应的跳转值，包括：根据树杈延伸方向对各树杈包含的字符进行遍历，并根据所述编码词典确定树杈中字符在所述第二序列中对应的位置；判断树杈中的字符是否为起始字符；若不为起始字符，将所述第二序列中与字符对应位置的数值配置为前一字符的编码值。6.根据权利要求3所述的基于字符编码压缩的屏蔽词识别方法，其特征在于，所述根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果，包括：获取所述文字段中所包含词组的起始字符；根据所述编码压缩规则中的编码词典确定所述起始字符在所述第一序列及第二序列中分别对应的第一序列值及第二序列值；判断所述第一序列值是否为零；若所述第一序列值不为零，判断所述第二序列值是否为零；若所述第二序列值为零，获取所述词组的下一字符作为目标字符；根据所述编码词典确定所述目标字符在所述第一序列及所述第二序列中分别对应的第三序列值及第四序列值；判断所述第三序列值是否为零；若所述第三序列值不为零，判断所述第四序列值是否为前一字符在所述编码词典中对应的编码值；若所述第三序列值为第一偏移值且所述第四序列值为前一字符在所述编码词典中对应的编码值，返回执行获取所述词组的下一字符作为目标字符的步骤；若所述第三序列值为第二偏移值且所述第四序列值为前一字符在所述编码词典中对应的编码值，判定所述词组为屏蔽词；若所述第四序列值不为前一字符在所述编码词典中对应的编码值，判定所述词组不为屏蔽词；若所述第一序列值为零或所述第三序列值为零，判定所述词组不为屏蔽词；判断所述文字段中是否至少包含一个为屏蔽词的词组，以得到是否包含屏蔽词的识别结果。7.根据权利要求1或6所述的基于字符编码压缩的屏蔽词识别方法，其特征在于，所述根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果之后，还包括：若所述识别结果为包含屏蔽词，对所述文字段中与屏蔽词对应的词组进行替换，得到对应的替换文字段。8.一种基于字符编码压缩的屏蔽词识别装置，其特征在于，所述装置用于执行如权利要求1-7任一项所述的基于字符编码压缩的屏蔽词识别方法，所述装置包括：屏蔽词树构建单元，用于对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树；线性编码序列获取单元，用于根据预置的编码压缩规则对所述屏蔽词树进行遍历，从而对所述屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列；整合单元，用于将所述线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行；识别结果获取单元，用于若接收到用户输入的文字段，根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。9.一种计算机设备，其特征在于，所述设备包括处理器、通信接口、存储器和通信总线，其中，处理器、通信接口、存储器通过通信总线完成相互间的通信；存储器，用于存放计算机程序；处理器，用于执行存储器上所存放的程序时，实现权利要求1-7中任一项所述的基于字符编码压缩的屏蔽词识别方法的步骤。10.一种计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1-7中任一项所述的基于字符编码压缩的屏蔽词识别方法的步骤。
说明书desc
技术领域本发明涉及人工智能技术领域，尤其涉及一种基于字符编码压缩的屏蔽词识别方法、装置、设备及介质。背景技术为防范用户不正常使用软件程序，通常需要在软件程序中配置屏蔽词库，以对用户输入的语句是否存在屏蔽词进行快速识别；屏蔽词通常由至少两个字符组成，现有技术方法通常是基于屏蔽词生成树杈结构。现有技术方法虽然能够实现在本地对屏蔽词进行检测，但随着词库中屏蔽词数量增加，树杈结构包含的分支数量急剧增多，软件程序运行时加载屏蔽词库以及根据屏蔽词库生成树杈结构的耗时也对应增加，软件程序所占用的内存也对应增多，影响了软件程序整体的运行效率。因此，现有技术方法中用于屏蔽词识别的技术方法存在加载识别耗时较长的问题。发明内容本发明实施例提供了一种基于字符编码压缩的屏蔽词识别方法、装置、设备及介质，旨在解决现有技术方法中用于屏蔽词识别的技术方法所存在的加载识别耗时较长的问题。第一方面，本发明实施例提供了一种基于字符编码压缩的屏蔽词识别方法，其中，所述方法包括：对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树；根据预置的编码压缩规则对所述屏蔽词树进行遍历，从而对所述屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列；将所述线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行；若接收到用户输入的文字段，根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。第二方面，本发明实施例还提供了一种基于字符编码压缩的屏蔽词识别装置，其中，所述装置用于执行如上述第一方面所述的基于字符编码压缩的屏蔽词识别方法，所述装置包括：屏蔽词树构建单元，用于对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树；线性编码序列获取单元，用于根据预置的编码压缩规则对所述屏蔽词树进行遍历，从而对所述屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列；整合单元，用于将所述线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行；识别结果获取单元，用于若接收到用户输入的文字段，根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。第三方面，本发明实施例还提供了一种计算机设备，其中，所述设备包括处理器、通信接口、存储器和通信总线，其中，处理器、通信接口、存储器通过通信总线完成相互间的通信；存储器，用于存放计算机程序；处理器，用于执行存储器上所存放的程序时，实现上述第一方面所述的基于字符编码压缩的屏蔽词识别方法的步骤。第四方面，本发明实施例还提供了一种计算机可读存储介质，其上存储有计算机程序，其中，所述计算机程序被处理器执行时实现如上述第一方面所述的基于字符编码压缩的屏蔽词识别方法的步骤。本发明实施例提供了一种基于字符编码压缩的屏蔽词识别方法、装置、设备及介质，方法包括：对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树；根据预置的编码压缩规则对屏蔽词树进行遍历，从而对屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列；将线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行；若接收到用户输入的文字段，根据编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。上述识别方法，通过先行构建线性编码序列，并基于线性编码序列进行屏蔽词的识别，大幅缩短了应用程序整体的加载时间，应用程序对线性编码序列的解析时间大幅缩短、内存占用大幅减小，在应用程序整体运行效率显著提升的同时，提高了屏蔽词符的识别效率。附图说明为了更清楚地说明本发明实施例技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本发明实施例提供的基于字符编码压缩的屏蔽词识别方法的方法流程图；图2为本发明实施例提供的基于字符编码压缩的屏蔽词识别方法的应用效果示意图；图3为本发明实施例提供的基于字符编码压缩的屏蔽词识别方法的另一应用效果示意图；图4为本发明实施例提供的基于字符编码压缩的屏蔽词识别装置的示意性框图；图5是本发明实施例提供的计算机设备的示意性框图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。应当理解，当在本说明书和所附权利要求书中使用时，术语“包括”和“包含”指示所描述特征、整体、步骤、操作、元素和/或组件的存在，但并不排除一个或多个其它特征、整体、步骤、操作、元素、组件和/或其集合的存在或添加。还应当理解，在本发明说明书中所使用的术语仅仅是出于描述特定实施例的目的而并不意在限制本发明。如在本发明说明书和所附权利要求书中所使用的那样，除非上下文清楚地指明其它情况，否则单数形式的“一”、“一个”及“该”意在包括复数形式。还应当进一步理解，在本发明说明书和所附权利要求书中使用的术语“和/ 或”是指相关联列出的项中的一个或多个的任何组合以及所有可能组合，并且包括这些组合。请参阅图1，如图所示，本发明申请的实施例提供了一种基于字符编码压缩的屏蔽词识别方法，该方法应用于终端设备中，该方法通过安装于终端设备中的应用软件进行执行，用户可输入文字段至终端设备，终端设备执行上述基于字符编码压缩的屏蔽词识别方法以在目标程序文件执行之前构建线性编码序列，并在目标程序文件执行时通过线性编码序列对用户输入的文字段中是否包含屏蔽词进行识别，终端设备可以是台式电脑、笔记本电脑、平板电脑等设备。其中，目标程序文件执行之前，构建线性编码序列及构造得到目标程序文件的具体执行步骤可在与终端设备建立通信连接的其它设备中执行，例如，管理服务器执行相应步骤以构建线性编码序列并对应构造得到目标程序文件，之后管理服务器将构造得到的目标程序文件传输至终端设备内进行执行。如图1所示，该方法包括步骤S110~S140。S110、对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树。对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树。具体的，屏蔽词树包含基础节点以及由基础节点向外延伸的多个树杈，每一树杈对应屏蔽词库中的一个屏蔽词，则可根据屏蔽词库对应构建得到屏蔽词树。当需要对屏蔽词进行更新时，可首先更新屏蔽词库中所包含的屏蔽词，再依据更新后的屏蔽词库对屏蔽词树进行更新，所生成的屏蔽词树如图2所示。在具体实施例中，步骤S110包括子步骤：构建基础节点；根据所述屏蔽词库中各屏蔽词的字符数在基础节点外围创建对应的树杈，每一树杈均包含与一个屏蔽词对应的节点链；将各所述屏蔽词包含的字符根据由基础节点至对应节点链的延伸方向依次填充至所述树杈中，以构建得到屏蔽词树。具体的，首先创建基础节点，基础节点也即是屏蔽词树的根节点，基础节点在图2中采用“root”进行表示，在根据屏蔽词库中所包含的屏蔽词数量生成对应数量的树杈，具体的，树杈包含与一个屏蔽词对应的节点链，由于屏蔽词至少包含两个字符，则节点链对应有至少两个节点串联形成，节点链中所包含节点的数量与屏蔽词中所包含字符的数量相等。进一步的，由基础节点出发，将各屏蔽词所包含的字符依照节点链的延伸方向依次填充至树杈所对应包含的节点中，则屏蔽词的字符顺序与节点链的延伸方向相对应，延伸方向可通过如图2中所示的箭头进行表示。例如，屏蔽词库中包含“导弹”、“驱逐舰”两个屏蔽词，则可基于基础节点对应生成两条节点链，每一条节点链即对应一个树杈，树杈的延伸方向均为由基础节点至节点链末端。对应将“导弹”及“驱逐舰”两个屏蔽词添加至生成的树杈中，得到如图2所示的屏蔽词树。S120、根据预置的编码压缩规则对所述屏蔽词树进行遍历，从而对所述屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列。根据预置的编码压缩规则对所述屏蔽词树进行遍历，从而对所述屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列。根据编码压缩规则对所生成的屏蔽词树进行遍历，从而实现对屏蔽词树进行编码压缩，也即是将以字符形式记载的屏蔽词树转换为以数值形式记载的线性编码序列，由于线性编码序列所占用的存储空间更小，因此实现了对屏蔽词树的压缩。其中，编码压缩规则也即是对屏蔽词树进行压缩的具体规则信息，编码压缩规则中包括编码词典及偏移标识策略。编码词典也即是对字符进行转换以获取对应编码值的映射词典，编码词典中包含字符以及与各字符一一对应的编码值，通过这一对应关系接口对字符进行映射转换并获取与字符对应的编码值，偏移标识策略也即是根据屏蔽词中字符的位置关系获取与字符对应偏移值的具体策略信息。在具体实施例中，步骤S120包括子步骤：创建与所述编码压缩规则中编码词典对应的第一序列及第二序列，所述编码词典包含字符及与各字符一一对应的编码值；根据所述编码压缩规则中的偏移标识策略及树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，以在所述第一序列中添加与各树杈对应的偏移值；根据树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，以在所述第二序列中添加与各树杈对应的跳转值；对添加偏移值的第一序列及添加跳转值的第二序列进行组合，得到所述线性编码序列。具体的，可创建与编码压缩规则中编码词典对应的第一序列及第二序列，第一序列及第二序列均为一个二维数组，且第一序列与第二序列的长度相等。例如，可依据编码词典中字符的编码值依次进行排序，并对应生成包含连续编码值序列的第一序列及第二序列，此时第一序列及第二序列中的每一编码值即对应一个字符位置，所生成的第一序列中的序列值及第二序列中的序列值均为默认值，第一序列及第二序列中具有相同编码值的两个序列值相对应。其中，第一序列及第二序列的长度均为编码词典中字符长度加1，编码词典中包含9个字符，则对应得到的第一序列及第二序列的长度均为“10”，所得到的第一序列及第二序列如图3所示。图3中所示的第一序列中，方框内为第一序列的序列值，第二序列也相同；第一序列方框下方即为连续编码值序列，编码值为“0”的位置对应屏蔽词树中的基础节点，第一序列及第二序列中编码值为“0”所对应的序列值均固定不变。进一步的，可根据偏移标识策略及树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，从而在第一序列中添加与各树杈中字符分别对应的偏移值；若第一序列中存在与屏蔽词树中某一字符对应的位置，则根据偏移标识策略将第一序列中与该字符对应位置初始配置的序列值变更为偏移值。通过上述方法，即可通过添加偏移值的第一序列对屏蔽词树中所包含的字符进行偏移标识。还可根据树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，从而在第二序列中添加与各树杈中字符分别对应的跳转值，则可通过添加跳转值的第二序列对屏蔽词树中树杈所包含字符的跳转关系进行标识。将添加偏移值后的第一序列与添加跳转值后的第二序列进行组合，从而得到线性编码序列，也即线芯编码序列包含第一序列及第二序列。在具体实施例中，所述根据所述编码压缩规则中的偏移标识策略及树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，以在所述第一序列中添加与各树杈对应的偏移值，包括：根据树杈延伸方向对各树杈包含的字符进行遍历，并根据所述编码词典确定树杈中字符在所述第一序列中对应的位置；判断树杈中的字符是否为末尾字符；若不为末尾字符，将所述第一序列中与字符对应位置的数值配置为所述偏移标识策略中的第一偏移值；若为末尾字符，将所述第一序列中与字符对应位置的数值配置为所述偏移标识策略中的第二偏移值。根据树杈的延伸方向对树杈所包含的字符进行遍历，并根据编码词典确定树杈中字符在第一序列中所对应的位置，例如“导”在编码词典中对应的编码值为“3”，则确定当前位置为第一序列中编码值为“3”的位置。偏移标识策略中包括第一偏移值及第二偏移值，可进一步判断树杈中的字符是否为末尾字符，若为末尾字符则将第一序列中对应位置的序列值更改配置为第二偏移值；若不为末尾字符则将第一序列中对应位置的序列值更改配置为第一偏移值。例如，“导”字符在图2所示的屏蔽词树对应的树杈中不为末尾字符，则对应配置第一序列中编码值为“3”对应的序列值为第一序列值；“弹”字符在图2所示的屏蔽词树对应的树杈中为末尾字符，“弹”字符在编码词典中对应的编码值为“4”，则对应配置第一序列中编码值为“4”对应的序列值为第二序列值。假设“驱”、“逐”、“舰”在编码词典中对应的编码值分别为“1”、“5”、“8”，则依据如图2所示的屏蔽词树添加偏移值后所得到的第一序列如图3所示。在具体实施例中，所述根据树杈延伸方向对所述屏蔽词树中的各树杈依次进行遍历，以在所述第二序列中添加与各树杈对应的跳转值，包括：根据树杈延伸方向对各树杈包含的字符进行遍历，并根据所述编码词典确定树杈中字符在所述第二序列中对应的位置；判断树杈中的字符是否为起始字符；若不为起始字符，将所述第二序列中与字符对应位置的数值配置为前一字符的编码值。在对屏蔽词树中各树杈依次进行遍历的同时，可根据编码词典确定树杈中各字符在第二序列中对应的位置，并判断树杈中的字符是否为起始字符，若字符为起始字符，则此时不改变第二序列中与该字符对应位置的数值；若字符不为起始字符，则获取前一字符的编码值，并将第二序列中与当前字符对应位置的数值更改配置为前一字符的编码值。当字符为起始字符时，起始字符的前一字符在屏蔽词树中与基础节点相对应，基础节点对应的编码值为“0”，也即相当于配置起始字符在第二序列中对应位置的序列值为基础节点的编码值，则通过第二序列中配置的数值即可体现树杈中相邻字符之间的跳转关系，因此上述过程也即是在第二序列中添加跳转值。依据如图2所示的屏蔽词树，在第二序列中对应添加跳转值后，所得到的第二序列如图3所示。S130、将所述线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行。将所述线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行。将所构建得到的线性编码序列与预存的初始程序文件进行整合，则整合过程可以在程序文件进行发布之前；将线性编码序列与初始程序文件进行整合，即可构造得到完整的目标程序文件。所得到的目标程序文件，可以在构造该目标程序文件的本地终端进行执行，也可以将目标程序文件发送至其它终端进行执行。S140、若接收到用户输入的文字段，根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。若接收到用户输入的文字段，根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。目标程序文件在终端内被执行后，用户即可使用目标程序文件所包含的程序功能，如用户输入文字段与其它用户进行线上沟通。当用户输入文字段至终端时，即可根据编码压缩规则及线性编码序列对该文字段进行对比识别，也即是对文字段中是否包含与线性编码序列中对应的屏蔽词进行识别，从而得到文字段是否包含屏蔽词的识别结果。在具体实施例中，步骤S140包括子步骤：获取所述文字段中所包含词组的起始字符；根据所述编码压缩规则中的编码词典确定所述起始字符在所述第一序列及第二序列中分别对应的第一序列值及第二序列值；判断所述第一序列值是否为零；若所述第一序列值不为零，判断所述第二序列值是否为零；若所述第二序列值为零，获取所述词组的下一字符作为目标字符；根据所述编码词典确定所述目标字符在所述第一序列及所述第二序列中分别对应的第三序列值及第四序列值；判断所述第三序列值是否为零；若所述第三序列值不为零，判断所述第四序列值是否为前一字符在所述编码词典中对应的编码值；若所述第三序列值为第一偏移值且所述第四序列值为前一字符在所述编码词典中对应的编码值，返回执行获取所述词组的下一字符作为目标字符的步骤；若所述第三序列值为第二偏移值且所述第四序列值为前一字符在所述编码词典中对应的编码值，判定所述词组为屏蔽词；若所述第四序列值不为前一字符在所述编码词典中对应的编码值，判定所述词组不为屏蔽词；若所述第一序列值为零或所述第三序列值为零，判定所述词组不为屏蔽词；判断所述文字段中是否至少包含一个为屏蔽词的词组，以得到是否包含屏蔽词的识别结果。具体的， 可首先对文字段进行词组拆分，以将文字段拆分为对应的多个词组，并获取词组的起始字符，根据编码压缩规则中的编码词典确定起始字符对应的编码值，并依据起始字符的编码值获取在第一序列中对应第一序列值及在第二序列中对应的第二序列值。判断第一序列值是否为零，若第一序列值为零，则表明第一序列中并不包含与起始字符对应的屏蔽字，也即当前进行识别的词组并非是屏蔽词；若第一序列值不为零，则表明第一序列中包含与该起始字符对应的屏蔽词，则继续判断第二序列值是否为零，若第二序列值为零，则表明该起始字符确实为词组的第一个字符，继续获取词组中的下一个字符作为目标字符。进一步的，根据编码词典从第一序列中获取与目标字符对应的第三序列值并从第二序列中获取对应的第四序列值，第三序列值及第四序列值的获取方式与第一序列值及第二序列值的获取方式相同。进一步判断第三序列值是否为零，若第三序列值为零，则表明不包含与当前进行识别的词组所对应的屏蔽词；若第三序列值不为零，则继续判断第四序列值是否为前一字符在所述编码词典中对应的编码值。若第三序列值为第一偏移值且第四序列值为前一字符在所述编码词典中对应的编码值，则表明该词组中已经判断的字符与某一屏蔽词均相对应且该词组还包含未判断的其它字符，继续获取下一字符进行判断；若第三序列值为第二偏移值且第四序列值为前一字符在所述编码词典中对应的编码值，则表明该词组中已经判断的字符与某一屏蔽词均相对应且该词组所有字符均完成判断，即可判定该词组为屏蔽词。若第四序列值不为前一字符在编码词典中对应的编码值，则表明目标字符与词组中位于该目标字符之前的字符并不能组合形成一个屏蔽词，即可判定当前进行识别的词组不为屏蔽词。若第三序列值为零，则表明第二序列中并不包含与该目标字符对应的屏蔽字，也即当前进行识别的词组并非是屏蔽词。获取文字段中每一词组的识别信息，并判断文本段中是否至少包含一个为屏蔽词的词组；若文本段中至少包含一个为屏蔽词的词组，则得到文本段包含屏蔽词的识别结果；若文本段中不包含为屏蔽词的词组，则得到文本段中不包含屏蔽词的识别结果。在具体实施例中，步骤S140之后，还包括步骤：若所述识别结果为包含屏蔽词，对所述文字段中与屏蔽词对应的词组进行替换，得到对应的替换文字段。进一步地，若识别结果为文本段包含屏蔽词，则可对文本段中与屏蔽词对应的词组进行替换，也即是将文本段中与屏蔽词对应的字符采用其它字符进行替代，如可将与屏蔽词对应的字符替换为“*”、“X”或其他字符。例如文本段为“XXX航行于东海”，其中的“XXX”为与屏蔽词对应的词组，则可将该词组中所包含的三个字符均替换为“*”，进行替换后所得到的替换文字段为“***航行于东海”。通过对比测试，使用本申请中包含线性编码序列的目标程序文件进行执行，目标程序文件对应的文件大小由678kB，缩减为300kB，文件大小缩减即可使程序文件的加载耗时对应减小，则文件更新速率提升50%以上。执行目标程序文件进行线性编码序列解析的耗时为77ms，传统技术方法对基于屏蔽词生成树杈结构进行解析的耗时为770ms，性能提升90%；目标程序文件在执行时的内存占用由之前的23MB减小为8MB，大幅缩减了内存空间的占用，相比传统技术方法提升60%左右。上述实施例中所公开的基于字符编码压缩的屏蔽词识别方法中，方法包括：对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树；根据预置的编码压缩规则对屏蔽词树进行遍历，从而对屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列；将线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行；若接收到用户输入的文字段，根据编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。上述识别方法，通过先行构建线性编码序列，并基于线性编码序列进行屏蔽词的识别，大幅缩短了应用程序整体的加载时间，应用程序对线性编码序列的解析时间大幅缩短、内存占用大幅减小，在应用程序整体运行效率显著提升的同时，提高了屏蔽词符的识别效率。本发明实施例还提供一种基于字符编码压缩的屏蔽词识别装置，该基于字符编码压缩的屏蔽词识别装置可配置于终端设备中，该基于字符编码压缩的屏蔽词识别装置用于执行前述的基于字符编码压缩的屏蔽词识别方法的任一实施例。具体地，请参阅图4，图4为本发明实施例提供的基于字符编码压缩的屏蔽词识别装置的示意性框图。如图4所示，基于字符编码压缩的屏蔽词识别装置100包括屏蔽词树构建单元110、线性编码序列获取单元120、整合单元130及识别结果获取单元140。屏蔽词树构建单元110，用于对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树。线性编码序列获取单元120，用于根据预置的编码压缩规则对所述屏蔽词树进行遍历，从而对所述屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列。整合单元130，用于将所述线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行。识别结果获取单元140，用于若接收到用户输入的文字段，根据所述编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。在本发明实施例所提供的基于字符编码压缩的屏蔽词识别装置应用上述基于字符编码压缩的屏蔽词识别方法，对预置的屏蔽词库进行解析，以构建得到基于树状结构的屏蔽词树；根据预置的编码压缩规则对屏蔽词树进行遍历，从而对屏蔽词树包括的字符进行编码压缩得到对应的线性编码序列；将线性编码序列与预存的初始程序文件进行整合，以构造得到目标程序文件并进行执行；若接收到用户输入的文字段，根据编码压缩规则及线性编码序列对文字段进行对比识别，得到是否包含屏蔽词的识别结果。上述识别方法，通过先行构建线性编码序列，并基于线性编码序列进行屏蔽词的识别，大幅缩短了应用程序整体的加载时间，应用程序对线性编码序列的解析时间大幅缩短、内存占用大幅减小，在应用程序整体运行效率显著提升的同时，提高了屏蔽词符的识别效率。上述基于字符编码压缩的屏蔽词识别装置可以实现为计算机程序的形式，该计算机程序可以在如图5所示的计算机设备上运行。请参阅图5，图5是本发明实施例提供的计算机设备的示意性框图。该计算机设备可以是用于执行基于字符编码压缩的屏蔽词识别方法以实现屏蔽词识别的终端设备。参阅图5，该计算机设备500包括通过通信总线501连接的处理器502、存储器和网络接口505，其中，存储器可以包括存储介质503和内存储器504。该存储介质503可存储操作系统5031和计算机程序5032。该计算机程序5032被执行时，可使得处理器502执行基于字符编码压缩的屏蔽词识别方法，其中，存储介质503可以为易失性的存储介质或非易失性的存储介质。该处理器502用于提供计算和控制能力，支撑整个计算机设备500的运行。该内存储器504为存储介质503中的计算机程序5032的运行提供环境，该计算机程序5032被处理器502执行时，可使得处理器502执行基于字符编码压缩的屏蔽词识别方法。该网络接口505用于进行网络通信，如提供数据信息的传输等。本领域技术人员可以理解，图5中示出的结构，仅仅是与本发明方案相关的部分结构的框图，并不构成对本发明方案所应用于其上的计算机设备500的限定，具体的计算机设备500可以包括比图中所示更多或更少的部件，或者组合某些部件，或者具有不同的部件布置。其中，所述处理器502用于运行存储在存储器中的计算机程序5032，以实现上述的基于字符编码压缩的屏蔽词识别方法中对应的功能。本领域技术人员可以理解，图5中示出的计算机设备的实施例并不构成对计算机设备具体构成的限定，在其他实施例中，计算机设备可以包括比图示更多或更少的部件，或者组合某些部件，或者不同的部件布置。例如，在一些实施例中，计算机设备可以仅包括存储器及处理器，在这样的实施例中，存储器及处理器的结构及功能与图5所示实施例一致，在此不再赘述。应当理解，在本发明实施例中，处理器502可以是中央处理单元 ，该处理器502还可以是其他通用处理器、数字信号处理器、专用集成电路 、现成可编程门阵列  或者其他可编程逻辑器件、分立门或者晶体管逻辑器件、分立硬件组件等。其中，通用处理器可以是微处理器或者该处理器也可以是任何常规的处理器等。在本发明的另一实施例中提供计算机可读存储介质。该计算机可读存储介质可以为易失性或非易失性的计算机可读存储介质。该计算机可读存储介质存储有计算机程序，其中计算机程序被处理器执行时实现上述的基于字符编码压缩的屏蔽词识别方法中所包含的步骤。所属领域的技术人员可以清楚地了解到，为了描述的方便和简洁，上述描述的设备、装置和单元的具体工作过程，可以参考前述方法实施例中的对应过程，在此不再赘述。本领域普通技术人员可以意识到，结合本文中所公开的实施例描述的各示例的单元及算法步骤，能够以电子硬件、计算机软件或者二者的结合来实现，为了清楚地说明硬件和软件的可互换性，在上述说明中已经按照功能一般性地描述了各示例的组成及步骤。这些功能究竟以硬件还是软件方式来执行取决于技术方案的特定应用和设计约束条件。专业技术人员可以对每个特定的应用来使用不同方法来实现所描述的功能，但是这种实现不应认为超出本发明的范围。在本发明所提供的几个实施例中，应该理解到，所揭露的设备、装置和方法，可以通过其它的方式实现。例如，以上所描述的装置实施例仅仅是示意性的，例如，所述单元的划分，仅仅为逻辑功能划分，实际实现时可以有另外的划分方式，也可以将具有相同功能的单元集合成一个单元，例如多个单元或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另外，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些接口、装置或单元的间接耦合或通信连接，也可以是电的，机械的或其它的形式连接。所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本发明实施例方案的目的。另外，在本发明各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以是两个或两个以上单元集成在一个单元中。上述集成的单元既可以采用硬件的形式实现，也可以采用软件功能单元的形式实现。所述集成的单元如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读存储介质中。基于这样的理解，本发明的技术方案本质上或者说对现有技术做出贡献的部分，或者该技术方案的全部或部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个计算机可读存储介质中，包括若干指令用以使得一台计算机设备  执行本发明各个实施例所述方法的全部或部分步骤。而前述的计算机可读存储介质包括：U 盘、移动硬盘、只读存储器 、磁碟或者光盘等各种可以存储程序代码的介质。以上所述，仅为本发明的具体实施方式，但本发明的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本发明揭露的技术范围内，可轻易想到各种等效的修改或替换，这些修改或替换都应涵盖在本发明的保护范围之内。因此，本发明的保护范围应以权利要求的保护范围为准。
