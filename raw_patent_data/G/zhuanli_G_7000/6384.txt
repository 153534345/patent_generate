标题title
浮动车排队长度计算收费站以及红绿灯实时路况信息技术
摘要abst
本发明公开了浮动车排队长度计算收费站以及红绿灯实时路况信息技术，包括以下步骤：A：外部提供基于月度版地图计算的收费站、红绿灯、地图数据，写入到redis和couchbase，城市信息写入redis；B：收费站制作原则，路链长度限制200米：其他说明，如果当前路链长度不足200米，但是追加下一LINK超过200米，追加下一LINK，如果拓扑长度不足200米，逆向拓扑至第一个分汇流点不进行打断继续拓扑，当路链拓扑中遇到第二个分汇流点则进行打断。本发明具备更能准确的反映出收费站和红绿灯范围内道路的拥堵、缓慢或畅通状态的优点，解决了因过度依赖速度，会导致收费站和红绿灯场景路况状态计算的不是特别准确的问题。
权利要求书clms
1.浮动车排队长度计算收费站以及红绿灯实时路况信息技术，其特征在于包括以下步骤：A：外部提供基于月度版地图计算的收费站、红绿灯、地图数据，写入到redis和couchbase，城市信息写入redis；B：收费站制作原则，路链长度限制200米：其他说明，如果当前路链长度不足200米，但是追加下一LINK超过200米，追加下一LINK，如果拓扑长度不足200米，逆向拓扑至第一个分汇流点不进行打断继续拓扑，当路链拓扑中遇到第二个分汇流点则进行打断，支持收费站手动维护功能；C：红绿灯制作原则，路链长度限制350米：当路链长度不满足350米，但追加下一Link，路链长度不足600米，保留下一Link到路链中，长度超过600米，不保留下一Link，当路链长度不满足打断条件，但遇到其他红绿灯，则进行打断，当路链长度不满足打断条件，但遇到收费站点，则进行打断；D：数据接入：外部将浮动车相关的信息写入到kafka中，匹配，识别扎堆点的条件：扎堆时间大于等于15秒，点对的平均速度小于10，扎堆点的GPS时间距离轨迹退出时间在5分钟以内，排队长度：选择进入收费站后第一个扎堆点到收费站或红绿灯的距离；E：融合：单车最大排队长度作为该收费站/红绿灯的排队长度，分城市：通过城市信息，将路况信息分城市；F：发布：有排队长度且高频车辆数大于3的收费站或红绿灯，取所有link最大排队长度和最大高频车辆数，排队长度，重新定义5色状态；status-1：queuingDistanceMax＞0&amp;&amp;queuingDistanceMax＜＝30；status-2：queuingDistanceMax＞30&amp;&amp;queuingDistanceMax＜＝70；status-3：queuingDistanceMax＞70&amp;&amp;queuingDistanceMax＜＝100；status-4：queuingDistanceMax＞100&amp;&amp;queuingDistanceMax＜＝150；status-5：queuingDistanceMax＞150。2.根据权利要求1所述的浮动车排队长度计算收费站以及红绿灯实时路况信息技术，其特征在于：所述资源文件：基于外部月度资源文件制作相关配置文件，分别写入对应的redis、Couchbase，数据接入：外部数据源入kafka，属于外部触发。3.根据权利要求1所述的浮动车排队长度计算收费站以及红绿灯实时路况信息技术，其特征在于：所述匹配：实时从kafka拉数据，当有外部数据源写入kafka时，会读取到相关的数据，然后匹配地图信息，计算排队长度相关信息，将计算结果写会kafka。4.根据权利要求1所述的浮动车排队长度计算收费站以及红绿灯实时路况信息技术，其特征在于：所述融合：实时从kafka拉数据，当有匹配数据写入kafka时，会接收到数据，然后将多车融合，计算最后的排队长度信息，写入kafka中。5.根据权利要求1所述的浮动车排队长度计算收费站以及红绿灯实时路况信息技术，其特征在于：所述分组：实时从kafka拉数据，当有融合数据写入kafka时，会接收到数据，通过城市配置信息，将全国路网分城市，写入Couchbase中并向zookeeper指定节点发送通知，Zookeeper：用于数据监听，CouchBase：作为数据仓储以及配置管理。6.根据权利要求1所述的浮动车排队长度计算收费站以及红绿灯实时路况信息技术，其特征在于：所述发布：监听zk指定节点，接收到监听后，计算对应的状态，并向特定节点写通知，共后端服务使用。7.根据权利要求1所述的浮动车排队长度计算收费站以及红绿灯实时路况信息技术，其特征在于：所述Storm：分布式实时大数据处理框架，Kafka：一种高吞吐量的分布式发布订阅消息系统。8.根据权利要求1所述的浮动车排队长度计算收费站以及红绿灯实时路况信息技术，其特征在于：所述Redis：远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库。
说明书desc
技术领域本发明涉及智能交通技术领域，具体为浮动车排队长度计算收费站以及红绿灯实时路况信息技术。背景技术实时路况针对当今城市交通道路拥堵畅通情况所提出的一个概念，目前实时路况已经是一项成熟的车载智能交通导航技术，实时路况能实时反映区域内交通文字路况，指引最佳、最快捷的行驶路线，提高道路和车辆的使用效率，对于车主来说，最头疼的可能不是只涨不跌的油费，也都不是各种繁琐的保养，反而是日日活在拥堵的道路当中，过着有车比没车更缓慢的生活，而掌握了实时路况，则可以给予车主选择其他道路的主动权，部分车主也会通过交通电台等方式获取交通路况，其实这也是获取实时路况的一种方式，但是与实时交通路况信息相比，就缺乏一种宏观的资讯，很容易刚逃过了一条拥堵的道路，又陷入了另外一条拥堵的道路。所以随着智能交通的发展，实时掌控路段信息，绕路防堵也逐渐变得必不可少，由于目前的计算实时路况信息的方式是通过GPS回传的旅行时间和距离等信息计算平均速度，再通过当前道路的道路等级和相对应的速度区间得出link的路况状态，但这种方法因为过度依赖速度，但却不使用收费站和红绿灯场景，会导致收费站和红绿灯场景路况状态计算的不是特别准确，为此我们提供了浮动车排队长度计算收费站以及红绿灯实时路况信息技术。发明内容本发明的目的在于提供浮动车排队长度计算收费站以及红绿灯实时路况信息技术，具备更能准确的反映出收费站和红绿灯范围内道路的拥堵、缓慢或畅通状态的优点，解决了因过度依赖速度，会导致收费站和红绿灯场景路况状态计算的不是特别准确的问题。为实现上述目的，本发明提供如下技术方案：浮动车排队长度计算收费站以及红绿灯实时路况信息技术，包括以下步骤：A：外部提供基于月度版地图计算的收费站、红绿灯、地图数据，写入到redis和couchbase，城市信息写入redis；B：收费站制作原则，路链长度限制200米：其他说明，如果当前路链长度不足200米，但是追加下一LINK超过200米，追加下一LINK，如果拓扑长度不足200米，逆向拓扑至第一个分汇流点不进行打断继续拓扑，当路链拓扑中遇到第二个分汇流点则进行打断，支持收费站手动维护功能；C：红绿灯制作原则，路链长度限制350米：当路链长度不满足350米，但追加下一Link，路链长度不足600米，保留下一Link到路链中，长度超过600米，不保留下一Link，当路链长度不满足打断条件，但遇到其他红绿灯，则进行打断，当路链长度不满足打断条件，但遇到收费站点，则进行打断；D：数据接入：外部将浮动车相关的信息写入到kafka中，匹配，识别扎堆点的条件：扎堆时间大于等于15秒，点对的平均速度小于10，扎堆点的GPS时间距离轨迹退出时间在5分钟以内，排队长度：选择进入收费站后第一个扎堆点到收费站或红绿灯的距离；E：融合：单车最大排队长度作为该收费站/红绿灯的排队长度，分城市：通过城市信息，将路况信息分城市；F：发布：有排队长度且高频车辆数大于3的收费站或红绿灯，取所有link最大排队长度和最大高频车辆数，排队长度，重新定义5色状态；status-1：queuingDistanceMax＞0&amp;&amp;queuingDistanceMax＜＝30；status-2：queuingDistanceMax＞30&amp;&amp;queuingDistanceMax＜＝70；status-3：queuingDistanceMax＞70&amp;&amp;queuingDistanceMax＜＝100；status-4：queuingDistanceMax＞100&amp;&amp;queuingDistanceMax＜＝150；status-5：queuingDistanceMax＞150。优选的，所述资源文件：基于外部月度资源文件制作相关配置文件，分别写入对应的redis、Couchbase，数据接入：外部数据源入kafka，属于外部触发。优选的，所述匹配：实时从kafka拉数据，当有外部数据源写入kafka时，会读取到相关的数据，然后匹配地图信息，计算排队长度相关信息，将计算结果写会kafka。优选的，所述融合：实时从kafka拉数据，当有匹配数据写入kafka时，会接收到数据，然后将多车融合，计算最后的排队长度信息，写入kafka中。优选的，所述分组：实时从kafka拉数据，当有融合数据写入kafka时，会接收到数据，通过城市配置信息，将全国路网分城市，写入Couchbase中并向zookeeper指定节点发送通知，Zookeeper：用于数据监听，CouchBase：作为数据仓储以及配置管理。优选的，所述发布：监听zk指定节点，接收到监听后，计算对应的状态，并向特定节点写通知，共后端服务使用。优选的，所述Storm：分布式实时大数据处理框架，Kafka：一种高吞吐量的分布式发布订阅消息系统。优选的，所述Redis：远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库。与现有技术相比，本发明的有益效果如下：1、本发明具备更能准确的反映出收费站和红绿灯范围内道路的拥堵、缓慢或畅通状态的优点，解决了因过度依赖速度，会导致收费站和红绿灯场景路况状态计算的不是特别准确的问题。2、本发明当前收费站车速为0，但通过计算出的排队长度，并不是很长，所以推测状态为畅通，通过结合排队长度得出的道路状态就会不再受限于速度这个属性，当前红绿灯位置车速为0，但通过计算出的排队长度，只有几辆车在等灯，所以推测状态为畅通，同收费站场景通过结合排队长度得出的道路状态就会不再受限于速度，使一些场景更能准确的计算出状态。附图说明图1为本发明系统架构图；图2为本发明配置文件制作流程图；图3为本发明匹配处理流程图；图4为本发明发布处理流程图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。请参阅图1-图4，浮动车排队长度计算收费站以及红绿灯实时路况信息技术，包括以下步骤：A：外部提供基于月度版地图计算的收费站、红绿灯、地图数据，写入到redis和couchbase，城市信息写入redis；B：收费站制作原则，路链长度限制200米：其他说明，如果当前路链长度不足200米，但是追加下一LINK超过200米，追加下一LINK，如果拓扑长度不足200米，逆向拓扑至第一个分汇流点不进行打断继续拓扑，当路链拓扑中遇到第二个分汇流点则进行打断，支持收费站手动维护功能；C：红绿灯制作原则，路链长度限制350米：当路链长度不满足350米，但追加下一Link，路链长度不足600米，保留下一Link到路链中，长度超过600米，不保留下一Link，当路链长度不满足打断条件，但遇到其他红绿灯，则进行打断，当路链长度不满足打断条件，但遇到收费站点，则进行打断；D：数据接入：外部将浮动车相关的信息写入到kafka中，匹配，识别扎堆点的条件：扎堆时间大于等于15秒，点对的平均速度小于10，扎堆点的GPS时间距离轨迹退出时间在5分钟以内，排队长度：选择进入收费站后第一个扎堆点到收费站或红绿灯的距离；E：融合：单车最大排队长度作为该收费站/红绿灯的排队长度，分城市：通过城市信息，将路况信息分城市；F：发布：有排队长度且高频车辆数大于3的收费站或红绿灯，取所有link最大排队长度和最大高频车辆数，排队长度，重新定义5色状态；status-1：queuingDistanceMax＞0&amp;&amp;queuingDistanceMax＜＝30；status-2：queuingDistanceMax＞30&amp;&amp;queuingDistanceMax＜＝70；status-3：queuingDistanceMax＞70&amp;&amp;queuingDistanceMax＜＝100；status-4：queuingDistanceMax＞100&amp;&amp;queuingDistanceMax＜＝150；status-5：queuingDistanceMax＞150。资源文件：基于外部月度资源文件制作相关配置文件，分别写入对应的redis、Couchbase，数据接入：外部数据源入kafka，属于外部触发。匹配：实时从kafka拉数据，当有外部数据源写入kafka时，会读取到相关的数据，然后匹配地图信息，计算排队长度相关信息，将计算结果写会kafka。融合：实时从kafka拉数据，当有匹配数据写入kafka时，会接收到数据，然后将多车融合，计算最后的排队长度信息，写入kafka中。分组：实时从kafka拉数据，当有融合数据写入kafka时，会接收到数据，通过城市配置信息，将全国路网分城市，写入Couchbase中并向zookeeper指定节点发送通知，Zookeeper：用于数据监听，CouchBase：作为数据仓储以及配置管理。发布：监听zk指定节点，接收到监听后，计算对应的状态，并向特定节点写通知，共后端服务使用。Storm：分布式实时大数据处理框架，Kafka：一种高吞吐量的分布式发布订阅消息系统。Redis：远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库。实施例一：浮动车排队长度计算收费站以及红绿灯实时路况信息技术，包括以下步骤：A：外部提供基于月度版地图计算的收费站、红绿灯、地图数据，写入到redis和couchbase，城市信息写入redis；B：收费站制作原则，路链长度限制200米：其他说明，如果当前路链长度不足200米，但是追加下一LINK超过200米，追加下一LINK，如果拓扑长度不足200米，逆向拓扑至第一个分汇流点不进行打断继续拓扑，当路链拓扑中遇到第二个分汇流点则进行打断，支持收费站手动维护功能；C：红绿灯制作原则，路链长度限制350米：当路链长度不满足350米，但追加下一Link，路链长度不足600米，保留下一Link到路链中，长度超过600米，不保留下一Link，当路链长度不满足打断条件，但遇到其他红绿灯，则进行打断，当路链长度不满足打断条件，但遇到收费站点，则进行打断；D：数据接入：外部将浮动车相关的信息写入到kafka中，匹配，识别扎堆点的条件：扎堆时间大于等于15秒，点对的平均速度小于10，扎堆点的GPS时间距离轨迹退出时间在5分钟以内，排队长度：选择进入收费站后第一个扎堆点到收费站或红绿灯的距离；E：融合：单车最大排队长度作为该收费站/红绿灯的排队长度，分城市：通过城市信息，将路况信息分城市；F：发布：有排队长度且高频车辆数大于3的收费站或红绿灯，取所有link最大排队长度和最大高频车辆数，排队长度，重新定义5色状态；status-1：queuingDistanceMax＞0&amp;&amp;queuingDistanceMax＜＝30；status-2：queuingDistanceMax＞30&amp;&amp;queuingDistanceMax＜＝70；status-3：queuingDistanceMax＞70&amp;&amp;queuingDistanceMax＜＝100；status-4：queuingDistanceMax＞100&amp;&amp;queuingDistanceMax＜＝150；status-5：queuingDistanceMax＞150。资源文件：基于外部月度资源文件制作相关配置文件，分别写入对应的redis、Couchbase，数据接入：外部数据源入kafka，属于外部触发。匹配：实时从kafka拉数据，当有外部数据源写入kafka时，会读取到相关的数据，然后匹配地图信息，计算排队长度相关信息，将计算结果写会kafka。融合：实时从kafka拉数据，当有匹配数据写入kafka时，会接收到数据，然后将多车融合，计算最后的排队长度信息，写入kafka中。分组：实时从kafka拉数据，当有融合数据写入kafka时，会接收到数据，通过城市配置信息，将全国路网分城市，写入Couchbase中并向zookeeper指定节点发送通知，Zookeeper：用于数据监听，CouchBase：作为数据仓储以及配置管理。发布：监听zk指定节点，接收到监听后，计算对应的状态，并向特定节点写通知，共后端服务使用。实施例二：浮动车排队长度计算收费站以及红绿灯实时路况信息技术，包括以下步骤：A：外部提供基于月度版地图计算的收费站、红绿灯、地图数据，写入到redis和couchbase，城市信息写入redis；B：收费站制作原则，路链长度限制200米：其他说明，如果当前路链长度不足200米，但是追加下一LINK超过200米，追加下一LINK，如果拓扑长度不足200米，逆向拓扑至第一个分汇流点不进行打断继续拓扑，当路链拓扑中遇到第二个分汇流点则进行打断，支持收费站手动维护功能；C：红绿灯制作原则，路链长度限制350米：当路链长度不满足350米，但追加下一Link，路链长度不足600米，保留下一Link到路链中，长度超过600米，不保留下一Link，当路链长度不满足打断条件，但遇到其他红绿灯，则进行打断，当路链长度不满足打断条件，但遇到收费站点，则进行打断；D：数据接入：外部将浮动车相关的信息写入到kafka中，匹配，识别扎堆点的条件：扎堆时间大于等于15秒，点对的平均速度小于10，扎堆点的GPS时间距离轨迹退出时间在5分钟以内，排队长度：选择进入收费站后第一个扎堆点到收费站或红绿灯的距离；E：融合：单车最大排队长度作为该收费站/红绿灯的排队长度，分城市：通过城市信息，将路况信息分城市；F：发布：有排队长度且高频车辆数大于3的收费站或红绿灯，取所有link最大排队长度和最大高频车辆数，排队长度，重新定义5色状态；status-1：queuingDistanceMax＞0&amp;&amp;queuingDistanceMax＜＝30；status-2：queuingDistanceMax＞30&amp;&amp;queuingDistanceMax＜＝70；status-3：queuingDistanceMax＞70&amp;&amp;queuingDistanceMax＜＝100；status-4：queuingDistanceMax＞100&amp;&amp;queuingDistanceMax＜＝150；status-5：queuingDistanceMax＞150。资源文件：基于外部月度资源文件制作相关配置文件，分别写入对应的redis、Couchbase，数据接入：外部数据源入kafka，属于外部触发。匹配：实时从kafka拉数据，当有外部数据源写入kafka时，会读取到相关的数据，然后匹配地图信息，计算排队长度相关信息，将计算结果写会kafka。融合：实时从kafka拉数据，当有匹配数据写入kafka时，会接收到数据，然后将多车融合，计算最后的排队长度信息，写入kafka中。Storm：分布式实时大数据处理框架，Kafka：一种高吞吐量的分布式发布订阅消息系统。Redis：远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库。实施例三：浮动车排队长度计算收费站以及红绿灯实时路况信息技术，包括以下步骤：A：外部提供基于月度版地图计算的收费站、红绿灯、地图数据，写入到redis和couchbase，城市信息写入redis；B：收费站制作原则，路链长度限制200米：其他说明，如果当前路链长度不足200米，但是追加下一LINK超过200米，追加下一LINK，如果拓扑长度不足200米，逆向拓扑至第一个分汇流点不进行打断继续拓扑，当路链拓扑中遇到第二个分汇流点则进行打断，支持收费站手动维护功能；C：红绿灯制作原则，路链长度限制350米：当路链长度不满足350米，但追加下一Link，路链长度不足600米，保留下一Link到路链中，长度超过600米，不保留下一Link，当路链长度不满足打断条件，但遇到其他红绿灯，则进行打断，当路链长度不满足打断条件，但遇到收费站点，则进行打断；D：数据接入：外部将浮动车相关的信息写入到kafka中，匹配，识别扎堆点的条件：扎堆时间大于等于15秒，点对的平均速度小于10，扎堆点的GPS时间距离轨迹退出时间在5分钟以内，排队长度：选择进入收费站后第一个扎堆点到收费站或红绿灯的距离；E：融合：单车最大排队长度作为该收费站/红绿灯的排队长度，分城市：通过城市信息，将路况信息分城市；F：发布：有排队长度且高频车辆数大于3的收费站或红绿灯，取所有link最大排队长度和最大高频车辆数，排队长度，重新定义5色状态；status-1：queuingDistanceMax＞0&amp;&amp;queuingDistanceMax＜＝30；status-2：queuingDistanceMax＞30&amp;&amp;queuingDistanceMax＜＝70；status-3：queuingDistanceMax＞70&amp;&amp;queuingDistanceMax＜＝100；status-4：queuingDistanceMax＞100&amp;&amp;queuingDistanceMax＜＝150；status-5：queuingDistanceMax＞150。资源文件：基于外部月度资源文件制作相关配置文件，分别写入对应的redis、Couchbase，数据接入：外部数据源入kafka，属于外部触发。分组：实时从kafka拉数据，当有融合数据写入kafka时，会接收到数据，通过城市配置信息，将全国路网分城市，写入Couchbase中并向zookeeper指定节点发送通知，Zookeeper：用于数据监听，CouchBase：作为数据仓储以及配置管理。发布：监听zk指定节点，接收到监听后，计算对应的状态，并向特定节点写通知，共后端服务使用。Storm：分布式实时大数据处理框架，Kafka：一种高吞吐量的分布式发布订阅消息系统。Redis：远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库。综上所述：该浮动车排队长度计算收费站以及红绿灯实时路况信息技术，解决了因过度依赖速度，会导致收费站和红绿灯场景路况状态计算的不是特别准确的问题。尽管已经示出和描述了本发明的实施例，对于本领域的普通技术人员而言，可以理解在不脱离本发明的原理和精神的情况下可以对这些实施例进行多种变化、修改、替换和变型，本发明的范围由所附权利要求及其等同物限定。
