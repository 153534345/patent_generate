标题title
一种PFR功能测试方法、装置、设备及可读存储介质
摘要abst
本申请公开了一种PFR功能测试方法、装置、设备及可读存储介质。本申请预设了PFR功能测试脚本，将该PFR功能测试脚本部署于服务器的OS，就可以在服务器开机启动后，基于OS运行PFR功能测试脚本，从而利用PFR功能测试脚本自动测试服务器中的至少一个PFR测试项，并实时记录至少一个PFR测试项对应的测试日志，自动对服务器中需要测试的PFR测试项进行测试。该方案基于PFR功能测试脚本自动完成，且测试内容也在PFR功能测试脚本中有指定，因此测试耗时较短且不易出错，对测试人员的要求也较低，提高了PFR功能的测试效率和便捷性。相应地，本申请提供的一种PFR功能测试装置、设备及可读存储介质，也同样具有上述技术效果。
权利要求书clms
1.一种PFR功能测试方法，其特征在于，包括：获取预设的PFR功能测试脚本；将所述PFR功能测试脚本部署于服务器的OS；若所述服务器开机启动，则基于所述OS运行所述PFR功能测试脚本，以利用所述PFR功能测试脚本测试所述服务器中的至少一个PFR测试项，并实时记录所述至少一个PFR测试项对应的测试日志。2.根据权利要求1所述的PFR功能测试方法，其特征在于，若所述PFR测试项为PFR固件镜像，则利用所述PFR功能测试脚本测试所述PFR固件镜像，包括：利用所述PFR功能测试脚本读取所述PFR固件镜像，并查找所述PFR固件镜像的PFR标签；若查找到所述PFR标签，则检测所述PFR固件镜像对应的Active区域、Recovery区域和Staging区域；若所述Recovery区域和所述Staging区域均存在，且所述Active区域的镜像版本号与所述Recovery区域的镜像版本号一致，则输出所述PFR固件镜像测试通过的通知消息，并记录所述PFR固件镜像的镜像信息。3.根据权利要求2所述的PFR功能测试方法，其特征在于，还包括：若所述Recovery区域和/或所述Staging区域不存在，或所述Active区域的镜像版本号与所述Recovery区域的镜像版本号不一致，则输出所述PFR固件镜像测试未通过的通知消息，并记录所述PFR固件镜像的镜像信息。4.根据权利要求2所述的PFR功能测试方法，其特征在于，所述PFR固件镜像为：CPLD固件镜像、BIOS固件镜像和/或BMC固件镜像。5.根据权利要求1所述的PFR功能测试方法，其特征在于，若所述PFR测试项为I2C总线命令，则利用所述PFR功能测试脚本测试所述I2C总线命令，包括：利用PFR功能测试脚本读取配置文件，解析所述配置文件得到I2C总线的命令白名单；所述命令白名单中记录有CPLD与BIOS之间的I2C总线命令、CPLD与BMC之间的I2C总线命令；逐一测试所述命令白名单中的各个命令，并记录测试结果。6.根据权利要求5所述的PFR功能测试方法，其特征在于，还包括：若所述命令白名单中的各个命令均测试通过，则利用PFR功能测试脚本测试任一个不在所述命令白名单中的命令，以检测PFR功能的命令保护机制。7.根据权利要求1所述的PFR功能测试方法，其特征在于，若所述PFR测试项为RoT寄存器，则利用所述PFR功能测试脚本测试所述RoT寄存器，包括：在所述服务器开机启动后，利用PFR功能测试脚本收集所述RoT寄存器记录的启动信息，并标注所述启动信息对应的说明释义和时间戳。8.一种PFR功能测试装置，其特征在于，包括：获取模块，用于获取预设的PFR功能测试脚本；部署模块，用于将所述PFR功能测试脚本部署于服务器的OS；测试模块，用于若所述服务器开机启动，则基于所述OS运行所述PFR功能测试脚本，以利用所述PFR功能测试脚本测试所述服务器中的至少一个PFR测试项，并实时记录所述至少一个PFR测试项对应的测试日志。9.一种电子设备，其特征在于，包括：存储器，用于存储计算机程序；处理器，用于执行所述计算机程序，以实现如权利要求1至7任一项所述的PFR功能测试方法。10.一种可读存储介质，其特征在于，用于保存计算机程序，其中，所述计算机程序被处理器执行时实现如权利要求1至7任一项所述的PFR功能测试方法。
说明书desc
技术领域本申请涉及计算机技术领域，特别涉及一种PFR功能测试方法、装置、设备及可读存储介质。背景技术目前，针对服务器中的PFR功能，需要技术人员手动进行测试。但是，PFR功能专业性较强，需要测试人员了解PFR的技术规范，因此对测试人员的要求较高；且测试内容比较繁琐，手动测试耗时太长且容易出错。因此，如何提高PFR功能的测试效率和便捷性，是本领域技术人员需要解决的问题。发明内容有鉴于此，本申请的目的在于提供一种PFR功能测试方法、装置、设备及可读存储介质，以提高PFR功能的测试效率和便捷性。其具体方案如下：第一方面，本申请提供了一种PFR功能测试方法，包括：获取预设的PFR功能测试脚本；将所述PFR功能测试脚本部署于服务器的OS；若所述服务器开机启动，则基于所述OS运行所述PFR功能测试脚本，以利用所述PFR功能测试脚本测试所述服务器中的至少一个PFR测试项，并实时记录所述至少一个PFR测试项对应的测试日志。优选地，若所述PFR测试项为PFR固件镜像，则利用所述PFR功能测试脚本测试所述PFR固件镜像，包括：利用所述PFR功能测试脚本读取所述PFR固件镜像，并查找所述PFR固件镜像的PFR标签；若查找到所述PFR标签，则检测所述PFR固件镜像对应的Active区域、Recovery区域和Staging区域；若所述Recovery区域和所述Staging区域均存在，且所述Active区域的镜像版本号与所述Recovery区域的镜像版本号一致，则输出所述PFR固件镜像测试通过的通知消息，并记录所述PFR固件镜像的镜像信息。优选地，还包括：若所述Recovery区域和/或所述Staging区域不存在，或所述Active区域的镜像版本号与所述Recovery区域的镜像版本号不一致，则输出所述PFR固件镜像测试未通过的通知消息，并记录所述PFR固件镜像的镜像信息。优选地，所述PFR固件镜像为：CPLD固件镜像、BIOS固件镜像和/或BMC固件镜像。优选地，若所述PFR测试项为I2C总线命令，则利用所述PFR功能测试脚本测试所述I2C总线命令，包括：利用PFR功能测试脚本读取配置文件，解析所述配置文件得到I2C总线的命令白名单；所述命令白名单中记录有CPLD与BIOS之间的I2C总线命令、CPLD与BMC之间的I2C总线命令；逐一测试所述命令白名单中的各个命令，并记录测试结果。优选地，还包括：若所述命令白名单中的各个命令均测试通过，则利用PFR功能测试脚本测试任一个不在所述命令白名单中的命令，以检测PFR功能的命令保护机制。优选地，若所述PFR测试项为RoT寄存器，则利用所述PFR功能测试脚本测试所述RoT寄存器，包括：在所述服务器开机启动后，利用PFR功能测试脚本收集所述RoT寄存器记录的启动信息，并标注所述启动信息对应的说明释义和时间戳。第二方面，本申请提供了一种PFR功能测试装置，包括：获取模块，用于获取预设的PFR功能测试脚本；部署模块，用于将所述PFR功能测试脚本部署于服务器的OS；测试模块，用于若所述服务器开机启动，则基于所述OS运行所述PFR功能测试脚本，以利用所述PFR功能测试脚本测试所述服务器中的至少一个PFR测试项，并实时记录所述至少一个PFR测试项对应的测试日志。第三方面，本申请提供了一种电子设备，包括：存储器，用于存储计算机程序；处理器，用于执行所述计算机程序，以实现前述公开的PFR功能测试方法。第四方面，本申请提供了一种可读存储介质，用于保存计算机程序，其中，所述计算机程序被处理器执行时实现前述公开的PFR功能测试方法。通过以上方案可知，本申请提供了一种PFR功能测试方法，包括：获取预设的PFR功能测试脚本；将所述PFR功能测试脚本部署于服务器的OS；若所述服务器开机启动，则基于所述OS运行所述PFR功能测试脚本，以利用所述PFR功能测试脚本测试所述服务器中的至少一个PFR测试项，并实时记录所述至少一个PFR测试项对应的测试日志。可见，本申请预设了PFR功能测试脚本，将该PFR功能测试脚本部署于服务器的OS，就可以在服务器开机启动后，基于OS运行PFR功能测试脚本，从而利用PFR功能测试脚本自动测试服务器中的至少一个PFR测试项，并实时记录至少一个PFR测试项对应的测试日志，自动对服务器中需要测试的PFR测试项进行测试。该方案基于PFR功能测试脚本自动完成，且测试内容也在PFR功能测试脚本中有指定，因此测试耗时较短且不易出错，对测试人员的要求也较低，提高了PFR功能的测试效率和便捷性。相应地，本申请提供的一种PFR功能测试装置、设备及可读存储介质，也同样具有上述技术效果。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本申请的实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据提供的附图获得其他的附图。图1为本申请公开的一种PFR功能测试方法流程图；图2为本申请公开的一种测试PFR固件镜像的方法流程图；图3为本申请公开的一种测试I2C总线命令的方法流程图；图4为本申请公开的一种测试寄存器的方法流程图；图5为本申请公开的一种PFR功能测试装置示意图。具体实施方式下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。目前，针对服务器中的PFR功能，需要技术人员手动进行测试。但是，PFR功能专业性较强，需要测试人员了解PFR的技术规范，因此对测试人员的要求较高；且测试内容比较繁琐，手动测试耗时太长且容易出错。为此，本申请提供了一种PFR功能测试方案，能够提高PFR功能的测试效率和便捷性。为了保障服务器自身的安全性和可靠性，服务器从开始上电到最终进入操作系统，每一步都有相应的测量和校验动作，即整个开机过程是一个完整的信任链。其中，PFR即是上述信任链中又一个强力的全新的安全技术。此技术简要地来说，就是在服务器上电后，服务器BIOS和BMC不直接交由服务器主板控制，而是先由硬件信任根控制。即CPLD对BIOS和BMC进行测量和校验，通过之后才将固件的控制权交给服务器主板，因此大大增加了主板固件的安全性。参见图1所示，本申请实施例公开了一种PFR功能测试方法，包括：S101、获取预设的PFR功能测试脚本。S102、将PFR功能测试脚本部署于服务器的OS。其中，服务器的OS可以是任意类型的操作系统，如：UNIX、Linux、Windows等。S103、若服务器开机启动，则基于OS运行PFR功能测试脚本，以利用PFR功能测试脚本测试服务器中的至少一个PFR测试项，并实时记录至少一个PFR测试项对应的测试日志。在本实施例中，PFR功能测试脚本可以针对至少一个PFR测试项进行测试。PFR测试项可以是：PFR固件镜像、I2C总线命令或RoT寄存器。其中，具体针对哪些测试项进行测试，测试人员可以基于人机交互界面进行选择。在整个测试过程中，各个测试步骤的测试内容和测试结果都会记载在测试日志中，以便后续查阅。其中，RoT寄存器即：硬件信任根中的用于记录PFR相关功能的若干寄存器，包括：记录信任链校验过程中的错误信息的寄存器、记录执行流程及状态的寄存器等。当检测到有错误发生或执行升级操作等事件出现，硬件信任根会将对应的固件关闭，并进行测量和校验，进而执行对应的恢复或升级操作，操作执行完毕后，重新启动对应的固件。其中，测试PFR固件镜像可以包括：检测PFR固件镜像的具体内容，对PFR固件镜像进行升级或降级等。PFR固件镜像包括Active，Recovery和Staging三个区域。其中Active对应固件镜像文件。Recovery是压缩后的固件镜像文件，同时还包含了一些签名数据，当Active对应的固件镜像文件无法正常工作时，由RoT将Recovery镜像恢复到Active区域。Staging区域默认为空，当用户进行升级操作时，升级工具将要升级的镜像存放到Staging区域，升级镜像只有在被RoT校验通过之后，才会被复制到Active区域。这三个区域共同组成了一个支持PFR功能的PFR固件镜像。PFR固件镜像可以是CPLD固件镜像、BIOS固件镜像或BMC固件镜像，可以烧录到对应的CPLD芯片、BIOS芯片或BMC芯片中。以上三个区域对应的镜像都必须要符合Intel PFR定义的格式，其中最重要的部分为平台固件清单。平台固件清单中包含了镜像的具体信息，包括：版本号、三个区域的布局及地址、I2C监控白名单等。其中，I2C监控白名单即Intel PFR设定的CPLD与BIOS之间的I2C总线命令、CPLD与BMC之间的I2C总线命令。在服务器运行时，RoT将根据白名单监控相应的I2C总线，在白名单中的命令可以执行，否则拒绝执行，并触发相应的告警或重启服务器等动作。当然，白名单还记录有I2C总线地址，以便使CPLD基于I2C总线地址确定BMC和BIOS的相应控制接口。可见，本实施例预设了PFR功能测试脚本，将该PFR功能测试脚本部署于服务器的OS，就可以在服务器开机启动后，基于OS运行PFR功能测试脚本，从而利用PFR功能测试脚本自动测试服务器中的至少一个PFR测试项，并实时记录至少一个PFR测试项对应的测试日志，自动对服务器中需要测试的PFR测试项进行测试。该方案基于PFR功能测试脚本自动完成，且测试内容也在PFR功能测试脚本中有指定，因此测试耗时较短且不易出错，对测试人员的要求也较低，提高了PFR功能的测试效率和便捷性。基于上述实施例，需要说明的是，若PFR测试项为PFR固件镜像，则利用PFR功能测试脚本测试PFR固件镜像，包括：利用PFR功能测试脚本读取PFR固件镜像，并查找PFR固件镜像的PFR标签；若查找到PFR标签，则检测PFR固件镜像对应的Active区域、Recovery区域和Staging区域；若Recovery区域和Staging区域均存在，且Active区域的镜像版本号与Recovery区域的镜像版本号一致，则输出PFR固件镜像测试通过的通知消息，并记录PFR固件镜像的镜像信息。若Recovery区域和/或Staging区域不存在，或Active区域的镜像版本号与Recovery区域的镜像版本号不一致，则输出PFR固件镜像测试未通过的通知消息，并记录PFR固件镜像的镜像信息。其中，输出PFR固件镜像测试通过的通知消息时，记录的镜像信息包括：Active区域、Recovery区域和Staging区域分别对应的偏移地址、Active区域的镜像版本号、Recovery区域的镜像版本号等。镜像版本号可以具体包括：主版本号、次版本号、安全版本号。输出PFR固件镜像测试未通过的通知消息时，记录的镜像信息包括：Active区域、Recovery区域和Staging区域分别对应的偏移地址、Active区域的镜像版本号、Recovery区域的镜像版本号等。镜像版本号可以具体包括：主版本号、次版本号、安全版本号。这些都会一一记录在测试日志中。在一种具体实施方式中，PFR固件镜像为：CPLD固件镜像、BIOS固件镜像和/或BMC固件镜像。请参见图2，该过程用于检测PFR固件镜像的具体内容。若需要对PFR固件镜像进行升级或降级，可据此设计其他检测流程。图2所示的流程具体包括：针对CPLD固件镜像、BIOS固件镜像或BMC固件镜像，根据该镜像的地址遍历该镜像，以快速查找PFR标签。若找到PFR标签，则检查Active区域的镜像版本号，检查是否有Recovery区域和Staging区域。在有Recovery区域和Staging区域时，检查Recovery区域的镜像版本号。若Active区域的镜像版本号与Recovery区域的镜像版本号一致，则认为当前镜像测试通过。若没有找到PFR标签，则表明当前镜像不支持PFR功能。若不存在Recovery区域和/或Staging区域，则表明当前镜像支持PFR功能，但PFR功能无效，即测试未通过。若Active区域的镜像版本号与Recovery区域的镜像版本号不一致，则表明当前镜像支持PFR功能，但PFR功能无效，即测试未通过。基于上述实施例，需要说明的是，若PFR测试项为I2C总线命令，则利用PFR功能测试脚本测试I2C总线命令，包括：利用PFR功能测试脚本读取配置文件，解析配置文件得到I2C总线的命令白名单；命令白名单中记录有CPLD与BIOS之间的I2C总线命令、CPLD与BMC之间的I2C总线命令；逐一测试命令白名单中的各个命令，并记录测试结果。任一个命令的测试结果都可以包括：命令名称、所访问的寄存器、总线地址、返回值、对返回值的检查结果等，这些都会一一记录在测试日志中。为使PFR功能测试脚本可以对XML或JSON的配置文件进行解析，可以在PFR功能测试脚本中集成Java语言的DOM API和cJSON库。配置文件可通过用户输入的参数指定，如使用-x或-j加上文件路径来指定。请参见图3，针对任一个命令的测试，都需要明确：命令是什么、对应的I2C总线地址是什么、需要读取哪些寄存器、哪个接口返回测试值等内容。若测试命令白名单中记录的、CPLD与BIOS之间的I2C总线命令，那么可参照如下示例进行测试：命令功能：读取RoT寄存器，以查看当前服务器是否支持Intel PFR功能；BIOS访问CPLD的I2C总线地址：0x0E；访问RoT寄存器：0x0A；返回值：0x30；检查方式：对返回值进行与运算，当返回值&amp;0x20！＝0，且返回值&amp;0x10！＝0时，表示当前服务器支持Intel PFR功能。若测试命令白名单中记录的、CPLD与BMC之间的I2C总线命令，那么可参照如下示例进行测试：命令功能：读取RoT寄存器，以查看当前服务器的启动状态；BIOS访问CPLD的I2C总线地址：0x20；访问RoT寄存器：0x03；返回值：0x0D；检查方式：根据0x03寄存器的状态Table，若查找到0x0D，则确定BIOS启动完成。在一种具体实施方式中，还包括：若命令白名单中的各个命令均测试通过，则利用PFR功能测试脚本测试任一个不在命令白名单中的命令，以检测PFR功能的命令保护机制。由于不在命令白名单中的命令不允许被执行，因此若不在命令白名单中的命令被触发，则服务器的PFR功能对于命令的保护机制会被触发。命令保护机制即：检测到不在命令白名单中的命令被触发，RoT会关闭服务器，并校验服务器中的各个固件镜像，校验通过后再重启服务器。因此测试任一个不在命令白名单中的命令，可以检测命令保护机制是否可以被正常触发。据此重启服务器后，检查RoT中的寄存器，从而可确定是由于发送了不在白名单中的命令导致的服务器重启，那么记录通过。基于上述实施例，需要说明的是，若PFR测试项为RoT寄存器，则利用PFR功能测试脚本测试RoT寄存器，包括：在服务器开机启动后，利用PFR功能测试脚本收集RoT寄存器记录的启动信息，并标注启动信息对应的说明释义和时间戳。这些都会一一记录在测试日志中。其中，启动信息包括：服务器正常启动的相关信息、BIOS或BMC启动超时后CPLD执行恢复操作的启动相关信息、非白名单命令访问后的重启信息、升级BIOS或BMC或CPLD后的启动信息等。下述实施例提供了一个可以自动化测试Intel PFR功能的测试脚本，该测试脚本涵盖的功能有：日志记录、检测PFR固件镜像、检测I2C总线监控白名单、检查RoT中的寄存器功能、自动化升级PFR固件镜像。该测试脚本对这些测试项的测试顺序没有具体限制。1、日志记录功能用于针对整个测试流程进行日志记录，可以具体记录每次执行的参数、对应的测试结果、时间戳等内容。具体的日志信息输出重定向到与该测试脚本所在目录同级的其他目录下的log文件夹。2、请参见图2，检测PFR固件镜像的具体步骤包括：a.读取输入给测试脚本的镜像，查找镜像是否有包含PFM标签。b.检查PFM中的Active区域对应的主版本号、次版本号、安全版本号。c.检查是否有包含Recovery区域和Staging区域。d.检查Recovery区域对应的主版本号、次版本号、安全版本编号是否和Active区域一致。e.以上检查都通过，则返回Supported PFR，并打印详细的各个区域的偏移地址、主版本号、次版本号、安全版本号。3、请参见图3，检测I2C总线监控白名单，以检测I2C总线的监控和过滤功能，具体步骤包括：a.接收XML或JSON的配置文件，解析出I2C总线监控白名单。b.根据白名单定义的I2C总线地址，申请BMC或主机的控制接口。c.向白名单中定义的地址发送相应的白名单中的某一命令，检查相应的返回状态。若成功返回数据，则表明测试通过；超时或拒绝访问，则表示此条命令测试失败。每一条测试内容和测试结果都会记录到日志中。d.逐一测试白名单中的各个命令，如果白名单测试通过，则尝试发送一条不在白名单的命令，以触发PFR的命令保护机制，即：RoT关闭服务器，并校验固件镜像，校验通过后再重启服务器。e.重启服务器后，检查RoT中的寄存器，确定是由于发送了不在白名单中的命令导致的服务器重启，那么记录测试通过。4、请参见图4，检查RoT中的寄存器功能：测试脚本可以常驻服务器OS执行，记录每次服务器重新启动时寄存器记录的启动信息、相应信息的文字说明、当前时间戳等内容，保存到日志中。若服务器一直无法成功启动，那么寄存器会重复覆盖式记录启动信息，此时是同一信息的重复覆盖，因此不会有信息丢失。当然，可以通过其他手段抓取寄存器记录的信息。5、自动化升级支持PFR的BIOS固件镜像、BMC固件镜像和CPLD固件镜像：可以进行多次升降级测试，并记录测试结果。可见，本实施例提供的测试脚本能够提高研发和测试的效率，具有如下优点：自动化解析PFR固件镜像，可以很方便记录并展示镜像的详细信息，方便用户了解当前所使用的固件信息，也可以防止误操作刷新固件镜像后导致固件镜像不支持PFR功能。自动升级PFR固件镜像。自动化测试I2C总线监控和过滤功能的白名单，可以解决测试人员不知道如何测试某些命令，也可以极大的节省测试时间，清晰的展示出每条命令的测试结果。记录每次重启后寄存器的状态，可以最大程度上保留每次PFR事件执行的状况，记录错误发生的原因，当服务器连续发生多次重启时，可以展现出完整的事件流程。下面对本申请实施例提供的一种PFR功能测试装置进行介绍，下文描述的一种PFR功能测试装置与上文描述的一种PFR功能测试方法可以相互参照。参见图5所示，本申请实施例公开了一种PFR功能测试装置，包括：获取模块501，用于获取预设的PFR功能测试脚本；部署模块502，用于将PFR功能测试脚本部署于服务器的OS；测试模块503，用于若服务器开机启动，则基于OS运行PFR功能测试脚本，以利用PFR功能测试脚本测试服务器中的至少一个PFR测试项，并实时记录至少一个PFR测试项对应的测试日志。在一种具体实施方式中，测试模块具体用于：利用PFR功能测试脚本读取PFR固件镜像，并查找PFR固件镜像的PFR标签；若查找到PFR标签，则检测PFR固件镜像对应的Active区域、Recovery区域和Staging区域；若Recovery区域和Staging区域均存在，且Active区域的镜像版本号与Recovery区域的镜像版本号一致，则输出PFR固件镜像测试通过的通知消息，并记录PFR固件镜像的镜像信息。在一种具体实施方式中，测试模块还用于：若Recovery区域和/或Staging区域不存在，或Active区域的镜像版本号与Recovery区域的镜像版本号不一致，则输出PFR固件镜像测试未通过的通知消息，并记录PFR固件镜像的镜像信息。在一种具体实施方式中，PFR固件镜像为：CPLD固件镜像、BIOS固件镜像和/或BMC固件镜像。在一种具体实施方式中，测试模块具体用于：利用PFR功能测试脚本读取配置文件，解析配置文件得到I2C总线的命令白名单；命令白名单中记录有CPLD与BIOS之间的I2C总线命令、CPLD与BMC之间的I2C总线命令；逐一测试命令白名单中的各个命令，并记录测试结果。在一种具体实施方式中，测试模块还用于：若命令白名单中的各个命令均测试通过，则利用PFR功能测试脚本测试任一个不在命令白名单中的命令，以检测PFR功能的命令保护机制。在一种具体实施方式中，测试模块具体用于：在服务器开机启动后，利用PFR功能测试脚本收集RoT寄存器记录的启动信息，并标注启动信息对应的说明释义和时间戳。其中，关于本实施例中各个模块、单元更加具体的工作过程可以参考前述实施例中公开的相应内容，在此不再进行赘述。可见，本实施例提供了一种PFR功能测试装置，该装置基于PFR功能测试脚本自动完成，且测试内容也在PFR功能测试脚本中有指定，因此测试耗时较短且不易出错，对测试人员的要求也较低，提高了PFR功能的测试效率和便捷性。下面对本申请实施例提供的一种电子设备进行介绍，下文描述的一种电子设备与上文描述的一种PFR功能测试方法及装置可以相互参照。本申请实施例公开了一种电子设备，包括：存储器，用于保存计算机程序；处理器，用于执行所述计算机程序，以实现上述任意实施例公开的方法。下面对本申请实施例提供的一种可读存储介质进行介绍，下文描述的一种可读存储介质与上文描述的一种PFR功能测试方法、装置及设备可以相互参照。一种可读存储介质，用于保存计算机程序，其中，所述计算机程序被处理器执行时实现前述实施例公开的PFR功能测试方法。关于该方法的具体步骤可以参考前述实施例中公开的相应内容，在此不再进行赘述。本申请涉及的“第一”、“第二”、“第三”、“第四”等是用于区别类似的对象，而不必用于描述特定的顺序或先后次序。应该理解这样使用的数据在适当情况下可以互换，以便这里描述的实施例能够以除了在这里图示或描述的内容以外的顺序实施。此外，术语“包括”和“具有”以及他们的任何变形，意图在于覆盖不排他的包含，例如，包含了一系列步骤或单元的过程、方法或设备不必限于清楚地列出的那些步骤或单元，而是可包括没有清楚地列出的或对于这些过程、方法或设备固有的其它步骤或单元。需要说明的是，在本申请中涉及“第一”、“第二”等的描述仅用于描述目的，而不能理解为指示或暗示其相对重要性或者隐含指明所指示的技术特征的数量。由此，限定有“第一”、“第二”的特征可以明示或者隐含地包括至少一个该特征。另外，各个实施例之间的技术方案可以相互结合，但是必须是以本领域普通技术人员能够实现为基础，当技术方案的结合出现相互矛盾或无法实现时应当认为这种技术方案的结合不存在，也不在本申请要求的保护范围之内。本说明书中各个实施例采用递进的方式描述，每个实施例重点说明的都是与其它实施例的不同之处，各个实施例之间相同或相似部分互相参见即可。结合本文中所公开的实施例描述的方法或算法的步骤可以直接用硬件、处理器执行的软件模块，或者二者的结合来实施。软件模块可以置于随机存储器、内存、只读存储器、电可编程ROM、电可擦除可编程ROM、寄存器、硬盘、可移动磁盘、CD-ROM、或技术领域内所公知的任意其它形式的可读存储介质中。本文中应用了具体个例对本申请的原理及实施方式进行了阐述，以上实施例的说明只是用于帮助理解本申请的方法及其核心思想；同时，对于本领域的一般技术人员，依据本申请的思想，在具体实施方式及应用范围上均会有改变之处，综上所述，本说明书内容不应理解为对本申请的限制。
