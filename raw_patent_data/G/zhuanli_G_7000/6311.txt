标题title
一种基于共用计算的城市路网多源最短路径获取方法
摘要abst
本发明公开了一种基于共用计算的城市路网多源最短路径获取方法，包括：1.获取实时城市道路路网图，并选定多个源点交叉口；2.取出各源点交叉口队列中的队首元素，并对其邻接交叉口进行松弛操作，将权重更新的最短路径的起始点加入到集合ΔAt中；3.对于集合ΔAt根据最短路径权重降序，并依次回溯ΔAt中路径，寻找需要重新加入各自源点交叉口队列队首的起点交叉口；4.若所有源点交叉口队列不为空，则继续进行上述操作，否则，停止搜索，得到多源最短路径值并输出最短路径。本发明能够运用共用计算的思想方法，有效提升大规模路网导航规划的计算效率，同时满足同时段多用户的不同出行点的出行需求。
权利要求书clms
1.一种基于共用计算的城市路网多源最短路径获取方法，其特征是按如下步骤进行：步骤1：构建城市路网，定义参数并初始化；获取实时道路网络数据并得到城市路网G＝，V表示交叉口集合，且V＝{v1,v2,v3,…,vr,…,vR}，vr表示第r个交叉口，r＝1,2,3,…,R，R为所述城市路网G中的交叉口总数，A表示交叉口之间的路段集合，且A＝{|i,j＝1,2,3,…,R}，表示第i个交叉口vi到第j个交叉口vj之间的有向路段，W表示交叉口之间路段的权重，W＝{ωi,j|i,j＝1,2,3,…,R}，ωi,j为有向路段的权重，若第i个交叉口vi到第j个交叉口vj之间存在有向路段，则表示第j个交叉口vj是第i个交叉口vi的邻接交叉口，且ωi,j≥0；若第i个交叉口vi到第j个交叉口vj之间不存在有向路段，则ωi,j＝+∞；定义当前迭代次数为t，并初始化t＝1；定义表示当前第t次迭代下最短路径的权重的集合；为当前第t次迭代下第i个交叉口vi到第j个交叉口vj之间最短路径的权重，若第i个交叉口vi到第j个交叉口vj之间的路径权重不为+∞，则认为第j个交叉口vj是第i个交叉口vi的邻接交叉口；初始化Zt＝W；步骤2：获取源点交叉口集合：将K个源点交叉口加入源点集合其中，sk表示源点集合V′中第k个源点交叉口的下标，表示交叉口集合V中第sk个交叉口，1＜K＜R；步骤3：初始化第t次迭代的源点交叉口到各个交叉口的权重；记当前第t次迭代下第sk个交叉口到第sk个交叉口的并将K个源点交叉口分别加入当前第t次迭代下各自的源点交叉口队列中；将第sk个交叉口到除自身外其他交叉口的最短路径的权重记为+∞；步骤4：更新第t次迭代下各源点交叉口到所有交叉口的最短路径的权重：步骤4.1：初始化k＝1；步骤4.2：取出第t次迭代下第k个源点交叉口队列中的队首元素从而更新为“”表示删除操作；步骤4.3：将Zt赋值给Zt+1，对于队首元素的任意邻接交叉口若则将赋值给记录从第sk个交叉口到交叉口的路径中交叉口的前驱交叉口将赋值给将第sk个交叉口到交叉口之间的路径记为并加入路径起止点集合ΔAt中；将交叉口加入队列的队尾；否则，对队首元素的其他邻接交叉口进行判断，直到遍历完队首元素的所有邻接交叉口后，将k+1赋值给k后，返回步骤4.2执行，直到k＝K为止，转至步骤5，其中，表示当前第t次迭代下第sk个交叉口到队首元素的最小权重，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示当前第t次迭代下队首元素到邻接交叉口之间最短路径的权重，表示当前第t+1次迭代下第sk个交叉口到交叉口之间最短路径的权重；步骤5：判断路径起止点集合ΔAt中符合条件的路径，并将符合条件的路径的起点交叉口加入队列：步骤5.0：若且t≠1，则对路径起止点集合ΔAt中所有路径按照各自路径的权重进行降序排序，得到排序后的路径起止点集合ΔA′t，假设排序后的路径集合ΔA′t包含M条路径，定义当前路径为第m条路径，并初始化m＝1后，执行步骤5.1；否则，转入步骤6；步骤5.1：初始化k＝1；获取排序后的路径起止点集合ΔA′t中第m条路径的起始交叉口和终点交叉口步骤5.2：若起点为交叉口集合V中第sk个交叉口则执行步骤5.4；否则，执行步骤5.3；步骤5.3：当且同时，则将第m条路径的起始交叉口加入队列Qk的队首，并将赋值给将赋值给记录从第sk个交叉口到交叉口的路径中交叉口的前驱交叉口其中，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示第t+1次迭代下交叉口集合V第start个交叉口到第end个交叉口之间最短路径的权重；步骤5.4：将k+1赋值给k后，返回步骤5.2执行，直到k＝K为止；步骤5.5：将m+1赋值给m，返回步骤5.1执行，直至m＝M为止；步骤6：判断所有队列是否为空，若是，则表示得到源点交叉口集合V′中所有源点交叉口到交叉口集合V中任意点的最短路径的权重，并停止路径搜索；否则，将t+1赋值为t，返回步骤4执行；步骤7：获取源点交叉口集合V′中第k个源点交叉口到交叉口集合V中第i个交叉口vi的当前最短路径：步骤7.1：在所述当前最短路径中，依据第i个交叉口vi的前驱交叉口找到第i个交叉口vi的前驱交叉口为vj，再依据第j个交叉口vj的前驱交叉口找到第j个交叉口vj的前驱交叉口为vm，以此类推，直到找到前驱交叉口为第k个源点交叉口为止，得到第k个源点交叉口到交叉口集合V中第i个交叉口vi的当前不完整最短路径步骤7.2：遍历当前不完整最短路径中的每个交叉口，若遍历到的交叉口vm为源点交叉口且交叉口vm到路径中下一个交叉口vp的最短路径权重小于路段权重，则依据第p个交叉口vp的前驱交叉口找到第p个交叉口vp的前驱交叉口为vq，并作为路径中交叉口vp的前驱交叉口加入到路径中，否则继续遍历，从而在遍历完所有路径中的所有交叉口后，得到更新后的不完整最短路径；步骤7.3：将更新后的不完整最短路径作为当前不完整最短路径，并重复步骤7.2的操作，直至没有新的交叉口加入路径时为止；从而得到最终的路径即为第k个源点交叉口到交叉口集合V中第i个交叉口vi的完整的最短路径。
说明书desc
技术领域本发明属于车载导航路径优化领域，具体的说是一种基于共用计算的城市路网多源最短路径获取方法。背景技术随着路网规模的不断扩大，路网节点相应增加，现有的最短路径导航系统都首先利用单源最短路算法或者全源最短路算法解决用户的出行需求，计算工作量巨大，很难满足人们对导航软件实时高效的要求。常用的全源最短路算法在大规模城市路网中使用，尤其是路网节点较为密集时，计算所涉的范围很广，耗时和资源占用相应增大，这种用资源数量换取效率质量的方法是普遍的应对方案。在解决车载导航核心问题最短路求解上，不同学者设计了不同的算法，对于单源最短路算法的应用上，逐一单独采用单源最短路算法，会重复计算一些已经计算好的权重，造成了大量的计算冗余；而全源最短路径算法又将进行不必要的单源点最短路径算法，计算量也随之增大，不适应与实时性导航的理念。发明内容本发明是为了解决上述现有技术存在的不足之处，提出一种基于共用计算的城市路网多源最短路径获取方法，以期能够运用共用计算的思想方法，有效提升大规模路网多路径导航规划的计算效率，同时满足同时段多用户的不同出发点的出行需求。本发明为达到上述发明目的，采用如下技术方案：本发明一种基于共用计算的城市路网多源最短路径获取方法的特点是按如下步骤进行：步骤1：构建城市路网，定义参数并初始化；获取实时道路网络数据并得到城市路网G＝，V表示交叉口集合，且V＝{v1,v2,v3,…,vr,…,vR}，vr表示第r个交叉口，r＝1,2,3,…,R，R为所述城市路网G中的交叉口总数，A表示交叉口之间的路段集合，且A＝{|i,j＝1,2,3,…,R}，表示第i个交叉口vi到第j个交叉口vj之间的有向路段，W表示交叉口之间路段的权重，W＝{ωi,j|i,j＝1,2,3,…,R}，ωi,j为有向路段的权重，若第i个交叉口vi到第j个交叉口vj之间存在有向路段，则表示第j个交叉口vj是第i个交叉口vi的邻接交叉口，且ωi,j≥0；若第i个交叉口vi到第j个交叉口vj之间不存在有向路段，则ωi,j＝+∞；定义当前迭代次数为t，并初始化t＝1；定义表示当前第t次迭代下最短路径的权重的集合；为当前第t次迭代下第i个交叉口vi到第j个交叉口vj之间最短路径的权重，若第i个交叉口vi到第j个交叉口vj之间的路径权重不为+∞，则认为第j个交叉口vj是第i个交叉口vi的邻接交叉口；初始化Zt＝W；步骤2：获取源点交叉口集合：将K个源点交叉口加入源点集合其中，sk表示源点集合V′中第k个源点交叉口的下标，表示交叉口集合V中第sk个交叉口，1＜K＜R；步骤3：初始化第t次迭代的源点交叉口到各个交叉口的权重；记当前第t次迭代下第sk个交叉口到第sk个交叉口的并将K个源点交叉口分别加入当前第t次迭代下各自的源点交叉口队列中；将第sk个交叉口到除自身外其他交叉口的最短路径的权重记为+∞；步骤4：更新第t次迭代下各源点交叉口到所有交叉口的最短路径的权重：步骤4.1：初始化k＝1；步骤4.2：取出第t次迭代下第k个源点交叉口队列中的队首元素从而更新为“”表示删除操作；步骤4.3：将Zt赋值给Zt+1，对于队首元素的任意邻接交叉口若则将赋值给记录从第sk个交叉口到交叉口的路径中交叉口的前驱交叉口将赋值给将第sk个交叉口到交叉口之间的路径记为并加入路径起止点集合ΔAt中；将交叉口加入队列的队尾；否则，对队首元素的其他邻接交叉口进行判断，直到遍历完队首元素的所有邻接交叉口后，将k+1赋值给k后，返回步骤4.2执行，直到k＝K为止，转至步骤5，其中，表示当前第t次迭代下第sk个交叉口到队首元素的最小权重，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示当前第t次迭代下队首元素到邻接交叉口之间最短路径的权重，表示当前第t+1次迭代下第sk个交叉口到交叉口之间最短路径的权重；步骤5：判断路径起止点集合ΔAt中符合条件的路径，并将符合条件的路径的起点交叉口加入队列：步骤5.0：若且t≠1，则对路径起止点集合ΔAt中所有路径按照各自路径的权重进行降序排序，得到排序后的路径起止点集合ΔA′t，假设排序后的路径集合ΔA′t包含M条路径，定义当前路径为第m条路径，并初始化m＝1后，执行步骤5.1；否则，转入步骤6；步骤5.1：初始化k＝1；获取排序后的路径起止点集合ΔA′t中第m条路径的起始交叉口和终点交叉口步骤5.2：若起点为交叉口集合V中第sk个交叉口则执行步骤5.4；否则，执行步骤5.3；步骤5.3：当且同时，则将第m条路径的起始交叉口加入队列Qk的队首，并将赋值给将赋值给记录从第sk个交叉口到交叉口的路径中交叉口的前驱交叉口其中，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示第t+1次迭代下交叉口集合V第start个交叉口到第end个交叉口之间最短路径的权重；步骤5.4：将k+1赋值给k后，返回步骤5.2执行，直到k＝K为止；步骤5.5：将m+1赋值给m，返回步骤5.1执行，直至m＝M为止；步骤6：判断所有队列是否为空，若是，则表示得到源点交叉口集合V′中所有源点交叉口到交叉口集合V中任意点的最短路径的权重，并停止路径搜索；否则，将t+1赋值为t，返回步骤4执行；步骤7：获取源点交叉口集合V′中第k个源点交叉口到交叉口集合V中第i个交叉口vi的当前最短路径：步骤7.1：在所述当前最短路径中，依据第i个交叉口vi的前驱交叉口找到第i个交叉口vi的前驱交叉口为vj，再依据第j个交叉口vj的前驱交叉口找到第j个交叉口vj的前驱交叉口为vm，以此类推，直到找到前驱交叉口为第k个源点交叉口为止，得到第k个源点交叉口到交叉口集合V中第i个交叉口vi的当前不完整最短路径步骤7.2：遍历当前不完整最短路径中的每个交叉口，若遍历到的交叉口vm为源点交叉口且交叉口vm到路径中下一个交叉口vp的最短路径权重小于路段权重，则依据第p个交叉口vp的前驱交叉口找到第p个交叉口vp的前驱交叉口为vq，并作为路径中交叉口vp的前驱交叉口加入到路径中，否则继续遍历，从而在遍历完所有路径中的所有交叉口后，得到更新后的不完整最短路径；步骤7.3：将更新后的不完整最短路径作为当前不完整最短路径，并重复步骤7.2的操作，直至没有新的交叉口加入路径时为止；从而得到最终的路径即为第k个源点交叉口到交叉口集合V中第i个交叉口vi的完整的最短路径。与现有技术相比，本发明的有益效果在于：1、本发明设计了一种介于单源最短路径算法与全源最短路径算法之间的部分源最短路径生成技术，并提出在计算多源最短路过程中，各源点的最短路径权重能共用计算，从而进一步提高了计算效率，更加高效处理大规模路网图，节省了资源的同时保证了效率，结合了实际导航应用需求现状，避免了不必要的时间损耗，为大型路网计算繁杂的难题提供巧妙的多源最短路的优化方法，实质性地提高了计算效率和求解质量，能够缓解导航规划的计算负担，更贴合实际应用。2、在现有的全源最短路算法中，因其本质特性，在应对复杂大型图时的计算效率不高，需要对大型路网图中所有交叉口源点进行遍历搜索，使得效率大大降低。本发明考虑只选取存在用户搜索路径需求的源点展开最短路径搜索计算，省略没有用户发起路径搜索的源点搜索计算，从而在避免对全源展开路径搜索或者单源最短路径算法并行计算的情况下，以更高的效率进行一种多源最短路算法，为导航系统同时为多个用户提供定制最短路径提供新的解决方案。3、在常用的全源最短路算法Floyd中，每一次迭代更新的任意两点最短路权重中都将利用上一轮迭代中更新的两点最短路权重，进行比较更新。本发明巧妙地将这一共用计算的思想应用到获取多源最短路径的方法中进行优化处理，并对更新的路径权重及时判断是否需要用于其他源点下一轮迭代更新，避免了路段权重的重复计算，减少了计算工作量。4、本发明分别对每个源点的松弛更新以及对每个更新的权重判断是否能够用于下一轮的共用计算都是可以同时进行的，据此特性，本发明为多线程条件下的并行化计算提供了可能，为后续的城市路网导航规划工作中融合并行多源搜索奠定基础，并且便于与图划分技术和并行搜索相配合，为多用户路径规划进一步提速。附图说明图1为本发明流程图；图2为本发明简单城市路网图和初始各最短路径权重表；图3为本发明t＝1次下各源点最短路权重、队列情况以及各节点间最短路权重图表；图4为本发明t＝2次下各源点最短路权重表、队列情况以及各节点间最短路权重图表；图5为本发明t＝3次下各源点最短路权重表、队列情况以及各节点间最短路权重图表；图6为本发明t＝4次下各源点最短路权重表、队列情况以及各节点间最短路权重图表；图7为本发明t＝5次下各源点最短路权重表、队列情况以及各节点间最短路权重图表；图8为本发明t＝6次下各源点最短路权重表、队列情况以及各节点间最短路权重图表；图9为本发明t＝7次下各源点最短路权重表、队列情况以及各节点间最短路权重图表。具体实施方式本实施例中，从求解一种基于单源和全源之间的多源最短路的想法出发，提出一种基于共用计算的城市路网多源最短路径获取方法，是对于一源点在最短路径搜索过程中，其他源点作为这一源点路径搜索中的某一经过点，其已经更新的某一路段最短路径能共用于这一源点的最短路径搜索计算方法，具体流程如图1所示，按如下步骤进行：步骤1：构建城市路网，定义参数并初始化：获取实时道路网络数据并得到城市路网G＝，下面将以图2为简易路网图为例，V表示交叉口集合，且V＝{v1,v2,v3,…,vr,…,vR}，vr表示第r个交叉口，r＝1,2,3,…,R，R为所述城市路网G中的交叉口总数，A表示交叉口之间的路段集合，且A＝{|i,j＝1,2,3,…,R}，表示第i个交叉口vi到第j个交叉口vj之间的有向路段，W表示交叉口之间路段的权重，W＝{ωi,j|i,j＝1,2,3,…,R}，ωi,j为有向路段的权重，若第i个交叉口vi到第j个交叉口vj之间存在有向路段，则表示第j个交叉口vj是第i个交叉口vi的邻接交叉口，且ωi,j≥0；若第i个交叉口vi到第j个交叉口vj之间不存在有向路段，则ωi,j＝+∞，即实例图2中无有向线连接的两交叉口间的权重为无穷大；定义当前迭代次数为t，并初始化t＝1；定义表示当前第t次迭代下最短路径的权重的集合；为当前第t次迭代下第i个交叉口vi到第j个交叉口vj之间最短路径的权重，若第i个交叉口vi到第j个交叉口vj之间的路径权重不为+∞，则可认为第j个交叉口vj是第i个交叉口vi的邻接交叉口，即如图5中t＝3时v3也为v1的邻接交叉口；初始化Zt＝W，初始化如图3的Z1表所示；步骤2：获取源点交叉口集合：将K个源点交叉口加入源点集合其中，sk表示源点集合V′中第k个源点交叉口的下标，表示交叉口集合V中第sk个交叉口，1＜K＜R，如图2中V′所示；步骤3：初始化第t次迭代的源点交叉口到各个交叉口的权重:记当前第t次迭代下第sk个交叉口到第sk个交叉口的并将K个源点交叉口分别加入当前第t次迭代下各自的源点交叉口队列中；将第sk个交叉口到除自身外其他交叉口的最短路径的权重记为+∞；步骤4：更新第t次迭代下各源点交叉口到所有交叉口的最短路径的权重：步骤4.1：初始化k＝1；步骤4.2：取出第t次迭代下第k个源点交叉口队列中的队首元素即图3到图9中各源点到各交叉口当前最短路径权值表中黑色斜体所对应的交叉口节点，从而更新为“”表示删除操作；步骤4.3：将Zt赋值给Zt+1，对于队首元素的任意邻接交叉口若则将赋值给记录从第sk个交叉口到交叉口的路径中交叉口的前驱交叉口将赋值给将第sk个交叉口到交叉口之间的路径记为并加入路径起止点集合ΔAt中；将交叉口加入队列的队尾；否则，对队首元素的其他邻接交叉口进行判断，直到遍历完队首元素的所有邻接交叉口后，将k+1赋值给k后，返回步骤4.2执行，直到k＝K为止，转至步骤5，以图4中t＝2为例，对源点v1和v5进行最短路径搜索，分别取出当前队首元素v2和v1后，将符合条件的邻接交叉口v3和v2分别加入队列中，并更新D1＝11和D1＝13以及D5＝19，即图4中加粗的数据，并将更新的路径加入集合ΔA2中，更新的路网图和各交叉口的最短路径权重表如图5中t＝3初始所示，再如图7中，没有路径权重得到更新，则图8中的最短路权重图和图7中的最短路径权重表相同，其中，表示当前第t次迭代下第sk个交叉口到队首元素的最小权重，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示当前第t次迭代下队首元素到邻接交叉口之间最短路径的权重，表示当前第t+1次迭代下第sk个交叉口到交叉口之间最短路径的权重；步骤5：判断路径起止点集合ΔAt中符合条件的路径，并将符合条件的路径的起点交叉口加入队列：步骤5.0：若且t≠1，则对路径起止点集合ΔAt中所有路径按照各自路径的权重进行降序排序，得到排序后的路径起止点集合ΔA′t，假设排序后的路径集合ΔA′t包含M条路径，定义当前路径为第m条路径，并初始化m＝1后，执行步骤5.1；否则，转入步骤6，如图4中，将集合ΔA2排序得到新的起止点集合ΔA'2，此时集合中共有3条路径；步骤5.1：初始化k＝1；获取排序后的路径起止点集合ΔA′t中第m条路径的起始交叉口和终点交叉口步骤5.2：若起点为交叉口集合V中第sk个交叉口则执行步骤5.4；否则，执行步骤5.3；步骤5.3：当且同时，则将第m条路径的起始交叉口加入队列Qk的队首，并将赋值给将赋值给记录从第sk个交叉口到交叉口的路径中交叉口的前驱交叉口如图4中路径，对于源点v5，有则将v3加入到队列Q5队首位置上，并更新即图中加粗下划线的值。更新后t＝3的初始简单路网图和各交叉口节点间的最短路径权重表如图5所示，简单路网图中虚线表示的即为更新的有向路径；如图6和图8，其ΔA′4和ΔA′6不为空，但更新的权重并不能赋予其更短的路径权值，故而不更新。其中，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示当前第t次迭代下第sk个交叉口到交叉口的最小权重，表示第t+1次迭代下交叉口集合V第start个交叉口到第end个交叉口之间最短路径的权重；步骤5.4：将k+1赋值给k后，返回步骤5.2执行，直到k＝K为止；步骤5.5：将m+1赋值给m，返回步骤5.1执行，直至m＝M为止；步骤6：判断所有队列是否为空，若是，则表示得到源点交叉口集合V′中所有源点交叉口到交叉口集合V中任意点的最短路径的权重，并停止路径搜索；否则，将t+1赋值为t，返回步骤4执行，本实施例中最终所得的所有源点交叉口到各交叉口的最短路径权重如图9所示，所有源点交叉口到各交叉口的最短路径值如表1所示；表1本发明各源点到各个交叉口的最短路径值v1v2v3v4v5v6v10911231318v510192133028步骤7：获取源点交叉口集合V′中第k个源点交叉口到交叉口集合V中第i个交叉口vi的当前最短路径：步骤7.1：在当前最短路径中，依据第i个交叉口vi的前驱交叉口找到第i个交叉口vi的前驱交叉口为vj，再依据第j个交叉口vj的前驱交叉口找到第j个交叉口vj的前驱交叉口为vm，以此类推，直到找到前驱交叉口为第k个源点交叉口为止，得到第k个源点交叉口到交叉口集合V中第i个交叉口vi的当前不完整最短路径步骤7.2：开始遍历当前不完整最短路径中的每个交叉口，若此时遍历到的交叉口vn为源点交叉口且vn到路径中下一个交叉口vp的最短路径权重小于路段权重，则依据第p个交叉口vp的前驱交叉口找到第p个交叉口vp的前驱交叉口为vq，加入路径中交叉口vp前面；否则继续遍历，从而在遍历完所有路径中所有交叉口后，得到更新后的不完整最短路径；步骤7.3：将更新后的不完整最短路径作为当前不完整最短路径，并重复步骤7.2的操作，直至没有交叉口加入路径时停止操作，此时得到的路径为第k个源点交叉口到交叉口集合V中第i个交叉口vi的完整的最短路径。本实施例中所获的各源点到各交叉口点的最短路径如表2所示。表2本发明多源最短路径获取结果以v5到v3的最短路为例，根据图9中的各源点最短路权重表，寻找v3的前驱交叉口v1，寻找v1的前驱交叉口v5，已经找到源点，得到当前不完整最短路径{v5→v1→v3}，发现此时路径中v1为源点交叉口，且寻找从v1到v3的前驱交叉口v2，得到路径为{v5→v1→v2→v3}，此时说明已经得到了最短路径。
