标题title
一种微服务RPC自适应调度方法及相关装置
摘要abst
本申请公开了一种微服务RPC自适应调度方法及相关装置，包括：当RPC模块运行时根据待调用数据类型选取通信方式，对待调用数据的头部进行染色处理和封包序列化操作后发送至RPC Proxy模块，RPC Proxy模块响应RPC模块的请求并设置请求的优先级权重，同时每间隔一段时间更新权重；并通过PCA对负载信息进行降维得到负载权重因子，从而根据负载权重因子得到RPC服务路由信息；接着RPC Proxy模块基于请求的优先级权重和RPC服务路由信息调用RPC服务资源池内的资源节点，最后向RPC模块返回调用结果。解决了技术无法根据服务数据本身固有属性选择合适的底层通信方式、且调用过程的优先级指定相对固化，无法高效地协调有限的可调用资源的技术问题。
权利要求书clms
1.一种微服务RPC自适应调度方法，其特征在于，应用于由RPC模块、RPC Proxy模块、RPC服务资源池构成的RPC自适应调度系统，方法包括：当RPC模块运行时，根据待调用数据的类型选取对应的预设通信方式，对所述待调用数据的头部进行染色处理和并对所述待调用数据封包序列化操作后，发送至RPC Proxy模块；RPC Proxy模块响应RPC模块的请求，根据请求的优先级权重设置所述待调用数据在待发送队列的位置，并根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新；RPC Proxy模块判断RPC服务是否为运行状态，若是，执行步骤S1，否则，向RPC模块返回无可用服务的信息；S1、判断宿主负载信息的时间戳与当前时间戳的差值是否越限，若是，通过马尔可夫过程对负载信息进行预测，并通过PCA对负载信息进行降维得到负载权重因子，否则，通过PCA对负载信息进行降维得到负载权重因子；S2、对负载权重因子进行排序，并选择最优的负载权重因子设置RPC服务路由信息；S3、基于所述待调用数据在待发送队列的位置，根据所述RPC服务路由信息调用RPC服务资源池内的资源节点，并根据待调用数据优先级权重向RPC模块返回调用结果。2.根据权利要求1所述的微服务RPC自适应调度方法，其特征在于，还包括：当RPC模块的请求为抢占优先级请求，且未获得资源节点时，RPC Proxy模块挂起第一请求对应的调用业务，所述第一请求的优先级权重低于所述抢占优先级请求的优先级权重；并根据所述RPC服务路由信息调用RPC服务资源池内的资源节点，向RPC模块返回调用结果。3.根据权利要求2所述的微服务RPC自适应调度方法，其特征在于，还包括：RPC模块接收RPC Proxy模块返回的所述调用结果，对所述调用结果进行反序列化解包操作。4.根据权利要求1所述的微服务RPC自适应调度方法，其特征在于，所述通过PCA对负载信息进行降维得到负载权重因子，具体包括：根据负载信息构建n行m列的矩阵，n为负载信息的维数，m为负载信息的条数；将所述矩阵进线零均值化后，求解得到协方差矩阵；求解所述协方差矩阵的特征值及对应的特征向量；将所述特征向量按对应特征值的大小从上到下按行排列成第一矩阵，并取前k行组成第二矩阵，得到负载权重因子，n、m、k均为正整数。5.根据权利要求1所述的微服务RPC自适应调度方法，其特征在于，所述根据待调用数据的类型选取对应的预设通信方式，具体包括：所述待调用数据的类型包括：可靠数据、非可靠数据、流数据、时间敏感数据，其中，所述可靠数据对应的预设通信方式为TCP，所述非可靠数据对应的预设通信方式为UDP，所述流数据对应的预设通信方式为QUIC，所述时间敏感数据的预设通信方式为KCP；并设置优先通信方式为http，从而构建待调用数据与通信方式的对应关系，使得RPC模块基于对应关系根据待调用数据的类型选取对应的通信方式。6.根据权利要求2所述的微服务RPC自适应调度方法，其特征在于，所述根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新，具体包括：设所述请求优先权重由抢占优先级权重和消息阻塞因子权重构成；基于消息阻塞因子权重计算公式，对所述消息阻塞因子权重进行更新，从而对所述请求优先权重进行更新；其中，所述消息阻塞因子权重计算公式为：Q＝ΔtnB；式中，Q为低16bit阻塞权重因子，Δtn为消息阻塞时间间隔数目，B为权重算子，定义为arctan*65535*2/π，其中δ为消息阻塞因子系数，X为任意输入参数。7.一种微服务RPC自适应调度系统，其特征在于，包括：RPC模块，用于在运行时根据待调用数据的类型选取对应的预设通信方式，对所述待调用数据的头部进行染色处理和并对所述待调用数据封包序列化操作后，发送至RPC Proxy模块；RPC Proxy模块，用于模块响应RPC模块的请求，根据请求的优先级权重设置所述待调用数据在待发送队列的位置，并根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新；判断RPC服务是否为运行状态，若是，执行步骤S1，否则，向RPC模块返回无可用服务的信息；S1、判断宿主负载信息的时间戳与当前时间戳的差值是否越限，若是，通过马尔可夫过程对负载信息进行预测，并通过PCA对负载信息进行降维得到负载权重因子，否则，通过PCA对负载信息进行降维得到负载权重因子；S2、对负载权重因子进行排序，并选择最优的负载权重因子设置RPC服务路由信息；S3、基于所述待调用数据在待发送队列的位置，根据所述RPC服务路由信息调用RPC服务资源池内的资源节点，并根据待调用数据优先级权重向RPC模块返回调用结果。8.根据权利要求7所述的微服务RPC自适应调度系统，其特征在于，RPC Proxy模块还用于：当RPC模块的请求为抢占优先级请求，且未获得资源节点时，挂起第一请求对应的调用业务，所述第一请求的优先级权重低于所述抢占优先级请求的优先级权重；并根据所述RPC服务路由信息调用RPC服务资源池内的资源节点，向RPC模块返回调用结果。9.一种微服务RPC自适应调度设备，其特征在于，所述设备包括处理器以及存储器：所述存储器用于存储程序代码，并将所述程序代码传输给所述处理器；所述处理器用于根据所述程序代码中的指令执行权利要求1-6任一项所述的微服务RPC自适应调度方法。10.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质用于存储程序代码，所述程序代码用于执行权利要求1-6任一项所述的微服务RPC自适应调度方法。
说明书desc
技术领域本申请涉及云计算微服务技术领域，尤其涉及一种微服务RPC自适应调度方法及相关装置。背景技术微服务架构是一项在云中部署应用和服务的新技术。随着微服务架构的流行，越来越多的开发者开始接触和学习微服务架构。在微服务架构中，通信、调度服务是较为关键的一环。因此，微服务架构中关于通信服务的开发是值得关注的重点问题。远程过程调用是一种常用的服务间通讯方式，其在分布式系统中的系统环境建设和应用程序设计中有着广泛应用。通常的远程过程调用服务会包含一个公共的注册中心，服务提供者在注册中心中注册服务，服务调用者通过注册中心获取到可提供服务的服务提供者列表，再依据一定的路由来选择实际调用的服务提供者以完成调用。现有的远程过程调用底层通信方式由调用执行用户编码时指定或通过配置方式固化在特定业务场景下，无法根据服务数据本身固有属性选择合适的底层通信方式，且在底层通信方式层面上对用户非透明。并且现有微服务框架负载均衡准则，多采用根据预设权重比例进行按比重分发请求的策略或基于时间间隔的心跳、负载信息上送进行基于CPU占用率的均衡切换，容易引起负载信息上送频繁占用系统资源、负载信息空窗期负载均衡调度不能平滑切换，同时无法对调用服务的优先级意图进行有效判断的问题。发明内容本申请提供了一种微服务RPC自适应调度方法及相关装置，用于解决现有技术无法根据服务数据本身固有属性选择合适的底层通信方式、且调用过程的优先级指定相对固化，无法高效地协调有限的可调用资源的技术问题。有鉴于此，本申请第一方面提供了一种微服务RPC自适应调度方法，应用于由RPC模块、RPC Proxy模块、RPC服务资源池构成的RPC自适应调度系统，所述方法包括：当RPC模块运行时，根据待调用数据的类型选取对应的预设通信方式，对所述待调用数据的头部进行染色处理和并对所述待调用数据封包序列化操作后，发送至RPC Proxy模块；RPC Proxy模块响应RPC模块的请求，根据请求的优先级权重设置所述待调用数据在待发送队列的位置，并根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新；RPC Proxy模块判断RPC服务是否为运行状态，若是，执行步骤S1，否则，向RPC模块返回无可用服务的信息；S1、判断宿主负载信息的时间戳与当前时间戳的差值是否越限，若是，通过马尔可夫过程对负载信息进行预测，并通过PCA对负载信息进行降维得到负载权重因子，否则，通过PCA对负载信息进行降维得到负载权重因子；S2、对负载权重因子进行排序，并选择最优的负载权重因子设置RPC服务路由信息；S3、基于所述待调用数据在待发送队列的位置，根据所述RPC服务路由信息调用RPC服务资源池内的资源节点，并根据待调用数据优先级权重向RPC模块返回调用结果。可选地，还包括：当RPC模块的请求为抢占优先级请求，且未获得资源节点时，RPC Proxy模块挂起第一请求对应的调用业务，所述第一请求的优先级权重低于所述抢占优先级请求的优先级权重；并根据所述RPC服务路由信息调用RPC服务资源池内的资源节点，向RPC模块返回调用结果。可选地，还包括：RPC模块接收RPC Proxy模块返回的所述调用结果，对所述调用结果进行反序列化解包操作。可选地，所述通过PCA对负载信息进行降维得到负载权重因子，具体包括：根据负载信息构建n行m列的矩阵，n为负载信息的维数，m为负载信息的条数；将所述矩阵进线零均值化后，求解得到协方差矩阵；求解所述协方差矩阵的特征值及对应的特征向量；将所述特征向量按对应特征值的大小从上到下按行排列成第一矩阵，并取前k行组成第二矩阵，得到负载权重因子，n、m、k均为正整数。可选地，所述根据待调用数据的类型选取对应的预设通信方式，具体包括：所述待调用数据的类型包括：可靠数据、非可靠数据、流数据、时间敏感数据，其中，所述可靠数据对应的预设通信方式为TCP，所述非可靠数据对应的预设通信方式为UDP，所述流数据对应的预设通信方式为QUIC，所述时间敏感数据的预设通信方式为KCP；并设置优先通信方式为http，从而构建待调用数据与通信方式的对应关系，使得RPC模块基于对应关系根据待调用数据的类型选取对应的通信方式。可选地，所述根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新，具体包括：设所述请求优先权重由抢占优先级权重和消息阻塞因子权重构成；基于消息阻塞因子权重计算公式，对所述消息阻塞因子权重进行更新，从而对所述请求优先权重进行更新；其中，所述消息阻塞因子权重计算公式为：Q＝ΔtnB；式中，Q为低16bit阻塞权重因子，Δtn为消息阻塞时间间隔数目，B为权重算子，定义为arctan*65535*2/π，其中δ为消息阻塞因子系数，X为任意输入参数。本申请第二方面提供一种微服务RPC自适应调度系统，所述系统包括：RPC模块，用于在运行时根据待调用数据的类型选取对应的预设通信方式，对所述待调用数据的头部进行染色处理和并对所述待调用数据封包序列化操作后，发送至RPCProxy模块；RPC Proxy模块，用于模块响应RPC模块的请求，根据请求的优先级权重设置所述待调用数据在待发送队列的位置，并根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新；判断RPC服务是否为运行状态，若是，执行步骤S1，否则，向RPC模块返回无可用服务的信息；S1、判断宿主负载信息的时间戳与当前时间戳的差值是否越限，若是，通过马尔可夫过程对负载信息进行预测，并通过PCA对负载信息进行降维得到负载权重因子，否则，通过PCA对负载信息进行降维得到负载权重因子；S2、对负载权重因子进行排序，并选择最优的负载权重因子设置RPC服务路由信息；S3、基于所述待调用数据在待发送队列的位置，根据所述RPC服务路由信息调用RPC服务资源池内的资源节点，并根据待调用数据优先级权重向RPC模块返回调用结果。可选地，RPC Proxy模块还用于：当RPC模块的请求为抢占优先级请求，且未获得资源节点时，挂起第一请求对应的调用业务，所述第一请求的优先级权重低于所述抢占优先级请求的优先级权重；并根据所述RPC服务路由信息调用RPC服务资源池内的资源节点，向RPC模块返回调用结果。本申请第三方面提供一种微服务RPC自适应调度设备，所述设备包括处理器以及存储器：所述存储器用于存储程序代码，并将所述程序代码传输给所述处理器；所述处理器用于根据所述程序代码中的指令，执行如上述第一方面所述的微服务RPC自适应调度方法的步骤。本申请第四方面提供一种计算机可读存储介质，所述计算机可读存储介质用于存储程序代码，所述程序代码用于执行上述第一方面所述的微服务RPC自适应调度方法。从以上技术方案可以看出，本申请具有以下优点：1、用户接口进行RPC调用过程中，当RPC模块运行时内部且在用户未强制指定通信方式的前提下，隐藏了根据用户输入数据的固有特征，自适应地选择合适的底层数据传输方式并对交互数据相应字段进行染色处理细节，过程较传统方式更加透明；2、在请求分发的优先级处理上，由于数据是发送至RPC Proxy模块进行统一处理的，较传统方式用户层无需关心优先级分发处理及负载均衡资源节点的选择指定细节。且由于采用了抢占式优先级及非抢占式优先级相结合的统一判断准则简化了依赖于请求优先级的的插入、排序操作及优先级处理难度，使得RPC Proxy模块实现基于优先级权重分发的时间复杂度降低；3、高资源负载下抢占式优先级请求资源分配的自适应调度策略，能够自适应的根据整个系统内资源占用情况动态调控各任务的运行状态实现抢占式优先处理的及时性与可操作性，对系统内抢占优先级高的任务优先抢占资源提供了自适应策略保障；4、基于马尔可夫过程与PCA相结合的负载因子方法能够高效的对资源池进行负载排序，对过期的负载信息进行当前负载信息预测，进而提高微服务框架下负载均衡的公平性的前提下降低由交互资源池内各资源节点负载信息带来的框架整体性能损耗。相较于传统的基于权重比例进行按比重分发请求的分发策略更能体现资源节点负载均衡的公平性；较于CPU占用率的均衡切换方式，由于负载强度不仅仅体现在CPU占用率上，判据更加充分更能体现资源节点真实的负载情况。由于采用了负载因子方法，可进一步减低资源节点负载信息频繁上报带来的系统性能损耗；对用户层根据可执行资源节点列表信息自行去选择执行资源节点的做法，本方法对用户层透明、隐藏了选择细节降低了用户开发难度。从而解决了现有技术无法根据服务数据本身固有属性选择合适的底层通信方式、且调用过程的优先级指定相对固化，无法高效地协调有限的可调用资源的技术问题。附图说明图1为本申请实施例中提供的一种微服务RPC自适应调度方法实施例一的流程示意图；图2为本申请实施例中提供的一种微服务RPC自适应调度方法实施例二的流程示意图；图3为本申请实施例中提供的一种微服务RPC自适应调度系统实施例的结构示意图。具体实施方式为了使本技术领域的人员更好地理解本申请方案，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。术语解释：RPC：远程过程调用，它是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。也就是说两台服务器A，B，一个应用部署在A服务器上，想要调用B服务器上应用提供的方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。RPC Proxy：远程过程调用代理。负载均衡：将负载进行平衡、分摊到多个操作单元上进行运行。构建在原有网络结构之上，它提供了一种透明且廉价有效的方法扩展服务器和网络设备的带宽、加强网络数据处理能力、增加吞吐量、提高网络的可用性和灵活性。需要说明的是，RPC代理模块通过分布式部署，部署于系统资源池内的多个资源节点上，并通过控制中心控制整个微服务调用行为，每个微服务节点的数据收发均通过数据代理模块完成，微服务代码只与数据代理模块沟通。控制中心为中心控制节点，负责调控所有微服务节点，实现服务注册、配置下发、访问权限配置，拥有控制数据代理模块的权限，控制中心拥有从数据代理模块收集任何数据的能力，从而根据数据代理模块的运行状态详细感知整个微服务框架网络的服务运行状况。RPC代理模块对上层应用提供统一的消息收发和服务查询接口，负责实现微服务环境中的服务发现、流量控制和通信负载均衡访问，并接受控制中心的控制，提供流量监控、请求追踪的功能。请参阅图1，本申请实施例一提供的一种微服务RPC自适应调度方法，应用于由RPC模块、RPC Proxy模块、RPC服务资源池构成的RPC自适应调度系统，如图3所示，方法包括：步骤101、当RPC模块运行时，根据待调用数据的类型选取对应的预设通信方式，对待调用数据的头部进行染色处理和并对待调用数据封包序列化操作后，发送至RPC Proxy模块。需要说明的是，RPC模块运行时支持同步模式及异步模式，待调用数据类型包括：可靠、非可靠、流、短报文等，本申请通过实时性自适应选择底层通信方式。业务RPC调用过程依托于RPC模块运行时根据业务、RPC调用传输的参数，对RPC待调用数据的头部进行染色处理；并且默认自适应优先选择策略是http、可靠采用TCP、非可靠采用UDP、流模式采用QUIC、时间敏感数据采用KCP。染色处理完成后对数据进行封包序列化操作，将数据发送到RPC Proxy模块。步骤102、RPC Proxy模块响应RPC模块的请求，根据请求的优先级权重设置待调用数据在待发送队列的位置，并根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新。需要说明的是，RPC Proxy模块接收到业务RPC模块的请求后，根据数据的请求、响应属性更新相关状态机状态，将待调用数据按照请求优先级权重插入请求待发送队列中。具体的，RPC Proxy模块响应RPC模块服务请求，RPC Proxy模块接收到RPC模块服务请求后将该服务请求根据请求中优先级权重插入请求队列中。为加速RPC Proxy内请求优先级操作，定义优先级权重由一个32Bit字段实现，该字段高16bit为抢占优先级权重，低16bit为消息阻塞因子权重。RPC Proxy内维护一个基于权重字段的有序队列。定义算子B为消息阻塞因子权重算子，该算子应具备如下特性要求：单调递增且对任意输入参数X其输出范围为算子B定义为arctan*65535*2/π，其中δ为消息阻塞因子系数；Δtn为消息阻塞时间间隔数目，Q＝ΔtnB得到的Q，Q为低16bit阻塞权重因子，进而得到32Bit的远程过程调用数据优先级。RPC Proxy模块在每个更新消息优先级时间窗内更新消息数据优先级，进而保证消息数据优先级高的数据拥有更高的数据发送权。步骤103、RPC Proxy模块判断RPC服务是否为运行状态，若是，执行步骤104，否则，向RPC模块返回无可用服务的信息。需要说明的是，RPC Proxy模块与控制中心进行交互，首先判断RPC服务是否可用，如果不可用则返回无可用服务，如果可以用则执行步骤104。步骤104、判断宿主负载信息的时间戳与当前时间戳的差值是否越限，若是，通过马尔可夫过程对负载信息进行预测，并通过PCA对负载信息进行降维得到负载权重因子，否则，通过PCA对负载信息进行降维得到负载权重因子。需要说明的是，如果可用则判断RPC服务运行时，宿主负载信息时间戳与当前时间戳差值是否越限。如负载信息为过期数据，则首先对负载信息通过马尔可夫过程进行预测。由于服务器负载数据近似于一个随机过程且具有马尔可夫性，本申请采取马尔可夫方法进行服务器运行载负载预测。然后考虑到负载信息的多维性，不利于快速的调度排序，本申请提出利用主成份分析降维的方式提取有价值的降维后信息量，方便后续统一排序处理。对负载信息通过PCA进行降维得到负载权重因子，并选取最优负载权重因子。降维步骤如下：设有m条n维数据。1)将原始数据按列组成n行m列矩阵X。2)将X的每一行进行零均值化，即减去这一行的均值。3)求出协方差矩阵。4)求出协方差矩阵的特征值及对应的特征向量r。5)将特征向量按对应特征值大小从上到下按行排列成矩阵，取前k行组成矩阵P。6)即为降维到1维后的数据，即为负载权重因子。如果宿主负载信息的时间戳与当前时间戳的差值没有越限，则直接通过PCA对负载信息进行降维得到负载权重因子。步骤105、对负载权重因子进行排序，并选择最优的负载权重因子设置RPC服务路由信息。需要说明的是，通过步骤104得到负载权重因子，步骤105根据负载因子排序，得到最优负载权重因子，该负载权重因子满足预设条件情况下得到最优RPC服务所在路由信息。步骤106、基于待调用数据在待发送队列的位置，根据RPC服务路由信息调用RPC服务资源池内的资源节点，并根据待调用数据优先级权重向RPC模块返回调用结果。最后，RPC Proxy模块根据请求待发送队列中待调用数据的请求优先级，以及RPC服务路由信息，选择PRC服务资源池内某一个资源节点。在得到资源节点后，根据请求资源节点的优先级权重，向返回RPC模块返回调用结果。以上为本申请实施例中提供的一种微服务RPC自适应调度方法实施例一，以下为本申请实施例中提供的一种微服务RPC自适应调度方法实施例二。请参阅图2，本申请实施例二提供的一种微服务RPC自适应调度方法，应用于由RPC模块、RPC Proxy模块、RPC服务资源池构成的RPC自适应调度系统，方法包括：步骤201、当RPC模块运行时，根据待调用数据的类型选取对应的预设通信方式，对待调用数据的头部进行染色处理和并对待调用数据封包序列化操作后，发送至RPC Proxy模块。步骤202、RPC Proxy模块响应RPC模块的请求，根据请求的优先级权重设置待调用数据在待发送队列的位置，并根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新。步骤203、RPC Proxy模块判断RPC服务是否为运行状态，若是，执行步骤204，否则，向RPC模块返回无可用服务的信息。步骤204、判断宿主负载信息的时间戳与当前时间戳的差值是否越限，若是，通过马尔可夫过程对负载信息进行预测，并通过PCA对负载信息进行降维得到负载权重因子，否则，通过PCA对负载信息进行降维得到负载权重因子。步骤205、对负载权重因子进行排序，并选择最优的负载权重因子设置RPC服务路由信息。步骤206、基于待调用数据在待发送队列的位置，根据RPC服务路由信息调用RPC服务资源池内的资源节点，并根据待调用数据优先级权重向RPC模块返回调用结果。需要说明的是，步骤201-206与实施例一步骤101-106描述相同，请参见步骤101-106描述，在此不再赘述。步骤207、当RPC模块的请求为抢占优先级请求，且未获得资源节点时，RPC Proxy模块挂起第一请求对应的调用业务，第一请求的优先级权重低于抢占优先级请求的优先级权重。步骤208、并根据RPC服务路由信息调用RPC服务资源池内的资源节点，向RPC模块返回调用结果。对于步骤207-208需要说明的是，RPC Proxy模块针对抢占优先级请求，未能根据资源节点负载权重享有消息分发权情况下，RPC Proxy模块根据内部保存的各请求优先级、及其享有资源节点的路由信息，获取资源节点信息。该资源节点上存在更低优先级的请求处于运行态、且各处于运行态的请求优先级均值最底。通过挂起该资源节点上低优先级业务处理逻辑，并分发该请求任务到资源节点运行的方式，实现抢占式任务请求下有限资源的自适应调度方法策略。步骤209、RPC模块接收RPC Proxy模块返回的调用结果，对调用结果进行反序列化解包操作。需要说明的是，RPC运行时等待RPC Proxy结果响应后进行反序列化解包操作。以上为本申请实施例中提供的一种微服务RPC自适应调度方法实施例二，以下为本申请实施例中提供的一种微服务RPC自适应调度系统实施例。请参阅图3，本申请实施例中提供的一种微服务RPC自适应调度系统，包括：RPC模块，用于在运行时根据待调用数据的类型选取对应的预设通信方式，对待调用数据的头部进行染色处理和并对待调用数据封包序列化操作后，发送至RPC Proxy模块；RPC Proxy模块，用于模块响应RPC模块的请求，根据请求的优先级权重设置待调用数据在待发送队列的位置，并根据预设的权重更新时间间隔对待发送队列中调用数据的请求优先级权重进行更新；判断RPC服务是否为运行状态，若是，执行步骤S1，否则，向RPC模块返回无可用服务的信息；S1、判断宿主负载信息的时间戳与当前时间戳的差值是否越限，若是，通过马尔可夫过程对负载信息进行预测，并通过PCA对负载信息进行降维得到负载权重因子，否则，通过PCA对负载信息进行降维得到负载权重因子；S2、对负载权重因子进行排序，并选择最优的负载权重因子设置RPC服务路由信息；S3、基于待调用数据在待发送队列的位置，根据RPC服务路由信息调用RPC服务资源池内的资源节点，并根据待调用数据优先级权重向RPC模块返回调用结果。进一步地，本申请实施例还提供了一种微服务RPC自适应调度设备，所述设备包括处理器以及存储器：所述存储器用于存储程序代码，并将所述程序代码传输给所述处理器；所述处理器用于根据所述程序代码中的指令执行上述方法实施例所述的微服务RPC自适应调度方法。进一步地，本申请实施例还提供了一种计算机可读存储介质，所述计算机可读存储介质用于存储程序代码，所述程序代码用于执行上述方法实施例所述的微服务RPC自适应调度方法。所属领域的技术人员可以清楚地了解到，为描述的方便和简洁，上述描述的系统，装置和单元的具体工作过程，可以参考前述方法实施例中的对应过程，在此不再赘述。本申请的说明书及上述附图中的术语“第一”、“第二”、“第三”、“第四”等是用于区别类似的对象，而不必用于描述特定的顺序或先后次序。应该理解这样使用的数据在适当情况下可以互换，以便这里描述的本申请的实施例例如能够以除了在这里图示或描述的那些以外的顺序实施。此外，术语“包括”和“具有”以及他们的任何变形，意图在于覆盖不排他的包含，例如，包含了一系列步骤或单元的过程、方法、系统、产品或设备不必限于清楚地列出的那些步骤或单元，而是可包括没有清楚地列出的或对于这些过程、方法、产品或设备固有的其它步骤或单元。应当理解，在本申请中，“至少一个”是指一个或者多个，“多个”是指两个或两个以上。“和/或”，用于描述关联对象的关联关系，表示可以存在三种关系，例如，“A和/或B”可以表示：只存在A，只存在B以及同时存在A和B三种情况，其中A，B可以是单数或者复数。字符“/”一般表示前后关联对象是一种“或”的关系。“以下至少一项”或其类似表达，是指这些项中的任意组合，包括单项或复数项的任意组合。例如，a，b或c中的至少一项，可以表示：a，b，c，“a和b”，“a和c”，“b和c”，或“a和b和c”，其中a，b，c可以是单个，也可以是多个。在本申请所提供的几个实施例中，应该理解到，所揭露的系统，装置和方法，可以通过其它的方式实现。例如，以上所描述的装置实施例仅仅是示意性的，例如，所述单元的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，例如多个单元或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另一点，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些接口，装置或单元的间接耦合或通信连接，可以是电性，机械或其它的形式。所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本申请各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。上述集成的单元既可以采用硬件的形式实现，也可以采用软件功能单元的形式实现。所述集成的单元如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读取存储介质中。基于这样的理解，本申请的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的全部或部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台计算机设备执行本申请各个实施例所述方法的全部或部分步骤。而前述的存储介质包括：U盘、移动硬盘、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。以上所述，以上实施例仅用以说明本申请的技术方案，而非对其限制；尽管参照前述实施例对本申请进行了详细的说明，本领域的普通技术人员应当理解：其依然可以对前述各实施例所记载的技术方案进行修改，或者对其中部分技术特征进行等同替换；而这些修改或者替换，并不使相应技术方案的本质脱离本申请各实施例技术方案的精神和范围。
