标题title
多窗口管理方法、装置、电子装置和存储介质
摘要abst
本申请涉及一种多窗口管理方法、装置、电子装置和存储介质，其中，该方法包括：在目标平台中的桌面应用程序启动时，生成与桌面应用程序对应的主进程；利用主进程创建第一浏览窗口，生成与第一浏览窗口对应的第一子进程；主进程与对应的第一子进程之间通信连接；从云服务器中获取窗口文件；通过主进程和第一子进程，根据窗口文件对第一浏览窗口进行管理。通过本申请，解决了通过TAB标签对每个整体窗口单独管理的方式，不仅增加管理窗口的工作量，而且也降低管理窗口的效率，实现了通过进程和窗口文件来管理窗口，从而降低管理窗口的工作量，提高管理窗口的效率。
权利要求书clms
1.一种多窗口管理方法，其特征在于，包括：在目标平台中的桌面应用程序启动时，生成与所述桌面应用程序对应的主进程；利用所述主进程创建第一浏览窗口，生成与所述第一浏览窗口对应的第一子进程；所述主进程与对应的所述第一子进程之间通信连接；从云服务器中获取窗口文件；通过所述主进程和所述第一子进程，根据所述窗口文件对所述第一浏览窗口进行管理。2.根据权利要求1所述的多窗口管理方法，其特征在于，所述方法还包括：创建跨平台的所述桌面应用程序，并在创建跨平台的所述桌面应用程序时，利用API函数对所述目标平台的差异性进行封装，得到统一的功能接口。3.根据权利要求2所述的多窗口管理方法，其特征在于，所述从云服务器中获取窗口文件，包括：基于所述功能接口，从所述云服务器中获取所述窗口文件。4.根据权利要求1所述的多窗口管理方法，其特征在于，所述通过所述主进程和所述第一子进程，根据所述窗口文件对所述第一浏览窗口进行管理，包括：对所述窗口文件进行解析；若所述窗口文件中的窗口布局文件的数量为一个，且所述窗口文件中的窗口内容文件的数量为一个；则通过所述主进程将所述窗口文件中的窗口内容文件发送至所述第一子进程，通过所述第一子进程根据所述窗口内容文件管理所述第一浏览窗口中加载的页面内容。5.根据权利要求4所述的多窗口管理方法，其特征在于，所述方法还包括：若所述窗口文件中的窗口布局文件的数量为多个，且每个所述窗口文件中的窗口内容文件的数量与所述窗口布局文件的数量一样；则创建第二浏览窗口，生成与所述第二浏览窗口对应的第二子进程，并根据所述窗口布局文件调整所述第一浏览窗口和第二浏览窗口的窗口位置；通过所述主进程将所述窗口文件中的窗口内容文件分发至对应的第一子进程和第二子进程；通过所述第一子进程根据所述窗口内容文件管理所述第一浏览窗口中加载的页面内容；通过所述第二子进程根据所述窗口内容文件管理所述第二浏览窗口中加载的页面内容。6.根据权利要求4所述的多窗口管理方法，其特征在于，所述方法还包括：若所述窗口文件中的窗口布局文件的数量为一个，且所述窗口文件中的窗口内容文件的数量为多个；则通过所述主进程将所述窗口内容文件发送至所述第一子进程，通过所述第一子进程根据所述窗口内容文件按所述窗口布局文件管理所述第一浏览窗口中加载的页面内容。7.根据权利要求1所述的多窗口管理方法，其特征在于，所述方法还包括：通过所述主进程实时监听所述目标平台的网络状态；若监听到所述网络状态为断网状态，则通过所述主进程将断网消息发送至所述第一子进程，通过所述第一子进程根据预设的素材文件管理所述第一浏览窗口中加载的页面内容；并在监听到所述网络状态为断网恢复状态，则通过所述主进程将断网恢复消息发送至所述第一子进程，通过所述第一子进程根据所述窗口文件管理所述第一浏览窗口中加载的页面内容。8.一种多窗口管理装置，其特征在于，包括：启动模块、创建模块、获取模块以及管理模块；所述启动模块，用于在目标平台中的桌面应用程序启动时，生成与所述桌面应用程序对应的主进程；所述创建模块，用于利用所述主进程创建第一浏览窗口，生成与所述第一浏览窗口对应的第一子进程；所述主进程与对应的所述第一子进程之间通信连接；所述获取模块，用于从云服务器中获取窗口文件；所述管理模块，用于通过所述主进程和所述第一子进程，根据所述窗口文件对所述第一浏览窗口进行管理。9.一种电子装置，包括存储器和处理器，其特征在于，所述存储器中存储有计算机程序，所述处理器被设置为运行所述计算机程序以执行权利要求1至7中任一项所述的多窗口管理方法的步骤。10.一种计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现权利要求1至7中任一项所述的多窗口管理方法的步骤。
说明书desc
技术领域本申请涉及计算机技术领域，特别是涉及多窗口管理方法、装置、电子装置和存储介质。背景技术计算机应用的浏览器作为用户和计算机的接口，接收键盘或鼠标的命令，显示网页服务器或者文件系统的HTML文件内容，并让用户与这些文件内容交互。浏览器通过HTTP协议与服务器交互并获取由URL指定的网页，文件格式通常为HTML，并由MIME在HTTP协议中指明。浏览器除了支持除HTML格式外，还支持例如JPEG、PNG、GIF等图像格式，并且能够扩展支持众多的插件。传统的浏览器中，一般通过TAB标签的方式来实现管理各个窗口的显示。由于移动终端显示设备的物理尺寸限制，移动终端的浏览器一次仅展示一个窗口，一次仅针对一个窗口进行操作管理，比如关闭或者打开该窗口等。这种通过TAB标签对每个整体窗口单独管理的方式，不仅增加管理窗口的工作量，而且也降低管理窗口的效率。针对相关技术中通过TAB标签对每个整体窗口单独管理的方式，不仅增加管理窗口的工作量，而且也降低管理窗口的效率，目前还没有提出有效的解决方案。发明内容在本实施例中提供了一种多窗口管理方法、装置、电子装置和存储介质，以解决相关技术中通过TAB标签对每个整体窗口单独管理的方式，不仅增加管理窗口的工作量，而且也降低管理窗口的效率的问题。第一个方面，在本实施例中提供了一种多窗口管理方法，包括：在目标平台中的桌面应用程序启动时，生成与所述桌面应用程序对应的主进程；利用所述主进程创建第一浏览窗口，生成与所述第一浏览窗口对应的第一子进程；所述主进程与对应的所述第一子进程之间通信连接；从云服务器中获取窗口文件；通过所述主进程和所述第一子进程，根据所述窗口文件对所述第一浏览窗口进行管理。在其中的一些实施例中，所述方法还包括：创建跨平台的所述桌面应用程序，并在创建跨平台的所述桌面应用程序时，利用API函数对所述目标平台的差异性进行封装，得到统一的功能接口。在其中的一些实施例中，所述从云服务器中获取窗口文件，包括：基于所述功能接口，从所述云服务器中获取所述窗口文件。在其中的一些实施例中，所述通过所述主进程和所述第一子进程，根据所述窗口文件对所述第一浏览窗口进行管理，包括：对所述窗口文件进行解析；若所述窗口文件中的窗口布局文件的数量为一个，且所述窗口文件中的窗口内容文件的数量为一个；则通过所述主进程将所述窗口文件中的窗口内容文件发送至所述第一子进程，通过所述第一子进程根据所述窗口内容文件管理所述第一浏览窗口中加载的页面内容。在其中的一些实施例中，所述方法还包括：若所述窗口文件中的窗口布局文件的数量为多个，且每个所述窗口文件中的窗口内容文件的数量与所述窗口布局文件的数量一样；则创建第二浏览窗口，生成与所述第二浏览窗口对应的第二子进程，并根据所述窗口布局文件调整所述第一浏览窗口和第二浏览窗口的窗口位置；通过所述主进程将所述窗口文件中的窗口内容文件分发至对应的第一子进程和第二子进程；通过所述第一子进程根据所述窗口内容文件管理所述第一浏览窗口中加载的页面内容；通过所述第二子进程根据所述窗口内容文件管理所述第二浏览窗口中加载的页面内容。在其中的一些实施例中，所述方法还包括：若所述窗口文件中的窗口布局文件的数量为一个，且所述窗口文件中的窗口内容文件的数量为多个；则通过所述主进程将所述窗口内容文件发送至所述第一子进程，通过所述第一子进程根据所述窗口内容文件按所述窗口布局文件管理所述第一浏览窗口中加载的页面内容。在其中的一些实施例中，所述方法还包括：通过所述主进程实时监听所述目标平台的网络状态；若监听到所述网络状态为断网状态，则通过所述主进程将断网消息发送至所述第一子进程，通过所述第一子进程根据预设的素材文件管理所述第一浏览窗口中加载的页面内容；并在监听到所述网络状态为断网恢复状态，则通过所述主进程将断网恢复消息发送至所述第一子进程，通过所述第一子进程根据所述窗口文件管理所述第一浏览窗口中加载的页面内容。第二个方面，在本实施例中提供了一种多窗口管理装置，包括：启动模块、创建模块、获取模块以及管理模块；所述启动模块，用于在目标平台中的桌面应用程序启动时，生成与所述桌面应用程序对应的主进程；所述创建模块，用于利用所述主进程创建第一浏览窗口，生成与所述第一浏览窗口对应的第一子进程；所述主进程与对应的所述第一子进程之间通信连接；所述获取模块，用于从云服务器中获取窗口文件；所述管理模块，用于通过所述主进程和所述第一子进程，根据所述窗口文件对所述第一浏览窗口进行管理。第三个方面，在本实施例中提供了一种电子装置，包括存储器、处理器以及存储在所述存储器上并可在所述处理器上运行的计算机程序，所述处理器执行所述计算机程序时实现上述第一个方面所述的多窗口管理方法。第四个方面，在本实施例中提供了一种存储介质，其上存储有计算机程序，该程序被处理器执行时实现上述第一个方面所述的多窗口管理方法。与相关技术相比，在本实施例中提供的多窗口管理方法、装置、电子装置和存储介质，通过在目标平台中的桌面应用程序启动时，生成与桌面应用程序对应的主进程；利用主进程创建第一浏览窗口，生成与第一浏览窗口对应的第一子进程；主进程与对应的第一子进程之间通信连接；从云服务器中获取窗口文件；通过主进程和第一子进程，根据窗口文件对第一浏览窗口进行管理，解决了通过TAB标签对每个整体窗口单独管理的方式，不仅增加管理窗口的工作量，而且也降低管理窗口的效率，实现了通过进程和窗口文件来管理窗口，从而降低管理窗口的工作量，提高管理窗口的效率。本申请的一个或多个实施例的细节在以下附图和描述中提出，以使本申请的其他特征、目的和优点更加简明易懂。附图说明此处所说明的附图用来提供对本申请的进一步理解，构成本申请的一部分，本申请的示意性实施例及其说明用于解释本申请，并不构成对本申请的不当限定。在附图中：图1是本申请一实施例提供的多窗口管理系统的结构框图；图2是本申请一实施例提供的多窗口管理方法的流程图；图3是本申请一实施例提供的多窗口管理装置的结构框图。图中：10、屏设备；20、云服务器；201、启动模块；202、创建模块；203、获取模块；204、管理模块。具体实施方式为更清楚地理解本申请的目的、技术方案和优点，下面结合附图和实施例，对本申请进行了描述和说明。除另作定义外，本申请所涉及的技术术语或者科学术语应具有本申请所属技术领域具备一般技能的人所理解的一般含义。在本申请中的“一”、“一个”、“一种”、“该”、“这些”等类似的词并不表示数量上的限制，它们可以是单数或者复数。在本申请中所涉及的术语“包括”、“包含”、“具有”及其任何变体，其目的是涵盖不排他的包含；例如，包含一系列步骤或模块的过程、方法和系统、产品或设备并未限定于列出的步骤或模块，而可包括未列出的步骤或模块，或者可包括这些过程、方法、产品或设备固有的其他步骤或模块。在本申请中所涉及的“连接”、“相连”、“耦接”等类似的词语并不限定于物理的或机械连接，而可以包括电气连接，无论是直接连接还是间接连接。在本申请中所涉及的“多个”是指两个或两个以上。“和/或”描述关联对象的关联关系，表示可以存在三种关系，例如，“A和/或B”可以表示：单独存在A，同时存在A和B，单独存在B这三种情况。通常情况下，字符“/”表示前后关联的对象是一种“或”的关系。在本申请中所涉及的术语“第一”、“第二”、“第三”等，只是对相似对象进行区分，并不代表针对对象的特定排序。请参照图1，在本实施例中给出一种多窗口管理系统示例图。该多窗口管理系统包括屏设备10和云服务器20；云服务器20与屏设备10连接；屏设备10设置购物中心或商场中。其中，屏设备10可以设置在购物中心或商场的电梯旁边、入口处、出口处等方便用户使用的地方。屏设备10指的是带有屏幕的设备；包括但不限于导视设备、广告投放设备、引导设备等。其中，购物中心也可以是商场、社区等其他购物的活动中心。其中，云服务器20用于传输窗口文件给屏设备10，以使屏设备10根据窗口文件管理窗口。在本实施例中提供了一种多窗口管理方法，图2是本实施例的多窗口管理方法的流程图，如图2所示，该流程包括如下步骤：步骤S201，在目标平台中的桌面应用程序启动时，生成与桌面应用程序对应的主进程；步骤S202，利用主进程创建第一浏览窗口，生成与第一浏览窗口对应的第一子进程；主进程与对应的第一子进程之间通信连接；步骤S203，从云服务器中获取窗口文件；步骤S204，通过主进程和第一子进程，根据窗口文件对第一浏览窗口进行管理。需要说明的是，目标平台指的是桌面应用程序所在的安装平台，如windows、linux、macos或者android的平台；也就是说桌面应用程序可以安装在windows、linux、macos或者android的平台上。桌面应用程序在启动时，可以与购物中心中的屏设备做激活绑定，以方便桌面应用程序的使用管理。并且通过桌面应用程序可以跨平台安装使用，也能够使本申请的方法直接适用于不同平台，达到跨平台的目的。桌面应用程序与主进程一一对应，一个桌面应用程序对应一个主进程。在桌面应用程序启动时，目标平台会默认生成与桌面应用程序对应的主进程。浏览窗口是由主程序调用chromium来创建和启动。第一浏览窗口是默认创建的浏览窗口，其与第一子进程对应，一般每个第一浏览窗口对应一个子进程。也就是说第一浏览窗口可以是一个，也可以是多个。主进程与对应的第一子进程之间通信连接，主进程和第一子进程或第二子进程之间能够相互通信；主进程管理其创建的每个子进程，而子进程之间相互隔离，子进程需要通过主进程，将数据传输至其他子进程。比如：将云服务器获取的窗口文件通过主进程传输至第一子进程。通过上述步骤，利用在桌面应用程序启动，默认自动生成的主进程来创建第一浏览窗口，再生成与第一浏览窗口对应的第一子进程；以通过进程和窗口文件来管理窗口，从而降低管理窗口的工作量，提高管理窗口的效率；以解决了通过TAB标签对每个整体窗口单独管理的方式，不仅增加管理窗口的工作量，而且也降低管理窗口的效率。在其中的一些实施例中，多窗口管理方法还包括以下步骤：创建跨平台的桌面应用程序，并在创建跨平台的桌面应用程序时，利用API函数对目标平台的差异性进行封装，得到统一的功能接口。具体的，桌面应用程序是使用JavaScript、HTML以及CSS构建，利用API函数对目标平台的差异性进行封装，得到统一的功能接口。因此，能够适用于各类型的平台，达到跨平台使用的目的。比如：桌面应用程序基于开源项目Chromium开发，能够在window和liunx平台上运行；且Chromium是一个建立在WebKit之上的浏览器开源项目，android支持webview，因此，桌面应用程序也能在android平台上运行。其中，Chromium是Google开源的网页浏览器,负责解析处理JavaScript、HTML以及CSS等H5资源。其中，通过功能接口，可以从云服务器中获取窗口文件。窗口文件包括窗口布局文件和窗口内容文件；窗口布局文件指的是窗口具体布局的一些布局参数文件；每个窗口布局文件指定一个对应浏览窗口的布局参数，比如：宽、高、起点坐标等。窗口内容文件指的是对应浏览窗口中显示的内容，其数量一般与窗口布局文件相同，其与窗口布局文件关联；比如：窗口内容文件a为窗口布局文件A对应浏览窗口中显示的内容。窗口内容文件b为窗口布局文件B对应浏览窗口中显示的内容。下面根据不同窗口文件对浏览窗口的管理进行具体说明：在其中的一些实施例中，步骤S204包括以下步骤：对窗口文件进行解析；若窗口文件中的窗口布局文件的数量为一个，且窗口文件中的窗口内容文件的数量为一个；则通过主进程将窗口文件中的窗口内容文件发送至第一子进程，通过第一子进程根据窗口内容文件管理第一浏览窗口中加载的页面内容。在本实施例中，对窗口文件进行解析，可以采用解析工具对窗口文件中窗口布局文件和窗口内容文件的个数的解析。如果窗口布局文件和窗口内容文件均为一个，那么直接使用已经创建的第一子进程和第一浏览窗口；而不用再创建第二浏览窗口和第二子进程。具体的，可以直接通过主进程将窗口文件中的窗口内容文件a发送至第一子进程，通过第一子进程根据窗口内容文件a管理第一浏览窗口A中加载的页面内容；从而快速对浏览窗口进行管理，提高运行效率。在其中的一些实施例中，步骤S204，还包括以下步骤：若窗口文件中的窗口布局文件的数量为多个，且每个窗口文件中的窗口内容文件的数量与窗口布局文件的数量一样；则创建第二浏览窗口，生成与第二浏览窗口对应的第二子进程，并根据窗口布局文件调整第一浏览窗口和第二浏览窗口的窗口位置；通过主进程将窗口文件中的窗口内容文件分发至对应的第一子进程和第二子进程；通过第一子进程根据窗口内容文件管理第一浏览窗口中加载的页面内容；通过第二子进程根据窗口内容文件管理第二浏览窗口中加载的页面内容。具体的，如果窗口文件中的窗口布局文件的数量为多个，且每个窗口文件中的窗口内容文件的数量与窗口布局文件的数量一样。比如：窗口布局文件的数量为2个，那么窗口内容文件也为2个；由于已经有一个第一浏览窗口，因此，需要再利用主进程创建一个第二浏览窗口和对应的第二子进程；并根据窗口布局文件调整第一浏览窗口和第二浏览窗口的在显示平台上的窗口位置；最后将通过主进程将窗口文件中的窗口内容文件随机或按优先级分发至对应的第一子进程和第二子进程；通过第一子进程根据窗口内容文件管理第一浏览窗口中加载的页面内容；通过第二子进程根据窗口内容文件管理第二浏览窗口中加载的页面内容。比如：窗口布局文件的数量为4个，那么窗口内容文件也为4个；由于已经有一个第一浏览窗口，因此，需要再利用主进程创建三个第二浏览窗口和对应的三个第二子进程；并根据窗口布局文件调整第一浏览窗口和三个第二浏览窗口的在显示平台上的窗口位置；最后将通过主进程将窗口文件中的窗口内容文件随机或按优先级分发至对应的第一子进程和第二子进程；通过第一子进程根据窗口内容文件管理第一浏览窗口中加载的页面内容；通过第二子进程根据窗口内容文件管理第二浏览窗口中加载的页面内容。本实施例能够快速完成对多个窗口的高效管理，页面效果呈现良好。在其中的一些实施例中，步骤S204，还包括以下步骤：若窗口文件中的窗口布局文件的数量为一个，且窗口文件中的窗口内容文件的数量为多个；则通过主进程将窗口内容文件发送至第一子进程，通过第一子进程根据窗口内容文件按窗口布局文件管理第一浏览窗口中加载的页面内容。具体的，如果窗口文件中的窗口布局文件的数量为一个，且窗口内容文件的数量为多个，那么直接使用已经创建的第一子进程和第一浏览窗口；而不用再创建第二浏览窗口和第二子进程。但是需要根据窗口内容文件按窗口布局文件管理第一浏览窗口中加载的页面内容；此时，窗口布局文件对多第一浏览窗口划分成多个小的H5网页在第一浏览窗口中的位置来加载对应的窗口内容文件。在同一个浏览窗口中的H5网页之间的相互通信，可以通过子进程进行交互。比如：H5页面1通知第一子进程，第一子进程通知H5页面2，H5页面2反馈第一子进程，第一子进程反馈H5页面1。第一子进程对H5页面的消息，可以过滤，以保证不影响到其他H5页面。通过子第一进程和H5页面的通信，减少对网络的依赖，提高不同页面之间的联动。通过上述多窗口的管理，能够灵活性处理多种显示方式，能够匹配多种应用场景，而不要改变原来的管理方式，丰富页面展示。且基于主进程、子进程的相互交互来处理安全、网络等公共特性，降低开发门槛，提供联动性。且能有效提供加载的H5网页内容的准确性。在其中的一些实施例中，多窗口管理方法还包括以下步骤：通过主进程实时监听目标平台的网络状态；若监听到网络状态为断网状态，则通过主进程将断网消息发送至第一子进程，通过第一子进程根据预设的素材文件管理第一浏览窗口中加载的页面内容；并在监听到网络状态为断网恢复状态，则通过主进程将断网恢复消息发送至第一子进程，通过第一子进程根据窗口文件管理第一浏览窗口中加载的页面内容。本实施例能够监听网络状态来管理第一浏览窗口中加载的页面内容，以避免断网对第一浏览窗口中显示内容的影响。在其他实施例中，对于第二浏览窗口也是一样的，通过主进程实时监听目标平台的网络状态；若监听到网络状态为断网状态，则通过主进程将断网消息发送至第二子进程，通过第二子进程根据预设的素材文件管理第二浏览窗口中加载的页面内容；并在监听到网络状态为断网恢复状态，则通过主进程将断网恢复消息发送至第二子进程，通过第二子进程根据窗口文件管理第二浏览窗口中加载的页面内容。需要说明的是，在上述流程中或者附图的流程图中示出的步骤可以在诸如一组计算机可执行指令的计算机系统中执行，并且，虽然在流程图中示出了逻辑顺序，但是在某些情况下，可以以不同于此处的顺序执行所示出或描述的步骤。在本实施例中还提供了一种多窗口管理装置，该装置用于实现上述实施例及优选实施方式，已经进行过说明的不再赘述。以下所使用的术语“模块”、“单元”、“子单元”等可以实现预定功能的软件和/或硬件的组合。尽管在以下实施例中所描述的装置较佳地以软件来实现，但是硬件，或者软件和硬件的组合的实现也是可能并被构想的。图3是本实施例的多窗口管理装置的结构框图，如图3所示，该装置包括：启动模块201、创建模块202、获取模块203以及管理模块204；启动模块201，用于在目标平台中的桌面应用程序启动时，生成与桌面应用程序对应的主进程；创建模块202，用于利用主进程创建第一浏览窗口，生成与第一浏览窗口对应的第一子进程；主进程与对应的第一子进程之间通信连接；获取模块203，用于从云服务器中获取窗口文件；管理模块204，用于通过主进程和第一子进程，根据窗口文件对第一浏览窗口进行管理。通过上述装置，利用在桌面应用程序启动，默认自动生成的主进程来创建第一浏览窗口，再生成与第一浏览窗口对应的第一子进程；以通过进程和窗口文件来管理窗口，从而降低管理窗口的工作量，提高管理窗口的效率；以解决了通过TAB标签对每个整体窗口单独管理的方式，不仅增加管理窗口的工作量，而且也降低管理窗口的效率。在其中的一些实施例中，在图3的基础上，还包括创建封装模块；创建封装模块，用于创建跨平台的桌面应用程序，并在创建跨平台的桌面应用程序时，利用API函数对目标平台的差异性进行封装，得到统一的功能接口。在其中的一些实施例中，获取模块203，还用于基于功能接口，从云服务器中获取窗口文件。在其中的一些实施例中，管理模块204，还用于对窗口文件进行解析；若窗口文件中的窗口布局文件的数量为一个，且窗口文件中的窗口内容文件的数量为一个；则通过主进程将窗口文件中的窗口内容文件发送至第一子进程，通过第一子进程根据窗口内容文件管理第一浏览窗口中加载的页面内容；若窗口文件中的窗口布局文件的数量为多个，且每个窗口文件中的窗口内容文件的数量与窗口布局文件的数量一样；则创建第二浏览窗口，生成与第二浏览窗口对应的第二子进程，并根据窗口布局文件调整第一浏览窗口和第二浏览窗口的窗口位置；通过主进程将窗口文件中的窗口内容文件分发至对应的第一子进程和第二子进程；通过第一子进程根据窗口内容文件管理第一浏览窗口中加载的页面内容；通过第二子进程根据窗口内容文件管理第二浏览窗口中加载的页面内容；若窗口文件中的窗口布局文件的数量为一个，且窗口文件中的窗口内容文件的数量为多个；则通过主进程将窗口内容文件发送至第一子进程，通过第一子进程根据窗口内容文件按窗口布局文件管理第一浏览窗口中加载的页面内容。在其中的一些实施例中，在图3的基础上，监听模块；监听模块，用于通过主进程实时监听目标平台的网络状态；若监听到网络状态为断网状态，则通过主进程将断网消息发送至第一子进程，通过第一子进程根据预设的素材文件管理第一浏览窗口中加载的页面内容；并在监听到网络状态为断网恢复状态，则通过主进程将断网恢复消息发送至第一子进程，通过第一子进程根据窗口文件管理第一浏览窗口中加载的页面内容。需要说明的是，上述各个模块可以是功能模块也可以是程序模块，既可以通过软件来实现，也可以通过硬件来实现。对于通过硬件来实现的模块而言，上述各个模块可以位于同一处理器中；或者上述各个模块还可以按照任意组合的形式分别位于不同的处理器中。在本实施例中还提供了一种电子装置，包括存储器和处理器，该存储器中存储有计算机程序，该处理器被设置为运行计算机程序以执行上述任一项方法实施例中的步骤。可选地，上述电子装置还可以包括传输设备以及输入输出设备，其中，该传输设备和上述处理器连接，该输入输出设备和上述处理器连接。可选地，在本实施例中，上述处理器可以被设置为通过计算机程序执行以下步骤：S1，在目标平台中的桌面应用程序启动时，生成与桌面应用程序对应的主进程；S2，利用主进程创建第一浏览窗口，生成与第一浏览窗口对应的第一子进程；主进程与对应的第一子进程之间通信连接；S3，从云服务器中获取窗口文件；S4，通过主进程和第一子进程，根据窗口文件对第一浏览窗口进行管理。需要说明的是，在本实施例中的具体示例可以参考上述实施例及可选实施方式中所描述的示例，在本实施例中不再赘述。此外，结合上述实施例中提供的多窗口管理方法，在本实施例中还可以提供一种存储介质来实现。该存储介质上存储有计算机程序；该计算机程序被处理器执行时实现上述实施例中的任意一种多窗口管理方法。应该明白的是，这里描述的具体实施例只是用来解释这个应用，而不是用来对它进行限定。根据本申请提供的实施例，本领域普通技术人员在不进行创造性劳动的情况下得到的所有其它实施例，均属本申请保护范围。显然，附图只是本申请的一些例子或实施例，对本领域的普通技术人员来说，也可以根据这些附图将本申请适用于其他类似情况，但无需付出创造性劳动。另外，可以理解的是，尽管在此开发过程中所做的工作可能是复杂和漫长的，但是，对于本领域的普通技术人员来说，根据本申请披露的技术内容进行的某些设计、制造或生产等更改仅是常规的技术手段，不应被视为本申请公开的内容不足。“实施例”一词在本申请中指的是结合实施例描述的具体特征、结构或特性可以包括在本申请的至少一个实施例中。该短语出现在说明书中的各个位置并不一定意味着相同的实施例，也不意味着与其它实施例相互排斥而具有独立性或可供选择。本领域的普通技术人员能够清楚或隐含地理解的是，本申请中描述的实施例在没有冲突的情况下，可以与其它实施例结合。以上所述实施例仅表达了本申请的几种实施方式，其描述较为具体和详细，但并不能因此而理解为对专利保护范围的限制。应当指出的是，对于本领域的普通技术人员来说，在不脱离本申请构思的前提下，还可以做出若干变形和改进，这些都属于本申请的保护范围。因此，本申请的保护范围应以所附权利要求为准。
