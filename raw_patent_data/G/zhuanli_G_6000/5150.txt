标题title
一种针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置
摘要abst
本发明公开了一种针对RISC‑V矢量与浮点寄存器的物理寄存器堆分配装置，包括物理寄存器堆，至少分为三组，一组为浮点独享物理寄存器堆，一组为矢量独享物理寄存器堆，一组为共享物理寄存器堆；其中浮点独享物理寄存器堆只分配给浮点架构寄存器使用，其中矢量独享物理寄存器堆只分配给矢量架构寄存器使用，其中共享物理寄存器可以分配给浮点架构寄存器和矢量架构寄存器使用。本发明独享物理寄存器堆为浮点寄存器和矢量寄存器各自提供了必要的寄存器堆资源存储数据，而共享物理寄存器堆则可以灵活地分配给浮点寄存器和矢量寄存器使用；同时通过监测返回控制逻辑，能够及时释放共享表项给后续指令使用，有效提高共享物理寄存器的利用效率。
权利要求书clms
1.一种针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，包括：译码逻辑，对输入指令进行译码获得指令信息，至少包括指令类型、源操作数索引和目的寄存器索引；重命名表，记录架构寄存器和物理寄存器堆之间的映射关系；所述物理寄存器堆，至少分为三组，一组为浮点独享物理寄存器堆，一组为矢量独享物理寄存器堆，一组为共享物理寄存器堆；其中所述浮点独享物理寄存器堆只分配给浮点架构寄存器使用，其中所述矢量独享物理寄存器堆只分配给矢量架构寄存器使用，其中所述共享物理寄存器可以分配给浮点架构寄存器和矢量架构寄存器使用；寄存器堆分配和释放控制逻辑，负责所述物理寄存器堆的表项分配和释放；监测返回控制逻辑，监测所述共享物理寄存器堆是否有不需要被使用到的有效表项，以及监测所述浮点独享物理寄存器堆和所述矢量独享物理寄存器堆是否有空闲表项，将对应的表项数据以及搬运请求发送给重命名分配控制逻辑；所述重命名分配控制逻辑，根据所述译码逻辑获得的指令信息，判断是否需要分配所述物理寄存器堆的表项用于存放指令结果，以及判断所需要分配的对应的所述物理寄存器堆，并根据所述寄存器堆分配和释放控制逻辑分配的表项，更新所述重命名表；并且根据所述监测返回控制逻辑的反馈，确定是否需要将共享物理寄存器堆的表项数据搬运到独享物理寄存器堆表项中；所述重命名分配控制逻辑根据源操作数索引访问所述重命名表，获取源操作数对应的所述物理寄存器堆索引，并传递给发射逻辑。2.根据权利要求1所述针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，所述重命名表包括浮点重命名表和矢量重命名表，所述浮点重命名表记录浮点架构寄存器与浮点独享物理寄存器堆以及共享物理寄存器堆之间的映射关系，所述矢量重命名表记录矢量架构寄存器与矢量独享物理寄存器堆以及共享物理寄存器堆之间的映射关系。3.根据权利要求2所述针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，所述重命名分配控制逻辑确定所述物理寄存器堆分配时，若需要回写浮点寄存器，并且有空闲的所述浮点独享物理寄存器堆表项，则分配对应的表项，并更新所述浮点重命名表。4.根据权利要求2所述针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，所述重命名分配控制逻辑确定所述物理寄存器堆分配时，若需要回写矢量寄存器，并且有空闲的所述矢量独享物理寄存器堆表项，则分配对应的表项，并更新所述矢量重命名表。5.根据权利要求2所述针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，所述重命名分配控制逻辑确定所述物理寄存器堆分配时，若需要回写浮点寄存器，而没有空闲的浮点独享物理寄存器堆表项，或者需要回写矢量寄存器，而没有空闲的矢量独享物理寄存器堆表项，则分配共享寄存器堆表项，并更新对应的重命名表。6.根据权利要求1所述针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，若同时满足共享物理寄存器堆有不需要被使用到的有效表项，并且独享物理寄存器堆有空闲表项，则根据所述重命名分配控制逻辑当前状态确定搬运时机。7.根据权利要求6所述针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，搬运时机为若所述重命名分配控制逻辑当前没有待处理的指令，则直接根据所述监测返回控制逻辑的反馈分配对应的表项，更新对应的重命名表，并通过指令的形式更新表项。8.根据权利要求6所述针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，搬运时机为若所述重命名分配控制逻辑当前正在处理矢量指令，而要搬运的为浮点寄存器，则利用空闲的所述浮点独享物理寄存器堆分配对应的表项，更新所述浮点重命名表，并通过指令的形式更新表项。9.根据权利要求6所述针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，搬运时机为若所述重命名分配控制逻辑当前正在处理浮点指令，而要搬运的为矢量寄存器，则利用空闲的所述矢量独享物理寄存器堆分配对应的表项，更新所述矢量重命名表，并通过指令的形式更新表项。10.根据权利要求1所述的针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，所述寄存器堆分配和释放控制逻辑维护并且更新三组不同物理寄存器堆的状态表，所述状态表记录每个物理寄存器表项是否被占用、以及指令执行完成后是否可以被释放。11.根据权利要求1至10任一所述的针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，所述发射逻辑接收指令信息经过所述重命名表查找和更新后的源操作数索引和目的寄存器索引，访问对应的所述物理寄存器堆表项读取源操作数数据，并发送给执行逻辑。12.根据权利要求11所述的针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，所述执行逻辑包括浮点执行逻辑和矢量执行逻辑，所述浮点执行逻辑用于接收浮点指令及操作数，并执行相应的指令操作，将结果反馈给回写及完成逻辑；所述矢量执行逻辑用于接收矢量指令及操作数，并执行相应的指令操作，将结果反馈给回写及完成逻辑。13.根据权利要求12所述的针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，其中，所述回写及完成逻辑接收所述执行逻辑反馈的完成的指令信息和指令结果，并将指令结果回写到对应的所述物理寄存器堆，同时将指令信息返回给所述寄存器堆分配和释放控制逻辑。
说明书desc
技术领域本发明涉及RISC-V处理器乱序架构矢量与浮点寄存器的物理寄存器堆分配装置。背景技术在高性能处理器的微架构设计中，乱序执行是一种常用的提升性能的方式，其根据数据可用性来决定指令执行的顺序，而非程序本身的指令顺序，从而减少由于指令等待数据而导致处理器停滞所带来的延迟。以下面的指令序列为例，当按序执行时，指令1需要等待指令0的结果，而指令0为除法指令，通常需要较长的执行延时，从而导致处理器停顿等待结果。而在乱序架构中，可以通过检测发现指令2～指令4的操作数不依赖于指令0或者指令1的结果，因此通过提前执行指令2～指令4来减少处理器停顿的延时。指令0：div x2, x1, x0指令1：sub x4, x2, x3指令2：add x3, x5, x6指令3：add x2, x7, x8指令4：sub x5, x2, x3......然而乱序执行可能会导致处理器的运行出错，例如上述的指令序列，由于指令1无法执行而指令2～指令4提前执行了，若指令3的结果提前直接回写x2寄存器，而指令1可能会错误获取到被指令3更新的x2结果从而导致运行出错。因此在乱序架构的设计中，需要引入额外的机制来避免执行顺序改变带来的问题。上述例子中的x0～x8，即为指令集架构所使用的寄存器。ISA通过引入一定数量的寄存器来保存指令的操作数和结果，而处理器则负责执行ISA所定义的指令功能。不同的ISA可能有不同数量的寄存器，例如x86指令集有8/16个整型寄存器，ARM指令集有32个整型寄存器，RISC-V指令集有32个整型寄存器。这类由指令集架构决定的寄存器称为体系架构寄存器。而处理器往往需要将体系架构寄存器映射到硬件上的物理寄存器，来实现寄存器数据的写入和读取。在简单的按序架构中，由于指令执行的顺序与程序顺序保持一致，通常只需要和体系架构寄存器相同数量的物理寄存器来做一一映射即可，每条指令根据操作数的索引从相应的物理寄存器读取对应的操作数，并且在指令完成后回写对应的目的寄存器。而在乱序架构中，通常会通过引入寄存器重命名技术来解决乱序读取和回写寄存器的问题。处理器会引入一张重命名表，每个体系架构寄存器所对应的物理寄存器由重命名表来记录。当一条指令回写一个寄存器时，就为这个寄存器重新映射到一个空闲的物理寄存器，即这条指令的结果将回写被重新映射的物理寄存器上，而后续的指令若需要用到该指令的结果寄存器作为源操作数，则可以通过查找重命名表来获取对应的物理寄存器的信息，并读取相应的数据。我们还是以上述的指令序列作为例子来阐述重命名表的工作机制，如图1所示，假设有x0～x15共16个体系架构寄存器，有p0～p31共32个物理寄存器。在指令0执行之前，重命名表上记录的映射关系为x0～x8分别映射到p0～p8。指令0的操作数x0和x1对应着p0和p1，且指令回写x2，则为x2分配新的映射关系p27；指令1看到的映射表关系发生变化，操作数x2和x3分别对应着p27和p3，且指令回写x4，则为x4分配新的映射关系p28；指令2看到的映射表关系发生变化，操作数x5和x6分别对应着p5和p6，且指令回写x3，则为x3分配新的映射关系p29；指令3看到的映射表关系发生变化，操作数x7和x8分别对应着p7和p8，且指令回写x2，则为x2分配新的映射关系p30。可以看到，通过上述的重命名机制，哪怕指令3提前发射执行并回写x2，也不会影响指令1获取正确的x2数据，因为两条不同指令的x2映射到了不同的物理寄存器表项。而指令1所对应的p2表项则可以在指令0回写且指令1读取到数据并发射后进行释放给后续的指令使用。由于一个体系架构寄存器在同一时间可能需要占用若干个物理寄存器，因此这种机制往往需要物理寄存器的数量大于体系架构寄存器的数量，否则指令也会因为无法分配到空闲的物理寄存器而被停滞，等待物理寄存器释放。具体的原理可以参考约翰•L.亨尼斯和戴维•A.帕特森著的《计算机体系结构:量化研究方法》。除了整型寄存器以外，大部分处理器的ISA还包括浮点寄存器或者矢量寄存器，用于浮点指令和矢量指令，例如x86的AVX以及ARM的Neon指令集。类似于整型寄存器，重命名技术也适用于浮点和矢量的乱序执行。本发明基于开源架构RISC-V的浮点扩展指令集和矢量扩展指令集vectorextension，具体的指令集架构spec文档可以参考网址：https://github.com/RISC-V/RISC-V-isa-manual/releases/download/Ratified-IMAFDQC/RISC-V-spec-20191213.pdf；https://github.com/RISC-V/RISC-V-v-spec/releases/tag/v1.0。浮点扩展指令集包括32个浮点寄存器f0～f31，每个寄存器的位宽为FLEN。矢量扩展指令集包括32个矢量寄存器v0～v31,每个寄存器的位宽为VLEN。通常来说，不同类型的体系架构寄存器都拥有各种的物理寄存器堆，例如Intel的skylake架构有180个独立的整型物理寄存器和168个矢量物理寄存器；AMD的Zen 2有180个独立的整型物理寄存器和160个浮点物理寄存器；开源RISC-V架构BOOM有独立的128个整型物理寄存器和128个浮点物理寄存器堆；开源RISC-V架构香山处理器有独立的192个整型物理寄存器和192个浮点物理寄存器堆。RISC-V架构由于同时存在独立的浮点寄存器和矢量寄存器，在架构设计中需要同时提供对应的物理寄存器堆资源对各自的数据进行保存。而如果需要支持乱序的矢量和浮点架构，则对应的物理寄存器堆资源也需要增加。现有技术中，通常不同类型的架构寄存器有各自的物理寄存器堆，而高性能处理器往往需要采用较深的乱序发射和较大的并行发射宽度来满足性能需求，因此需要比架构寄存器数量更多的物理寄存器来支撑，具体可参考上述各例子。因此，处理器若要支持高性能的浮点和矢量处理，为浮点寄存器和矢量寄存器各自提供远超其架构寄存器数量的物理寄存器来提供尽可能强大的乱序处理能力，是一种常用的方式。然而，由于浮点指令和矢量指令应用场景的区别，处理器往往会存在同时处理大量的浮点指令或者同时处理大量的矢量指令的情况，但不太会出现大量浮点指令和矢量指令混合的情况。因此，则可能存在当浮点物理寄存器堆被大量的浮点指令填满占用时，矢量寄存器堆此时处于闲置或者利用不充分的状态，反之亦然。尽管这种架构通过大量的物理寄存器堆资源来提升了处理器性能，但大量的物理寄存器堆资源常常会处于利用不充分的状态。相关现有技术可以参见专利文献：CN1160622C、CN1983164A、CN100561461C、CN101290567A、CN102262525A、CN108845826A、CN109508206A、CN112346783A、CN112506468A、CN114020328A、WO2022120722A1。发明内容为了解决上述技术问题，本发明提供一种针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，采用浮点寄存器和矢量寄存器共享物理寄存器堆的方式，同时通过一个监测返回控制逻辑将表项数据从共享物理寄存器堆中搬运到独享物理寄存器堆中，解决现有大量物理寄存器堆资源利用不充分的问题，其采用如下技术方案：一种针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，包括：译码逻辑，对输入指令进行译码获得指令信息，至少包括指令类型、源操作数索引和目的寄存器索引；重命名表，记录架构寄存器和物理寄存器堆之间的映射关系；物理寄存器堆，至少分为三组，一组为浮点独享物理寄存器堆，一组为矢量独享物理寄存器堆，一组为共享物理寄存器堆；其中浮点独享物理寄存器堆只分配给浮点架构寄存器使用，其中矢量独享物理寄存器堆只分配给矢量架构寄存器使用，其中共享物理寄存器可以分配给浮点架构寄存器和矢量架构寄存器使用；寄存器堆分配和释放控制逻辑，负责物理寄存器堆的表项分配和释放；监测返回控制逻辑，监测共享物理寄存器堆是否有不需要被使用到的有效表项，以及监测浮点独享物理寄存器堆和矢量独享物理寄存器堆是否有空闲表项，将对应的表项数据以及搬运请求发送给重命名分配控制逻辑；重命名分配控制逻辑，根据译码逻辑获得的指令信息，判断是否需要分配物理寄存器堆的表项用于存放指令结果，以及判断所需要分配的对应的物理寄存器堆，并根据寄存器堆分配和释放控制逻辑分配的表项，更新重命名表；并且根据监测返回控制逻辑的反馈，确定是否需要将共享物理寄存器堆的表项数据搬运到独享物理寄存器堆表项中；重命名分配控制逻辑根据源操作数索引访问重命名表，获取源操作数对应的物理寄存器堆索引，并传递给发射逻辑。本发明具有以下有益技术效果：独享物理寄存器堆为浮点寄存器和矢量寄存器各自提供了必要的寄存器堆资源存储数据，而共享物理寄存器堆则可以灵活地分配给浮点寄存器和矢量寄存器使用；同时通过监测返回控制逻辑，能够及时将共享物理寄存器堆不需要的信息返回给对应的独享物理寄存器堆，及时释放共享表项给后续指令使用，有效提高共享物理寄存器的利用效率。此外，当处理器长时间不使用某一组架构寄存器时，通过搬运的方式可以将存放于共享物理寄存器堆的该类寄存器搬运到对应的独享物理寄存器中，并采用时钟关断等低功耗方式降低该组寄存器的功耗。附图说明以下结合附图对本发明作进一步说明：图1为重命名表工作机制的示意图；图2为本发明针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置的示意图；图3为本发明FLEN=VLEN=DPLEN时搬运表项的示意图；图4为本发明2*FLEN=VLEN=DPLEN时搬运表项的示意图；图5为本发明4*FLEN=2*DPLEN=VLEN时搬运表项的示意图。具体实施方式本发明具体实施方式有以下参数设定和条件设定：本发明针对RISC-V矢量扩展指令集和RISC-V浮点指令集的处理器乱序发射架构进行；本发明中中使用的物理寄存器堆资源为：浮点独享物理寄存器堆表项Nfp个，位宽为浮点寄存器的位宽FLEN,即资源为Nfp*FLEN-bit；矢量独享物理寄存器堆表项Nvec个，位宽为矢量寄存器的位宽VLEN，即资源为Nvec*VLEN-bit；共享物理寄存器堆的表项为Nshare个，位宽为DPLEN*K,即资源为Nshare*DPLEN*K-bit。本实施方案仅以DPLEN=VLEN，K=1为例；本发明可以同时处理m条指令，同时处理的指令条数并不阻碍本发明的可行性。如图2所示，为本发明一种针对RISC-V矢量与浮点寄存器的物理寄存器堆分配装置，包括：译码逻辑对接收到的指令进行译码，获得必要的关键指令信息，至少包括：是否为矢量指令；是否为浮点指令；矢量指令的源操作数和目的寄存器有效信息及索引；浮点指令的源操作数和目的寄存器有效信息及索引。重命名分配控制逻辑、重命名表和物理寄存器堆重命名表记录着架构寄存器和物理寄存器堆之间的映射关系。重命名表包括浮点重命名表和矢量重命名表，浮点重命名表记录浮点架构寄存器与浮点独享物理寄存器堆以及共享物理寄存器堆之间的映射关系，矢量重命名表记录矢量架构寄存器与矢量独享物理寄存器堆以及共享物理寄存器堆之间的映射关系。物理寄存器堆，至少分为三组，一组为浮点独享物理寄存器堆，一组为矢量独享物理寄存器堆，一组为共享物理寄存器堆；其中浮点独享物理寄存器堆只分配给浮点架构寄存器使用，其中矢量独享物理寄存器堆只分配给矢量架构寄存器使用，其中共享物理寄存器可以分配给浮点架构寄存器和矢量架构寄存器使用。重命名分配控制逻辑，根据译码逻辑获得的指令信息，判断是否需要分配物理寄存器堆的表项用于存放指令结果，以及判断所需要分配的对应的物理寄存器堆，并根据寄存器堆分配和释放控制逻辑分配的表项，更新重命名表；并且根据监测返回控制逻辑的反馈，确定是否需要将共享物理寄存器堆的表项数据搬运到独享物理寄存器堆表项中；重命名分配控制逻辑根据源操作数索引访问重命名表，获取源操作数对应的物理寄存器堆索引，并传递给发射逻辑。重命名分配控制逻辑根据指令信息，以及监测返回控制逻辑，做出如下操作：根据源操作数的类型和索引去对应的浮点或者矢量重命名表中获取对应的物理寄存器索引。根据目的寄存器的类型和寄存器堆分配和释放控制逻辑提供的物理寄存器状态信息，决定物理寄存器堆的分配：若需要回写浮点寄存器，并且有空闲的浮点独享物理寄存器堆表项，则分配对应的表项，并更新浮点重命名表；若需要回写矢量寄存器，并且有空闲的矢量独享物理寄存器堆表项，则分配对应的表项，并更新矢量重命名表；若需要回写浮点寄存器，而没有空闲的浮点独享物理寄存器堆表项，或者需要回写矢量寄存器，而没有空闲的矢量独享物理寄存器堆表项，则分配共享物理寄存器堆表项，并更新对应的重命名表。根据监测返回控制逻辑的反馈，确定是否需要将特定的共享物理寄存器堆的表项搬运到特定的独享物理寄存器堆表项中，若同时满足共享物理寄存器堆有不需要被使用到的有效表项，并且独享物理寄存器堆有空闲表项，则根据重命名分配控制逻辑当前状态确定搬运时机：搬运时机为若重命名分配控制逻辑当前没有待处理的指令，则直接根据监测返回控制逻辑的反馈分配对应的表项，更新对应的重命名表，并通过指令的形式更新表项；搬运时机为若重命名分配控制逻辑当前正在处理矢量指令，而要搬运的为浮点寄存器，则利用空闲的浮点独享物理寄存器堆分配对应的表项，更新浮点重命名表，并通过指令的形式更新表项；搬运时机为若重命名分配控制逻辑当前正在处理浮点指令，而要搬运的为矢量寄存器，则利用空闲的矢量独享物理寄存器堆分配对应的表项，更新矢量重命名表，并通过指令的形式更新表项。发射逻辑根据指令类型和信息完成重命名表查找和更新后，将对应的指令信息和物理寄存器堆索引发送给发射逻辑进行指令的发射，指令发射后同时读取对应的物理寄存器堆表项。执行逻辑指令在发射并读取数据后，发射到执行逻辑执行完毕后，将完成信息和待回写数据反馈给完成和回写逻辑。回写及完成逻辑根据指令之前分配的物理寄存器堆索引信息，将数据回写到对应的物理寄存器堆。同时，将指令的完成信息反馈给寄存器堆分配和释放控制逻辑。寄存器堆分配和释放控制逻辑寄存器堆分配和释放控制逻辑维护着三组不同的物理寄存器堆的状态表，分别记录着每个物理寄存器表示是否被占用以及在哪条指令执行完成后可以释放。根据完成和回写逻辑反馈的指令完成情况，该控制逻辑将释放不再需要被占用的物理寄存器表项。此外，该控制逻辑根据重命名分配控制的分配请求，将空闲的表项进行分配，并更新对应的状态表。监测返回控制逻辑监测返回控制逻辑负责根据三组物理寄存器堆的状态表，以及当前处理器的指令流信息，判断出共享物理寄存器中是否有不再需要使用到的有效数据，以及对应的独享物理寄存器中是否有被释放的表项。若满足上述条件，则将需要搬运的共享物理寄存器表项信息及搬运请求发送给重命名分配控制逻辑。本发明的工作流程如图2所示：译码逻辑接收到指令后，译码得到指令类型、操作数索引信息和目的寄存器索引信息。重命名分配控制逻辑接收到译码信息后，查找对应的浮点重命名表或者矢量重命名表，获取操作数的映射信息返回给发射逻辑，用于从三个物理寄存器堆中读取正确的操作数。同时，重命名分配控制逻辑根据指令类型和目的寄存器索引信息向寄存器堆分配和释放控制逻辑请求分配新的物理寄存器表项。寄存器堆分配和释放控制逻辑根据三组物理寄存器堆的状态表，判断是否有空闲的表项，若有，则将分配的表项信息返回给重命名分配控制逻辑；若无，则需要等待表项释放后进行分配。此时，指令将停留在重命名分配控制逻辑上等待分配完成。在完成分配后，重命名分配控制逻辑会将目的寄存器所分配到的物理寄存器表项信息更新到浮点重命名表或者矢量重命名表，并将该信息发送给发射逻辑。发射逻辑在从三个物理寄存器堆表项中获取操作数后，则根据指令类型发射到对应的浮点执行逻辑或者矢量执行逻辑进行执行。回写及完成逻辑会根据指令分配到的物理寄存器表项信息将执行结果回写到对应的物理寄存器表项中，并将指示指令完成执行的信息反馈给寄存器堆分配和释放控制逻辑，寄存器堆分配和释放逻辑则会更新对应的状态表，并将不需要再被使用到的表项进行释放。在整个过程中，监测返回控制逻辑会实时收集寄存器堆分配和释放控制逻辑中的三组物理寄存器堆的状态表，以及当前的指令流信息，判断是否可以将共享物理寄存器堆中某个有效的表项搬运到浮点或者矢量独享物理寄存器堆的空闲表项中。一旦监测到有可以搬运的表项，监测返回控制逻辑则将搬运请求和搬运信息发送给重命名分配控制逻辑，重命名分配控制逻辑接收到请求和信息后将更新映射表关系，并指示发射逻辑从对应的物理寄存器堆表项中以读取操作数的形式将数据读出，并通过回写及完成逻辑回写到需要搬运到的独享物理寄存器堆中。以图3所示的映射表为例，当处理器首先执行一段浮点程序时，每条浮点指令被译码逻辑译码出对应的浮点源操作数索引和浮点目的寄存器索引，重命名分配控制逻辑根据浮点源操作数索引访问重命名表，获取源操作数对应的物理寄存器堆索引并传递给发射逻辑进行后续的数据获取，并分配空闲的浮点独享物理寄存器堆表项给对应的浮点目的寄存器。随着指令的执行，越来越多的浮点独享物理寄存器堆表项被分配。当浮点独享物理寄存器堆表项有限且释放速度较慢时，则会出现浮点独享物理寄存器堆表项全部分配完而没有空闲表项。此时重命名分配控制逻辑监测到浮点独享寄存器堆表项已满，则会将新指令的所需要回写的浮点目的寄存器映射到共享物理寄存器堆上。因此，当一段程序的所有浮点指令执行完毕后，一部分浮点架构寄存器映射到了浮点独享物理寄存器堆表项，而一部分浮点架构寄存器映射到了共享寄存器堆表项，而一部分释放较慢的浮点独享物理寄存器堆表项也因为浮点程序的执行完毕，而最终被释放。此时若处理器开始处理一段矢量程序，类似于浮点程序，经过一段时间的执行，越来越多的矢量独享物理寄存器堆表项被分配。当矢量独享物理寄存器堆表项有限且释放速度较慢时，则会出现矢量独享物理寄存器堆表项全部分配完而没有空闲表项。因此随着矢量程序的继续执行，重命名分配控制逻辑会将译码逻辑所译出的矢量目的寄存器分配到共享物理寄存器堆表项中，并且可能会分配越来越多的共享物理寄存器堆来发挥乱序性能。此时若浮点架构寄存器仍然占据着共享物理寄存器堆，则会导致矢量寄存器无法充分利用共享物理寄存器堆资源而影响性能。然而，由于处理器在执行大量的矢量程序，浮点架构寄存器处于静止状态。因此此时监测返回控制逻辑会监测共享物理寄存器堆的表项中是否有不需要被使用的有效表项，若有的话，则判断表项中映射的是浮点架构寄存器或者矢量架构寄存器，若为浮点架构寄存器，则进一步监测判断浮点独享物理寄存器堆是否有空闲的表项，若有的话则将浮点架构寄存器的数据从共享物理寄存器堆表项搬运到浮点独享物理寄存器一个空闲的表项中，并将映射关系进行更改。同样的，若判断为矢量架构寄存器，则进一步监测判断矢量独享物理寄存器堆表项中是否有空闲的表项，若有则进行类似的搬运和映射关系更改。通过这种检测搬运的方式，释放了共享物理寄存器资源，让正在执行的矢量程序有更加充分的物理寄存器堆资源可以使用，从而提高了资源的利用效率，且由于浮点专用寄存器堆写口的空闲，因此也不会与程序正在执行的指令产生回写口冲突而影响正常程序的运行。需要注意的是，由于矢量寄存器的位宽和浮点寄存器的位宽均是可配的，因此其各自的独享物理寄存器堆的表项宽度也不一定相同，共享物理寄存器堆的表项也可以不和两者相同，下面列举了几种情况，均是可行的。FLEN=VLEN=DPLEN,此时最简单的方案就是将三组物理寄存器堆设置成一样位宽，采用最直接的一一映射关系，如图3所示。此时矢量架构寄存器的长度和浮点架构寄存器的长度相等，因此三种类型的物理寄存器堆表项在映射时都是一个物理寄存器表项对应着一个架构寄存器。2*FLEN=VLEN=DPLEN,此时可以按照FLEN来配置浮点独享物理寄存器堆位宽，按照VLEN来配置矢量独享物理寄存器堆位宽和共享物理寄存器堆位宽，如图4所示。一个浮点架构寄存器可以映射到一个浮点独享物理寄存器表项中，也可以映射到一个共享物理寄存器堆表项的高半部分或者低半部分，如图中标斜线的方块所示；而一个矢量架构寄存器可以映射到一个矢量独享物理寄存器堆表项中，也可以映射到一个共享物理寄存器堆表项中，如图中标灰色的方块所示。这种方式的好处是，尽管矢量架构寄存器由于VLEN较大，占据了更宽的共享物理寄存器堆资源，但是由于一个共享物理寄存器堆可以映射两个浮点架构寄存器堆，相当于在执行浮点程序时拥有了2倍的物理寄存器堆表项资源可以使用，相比于将该资源给矢量架构寄存器独享，共享的方式更好的提升了资源的利用效率。4*FLEN=2*DPLEN=VLEN,此时矢量寄存器的位宽VLEN较宽，但通常每个VLEN位宽的矢量寄存器都会分成两个块，BANK0和BANK1,每个BANK的位宽为DPLEN。矢量指令也会拆分成两条微指令，分别访问BANK0和BANK1的DPLEN位宽的数据。重命名表也以BANK为单位对矢量架构寄存器和物理寄存器堆进行映射，因此将矢量架构寄存器映射到矢量独享物理寄存器与共享物理寄存器均以BANK的方式来进行,共享物理寄存器堆BANK1和矢量独享物理寄存器BANK1对应只分配给矢量架构寄存器的BANK1进行映射，共享物理寄存器堆BANK0和矢量独享物理寄存器BANK0对应只分配给矢量架构寄存器的BANK0进行映射。而共享物理寄存器堆可以充分分配给浮点寄存器使用，例如共享物理寄存器堆的BANK0和BANK1都可以映射到两个浮点架构寄存器，如图5所示。此外，为了尽可能的充分利用共享物理寄存器，应推荐将浮点独享物理寄存器堆表项个数设置为32，以保证所有32个浮点寄存器均可放置于此，在处理大量矢量指令的时候能够使所有的浮点架构寄存器都映射到浮点独享物理寄存器堆上，使得矢量架构寄存器可以充分使用共享物理寄存器；将矢量独享物理寄存器堆表项个数设置为32，以保证所有32个矢量寄存器均可放置于此，在处理大浮点量指令的时候能够使其充分使用共享物理寄存器；共享物理寄存器的表项个数则可以根据处理器的性能需求进行设置。以上仅为本发明较佳实施例，但本发明的保护范围并不局限于此。任何以本发明为基础，对本发明相应技术特征以基本相同的手段，实现基本相同的功能，达到基本相同的效果，并且本领域普通技术人员在被诉侵权行为发生时无需经过创造性劳动就能联想到的特征进行替换，皆涵盖于本发明的保护范围之中。
