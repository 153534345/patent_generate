标题title
一种模型编译方法、装置、电子设备和存储介质
摘要abst
本申请提供了一种模型编译方法、装置、电子设备和存储介质。所述方法包括：在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件，其中，所述中间文件包括参数数据和可执行代码，所述参数文件独立于提取出参数数据后的中间文件存在；确定所述参数文件的路径标识，其中，所述路径标识用于指示所述参数文件的查找路径；将所述可执行代码中引用的所述参数数据的名称，替换为存储所述参数数据的参数文件的路径标识。本申请时提高模型加载效率。
权利要求书clms
1.一种模型编译方法，其特征在于，所述方法包括：在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件，其中，所述中间文件包括参数数据和可执行代码，所述参数文件独立于提取出参数数据后的中间文件存在；确定所述参数文件的路径标识，其中，所述路径标识用于指示所述参数文件的查找路径；将所述可执行代码中引用的所述参数数据的名称，替换为存储所述参数数据的参数文件的路径标识。2.根据权利要求1所述的方法，其特征在于，所述方法还包括：在模型编译的链接过程中，从所述提取出参数数据后的中间文件中，根据算子名称查找对应的代码以构建执行图。3.根据权利要求2所述的方法，其特征在于，根据算子名称查找对应的代码之后，所述方法还包括：在模型加载过程中，根据预设的关联关系和所述可执行代码中的路径标识，确定参数文件路径，其中，所述关联关系包括所述路径标识和所述参数文件路径之间的对应关系；依照所述参数文件路径，从所述参数文件中调用所述参数数据。4.根据权利要求3所述的方法，其特征在于，根据算子名称查找对应的代码之后，所述方法还包括：确定每个所述路径标识和一个所述参数文件路径之间的关联关系；将所述关联关系保存在配置文件中。5.根据权利要求4所述的方法，其特征在于，将所述关联关系保存在配置文件中之后，所述方法还包括：将至少一个所述参数文件、至少一个所述可执行代码文件和所述配置文件存入同一个压缩包。6.根据权利要求5所述的方法，其特征在于，将至少一个所述参数文件、至少一个所述可执行代码文件和所述配置文件存入同一个压缩包包括：建立参数数据目录文件，其中，所述参数数据目录文件中包括至少一个所述参数文件，每个所述参数文件中包括一个所述参数数据；建立可执行代码目录文件，其中，所述可执行代码目录文件中包括每个目标平台的可执行文件；将所述参数数据目录文件、所述可执行代码目录文件和所述配置文件存入同一个压缩包。7.根据权利要求1所述的方法，其特征在于，在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件包括：在模型编译的链接过程中，通过链接工具从编译器框架系统的位码文件中提取每个参数数据至一个参数文件。8.一种模型编译装置，其特征在于，所述装置包括：提取模块，用于在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件，其中，所述中间文件包括参数数据和可执行代码，所述参数文件独立于提取出参数数据后的中间文件存在；确定模块，用于确定所述参数文件的路径标识，其中，所述路径标识用于指示所述参数文件的查找路径；替换模块，用于将所述可执行代码中引用的所述参数数据的名称，替换为存储所述参数数据的参数文件的路径标识。9.一种电子设备，其特征在于，包括处理器、通信接口、存储器和通信总线，其中，处理器，通信接口，存储器通过通信总线完成相互间的通信；存储器，用于存放计算机程序；处理器，用于执行存储器上所存放的程序时，实现权利要求1-7任一方法步骤。10.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质内存储有计算机程序，所述计算机程序被处理器执行时实现权利要求1-7任一方法步骤。
说明书desc
技术领域本申请涉及模型编译技术领域，尤其涉及一种模型编译方法、装置、电子设备和存储介质。背景技术人工智能神经网络训练完成后，在部署到不同平台和设备上运行之前，通常需要做进一步的编译转换，以使能在目标设备上正常运行。人工智能神经网络的部署过程比较繁琐，模型在部署到目标设备上时，模型结构、参数数据和可执行代码通常是保存在同一个文件中，模型加载过程中，需要根据算子名称确定所需的代码，代码调用处包括该参数数据。由于参数数据和可执行代码存在同一个模型文件中，加载模型时，模型文件体积过大造成模型加载效率低。发明内容本申请实施例的目的在于提供一种模型编译方法、装置、电子设备和存储介质，以解决模型加载效率低的问题。具体技术方案如下：第一方面，提供了一种模型编译方法，所述方法包括：在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件，其中，所述中间文件包括参数数据和可执行代码，所述参数文件独立于提取出参数数据后的中间文件存在；确定所述参数文件的路径标识，其中，所述路径标识用于指示所述参数文件的查找路径；将所述可执行代码中引用的所述参数数据的名称，替换为存储所述参数数据的参数文件的路径标识。可选地，所述方法还包括：在模型编译的链接过程中，从提取出参数数据后的中间文件中，根据算子名称查找对应的代码以构建执行图。可选地，根据算子名称查找对应的代码之后，所述方法还包括：在模型加载过程中，根据预设的关联关系和所述可执行代码中的路径标识，确定参数文件路径，其中，所述关联关系包括所述路径标识和所述参数文件路径之间的对应关系；依照所述参数文件路径，从所述参数文件中调用所述参数数据。可选地，根据算子名称查找对应的代码之后，所述方法还包括：确定每个所述路径标识和一个所述参数文件路径之间的关联关系；将所述关联关系保存在配置文件中。可选地，将所述关联关系保存在配置文件中之后，所述方法还包括：将至少一个所述参数文件、至少一个所述可执行代码文件和所述配置文件存入同一个压缩包。可选地，将至少一个所述参数文件、至少一个所述可执行代码文件和所述配置文件存入同一个压缩包包括：建立参数数据目录文件，其中，所述参数数据目录文件中包括至少一个所述参数文件，每个所述参数文件中包括一个所述参数数据；建立可执行代码目录文件，其中，所述可执行代码目录文件中包括每个目标平台的可执行文件；将所述参数数据目录文件、所述可执行代码目录文件和所述配置文件存入同一个压缩包。可选地，在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件包括：在模型编译的链接过程中，通过链接工具从编译器框架系统的位码文件中提取每个参数数据至一个参数文件。第二方面，提供了一种模型编译装置，所述装置包括：提取模块，用于在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件，其中，所述中间文件包括参数数据和可执行代码，所述参数文件独立于提取出参数数据后的中间文件存在；确定模块，用于确定所述参数文件的路径标识，其中，所述路径标识用于指示所述参数文件的查找路径；替换模块，用于将所述可执行代码中引用的所述参数数据的名称，替换为存储所述参数数据的参数文件的路径标识。第三方面，提供了一种电子设备，包括处理器、通信接口、存储器和通信总线，其中，处理器，通信接口，存储器通过通信总线完成相互间的通信；存储器，用于存放计算机程序；处理器，用于执行存储器上所存放的程序时，实现任一所述的模型编译方法步骤。第四方面，提供了一种计算机可读存储介质，所述计算机可读存储介质内存储有计算机程序，所述计算机程序被处理器执行时实现任一所述的模型编译方法步骤。本申请实施例有益效果：本申请实施例提供了一种模型编译方法，服务器在模型编译的链接过程中，通过将参数数据提取至参数文件中，参数文件独立于提取出参数数据后的中间文件存在，并将可执行代码中引用的参数数据的名称替换为参数文件的路径标识，使参数数据和可执行代码分离，这样编译生成的二进制可执行文件作为一个新的模型文件，其体积变小，减少可执行代码文件的加载时间，提高模型加载效率。进一步地，模型加载过程中无需加载全部参数数据，可以在实际使用中，根据路径标识确定参数文件的保存位置并加载需要的参数数据，提高模型加载效率。当然，实施本申请的任一产品或方法并不一定需要同时达到以上的所有优点。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，对于本领域普通技术人员而言，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。图1为本申请实施例提供的一种模型编译的方法流程图；图2为本申请实施例提供的RBO文件示意图；图3为本申请实施例提供的一种神经网络模型编译的处理流程图；图4为本申请实施例提供的一种模型编译装置的结构示意图；图5为本申请实施例提供的一种电子设备的结构示意图。具体实施方式为使本申请实施例的目的、技术方案和优点更加清楚，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请的一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动的前提下所获得的所有其他实施例，都属于本申请保护的范围。在后续的描述中，使用用于表示元件的诸如“模块”、“部件”或“单元”的后缀仅为了有利于本申请的说明，其本身并没有特定的意义。因此，“模块”与“部件”可以混合地使用。以下为说明书中英文名词的解释：LLVM，是构架编译器的框架系统。lld是 LLVM里的一个子项目，是一个链接器。bitcode。为了解决背景技术中提及的问题，根据本申请实施例的一方面，提供了一种模型编译方法的实施例。本申请实施例提供了一种模型编译方法，可以应用服务器，用于提高模型加载效率。下面将结合具体实施方式，对本申请实施例提供的一种模型编译方法进行详细的说明，如图1所示，具体步骤如下：步骤101：在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件。其中，中间文件包括参数数据和可执行代码，参数文件独立于模型文件存在。在本申请实施例中，模型编译过程中，先执行前端的编译过程得到中间文件，再执行链接过程。中间文件包括参数数据和可执行代码，在链接过程中，通过链接工具将参数数据提取出来，每个参数数据存入一个参数文件，参数文件独立于提取出参数数据后的中间文件存在，从而将参数数据和可执行代码从中间文件中分离。步骤102：确定参数文件的路径标识。其中，路径标识用于指示参数文件的查找路径。参数文件的存储位置和提取出参数数据后的中间文件的存储位置不相同，那么需要确定参数文件的查找路径，然后基于每个参数文件的查找路径生成对应的路径标识，从而根据该路径标识查找到参数文件。步骤103：将可执行代码中引用的参数数据的名称，替换为存储参数数据的参数文件的路径标识。在本申请实施例中，可执行代码中原本引用有参数数据的名称，可以根据该名称调用参数数据，服务器将该参数数据的名称的位置替换为参数文件的路径标识，这样避免参数数据的名称出现在可执行代码的文件中，从而使得可执行代码和参数数据完全分离。在本申请中，服务器在模型编译的链接过程中，通过将参数数据提取至参数文件中，参数文件独立于提取出参数数据后的中间文件存在，并将可执行代码中引用的参数数据的名称替换为参数文件的路径标识，使参数数据和可执行代码分离，这样编译生成的二进制可执行文件作为一个新的模型文件，不包括参数数据，其体积变小，减少可执行代码文件的加载时间，提高模型加载效率。另外，模型加载过程中无需加载全部参数数据，可以在实际使用中，根据路径标识确定参数文件的保存位置并加载需要的参数数据，也能提高模型加载效率。作为一种可选地实施方式，本申请在模型编译的链接过程中，从提取出参数数据后的中间文件中，根据算子名称查找对应的代码以构建执行图。相对于现有技术在模型加载过程中确定可执行代码，本申请在模型编译过程中就已经确定可执行代码，针对神经网络模型，现有技术是通过图描述在加载时建构可执行图，现有技术是构建好执行图，把可执行代码保存下来，下次直接加载执行，不用再查找代码构建可执行图，省去查找代码构建执行图的时间，提高模型加载效率。作为一种可选地实施方式，根据算子名称查找对应的代码之后，方法还包括：在模型加载过程中，根据预设的关联关系和可执行代码中的路径标识，确定参数文件路径，其中，关联关系包括路径标识和参数文件路径之间的对应关系；依照参数文件路径，从参数文件中调用参数数据。在本申请实施例中，在后续的模型加载过程中，服务器依照参数文件的路径标识查找参数文件，然后从参数文件中调用参数数据。具体来说，模型编译过程中，根据算子名称确定对应的可执行代码，可执行代码中中保存有替换完成的参数文件的路径标识，服务器在替换过程中，确定每个路径标识和一个参数文件路径之间的关联关系，并将关联关系保存在配置文件中，示例性的，配置文件为configure.json文件，本申请对配置文件的类型不作具体限制。服务器根据关联关系和路径标识，确定参数文件路径，然后依照参数文件路径查找参数文件，最后从参数文件中调用参数数据。示例性的，configure.json文件中是一个"aaa"--"/mnt/filepath/datafile.dat"的映射。可执行代码中保存有路径标识，比如"aaa"，param="aaa"对应param="12，22，32，42..."的数据。把内容"12，22，32，42..."写到参数文件/mnt/filepath/datafile.dat，同时把"aaa" "/mnt/filepath/datafile.dat"这个映射写到configure.json文件。后面就可以用"aaa"通过configure.json里映射成"/mnt/filepath/datafile.dat"，再从这个参数文件里读取内容。本申请通过在可执行代码中存入路径标识，相对于存入参数数据的名称，能够使得编译生成的二进制可执行文件体积更小，减少模型的加载时间。作为一种可选的实施方式，将关联关系保存在配置文件中之后，方法还包括：将至少一个参数文件、至少一个可执行代码文件和配置文件存入同一个压缩包。其中，参数文件的数量和可执行代码文件的数量没有关联，数量可以相同，也可以不同。服务器将参数数据提取出来后，得到至少一个参数文件，可执行文件代码存在于可执行代码文件中，服务器将至少一个参数文件、至少一个可执行代码文件和配置文件存入同一个压缩包，避免传输过程中部分文件丢失而导致模型无法正常使用，保证数据的完整性和一致性。作为一种可选的实施方式，将至少一个参数文件、至少一个可执行代码文件和配置文件存入同一个压缩包包括：建立参数数据目录文件，其中，参数数据目录文件中包括至少一个参数文件，每个参数文件中包括一个参数数据；建立可执行代码目录文件，其中，可执行代码目录文件中包括每个目标平台的可执行文件；将参数数据目录文件、可执行代码目录文件和配置文件存入同一个压缩包。压缩包内部是由多个文件组成的，同一类型的文件打包在同一个目录文件中，例如压缩包为RBO，图2为RBO文件示意图，可以看出，参数数据目录文件中包括参数文件1~参数文件n，可执行代码目录文件包括目标平台1可执行文件~目标平台n可执行文件，配置文件记录有路径标识和可执行文件路径的对应关系。本申请中，压缩包将多个文件分类存储，可以提高文件查找效率。可选的，本申请实施例还提供了一种神经网络模型编译的处理流程图，如图3所示，具体步骤如下。将神经网络模型文件编译成LLVM的位码文件，通过lld链接工具分离参数数据和可执行文件，生成至少一个参数文件、至少一个可执行代码文件和配置文件，将上述三种文件存入同一压缩包。基于相同的技术构思，本申请实施例还提供了一种模型编译装置，如图4所示，该装置包括：提取模块401，用于在模型编译的链接过程中，从前端编译完成的中间文件中提取每个参数数据至一个参数文件，其中，中间文件包括参数数据和可执行代码，参数文件独立于提取出参数数据后的中间文件存在；确定模块402，用于确定参数文件的路径标识，其中，路径标识用于指示参数文件的查找路径；替换模块403，用于将可执行代码中引用的参数数据的名称，替换为存储参数数据的参数文件的路径标识。可选地，装置还用于：在模型编译的链接过程中，从提取出参数数据后的中间文件中，根据算子名称查找对应的代码以构建执行图。可选地，装置还用于：在模型加载过程中，根据预设的关联关系和可执行代码中的路径标识，确定参数文件路径，其中，关联关系包括路径标识和参数文件路径之间的对应关系；依照参数文件路径，从参数文件中调用参数数据。可选地，装置还用于：确定每个路径标识和一个参数文件路径之间的关联关系；将关联关系保存在配置文件中。可选地，装置还用于：将至少一个参数文件、至少一个可执行代码文件和配置文件存入同一个压缩包。可选地，装置还用于：建立参数数据目录文件，其中，参数数据目录文件中包括至少一个参数文件，每个参数文件中包括一个参数数据；建立可执行代码目录文件，其中，可执行代码目录文件中包括每个目标平台的可执行文件；将参数数据目录文件、可执行代码目录文件和配置文件存入同一个压缩包。可选地，提取模块401用于：在模型编译的链接过程中，通过链接工具从编译器框架系统的位码文件中提取每个参数数据至一个参数文件。根据本申请实施例的另一方面，本申请提供了一种电子设备，如图5所示，包括存储器503、处理器501、通信接口502及通信总线504，存储器503中存储有可在处理器501上运行的计算机程序，存储器503、处理器501通过通信接口502和通信总线504进行通信，处理器501执行计算机程序时实现上述方法的步骤。上述电子设备中的存储器、处理器通过通信总线和通信接口进行通信。所述通信总线可以是外设部件互连标准总线或扩展工业标准结构总线等。该通信总线可以分为地址总线、数据总线、控制总线等。存储器可以包括随机存取存储器，也可以包括非易失性存储器，例如至少一个磁盘存储器。可选的，存储器还可以是至少一个位于远离前述处理器的存储装置。上述的处理器可以是通用处理器，包括中央处理器、网络处理器等；还可以是数字信号处理器、专用集成电路、现场可编程门阵列或者其他可编程逻辑器件、分立门或者晶体管逻辑器件、分立硬件组件。根据本申请实施例的又一方面还提供了一种具有处理器可执行的非易失的程序代码的计算机可读介质。可选地，在本申请实施例中，计算机可读介质被设置为存储用于所述处理器执行上述方法的程序代码。可选地，本实施例中的具体示例可以参考上述实施例中所描述的示例，本实施例在此不再赘述。本申请实施例在具体实现时，可以参阅上述各个实施例，具有相应的技术效果。可以理解的是，本文描述的这些实施例可以用硬件、软件、固件、中间件、微码或其组合来实现。对于硬件实现，处理单元可以实现在一个或多个专用集成电路、数字信号处理器、数字信号处理设备、可编程逻辑设备、现场可编程门阵列、通用处理器、控制器、微控制器、微处理器、用于执行本申请所述功能的其它电子单元或其组合中。对于软件实现，可通过执行本文所述功能的单元来实现本文所述的技术。软件代码可存储在存储器中并通过处理器执行。存储器可以在处理器中或在处理器外部实现。本领域普通技术人员可以意识到，结合本文中所公开的实施例描述的各示例的单元及算法步骤，能够以电子硬件、或者计算机软件和电子硬件的结合来实现。这些功能究竟以硬件还是软件方式来执行，取决于技术方案的特定应用和设计约束条件。专业技术人员可以对每个特定的应用来使用不同方法来实现所描述的功能，但是这种实现不应认为超出本申请的范围。所属领域的技术人员可以清楚地了解到，为描述的方便和简洁，上述描述的系统、装置和单元的具体工作过程，可以参考前述方法实施例中的对应过程，在此不再赘述。在本申请所提供的实施例中，应该理解到，所揭露的装置和方法，可以通过其它的方式实现。例如，以上所描述的装置实施例仅仅是示意性的，例如，所述模块的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，例如多个模块或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另一点，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些接口，装置或单元的间接耦合或通信连接，可以是电性，机械或其它的形式。所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本申请各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。所述功能如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读取存储介质中。基于这样的理解，本申请实施例的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台计算机设备执行本申请各个实施例所述方法的全部或部分步骤。而前述的存储介质包括：U盘、移动硬盘、ROM、RAM、磁碟或者光盘等各种可以存储程序代码的介质。需要说明的是，在本文中，诸如“第一”和“第二”等之类的关系术语仅仅用来将一个实体或者操作与另一个实体或操作区分开来，而不一定要求或者暗示这些实体或操作之间存在任何这种实际的关系或者顺序。而且，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括所述要素的过程、方法、物品或者设备中还存在另外的相同要素。以上所述仅是本申请的具体实施方式，使本领域技术人员能够理解或实现本申请。对这些实施例的多种修改对本领域的技术人员来说将是显而易见的，本文中所定义的一般原理可以在不脱离本申请的精神或范围的情况下，在其它实施例中实现。因此，本申请将不会被限制于本文所示的这些实施例，而是要符合与本文所申请的原理和新颖特点相一致的最宽的范围。
