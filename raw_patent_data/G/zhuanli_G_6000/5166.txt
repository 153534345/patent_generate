标题title
数据交互方法、装置、计算机设备和存储介质
摘要abst
本申请涉及一种数据交互方法、装置、计算机设备和存储介质。所述方法包括：构建与通信信息相关的功能字和命令字，所述通信信息用于与软件系统进行交互；设置用于redis数据库发布和订阅的通道，来传输所述功能字和命令字；根据软件系统的功能进行进程定义和划分；实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；若是，则获取对应的通信信息并维护到目标进程的存储空间；将获取到的通信信息写入redis数据库中；将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。本方法提高了软件系统的稳定性和健壮性。
权利要求书clms
1.一种数据交互方法，其特征在于，包括：构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；根据软件系统的功能进行进程定义和划分；实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；响应于判断结果为是，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；判断目标进程获取到的通信信息是否需要写入redis数据库中；若是，则将获取到的通信信息写入redis数据库中；将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。2.根据权利要求1所述的数据交互方法，其特征在于，所述根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间，包括：根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息；判断所述获取到的通信信息是否合法；如果合法，则将获取到的通信信息维护到目标进程的存储空间。3.根据权利要求2所述的数据交互方法，其特征在于，如果获取到的通信信息不合法，则继续监听所述通道。4.根据权利要求1所述的数据交互方法，其特征在于，所述构建与软件系统进行交互的通信信息相关的功能字和命令字步骤中，所述功能字为按照功能进行分类后用于识别目标功能的标识符；所述命令字用于对目标功能下的不同交互信息类别进行划分。5.根据权利要求4所述的数据交互方法，其特征在于，所述功能字的取值范围为0~255；每一功能字用于识别软件系统中目标功能相关的数据或参数。6.根据权利要求4所述的数据交互方法，其特征在于，所述软件系统包括服务器中的基板管理控制器，以基板管理控制器中的功能划分为供电设备信息、传感器信息、图形处理器数据以及资产信息。7.根据权利要求4所述的数据交互方法，其特征在于，所述命令字的取值范围为0~255；所述命令字包括数据信息、属性信息、状态信息。8.根据权利要求1所述的数据交互方法，其特征在于，每个目标进程在启动时创建一个处理通信信息的目标线程，所述目标线程用于维护与目标进程相关的通信信息。9.根据权利要求1所述的数据交互方法，其特征在于，通过redis数据库的subscribe命令监听通道上发送过来的功能字和命令字。10.根据权利要求1所述的数据交互方法，其特征在于，若发生变更的功能字和/或命令字非目标进程需要或维护的数据信息时，继续监听所述通道。11.根据权利要求1所述的数据交互方法，其特征在于，根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息，包括：获取所述通道上发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否在本地维护列表中；若是，则根据变更的功能字和/或命令字从redis数据库中获取对应的通信信息。12.根据权利要求11所述的数据交互方法，其特征在于，若发生变更的功能字和/或命令字不在本地维护列表中，则继续监听所述通道。13.根据权利要求1所述的数据交互方法，其特征在于，所述将与该通信信息相关的功能字和命令字发布到所述通道上，包括：通过redis数据库的发布命令publish将与该通信信息相关的功能字和命令字发布到所述通道上。14.根据权利要求1所述的数据交互方法，其特征在于，参数包括通过web界面配置的参数；数据包括从图形处理器监控到的数据。15.一种数据交互装置，其特征在于，所述装置包括：功能字和命令字设置模块，用于构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；通道设置模块，用于设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；进程管理模块，用于根据软件系统的功能进行进程定义和划分；监听模块，用于实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；数据维护判断模块，用于判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；合法数据管理模块，用于响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；写入数据管理模块，用于判断目标进程获取到的通信信息是否需要写入redis数据库中；若是，则将获取到的通信信息写入redis数据库中；功能字和命令字发布模块，用于将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。16.根据权利要求15所述的数据交互装置，其特征在于，所述功能字和命令字设置模块包括：功能字设置模块，用于按照功能进行分类后用于识别目标功能的标识符设置为功能字；所述功能字的取值范围为0~255；每一功能字用于识别软件系统中目标功能相关的数据或参数；命令字设置模块，用于对目标功能下的不同交互信息类别进行划分的标识符设置为命令字；所述命令字的取值范围为0~255；所述命令字包括数据信息、属性信息、状态信息。17.根据权利要求15所述的数据交互装置，其特征在于，所述通道设置模块用于设置redis数据库发布和订阅的通道名称；所述redis数据库为一种通过键值对进行定义的内存型数据库；所述监听模块用于通过redis数据库的subscribe命令监听通道上发送过来的功能字和命令字；若发生变更的功能字和/或命令字非目标进程需要或维护的数据信息时，继续监听所述通道；所述合法数据管理模块用于获取所述通道上发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否在本地维护列表中；若是，则根据变更的功能字和/或命令字从redis数据库中获取对应的通信信息；若否，则继续监听所述通道；所述功能字和命令字发布模块用于通过redis数据库的发布命令publish将与该通信信息相关的功能字和命令字发布到所述通道上。18.根据权利要求17所述的数据交互装置，其特征在于，还包括：线程管理模块，用于在每个目标进程在启动时创建一个处理通信信息的目标线程，所述目标线程用于维护与目标进程相关的通信信息。19.一种计算机设备，包括存储器、处理器及存储在存储器上并可在处理器上运行的计算机程序，其特征在于，所述处理器执行所述计算机程序时实现权利要求1至14中任一项所述方法的步骤。20.一种计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现权利要求1至14中任一项所述的方法的步骤。
说明书desc
技术领域本申请涉及数据交互技术领域，特别是涉及一种数据交互方法、装置、计算机设备和存储介质。背景技术随着软件产业的不断持续快速增长，软件规模也在不断急速扩增，一个软件产品承载的功能也越来越丰富，这就要求架构师或程序开发人员在设计软件产品的架构的时候，必须进行模块化和解耦设计，力求模块和模块之间的耦合度越来越小，增强可维护程度和代码的稳定性。目前代码模块化设计包括代码管理模块化和代码逻辑模块化。其中代码管理的模块化主要为各功能模块采用代码包的形式进行管理，不同的代码包实现特定模块的功能，编译成特定的静态库或动态链接库。这种方案从代码管理的角度进行了模块化设计，但是当编译成静态库的时候则存在代码包之间的复杂依赖关系。代码逻辑模块化即为功能模块之间的逻辑模块化，涉及到模块和模块之间的数据交互，数据交互方式设计的好，会使得代码的模块解耦达到事半功倍的效果。但是目前常用的模块间的数据交互方案中，不同模块之间按照传统的进程间通信方式进行数据交互，例如使用socket通信、管道通信方式、共享内存通信方式等，这种方式属于linux系统提供的机制，在一定程度上具备一定的稳定性，也属于应用最广泛的数据交互方式，但是这种方式还是过于依赖其余功能模块的实现情况和稳定性状况。以服务器中BMC的功能为例，restful接口依赖于IPMI功能的实现和稳定性，当我们需要从web界面获取到对应的数据的时候，则需要restful接口首先创建socket与IPMI模块进行通信获取数据，一旦IPMI模块功能出现异常或IPMI进程异常退出，则会导致restful接口无法正常提供web服务。另外，socket通信，管道通信等方式只能实现两个功能模块之间的互相通信，无法实现多模块之间实现数据交互方式，使用共享内存的方式进行交互，多个进程和线程同时管理和处理同一片内存，容易造成一个功能模块出现问题将共享内存数据污染，导致其他模块也出现功能异常的情况，影响稳定性和代码的健壮性，并且共享内存中的数据变更无法侦测，存在大量无用的轮询的代码逻辑，影响系统性能和运行效率。发明内容基于此，有必要针对上述当前使用的模块间的数据交互方式存在缺陷的技术问题，提供一种数据交互方法、装置、计算机设备和存储介质。一方面，提供一种数据交互方法，所述方法包括：构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；根据软件系统的功能进行进程定义和划分；实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；判断目标进程获取到的通信信息是否需要写入redis数据库中；若是，则将获取到的通信信息写入redis数据库中；将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。在其中一个实施例中，所述构建与软件系统进行交互的通信信息相关的功能字和命令字步骤中，所述功能字为按照功能进行分类后用于识别目标功能的标识符；所述命令字用于对目标功能下的不同交互信息类别进行划分。在其中一个实施例中，所述功能字的取值范围为0~255；每一功能字用于识别软件系统中目标功能相关的数据或参数。在其中一个实施例中，所述软件系统包括服务器中的基板管理控制器，以基板管理控制器中的功能划分为供电设备信息、传感器信息、图形处理器数据以及资产信息。在其中一个实施例中，所述命令字的取值范围为0~255；所述命令字包括数据信息、属性信息、状态信息。在其中一个实施例中，所述根据软件系统的功能进行进程定义和划分步骤中，每个目标进程在启动时创建一个处理通信信息的目标线程，所述目标线程用于维护与目标进程相关的通信信息。在其中一个实施例中，所述设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字步骤中，设置用于redis数据库发布和订阅的通道名称；所述redis数据库为一种通过键值对进行定义的内存型数据库。在其中一个实施例中，所述实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字步骤，包括：通过redis数据库的subscribe命令监听所述通道名称对应的通道上发送过来的通信信息；当监听到通信信息发生变化时，通过所述通道中发送过来的功能字和命令字判断出是哪类参数数据中的哪个信息点发生的数据变更。在其中一个实施例中，在判断发生变更的通信信息是否为对应进程需要或维护的数据信息时，如果不是，则继续监听所述通道。在其中一个实施例中，所述根据所述通道上发生变更的通信信息的功能字和命令字，获取对应的通信信息，判断获取到的通信信息是否合法步骤，包括：获取所述通道上发生变更的通信信息的功能字和命令字；判断发生变更的通信信息的功能字和命令字是否在本地维护列表中；若发生变更的通信信息的功能字和命令字在本地维护列表中，则根据所述通道上发生变更的通信信息的功能字和命令字从redis数据库中获取对应的通信信息；判断获取到的通信信息是否合法。在其中一个实施例中，若发生变更的通信信息的功能字和命令字不在本地维护列表中，则继续监听所述通道。在其中一个实施例中，如果获取到的通信信息不合法，则继续监听所述通道。在其中一个实施例中，在所述将通信信息维护到对应进程的存储空间步骤之后，还包括：判断对应进程接收到对应的通信信息是否需要写入redis数据库中；若是，则将对应的通信信息写入redis数据库中；将与该通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。在其中一个实施例中，所述将与该通信信息相关的功能字和命令字发布到所述通道上，包括：通过redis数据库的发布命令publish将与该参数相关的功能字和命令字发布到所述通道名称对应的通道上。在其中一个实施例中，对应进程接收到对应的参数数据包括通过web界面配置的参数或从GPU等部件监控到的数据；当对应进程接收到对应的参数数据为通过web界面配置的参数或从GPU等部件监控到的数据时，判断对应进程接收到对应的通信信息需要写入redis数据库中。另一方面，提供了一种数据交互装置，所述装置包括：功能字和命令字设置模块，用于构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；通道设置模块，用于设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；进程管理模块，用于根据软件系统的功能进行进程定义和划分；监听模块，用于实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；数据维护判断模块，用于判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；合法数据管理模块，用于响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；判断目标进程获取到的通信信息是否需要写入redis数据库中；若是，则将获取到的通信信息写入redis数据库中；将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。在其中一个实施例中，所述功能字和命令字设置模块包括：功能字设置模块，用于按照功能进行分类后用于识别目标功能的标识符设置为功能字；所述功能字的取值范围为0~255；每一功能字用于识别软件系统中目标功能相关的数据或参数；命令字设置模块，用于对目标功能下的不同交互信息类别进行划分的标识符设置为命令字；所述命令字的取值范围为0~255；所述命令字包括数据信息、属性信息、状态信息。在其中一个实施例中，所述通道设置模块用于设置redis数据库发布和订阅的通道名称；所述redis数据库为一种通过键值对进行定义的内存型数据库；所述监听模块用于通过redis数据库的subscribe命令监听所述通道名称对应的通道上发送过来的通信信息；当监听到通信信息发生变化时，通过所述通道中发送过来的功能字和命令字判断出是哪类参数数据中的哪个信息点发生的数据变更；所述数据维护判断模块用于在判断发生变更的通信信息是否为对应进程需要或维护的数据信息时，如果不是，则继续监听所述通道；所述合法数据管理模块用于获取所述通道上发生变更的通信信息的功能字和命令字；判断发生变更的通信信息的功能字和命令字是否在本地维护列表中；若发生变更的通信信息的功能字和命令字不在本地维护列表中，则继续监听所述通道；若发生变更的通信信息的功能字和命令字在本地维护列表中，则根据所述通道上发生变更的通信信息的功能字和命令字从redis数据库中获取对应的通信信息；判断获取到的通信信息是否合法；如果获取到的通信信息不合法，则继续监听所述通道。在其中一个实施例中，所述数据交互装置还包括写入数据管理模块；所述写入数据管理模块用于判断对应进程接收到对应的通信信息是否需要写入redis数据库中；若是，则将对应的通信信息写入redis数据库中；通过redis数据库的发布命令publish将与该参数相关的功能字和命令字发布到所述通道名称对应的通道上，供其他进程应用。再一方面，提供了一种计算机设备，包括存储器、处理器及存储在存储器上并可在处理器上运行的计算机程序，所述处理器执行所述计算机程序时实现以下步骤：构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；根据软件系统的功能进行进程定义和划分；实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；判断目标进程获取到的通信信息是否需要写入redis数据库中；若是，则将获取到的通信信息写入redis数据库中；将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。又一方面，提供了一种计算机可读存储介质，其上存储有计算机程序，所述计算机程序被处理器执行时实现以下步骤：构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；根据软件系统的功能进行进程定义和划分；实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；判断目标进程获取到的通信信息是否需要写入redis数据库中；若是，则将获取到的通信信息写入redis数据库中；将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。上述数据交互方法、装置、计算机设备和存储介质，主要通过将每个进程都设计成通信信息的生产者和消费者，通过redis数据库的订阅机制监听整个软件系统中数据和参数的变化情况，然后根据本进程的需要，将redis数据库中存储的通信信息整合到本地进程的存储空间进行应用，提高了软件系统的稳定性和健壮性，可以适用于所有应用redis数据库的软件系统，提高了软件产品的竞争力。本申请上述数据交互方法，基于redis数据库的发布订阅机制实现BMC各模块解耦，具备以下几个方面的优点：1.通过redis数据库的发布和订阅机制使得软件系统中的不同的模块实现了完全解耦，每个进程只需要关注与本进程相关的数据即可，即使其他的进程出现了挂死的情况，本进程也可以根据自身获取到的通信信息维护本地进程的正常运行；2.将redis数据库中的参数数据整合到本地的内存空间的方式，使得即使redis数据库出现击穿奔溃等情况，也不会影响本地进程的正常运行，并且在整合之前针对参数数据的合法性进行有效校验，保证本地存储空间的数据的合法性；3.redis消息通道中的每条消息都只包含功能字和命令字，只占用2个字节的内存空间，这样当某时刻消费者的速率慢于生产者的速率的时候，只要不会永久出现消费者慢于生产者的情况，都可以保证软件系统的正常运行，不会出现内存被撑爆的常见问题；4.进行事件订阅的时候处于阻塞状态，不占用CPU的系统资源，相对于轮询的方式效率更高，占用的系统资源更少；5.针对订阅和发布通道的命名可以根据自身软件系统的需要进行分类和多个命名，实现更加灵活的应用。附图说明为了更清楚地说明本发明实施例中的技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为一个实施例中数据交互方法的应用环境图；图2为一个实施例中数据交互方法的流程示意图；图3为一个实施例中根据通道上发送过来的功能字和命令字，从redis数据库中获取对应的参数数据，判断获取到的参数数据是否合法步骤的流程示意图；图4为另一个实施例中数据交互方法的流程示意图；图5为一个实施例中实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字步骤的流程示意图；图6为一个实施例中根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间步骤的流程示意图；图7为一个实施例中根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息步骤的流程示意图；图8为一个实施例中数据交互装置的结构框图；图9为一个实施例中计算机设备的内部结构图。具体实施方式为了使本申请的目的、技术方案及优点更加清楚明白，以下结合附图及实施例，对本申请进行进一步详细说明。应当理解，此处描述的具体实施例仅仅用以解释本申请，并不用于限定本申请。实施例1本发明实施例1中提出了一种数据交互方法，为一种基于redis数据库的发布订阅机制实现BMC各模块解耦和数据交互的方法。本申请提供的数据交互方法，可以应用于如图1所示的应用环境中。其中，终端102通过网络与服务器104通过网络进行通信。其中，终端102可以但不限于是各种个人计算机、笔记本电脑、智能手机、平板电脑和便携式可穿戴设备，服务器104可以用独立的服务器或者是多个服务器组成的服务器集群来实现。服务器104中设有基板管理控制器。在本实施例中，如图2所示，提供了一种数据交互方法，以该方法应用于图1中的服务器104为例进行说明，主要实现步骤如下所示：步骤S11：针对整个软件系统构建需要交互的通信信息相关的功能字和命令字，其中所述通信信息包括参数和/或数据。所谓功能字，即为按照功能进行分类后用于识别目标功能的标识符。以服务器中BMC中的功能划分，比方说PSU信息属于一类，Sensor信息属于一类，GPU数据属于一类，资产信息属于一类，则可以将PSU信息的功能字定义为0x00，Sensor信息的功能字定义为0x01，GPU数据的功能字定义为0x02，资产信息的功能字定义为0x03，命令字属于功能字下面的细分，比方说Sensor信息，可能包含Sensor数据信息、Sensor属性信息、Sensor状态信息等，这些可以通过命令字进行区分，基于上述阐述，功能字和命令字的定义如下表所示。步骤S12：设计用于redis数据库发布和订阅的通道名称，用于针对整个软件系统的通信信息的变更提供通知的通道，目前将所述通道命名为AllParamDataChannel；步骤S13：按照功能针对软件系统进行进程定义和划分，每个进程在发起的时候会启动一个特定的通信信息处理线程。该线程的主要作用就是用于维护与对应进程相关的通信信息。通过redis数据库的subscribe命令监听AllParamDataChannel通道上发送过来的通信信息，当监听到通信信息发生变化的时候，则会从通道中发送过来的功能字和命令字判断出具体是那类参数数据中的哪个信息点发生的数据变更，判断该数据是否为对应进程需要或维护的数据信息，如果是，则转步骤S14，如果不是则继续监听AllParamDataChannel通道上的信息变化；步骤S14：根据通道上发送过来的功能字和命令字，从redis数据库中获取对应的参数数据，判断获取到的参数数据是否合法，如果不合法则继续监听AllParamDataChannel通道，如果合法，则将参数数据维护到对应进程的存储空间，具体执行流程图如图3所示。步骤S15：当对应进程接收到对应的参数数据比方说通过web界面配置的参数或从GPU等部件监控到的数据需要写入redis数据库的时候，则首先将通信信息写入redis数据库，然后通过redis数据库的发布命令publish将与该参数相关的功能字和命令字发布到AllParamDataChannel通道上，供其他进程应用。其中，redis数据库为一种通过键值对进行定义的内存型数据库，速度快。上述数据交互方法中，主要通过将每个进程都设计成通信信息的生产者和消费者，通过redis数据库的订阅机制监听整个软件系统中数据和参数的变化情况，然后根据本进程的需要，将redis数据库中存储的通信信息整合到本地进程的存储空间进行应用，提高了软件系统的稳定性和健壮性，可以适用于所有应用redis数据库的软件系统，提高了软件产品的竞争力。本申请上述数据交互方法，基于redis数据库的发布订阅机制实现BMC各模块解耦，具备以下几个方面的优点：1.通过redis数据库的发布和订阅机制使得软件系统中的不同的模块实现了完全解耦，每个进程只需要关注与本进程相关的数据即可，即使其他的进程出现了挂死的情况，本进程也可以根据自身获取到的通信信息维护本地进程的正常运行；2.将redis数据库中的参数数据整合到本地的内存空间的方式，使得即使redis数据库出现击穿奔溃等情况，也不会影响本地进程的正常运行，并且在整合之前针对参数数据的合法性进行有效校验，保证本地存储空间的数据的合法性；3.redis消息通道中的每条消息都只包含功能字和命令字，只占用2个字节的内存空间，这样当某时刻消费者的速率慢于生产者的速率的时候，只要不会永久出现消费者慢于生产者的情况，都可以保证软件系统的正常运行，不会出现内存被撑爆的常见问题；4.进行事件订阅的时候处于阻塞状态，不占用CPU的系统资源，相对于轮询的方式效率更高，占用的系统资源更少；5.针对订阅和发布通道的命名可以根据自身软件系统的需要进行分类和多个命名，实现更加灵活的应用。实施例2本申请实施例2中提供的数据交互方法，可以应用于如图1所示的应用环境中。其中，终端102通过网络与服务器104通过网络进行通信。其中，终端102可以但不限于是各种个人计算机、笔记本电脑、智能手机、平板电脑和便携式可穿戴设备，服务器104可以用独立的服务器或者是多个服务器组成的服务器集群来实现。服务器104中设有基板管理控制器。在本实施例中，如图4所示，提供了一种数据交互方法，以该方法应用于图1中的服务器104为例进行说明，包括以下步骤：步骤S1，构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；步骤S2，设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；步骤S3，根据软件系统的功能进行进程定义和划分；每个目标进程在启动时创建一个处理通信信息的目标线程，所述目标线程用于维护与目标进程相关的通信信息；步骤S4，实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；步骤S5，判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；步骤S6，响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；步骤S7，判断目标进程获取到的通信信息是否需要写入redis数据库中；步骤S8，若是，则将获取到的通信信息写入redis数据库中；步骤S9，将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。在本实施例中，所述构建与软件系统进行交互的通信信息相关的功能字和命令字步骤中，所述功能字为按照功能进行分类后用于识别目标功能的标识符；所述命令字用于对目标功能下的不同交互信息类别进行划分。在本实施例中，所述功能字的取值范围为0~255；每一功能字用于识别软件系统中目标功能相关的数据或参数。在本实施例中，所述软件系统包括服务器中的基板管理控制器，以基板管理控制器中的功能划分为供电设备信息、传感器信息、图形处理器数据以及资产信息；其中，将供电设备信息的功能字定义为0x00，传感器信息的功能字定义为0x01，图形处理器数据的功能字定义为0x02，资产信息的功能字定义为0x03。在本实施例中，所述命令字的取值范围为0~255；所述命令字包括数据信息、属性信息、状态信息。基于上述阐述，功能字和命令字的定义如下表所示。在本实施例中，所述设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字步骤中，设置用于redis数据库发布和订阅的通道名称；所述通道为redis数据库发布和订阅的通道；所述redis数据库为一种通过键值对进行定义的内存型数据库。如图5所示，在本实施例中，所述实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字步骤，包括：步骤S41，通过redis数据库的subscribe命令监听通道上发送过来的功能字和命令字；步骤S42，当监听到通信信息发生变化时，通过所述通道中发送过来的功能字和命令字判断出是哪类参数数据中的哪个信息点发生的数据变更。在本实施例中，在判断发生变更的通信信息是否为对应进程需要或维护的数据信息时，如果不是，则继续监听所述通道。也就是若发生变更的功能字和/或命令字非目标进程需要或维护的数据信息时，继续监听所述通道。如图6所示，在本实施例中，所述根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间，包括：步骤S61，根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息；步骤S62，判断所述获取到的通信信息是否合法；步骤S63，如果合法，则将获取到的通信信息维护到目标进程的存储空间；步骤S64，如果获取到的通信信息不合法，则继续监听所述通道。如图7所示，在本实施例中，所述根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息步骤，包括：步骤S611，获取所述通道上发生变更的功能字和/或命令字；步骤S612，判断发生变更的功能字和/或命令字是否在本地维护列表中；步骤S613，若是，则根据变更的功能字和/或命令字从redis数据库中获取对应的通信信息；若否，则继续监听所述通道。在本实施例中，所述将与该通信信息相关的功能字和命令字发布到所述通道上，包括：通过redis数据库的发布命令publish将与该通信信息相关的功能字和命令字发布到所述通道上。在本实施例中，对应进程接收到对应的参数数据包括通过web界面配置的参数或从GPU等部件监控到的数据；当对应进程接收到对应的参数数据为通过web界面配置的参数或从GPU等部件监控到的数据时，判断对应进程接收到对应的通信信息需要写入redis数据库中。也就是说，参数包括通过web界面配置的参数；数据包括从图形处理器监控到的数据。上述数据交互方法中，主要通过将每个进程都设计成通信信息的生产者和消费者，通过redis数据库的订阅机制监听整个软件系统中数据和参数的变化情况，然后根据本进程的需要，将redis数据库中存储的通信信息整合到本地进程的存储空间进行应用，提高了软件系统的稳定性和健壮性，可以适用于所有应用redis数据库的软件系统，提高了软件产品的竞争力。本申请上述数据交互方法，基于redis数据库的发布订阅机制实现BMC各模块解耦，具备以下几个方面的优点：1.通过redis数据库的发布和订阅机制使得软件系统中的不同的模块实现了完全解耦，每个进程只需要关注与本进程相关的数据即可，即使其他的进程出现了挂死的情况，本进程也可以根据自身获取到的通信信息维护本地进程的正常运行；2.将redis数据库中的参数数据整合到本地的内存空间的方式，使得即使redis数据库出现击穿奔溃等情况，也不会影响本地进程的正常运行，并且在整合之前针对参数数据的合法性进行有效校验，保证本地存储空间的数据的合法性；3.redis消息通道中的每条消息都只包含功能字和命令字，只占用2个字节的内存空间，这样当某时刻消费者的速率慢于生产者的速率的时候，只要不会永久出现消费者慢于生产者的情况，都可以保证软件系统的正常运行，不会出现内存被撑爆的常见问题；4.进行事件订阅的时候处于阻塞状态，不占用CPU的系统资源，相对于轮询的方式效率更高，占用的系统资源更少；5.针对订阅和发布通道的命名可以根据自身软件系统的需要进行分类和多个命名，实现更加灵活的应用。应该理解的是，虽然图2-图6的流程图中的各个步骤按照箭头的指示依次显示，但是这些步骤并不是必然按照箭头指示的顺序依次执行。除非本文中有明确的说明，这些步骤的执行并没有严格的顺序限制，这些步骤可以以其它的顺序执行。而且，图2-图6中的至少一部分步骤可以包括多个子步骤或者多个阶段，这些子步骤或者阶段并不必然是在同一时刻执行完成，而是可以在不同的时刻执行，这些子步骤或者阶段的执行顺序也不必然是依次进行，而是可以与其它步骤或者其它步骤的子步骤或者阶段的至少一部分轮流或者交替地执行。实施例3在实施例3中，如图8所示，提供了一种数据交互装置10，包括：功能字和命令字设置模块1、通道设置模块2、进程管理模块3、监听模块4、数据维护判断模块5、合法数据管理模块6、写入数据管理模块7以及功能字和命令字发布模块8。所述功能字和命令字设置模块1用于构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据。所述通道设置模块2用于设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字。所述进程管理模块3用于根据软件系统的功能进行进程定义和划分；每个目标进程在启动时创建一个处理通信信息的目标线程，所述目标线程用于维护与目标进程相关的通信信息。所述监听模块4用于实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字。所述数据维护判断模块5用于判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息。所述合法数据管理模块6用于响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；所述写入数据管理模块7用于判断对应进程接收到对应的通信信息是否需要写入redis数据库中；若是，则将对应的通信信息写入redis数据库中。所述功能字和命令字发布模块8用于将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。其中通过redis数据库的发布命令publish将与该参数相关的功能字和命令字发布到所述通道上。如图8所示，在本实施例中，所述功能字和命令字设置模块1包括：功能字设置模块11和命令字设置模块12。功能字设置模块11，用于按照功能进行分类后用于识别目标功能的标识符设置为功能字；所述功能字的取值范围为0~255；每一功能字用于识别软件系统中目标功能相关的数据或参数。命令字设置模块12，用于对目标功能下的不同交互信息类别进行划分的标识符设置为命令字；所述命令字的取值范围为0~255；所述命令字包括数据信息、属性信息、状态信息。在其中一个实施例中，所述通道设置模块2用于设置redis数据库发布和订阅的通道名称；所述redis数据库为一种通过键值对进行定义的内存型数据库。所述监听模块4用于通过redis数据库的subscribe命令监听通道上发送过来的功能字和命令字；若发生变更的功能字和/或命令字非目标进程需要或维护的数据信息时，继续监听所述通道。所述数据维护判断模块5用于在判断发生变更的通信信息是否为对应进程需要或维护的数据信息时，如果不是，则继续监听所述通道。所述合法数据管理模块6用于获取所述通道上发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否在本地维护列表中；若是，则根据变更的功能字和/或命令字从redis数据库中获取对应的通信信息；若否，则继续监听所述通道。所述功能字和命令字发布模块8用于通过redis数据库的发布命令publish将与该通信信息相关的功能字和命令字发布到所述通道上。在本实施例中，所述软件系统包括服务器中的基板管理控制器，以基板管理控制器中的功能划分为供电设备信息、传感器信息、图形处理器数据以及资产信息；其中，将供电设备信息的功能字定义为0x00，传感器信息的功能字定义为0x01，图形处理器数据的功能字定义为0x02，资产信息的功能字定义为0x03。如图8所示，在本实施例中，所述数据交互装置10还包括线程管理模块9。所述线程管理模块9用于在每个目标进程在启动时创建一个处理通信信息的目标线程，所述目标线程用于维护与目标进程相关的通信信息。在本实施例中，对应进程接收到对应的参数数据包括通过web界面配置的参数或从GPU等部件监控到的数据；当对应进程接收到对应的参数数据为通过web界面配置的参数或从GPU等部件监控到的数据时，判断对应进程接收到对应的通信信息需要写入redis数据库中。上述数据交互装置中，主要通过将每个进程都设计成通信信息的生产者和消费者，通过redis数据库的订阅机制监听整个软件系统中数据和参数的变化情况，然后根据本进程的需要，将redis数据库中存储的通信信息整合到本地进程的存储空间进行应用，提高了软件系统的稳定性和健壮性，可以适用于所有应用redis数据库的软件系统，提高了软件产品的竞争力。本申请上述数据交互装置，基于redis数据库的发布订阅机制实现BMC各模块解耦，具备以下几个方面的优点：1.通过redis数据库的发布和订阅机制使得软件系统中的不同的模块实现了完全解耦，每个进程只需要关注与本进程相关的数据即可，即使其他的进程出现了挂死的情况，本进程也可以根据自身获取到的通信信息维护本地进程的正常运行；2.将redis数据库中的参数数据整合到本地的内存空间的方式，使得即使redis数据库出现击穿奔溃等情况，也不会影响本地进程的正常运行，并且在整合之前针对参数数据的合法性进行有效校验，保证本地存储空间的数据的合法性；3.redis消息通道中的每条消息都只包含功能字和命令字，只占用2个字节的内存空间，这样当某时刻消费者的速率慢于生产者的速率的时候，只要不会永久出现消费者慢于生产者的情况，都可以保证软件系统的正常运行，不会出现内存被撑爆的常见问题；4.进行事件订阅的时候处于阻塞状态，不占用CPU的系统资源，相对于轮询的方式效率更高，占用的系统资源更少；5.针对订阅和发布通道的命名可以根据自身软件系统的需要进行分类和多个命名，实现更加灵活的应用。关于数据交互装置的具体限定可以参见上文中对于数据交互方法的限定，在此不再赘述。上述数据交互装置中的各个模块可全部或部分通过软件、硬件及其组合来实现。上述各模块可以硬件形式内嵌于或独立于计算机设备中的处理器中，也可以以软件形式存储于计算机设备中的存储器中，以便于处理器调用执行以上各个模块对应的操作。实施例4在实施例4中，提供了一种计算机设备，该计算机设备可以是服务器，其内部结构图可以如图9所示。该计算机设备包括通过系统总线连接的处理器、存储器、网络接口和数据库。其中，该计算机设备的处理器用于提供计算和控制能力。该计算机设备的存储器包括非易失性存储介质、内存储器。该非易失性存储介质存储有操作系统、计算机程序和数据库。该内存储器为非易失性存储介质中的操作系统和计算机程序的运行提供环境。该计算机设备的数据库用于存储数据交互数据。该计算机设备的网络接口用于与外部的终端通过网络连接通信。该计算机程序被处理器执行时以实现一种数据交互方法。本领域技术人员可以理解，图9中示出的结构，仅仅是与本申请方案相关的部分结构的框图，并不构成对本申请方案所应用于其上的计算机设备的限定，具体的计算机设备可以包括比图中所示更多或更少的部件，或者组合某些部件，或者具有不同的部件布置。在一个实施例中，提供了一种计算机设备，包括存储器、处理器及存储在存储器上并可在处理器上运行的计算机程序，处理器执行计算机程序时实现以下步骤：构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；根据软件系统的功能进行进程定义和划分；每个目标进程在启动时创建一个处理通信信息的目标线程，所述目标线程用于维护与目标进程相关的通信信息；实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；判断目标进程获取到的通信信息是否需要写入redis数据库中；若是，则将获取到的通信信息写入redis数据库中；将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。关于处理器执行计算机程序时实现步骤的具体限定可以参见上文中对于数据交互的方法的限定，在此不再赘述。实施例5在实施例5中，提供了一种计算机可读存储介质，其上存储有计算机程序，计算机程序被处理器执行时实现以下步骤：构建与通信信息相关的功能字和命令字，其中所述通信信息用于与软件系统进行交互，所述通信信息包括参数和/或数据；设置用于redis数据库发布和订阅的通道，所述通道用于传输所述功能字和命令字；根据软件系统的功能进行进程定义和划分；每个目标进程在启动时创建一个处理通信信息的目标线程，所述目标线程用于维护与目标进程相关的通信信息；实时监听所述通道上的功能字和命令字，识别出发生变更的功能字和/或命令字；判断发生变更的功能字和/或命令字是否为目标进程需要或维护的数据信息；响应于判断结果为发生变更的功能字和/或命令字是目标进程需要或维护的数据信息，则根据所述通道上发生变更的功能字和/或命令字获取对应的通信信息并维护到目标进程的存储空间；判断目标进程获取到的通信信息是否需要写入redis数据库中；若是，则将获取到的通信信息写入redis数据库中；将与该获取到的通信信息相关的功能字和命令字发布到所述通道上，供其他进程应用。关于计算机程序被处理器执行时实现步骤的具体限定可以参见上文中对于数据交互的方法的限定，在此不再赘述。本领域普通技术人员可以理解实现上述实施例方法中的全部或部分流程，是可以通过计算机程序来指令相关的硬件来完成，所述的计算机程序可存储于一非易失性计算机可读取存储介质中，该计算机程序在执行时，可包括如上述各方法的实施例的流程。其中，本申请所提供的各实施例中所使用的对存储器、存储、数据库或其它介质的任何引用，均可包括非易失性和/或易失性存储器。非易失性存储器可包括只读存储器、可编程ROM、电可编程ROM、电可擦除可编程ROM或闪存。易失性存储器可包括随机存取存储器或者外部高速缓冲存储器。作为说明而非局限，RAM以多种形式可得，诸如静态RAM、动态RAM、同步DRAM、双数据率SDRAM、增强型SDRAM、同步链路DRAM、存储器总线直接RAM、直接存储器总线动态RAM、以及存储器总线动态RAM等。以上实施例的各技术特征可以进行任意的组合，为使描述简洁，未对上述实施例中的各个技术特征所有可能的组合都进行描述，然而，只要这些技术特征的组合不存在矛盾，都应当认为是本说明书记载的范围。以上所述实施例仅表达了本申请的几种实施方式，其描述较为具体和详细，但并不能因此而理解为对发明专利范围的限制。应当指出的是，对于本领域的普通技术人员来说，在不脱离本申请构思的前提下，还可以做出若干变形和改进，这些都属于本申请的保护范围。因此，本申请专利的保护范围应以所附权利要求为准。
