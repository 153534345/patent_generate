标题title
一种固件升级方法、装置以及存储介质和电子设备
摘要abst
本发明实施例公开了一种固件升级方法、装置以及存储介质和电子设备，其中方法包括：获取待升级固件；采集节点间的RSSI强度；根据节点间的RSSI强度动态生成升级链路树；根据所述升级链路树将所述待升级固件传送给相应节点或发送升级指令使该节点给其他节点进行升级，并根据升级结果更新所述升级链路树，通过本发明，可解决通过Lora模块进行固件升级速度慢、效率低的问题。
权利要求书clms
1.一种固件升级方法，应用于中心节点，包括以下步骤：获取待升级固件；采集节点间的RSSI强度；根据节点间的RSSI强度动态生成升级链路树；根据所述升级链路树将所述待升级固件传送给相应节点或发送升级指令使该节点给其他节点进行升级，并根据升级结果更新所述升级链路树。2.如权利要求1所述的一种固件升级方法，其特征在于：所述根据节点间的RSSI强度动态生成升级链路树的步骤中，以各节点间的RSSI强度作为权值，采用KM算法态生成最优匹配的固件传输链路，形成所述升级链路树。3.如权利要求1所述的一种固件升级方法，其特征在于：所述根据节点间的RSSI强度动态生成升级链路树的步骤，具体为：将网络中拥有所述待升级固件的节点置于第一集合，将未拥有所述待升级固件的节点置于第二集合，当生成所述升级链路树第一层节点时，第一集合中只有中心节点，选取RSSI最强的终端节点作为最优升级路径，并在升级完成后更新第一集合和第二集合；当生成升级链路树第i层节点时，第一集合中拥有2i-1个节点，采用KM算法寻找2i-1条RSSI最优的升级路径，并更新第一集合和第二集合，直到将所有终端节点都分配到所述升级链路树中。4.如权利要求1所述的一种固件升级方法，其特征在于：在所述获取待升级固件的步骤中，在获取到所述待升级固件后，将所述待升级固件按照预设长度进行切片，并增加切片的偏移地址和循环冗余校验码。5.如权利要求4所述的一种固件升级方法，其特征在于，所述根据所述升级链路树将所述待升级固件传送给相应节点进行升级，并在升级完成后，更新所述升级链路树的步骤，包括：步骤1，根据所述升级链路树向目标节点发送所述待升级固件的切片数据包或发送升级指令使该目标节点给其他节点进行升级；步骤2，对于目标节点返回的对切片数据包的响应消息，若响应成功，则进入步骤3，否则记录失败次数，并判断失败次数是否超过预设阈值，若超过，则更新所述升级链路树并返回步骤1更换目标节点，否则返回步骤1继续尝试向当前目标节点继续发送所述待升级固件的切片数据包；对于目标节点返回的对升级指令的响应消息，若响应成功，进入步骤3，若响应不成功，更新所述升级链路树并返回步骤1更换目标节点；步骤3，当接收到当前目标节点升级完成通知，判断是否所有目标节点升级完成，若有目标节点未完成升级，则返回步骤1进行下一目标节点的升级，直至所有目标节点升级完成。6.一种固件升级方法，应用于终端节点，包括以下步骤：当接收到RSSI强度采集指令时，检测并采集周围节点的RSSI强度，并发送至中心节点；接收校验所述待升级固件并响应，根据所述待升级固件进行升级并返回升级结果至中心节点；接收升级指令，根据所述升级指令将待升级固件传送给相应终端节点进行升级。7.一种固件升级装置，应用于中心节点，包括：待升级固件获取模块，用于获取待升级固件各节点RSSI强度采集模块，用于采集节点间的RSSI强度；升级链路树生成模块，用于根据节点间的RSSI强度动态生成升级链路树；固件升级处理模块，用于根据所述升级链路树将所述待升级固件传送给相应节点或发送升级指令使该节点给其他节点进行升级，并根据升级结果更新所述升级链路树。8.一种固件升级装置，应用于终端节点，包括：RSSI强度采集模块，用于在接收到RSSI强度采集指令时，检测并采集周围节点的RSSI强度，并发送至中心节点；待升级固件接收升级模块，用于接收校验待升级固件的切片数据包并响应，对接收的待升级固件的完整性进行校验，根据所述待升级固件进行升级，并返回升级结果至中心节点；升级处理模块，用于接收升级指令，根据所述升级指令将待升级固件传送给相应节点进行升级。9.一种存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1至5任意一项所述可配置的固件升级方法的步骤。10.一种电子设备，包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，其特征在于，所述处理器执行所述计算机程序时实现如权利要求1至5任意一项所述固件升级方法的步骤。
说明书desc
技术领域本发明涉及物联网技术领域，尤其是一种基于Lora技术的固件快速升级方法、装置以及存储介质和电子设备。背景技术LoRa是semtech公司开发的一种低功耗局域网无线标准，其名称“LoRa”是远距离无线电，它最大特点是在同样的功耗条件下比其他无线方式传播的距离更远，实现了低功耗和远距离的统一。随着物联网技术的发展，Lora技术由于其具有功耗低、传输距离远以及成本低的优势，广泛应用于智慧城市、智慧农业、智慧工业等领域。然而，由于其通信速率较低，传输可靠性易受环境影响，导致通过Lora模块进行固件升级难以实现。例如，假设一个星形网络中存在一个网关和n个终端，如果通过网关给n个终端逐个进行升级，并同时增加丢包校验的逻辑，虽然可以确保固件的完整性，但所耗费的时间复杂度为O；而如果采用广播的形式进行升级，所耗费的时间复杂度为O，但是升级链路易受环境干扰，存在丢包的风险，固件的完整性无法得到保证。基于以上问题的存在，目前市面上终端设备大多无法基于Lora技术进行固件升级，或者采用逐个升级的方式，但升级过程中将可能导致整个系统瘫痪长达几个小时甚至几天之久，效率低下。发明内容为克服上述现有技术存在的不足，本发明之目的在于提供一种固件升级方法、装置以及存储介质和电子设备，以解决目前通过Lora模块进行固件升级速度慢、效率低的问题。为达上述目的，本发明实施例提供一种固件升级方法，应用于中心节点，包括以下步骤：获取待升级固件；采集节点间的RSSI强度；根据节点间的RSSI强度动态生成升级链路树；根据所述升级链路树将所述待升级固件传送给相应节点或发送升级指令使该节点给其他节点进行升级，并根据升级结果更新所述升级链路树。可选地，所述根据节点间的RSSI强度动态生成升级链路树的步骤中，以各节点间的RSSI强度作为权值，采用KM算法态生成最优匹配的固件传输链路，形成所述升级链路树。可选地，所述根据节点间的RSSI强度动态生成升级链路树的步骤，具体为：将网络中拥有所述待升级固件的节点置于第一集合，将未拥有所述待升级固件的节点置于第二集合，当生成所述升级链路树第一层节点时，第一集合中只有中心节点，选取RSSI最强的终端节点作为最优升级路径，并在升级完成后更新第一集合和第二集合；当生成升级链路树第i层节点时，第一集合中拥有2i-1个节点，采用KM算法寻找2i-1条RSSI最优的升级路径，并更新第一集合和第二集合，直到将所有终端节点都分配到所述升级链路树中。可选地，在所述获取待升级固件的步骤中，在获取到所述待升级固件后，将所述待升级固件按照预设长度进行切片，并增加切片的偏移地址和循环冗余校验码。可选地，所述根据所述升级链路树将所述待升级固件传送给相应节点进行升级，并在所有节点升级完成后，更新所述升级链路树的步骤，包括：步骤1，根据所述升级链路树向目标节点发送所述待升级固件的切片数据包或发送升级指令使该目标节点给其他节点进行升级；步骤2，对于目标节点返回的对切片数据包的响应消息，若响应成功，则进入步骤3，否则记录失败次数，并判断失败次数是否超过预设阈值，若超过，则更新所述升级链路树并返回步骤1更换目标节点，否则返回步骤1继续尝试向当前目标节点继续发送所述待升级固件的切片数据包；对于目标节点返回的对升级指令的响应消息，若响应成功，进入步骤3，若响应不成功，更新所述升级链路树并返回步骤1更换目标节点；步骤3，当接收到当前目标节点升级完成通知，判断是否所有目标节点升级完成，若有目标节点未完成升级，则返回步骤1进行下一目标节点的升级，直至所有目标节点升级完成。为达上述目的，本发明实施例提供一种固件升级方法，应用于终端节点，包括以下步骤：当接收到RSSI强度采集指令时，检测并采集周围节点的RSSI强度，并发送至中心节点；接收校验所述待升级固件并响应，根据所述待升级固件进行升级并返回升级结果至中心节点；接收升级指令，根据所述升级指令将待升级固件传送给相应终端节点进行升级。为达上述目的，本发明实施例提供一种固件升级装置，应用于中心节点，包括：待升级固件获取模块，用于获取待升级固件各节点RSSI强度采集模块，用于采集节点间的RSSI强度； ；升级链路树生成模块，用于根据节点间的RSSI强度动态生成升级链路树；固件升级处理模块，用于根据所述升级链路树将所述待升级固件传送给相应节点或发送升级指令使该节点给其他节点进行升级，并根据升级结果更新所述升级链路树。为达上述目的，本发明实施例提供一种固件升级装置，应用于终端节点，包括：RSSI强度采集模块，用于在接收到RSSI强度采集指令时，检测并采集周围节点的RSSI强度，并发送至中心节点；待升级固件接收升级模块，用于接收校验待升级固件的切片数据包并响应，对接收的待升级固件的完整性进行校验，根据所述待升级固件进行升级，并返回升级结果至中心节点；升级处理模块，用于接收升级指令，根据所述升级指令将待升级固件传送给相应节点进行升级。为达上述目的，本发明实施例提供一种存储介质，其上存储有计算机程序，所述计算机程序被处理器执行时实现上述固件升级方法的步骤。为达上述目的，本发明实施例提供一种电子设备，包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，所述处理器执行所述计算机程序时实现上述固件升级方法的步骤。与现有技术相比，本发明一种固件升级方法、装置以及存储介质和电子设备以节点间的RSSI强度作为权值，并采用KM算法多次运算动态生成升级链路树，然后根据所述升级链路树将待升级固件传送给相应节点进行升级，其固件包的传输可以由任意节点到任意节点，从而使得固件升级可以并发进行，大大提高了固件升级的速度，节省了固件升级时间。下面通过附图和实施例，对本发明的技术方案做进一步的详细描述。附图说明通过结合附图对本发明实施例进行更详细的描述，本发明的上述以及其他目的、特征和优势将变得更加明显。附图用来提供对本发明实施例的进一步理解，并且构成说明书的一部分，与本发明实施例一起用于解释本发明，并不构成对本发明的限制。在附图中，相同的参考标号通常代表相同部件或步骤。图1是本发明所应用的星形网络的拓扑结构图；图2是本发明一示例性实施例提供的一种固件升级方法的流程示意图；图3为本发明实施例中升级链路树的示意图；图4是本发明另一示例性实施例提供的一种固件升级方法的流程示意图图5是本发明一示例性实施例提供的一种固件升级装置的结构示意图；图6是本发明另一示例性实施例提供的一种固件升级装置的结构示意图；图7是本发明具体实施例所应用的星形网络的拓扑结构图；图8是本发明具体实施例中固件升级方法的流程图；图9是本发明一示例性实施例提供的电子设备的结构。具体实施方式下面，将参考附图详细地描述根据本发明的示例实施例。显然，所描述的实施例仅仅是本发明的一部分实施例，而不是本发明的全部实施例，应理解，本发明不受这里描述的示例实施例的限制。应注意到：除非另外具体说明，否则在这些实施例中阐述的部件和步骤的相对布置、数字表达式和数值不限制本发明的范围。本领域技术人员可以理解，本发明实施例中的“第一”、“第二”等术语仅用于区别不同步骤、设备或模块等，既不代表任何特定技术含义，也不表示它们之间的必然逻辑顺序。还应理解，在本发明实施例中，“多个”可以指两个或两个以上，“至少一个”可以指一个、两个或两个以上。还应理解，对于本发明实施例中提及的任一部件、数据或结构，在没有明确限定或者在前后文给出相反启示的情况下，一般可以理解为一个或多个。另外，本发明中术语“和/或”，仅仅是一种描述关联对象的关联关系，表示可以存在三种关系，例如，A和/或B，可以表示：单独存在A，同时存在A和B，单独存在B这三种情况。另外，本发明中字符“/”，一般表示前后关联对象是一种“或”的关系。还应理解，本发明对各个实施例的描述着重强调各个实施例之间的不同之处，其相同或相似之处可以相互参考，为了简洁，不再一一赘述。同时，应当明白，为了便于描述，附图中所示出的各个部分的尺寸并不是按照实际的比例关系绘制的。以下对至少一个示例性实施例的描述实际上仅仅是说明性的，决不作为对本发明及其应用或使用的任何限制。对于相关领域普通技术人员已知的技术、方法和设备可能不作详细讨论，但在适当情况下，技术、方法和设备应当被视为说明书的一部分。应注意到：相似的标号和字母在下面的附图中表示类似项，因此，一旦某一项在一个附图中被定义，则在随后的附图中不需要对其进行进一步讨论。本发明实施例可以应用于终端设备、计算机系统、服务器等电子设备，其可与众多其它通用或专用计算系统环境或配置一起操作。适于与终端设备、计算机系统、服务器等电子设备一起使用的众所周知的终端设备、计算系统、环境和/或配置的例子包括但不限于：个人计算机系统、服务器计算机系统、瘦客户机、厚客户机、手持或膝上设备、基于微处理器的系统、机顶盒、可编程消费电子产品、网络个人电脑、小型计算机系统﹑大型计算机系统和包括上述任何系统的分布式云计算技术环境，等等。终端设备、计算机系统、服务器等电子设备可以在由计算机系统执行的计算机系统可执行指令的一般语境下描述。通常，程序模块可以包括例程、程序、目标程序、组件、逻辑、数据结构等等，它们执行特定的任务或者实现特定的抽象数据类型。计算机系统/服务器可以在分布式云计算环境中实施，分布式云计算环境中，任务是由通过通信网络链接的远程处理设备执行的。在分布式云计算环境中，程序模块可以位于包括存储设备的本地或远程计算系统存储介质上。图1为本发明所应用的星形网络的拓扑结构图。本发明所应用的网络拓扑结构为星形网络，该星形网络包括一个中心节点10及若干终端节点11-1n，该中心节点10一般由网关扮演，终端节点11-1n可以是各种物联网终端设备，例如继电器，传感器等设备。所有终端节点只与中心节点进行通信。在本发明实施例中，本发明所应用的星形网络可为Lora网络，中心节点为Lora网关。示例性方法图2是本发明一示例性实施例提供的一种固件升级方法的流程示意图。本实施例应用在中心节点上，如图2所示，本发明一种固件升级方法，应用于中心节点，包括以下步骤：步骤201，获取待升级固件并将其切片。在本发明实施例中，对于待升级的固件，由管理员将其发送到网络的中心节点，即网关节点，具体地，管理员可通过互联网或蓝牙等无线传输方式将所述待升级固件传输到中心节点，中心节点即网关则获取到所述待升级固件。可选地，于步骤201中，当获取到所述待升级固件后，可将所述待升级固件按照预设长度进行切片，一般来说，切片的粒度要保证切片数据在一帧内发送完毕，对于切片数据，增加切片的偏移地址和循环冗余校验码，以便所述待升级固件切片发送到终端节点后再进行校验和组装。可见，本发明实施例通过对待升级固件进行切片并添加校验码进行分包传输，这样当某个切片传输异常后仅需重传该切片数据包，而无需重传整个固件包，提高了固件包的传输效率，保证了待升级固件的完整性。步骤202，采集节点间的RSSI强度。当获取到所述待升级固件后，作为中心节点的网关则下发RSSI强度采集指令，采集终端节点彼此间的RSSI强度，各终端节点在接收到该RSSI强度采集指令后，则检测其余所有节点的RSSI强度，并发送给中心节点，中心节点获取所有节点间的RSSI强度，并进行汇总。步骤203，根据节点间的RSSI强度动态生成升级链路树。在本发明实施例中，所述升级链路树即节点升级的次序图，表明了具体某个节点在第几轮升级中会得到升级，以及具体由哪个节点进行升级，所述升级链路树需要综合考虑的各个节点间的RSSI强度，从而使整个网络的升级速度达到最佳。在本发明实施例中，根据节点间的RSSI强度，采用最大权匹配的方法，将当前网络拓扑结构进行拆分，利用KM算法多次运算动态生成最优匹配的固件传输链路，对当前网络拓扑结构生成如图3所示的升级链路树，图3以15个终端节点为例，其具体过程如下：将网络中拥有固件的节点置于U集合，将未拥有固件的节点置于V集合，将节点间的RSSI视为权重，由此可以将该问题抽象为“带权二分图的最优匹配”问题，在本发明实施例中，基于KM算法进行多次匹配来生成升级链路树，生成升级链路树第一层节点时，由于U集合中只有中心节点，因此选取RSSI最强的终端节点即可，如图3所示，假设RSSI最强的终端节点为1号节点，则选择1号节点，图中标号表示升级次序；生成升级链路树第二层节点时，U集合中拥有2个节点，V集合中拥有n-1个节点，此时采用KM算法寻找两条RSSI最优的升级路径，即中心节点到2号节点和1号节点到3号节点；同理，生成升级链路树第三层节点时，U集合中拥有4个节点，V集合中拥有n-3个节点，再采用KM算法寻找四个条RSSI最优的升级路径，即中心节点到4号节点，2号节点到5号节点，1号节点到6号节点，3号节点到7号节点；当生成升级链路树第i层节点时，U集合中拥有2i-1个节点，V集合中拥有n-2i-1+1个节点，再采用KM算法寻找2i-1个条RSSI最优的升级路径，以此类推，直到将所有节点都分配到所述升级链路树中。也就是说，在本发明实施例中，位于升级链路树越顶层的节点越先得到升级，越底层的节点越晚得到升级，同时随着终端设备数量增加时，层数可以无限增加。步骤204，根据所述升级链路树将所述待升级固件传送给相应节点或发送升级指令使该节点给其他节点进行升级，并根据升级结果更新所述升级链路树。在本发明实施例中，当生成所述升级链路树后，则按照升级链路树中的顺序依次给相应设备进行升级，待升级的节点收到升级包，校验升级包并完成组装，直到所述待升级固件传输完毕。具体地说，本发明的升级流程由中心节点控制，升级链路树保存在中心节点，中心节点根据所述升级链路树将待升级固件传递相应的终端节点，或向拥有固件且空闲的终端节点下发升级指令，从而令该终端节点给所述升级链路树中的下一层节点升级。例如，根据图3中的升级链路树，首先由中心节点将所述待升级固件传递给1号节点进行升级，完成后再根据所述升级链路树向1号节点下发升级指令，由1号节点将所述待升级固件给3号节点升级，与此同时，中心节点将所述待升级固件传递给2号节点进行升级，每个节点同时只给一个节点进行升级，并对固件的完整性进行校验。以此类推到更多的节点。在本发明实施例中，步骤204进一步包括：步骤204-1，根据所述升级链路树向目标节点发送所述待升级固件的切片数据包或升级指令。在本发明实施例中，根据升级链路树，中心节点首先将所述待升级固件的切片数据包发送至1号节点，并等待响应，直至1号节点升级完成，此时1号节点就拥有了新版本固件；对于拥有了新版本固件的终端节点，中心节点也可根据升级链路树向该终端节点发送升级指令，以通过该终端节点向目标终端节点发送待升级固件实现升级，所述升级指令中至少包括目标终端节点信息。步骤204-2，对于目标节点返回的对切片数据包的响应消息，若响应成功，则进入步骤204-3，否则记录失败次数，并判断失败次数是否超过预设阈值，若超过，则更新所述升级链路树并返回步骤204-1更换目标节点，否则返回步骤204-1继续尝试向当前目标节点继续发送所述待升级固件的切片数据包；对于目标节点返回的对升级指令的响应消息，若响应成功，表示当前链路升级成功，进入步骤204-3，若响应不成功，则说明当前升级链路出现了异常，将该升级路链路权重设为0，并更新所述升级链路树，该路径等待下一轮升级，返回步骤204-1更换目标节点。在本发明实施例中，当目标节点收到所述待升级固件的各切片数据包后，根据循环冗余校验码进行校验并返回响应成功的信息，若在预设的时间内未收到响应成功的信息或接收到重传请求，则判断发送失败，在重传的同时记录失败次数，当失败次数超过预设阈值，说明该升级链路出现了异常，将该路径权重设为0，并更新所述升级链路树，该路径等待下一轮升级，并返回步骤204-1更换目标节点，如图3中假设到1号节点的升级链路出现异常，则将该路径权重设为0后更新升级链路树，并返回步骤2014-1更换目标节点为2号节点，直到所有节点完成升级，也就是说，在本发明实施例中，当一条升级链路被破坏时可以动态更新升级链路树，并通过其他链路进行固件升级，从而提高了固件升级的容错率。步骤204-3，当接收到当前目标节点升级完成通知，更新所述升级链路树，判断是否所有目标节点升级完成，若还有目标节点未完成升级，则返回步骤204-1进行下一目标节点的升级，直至所有目标节点升级完成。可见，本发明实施例以节点间的RSSI作为权值，采用KM算法多次运算动态生成升级链路树，根据所述升级链路树将待升级固件传送给相应节点进行升级，其中固件包的传输可以由任意节点到任意节点，升级可以并发进行，大大提高了固件升级的速度，节省了固件升级时间。以一个拥有15个终端的星形网络为例，在现有技术中，如果升级一个终端需要耗时1分钟，所有终端完成升级总共需要耗时15分钟，而采用了本发明的升级方法后，将所有终端完成升级仅需4分钟，在节点数量增加时优势更加明显，同时由于多升级链路可以动态更新，极大增加了系统的容错性。图4是本发明另一示例性实施例提供的一种固件升级方法的流程示意图。本实施例应用在终端节点上，如图4所示，本发明一种固件升级方法，包括以下步骤：步骤401，当接收到RSSI强度采集指令时，检测并采集周围节点的RSSI强度，并发送至中心节点。在本发明实施例中，当中心节点接收到待升级固件时，会下发RSSI强度采集指令，各终端节点在接收到该RSSI强度采集指令时，则会检测其余所有节点的RSSI强度，并汇总到中心节点，以便中心节点根据节点间的RSSI强度生成所述升级链路树。步骤402，接收校验待升级固件的切片数据包并响应，对接收的待升级固件的完整性进行校验，根据所述待升级固件进行升级，并返回升级结果至中心节点。当某个终端节点接收到其上一级节点发送的待升级固件的切片数据包时，根据切片数据包的循环冗余校验码进行校验，校验通过后返回校验成功的响应消息，也就是说，终端节点每收到一个切片数据包就进行一次校验和响应，如果数据校验出错则返回消息至上一级节点以进行重传，当重传超过一定次数说明该升级链路出现了异常，则将该链路的RSSI强度置为0，并更新所述升级链路树，等待下一轮升级；当所有切片数据包都接收完毕，对所有切片数据包进行组装成完整的所述待升级固件，并进行完整性校验，若校验通过，则根据完整的所述待升级固件进行升级，若升级完成，则返回升级成功的消息至上一级节点，若升级不成功，则返回升级不成功消息至上一级节点，以便上一级节点重新发送所述待升级固件的各切片数据包。步骤403，接收升级指令，根据所述升级指令将待升级固件传送给相应节点进行升级。在本发明实施例中，当一个终端节点完成升级后，该终端节点也拥有了新版本的固件，因此其也可以给其他未升级的终端节点，中心节点可以根据所述升级链路树向拥有了新版本固件的终端指令下发升级指令，所述升级指令中至少包含待升级的目标终端节点信息，当终端节点接收到中心节点的升级指令时，则同样将待升级固件切片后将待升级固件的切片数据包发送给相应的节点以进行升级，由于具体的升级过程与前述中心节点的过程相同，在此不予赘述。示例性装置图5是本发明一示例性实施例提供的一种固件升级装置的结构示意图。本实施例应用在中心节点上，如图5所示，本发明一种固件升级装置，包括：待升级固件获取模块501，用于获取待升级固件。在本发明实施例中，对于待升级的固件，由管理员将其发送到网络的中心节点，即网关节点，具体地，管理员可通过互联网或蓝牙等无线传输方式将所述待升级固件传输到中心节点，中心节点即网关则获取到所述待升级固件。可选地，于待升级固件获取模块501中，当获取到所述待升级固件后，可将所述待升级固件按照预设长度进行切片，一般来说，切片的粒度要保证切片数据在一帧内发送完毕，对于切片数据，增加切片的偏移地址和循环冗余校验码，以便所述待升级固件切片发送到终端节点后再进行校验和组装。可见，本发明实施例通过对待升级固件进行切片并添加校验码进行分包传输，这样当某个切片传输异常后仅需重传该切片数据包，而无需重传整个固件包，提高了固件包的传输效率，保证了待升级固件的完整性。各节点RSSI强度采集模块502，用于采集节点间的RSSI强度。当获取到所述待升级固件后，作为中心节点的网关则下发RSSI强度采集指令，采集终端节点彼此间的RSSI强度，各终端节点在接收到该RSSI强度采集指令后，则检测其余所有节点的RSSI强度，并发送给中心节点，中心节点获取所有终端节点的RSSI强度，并进行汇总。升级链路树生成模块503，用于根据节点间的RSSI强度动态生成升级链路树。在本发明实施例中，所述升级链路树即节点升级的次序图，表明了具体某个节点在第几轮升级中会得到升级，以及具体由哪个节点进行升级，所述升级链路树需要综合考虑的各个节点间的RSSI强度，从而使整个网络的升级速度达到最佳。在本发明实施例中，根据节点间的RSSI强度，采用最大权匹配的方法，将当前网络拓扑结构进行拆分，利用KM算法多次运算动态生成最优匹配的固件传输链路，其具体过程如下：将网络中拥有固件的节点置于U集合，将未拥有固件的节点置于V集合，将节点间的RSSI视为权重，由此可以将该问题抽象为“带权二分图的最优匹配”问题，在本发明实施例中，基于KM算法进行多次匹配来生成升级链路树，生成升级链路树第一层节点时，由于U集合中只有中心节点，因此选取RSSI最强的终端节点即可；生成升级链路树第二层节点时，U集合中拥有2个节点，V集合中拥有n-1个节点，此时采用KM算法寻找两条RSSI最优的升级路径；同理，生成升级链路树第三层节点时，U集合中拥有4个节点，V集合中拥有n-3个节点，再采用KM算法寻找四个条RSSI最优的升级路径；当生成升级链路树第i层节点时，U集合中拥有2i-1个节点，V集合中拥有n-2i-1+1个节点，再采用KM算法寻找2i-1个条RSSI最优的升级路径，以此类推，直到将所有节点都分配到所述升级链路树中。也就是说，在本发明实施例中，位于升级链路树越顶层的节点越先得到升级，越底层的节点越晚得到升级，同时随着终端设备数量增加时，层数可以无限增加。固件升级处理模块504，用于根据所述升级链路树将所述待升级固件传送给相应节点或发送升级指令使该节点给其他节点进行升级，并根据升级结果更新所述升级链路树。在本发明实施例中，当生成所述升级链路树后，则按照升级链路树中的顺序依次给相应设备进行升级，待升级的节点收到升级包，校验升级包并完成组装，直到所述待升级固件传输完毕。在本发明实施例中，固件升级处理模块504进一步包括：固件包/指令发送单元，用于根据所述升级链路树向目标节点发送所述待升级固件的切片数据包或发送升级指令使该目标节点给其他节点进行升级。在本发明实施例中，根据升级链路树，中心节点首先将所述待升级固件的切片数据包发送至1号节点，并等待响应，直至1号节点升级完成，此时1号节点就拥有了新版本固件；对于拥有了新版本固件的终端节点，中心节点也可根据升级链路树向该终端节点发送升级指令，以通过该终端节点向目标终端节点发送待升级固件实现升级，所述升级指令中至少包括目标终端节点信息。响应处理单元，对于目标节点返回的对切片数据包的响应消息，若响应成功时，则进入升级结果判断单元，否则记录失败次数，并判断失败次数是否超过预设阈值，若超过，则更新所述升级链路树并返回固件包发送单元更换目标节点，否则直接返回固件包发送单元继续尝试向当前目标节点继续发送所述待升级固件的切片数据包；对于目标节点返回的对升级指令的响应消息，若响应成功，则进入升级结果判断单元，表示当前链路升级成功，若响应不成功，则说明当前升级链路出现了异常，将该升级路链路重设为0，并更新所述升级链路树，该路径等待下一轮升级，返回固件包/指令发送单元更换目标节点。在本发明实施例中，当目标节点收到所述待升级固件的各切片数据包后，根据循环冗余校验码进行校验并返回响应成功的信息，若在预设的时间内未收到响应成功的信息或接收到重传请求，则判断发送失败，在重传的同时记录失败次数，当失败次数超过预设阈值，说明该升级链路出现了异常，将该路径权重设为0，并更新所述升级链路树，该路径等待下一轮升级，并返回固件包/指令发送单元更换目标节点，如图3中假设到1号节点的升级链路出现异常，则将该路径权重设为0后更新升级链路树，并返回固件包/指令发送单元更换目标节点为2号节点，直到所有节点完成升级，也就是说，在本发明实施例中，当一条升级链路被破坏时可以动态更新升级链路树，并通过其他链路进行固件升级，从而提高了固件升级的容错率。升级结果判断单元，用于在接收到当前目标节点升级完成通知，更新所述升级链路树并判断是否所有目标节点升级完成，若还有目标节点未完成升级，则返回固件包/指令发送单元进行下一目标节点的升级，直至所有目标节点升级完成。图6是本发明另一示例性实施例提供的一种固件升级装置的结构示意图。本实施例应用在终端节点上，如图6所示，本发明一种固件升级装置，包括：RSSI强度采集模块601，用于在接收到RSSI强度采集指令时，检测并采集周围节点的RSSI强度，并发送至中心节点。在本发明实施例中，当中心节点接收到待升级固件时，会下发RSSI强度采集指令，各终端节点在接收到该RSSI强度采集指令时，则会检测其余所有节点的RSSI强度，并汇总到中心节点，以便中心节点根据节点间的RSSI强度生成所述升级链路树。待升级固件接收升级模块602，用于接收校验待升级固件的切片数据包并响应，对接收的待升级固件的完整性进行校验，根据所述待升级固件进行升级，并返回升级结果至中心节点。当某个终端节点接收到其上一级节点发送的待升级固件的切片数据包时，根据切片数据包的循环冗余校验码进行校验，校验通过后返回校验成功的响应消息，也就是说，终端节点每收到一个切片数据包就进行一次校验和响应，如果数据校验出错则返回消息至上一级节点以进行重传，当重传超过一定次数说明该升级链路出现了异常，则将该链路的RSSI强度置为0，并更新所述升级链路树，等待下一轮升级；当所有切片数据包都接收完毕，对所有切片数据包进行组装成完整的所述待升级固件，并进行完整性校验，若校验通过，则根据完整的所述待升级固件进行升级，若升级完成，则返回升级成功的消息至上一级节点，若升级不成功，则返回升级不成功消息至上一级节点，以便上一级节点重新发送所述待升级固件的各切片数据包。升级处理模块603，用于接收升级指令，根据所述升级指令将待升级固件传送给相应节点进行升级。在本发明实施例中，当一个终端节点完成升级后，该终端节点也拥有了新版本的固件，因此其也可以给其他未升级的终端节点，中心节点可以根据所述升级链路树向拥有了新版本固件的终端指令下发升级指令，所述升级指令中至少包含待升级的目标终端节点信息，当终端节点接收到中心节点的升级指令时，则同样将待升级固件切片后将待升级固件的切片数据包发送给相应的节点以进行升级，由于具体的升级过程与前述中心节点的过程相同，在此不予赘述。实施例在本实施例中，现场环境中安装中心节点及终端节点，完成组网配置，本实施例的网络拓扑结构为星形网络，所有终端节点只与中心节点进行通信，此时网络中拥有一个中心节点和15个终端节点，如图7所示。具体的固件升级流程如图8所示：阶段一，升级前准备，由用户下发指令，并通过互联网或蓝牙等方式将固件传输到中心节点。中心节点下发指令，采集终端节点彼此间的RSSI强度，与此同时，中心节点获取所有终端节点的RSSI强度，将二者进行汇总。此时升级的准备阶段已经完成。阶段二，生成升级链路树，升级链路树即节点升级的次序图，表明了具体某个节点在第几轮升级中会得到升级，以及具体由哪个节点进行升级。该链路树需要综合考虑的各个节点间的RSSI强度，从而使整个网络的升级速度达到最佳。在本实施例中，将网络中拥有固件的节点置于U集合，将未拥有固件的节点置于V集合，将节点间的RSSI视为权重，由此可以将该问题抽象为“带权二分图的最优匹配”问题，本实施例基于KM算法采用多次匹配来生成升级链路树。具体地，生成链路树第一层节点时，由于U集合中只有中心节点，因此选取RSSI最强的终端节点即可。生成链路树第二层节点时，U集合中拥有2个节点，V集合中拥有14个节点，此时采用KM算法寻找两条RSSI最优的升级路径。同理，生成链路树第三层节点时，U集合中拥有4个节点，V集合中拥有12个节点，再采用KM算法寻找四个条RSSI最优的升级路径。以此类推，直到将所有节点都分配到升级链路树中，如图3所示。阶段三，正式升级，拥有固件的节点将固件切片，添加循环冗余校验码并打包下发到待升级的节点，待升级的节点收到升级包，校验升级包并完成组装，直到固件传输完毕。如果升级过程中链路出现不可恢复异常，可将该路径权重设为0，重新生成升级链路树，等待下轮升级，以此类推，直到所有的节点完成升级。这样，在拥有15个终端的星形网络中，如果升级一个终端需要耗时1分钟，所有终端完成升级总共需要耗时15分钟，而采用了本发明的升级方法后，将所有终端完成升级仅需4分钟，在节点数量增加时优势更加明显。同时由于多升级链路可以动态更新，极大增加了系统的容错性。示例性电子设备图9是本发明一示例性实施例提供的电子设备的结构。该电子设备可以是第一设备和第二设备中的任一个或两者、或与它们独立的单机设备，该单机设备可以与第一设备和第二设备进行通信，以从它们接收所采集到的输入信号。图9图示了根据本公开实施例的电子设备的框图。如图9所示，电子设备包括一个或多个处理器91和存储器92。处理器91可以是中央处理单元或者具有数据处理能力和/或指令执行能力的其他形式的处理单元，并且可以控制电子设备中的其他组件以执行期望的功能。存储器92可以包括一个或多个计算机程序产品，所述计算机程序产品可以包括各种形式的计算机可读存储介质，例如易失性存储器和/或非易失性存储器。所述易失性存储器例如可以包括随机存取存储器和/或高速缓冲存储器等。所述非易失性存储器例如可以包括只读存储器、硬盘、闪存等。在所述计算机可读存储介质上可以存储一个或多个计算机程序指令，处理器91可以运行所述程序指令，以实现上文所述的本公开的各个实施例的软件程序的固件升级方法以及/或者其他期望的功能。在一个示例中，电子设备还可以包括：输入装置93和输出装置94，这些组件通过总线系统和/或其他形式的连接机构互连。此外，该输入装置93还可以包括例如键盘、鼠标等等。该输出装置94可以向外部输出各种信息。该输出设备94可以包括例如显示器、扬声器、打印机、以及通信网络及其所连接的远程输出设备等等。当然，为了简化，图9中仅示出了该电子设备中与本公开有关的组件中的一些，省略了诸如总线、输入/输出接口等等的组件。除此之外，根据具体应用情况，电子设备还可以包括任何其他适当的组件。示例性计算机程序产品和计算机可读存储介质除了上述方法和设备以外，本公开的实施例还可以是计算机程序产品，其包括计算机程序指令，所述计算机程序指令在被处理器运行时使得所述处理器执行本说明书上述“示例性方法”部分中描述的根据本公开各种实施例的固件升级方法中的步骤。所述计算机程序产品可以以一种或多种程序设计语言的任意组合来编写用于执行本公开实施例操作的程序代码，所述程序设计语言包括面向对象的程序设计语言，诸如Java、C++等，还包括常规的过程式程序设计语言，诸如“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算设备上执行、部分地在用户设备上执行、作为一个独立的软件包执行、部分在用户计算设备上部分在远程计算设备上执行、或者完全在远程计算设备或服务器上执行。此外，本公开的实施例还可以是计算机可读存储介质，其上存储有计算机程序指令，所述计算机程序指令在被处理器运行时使得所述处理器执行本说明书上述“示例性方法”部分中描述的根据本公开各种实施例的固件升级方法中的步骤。所述计算机可读存储介质可以采用一个或多个可读介质的任意组合。可读介质可以是可读信号介质或者可读存储介质。可读存储介质例如可以包括但不限于电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。可读存储介质的更具体的例子包括：具有一个或多个导线的电连接、便携式盘、硬盘、随机存取存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。以上结合具体实施例描述了本公开的基本原理，但是，需要指出的是，在本公开中提及的优点、优势、效果等仅是示例而非限制，不能认为这些优点、优势、效果等是本公开的各个实施例必须具备的。另外，上述公开的具体细节仅是为了示例的作用和便于理解的作用，而非限制，上述细节并不限制本公开为必须采用上述具体的细节来实现。本说明书中各个实施例均采用递进的方式描述，每个实施例重点说明的都是与其它实施例的不同之处，各个实施例之间相同或相似的部分相互参见即可。对于系统实施例而言，由于其与方法实施例基本对应，所以描述的比较简单，相关之处参见方法实施例的部分说明即可。本公开中涉及的器件、装置、设备、系统的方框图仅作为例示性的例子并且不意图要求或暗示必须按照方框图示出的方式进行连接、布置、配置。如本领域技术人员将认识到的，可以按任意方式连接、布置、配置这些器件、装置、设备、系统。诸如“包括”、“包含”、“具有”等等的词语是开放性词汇，指“包括但不限于”，且可与其互换使用。这里所使用的词汇“或”和“和”指词汇“和/或”，且可与其互换使用，除非上下文明确指示不是如此。这里所使用的词汇“诸如”指词组“诸如但不限于”，且可与其互换使用。可能以许多方式来实现本公开的方法和装置。例如，可通过软件、硬件、固件或者软件、硬件、固件的任何组合来实现本公开的方法和装置。用于所述方法的步骤的上述顺序仅是为了进行说明，本公开的方法的步骤不限于以上具体描述的顺序，除非以其它方式特别说明。此外，在一些实施例中，还可将本公开实施为记录在记录介质中的程序，这些程序包括用于实现根据本公开的方法的机器可读指令。因而，本公开还覆盖存储用于执行根据本公开的方法的程序的记录介质。还需要指出的是，在本公开的装置、设备和方法中，各部件或各步骤是可以分解和/或重新组合的。这些分解和/或重新组合应视为本公开的等效方案。提供所公开的方面的以上描述以使本领域的任何技术人员能够做出或者使用本公开。对这些方面的各种修改对于本领域技术人员而言是非常显而易见的，并且在此定义的一般原理可以应用于其他方面而不脱离本公开的范围。因此，本公开不意图被限制到在此示出的方面，而是按照与在此公开的原理和新颖的特征一致的最宽范围。为了例示和描述的目的已经给出了以上描述。此外，此描述不意图将本公开的实施例限制到在此公开的形式。尽管以上已经讨论了多个示例方面和实施例，但是本领域技术人员将认识到其某些变型、修改、改变、添加和子组合。
