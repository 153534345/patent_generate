标题title
一种基于PBFT的装备质量信息管理节点共识方法
摘要abst
本发明涉及一种基于PBFT的装备质量信息管理节点共识方法，在联盟链框架设置中，物联网设备通过有线或无线的方式接入网络，并能够通过GPS、LBS、WiFi定位技术获取位置信息，主节点由边缘服务器固定担任；基于改进的PBFT算法，该方法的运行分为分组阶段、打分阶段和共识阶段。在评分方面，分别提出了Greedy聚类算法和Geo‑Trust算法，创新性地引入了在物联网边缘计算环境下考虑位置、声誉和相关惩罚的评分机制。在共识过程方面，引入了两阶段PBFT，在此基础上提出了Raft中结合Leader选举和心跳机制的四步共识过程。可以应对网络规模大、节点分布广、拓扑复杂的挑战。
权利要求书clms
1.一种基于PBFT的装备质量信息管理节点共识方法，其特征在于，在联盟链框架设置中，物联网设备通过有线或无线的方式接入网络，并能够通过GPS、LBS、WiFi定位技术获取位置信息，主节点由边缘服务器固定担任；基于改进的PBFT算法，该方法的运行分为分组阶段、打分阶段和共识阶段；其中：在分组阶段，主节点中的领导者节点发送预分组请求，各主节点收到请求后向网络中广播分组消息进行分组，运行贪婪聚类算法；在打分阶段，各组主节点运行地理信任算法，对组内背书节点进行打分；在共识阶段，分4个步骤进行共识，首先进行消息的请求，由客户节点向所在组的主节点发送消息，所在组的主节点作为转信节点领导者节点转发信息，领导者节点再将信息转发给各主节点；而后是组内共识各主节点收到消息后采用两阶段PBFT进行共识；而后是组间共识，即由转信节点统计收到的各主节点的回复；最后是消息回复，由转信节点回复给客户节点，客户节点收到足够的答复消息后则认为交易已被写入分类账中。2.如权利要求1所述的方法，其特征在于，所述贪婪聚类算法的基本设定是：聚类中心已固定这是因为在物联网边缘计算场景中，充当主节点的边缘服务器是确定的，各组需要围绕边缘服务器进行聚类；各类的数据对象需满足簇内对象两两距离之和最小这是因为在后续的第二阶段中需要组中对象两两通信；各类的对象数需保持一致这是因为在后续步骤中各组需要进行交互，而各组均会产生新交易，只有保持组内对象数一致才能免除指数型上升的通信复杂度所带来的总体不均衡问题，达到整体效率最优；公式是空间中数据对象与聚类中心间的欧式距离：式中，x为数据对象，Ci为第i个聚类中心，m为数据对象的维度，xj，Cij为x和Ci的第j个属性值；公式是组内对象两两距离之和：其中Sumi表示第i个聚类中心所在组内对象两两距离之和，h表示每个聚类组最终需要达到的聚类对象数量，h＝；聚类中心Ci用x0i表示，即a＝0或b＝0的情况。3.如权利要求1所述的方法，其特征在于，所述地理信任算法运行在主节点上，对象是组内各节点，其输入是各节点的位置信息和背书情况信息，输出是各节点的地理信任评分；地理信任算法原则为如下几点：固定节点评分上升；移动节点评分下降；无响应节点评分下降；评分低节点附近的物联网设备评分下降。其中，和是涉及地理位置的原则；是涉及节点信用的原则；是对评分进行重调整的过程。
说明书desc
技术领域本发明属于网络技术领域，具体涉及一种基于PBFT的装备质量信息管理节点共识方法。背景技术随着装备信息化和智能化装备在边缘计算场景下应用的快速增长，尤其是新兴的CIoT技术，区块链的适用性设置以及共识算法效率的提升仍将是未来的发展方向。虽然诸多研究已经针对物联网边缘计算场景下的区块链应用问题进行了讨论，然而，针对物联网边缘计算的改进共识算法研究较少。以下是申请人检索得到的相关的文献：Pahl C，El Ioini N，Helmer S.A Decision Framework for BlockchainPlatforms for IoT and Edge Computing.IoTBDS，2018：105-113。Mendki P.Blockchain enabled IoT edge computing.Proceedings ofthe 2019international conference on blockchain technology，2019：66-69。Casado-Vara R，De La Prieta F，Prieto J，et al.Blockchain frameworkfor IoT data quality via edge computing.Proceedings of the 1st Workshop onBlockchain-enabled Networked Sensor Systems，2018：19-24。Xu X，Zhang X，Gao H，et al.BeCome:blockchain-enabled computationoffloading for IoT in mobile edge computing.IEEE Transactions onIndustrial Informatics，2019，16：4187-4195。Xu F，Yang F，Zhao C，et al.Edge computing and caching basedblockchain IoT network.2018 1st IEEE International Conference on HotInformation-Centric Networking，2018：238-239。Chen Z，Li Q.Improved PBFT Consensus Mechanism Based on K-medoids.Computer Science，2019，46：101-107。发明内容根据联盟链框架基础上结合物联网边缘计算架构特点，本发明的目的在于，提供一种基于PBFT的装备质量信息管理节点共识方法。为了实现上述任务，本发明采取如下的技术解决方案：一种基于PBFT的装备质量信息管理节点共识方法，其特征在于，在联盟链框架设置中，物联网设备通过有线或无线的方式接入网络，并能够通过GPS、LBS、WiFi定位技术获取位置信息，主节点由边缘服务器固定担任；基于改进的PBFT算法，该方法的运行分为分组阶段、打分阶段和共识阶段；其中：在分组阶段，主节点中的领导者节点发送预分组请求，各主节点收到请求后向网络中广播分组消息进行分组，运行贪婪聚类算法；在打分阶段，各组主节点运行地理信任算法，对组内背书节点进行打分；在共识阶段，分4个步骤进行共识，首先进行消息的请求，由客户节点向所在组的主节点发送消息，所在组的主节点作为转信节点领导者节点转发信息，领导者节点再将信息转发给各主节点；而后是组内共识各主节点收到消息后采用两阶段PBFT进行共识；而后是组间共识，即由转信节点统计收到的各主节点的回复；最后是消息回复，由转信节点回复给客户节点，客户节点收到足够的答复消息后则认为交易已被写入分类账中。根据本发明，所述贪婪聚类算法的基本设定是：聚类中心已固定这是因为在物联网边缘计算场景中，充当主节点的边缘服务器是确定的，各组需要围绕边缘服务器进行聚类；各类的数据对象需满足簇内对象两两距离之和最小这是因为在后续的第二阶段中需要组中对象两两通信；各类的对象数需保持一致这是因为在后续步骤中各组需要进行交互，而各组均会产生新交易，只有保持组内对象数一致才能免除指数型上升的通信复杂度所带来的总体不均衡问题，达到整体效率最优；公式是空间中数据对象与聚类中心间的欧式距离：式中，x为数据对象，Ci为第i个聚类中心，m为数据对象的维度，xj，Cij为x和Ci的第j个属性值；公式是组内对象两两距离之和：其中Sumi表示第i个聚类中心所在组内对象两两距离之和，h表示每个聚类组最终需要达到的聚类对象数量，h＝；聚类中心Ci用x0i表示，即a＝0或b＝0的情况。具体地，所述地理信任算法运行在主节点上，对象是组内各节点，其输入是各节点的位置信息和背书情况信息，输出是各节点的地理信任评分；地理信任算法原则为如下几点：固定节点评分上升；移动节点评分下降；无响应节点评分下降；评分低节点附近的物联网设备评分下降。其中，和是涉及地理位置的原则；是涉及节点信用的原则；是对评分进行重调整的过程。本发明的基于PBFT的装备质量信息管理节点共识方法，采用多步骤的流程，该方法涵盖了分组、评分和共识过程等方面的创新和优化。在评分方面，分别提出了Greedy聚类算法和Geo-Trust算法，创新性地引入了在物联网边缘计算环境下考虑位置、声誉和相关惩罚的评分机制。在共识过程方面，引入了两阶段PBFT，在此基础上提出了Raft中结合Leader选举和心跳机制的四步共识过程。可以应对网络规模大、节点分布广、拓扑复杂的挑战。和现有技术相比，主要贡献如下：提出了基于改进PBFT的共识方法，并对其三个阶段进行了详细说明。包括分组、打分、共识三个步骤。对其他特殊情况也进行了说明。提出了贪婪聚类算法，用以对边缘端节点进行分组。依据与边缘服务器的网络延迟来进行聚类，能够确保组内通信速度，提升组内共识速度。提出了Geo-Trust模型，用于对节点进行筛选。该模型结合了物联网终端的位置信息和信誉值，通过剔除可疑节点，能够对共识节点群的差节点数进行缩减，进而提升共识性能。通过理论证明和仿真实验，对本发明的基于PBFT的装备质量信息管理节点共识方法的性能、安全性和开支等进行了分析，并与PBFT和K-PBFT进行了对比。附图说明图1是本发明的基于PBFT的装备质量信息管理节点共识方法的三阶段过程；图2是贪婪聚类算法的基本流程图；图3是Algorithm1算法过程；图4是算法伪代码图；图5是算法伪代码图；图6是两阶段PBFT过程图；图7是共识总体流程图；以下结合附图和实施例对本发明作进一步的详细说明。具体实施方式本实施例给出一种基于PBFT的装备质量信息管理节点共识方法，在联盟链框架设置中，物联网设备通过有线或无线的方式接入网络，并能够通过GPS、LBS、WiFi定位技术获取位置信息，主节点由边缘服务器固定担任；采用改进的PBFT算法，共识总体运行过程分为分组阶段、打分阶段和共识阶段；其中：在分组阶段，主节点中的领导者节点发送预分组请求，各主节点收到请求后向网络中广播分组消息进行分组，运行贪婪聚类算法；在打分阶段，各组主节点运行地理信任算法，对组内背书节点进行打分；在共识阶段，分4个步骤进行共识，首先进行消息的请求，由客户节点向所在组的主节点发送消息，所在组的主节点作为转信节点领导者节点转发信息，领导者节点再将信息转发给各主节点；而后是组内共识各主节点收到消息后采用两阶段PBFT进行共识；而后是组间共识，即由转信节点统计收到的各主节点的回复；最后是消息回复，由转信节点回复给客户节点，客户节点收到足够的答复消息后则认为交易已被写入分类账中。1.1技术方案设计思路结合物联网边缘计算架构特点，采用一种改进PBFT共识算法EIoT-PBFT。该方法采用了分阶段、分组、分层的思想。并提出了一种贪婪聚类算法，能够确定终端节点的分组方式。同时，提出了Geo-Trust模型，该模型考虑了节点信誉和位置情况以评估每个节点的可信度。之后，提出了改进的两阶段PBFT算法，进一步提高了共识效率。而后对一些特殊情况的处理方法进行了讨论。仿真实验结果表明，本实施例的基于PBFT的装备质量信息管理节点共识算法，能够极大地提高物联网边缘计算环境下的共识效率和系统鲁棒性，能够容忍网络中节点数量多、通信瓶颈等恶劣条件。同时，该算法在大多数情况下需要部署的边缘服务器数量并不多。1.2方法设计在本节中，将详细介绍方法的设计。首先说明了边缘计算下基于装备物联网的合理假设，并描述了算法的总体框架。而后，根据算法的三个阶段逐步解释了其关键组成部分。最后对两类特殊情况进行了说明。1.2.1应用环境在联盟链框架设置中，物联网设备通过有线或无线的方式接入网络，并能够通过GPS、LBS、WiFi定位等技术获取位置信息。物联网装备将数据传输至边缘服务器进行分析和处理，能够降低传输时延，提高响应速度，降低数据处理成本。边缘服务器负责边缘端大量物联网设备产生数据的存储和计算，其部署在边缘机房中，与标准化机房相比通常在空间、温度、方向、电源系统等方面存在较大差异，通常情况下具备轻量化、高性能、低功耗、适应性宽的特点。相比于边缘物联网装备，认为其具备较高的安全性，但仍存在宕机可能。区块链的主流物联网应用依赖于固定的物联网设备。例如，智能家居系统中的无线信号发送器和位置跟踪系统中的RFID接收器以及用于聚合传感器数据、协议转换和数据预处理的物联网网关。这些物联网设备始终具有比其他设备更大的计算能力。而且，这些固定的物联网设备不易成为恶意节点。相反，在已知某节点成为恶意节点的情况下，由于硬件设备、协议、网络配置等的相似性，其同一位置附近节点有较大概率受到相同攻击成为恶意节点。且在边缘计算的场景下，无法与边缘服务器通信或通信延迟较大的节点为极少数。基于应用环境，可总结出以下合理假设：物联网装备加入共识节点群需要许可。大部分物联网装备能够获取位置信息。边缘服务器存在宕机可能，但不会成为拜占庭节点。位置固定的物联网装备安全性高于移动的装备。无法与边缘服务器通联的孤立节点为极少数。1.2.2相关概念节点类型框架中节点主要分为三种类型：客户节点、背书节点和主节点，其中，主节点又同时具备以下三种身份之一：转信节点、Leader节点和跟随者节点。其中，客户节点主要由轻量级物联网装备组成，其不参与共识过程。当生成数据后，客户节点仅提出新交易来改变分类账的状态，由背书节点和主节点进行交易的验证和上链。背书节点即组内共识中的备份节点，主要由计算和通信能力较强，且通过Geo-Trust算法得出分数较高的物联网装备组成，是共识中节点的主要部分。主节点是组内共识中各组的主节点，同时也是组间共识的各对等节点。在组间共识中，主节点在组间共识中的身份随依据Raft的选举过程而轮转。主节点由边缘服务器担任，其类型是固定的。而除轻量级物联网装备以外的客户节点和背书节点是可以相互转换的。当客户节点信任值达到阈值，则其通过向主节点提交准入申请，由共识节点群进行验证后将其写入背书节点列表中，在下一个共识周期内以背书节点身份进行工作。当背书节点由于其行为导致位置和信用分降低而处于组中末尾时，主节点将提交一条节点类型变更声明，将其移出背书节点列表。应注意的是，背书节点作为物联网设备，同样具有提交新交易的功能，但当某一背书节点提交新交易时，本周期内其不作为背书节点对此条交易进行验证。时间段概念Stages，phases，steps和views都是和时间段相关的设置。其中，Stages包含分组，打分和共识三阶段总体过程。steps的概念是指共识过程中细分的：消息请求，组内共识、组间共识、消息回复四部分。Phase是其中组内共识的细分，对于phase而言，在原始PBFT算法中有3阶段，指的是Pre-prepare，Prepare和commit，而在本实施例的基于PBFT的装备质量信息管理节点共识方法中只有两阶段，指的是组内共识中Pre-prepare和Prepare。其中，view和phase沿用了原始PBFT算法中的相关概念。但是在该方法的设置中，主节点由边缘服务器固定担任，因此并不存在视图切换，故不存在view的设置。整体运行本实施例的基于PBFT的装备质量信息管理节点共识方法，其运行包括三个阶段，即分组阶段、打分阶段和共识阶段。在分组阶段，主节点中的领导者节点发送预分组请求，各主节点收到请求后向网络中广播分组消息进行分组，运行GreedyCluster算法，详见1.2.3节。在打分阶段，各组主节点运行地理信任算法，对组内背书节点进行打分，详见1.2.4节。在共识阶段，分4个步骤进行共识，首先进行消息的请求，由客户节点向所在组的主节点发送消息，所在组的主节点作为转信节点向Leader节点转发信息，Leader节点再将信息转发给各主节点；而后是组内共识各主节点收到消息后采用两阶段PBFT进行共识；而后是组间共识，即由转信节点统计收到的各主节点的回复；最后是消息回复，由转信节点回复给客户节点，客户节点收到足够的reply消息后则认为交易已被写入分类账中，这将在1.2.5中进行介绍。1.2.3第一阶段分组共识的第一阶段是分组。分组过程即将不同的物联网节点匹配至合适的边缘服务器处。通过分组可以在节点数量众多的物联网场景中降低通信的复杂度，加快共识的速度。为了提高共识的效率，分组的原则是将相互之间通信延迟低的节点分为同一组。通过在K-Means基础上提出的贪婪聚类算法可在固定聚类中心的前提下，得出组内两两距离和GroupSum最小的分组，同时也可保证各组的GroupSum值偏差不超过一定范围。贪婪聚类算法：贪婪聚类算法的基本设定是：聚类中心已固定。这是因为在物联网边缘计算场景中，充当主节点的边缘服务器是确定的，各组需要围绕边缘服务器进行聚类；各类的数据对象需满足簇内对象两两距离之和最小。这是因为在后续的第二阶段中需要组中对象两两通信；各类的对象数需保持一致。这是因为在后续步骤中各组需要进行交互，而各组均会产生新交易，只有保持组内对象数一致才能免除指数型上升的通信复杂度所带来的总体不均衡问题，达到整体效率最优。贪婪聚类算法的基本流程如图2所示。其中，式是空间中数据对象与聚类中心间的欧式距离：式中，x为数据对象，Ci为第i个聚类中心，m为数据对象的维度，xj，Cij为x和Ci的第j个属性值。公式是组内对象两两距离之和：其中，Sumi表示第i个聚类中心所在组内对象两两距离之和，h表示每个聚类组最终需要达到的聚类对象数量，h＝。为形式表达简洁，在公式中聚类中心Ci用x0i表示，即a＝0或b＝0的情况。分组过程在初次进行分组时，首先需要由主节点中的Leader节点发送pre-grouping请求，网络中其他主节点收到pre-grouping请求后，广播带有本节点地址的grouping消息。收到grouping消息的物联网设备节点立即进行网络延迟检测，返回给各主节点。主节点收到消息后，将各物联网节点与本节点的ping值记录在网络延迟列表中，而后向Leader节点发送本节点网络延迟列表。Leader节点也进行相同的操作，但结果存储于本地。在收到所有主节点的网络延迟列表后，Leader节点计算目标对象数h并发送启动第一轮分配的指令。各主节点利用Greedy Cluster算法中的式进行计算，将欧式距离最近的1个对象归入本组，同时向Leader节点返回commit消息。值得注意的是，在此应用场景中，由于只存在1个对象维度，即m＝1，因此欧氏距离即为两节点间ping值。当Leader节点收到所有主节点的第1轮commit信息后，将分组情况进行记录，随后发送启动第2轮分配的指令。此时若存在同一节点被同时分入两个及以上组中的情况，则此节点归为最先返回commit信息的主节点组中，同时Leader节点返回错误信息，指示此情况中其他主节点重新选择节点，直至不重复为止。在第2至h轮分配中，按照Greedy Cluster算法，则需遍历所有剩余数据对象比较Sumi的大小，为了减少通信次数，提高效率，在Grouping过程中对其进行如下优化：前一轮新完成分组的节点向其他未分组节点请求消息，进行延迟检测，并将ping值记录在主节点延迟列表中。进行Sumi测试的下一节点仅从本组中已完成分组的节点ping值最邻近Ω个未分组节点中产生，Ω取值范围为1≤Ω≤n-k，α为本轮轮数。当Ω取值较小时，完成分组的速度就快，反之则较慢，但分类结果具备更高的可信度。如，可取其中，λ为超参数。每一轮取使Sumi最小的物联网终端节点加入组内，而后主节点向Leader节点返回信息，若存在重复则依照第一轮处理方式进行。Leader节点收到各主节点的返回信息后，判断是否满足α＜h，若满足，则α＝α+1，进行下一轮分组；若不满足，则退出循环，聚类完成。在后续的第二阶段共识过程中，组内两两节点均进行通信，每次通信均将最新的通信延迟记录在延迟列表中，因此在非初次分组时，只需进行少量节点间的网络延迟检测，而无需再在所有节点间遍历。一般来说，分组过程完成后，这种状态会维持比较长的时间，覆盖多轮共识以增加效用，但以下情况仍会触发重新分组过程。1、当主节点宕机时。主节点宕机后会触发重分组。考虑到恶意节点可能会故意要求重新分组来实施DDoS攻击的情况，只有Leader节点才能够提出重新分组请求。通过Raft中的心跳机制，Leader节点很容易发现其他主节点是否宕机。一旦宕机，Leader节点就会启动重新分组过程。2、部署新的边缘服务器时。这种情况与上述情况类似。新的边缘服务器部署后，自动取得进入主节点组的权限。在接收到新服务器分配节点的请求后，Leader节点将启动重新分组过程。3、当大量物联网设备发生变化时。当超过一定数量的新物联网设备加入或现有物联网设备退出时，将触发重新分组。当大量物联网设备退出时，这些设备会被清除出背书节点组，导致组内背书节点变少，从而导致抗攻击能力降低。对于新加入的节点，无法加入组内将使其无法开展区块链业务，也无法参与共识，因此需要重新分组。4、某些组性能不佳。当一些小组性能表现不佳时，可能会触发重组。由于网络攻击、流量拥塞、网络环境变化等原因，部分组内的共识可能会变慢，虽然不到一半的共识组变慢并不会影响整体性能，但这对于需要进行组内业务通信的节点来说是不能容忍的。1.2.4第二阶段打分Geo-Trust算法运行在主节点上，对象是组内各节点。其输入是各节点的位置信息和背书情况信息，输出是各节点的评分GeoTrustScorei。GeoTrustScorei＝RelatePunish Geo-Trust算法模块是运行在两阶段改进PBFT共识之前的，其目的是对每一个节点的信任度进行评分，通过信任度值更新背书节点的列表，从而降低拜占庭节点在背书节点中的占比，提升组内共识的健壮性。Geo-Trust算法的评分原则可列为如下几点：固定节点评分上升；移动节点评分下降；无响应节点评分下降；评分低节点附近的物联网设备评分下降。其中，和是涉及地理位置的原则；是涉及节点信用的原则；是对评分进行重调整的过程。根据假设，位置固定的物联网设备安全性高于移动的设备，因此，确定了固定节点评分上升及移动节点评分下降的评分原则。同时，是基于假设的一个合理推论，原因在1.2.2部分已作说明。而由假设，大部分的物联网设备能够获取位置信息，此为Geo-Trust算法的地理位置评分的先决条件。由四项原则可以将Geo-Trust算法分为三部分：基于地理的部分、基于信任的部分和评分重调整的部分。位置分的计算首先对基于地理的部分进行说明。该部分算法通过记录组内各个节点在GeoTrustScore更新周期T0期间位置的移动次数ai，输出为基于地理的评分GeoScore。在每次消息确认中，规定组中节点必须在发送给主节点的消息中加上地理位置信息，物联网设备的位置信息对于边缘服务器是可见的，因此，主节点具有各个节点在周期T0内位置变动次数ai的值，这一部分将在后文中详细说明。在初始阶段，所有节点赋予一个GeoScorei＝1，随着移动次数的增加，GeoScore的数值逐渐减小，最后逼近0。GeoScore逼近0的速度是逐渐减慢的，即认为当移动节点移动次数较多后，其对于总分数的影响基本维持不变，而移动0-2次内的影响是较大的。GeoScorei是ai的函数，定义其关系为：其中ai∈N，算法过程如图3中的Algorithm1所示，1-10行表示主节点计算组内节点移动次数ai的过程，11-13行表示对组内各节点打分的过程。信用分的计算现对基于信用的部分进行说明，在拜占庭假设下，网络中节点存在3类节点：一是运行正常的健康节点，二是行为呈现任意性的恶意节点，三是无法应答请求的宕机节点。在原始PBFT三阶段算法中，健康节点体现为能够及时对上一阶段发送至本节点的消息进行验证和处理，并生成下一阶段的消息进行发送；恶意节点的表现是任意的，即可能发送错误信息、针对不同节点发送不一致的信息、不发送信息等；宕机节点体现为对于任意请求均不反馈信息。在恶意节点和宕机节点的各类行为中，恶意节点发送的错误信息可被诚实的接收方验证出来，然而恶意节点同样也可以向主节点反馈诚实节点的消息是错误的，因此，在此不针对恶意节点发送错误信息的情况来定义节点信用，而是根据其在合理延迟内不发送信息的行为来定义其信用。节点i在周期T0内不发送信息的次数越大，其信用分TrustScorei越低。由于在PBFT算法中存在节点之间两两通信的过程，恶意节点对于不同节点的表现又是随机的，因此需要通过计算组中任意两个节点之间的信用值来对一个节点的信用进行总体评分。通过这样计算出TrustScore，除去少数伪装较好的恶意节点外，大部分恶意节点和所有宕机节点的分数一定会偏低，从而达到筛选节点的目的。其中剩余的少数恶意节点能够由PBFT算法的机制进行容忍。TrustScore的算法过程分为三个步骤：第一步是统计各节点发送消息数量；第二步是计算各节点间相对信任值；第三步是计算各节点的全局信任值。在第一步中，主节点对网络流量进行监视，并对两节点间发送的消息数量进行统计。Cij即为节点j发送给节点i的消息数量。由于下文采用的是改进的两阶段PBFT算法，因此在一个评分周期T0内，对于i非主节点的情况，0≤Cij≤t，其中t为T0时间段内节点群所处理请求的数量。若某两节点之间发送信息数量不在此范围内，则可直接判定消息发送节点为恶意节点，主节点将在第三阶段的RalatePunish算法中将其分数归零，即在下一阶段共识中将其排除出背书节点群。在第二步中，根据下式计算各两两节点之间的相对信任值Tij。其中，需要分辨的是Tij和Tji表示的是不同的相对信任值：Tij表示对节点i而言节点j的相对信任值；Tji表示的是对节点j而言节点i的相对信任值。当i＝j时，Tij本不存在，但为了下文中描述的简洁性，在此取其为0，不影响最终的结果。在第三步中，根据下式计算各节点的全局信任值TrustScorepi。其中p表示GeoTrust打分的轮次。其中，本算法考虑了信用值的连续性，GeoTrustScorei表示该节点上一打分周期的最终得分。当p＝1时，令GeoTrustScore0i＝1/n为其初值。通过此式易知：当某节点a宕机后，其TrustScorepa＝0，在下一周期中无论其是否恢复宕机，仍满足TrustScorea＝0。因此，在这里引入了超参数γ作为Cij在每一轮次中的初值，且γ＞0。通过调节γ的大小，可以控制宕机行为对于该节点TrustScore的影响大小。γ越小，出现一次宕机将对节点的影响较大，反之则较小。但不建议将γ取为一个过大的数字，因为这将使所有节点间的Tij值趋于均衡化，从而模糊了好节点和坏节点的界限。由于每个共识周期内，除去Prepare和reply阶段的通信，主节点还发送Pre-Prepare消息给各个节点，且主节点位置不变，因此最终的评分主节点将维持在一个较高的水平。但由于其特殊性质，这里不将主节点的分数高低作为下一个评分周期的选用条件，换言之，无论主节点的分数如何，其仍将在下一个周期中担任主节点。因此，Pre-Prepare阶段带来的对于主节点信用分的不平等性可以不计。算法伪代码如图4所示。其中第2行设置的是算法启动时的设定，令各节点GeoTrustScore均为节点数分之一。6-13行为组内各个节点在一个T0周期内计算其收到来自其他各个节点的Prepare消息次数过程，其中节点i收到来自节点j的Prepare消息个数记为Cij。14-21行为计算各个节点相对信任度Tij的过程，其中Si为节点i收到的Prepare消息总数。22行为计算节点i在p回合的全局信任度TrustScorepi过程。牵连惩罚算法现对评分重调整的部分进行说明。经申请人的研究表明，在已知某节点成为恶意节点或宕机的情况下，由于物联网装备硬件、协议、网络配置、供电方式等的相似性，其同一位置附近节点有较大概率受到相同攻击成为恶意节点或因相同原因宕机。因此，在GeoScore和TrustScore相加之后，还需要根据其地理位置特点，对总分较低的节点周边的节点进行分数下调。将这个算法称为RelatePunish算法。RelatePunish算法分为4步，第一步是将GeoScore和TrustScore进行加权相加，得出初始总分；第二步是将上一个阶段中已找出的恶意节点的总分清零；第三步是将初始总分最低的β个节点和已找出的恶意节点归入BadNodes集合；第四步是将距离BadNodes集合中节点小于α的节点进行降分。在第一步中，超参数δ决定了在节点总分中TrustScore和GeoScore的重要性占比，其中δ＞0，δ越大，则位置移动对于节点的总分影响越大。在第二步中，令恶意节点的总分为0，是由于其性质特殊，一旦找出，将永久将其排除出背书节点群。在第三步中，找出的差节点将在下一轮T0中的共识中不参与背书。在第四步中，α表示收到连坐节点的最远距离，与坏节点之间超过这个距离的节点将不受影响。利用下式计算惩罚节点的分数：GeoTrustScorepi＝InitScorepi其中k＞0，k越大，函数随着Cij的增大上升越快，差节点附近的节点受到的影响就越小。算法伪代码如图5所示。其中1-13行为第一步和第二步。14-22行为第三步。23-30行为第四步。1.2.5第三阶段共识两阶段改进的PBFT算法两阶段改进的PBFT在协商一致的过程中可进行多次。在PBFT中，预准备和准备阶段用于对同一视图中的请求进行排序，而commit阶段用于确保在view之间对提交的请求进行完全排序。由于在所提出的共识方法中主节点是确定的，不存在视图切换的过程，因此可以将三阶段PBFT简化为两阶段，即PrePrepare、Prepare两阶段。如图6所示，两阶段PBFT中，节点之间只需进行1次两两通信，即可完成共识。首先，由客户节点向主节点发送消息。主节点收到客户端发送来的消息后，构造pre-prepare消息结构体＜＜PRE-PREPARE，n，d＞，m＞广播到集群中的其它节点。在Pre-prepare消息中，Pre-prepare标识当前消息的协议阶段，n是主节点的广播消息的唯一序列号，d是m的消息摘要，m是客户端发送的消息。从主节点接收到预准备消息后，副本节点将检查该消息。检查通过后，消息将存储在节点中，并将其状态更改为PREPARE状态。状态更改完成后，节点广播消息＜＜PREPARA，n，d，i＞，其中i是节点的编号。消息的有效性检查如下：①PRE-PREPARE标识当前消息所处的协议阶段。②n为主节点广播消息的一个唯一递增序号。③d为m的消息摘要。④m为客户端发来的消息。副本收到主节点请求后，会对消息进行检查，检查通过后会将消息存储在本节点，并且变更自身状态到PREPARE状态。状态变更完成后，节点广播消息＜＜PREPARA，n，d，i＞＞，其中i是本节点的编号。对消息的有效性有如下检查：①检查收到的消息体中摘要d，是否和自己对m生成的摘要一致，确保消息的完整性。②检查序号n是否在水线h和H之间，避免快速消耗可用序号。③检查之前是否接收过相同序号n，但是不同摘要d的消息。副本收到2f+1个一致的PREPARE消息后，执行m中包含的操作，其中，如果有多个m则按照序号n从小到大执行，执行完毕后发送执行成功的消息给客户端。组间共识共识的总体流程如图7所示，该图是图1中所述的“共识过程”的展开图。其中，图中的最底层代表消息产生者所在组的共识过程，图中的最底层上面的一层代表主节点群对此消息的共识过程，图中的上面两层代表消息在其他组内的共识过程。最终达到全局一致性。在图示不同共识过程中，灰度相同的横线代表此为同一节点，虚线代表节点以不同身份在不同层级的共识中进行转换。总共识的开始和结束都在消息产生者所在组进行。步骤1：组内共识其具体步骤已在前文中说明，但在总体共识过程中对其又进行了一些定制化设置。当客户节点发送一条request消息给主节点后，主节点先不发送PrePrepare消息给组内各个背书节点，而是在主节点群中向Leader节点请求一个全局唯一递增消息序号n，而后再进行后续的PrePrepare和Prepare过程。步骤2：组间分发由于在设置中，边缘服务器是可信服务器，只会出现宕机而不会作恶，因此为了提高效率，在主节点群中采用更为简单的Raft算法。针对具体的情况，同样对Raft算法进行了定制化改进。当本回合Leader节点收到来自主节点的序号请求消息＜＜REQ_SRL_NUM，timestamp，d＞，m＞后，等待一段时间，确认在此timestamp之前没有来自其他主节点的序号请求，而后返回序号＜SRL_NUM，n，d＞。在序号请求消息中：①REQ_SRL_NUM标识当前消息所处的协议阶段。②timestamp为主节点广播收到消息的时间戳。③d为m的消息摘要。④m为客户端发来的消息。在序号返回消息中：①SRL_NUM标识当前消息所处的协议阶段。②n为Leader节点广播消息的一个唯一递增序号。③timestamp为主节点广播收到消息的时间戳。④d为m的消息摘要。由于主节点群中各个节点最终执行消息是在后文的第三阶段中进行的，因此在主节点群的Raft算法中只保留了其消息分发的阶段和Leader节点选举等机制，并增加了reply消息汇总的步骤。在主节点群中，Leader节点确定消息的全局序号后，发送序号返回消息的同时，在主节点群中发送这条消息，而后等待各主节点组内共识后的reply消息。步骤3：其他组的组内共识当主节点群中的其他主节点收到来自Leader广播的消息时，在给Leader节点返回确认信息的同时，主节点在自己组内直接发送这条消息的PrePrepare消息。其余部分与前文中所述两阶段PBFT一致。不同的是，此时并没有REQUEST阶段，同时，由于主节点本身就是作为client节点的身份的，因此在本组中reply阶段的消息接收者即为client节点。步骤4：返回阶段相反，第三阶段中REPLY消息并没有消失，而是由主节点直接在主节点群中返回给消息产生组的主节点。当初始主节点收到来自主节点群中/2个回复后，即可在组内向客户节点返回FINAL_REPLY消息，并将此阶段称为终确认。客户节点收到终确认消息后便认为此消息已被接受。至此，节点间共识的过程就完成了。值得注意的是，虽然在表述上将其分为第一至第四阶段，但从时序上来说，本组内共识和其他组的组内共识是同时进行的。1.3仿真实验实验部分如无必要就删去在本节的三个阶段流程中，第一阶段是针对以边缘服务器为中心的分组方法研究；第二阶段是针对物联网终端位置、通信等特点进行了基于地理和信用的评分机制设计，能够在共识之前排除故障和恶意节点，进而提升组内共识的总体性能。前两阶段主要是针对物联网边缘计算场景下本实施例的基于PBFT的装备质量信息管理节点共识方法的应用设置。第三阶段主要是基于前两阶段进行的共识过程改进，提高通信效率。基于此，本节在前两部分设计的基础上，对本实施例的基于PBFT的装备质量信息管理节点共识方法的共识部分进行仿真实验，主要从三方面进行：一是对本方法与K-PBFT和PBFT的单次共识耗时进行对比；二是对不同网络设置下EIoT-PBFT的平均单次共识耗时进行对比分析；三是对本方法与PBFT的单次共识消耗通信次数进行对比分析。1.3.1单次共识耗时对比K-PBFT算法也是一种分组改进的PBFT算法，其利用K-medoids聚类算法对参与区块链共识的大规模网络节点根据特征进行聚类与层次划分，再将改进的多中心化实用拜占庭容错算法应用于这种聚类后的分层模型中。为了便于对比分析，在此沿用了K-PBFT的仿真设置。通过20次重复对比实验计算出PBFT单次共识的平均耗时为579.1ms，K-PBFT单次共识的平均耗时为451.8ms，本实施例的基于PBFT的装备质量信息管理节点共识方法，单次共识的平均耗时为367.9ms。实验结果表明，该方法相较于PBFT算法，单次共识耗时缩短了36.4％，EIoT-PBFT算法相较于K-PBFT算法，单次共识耗时缩短了18.5％。1.3.2不同网络设置下的平均单次共识耗时从整体来看，同时共识耗时在不同的取值下均维持稳定，且数据样本的方差和均值都较小。因此可以确定，本实施例的基于PBFT的装备质量信息管理节点共识方法，对于边缘计算物联网场景而言适用性较好，能够应对大规模的物联网网络和多样化的边缘服务器部署形态。1.3.3单次共识的总通信次数对比对于网络整体而言，达成共识的过程中消耗的总通信次数越多，越容易造成网络拥堵，性能下降。因此，需要衡量单次共识所消耗的通信次数。为了定量分析本实施例的基于PBFT的装备质量信息管理节点共识方法对PBFT通信数量的减少率，实验中取一组值进行计算，结果如下：在物联网总节点数达到1000的情况下，应用本实施例的基于PBFT的装备质量信息管理节点共识方法，只需将少量边缘服务器设置为聚类中心，就可以极大降低系统的总通信次数。当k＝5时便可以降低90.09％的总通信量，达到较为满意的范围。同时，结合1.3.2实验结果发现，当聚类中心足够多时，如本实施例中达到10个后，无论是单次共识耗时还是网络总通信量方面，其对系统的提升便不再显著。因此在应用该方法进行部署时，不需要在网络中增加较多边缘服务器便可以达到较好效果。同时，值得注意的是，本实验没有考虑在第二步中恶意节点和宕机节点因为评分过低而被踢出背书节点群的情况。在考虑这种情况的基础上，实际应用本实施例给出的基于PBFT的装备质量信息管理节点共识方法，效能将优于实验中所示效果，鲁棒性和稳定性更优。综上，本实施例给出的基于PBFT的装备质量信息管理节点共识方法，能够在实现全局一致性的情况下显著降低网络的拥塞，从而缓解物联网网络的通信压力，并能提升系统总体性能。1.4小结本实施例给出的基于PBFT的装备质量信息管理节点共识方法，采用多步骤的基于改进PBFT的公式方法，该方法涵盖了分组、评分和共识过程等方面的创新和优化。在评分方面，分别提出了Greedy聚类算法和Geo-Trust算法，创新性地引入了在物联网边缘计算环境下考虑位置、声誉和相关惩罚的评分机制。在共识过程方面，引入了两阶段PBFT，在此基础上提出了Raft中结合Leader选举和心跳机制的四步共识过程。可以应对网络规模大、节点分布广、拓扑复杂的挑战。主要贡献如下：提出了面向物联网边缘计算的多阶段共识算法框架，并对其三个阶段进行了详细说明。包括分组、打分、共识三个步骤。对其他特殊情况也进行了说明。提出了贪婪聚类算法，用以对边缘端节点进行分组。依据与边缘服务器的网络延迟来进行聚类，能够确保组内通信速度，提升组内共识速度。提出了Geo-Trust模型，用于对节点进行筛选。该模型结合了物联网终端的位置信息和信誉值，通过剔除可疑节点，能够对共识节点群的差节点数进行缩减，进而提升共识性能。通过理论证明和仿真实验，对本实施例的基于PBFT的装备质量信息管理节点共识方法的性能、安全性和开支等进行了分析，并与PBFT和K-PBFT进行了对比。
