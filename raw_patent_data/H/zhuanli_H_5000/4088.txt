标题title
一种基于Unix域套接字实现国密功能的系统及其方法
摘要abst
本发明涉及一种基于Unix域套接字实现国密功能的系统及其方法，该系统包括管理端、API网关、客户端和后端，其中，管理端和客户端分别连接至API网关，API网关连接至后端，API网关连接有国密应用端，API网关和国密应用端部署于同一个处理服务器，管理端用于发送外界控制信号给API网关；客户端用于发送加密请求给API网关；API网关采用多进程模型，通过执行网关业务逻辑、与国密应用端之间通过Unix域套接字进行通讯，以完成对加密请求的处理，并将处理结果转发至后端。与现有技术相比，本发明在同一个处理服务器上启动网关应用和国密应用，两个应用通过Unix域套接字实现进程间通讯，能够有效提高网关处理请求的效率、节省硬件资源。
权利要求书clms
1.一种基于Unix域套接字实现国密功能的系统，其特征在于，包括管理端、API网关、客户端和后端，所述管理端和客户端分别连接至API网关，所述API网关连接至后端，所述API网关连接有国密应用端，所述API网关和国密应用端部署于同一个处理服务器，所述管理端用于发送外界控制信号给API网关；所述客户端用于发送加密请求给API网关；所述API网关采用多进程模型，通过执行网关业务逻辑、与国密应用端之间通过Unix域套接字进行通讯，以完成对加密请求的处理，并将处理结果转发至后端。2.根据权利要求1所述的一种基于Unix域套接字实现国密功能的系统，其特征在于，所述多进程模型包括与管理进程分别连接的多个工作进程，所述管理进程与管理端连接，用于将外界控制信号转发给各工作进程，以及监控各工作进程的运行状态；所述多个工作进程同等竞争来自客户端的加密请求，并对竞争得到的加密请求进行处理，将处理结果转发至后端。3.根据权利要求2所述的一种基于Unix域套接字实现国密功能的系统，其特征在于，所述管理进程和多个工作进程分别设置有对应的Lua虚拟机。4.一种基于Unix域套接字实现国密功能的方法，其特征在于，包括以下步骤：S1、管理端发送外界控制信号给API网关；客户端发送加密请求给API网关；S2、根据外界控制信号，API网关对应执行启动、停止或重启操作；S3、API网关接收加密请求，运行网关业务逻辑，并与国密应用端之间通过Unix域套接字进行通讯，以完成对加密请求的处理，得到处理结果；S4、API网关将处理结果转发至后端。5.根据权利要求4所述的一种基于Unix域套接字实现国密功能的方法，其特征在于，所述步骤S1具体包括以下步骤：S11、管理端发送外界控制信号给管理进程；S12、管理进程将外界控制信号对应转发给各个工作进程，并实时监控个工作进程的运行状态；S13、客户端使用国密库对原始请求进行加密，得到加密请求，并将加密请求发送至API网关。6.根据权利要求5所述的一种基于Unix域套接字实现国密功能的方法，其特征在于，所述步骤S12中若管理进程监控到某个工作进程发生异常，则输出启动信号给其余正常的工作进程。7.根据权利要求4所述的一种基于Unix域套接字实现国密功能的方法，其特征在于，所述步骤S3具体包括以下步骤：S31、多个工作进程竞争来自客户端的加密请求；S32、针对竞争得到的加密请求，工作进程执行网关业务逻辑，与国密应用端之间通过Unix域套接字进行通讯，对加密请求进行解密，得到原始请求。8.根据权利要求7所述的一种基于Unix域套接字实现国密功能的方法，其特征在于，所述步骤S32中工作进程具体是在Lua环境中执行网关业务逻辑，所述网关业务逻辑包括但不限于黑白名单、限流和鉴权。9.根据权利要求7所述的一种基于Unix域套接字实现国密功能的方法，其特征在于，所述步骤S32具体包括以下步骤：S321、针对竞争得到的加密请求，工作进程依次执行黑白名单、限流和鉴权操作；S322、在执行鉴权操作时，工作进程通过Unix域套接字建立与国密应用端的通讯连接，完成对加密请求的解密，得到原始请求。10.根据权利要求8所述的一种基于Unix域套接字实现国密功能的方法，其特征在于，所述步骤S322的具体过程为：工作进程通过Unix套接字将加密请求报文发送给国密应用端；国密应用端对接收到的加密请求报文进行相应解密操作，得到原始请求报文，并将原始请求报文返回给对应的工作进程。
说明书desc
技术领域本发明涉及网关开发技术领域，尤其是涉及一种基于Unix域套接字实现国密功能的系统及其方法。背景技术国密即国家密码局认定的国产密码算法。目前在实现国密功能时，主要是利用网关通过HTTP请求调用可提供国密相关功能的应用，再通过该应用的国密功能对报文进行相关操作，应用操作完毕后最终将结果返回给网关。上述方式在实际使用时，会增加额外的网络调用过程，网关调用前需要将相关信息序列化，然后发送出去；国密应用接收到请求后，则需要先对请求反序列化，然后再对请求进行相关的国密处理，处理完毕后将结果序列化后、再返回给网关；网关收到请求后需要先将结果反序列化后才能继续进行相关处理。这些额外的处理步骤将会严重降低网关处理相关请求的效率，此外，由于还需要单独启动一个提供国密服务的应用，也就存在浪费硬件资源的情况。发明内容本发明的目的就是为了克服上述现有技术存在的缺陷而提供一种基于Unix域套接字实现国密功能的系统及其方法，以能够提高网关处理请求的效率、节省硬件资源。本发明的目的可以通过以下技术方案来实现：一种基于Unix域套接字实现国密功能的系统，包括管理端、API网关、客户端和后端，所述管理端和客户端分别连接至API网关，所述API网关连接至后端，所述API网关连接有国密应用端，所述API网关和国密应用端部署于同一个处理服务器，所述管理端用于发送外界控制信号给API网关；所述客户端用于发送加密请求给API网关；所述API网关采用多进程模型，通过执行网关业务逻辑、与国密应用端之间通过Unix域套接字进行通讯，以完成对加密请求的处理，并将处理结果转发至后端。进一步地，所述多进程模型包括与管理进程分别连接的多个工作进程，所述管理进程与管理端连接，用于将外界控制信号转发给各工作进程，以及监控各工作进程的运行状态；所述多个工作进程同等竞争来自客户端的加密请求，并对竞争得到的加密请求进行处理，将处理结果转发至后端。进一步地，所述管理进程和多个工作进程分别设置有对应的Lua虚拟机。一种基于Unix域套接字实现国密功能的方法，包括以下步骤：S1、管理端发送外界控制信号给API网关；客户端发送加密请求给API网关；S2、根据外界控制信号，API网关对应执行启动、停止或重启操作；S3、API网关接收加密请求，运行网关业务逻辑，并与国密应用端之间通过Unix域套接字进行通讯，以完成对加密请求的处理，得到处理结果；S4、API网关将处理结果转发至后端。进一步地，所述步骤S1具体包括以下步骤：S11、管理端发送外界控制信号给管理进程；S12、管理进程将外界控制信号对应转发给各个工作进程，并实时监控个工作进程的运行状态；S13、客户端使用国密库对原始请求进行加密，得到加密请求，并将加密请求发送至API网关。进一步地，所述步骤S12中若管理进程监控到某个工作进程发生异常，则输出启动信号给其余正常的工作进程。进一步地，所述步骤S3具体包括以下步骤：S31、多个工作进程竞争来自客户端的加密请求；S32、针对竞争得到的加密请求，工作进程执行网关业务逻辑，与国密应用端之间通过Unix域套接字进行通讯，对加密请求进行解密，得到原始请求。进一步地，所述步骤S32中工作进程具体是在Lua环境中执行网关业务逻辑，所述网关业务逻辑包括但不限于黑白名单、限流和鉴权。进一步地，所述步骤S32具体包括以下步骤：S321、针对竞争得到的加密请求，工作进程依次执行黑白名单、限流和鉴权操作；S322、在执行鉴权操作时，工作进程通过Unix域套接字建立与国密应用端的通讯连接，完成对加密请求的解密，得到原始请求。进一步地，所述步骤S322的具体过程为：工作进程通过Unix套接字将加密请求报文发送给国密应用端；国密应用端对接收到的加密请求报文进行相应解密操作，得到原始请求报文，并将原始请求报文返回给对应的工作进程。与现有技术相比，本发明通过在同一个处理服务器上部署国密应用端和API网关，API网关在接收客户端的请求后，能够通过Unix域套接字技术实现与国密应用端的通讯，从而完成对请求的处理，由此减少了额外的网络请求及序列化反序列化操作，提高了网关处理请求的效率；由于API网关能够在同一台服务器上调用国密应用，不再需要启动额外的国密应用，从而节省了硬件资源。本发明中API网关采用多进程模型，管理进程管理多个工作进程、并响应管理端的操作；各个工作进程独立运行，通过竞争获得来自客户端的请求并进行处理，进一步提升了网关处理请求的效率。附图说明图1为本发明的系统结构示意图；图2为实施例中系统架构示意图；图3为本发明的方法流程示意图；图4为实施例中工作进程处理请求的流程示意图；图中标记说明：1、管理端，2、API网关，3、客户端，4、后端，5、国密应用端，6、处理服务器。具体实施方式下面结合附图和具体实施例对本发明进行详细说明。实施例如图1所示，一种基于Unix域套接字实现国密功能的系统，包括管理端1、API网关2、客户端3和后端4，管理端1和客户端3分别连接至API网关2，API网关2连接至后端4，API网关2连接有国密应用端5，API网关2和国密应用端5部署于同一个处理服务器6，管理端1用于发送外界控制信号给API网关2；客户端3用于发送加密请求给API网关2；API网关2采用多进程模型，通过执行网关业务逻辑、与国密应用端5之间通过Unix域套接字进行通讯，以完成对加密请求的处理，并将处理结果转发至后端4。如图2所示，API网关2的多进程模型包括与管理进程分别连接的多个工作进程，管理进程与管理端1连接，用于将外界控制信号转发给各工作进程，以及监控各工作进程的运行状态；多个工作进程同等竞争来自客户端3的加密请求，并通过Unix域套接字与国密应用端5进行通讯连接，以对竞争得到的加密请求进行处理，再将处理结果转发至后端4。本实施例中，管理进程和多个工作进程分别设置有对应的Lua虚拟机。将上述系统应用于实际，以实现一种基于Unix域套接字实现国密功能的方法，如图3所示，包括以下步骤：S1、管理端发送外界控制信号给API网关；客户端发送加密请求给API网关；具体的：S11、管理端发送外界控制信号给管理进程；S12、管理进程将外界控制信号对应转发给各个工作进程，并实时监控个工作进程的运行状态，若管理进程监控到某个工作进程发生异常，则输出启动信号给其余正常的工作进程；S13、客户端使用国密库对原始请求进行加密，得到加密请求，并将加密请求发送至API网关；S2、根据外界控制信号，API网关对应执行启动、停止或重启操作；S3、API网关接收加密请求，运行网关业务逻辑，并与国密应用端之间通过Unix域套接字进行通讯，以完成对加密请求的处理，得到处理结果；具体的：S31、多个工作进程竞争来自客户端的加密请求；S32、针对竞争得到的加密请求，工作进程执行网关业务逻辑，与国密应用端之间通过Unix域套接字进行通讯，对加密请求进行解密，得到原始请求，本实施例中，如图4所示，工作进程具体是在Lua环境中执行网关业务逻辑，网关业务逻辑包括但不限于黑白名单、限流和鉴权；工作进程依次执行黑白名单、限流和鉴权操作；在执行鉴权操作时，工作进程通过Unix域套接字建立与国密应用端的通讯连接，即通过Unix套接字将加密请求报文发送给国密应用端；国密应用端对接收到的加密请求报文进行相应解密操作，得到原始请求报文，并将原始请求报文返回给对应的工作进程；S4、API网关将处理结果转发至后端。本技术方案在具体应用时，首先需要在同一台处理服务器上部署API网关和国密应用端，并保证二者之间通过Unix域套接字实现通讯连接。API网关采用多进程模型，其中管理进程负责管理多个工作进程，管理进程还用于响应管理员的各种操作，工作进程则负责独立处理用户请求，每个工作进程中都包含一个LuaJIT，LuaJIT执行网关相关的业务逻辑。当用户请求进入API网关后，LuaJIT会运行相关网关的业务逻辑，如黑白名单，限流鉴权等。当网关执行鉴权时如需使用国密功能，则通过Unix域套接字建立与国密应用端的通讯连接，以实现解密操作，当网关的内部处理完请求后，会将该笔请求转发到对应的上游服务。综上所述，本技术方案通过将API网关和国密应用端部署于同一台处理服务器，基于Unix域套接字技术，使得网关运行时可以在同一台服务器上调用国密应用来处理相关请求，减少了额外的网络请求，提高了网关处理请求的效率；并且由于网关具备国密相关功能后就不再需要额外启动国密应用，可有效节省硬件资源。
