标题title
一种网络协议模糊测试方法及框架
摘要abst
本发明公开了一种网络协议模糊测试方法及框架。本发明实现了可配置参数的数据生成策略，依据模糊数据产生的本质，对协议模型中数值类型的字段使用对数函数取值的变异方法，对字符串类型的字段使用字符替换和宽度变换的变异方法，并支持双字段同时模糊的方法。工具使用时，所有的变异方法可根据协议特点配置参数，从而使得生成的模糊数据具备一定的畸形度和覆盖宽度，提高了协议模糊测试的有效性。
权利要求书clms
1.一种网络协议模糊测试方法，其特征在于，包括以下步骤：S1、构建数据包；S2、利用WinPcap工具抓取数据包；S3、在抓取到数据后，对被抓取的数据进行解析，展示数据的内容；S4、在抓取到数据后，允许用户表示数据包中可以进行变异的位置，以便进行模糊测试；S5、创建一个可以由用户指定数据包中任何字节的值的裸数据包，保证裸数据包符合RFC定义的结构，通过模糊测试器对协议头进行模糊测试。2.根据权利要求1所述的网络协议模糊测试方法，其特征在于，所述步骤S4的具体步骤为：允许用户在以十六进制方式显示的数据内容中加入标签，表明进行模糊测试的部分。3.根据权利要求2所述的网络协议模糊测试方法，其特征在于，所述标签包括：-表示强制，将使用所有可能的字节值用方括号括起来的字节进行模糊测试，将每一个字节模糊测试256次；＜XX＞-表示字符串，从用户控制的文本文件中获得预定义的，可变长的，以十六进制方式表示的字符串进行模糊测试。4.一种网络协议模糊测试框架，其特征在于，包括测试生成器、错误监控模块和目标程序运行器；所述测试生成器用于测试用例的构建；所述目标程序运行器用于在程序执行阶段，在每轮测试之前启动待测程序；所述错误监控模块用于在漏洞监控阶段，对程序运行过程中出现的异常情况进行识别与记录。5.根据权利要求4所述的网络协议模糊测试框架，其特征在于，所述测试用例的构建包括基于生成构建测试用例和基于突变构建测试用例。6.根据权利要求5所述的网络协议模糊测试框架，其特征在于，所述基于生成构建测试用例具体为：使用测试人员提供的输入模型，解析输入模型得到输入格式，依据输入格式生成新的测试用例。7.根据权利要求5所述的网络协议模糊测试框架，其特征在于，所述基于突变构建测试用例具体为：在修改测试人员提供的测试样例的基础上生成新的测试用例，不需要了解输入格式，直接修改现有的数据，构建测试用例。8.根据权利要求4所述的网络协议模糊测试框架，其特征在于，所述目标程序运行器支持5种类型的I/O接口，分别是发送和接收带有IP头的raw IPv4数据包、发送和接收带有IP头的raw IPv6数据包、发送和接收TCP数据包、发送和接收UDP数据包、发送和接收HTTP数据包。9.根据权利要求4所述的网络协议模糊测试框架，其特征在于，在程序执行的过程中，若出现非预期状态，则认为存在一个漏洞，所述非预期状态包括可观测和不可观测异常行为。
说明书desc
技术领域本发明涉及模糊测试技术领域，具体涉及一种网络协议模糊测试方法及框架。背景技术模糊测试，是一种通过向目标系统提供非预期的输入并监视异常结果来发现软件漏洞的方法。其核心思想是自动或半自动的生成随机数据输入到一个程序中，并监控目标程序异常，如崩溃，断言失败，以发现可能的程序错误，比如内存泄漏等。网络协议模糊器的测试对象主要是各类网络产品中的网络协议解析模块，目的是测试其在组装、解析网络协议过程中是否存在漏洞。其思想是模糊器通过Socket与被测目标之间进行通信,向被测目标应用发送变异或包含错误的模糊值,并监视目标应用以发现错误。使用网络协议模糊器进行模糊测试，需要首先研究各类协议的规范和标准，以便创建合理的测试数据。目前，最常见的网络协议模糊测试实施方案有两种：1)客户端和服务端测试模式即模糊器和被测对象分别为测试过程的两个端点。此时，模糊器可充当客户端的角色，用来测试服务端程序的安全性，例如Web服务程序。同时，模糊器也可以充当服务端的角色，用来测试客户端程序的安全性。模糊器中的监控模块用来对被测对象的行为进行收集、分析以判断是否存在异常情况。2)防火墙、路由器、安全网关等部署在网络中间的设备测试模式模糊器构造的数据被发送至协议服务器的过程中，位于模糊器和协议服务器之间的被测对象对其起到了重组和解析的作用，一旦重组和解析过程中出错，可能造成被测对象出现异常状态。模糊器中的监控模块用来对被测对象的异常状态进行收集、分析，最终定位漏洞所在。通过此方法可发现被测对象在网络协议处理过程中的安全漏洞。网络协议模糊测试目标包括任何能够接受网络数据的任务软件。OSI7层模型中从数据链路层到应用层每一层都有可能存在实现问题，再对测试目标进行全面审计时，每一层都要进行测试。依据常用的网络协议测试方法对待测软件源码利用程度的不同，可以将网络协议模糊测试分为黑盒模糊测试、白盒模糊测试以及灰盒模糊测试。以往各种类型的模糊测试工具存在以下四种技术缺陷：首先是拓展性不足，支持的协议有限，拓展支持新协议需要更改工具源代码；灵活性不足，不能指定协议的某一状态进行测试；对于不同的协议，自学习状态机的效果不同；不支持测试协议的客户端软件。其中黑盒模糊测试工具Peach在测试网络协议时，无覆盖率反馈，测试效率低；且模型文件在构建过程中耗时耗力。而灰盒模糊测试工具在测试网络协议时只能测试初始状态；且要想测试多个状态，需要更改AFL源码或待测程序源码。专门针对多状态网络协议的灰盒模糊测试工具AFLNET，也存在通用性不足的问题，不支持测试协议客户端程序，不支持测试路由协议，只支持部分协议的服务器端程序；另外拓展新协议时需要在AFLNET源码里添加新协议的处理逻辑，拓展难度大，且处理逻辑中响应状态码选取的好坏也会影响模糊测试的效果。发明内容针对现有技术中的上述不足，本发明提供的一种网络协议模糊测试方法及框架解决了灰盒模糊测试工具中存在的覆盖率和测试效率的问题。为了达到上述发明目的，本发明采用的技术方案为：一种网络协议模糊测试方法，包括以下步骤：S1、构建数据包；S2、利用WinPcap工具抓取数据包；S3、在抓取到数据后，对被抓取的数据进行解析，展示数据的内容；S4、在抓取到数据后，允许用户表示数据包中可以进行变异的位置，以便进行模糊测试；S5、创建一个可以由用户指定数据包中任何字节的值的裸数据包，保证裸数据包符合RFC定义的结构，通过模糊测试器对协议头进行模糊测试。进一步地：所述步骤S4的具体步骤为：允许用户在以十六进制方式显示的数据内容中加入标签，表明进行模糊测试的部分。进一步地：所述标签包括：-表示强制，将使用所有可能的字节值用方括号括起来的字节进行模糊测试，将每一个字节模糊测试256次；＜XX＞-表示字符串，从用户控制的文本文件中获得预定义的，可变长的，以十六进制方式表示的字符串进行模糊测试。进一步地：一种网络协议模糊测试框架，包括测试生成器、错误监控模块和目标程序运行器；所述测试生成器用于测试用例的构建；所述目标程序运行器用于在程序执行阶段，在每轮测试之前启动待测程序；所述错误监控模块用于在漏洞监控阶段，对程序运行过程中出现的异常情况进行识别与记录。进一步地：所述测试用例的构建包括基于生成构建测试用例和基于突变构建测试用例。进一步地：所述基于生成构建测试用例具体为：使用测试人员提供的输入模型，解析输入模型得到输入格式，依据输入格式生成新的测试用例。进一步地：所述基于突变构建测试用例具体为：在修改测试人员提供的测试样例的基础上生成新的测试用例，不需要了解输入格式，直接修改现有的数据，构建测试用例。进一步地：所述目标程序运行器支持5种类型的I/O接口，分别是发送和接收带有IP头的raw IPv4数据包、发送和接收带有IP头的raw IPv6数据包、发送和接收TCP数据包、发送和接收UDP数据包、发送和接收HTTP数据包。进一步地：在程序执行的过程中，若出现非预期状态，则认为存在一个漏洞，所述非预期状态包括可观测和不可观测异常行为。本发明的有益效果为：本发明实现了可配置参数的数据生成策略，依据模糊数据产生的本质，对协议模型中数值类型的字段使用对数函数取值的变异方法，对字符串类型的字段使用字符替换和宽度变换的变异方法，并支持双字段同时模糊的方法。工具使用时，所有的变异方法可根据协议特点配置参数，从而使得生成的模糊数据具备一定的畸形度和覆盖宽度，提高了协议模糊测试的有效性。附图说明图1为本发明中模糊测试方法流程图；图2为本发明中模糊测试框架图；图3为模型文件自动生成器架构图。具体实施方式下面对本发明的具体实施方式进行描述，以便于本技术领域的技术人员理解本发明，但应该清楚，本发明不限于具体实施方式的范围，对本技术领域的普通技术人员来讲，只要各种变化在所附的权利要求限定和确定的本发明的精神和范围内，这些变化是显而易见的，一切利用本发明构思的发明创造均在保护之列。如图1所示，一种网络协议模糊测试方法，包括以下步骤：S1、构建数据包利用数据包变异方法，基于已有的合法数据包创建一个模板，并在模板中指明需要修改的办法；S2、利用WinPcap工具抓取数据包；S3、在抓取到数据后，对被抓取的数据进行解析，以易于被理解的格式展示数据的内容；S4、在抓取到数据后，允许用户表示数据包中可以进行变异的位置，以便进行模糊测试；允许用户在以十六进制方式显示的数据内容中加入标签，表明进行模糊测试的部分。-表示强制，将使用所有可能的字节值用方括号括起来的字节进行模糊测试，将每一个字节模糊测试256次；＜XX＞-表示字符串，从用户控制的文本文件中获得预定义的，可变长的，以十六进制方式表示的字符串进行模糊测试。S5、创建一个可以由用户指定数据包中任何字节的值的裸数据包，保证裸数据包符合RFC定义的结构，通过模糊测试器对协议头进行模糊测试。如图2所示，一种网络协议模糊测试框架，包括测试生成器、错误监控模块和目标程序运行器；测试生成器主要用于测试用例的构建，在用例构建阶段，构建测试用例的质量决定了模糊测试的效率，决定了能发现漏洞的数量。依据数据产生的方式，测试用例的构建通常是有两种方法，一是基于生成构建测试用例，这种方式下生成的新测试样例具备一定的格式约束，通常使用测试人员提供的输入模型，解析输入模型得到输入格式，然后依据输入格式生成新的测试用例。二是基于突变构建测试用例，这种方式是在修改测试人员提供的测试样例的基础上生成新的测试样例，不需要了解输入的格式，而是直接修改现有的数据，构建测试用例。基于突变的模糊测试几乎不需要了解待测程序所需的输入格式，对测试人员的要求不高。对于格式要求严格的文件解析器或网络协议来说，基于生成的模糊测试更容易构建出有效的测试用例，但需要研究人员提前做大量的研究工作，分析文件格式或网络协议报文格式，手动撰写模型文件。分析目标在协议实现时的数据输入和输出，产生尽可能覆盖代码所有路径的输入数据，是进行有效模糊测试的关键一步，也是模糊测试向自动化、智能化发展与研究的重要方向。测试生成器由协议分析器、协议状态机、变异器协同工作产生的测试用例，协议分析器解决了协议测试数据包内部的格式规范问题，协议状态机解决了数据包之间的时序规范问题。这种产生方式能有效提高协议测试所能达到的深度和广度。目标程序运行器，也称为目标程序执行器，主要作用在程序执行阶段，测试工具要负责在每轮测试之前启动待测程序。由于模糊测试的目的是尽可能发现更多的漏洞，所以模糊测试的过程往往是不会因为发现一个漏洞主动停止，而是一直循环这个测试过程，直到达到程序的超时时间或者其他预设的终止条件。执行器是测试工具发送和接收数据的I/O接口。执行器设计支持5种类型的I/O接口，分别是发送和接收带有IP头的raw IPv4数据包、发送和接收带有IP头的raw IPv6数据包、发送和接收TCP数据包、发送和接收UDP数据包、发送和接收HTTP数据包。协议分析器、协议状态机、变异器以及执行器4个模块协同运行，在有效的规则下产生随机测试数据，并将这些数据作为输入发送给待测目标，因此也可以一起合并称为“产生引擎”。错误监控模块主要作用在漏洞监控阶段，测试工具负责对程序运行过程出现的异常情况进行识别与记录。在程序执行的过程中，若出现非预期状态，则认为是存在一个漏洞，而非预期状态又可以分为可观测和不可观测两种。通常情况下，没有专门的文档描述程序的预期状态和非预期状态，一般将可观测的异常行为视为非预期状态。而这种简化的处理意味着模糊测试可能会出现漏报的问题，即遇到观测不到的非预期状态时将出现漏报。测试过程中，监视错误、异常是一个非常重要但经常被忽视的步骤。由于模糊测试产生的数据包数据量非常大，目标异常的定义具有多样性。当被测目标出现不响应、崩溃、CPU使用100％或是返回数据不正确时，若无法确定哪个数据包是真正引发服务器崩溃的原因，那么整个测试过程都没有意义。实时监测和记录目标程序的运行，能找到引发目标程序异常的测试数据，从而重现异常。工具的监视器可分为两种。一种与测试工具同时运行，在本框架设计过程中作为工具组件的一部分，采用侦察包确认法，即当执行器向被测目标发送一组畸形测试数据后，再引入一个正常的“侦察包”，通过观察分析被测目标对侦察包数据的响应情况来监控被测目标的运行状态。例如，被测对象是Web服务器时，使用HTTP协议交互，执行器可以在发送完一组畸形测试数据后向被测目标发送一个“Http Get”请求侦察包，并确认在发送下一组畸形数据包之前收到一个回应，以判断被测目标系统是否已经在畸形报文作用下出现异常。默认情况下，Web服务器应针对请求返回Http状态码。如果被测对象对侦察包的响应不符合RFC的标准，则可进行重点分析。另一种情况，当无法利用测试目标响应的方法监测目标对象时，本框架设计采用调试跟踪法监测被测目标异常，借助WinDbg工具查看进程运行状态和内存地址等内容。日志记录器、监视器可合并叫做“监控引擎”。后台监控引擎可以通过日志的方式记录待测目标的异常信息，以协助用户定位产生异常位置，从而修复该错误。如图2所示，模型文件自动生成器包括解析器与生成器两个部分，解析器负责根据模板输入，提取出报文数据信息、状态转换信息以及配置信息。生成器负责利用解析器获取的信息，生成模型文件中的各个部分，包括数据模型、状态模型以及测试配置，并按照模型文件的格式规范和语法约束写入模型文件。在本发明的一个实施例中，模糊测试引擎启动后，首先进行种子选择与变异过程，生成变异种子后将其写入一个特定文件，该特定文件供智能状态导向引擎读取，以测试协议的目标状态。然后，通过管道一发送“start”消息来通知智能状态导向引擎开始与待测协议软件进行状态导向报文和变异报文的交互。收到“end”消息后，模糊测试引擎收集本轮测试的运行情况，包括代码覆盖信息、崩溃信息等。如果本轮测试探索到之前未被执行过的路径，则认为该变异种子是有价值的种子，保存到种子队列的队尾，用于后面的模糊测试。重复整个流程直到测试过程达到预设的超时时间或被人为终止。智能状态导向引擎启动后，首先解析模型文件，依据模型文件构建协议状态转换模型，然后等待模糊测试引擎发送“start”消息。收到该消息后，执行状态转换过程，若存在导向状态，则使用该状态下正常的协议报文与待测程序进行交互，使待测程序快速抵达目标状态。当待测程序到达目标状态后，智能状态导向引擎会读取灰盒模糊测试引擎提供的针对目标状态模糊测试的变异种子，包装成变异报文后发送给待测程序。最后，使用管道二向灰盒模糊测试引擎发送“end”消息告知当前轮次的报文交互已经结束，随后继续等待灰盒模糊测试引擎发送“start”消息，重复整个流程直到测试过程达到预设的超时时间或被人为终止。本发明以模型文件自动生成为例，分析了模型文件自动生成技术在代码输入规模、语法复杂性和生成模型文件有效性方面的优势。本发明设计的网络协议模糊测试系统能够有效简化模型文件构建过程，提高代码覆盖率，同时具备较强的可拓展性和通用性。
