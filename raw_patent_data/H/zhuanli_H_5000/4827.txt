标题title
一种云编程系统、方法、设备及计算机存储介质
摘要abst
本发明涉及物联网通信领域，并公开了一种云编程系统，该系统包括终端和云编辑器，所述终端和所述云编辑器之间建立通信连接，所述终端中设置有终端主服务通信单元，所述云编辑器中设置有云编辑器基础单元和云脚本编辑器；所述终端主服务通信单元，用于将所述终端中运行脚本发送至所述云编辑器基础单元；所述云编辑器基础单元，用于将接收的所述运行脚本同步到所述云脚本编辑器；所述云脚本编辑器，用于实时编辑并运行所述运行脚本，将编辑并运行后的所述运行脚本保存至所述终端。本发明还公开了一种云编程方法、设备和一种计算机存储介质。本发明通过一种云编程系统降低了物联网通信的开发和运维成本。
权利要求书clms
1.一种云编程系统，其特征在于，所述云编程系统包括终端和云编辑器，所述终端和所述云编辑器之间建立通信连接，所述终端中设置有终端主服务通信单元，所述云编辑器中设置有云编辑器基础单元和云脚本编辑器；所述终端主服务通信单元，用于将所述终端中运行脚本发送至所述云编辑器基础单元；所述云编辑器基础单元，用于将接收的所述运行脚本同步到所述云脚本编辑器；所述云脚本编辑器，用于实时编辑并运行所述运行脚本，将编辑并运行后的所述运行脚本保存至所述终端。2.如权利要求1所述的一种云编程系统，其特征在于，所述终端主服务通信单元中设置有终端脚本运行服务单元，所述终端脚本运行服务单元，用于启动所述终端中的所述运行脚本。3.如权利要求2所述的一种云编程系统，其特征在于，所述终端主服务通信单元中设置有终端基础固件单元，所述终端基础固件单元，用于将所述终端中启动的所述运行脚本发送到所述云编辑器基础单元。4.如权利要求1所述的一种云编程系统，其特征在于，所述终端中设置有5G射频天线，所述5G射频天线,用于向云编辑器接收和发送信息。5.如权利要求1所述的一种云编程系统，其特征在于，所述终端中设置有串口单元，所述串口单元,用于建立所述终端与其他终端之间的通信连接。6.一种云编程方法，其特征在于，所述云编程方法应用于云编辑器，所述云编程方法步骤，包括：获取终端发送的运行脚本；将所述运行脚本通过云编器基础单元同步到云脚本编辑器，并控制所述云脚本编辑器实时编辑并运行所述运行脚本；将编辑并运行后的所述运行脚本保存至所述终端。7.如权利要求6所述的云编程方法，其特征在于，所述获取终端发送的运行脚本的步骤，包括：获取终端发送的编码数据；根据预设的数据传输协议将所述编码数据进行解码得到运行脚本。8.一种云编程方法，其特征在于，所述云编程方法应用于终端，所述云编程方法步骤，包括：发送所述终端中的运行脚本到云编辑器基础单元；获取云脚本编辑器中编辑并运行后的所述运行脚本，并将编辑并运行后的所述运行脚本保存到所述终端；将所述运行脚本保存后并将收到的数据信息发送至其他终端或者接收所述其他终端发过来的所述数据信息。9.一种云编程设备，其特征在于，所述云编程设备包括：存储器、处理器及存储在所述存储器上并可在所述处理器上运行的云编程的程序，所述云编程的程序被所述处理器执行时实现如权利要求6至7、8中任一项所述的云编程方法的步骤。10.一种计算机存储介质，其特征在于，所述计算机存储介质上存储有云编程的程序，所述的云编程的程序被处理器执行时实现如权利要求6至7、8中任一项所述的云编程方法的步骤。
说明书desc
技术领域本发明涉及物联网通信领域，尤其涉及一种云编程系统、方法、设备及计算机存储介质。背景技术随着物联网通信技术的发展，蜂窝网络通信技术和速率不断提高，物联网拉近了人与人以及设备与设备的距离，同时也对物联网通信技术的成本和速率提出了更高的要求。传统的物联网DTU搭配单片机与蜂窝模组，通过提前进行编程、确认配置后提前烧录来进行正常的上下行通信。这种方式存在很大的缺陷，为了实现上下行通信需要搭配单片机与蜂窝模组进行提前进行编程、确认配置后提前烧录，提高了物联网通信的开发和运维成本。发明内容本发明的主要目的在于提供一种云编程方法、系统、设备及计算机存储介质，旨在解决如何降低物联网通信的成本的技术问题。为实现上述目的，本发明提供一种云编程系统，所述云编程系统包括终端和云编辑器，所述终端和所述云编辑器之间建立通信连接，所述终端中设置有终端主服务通信单元，所述云编辑器中设置有云编辑器基础单元和云脚本编辑器；所述终端主服务通信单元，用于将所述终端中运行脚本发送至所述云编辑器基础单元；所述云编辑器基础单元，用于将接收的所述运行脚本同步到所述云脚本编辑器；所述云脚本编辑器，用于实时编辑并运行所述运行脚本，将编辑并运行后的所述运行脚本保存至所述终端。可选地,所述终端主服务通信单元中设置有终端脚本运行服务单元，所述终端脚本运行服务单元，用于启动所述终端中的所述运行脚本。所述终端主服务通信单元中设置有终端基础固件单元，所述终端基础固件单元，用于将所述终端中启动的所述运行脚本发送到所述云编辑器基础单元。可选地,所述终端中设置有5G射频天线，所述5G射频天线,用于向云编辑器接收和发送信息。可选地,所述终端中设置有串口单元，所述串口单元,用于建立所述终端与其他终端之间的通信连接，并将编辑并运行后的所述运行脚本发送至所述其他终端。此外，为实现上述目的，本发明还提供一种云编程方法，所述云编程方法应用于云编辑器，所述云编程方法步骤，包括：获取终端发送的运行脚本；将所述运行脚本通过云编器基础单元同步到云脚本编辑器，并控制所述云脚本编辑器实时编辑并运行所述运行脚本；将编辑并运行后的所述运行脚本保存至所述终端。可选地，获取终端发送的运行脚本的步骤，包括：获取终端发送的编码数据；根据预设的数据传输协议将所述编码数据进行解码得到运行脚本。此外，为实现上述目的，本发明还提供一种云编程方法，所述云编程方法应用于终端，所述云编程方法步骤，包括：发送所述终端中的运行脚本到云编辑器基础单元；获取云脚本编辑器中编辑并运行后的所述运行脚本，并将编辑并运行后的所述运行脚本保存到所述终端；将保存后的所述运行脚本发送至其他终端。此外，为实现上述目的，本发明还提供一种云编程设备，包括：存储器、处理器及存储在所述存储器上并可在所述处理器上运行的云编程的程序，所述云编程的程序被所述处理器执行时实现如上所述的云编程方法的步骤。此外，为实现上述目的，本发明还提供一种云编程计算机存储介质，所述计算机存储介质上存储有云编程的程序，所述云编程的程序被处理器执行时实现如上所述的云编程方法的步骤。本发明通过公开了一种云编程系统，该系统包括终端和云编辑器，所述终端和所述云编辑器之间建立通信连接，所述终端中设置有终端主服务通信单元，所述云编辑器中设置有云编辑器基础单元和云脚本编辑器；所述终端主服务通信单元，用于将所述终端中运行脚本发送至所述云编辑器基础单元；所述云编辑器基础单元，用于将接收的所述运行脚本同步到所述云脚本编辑器；所述云脚本编辑器，用于实时编辑并运行所述运行脚本，将编辑并运行后的所述运行脚本保存至所述终端。从而避免了为实现物联网上下行通信需要搭配单片机与蜂窝模组进行提前进行编程、确认配置后提前烧录的现象发生，通过一种无需搭配单片机与蜂窝模组的云编程系统实现云编辑，降低了物联网通信的开发和运维成本。附图说明图1是本发明实施例方案涉及的硬件运行环境的云编程设备结构示意图；图2为本发明云编程系统第一实施例的流程示意图；图3为本发明云编程方法第二实施例的流程示意图；图4为本发明云编程方法第三实施例的流程示意图；图5为本发明云编程方法检测终端脚本运行服务单元流程示意图；图6为本发明云编程方法获取运行脚本的流程示意图；图7为本发明云编程方法对保存运行脚本的流程示意图。附图标号说明：标号名称标号名称A15G DTU终端设备A105G射频天线A11终端主服务通信单元B1云编辑器A12终端基础固件单元B11云编辑器基础单元A13终端脚本运行服务单元B12云脚本编辑器A20串口单元本发明目的的实现、功能特点及优点将结合实施例，参照附图做进一步说明。具体实施方式应当理解，此处所描述的具体实施例仅仅用以解释本发明，并不用于限定本发明。参照图1，图1为本发明实施例方案涉及的硬件运行环境的云编程设备结构示意图。如图1所示，该云编程设备可以包括：处理器0003，例如中央处理器，通信总线0001、获取接口0002，处理接口0004，存储器0005。其中，通信总线0002用于实现这些组件之间的连接通信。获取接口0002可以包括信息获取装置、获取单元比如云编辑器基础单元，可选获取接口0002还可以包括标准的有线接口、无线接口。处理接口0004可选的可以包括标准的有线接口、无线接口。存储器0005可以是高速的随机存取存储器存储器，也可以是稳定的非易失性存储器，例如磁盘存储器。存储器0005可选的还可以是独立于前述处理器0001的存储装置。本领域技术人员可以理解，图1中示出的结构并不构成对云编程设备的限定，可以包括比图示更多或更少的部件，或者组合某些部件，或者不同的部件布置。如图1所示，作为一种存储介质的存储器0005中可以包括操作系统、获取接口模块、执行接口模块以及云编程程序。在图1所示的云编程设备中，网络接口0001主要用于与其他设备进行数据通信；获取接口0002主要用于获取终端脚本运行服务单元的运行脚本，连接信息获取装置，与信息获取装置进行数据通信；处理接口0004主要用于向控制对象发送处理器执行存储器中云编程程序后的处理结果，连接控制设备，与控制设备进行数据通信；本发明云编程设备中的处理器0003、存储器0005可以设置在云编程设备中，所述云编程设备通过处理器0003调用存储器0005中存储的云编程程序，并执行本发明实施例提供的云编程方法。基于上述硬件结构，提出本发明云编程系统实施例。本发明实施例提供了一种云编程系统，参照图2，图2为本发明一种云编程系统第一实施例的示意图，本实施例中，所述云编程系统包括：终端和云编辑器B1,5G DTU终端设备A1和云编辑器B1之间建立通信连接，实现两者之间的数据传输与远程控制。其中5G DTU终端设备A1包括串口单元A20、5G射频天线A10、终端主服务通信单元A11、终端基础固件单元A12和终端脚本运行服务单元A13，云编辑器B1包括云编辑器基础单元B11和云脚本编辑器B12。终端主服务通信单元A11，用于将所述终端中运行脚本发送至所述云编辑器基础单元；所述云编辑器基础单元B11，用于将接收的所述运行脚本同步到所述云脚本编辑器B12；所述云脚本编辑器B12，用于实时编辑并运行所述运行脚本，将编辑并运行后的所述运行脚本保存至所述终端。其中，终端主服务通信单元A11，是终端中负责与云编辑器通信的装置,它控制与远端数据装置连接的全部通信信道,实现包括差错控制、中断接入控制、确认控制、传输顺序和串并转换等功能，主服务通信单元减少了主机的负荷,大大地提高了主机处理数据的效率，主要用于传输运行脚本。终端基础固件单元A12，是5G DTU终端设备A1中基本固件组成，是维持5G DTU终端设备A1正常运行的基础固件，例如终端基础固件单元A12可以是5G DTU终端设备A1上的操作系统，5G DTU终端设备A1上的运行系统等，主要用于在5G DTU终端设备A1中传输运行脚本。终端脚本运行服务单元A13，是5G DTU终端设备A1上运行脚本的单元，主要用于启动运行脚本。5G射频天线A10，是5G DTU终端设备A1上传输信息的单元，与运营商基站的连接，向基站接收和发送信息，进而通过网络向云编辑器B1接收和发送信息。云编辑器基础单元B11，是云编辑器B1中基本固件组成，是维持云编辑器B1正常运行的基础固件，例如云编辑器基础单元B11可以是云编辑器B1上的操作系统，云编辑器B1上的运行系统等，主要用于接收并同步运行脚本。云脚本编辑器B12，是云编辑器B1中运行获取脚本的单元，主要是根据云编辑器B2获取的脚本在云脚本编辑器B12编辑并运行，实现对脚本云编辑，主要用于对接收运行脚本进行编辑运行。串口单元A20，是5G DTU终端设备A1上与其他终端传输信息的单元，主要是用于将收到的数据信息发送至其他终端或者接收其他终端发过来的数据信息，其中数据信息是指传感器采集到的数据，或者终端发送给传感器的数据或者控制信息。基站，是物联网通信中的必要组成部分，即公用移动通信基站是无线电台站的一种形式，是指在一定的无线电覆盖区中，通过移动通信交换中心，与移动电话终端之间进行信息传递的无线电收发信电台。云编辑器B1，是云编程系统中实现云编程的装置，通过基站与5G DTU终端设备A1建立通信连接，实现两者之间的数据传输与远程控制，主要用于接收5G DTU终端设备A1中运行脚本。5G DTU终端设备A1，是云编程系统中实现云编程的目标编程装置，通过基站与云编辑器B1建立通信连接，实现两者之间的数据传输与远程控制，主要用于发送运行脚本，并将云编程完成的脚本保存。因此，在本实施例中，5G DTU终端设备A1和云编辑器B1通过基站建立通信连接。为实现云编程需要终端脚本运行服务单元A13开启运行脚本，其中运行脚本是指使用一种特定的描述性语言，依据一定的格式编写的可执行文件，又称作宏或批处理文件。只有当开启运行脚本后，5G DTU终端设备A1和云编辑器B1通过5G射频天线A10进行数据传输，其中云编辑器B1对于内部的定义是需要获取外部的运行脚本。对于终端脚本运行服务单元A13会进行检测，实时检测终端脚本运行服务单元A13运行状态。当检测到终端脚本运行服务单元A13开启运行脚本时，开启的运行脚本就会通过终端基础固件单元A12并根据数据传输协议进行传输。其中传输运行脚本主要是终端主服务通信单元A11通过5G射频天线A10与基站进行通信，根据终端主服务通信单元A11内定义的数据传输协议将开启的运行脚本编码成编码数据传输到基站，其中编码数据是指运行脚本编码后组成的可以进行通信的数据。例如，当检测到终端脚本运行服务单元A13开启运行脚本D时，运行脚本D会通过终端基础固件单元A12根据数据传输协议进行传输，其中终端主服务通信单元A11会根据内部定义的数据传输协议将运行脚本D编码成可以传输的数据E，并将数据E传输到基站。云编辑器B1接收来自基站的运行数据，根据相同的数据传输协议将运行数据解码为运行脚本。例如云编辑器B1接收来自基站的数据E，根据相同的数据传输协议将数据E解码可以得到运行脚本F。在得到运行脚本后，通过云编辑器基础单元B11将接收到的运行脚本进行同步，主要的同步方法是云编辑器B1与5G DTU终端设备A1实时数据传输实现运行脚本的同步。将获取的运行脚本同步后传输到云脚本编辑器B12上，云脚本编辑B12会根据用户需求编辑同步后的运行脚本，在对脚本完成编辑后会在云脚本编辑B12上运行脚本，此时终端脚本运行服务A13中的运行脚本也与云脚本编辑器B12上的运行脚本一样同步编辑并运行。例如获取同步后的运行脚本F，用户需求D，云脚本编辑器B11会根据用户需求D将运行脚本F进行编辑得到符合用户需求的脚本是运行脚本C，其中运行脚本C在云脚本编辑器B12上编辑运行的同时也会在终端脚本运行服务单元A13编辑运行。最后，在根据用户需求编辑运行脚本并在云脚本编辑器B12上运行，云编辑B1器会检测云脚本编辑器中的运行脚本是否确认结束，当检测到云脚本编辑器中的运行脚本确认结束时，云编辑器就会发出结束指令，将终端脚本运行服务单元A13中的运行脚本在终端A1中保存；反之当检测到云脚本编辑器B12中的运行脚本未确认结束时，云脚本编辑器B12就会将运行脚本继续编辑并运行，本次检测就会结束，但也会随之开启下一轮的检测。例如，云脚本编辑器中的运行脚本C已经处于编辑或者运行完成状态，但用户未下达了确认结束指令，在对云脚本编辑器中的运行脚本C检测时，就会根据上述的运行脚本C用户未下达了确认结束指令，进而可以得到检测结果是云脚本编辑器中的运行脚本C未确认结束，进而云编辑器就不会对终端发出结束指令，云脚本编辑器会继续编辑运行脚本C。运行脚本在终端A1中保存后，可以通过串口单元A20将收到的数据信息发送至其他终端或者接收其他终端发过来的数据信息，串口单元A20主要是与其他终端建立通信连接并与其他终端进行通信。在本实施例中，通过公开了一种云编程系统该系统包括：终端和云编辑器，所述终端和所述云编辑器之间建立通信连接，所述终端中设置有终端主服务通信单元，所述云编辑器中设置有云编辑器基础单元和云脚本编辑器；所述终端主服务通信单元，用于将所述终端中运行脚本发送至所述云编辑器基础单元；所述云编辑器基础单元，用于将接收的所述运行脚本同步到所述云脚本编辑器，所述云脚本编辑器，用于实时编辑并运行所述运行脚本，将编辑并运行后的所述运行脚本保存至所述终端。从而避免了为实现物联网上下行通信需要搭配单片机与蜂窝模组进行提前进行编程、确认配置后提前烧录的现象发生，通过一种无需搭配单片机与蜂窝模组的云编程系统实现云编辑，降低了物联网通信的开发和运维成本。进一步地，基于本发明云编程系统第一实施例，提出本发明云编程方法应用于云编辑器的第二实施例，参照图3，图3为本发明一种云编程方法第二实施例的流程示意图，所述云编程方法包括：步骤S10，获取终端发送的运行脚本；在本实施例中，在终端与云编辑器建立通信连接后会根据终端脚本运行服务单元的状态对其中的运行脚本进行获取，其中终端可以是一台电脑或者计算机系统，用来让用户输入数据，及显示其计算结果的机器，但又与一部独立的电脑不同，云编辑器是指通过数据传输后将传输数据进行自定义编辑的装置。首先终端与云编辑器是通过基站建立通信连接，云编辑器的控制信令、语音呼叫或数据业务信息通过传输网络发送到基站，信号在基站侧经过基带和射频处理，然后通过射频馈线送到天线上进行发射，终端通过无线信道接收天线所发射的无线电波，然后解调出属于自己的信号；反之，从终端传输到云编辑器的反向信号传输流程与前向流程方向相反，但原理相似。其次，在终端与云编辑器建立通信连接后，会根据终端脚本运行服务单元的状态对其中的运行脚本进行获取，其中终端脚本运行服务单元是指终端中运行脚本的区域。例如，如图5所示，云编辑器会检测终端脚本运行服务单元的运行状态，其中运行状态就包括开启和关闭，当检测到终端脚本运行服务单元开启时，云编辑器就会获取终端脚本运行服务单元运行脚本，反之当检测到终端脚本运行服务单元关闭时，本次检测就会结束，但也会随之开启下一轮的检测。在对于终端脚本运行服务单元检测时，云编辑器会根据检测结果来判断是否需要获取运行脚本，在终端中的终端脚本运行服务单元主要是依靠终端基础固件单元来运行，其中终端基础固件单元是指终端中承载各种终端脚本运行服务的单元。例如终端脚本运行服务单元与终端基础固件单元之间的关系就如同电脑上的各种软件与电脑系统一般，所有的软件的运行基础都是在电脑的系统的基础上正常使用。所以终端脚本运行服务单元正常运行内部的运行脚本就离不开终端基础固件单元，并且终端基础固件单元也应用于运行脚本传输，将运行脚本通过终端主服务通信单元传输到基站，再通过基站传输到需要的位置，其中上述的终端主服务通信单元是指用于与基站或者其他装置建立通信的单元。在获取终端发送的运行脚本时，主要是根据预设的数据传输协议进行获取，例如，如图6所示，获取运行脚本的步骤，包括：步骤A14，获取终端发送的编码数据；当云编辑器检测到终端脚本运行服务单元开启了运行脚本时，云编辑器就会对运行脚本的编码数据进行获取，其中编码数据是指终端根据内部预设的数据传输协议将运行脚本进行编码后得到的可以进行传输的数据。步骤A15，根据预设的数据传输协议将所述编码数据进行解码得到运行脚本。在获取终端发送的编码数据后，云编辑器主要是通过内部预设的并且与终端中相同的数据传输协议对编码数据进行解码得到运行脚本，数据传输协议是指数据通信是依照一定的通信协议，利用数据传输技术在两个终端之间传递数据信息的一种通信方式和通信业务。例如上述的数据传输协议可以是二进制数据协议，通过直接将内存里的对象保存为二进制数据，然后通过封包)的方式发送出去，解包的时候，读取size，然后读取二进制数据，再根据二进制的结构体描述文件来解开这个包，获取每个数据成员的数据。例如，当获取终端发送的编码数据后，云编辑器会调用内部的数据传输协议，并根据数据传输协议对获取的编码数据进行解码，得到运行脚本。在本实施例中，通过根据终端脚本运行服务单元的运行状态,来获取终端脚本运行服务单元中的运行脚本，实现了对目标运行脚本的获取，为后续云编辑提供的编辑脚本和保障了云编辑的正常进行。步骤S20，将所述运行脚本通过云编器基础单元同步到云脚本编辑器，并控制所述云脚本编辑器实时编辑并运行所述运行脚本；在本实施例中，云编辑器在获取终端脚本运行服务单元的运行脚本后，会在云编辑器中的云编辑器基础单元同步，之后将同步后的运行脚本在云脚本编辑器上实时编辑并运行，其中云编辑器基础单元是指云编辑器中承载各种云脚本编辑器运行服务的单元主要用于获取外部运行脚本以及将获取的运行脚本进行同步的操作，云脚本编辑器是指云编辑器中运行脚本的区域。云编辑器会通过云编辑器基础单元将运行脚本同步到云脚本编辑器，之后会根据用户需求编辑运行脚本，最后运行编辑完成的运行脚本。在获取运行脚本后，云编辑器会通过云编辑器基础单元进行同步运行脚本，其中同步是指将终端脚本运行服务单元中的脚本同步到云编辑器基础单元，以便于脚本可以在云脚本编辑中实时编辑运行，主要的同步方法是云编辑器与终端实时数据传输实现运行脚本的同步。例如，在云编辑器检测到终端脚本运行服务单元开启了运行脚本F，云编辑器就会根据对终端脚本运行服务单元的检测的检测结果，会实时获取终端脚本运行服务单元中开启的运行脚本F，并将运行脚本F传输带云编辑器基础单元上进行同步。在将获取的运行脚本同步后会传输到云脚本编辑，云脚本编辑会根据用户需求编辑同步后的运行脚本，即对运行脚本进行开发。在对脚本完成编辑后会在云脚本编辑上运行脚本，此时终端脚本运行服务中的运行脚本也与云脚本编辑器上的运行脚本一样同步编辑并运行。例如获取的运行脚本F，用户需求D，云脚本编辑器会根据用户需求D将运行脚本F进行编辑得到需要的脚本是运行脚本C，其中运行脚本C在云脚本编辑器上编辑运行的同时也会在终端脚本运行服务单元编辑运行。步骤S30，将编辑并运行后的所述运行脚本保存至所述终端。在根据用户需求编辑运行云脚本编辑器上的运行脚本后，会对运行脚本进行保存。例如，如图7所示，云编辑器会检测云脚本编辑器中的运行脚本是否确认结束，当检测到云脚本编辑器中的运行脚本确认结束时，云编辑器就会发出结束指令，在终端脚本运行服务单元中的运行脚本在终端中保存；反之当检测到云脚本编辑器中的运行脚本未确认结束时，云脚本编辑器就会将运行脚本继续编辑并运行，本次检测就会结束，但也会随之开启下一轮的检测。若云脚本编辑器中的运行脚本正在处于编辑或者运行状态，由于运行脚本还在编辑运行中用户也不会对云编辑器中的运行脚本确认结束，所以在对云脚本编辑器中的运行脚本检测时，就会根据上述的运行脚本还在处于编辑运行中，进而可以得到检测结果是云脚本编辑器中的运行脚本未确认结束，云编辑器就不会对终端发出结束指令，云脚本编辑器会继续编辑运行脚本；反之，若云脚本编辑器中的运行脚本已经处于编辑或者运行完成状态，并且用户也对云编辑器中的运行脚本确认结束，所以在对云脚本编辑器中的运行脚本检测时，就会根据上述的运行脚本已经编辑运行完成并且用户已将下达了确认结束指令，进而可以得到检测结果是云脚本编辑器中的运行脚本确认结束，云编辑器就会对终端发出结束指令，终端根据指令将终端脚本运行服务单元中的运行脚本进行保存。例如，云脚本编辑器中的运行脚本C还在处于编辑中或者运行中，所以在对云脚本编辑器中的运行脚本C检测时，就会根据上述的运行脚本C还在处于编辑中或者运行中，进而可以得到检测结果是云脚本编辑器中的运行脚本C未确认结束，进而云编辑器就不会对终端发出结束指令，云脚本编辑器会继续编辑运行脚本C；云脚本编辑器中的运行脚本C已经处于编辑或者运行完成状态，但用户未下达了确认结束指令，在对云脚本编辑器中的运行脚本C检测时，就会根据上述的运行脚本C用户未下达了确认结束指令，进而可以得到检测结果是云脚本编辑器中的运行脚本C未确认结束，进而云编辑器就不会对终端发出结束指令，云脚本编辑器会继续编辑运行脚本C；云脚本编辑器中的运行脚本C已经处于编辑或者运行完成状态，用户也已经下达了确认结束指令，在对云脚本编辑器中的运行脚本C检测时，就会根据上述的运行脚本C已经处于编辑或者运行完成状态和用户也已经下达了确认结束指令，进而可以得到检测结果是云脚本编辑器中的运行脚本C确认结束，进而云编辑器会对终端发出结束指令，云编辑器就会对终端发出结束指令，终端根据指令将终端脚本运行服务单元中的运行脚本C进行保存。在本实施例中，云编辑器通过获取终端发送的运行脚本，获取的运行脚本通过云编器基础单元同步到云脚本编辑器，并将运行脚本在所述云脚本编辑器上实时编辑并运行，最后将编辑并运行后的所述运行脚本保存至所述终端。从而避免了为实现物联网上下行通信需要搭配单片机与蜂窝模组进行提前进行编程、确认配置后提前烧录的现象发生，通过一种无需搭配单片机与蜂窝模组的云编程系统实现云编辑，降低了物联网通信的开发和运维成本。进一步地，基于本发明云编程系统第一实施例，云编程方法第二实施例，提出本发明云编程方法应用于终端的第三实施例，参照图4，图4为本发明一种云编程方法第三实施例的流程示意图，所述云编程方法包括：步骤S40，发送所述终端中的运行脚本到云编辑器基础单元；在终端与云编辑器通过基站建立通信连接后，当检测到终端脚本运行服务单元开启运行脚本时，终端就会将开启的运行脚本发送到云编辑器。其中发送的运行脚本是指终端根据内部预设的数据传输协议将运行脚本进行编码后的编码数据。例如在终端脚本运行服务单元开启运行脚本F后，终端根据内部预设的数据传输协议将开启的运行脚本F进行编码得到编码数据E，并将编码数据E发送。步骤S50，获取云脚本编辑器中编辑并运行后的所述运行脚本，并将编辑并运行后的所述运行脚本保存到所述终端；在将运行脚本发送后，终端会将云编辑器编辑并运行后的运行脚本保存。也就是说云编辑器通过编辑运行达到了终端需要的脚本要求，就会在终端中保存。例如，终端发送的运行脚本F，用户需求D，云编辑器会根据用户需求D将运行脚本F进行编辑得到需要的脚本是运行脚本C，其中运行脚本C就是终端需要保存的运行脚本，在云编辑器确认完成编辑运行后就会在终端中进行保存。步骤S60，将所述运行脚本保存后并将收到的数据信息发送至其他终端或者接收所述其他终端发过来的所述数据信息。在保存编辑并运行的运行脚本后，终端会根据自身需求接收其他终端发过来的数据信息，并根据需要按照预设规则对数据信息进行处理后上传到服务器；反之，终端收到服务器发来的数据信息时，根据需要按照预设规则对数据信息进行处理后发送给其他终端，其中，终端与其他终端之间通过串口单元建立通信连接并通过串口单元进行数据传输，预设规则是指对数据信息进行处理的一种处理方式。在特定情况下，当两个终端相同时，并且其中一个终端a需要的运行脚本已经下另一个终端b中保存，那么当终端a就不必要在云编辑器上编辑运行脚本，可以直接通过串口单元向终端b发送需求，终端b通过串口单元传输运行脚本到终端a即可。在本实施例中，终端通过将运行脚本保存后并将收到的数据信息发送至其他终端或者接收其他终端发过来的数据信息。根据其他终端的需求或者终端需求通过串口单元接收和发送信息数据，从而建立了终端与其他终端之间的通信信息网，提高了终端之间的信息数据传输的效率。本发明还提供一种云编程设备。本发明设备包括：存储器、处理器及存储在所述存储器上并可在所述处理器上运行的云编程的程序，所述云编程的程序被处理器执行时实现如上所述的云编程方法的步骤。本发明还提供一种计算机存储介质。本发明计算机存储介质上存储有云编程的程序，所述云编程的程序被处理器执行时实现如上所述的云编程方法的步骤。其中，在所述处理器上运行的云编程的程序被执行时所实现的方法可参照本发明云编程方法各个实施例，此处不再赘述。需要说明的是，在本文中，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者系统不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者系统所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括该要素的过程、方法、物品或者系统中还存在另外的相同要素。上述本发明实施例序号仅仅为了描述，不代表实施例的优劣。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到上述实施例方法可借助软件加必需的通用硬件平台的方式来实现，当然也可以通过硬件，但很多情况下前者是更佳的实施方式。基于这样的理解，本发明的技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品存储在如上所述的一个存储介质中，包括若干指令用以使得一台终端设备执行本发明各个实施例所述的方法。以上仅为本发明的优选实施例，并非因此限制本发明的专利范围，凡是利用本发明说明书及附图内容所作的等效结构或等效流程变换，或直接或间接运用在其他相关的技术领域，均同理包括在本发明的专利保护范围内。
