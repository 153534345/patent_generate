标题title
一种卫星网络体系的防御方法及系统
摘要abst
本申请提供了一种卫星网络体系的防御方法及系统，其中，卫星网络体系的防御方法包括：使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令；使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素；根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值；根据攻击严重性分值对SQL模拟攻击指令进行优先级排名，按照优先级排名顺序验证SQL模拟攻击指令。本申请的技术方案能解决现有技术难以满足卫星网络体系的安全性和可靠性需求的问题。
权利要求书clms
1.一种卫星网络体系的防御方法，其特征在于，包括：使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令；使用所述多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的所述卫星网络体系的攻击评估因素；根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值；根据所述攻击严重性分值对所述SQL模拟攻击指令进行优先级排名，按照所述优先级排名顺序验证所述SQL模拟攻击指令。2.根据权利要求1所述的卫星网络体系的防御方法，其特征在于，所述使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令的步骤，包括：从SQL语言中选择所述SQL模拟攻击指令所使用的SQL关键词；使用所述时间戳作为随机数生成器的种子；使用所述随机数生成器的种子，分别生成随机表名、随机列名和随机值；使用所述随机数生成器构造SQL指令生成函数；使用所述SQL指令生成函数，对所述SQL关键词、所述随机表名、所述随机列名和所述随机值进行组合，随机生成多种不同的SQL模拟攻击指令。3.根据权利要求1或2所述的卫星网络体系的防御方法，其特征在于，所述使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令的步骤，包括：从SQL语言中选择所述SQL模拟攻击指令所使用的SQL关键词；使用随机数生成器生成随机表名和随机列名；使用所述随机函数生成随机值；使用所述随机数生成器构造SQL指令生成函数；使用所述SQL指令生成函数对所述SQL关键词、所述随机表名、所述随机列名和所述随机值进行组合，随机生成多种不同的SQL模拟攻击指令。4.根据权利要求1所述的卫星网络体系的防御方法，其特征在于，所述使用所述多种不同的SQL模拟攻击指令模拟攻击所述卫星网络体系，分别得到每种SQL模拟攻击指令对应的所述卫星网络体系的攻击评估因素的步骤，包括：使用所述多种不同的SQL模拟攻击指令模拟攻击所述卫星网络体系，分别统计所述卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度；使用所述多种不同的SQL模拟攻击指令模拟攻击所述卫星网络体系，分别统计所述卫星网络体系的漏洞暴露程度、访问权限和安全控制措施；以及，使用所述多种不同的SQL模拟攻击指令模拟攻击所述卫星网络体系，分别统计所述SQL模拟攻击指令对应的技术要求以及投入时间和资源；使用所述卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度，确定每种SQL模拟攻击指令造成的所述卫星网络体系的影响范围；使用所述卫星网络体系的漏洞暴露程度、访问权限和安全控制措施，确定每种SQL模拟攻击指令的攻击成功概率；以及，使用所述SQL模拟攻击指令对应的技术要求以及投入时间和资源，确定每种SQL模拟攻击指令的攻击复杂度。5.根据权利要求4所述的卫星网络体系的防御方法，其特征在于，所述根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值的步骤，包括：根据所述卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，分别建立所述影响范围、所述攻击成功概率和攻击复杂度的权重系数；根据所述攻击严重性评分函数：Severity =  / ，结合所述影响范围的权重系数、所述攻击成功概率的权重系数和攻击复杂度的权重系数，分别得到每种SQL功模拟攻击指令的攻击严重性分值；其中，Impact、Probability和Complexity分别为所述卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，W1、W2和 W3分别为所述影响范围、所述攻击成功概率和攻击复杂度的权重系数。6.根据权利要求5所述的卫星网络体系的防御方法，其特征在于，所述根据所述卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，分别建立所述影响范围的权重系数、所述攻击成功概率的权重系数和攻击复杂度的权重系数的步骤，包括：根据第一权重系数计算公式：w1=n*w2，计算所述影响范围的权重系数；其中，w1为所述影响范围的权重系数，w2为所述攻击成功概率的权重系数，n为范围概率影响因子；根据第二权重系数计算公式：w2 = a * exp，计算所述攻击成功概率的权重系数；其中，w3为所述攻击复杂度的权重系数，a为曲线缩放因子，b为曲线斜率影响因子；以及，根据第三权重系数计算公式：w1 = c* exp，计算所述攻击复杂度的权重系数；其中，c为指数缩放因子，d为指数斜率影响因子。7.根据权利要求1所述的卫星网络体系的防御方法，其特征在于，所述根据所述攻击严重性分值对所述SQL模拟攻击指令进行优先级排名，按照所述优先级排名顺序验证所述SQL模拟攻击指令的步骤，包括：按照所述优先级排名顺序验证所述SQL模拟攻击指令，统计并修复所述卫星网络体系的防御漏洞和安全隐患；将所述SQL模拟攻击指令存储至指令数据库；使用白名单功能对所述卫星网络体系中的访问设备进行授权；当授权的所述访问设备验证通过时，接收所述访问设备的SQL数据请求；对所述访问设备发送的SQL数据请求进行过滤和检测，计算所述SQL数据请求与所述指令数据库中SQL模拟攻击指令的相似度；当所述相似度大于或等于预定相似度阈值时，屏蔽所述安全设备和SQL数据请求。8.一种卫星网络体系的防御系统，其特征在于，包括：指令生成模块，用于使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令；攻击模拟模块，用于使用所述多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的所述卫星网络体系的攻击评估因素；权重赋分模块，用于根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值；排名验证模块，用于根据所述攻击严重性分值对所述SQL模拟攻击指令进行优先级排名，按照所述优先级排名顺序验证所述SQL模拟攻击指令。9.根据权利要求8所述的卫星网络体系的防御系统，其特征在于，所述攻击模拟模块，包括：第一因素统计子模块，用于使用所述多种不同的SQL模拟攻击指令模拟攻击所述卫星网络体系，分别统计所述卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度；第二因素统计子模块，用于使用所述多种不同的SQL模拟攻击指令模拟攻击所述卫星网络体系，分别统计所述卫星网络体系的访问权限和安全控制措施；以及，第三因素统计子模块，用于使用所述多种不同的SQL模拟攻击指令模拟攻击所述卫星网络体系，分别统计所述SQL模拟攻击指令对应的技术要求以及投入时间和资源；影响范围确定子模块，用于使用所述卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度，确定每种SQL模拟攻击指令造成的所述卫星网络体系的影响范围；成功概率确定子模块，用于使用所述卫星网络体系的访问权限和安全控制措施，确定每种SQL模拟攻击指令的攻击成功概率；以及，攻击复杂度确定子模块，用于使用所述SQL模拟攻击指令对应的技术要求以及投入时间和资源，确定每种SQL模拟攻击指令的攻击复杂度。10.根据权利要求9所述的卫星网络体系的防御系统，其特征在于，所述权重赋分模块，包括：权重系数建立子模块，用于根据所述卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，分别建立所述影响范围、所述攻击成功概率和攻击复杂度的权重系数；攻击严重性赋分子模块，用于根据所述攻击严重性评分函数：Severity =  / ，结合所述影响范围的权重系数、所述攻击成功概率的权重系数和攻击复杂度的权重系数，分别得到每种SQL功模拟攻击指令的攻击严重性分值；其中，Impact、Probability和Complexity分别为所述卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，W1、W2和 W3分别为所述影响范围、所述攻击成功概率和攻击复杂度的权重系数。
说明书desc
技术领域本申请涉及卫星网络技术领域，尤其涉及一种卫星网络体系的防御方法及系统。背景技术卫星通信因其覆盖范围广、布置迅速和不受地理环境条件限制等优点，成为远距离通信的主要信息传输平台。随着信息化技术的发展，现代社会对卫星通信的依赖日益增加，因此卫星网络体系的规模越来越大。随着卫星网络体系的扩大，围绕卫星网络体系展开的攻防问题不可避免。卫星通信具有一定的脆弱性，一旦卫星通信出现问题，全网将陷入瘫痪，这样就导致卫星网络体系防御系统的建设需求日益迫切。卫星网络体系防御系统是一种能够保护卫星网络体系安全的技术体系。现有的卫星网络体系安全主要依赖于密码学技术和防火墙等传统安全技术。例如对网关信息进行加密，使得非法用户不可懂以及利用身份认证解决终端合法性问题方法。然而，随着卫星网络体系的不断发展和应用范围的不断扩大，传统安全技术已经无法满足对安全性和可靠性的要求。入侵者可能通过篡改SQL语句的方式入侵卫星网络体系。具体地，假设有一个用户登录界面，用户需要输入用户名和密码才能登录。登录界面使用的SQL语句如下：SELECT * FROM users WHERE username='$username' AND password='$password'；其中，username和username和password是用户输入的用户名和密码。攻击者能够在用户名或密码中注入恶意代码，以绕过验证。例如：假设攻击者知道正确的用户名是"admin"，密码是"123456"。攻击者能够在用户名中注入：' or '1'='1这个代码片段将会让SQL语句变成：SELECT * FROM users WHERE username='' or '1'='1' AND password='123456'；因为'1'='1'永远为True，所以这个SQL语句将会返回所有用户的信息，攻击者就能够成功登录。因此，需要有更加先进的卫星网络体系防御系统来定期扫描安全漏洞和进行安全演练，防御SQL语句攻击，以保障卫星网络的安全。发明内容本申请提供一种卫星网络体系的防御方法及系统，能够解决现有技术难以满足卫星网络体系的安全性和可靠性需求的问题。为解决上述问题，根据本申请的第一方面，本申请提出了一种卫星网络体系的防御方法，包括：使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令；使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素；根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值；根据攻击严重性分值对SQL模拟攻击指令进行优先级排名，按照优先级排名顺序验证SQL模拟攻击指令。优选的，上述卫星网络体系的防御方法中，使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令的步骤包括：从SQL语言中选择SQL模拟攻击指令所使用的SQL关键词；使用时间戳作为随机数生成器的种子；使用随机数生成器的种子，分别生成随机表名、随机列名和随机值；使用随机数生成器构造SQL指令生成函数；使用SQL指令生成函数，对SQL关键词、随机表名、随机列名和随机值进行组合，随机生成多种不同的SQL模拟攻击指令。优选的，上述卫星网络体系的防御方法中，使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令的步骤包括：从SQL语言中选择SQL模拟攻击指令所使用的SQL关键词；使用随机数生成器生成随机表名和随机列名；使用随机函数生成随机值；使用随机数生成器构造SQL指令生成函数；使用SQL指令生成函数对SQL关键词、随机表名、随机列名和随机值进行组合，随机生成多种不同的SQL模拟攻击指令。优选的，上述卫星网络体系的防御方法中，使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素的步骤包括：使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度；使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计卫星网络体系的访问权限和安全控制措施；以及，使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计SQL模拟攻击指令对应的技术要求以及投入时间和资源；使用卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度，确定每种SQL模拟攻击指令造成的卫星网络体系的影响范围；使用卫星网络体系的访问权限和安全控制措施，确定每种SQL模拟攻击指令的攻击成功概率；以及，使用SQL模拟攻击指令对应的技术要求以及投入时间和资源，确定每种SQL模拟攻击指令的攻击复杂度。优选的，上述卫星网络体系的防御方法中，根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值的步骤包括：根据卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，分别建立影响范围、攻击成功概率和攻击复杂度的权重系数；根据攻击严重性评分函数：Severity =  / ，结合影响范围的权重系数、攻击成功概率的权重系数和攻击复杂度的权重系数，分别得到每种SQL功模拟攻击指令的攻击严重性分值；其中，Impact、Probability和Complexity分别为卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，W1、W2和 W3分别为影响范围的权重系数、攻击成功概率的权重系数和攻击复杂度的权重系数。优选的，上述卫星网络体系的防御方法中，根据卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，分别建立影响范围、攻击成功概率和攻击复杂度的权重系数的步骤包括：根据第一权重系数计算公式：w1=n*w2，计算影响范围的权重系数；其中，w1为影响范围的权重系数，w2为攻击成功概率的权重系数，n为范围概率影响因子；根据第二权重系数计算公式：w2 = a * exp，计算攻击成功概率的权重系数；其中，w3为攻击复杂度的权重系数，a为曲线缩放因子，b为曲线斜率影响因子；以及，根据第三权重系数计算公式：w1 = c* exp，计算攻击复杂度的权重系数；其中，c为指数缩放因子，d为指数斜率影响因子。优选的，上述卫星网络体系的防御方法中，使用攻击严重性分值对SQL模拟攻击指令进行优先级排名，按照优先级排名顺序验证SQL模拟攻击指令的步骤包括：按照优先级排名顺序验证SQL模拟攻击指令，统计并修复卫星网络体系的防御漏洞和安全隐患；将SQL模拟攻击指令存储至指令数据库；使用白名单功能对卫星网络体系中的访问设备进行授权；当授权的访问设备验证通过时，接收访问设备的SQL数据请求；对访问设备发送的SQL数据请求进行过滤和检测，计算SQL数据请求与指令数据库中SQL模拟攻击指令的相似度；当相似度大于或等于预定相似度阈值时，屏蔽安全设备和SQL数据请求。根据本发明的第二方面，本发明还提供了一种卫星网络体系的防御系统，包括：指令生成模块，用于使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令；攻击模拟模块，用于使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素；权重赋分模块，用于根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值；排名验证模块，用于根据攻击严重性分值对SQL模拟攻击指令进行优先级排名，按照优先级排名顺序验证SQL模拟攻击指令。优选的，上述卫星网络体系的防御系统中，攻击模拟模块包括：第一因素统计子模块，用于使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度；第二因素统计子模块，用于使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计卫星网络体系的访问权限和安全控制措施；以及，第三因素统计子模块，用于使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计SQL模拟攻击指令对应的技术要求以及投入时间和资源；影响范围确定子模块，用于使用卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度，确定每种SQL模拟攻击指令造成的卫星网络体系的影响范围；成功概率确定子模块，用于使用卫星网络体系的访问权限和安全控制措施，确定每种SQL模拟攻击指令的攻击成功概率；以及，攻击复杂度确定子模块，用于使用SQL模拟攻击指令对应的技术要求以及投入时间和资源，确定每种SQL模拟攻击指令的攻击复杂度。优选的，上述卫星网络体系的防御系统中，权重赋分模块包括：权重系数建立子模块，用于根据卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，分别建立影响范围、攻击成功概率和攻击复杂度的权重系数；攻击严重性赋分子模块，用于根据攻击严重性评分函数：Severity =  / ，结合影响范围的权重系数、攻击成功概率的权重系数和攻击复杂度的权重系数，分别得到每种SQL功模拟攻击指令的攻击严重性分值；其中，Impact、Probability和Complexity分别为卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，W1、W2和 W3分别为影响范围的权重系数、攻击成功概率的权重系数和攻击复杂度的权重系数。综上，本申请提供的卫星网络体系的防御方法及系统，通过使用随机函数和时间戳，能够随机生成多种不同类型的SQL模拟攻击指令，这样使用该多种不同类型的模拟攻击指令模拟攻击卫星网络体系，就能够通过SQL模拟攻击技术定期对卫星网络体系进行漏洞扫描和安全演练，从而确保在真实入侵或攻击场景下能够做出反制措施。具体地，使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素，然后根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，从而得到每种SQL模拟攻击指令的攻击严重性分值，使用该攻击严重性分值对SQL模拟攻击指令进行优先级排名，就能够找出攻击成功性最高的SQL模拟攻击指令，按照优先级排名对SQL模拟攻击指令进行验证，从而提高卫星网络体系的漏洞检出率和防御能力。通过上述方式能够解决现有技术难以满足卫星网络体系的安全性和可靠性需求的问题。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图示出的结构获得其他的附图。图1是本申请实施例提供的一种卫星网络体系的防御方法的流程示意图；图2是图1所示实施例提供的卫星网络体系的防御方法中的第一种随机生成SQL模拟攻击指令的方法的流程示意图；图3是图1所示实施例提供的卫星网络体系的防御方法中的第二种随机生成SQL模拟攻击指令的方法的流程示意图；图4是图1所示实施例提供的一种卫星网络体系的模拟攻击方法的流程示意图；图5是图1所示实施例提供的一种攻击评估因素的权重赋分方法的流程示意图；图6是图5所示实施例提供的一种攻击评估因素的权重系数的建立方法的流程示意图；图7是图1所示实施例提供的一种SQL模拟攻击指令的优先级排名方法的流程示意图；图8是本发明实施例提供的一种卫星网络体系的防御系统的结构示意图；图9是图8所示实施例提供的一种指令生成模块的结构示意图；图10是图8所示实施例提供的一种攻击模拟模块的结构示意图；图11是图8所示实施例提供的一种权重赋分模块的结构示意图；图12是图8所示实施例提供的一种排名验证模块的结构示意图。本申请目的的实现、功能特点及优点将结合实施例，参照附图做进一步说明。具体实施方式应当理解，此处所描述的具体实施例仅仅用以解释本申请，并不用于限定本申请。现有技术的技术方案存在如下技术问题：现有的卫星网络体系安全主要依赖于密码学技术和防火墙等传统安全技术，然而，随着卫星网络体系的不断发展和应用范围的不断扩大，传统安全技术已经无法满足对安全性和可靠性的要求。入侵者可能通过篡改SQL语句的方式入侵卫星网络体系，这就导致现有技术难以满足卫星网络体系的安全性和可靠性需求的问题。本发明下述实施例通过以下两点，以及时发现异常情况并采取措施，保障卫星网络的稳定和安全：第一点，白名单功能，本申请通过白名单功能对卫星网络中的设备和用户进行授权，只有被授权的设备和用户才能访问卫星网络，这样能够有效防止未经授权的设备和用户入侵卫星网络。同时，本申请还能够设置底层过滤系统，对卫星网络图像中的数据包进行过滤和检测，防止恶意攻击和病毒入侵。第二点，过滤功能，本申请还通过实现对卫星网络中的通信流量进行监控和分析，及时发现异常情况并采取措施，例如对于异常流量进行实时拦截，防止网络拥塞和攻击。综上，本发明通过多种安全功能的组合，能够有效保障卫星网络的安全，为卫星通信提供可靠的保障。其中，重点是第二点的研发，通过优化底层过滤功能才能够真正确保卫星通信的可靠。因此，本申请下述实施例通过以下方案，优化底层过滤等功能以保障卫星网络安全。具体方案如下：1.强化底层过滤功能：底层过滤功能需要对卫星网络中的数据包进行过滤和检测，因此需要针对不同类型的攻击和病毒进行定制化的过滤规则，以提高过滤的准确性和效率。2.加强监控和分析能力：卫星网络体系的监控和分析能力对于及时发现异常情况至关重要，因此需要加强监控和分析的能力，例如采用流量统计和行为分析等技术，及时发现和处理异常情况。3.采用多层防御策略：针对不同类型的攻击和威胁，需要采用多层防御策略，例如通过网络隔离、加密和身份认证等手段来提高卫星网络的安全性。定期进行漏洞扫描和安全演练：为了及时发现和修复卫星网络中的漏洞和安全问题，需要定期进行漏洞扫描和安全演练，以持续提升卫星网络的安全性和可靠性。以上，第4点定期进行漏洞扫描和安全演练的方案是最重要的，所以本申请下述实施例给出了解决方案：引入SQL模拟攻击技术定期进行漏洞扫描和安全演练，以确保在遇到真实入侵或者攻击场景的情况下能够做出及时准确的反制措施。做到提前发现防御体系漏洞。具体地，本发明下述实施例提供了卫星网络体系的防御方法，通过使用随机函数和时间戳，随机生成多种不同类型的SQL模拟攻击指令，使用该SQL模拟攻击指令模拟攻击卫星网络体系，从而得到每种SQL模拟攻击指令的攻击评估因素，得到每种SQL模拟攻击指令的攻击严重性分值，使用该模拟攻击严重性分值对SQL模拟攻击指令进行优先级排名，从而验证SQL模拟攻击指令，检测出卫星网络体系的漏洞和安全隐患，以确保卫星网络体系在遇到真实入侵或攻击场景时能够做出反制措施，做到提前发现防御体系漏洞，达到满足卫星网络体系的安全性和可靠性需求的目的。为实现上述目的，参见图1，图1为本申请实施例提供的一种卫星网络体系的防御方法的流程示意图。如图1所示，该卫星网络体系的防御方法，包括：S110：使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令。SQL语言是结构化查询语言的简称。SQL语言是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名。因为卫星网络体系的数据是存储在数据库中的，因此通过SQL注入攻击的方式将容易提取到卫星网络数据。具体地，在星地通信领域中，SQL注入攻击可能会导致非常严重的后果，例如破坏卫星通信系统和泄露机密信息等。以下是一个可能的SQL注入攻击的例子：假设有一个星地通信系统，该系统使用数据库来存储卫星和地面站的信息，例如：卫星信息表：satellite地面站信息表：ground_station通信记录表：communication通信记录表中包含了四个字段：satellite_id、ground_station_id、timestamp和status。当卫星和地面站之间进行通信时，通信记录会被插入到通信记录表中。为了避免SQL注入攻击，系统使用了预编译语句，例如：INSERT INTO communication。  VALUES ;其中，SQL语句中的问号表示待插入的参数，可以避免SQL注入攻击。然而，攻击者可以通过各种手段来绕过这个限制，例如：案例一：攻击者通过堆叠查询注入：攻击者可以在satellite_id或ground_station_id字段中注入多个SQL查询语句，以获取更多的数据。例如：satellite_id=1;DROP TABLE ground_station;SELECT * FROM satellite WHERE id=1;这个注入语句包含了三个SQL查询语句，第一个SQL查询语句将会修改satellite_id的值为1，第二个SQL查询语句将会删除地面站信息表中的所有数据，第三个SQL查询语句将会查询卫星信息表中id为1的记录。攻击者能够通过上述方式来获取更多的数据，甚至破坏数据库中的数据。案例二：攻击者通过联合查询注入：攻击者可以在satellite_id或ground_station_id字段中注入联合查询语句，以获取其他表中的数据。例如：ground_station_id=1;SELECT * FROM satellite UNION SELECT * FROM ground_station WHERE id=1;这个注入语句包含了两个SQL查询语句，第一个SQL查询语句：SELECT * FROMsatellite将会查询卫星信息表中的所有记录，第二个查询语句SELECT * FROM ground_station WHERE id=1将会查询地面站信息表中id为1的记录。攻击者能够通过这种方式来获取其他表中的数据，甚至破坏数据库中的数据。这些都是比较复杂的SQL注入攻击方式，攻击者需要具备一定的数据库和SQL语言的知识才能够实现。因此，在开发卫星网络防御系统时，应该采取更加严格的防御措施，例如输入过滤、错误消息抑制、使用安全的编程语言和限制数据库用户权限等，以减少SQL注入攻击的风险。同时还应该定期对系统进行安全审计和漏洞扫描，及时发现和修复潜在的安全漏洞。因为SQL攻击很难被发现，因此为了对上述SQL攻击进行针对性防御，需要模拟上述SQL攻击指令。本申请实施例中SQL模拟攻击指令的生成方案如下：随机生成SQL模拟攻击指令的公式能够根据实际需求进行调整，以下是一些常用的公式：随机生成数字：pythonimport random# 生成随机数字num = random.randint随机生成字母：pythonimport random# 生成随机字母letter = chr) # 大写字母letter = chr) # 小写字母随机生成字符串：pythonimport randomimport string# 生成随机字符串letters = string.ascii_letters + string.digits # 字母和数字string = ''.join) # 生成长度为8的随机字符串随机生成SQL模拟攻击指令：pythonimport randomimport string# 生成随机SQL模拟攻击指令keywords =  # 关键词letters = string.ascii_letters + string.digits # 字母和数字table = ''.join) # 随机表名column = ''.join) # 随机列名value = ''.join) # 随机值sql = f"{random.choice} {column} {random.choice}{table} {random.choice} {column} = '{value}'"以上公式仅供参考，在实际使用中需要根据具体情况进行调整和优化。需要注意的是，在生成随机SQL模拟攻击指令时，必须保证指令的合法性和安全性，避免对卫星网络造成损害。因此，在使用随机数生成器生成随机SQL模拟攻击指令时需要遵循安全原则，保证指令的合法性和安全性。同时，在生成随机SQL模拟攻击指令后，还需要进行详细的漏洞筛查和安全评估，发现并修复卫星网络中存在的漏洞和安全隐患。本申请实施例能够使用时间戳作为随机数生成器的种子，生成随机的SQL模拟攻击指令。这样能够保证每次生成的指令都是唯一的，避免重复测试和误报漏洞。其中，关于使用时间戳随机生成SQL模拟攻击指令的方法如下：具体地，作为一种优选的实施例，参见图2，上述步骤S110：使用随机函数和时间戳，随机生成SQL模拟攻击指令，具体包括：S111：从SQL语言中选择SQL模拟攻击指令所使用的SQL关键词。具体地，从SQL语言中选择的SQL关键词能够为：“'SELECT', 'FROM', 'WHERE', 'AND', 'OR”，对应的SQL代码如下：keywords =  #关键词S112：使用时间戳作为随机数生成器的种子。其中，定义的时间戳函数如下：pythonimport randomimport time对应的SQL代码如下：#使用时间戳作为随机数生成器的种子random.seed)S113：使用随机数生成器的种子，分别生成随机表名、随机列名和随机值。使用随机数生成器的种子分别生成随机表名、随机列名和随机值的代码如下：letters = string.ascii_letters + string.digits # 字母和数字table = ''.join) # 随机表名column = ''.join) # 随机列名value = ''.join) # 随机值S114：使用随机数生成器构造SQL指令生成函数。本申请实施例中SQL指令生成函数能够用f函数进行定义。S115：使用SQL指令生成函数，对SQL关键词、随机表名、随机列名和随机值进行组合，随机生成多种不同的SQL模拟攻击指令。其中，一条SQL模拟攻击指令如下：sql = f"{random.choice} {column} {random.choice}{table} {random.choice} {column} = '{value}'"例如：使用时间戳随机生成SQL模拟攻击指令的代码如下：pythonimport randomimport time# 使用时间戳作为随机数生成器的种子random.seed)# 生成随机SQL模拟攻击指令keywords =  # 关键词letters = string.ascii_letters + string.digits # 字母和数字table = ''.join) # 随机表名column = ''.join) # 随机列名value = ''.join) # 随机值sql = f"{random.choice} {column} {random.choice}{table} {random.choice} {column} = '{value}'"另外，本申请实施例还能够使用随机函数随机生成SQL模拟攻击指令。具体地，本申请实施例能够使用随机函数生成随机值，例如使用RAND函数生成随机数，使用UUID函数生成唯一标识符等。这样可以模拟更加真实的SQL注入攻击，提高漏洞筛查的准确性。若不使用随机函数生成SQL模拟攻击指令，可能会出现重复测试、漏洞遗漏和模式化测试等问题，导致降低测试效率和漏洞筛查的准确性。因此，使用随机函数生成SQL模拟攻击指令是一种有效的避免这些问题的方法。具体地，作为一种优选的实施例，如图3所示，上述卫星网络体系的防御方法中，步骤S110：使用随机函数和时间戳，随机生成多种不同的SQL模拟攻击指令的步骤包括：S116：从SQL语言中选择SQL模拟攻击指令所使用的SQL关键词。SQL语言中选择的SQL模拟攻击指令所使用的SQL关键词能够包括：'SELECT', 'FROM', 'WHERE', 'AND', 'OR'。对应的SQL代码如下：keywords =  # 关键词S117：使用随机数生成器生成随机表名和随机列名。本申请实施例中，使用随机数生成器生成随机表名和随机列名的SQL代码如下：letters = string.ascii_letters + string.digits # 字母和数字table = ''.join) # 随机表名column = ''.join) # 随机列名S118：使用随机函数生成随机值。本申请使用RAND函数生成随机值，即代替原有的value函数。S119：使用随机数生成器构造SQL指令生成函数。S1110：使用SQL指令生成函数对SQL关键词、随机表名、随机列名和随机值进行组合，随机生成多种不同的SQL模拟攻击指令。该随机生成的SQL模拟攻击指令如下：sql = f"{random.choice} {column} {random.choice}{table} {random.choice} {column} = RAND"具体地，作为一种优选的实施例，上述使用随机函数生成随机值，使用随机数生成器构造SQL指令生成函数，然后使用该SQL指令生成函数，随机生成多种不同的SQL模拟攻击指令的SQL代码如下：定义随机函数pythonimport randomimport string# 生成随机SQL模拟攻击指令keywords =  # 关键词letters = string.ascii_letters + string.digits # 字母和数字table = ''.join) # 随机表名column = ''.join) # 随机列名sql = f"{random.choice} {column} {random.choice}{table} {random.choice} {column} = RAND"本申请实施例提供的技术方案，根据随机函数生成的SQL模拟攻击指令能够提高漏洞筛查的准确性。该根据随机函数生成SQL模拟攻击指令，其技术效果如下：增加测试覆盖率：随机函数生成的SQL模拟攻击指令具有随机性，能够模拟不同的攻击方式和参数组合，从而增加测试覆盖率。这样可以更全面地检测目标系统的安全性，提高漏洞筛查的准确性。避免模式化测试：使用固定模式的攻击指令容易形成模式化测试，从而导致漏洞筛查的准确性降低。而随机函数生成的SQL模拟攻击指令具有随机性，避免了模式化测试的情况，提高了漏洞筛查的准确性。提高漏洞发现率：随机函数生成的SQL模拟攻击指令可以模拟不同的攻击方式和参数组合，从而增加漏洞发现的概率。这样可以提高漏洞筛查的准确性，发现更多的漏洞。综上所述，根据随机函数生成的SQL模拟攻击指令可以提高漏洞筛查的准确性，增加测试覆盖率，避免模式化测试，提高漏洞发现率，从而更全面地检测目标系统的安全性。另外，需要注意的是在生成随机SQL模拟攻击指令时，必须保证指令的合法性和安全性，避免对卫星网络造成损害。因此，在使用随机数生成器生成随机SQL模拟攻击指令时，需要遵循安全原则，保证指令的合法性和安全性。同时，在生成随机SQL模拟攻击指令后，我们还需要进行详细的漏洞筛查和安全评估，发现并修复卫星网络中存在的漏洞和安全隐患。因此，图1所示实施例提供的卫星网络体系的防御方法，还包括以下步骤：S120：使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素。在使用多种不同的SQL模拟攻击指令对卫星网络体系进行模拟攻击时，会扫描得到卫星网络体系的漏洞和安全隐患，这样就能够筛查得到每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素。具体地，作为一种优选的实施例，如图4所示，上述步骤S120：使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得到每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素的步骤包括：S121：使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度。其中，数据泄露程度用于评估卫星网络体系中被泄露数据的敏感程度和数量。数据破坏程度用于评估数据的完整性受到破坏的程度。系统可用性程度用于评估攻击对系统可用性的影响程度。S122：使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计卫星网络体系的漏洞暴露程度、访问权限和安全控制措施。其中，漏洞暴露程度是指评估应用程序和数据库存在漏洞的程度。访问权限用于评估攻击者获得执行攻击所需的访问权限的难易程度。安全控制措施用于评估应用程序和数据库的安全控制措施的有效性。以及，S123：使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别统计SQL模拟攻击指令对应的技术要求以及投入时间和资源。其中，技术要求用于评估攻击所需的专业技术知识和工具的复杂程度；投入时间和资源用于评估攻击者执行攻击所需的时间和资源投入。在得到上述每种SQL模拟攻击指令对应的卫星网络体系的攻击评估因素后，还包括以下步骤：S124：使用卫星网络体系的数据泄露程度、数据破坏程度和系统可用性程度，确定每种SQL模拟攻击指令造成的卫星网络体系的影响范围。影响范围用于评估SQL攻击对数据库和应用程序的潜在影响范围。该影响范围包括数据泄露程度、数据破坏程度和系统可用性。S125：使用卫星网络体系的漏洞暴露程度、访问权限和安全控制措施，确定每种SQL模拟攻击指令的攻击成功概率。该攻击成功概率用于评估攻击者成功执行SQL攻击的概率，包括上述漏洞暴露程度、访问权限和安全控制措施。S126：使用SQL模拟攻击指令对应的技术要求以及投入时间和资源，确定每种SQL模拟攻击指令的攻击复杂度。攻击复杂度用于评估执行SQL攻击所需的技术难度和复杂性。该攻击复杂度包括上述技术要求以及投入时间和资源。本申请实施例提供的技术方案，使用多种不同的SQL模拟攻击指令模拟攻击卫星网络体系，分别得多种不同的攻击评估因素，然后使用上述不同的攻击评估因素进行组合，分别得到每种SQL模拟攻击指令造成的卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和每种SQL模拟攻击指令的攻击复杂度。从而得到不同SQL模拟攻击指令对卫星网络体系造成的影响，方便针对性进行防范。上面的多种不同的SQL模拟攻击指令能够根据不同的场景任意组合使用，但是效果最好的是全都使用。然而问题是如果上述几种火力全开，每天生成超多的SQL模拟攻击指令，造成网络负担。为了解决上述问题需要引入赋分制度，找出来最有可能攻击成功的SQL模拟攻击指令，提高优先级排名，尽快验证。为了实现上述技术效果，图1所示实施例提供的卫星网络体系的防御方法，还包括：S130：根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值。本申请实施例提供的技术方案中，评估 SQL 攻击严重性是一项复杂的任务，因为每个系统和环境都有其特定的上下文和风险。攻击严重性的综合评估需要基于具体情况进行，并且需要结合安全专家的意见和组织的安全策略进行决策，因此本申请提出了一套权重设计方案，为每个攻击评估因素分配相应的权重，并将其归一化到合适的范围，然后计算攻击的综合严重性评分，从而能够更加精准的计算出每种SQL攻击的攻击严重性评分。具体地，作为一种优选的实施例，如图5所示，上述卫星网络体系的防御方法中，步骤S130：根据攻击严重性评分函数对每种SQL模拟攻击指令对应的攻击评估因素进行权重赋分，得到每种SQL模拟攻击指令的攻击严重性分值，具体包括：S131：根据卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，分别建立影响范围、攻击成功概率和攻击复杂度的权重系数。本申请实施例将赋分制引入SQL模拟攻击的生成公式中，攻击影响范围、攻击成功概率和攻击复杂度分别相关。具体地，攻击影响范围与攻击成功概率正相关，若攻击的影响范围更大，那么攻击成功的概率可能会增加；攻击成功概率与攻击复杂性通常情况下负相关；攻击影响范围与攻击复杂性一定程度上正相关，一些复杂的攻击可能会导致更广泛的影响范围。因此，需要根据上述卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度的关系，建立影响范围、攻击成功概率和攻击复杂度的权重系数。S132：根据攻击严重性评分函数：Severity =  / ，结合影响范围的权重系数、攻击成功概率的权重系数和攻击复杂度的权重系数，分别得到每种SQL功模拟攻击指令的攻击严重性分值；其中，Impact、Probability和Complexity分别为卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，W1、W2和 W3分别为影响范围的权重系数、攻击成功概率的权重系数和攻击复杂度的权重系数。本申请实施例提供的技术方案，引入赋分制度，这样能够对生成的大量SQL模拟攻击指令进行评分，当攻击严重性评分大于一定值的优先级测试，例如大于80分时，该SQL模拟攻击指令被认为是危险等级非常高的SQL模拟攻击指令，这也就意味着这条SQL模拟攻击指令能够攻破防御系统的概率是高的，此时需要优先测试，因为1：每天生成的SQL模拟攻击指令的数量非常大，需要及时的发现防御系统漏洞，而不是等着慢慢测试，有可能真的攻击指令比模拟攻击指令提前到达，这样就失去了引入SQL模拟攻击技术定期进行漏洞扫描和安全演练的意义。2：大多数的防御系统会设置SQL查询次数的。因为上述实施例中提到攻击者是利用错误消息的SQL注入攻击：攻击者通过输入特定的SQL查询语句，来触发Web应用程序返回错误信息，攻击者还能够通过错误消息来获取Web应用程序的敏感信息，例如数据库版本和表结构等，所以一般会限制SQL的指令的接收次数，在实际应用中不会因为安全扫描而调整SQL的指令的接收次数，所以在保证防御系统能够正常工作的情况下，需要优先赋分高的先测试，保证在不影响系统正常工作的情况下，还能够更高效的查缺补漏，而不是用一味的随机生成的SQL模拟攻击指令去内耗防御系统，反而激增了防御系统的负担。其中，本申请实施例的目的在于通过权重的设计调整，能够使得SQL的评分更加精准。例如，在卫星网络体系中需要不断随机的生成SQL攻击语句并对卫星网络体系进行攻击，由于随机生产的SQL攻击过多，所以需要优先选择攻击性最强的进行模拟测试，也就是说选取SQL攻击语句中评分最高的，目前Impact、Probability以及Complexity三者的取值采用对应不同量级的方式处理。具体地，作为一种优选的实施例，如图6所示，上述步骤S131：根据卫星网络体系的影响范围、每种SQL模拟攻击指令的攻击成功概率和攻击复杂度，分别建立影响范围、攻击成功概率和攻击复杂度的权重系数，包括：S1311：根据第一权重系数计算公式：w1=n*w2，计算影响范围的权重系数；其中，w1为影响范围的权重系数，w2为攻击成功概率的权重系数，n为范围概率影响因子。研究表明影响范围与攻击成功概率的关系如下：若SQL攻击的影响范围更大，那么攻击成功的概率可能会增加。因为攻击者可以获得更多的敏感信息或对系统造成更严重的破坏，所以这里w1与w2应该呈现正相关关系。影像范围与攻击成功概率的范围概率影响因子用字母n表示，用于确定影响范围对攻击成功概率的影响程度。较大的 n值表示影响范围对概率的影响更显著，而较小的 n 值表示影响范围对攻击成功概率的影响相对较小。至于n的取值能够根据实际需求来定。上述影响范围、攻击成功概率和攻击复杂度三个因素的打分准则中均分由1-10组成的10个量级，但是由于难以确保每次采用的三者的取值的样本的优劣程度，例如某一条SQL语句，Impact影响范围评分为10，Probability攻击成功概率评分为1，理论上若SQL攻击的影响范围更大，那么SQL攻击的成功概率也会增加，但现在影响范围Impact与攻击成功概率Probability的评分已经相差了10倍，如果不建立权重之间的关系，使得因素之间建立联系，势必得到的评分也不准确，所以我们将w1与w2的正相关关系带入到第一权重系数计算公式中，假设n为2，则Impact影响范围乘以权重w1的评分为10，Probability攻击成功概率乘以w2的评分为2，相差5倍，一定程度上避免了因为因素评分过度规则化而改变实际的SQL攻击性大小评分。S1312：根据第二权重系数计算公式：w2 = a * exp，计算攻击成功概率的权重系数；其中，w3为攻击复杂度的权重系数，a为曲线缩放因子，b为曲线斜率影响因子。本申请实施例中，攻击成功概率与攻击复杂性的关系如下：通常情况下，攻击成功概率与攻击复杂性呈负相关关系。如果攻击复杂性较低，攻击者更容易成功执行攻击；相反，如果攻击复杂性较高，攻击成功的概率可能会降低。在第二权重系数计算公式：w2 = a * exp中，自然对数的底数 e 是一个重要的数学常数，它的近似值约为 2.71828。指数函数能够将指数的幂应用到 e 上，使得函数的值呈指数增长或指数衰减。在该第二权重系数计算公式中，exp 表示以 e 为底，指数为 -b * w3的指数函数。其中，-b * w3 是指数的幂，负号表示指数函数的结果会随着指数的增加而减小。exp 能够用来表示攻击复杂性对攻击成功概率的影响程度。较大的攻击复杂性值 w3 将会导致指数函数的结果较小，从而降低攻击成功的概率。而较小的攻击复杂性值 w3 会导致指数函数的结果较大，从而增加攻击成功的概率。通过使用指数函数，本申请实施例能够在第二权重系数计算公式中更清晰明确地表达攻击复杂性与攻击成功概率之间的关联，并呈现指数下降的趋势。其中，参数 a 和 b 是用于调整函数曲线和斜率的常数。通过调整这些参数的值，能够根据具体情况来确定概率和复杂性之间的关系强度和形状。具体的：参数 a 控制曲线的整体缩放因子，能够影响攻击成功概率的范围和大小。一般而言，较大的参数 a 值会导致更高的初始概率，而较小的参数 a 值会导致更低的初始概率。根据实际情况能够尝试不同的数值并进行调整，以找到合适的取值范围。在本申请实施例中，a是一个缩放因子，用于调整概率的范围和大小，一般而言，参数 a 的值可以在区间 参数 b：参数 b 影响曲线的斜率，较大的参数 b 值会导致曲线下降得更陡峭，表示攻击复杂性对概率的影响更为敏感；较小的参数 b 值会导致曲线下降得更平缓，表示攻击复杂性对概率的影响相对较小。根据实际情况，可以调整参数 b 的值以适应具体的关联关系，其中，b通常为正数。以及，S1313：根据第三权重系数计算公式：w1 = c* exp，计算攻击复杂度的权重系数；其中，c为指数缩放因子，d为指数斜率影响因子。影响范围与攻击复杂性的关系如下：一些复杂的攻击可能会导致更广泛的影响范围，因此攻击者需要更高的技术水平和更多的时间来执行复杂的攻击，但如果成功执行，可能会对数据库和应用程序产生更严重的后果。该第三权重系数计算公式：w1 = c* exp的含义如下：随着攻击的复杂性增加，指数函数的值也增加，从而导致攻击的影响范围增大。也就是说，复杂的攻击往往会产生更广泛的影响。同时，通过调整参数 c 和参数 d 的值，能够控制影响范围与复杂性之间的关系强度和形状。这里的参数 d 控制了指数函数的斜率，在本发明实施例中它可以是一个正数即上实施的计算机程序产品的形式。显然，本领域的技术人员可以对本申请进行各种改动和变型而不脱离本申请的精神和范围。这样，倘若本申请的这些修改和变型属于本申请权利要求及其等同技术的范围之内，则本申请也意图包含这些改动和变型在内。
