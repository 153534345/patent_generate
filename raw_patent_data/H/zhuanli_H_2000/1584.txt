标题title
一种软硬结合的加密控制方法
摘要abst
本申请提供了一种软硬结合的加密控制方法，包括：获取各个加密算法模式，并根据目标处理器的运行状况对其分别进行模拟数据运算，以获取各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；获取目标处理器的当前运行状况、待处理数据的数据长度及待处理数据对应的目标加密算法模式；根据待处理数据对应的目标加密算法模式，获取目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；将目标数据长度阈值及目标处理器的当前运行状况，与待处理数据的数据长度进行分析比较，以确定目标加密方式。上述方案将实际应用环境中的纯软件处理和硬件加速处理的特性相结合来，提高了整体数据处理的速度。
权利要求书clms
1.一种软硬结合的加密控制方法，其特征在于，所述方法包括：获取各个加密算法模式，并根据目标处理器的运行状况对所述各个加密算法模式分别进行模拟数据运算，以获取所述各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；所述各个加密算法模式包括非对称加密算法模式、对称加密算法模式及摘要加密算法模式；获取目标处理器的当前运行状况、待处理数据的数据长度及所述待处理数据对应的目标加密算法模式；根据所述待处理数据对应的目标加密算法模式，获取所述目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；将所述目标数据长度阈值及所述目标处理器的当前运行状况，与所述待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式；所述目标加密方式包括软件加密方式或硬件加密方式。2.根据权利要求1所述的方法，其特征在于，所述将所述目标数据长度阈值及所述目标处理器的当前运行状况，与所述待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式，包括：根据所述目标处理器的当前运行状况，确定所述目标处理器的当前CPU系数；获取所述目标数据长度阈值与所述目标处理器的当前CPU系数的乘积结果，并将所述乘积结果与所述待处理数据的数据长度进行比较；根据所述乘积结果与所述待处理数据的数据长度之间的比较结果，确定目标加密方式。3.根据权利要求2所述的方法，其特征在于，所述根据所述目标处理器的当前运行状况，确定所述目标处理器的当前CPU系数，包括：根据所述目标处理器的当前运行状况，确定所述目标处理器的CPU使用率及CPU配置数据；根据所述CPU使用率及所述CPU配置数据，获取所述目标处理器的当前CPU系数。4.根据权利要求2所述的方法，其特征在于，所述根据所述乘积结果与所述待处理数据的数据长度之间的比较结果，确定目标加密方式，包括：当所述乘积结果大于所述待处理数据的数据长度时，确定目标加密方式为软件加密方式；当所述乘积结果小于所述待处理数据的数据长度时，确定目标加密方式为硬件加密方式。5.根据权利要求1至4任一所述的方法，其特征在于，在所述获取目标处理器的当前运行状况、待处理数据的数据长度及所述待处理数据对应的目标加密算法模式之后，所述方法还包括：获取外部输入的第一预设数据长度阈值及第二预设数据长度阈值，并根据所述第一预设数据长度阈值及所述第二预设数据长度阈值确定所述待处理数据的目标加密方式；其中，所述第一预设数据长度阈值指示所述待处理数据在所述目标处理器的指定运行状况下所采用的指定加密算法模式对应的目标加密方式为软件加密方式；所述第二预设数据长度阈值指示所述待处理数据在所述目标处理器的指定运行状况下所采用的指定加密算法模式对应的目标加密方式为硬件加密方式。6.根据权利要求5所述的方法，其特征在于，所述方法还包括：当所述硬件加密方式对应的加密设备存在故障时，将所述目标处理器在故障运行状况下所采用的目标加密算法模式对应的数据长度阈值设置为第一预设数据长度阈值，以确定所述目标加密方式为软件加密方式。7.根据权利要求6所述的方法，其特征在于，所述方法还包括：将所述各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值，写入至目标配置文件；将所述待处理数据在所述目标处理器的指定运行状况下，所采用的指定加密算法模式对应的所述第一预设数据长度阈值或所述第二预设数据长度阈值，写入至所述目标配置文件；将所述目标处理器在故障运行状况下所采用的目标加密算法模式对应的所述第一预设数据长度阈值，写入至所述目标配置文件。8.一种软硬结合的加密控制装置，其特征在于，所述装置包括：数据长度阈值获取模块，用于获取各个加密算法模式，并根据目标处理器的运行状况对所述各个加密算法模式分别进行模拟数据运算，以获取所述各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；所述各个加密算法模式包括非对称加密算法模式、对称加密算法模式及摘要加密算法模式；待处理数据状态信息获取模块，用于获取目标处理器的当前运行状况、待处理数据的数据长度及所述待处理数据对应的目标加密算法模式；目标数据长度阈值获取模块，用于根据所述待处理数据对应的目标加密算法模式，获取所述目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；目标加密方式确定模块，用于将所述目标数据长度阈值及所述目标处理器的当前运行状况，与所述待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式；所述目标加密方式包括软件加密方式或硬件加密方式。9.一种计算机设备，其特征在于，所述计算机设备包括处理器和存储器，所述存储器中存储有至少一条指令，所述至少一条指令由所述处理器加载并执行以实现如权利要求1至7任一所述的一种软硬结合的加密控制方法。10.一种计算机可读存储介质，其特征在于，所述存储介质中存储有至少一条指令，所述至少一条指令由处理器加载并执行以实现如权利要求1至7任一所述的一种软硬结合的加密控制方法。
说明书desc
技术领域本申请涉及自动控制技术领域，具体涉及一种软硬结合的加密控制方法。背景技术随着信息时代的到来，数据安全至关重要，目前主流的加解密方式有两种，一种是软件加解密的方式，如开放式安全套接层协议的自带算法库；另一种是第三方加密卡的硬件加解密方式。其中，软件加解密的方式受限于系统性能，且没有硬件加速，在处理大包数据的时候，尤其是在系统负载高的情况下，速度会非常慢，且会影响到系统其他服务的正常运行；而第三方加密卡的硬件加解密方式，无论大小包，统一走硬件加解密的方式，都是和硬件通讯完成加解密运算，此方式在处理大包数据时可充分发挥其硬件加速功能，大大提高加解密性能，但是在处理小包数据的过程中，每次跟硬件通讯都需要损耗时间，对比软件来说就没有了优势，若频繁的进行小包数据运算则会导致性能相比软算法来说，更加效率低下。基于上述现有技术中加解密算法的缺陷，亟需一种将纯软件处理和硬件加速处理的特性相结合来提高整体数据处理速度的加密控制方法。发明内容本申请提供了一种软硬结合的加密控制方法，将实际应用环境中的纯软件处理和硬件加速处理的特性相结合来，提高了整体数据处理的速度，该技术方案如下。一方面，提供了一种软硬结合的加密控制方法，所述方法包括：获取各个加密算法模式，并根据目标处理器的运行状况对所述各个加密算法模式分别进行模拟数据运算，以获取所述各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；所述各个加密算法模式包括非对称加密算法模式、对称加密算法模式及摘要加密算法模式；获取目标处理器的当前运行状况、待处理数据的数据长度及所述待处理数据对应的目标加密算法模式；根据所述待处理数据对应的目标加密算法模式，获取所述目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；将所述目标数据长度阈值及所述目标处理器的当前运行状况，与所述待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式；所述目标加密方式包括软件加密方式或硬件加密方式。又一方面，提供了一种软硬结合的加密控制装置，所述装置包括：数据长度阈值获取模块，用于获取各个加密算法模式，并根据目标处理器的运行状况对所述各个加密算法模式分别进行模拟数据运算，以获取所述各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；所述各个加密算法模式包括非对称加密算法模式、对称加密算法模式及摘要加密算法模式；待处理数据状态信息获取模块，用于获取目标处理器的当前运行状况、待处理数据的数据长度及所述待处理数据对应的目标加密算法模式；目标数据长度阈值获取模块，用于根据所述待处理数据对应的目标加密算法模式，获取所述目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；目标加密方式确定模块，用于将所述目标数据长度阈值及所述目标处理器的当前运行状况，与所述待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式；所述目标加密方式包括软件加密方式或硬件加密方式。在一种可能的实施方式中，所述目标加密方式确定模块，包括：当前CPU系数获取单元，用于根据所述目标处理器的当前运行状况，确定所述目标处理器的当前CPU系数；比较单元，用于获取所述目标数据长度阈值与所述目标处理器的当前CPU系数的乘积结果，并将所述乘积结果与所述待处理数据的数据长度进行比较；目标加密方式确定单元，用于根据所述乘积结果与所述待处理数据的数据长度之间的比较结果，确定目标加密方式。在一种可能的实施方式中，所述当前CPU系数获取单元，还用于：根据所述目标处理器的当前运行状况，确定所述目标处理器的CPU使用率及CPU配置数据；根据所述CPU使用率及所述CPU配置数据，获取所述目标处理器的当前CPU系数。在一种可能的实施方式中，所述目标加密方式确定单元，还用于：当所述乘积结果大于所述待处理数据的数据长度时，确定目标加密方式为软件加密方式；当所述乘积结果小于所述待处理数据的数据长度时，确定目标加密方式为硬件加密方式。在一种可能的实施方式中，所述装置还用于：获取外部输入的第一预设数据长度阈值及第二预设数据长度阈值，并根据所述第一预设数据长度阈值及所述第二预设数据长度阈值确定所述待处理数据的目标加密方式；其中，所述第一预设数据长度阈值指示所述待处理数据在所述目标处理器的指定运行状况下所采用的指定加密算法模式对应的目标加密方式为软件加密方式；所述第二预设数据长度阈值指示所述待处理数据在所述目标处理器的指定运行状况下所采用的指定加密算法模式对应的目标加密方式为硬件加密方式。在一种可能的实施方式中，所述装置还用于：当所述硬件加密方式对应的加密设备存在故障时，将所述目标处理器在故障运行状况下所采用的目标加密算法模式对应的数据长度阈值设置为第一预设数据长度阈值，以确定所述目标加密方式为软件加密方式。在一种可能的实施方式中，将所述各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值，写入至目标配置文件；将所述待处理数据在所述目标处理器的指定运行状况下，所采用的指定加密算法模式对应的所述第一预设数据长度阈值或所述第二预设数据长度阈值，写入至所述目标配置文件；将所述目标处理器在故障运行状况下所采用的目标加密算法模式对应的所述第一预设数据长度阈值，写入至所述目标配置文件。再一方面，提供了一种计算机设备，所述计算机设备包括处理器和存储器，所述存储器中存储有至少一条指令，所述至少一条指令由所述处理器加载并执行以实现上述的一种软硬结合的加密控制方法。又一方面，提供了一种计算机可读存储介质，所述存储介质中存储有至少一条指令，所述至少一条指令由处理器加载并执行以实现上述的一种软硬结合的加密控制方法。本申请提供的技术方案可以包括以下有益效果：获取各个加密算法模式，并根据目标处理器的运行状况对该各个加密算法模式分别进行模拟数据运算，以获取该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；获取目标处理器的当前运行状况、待处理数据的数据长度及该待处理数据对应的目标加密算法模式；根据该待处理数据对应的目标加密算法模式，获取该目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；将该目标数据长度阈值及该目标处理器的当前运行状况，与该待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式。上述方案将实际应用环境中的纯软件处理和硬件加速处理的特性相结合来，提高了整体数据处理的速度，由于各个加密算法模式在目标处理器的不同运行状况下分别对应有不同的数据长度阈值，可以针对不同加密算法模式的特性来去决定软件与硬件加密方式的切换，提高了其加密的灵活性；此外，还可以通过外部输入的方式对加密算法模式与数据长度阈值进行指定，实现了数据长度阈值的可配置性，大大提高了后续使用的一个拓展性，以便后期系统在遇到某些极端情况也可使用。附图说明为了更清楚地说明本申请具体实施方式或现有技术中的技术方案，下面将对具体实施方式或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本申请的一些实施方式，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1是根据一示例性实施例示出的一种软硬结合的加密控制方法的方法流程图。图2是根据一示例性实施例示出的一种软硬结合的加密控制方法的方法流程图。图3是根据一示例性实施例示出的一种脚本阈值计算流程示意图。图4是根据一示例性实施例示出的一种工具阈值计算流程示意图。图5是根据一示例性实施例示出的加密控制方法的应用调用流程图。图6是根据一示例性实施例示出的软硬结合的加密控制装置结构图。图7示出了本申请一示例性实施例示出的计算机设备的结构框图。具体实施方式下面将结合附图对本申请的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。应理解，在本申请实施例的描述中，术语“对应”可表示两者之间具有直接对应或间接对应的关系，也可以表示两者之间具有关联关系，也可以是指示与被指示、配置与被配置等关系。图1是根据一示例性实施例示出的一种软硬结合的加密控制方法的方法流程图。如图1所示，该方法可以包括如下步骤：S101、获取各个加密算法模式，并根据目标处理器的运行状况对该各个加密算法模式分别进行模拟数据运算，以获取该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；该各个加密算法模式包括非对称加密算法模式、对称加密算法模式及摘要加密算法模式。在一种可能的实施方式中，在需要对输入的待加密数据进行加密控制前，需要针对各个加密算法模式，获取各个加密算法模式对应的数据长度阈值，根据各个加密算法模式对应的数据长度阈值，从而区别对输入的待加密数据使用软件加密方式还是走加密卡的硬件加密方式。因此，此处可以采用模拟数据运算的方式对各个加密算法模式进行训练，即初始化所有加密算法模式，然后依次对每一个加密算法模式进行模拟数据运算。示例性的，针对目标处理器的任一运行状况下的任一加密算法模式，将用于训练的数据从521个字节到16K个字节，每次递增512个字节，每个数据长度模拟运算500次，得出了不同数据长度的平均速度，之后根据这些平均值得出当前运行状况下的该加密算法模式对应的最合适或最佳的数据长度，此时将该最合适或最佳的数据长度确定为该加密算法模式在目标处理器的当前运行状况下对应的数据长度阈值。S102、获取目标处理器的当前运行状况、待处理数据的数据长度及该待处理数据对应的目标加密算法模式。在一种可能的实施方式中，通过上述实施例已经得到各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值，此时，针对输入的待处理数据即可通过各个数据长度阈值实现加密方式的选择，首先，要对目标处理器的当前运行状况、待处理数据的数据长度及该待处理数据对应的目标加密算法模式进行初步获取，可选的，在获取待处理数据时，即可得到该待处理数据对应的目标加密算法模式，也就是说，该待处理数据对应的目标加密算法模式可以是预先选择好的，与待处理数据一同输入到处理器中。S103、根据该待处理数据对应的目标加密算法模式，获取该目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值。在一种可能的实施方式中，在获取待处理数据对应的目标加密算法模式时，可以根据目标处理器的当前运行状况，从上述通过模拟数据运算获得的各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值中，对应得到该目标加密算法模式此时的目标数据长度阈值。S104、将该目标数据长度阈值及该目标处理器的当前运行状况，与该待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式；该目标加密方式包括软件加密方式或硬件加密方式。在一种可能的实施方式中，根据该目标加密算法模式对应的目标数据长度阈值及该目标处理器的当前运行状况对进行分析，如可以根据该目标加密算法模式对应的目标数据长度阈值与该目标处理器的CPU目前使用情况共同判断后选择最合适的加密方式进行加解密运算，在待处理数据相对较大的情况下，选择软件加密方式，在待处理数据相对较小的情况下，选择硬件加密方式，这样无论输入的待处理数据大小，系统都能够采用最快的方式来处理输入数据，尤其是在CPU负载很高，且待处理数据较小的情况下，增加走硬件运算的比重。综上所述，获取各个加密算法模式，并根据目标处理器的运行状况对该各个加密算法模式分别进行模拟数据运算，以获取该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；获取目标处理器的当前运行状况、待处理数据的数据长度及该待处理数据对应的目标加密算法模式；根据该待处理数据对应的目标加密算法模式，获取该目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；将该目标数据长度阈值及该目标处理器的当前运行状况，与该待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式。上述方案将实际应用环境中的纯软件处理和硬件加速处理的特性相结合来，提高了整体数据处理的速度，由于各个加密算法模式在目标处理器的不同运行状况下分别对应有不同的数据长度阈值，可以针对不同加密算法模式的特性来去决定软件与硬件加密方式的切换，提高了其加密的灵活性；此外，还可以通过外部输入的方式对加密算法模式与数据长度阈值进行指定，实现了数据长度阈值的可配置性，大大提高了后续使用的一个拓展性，以便后期系统在遇到某些极端情况也可使用。图2是根据一示例性实施例示出的一种软硬结合的加密控制方法的方法流程图。如图2所示，该方法可以包括如下步骤：S201、获取各个加密算法模式，并根据目标处理器的运行状况对该各个加密算法模式分别进行模拟数据运算，以获取该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；该各个加密算法模式包括非对称加密算法模式、对称加密算法模式及摘要加密算法模式。进一步的，请参照图3所示的一种脚本阈值计算流程示意图，在对该加密控制方法实现时，需要先安装设备驱动，对脚本控制工具进行打包，在设备驱动安装完成后，通过模拟数据运算的方式，根据目标处理器的运行状况进行脚本阈值训练，每个加密算法模式训练出一个数据长度阈值，在训练成功后，将该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值，写入至目标配置文件。脚本配置文件默认是所有加密算法模式都进行模拟数据运算的训练，得到各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值，此外，请参照图4所示的一种工具阈值计算流程示意图，也可以以命令或图形界面配置工具的方式手动指定加密算法模式和数据长度阈值，进行数据长度阈值初始化操作，即选择目标加密算法模式及目标数据长度，进行数据长度阈值训练，在训练结束后，将训练出来的数据长度阈值写入到对应的目标配置文件中。也就是说，图3对应的脚本阈值计算是对所有的加密算法模式进行训练，而图4对应的工具阈值可以通过制定或者图形界面配置工具的方式只对指定的加密算法模式及指定的数据长度进行训练。S202、获取目标处理器的当前运行状况、待处理数据的数据长度及该待处理数据对应的目标加密算法模式。S203、根据该待处理数据对应的目标加密算法模式，获取该目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值。S204、将该目标数据长度阈值及该目标处理器的当前运行状况，与该待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式；该目标加密方式包括软件加密方式或硬件加密方式。在一种可能的实施方式中，根据该目标处理器的当前运行状况，确定该目标处理器的当前CPU系数；获取该目标数据长度阈值与该目标处理器的当前CPU系数的乘积结果，并将该乘积结果与该待处理数据的数据长度进行比较；根据该乘积结果与该待处理数据的数据长度之间的比较结果，确定目标加密方式。在一种可能的实施方式中，根据该目标处理器的当前运行状况，确定该目标处理器的CPU使用率及CPU配置数据；根据该CPU使用率及该CPU配置数据，获取该目标处理器的当前CPU系数。在一种可能的实施方式中，当该乘积结果大于该待处理数据的数据长度时，确定目标加密方式为软件加密方式；当该乘积结果小于该待处理数据的数据长度时，确定目标加密方式为硬件加密方式。进一步的，请参照图5所示的加密控制方法的应用调用流程图，在对各个数据长度阈值训练成功后，当有待处理数据进来后进行应用调用，对加密套件的应用接口进行调用，并进行算法识别，判断出待处理数据对应的目标加密算法模式，在判断出待处理数据对应的目标加密算法模式后，获取该目标加密算法模式对应的数据长度阈值并进行判断，该数据长度阈值可以是已经训练好的目标数据长度阈值，也可以是手动设置的第一预设数据长度阈值及第二预设数据长度阈值。该数据长度阈值大于零时，则判断该数据长度阈值是进行模拟数据运算训练得到的，然后将目标数据长度阈值*CPU系数的值与待处理数据的数据长度进行比较，当乘积结果大于该待处理数据的数据长度时，确定目标加密方式为软件加密方式；当该乘积结果小于该待处理数据的数据长度时，确定目标加密方式为硬件加密方式。S205、获取外部输入的第一预设数据长度阈值及第二预设数据长度阈值，并根据该第一预设数据长度阈值及该第二预设数据长度阈值确定该待处理数据的目标加密方式；其中，该第一预设数据长度阈值指示该待处理数据在该目标处理器的指定运行状况下所采用的指定加密算法模式对应的目标加密方式为软件加密方式；该第二预设数据长度阈值指示该待处理数据在该目标处理器的指定运行状况下所采用的指定加密算法模式对应的目标加密方式为硬件加密方式。进一步的，各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值可以不通过模拟数据运算的方式进行阈值训练，可在后期使用过程中进行手动设置，即上述的外部输入；如图5所示，该数据长度阈值为0时，则判断该数据长度阈值手动设置得到的第二预设数据长度阈值，此时完全走硬件加密方式，无论大小包；该数据长度阈值为-1时，则判断该数据长度阈值手动设置得到的第一预设数据长度阈值，此时完全走软件加密方式，不使用硬件加密；其他正整数，则使用逻辑判断，即上述的将目标数据长度阈值*CPU系数的值与待处理数据的数据长度进行比较，当乘积结果大于该待处理数据的数据长度时，确定目标加密方式为软件加密方式，当该乘积结果小于该待处理数据的数据长度时，确定目标加密方式为硬件加密方式。在一种可能的实施方式中，当该硬件加密方式对应的加密设备存在故障时，将该目标处理器在故障运行状况下所采用的目标加密算法模式对应的数据长度阈值设置为第一预设数据长度阈值，以确定该目标加密方式为软件加密方式。进一步的，当遇到某些极端情况下，例如硬件加密设备有故障，但是又需要保持整个应用系统正常运行，此时可以手动设置数据长度阈值为-1，即上述的第一预设数据长度阈值，此时则永远保证运算都走软件加解密。在一种可能的实施方式中，将该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值，写入至目标配置文件；将该待处理数据在该目标处理器的指定运行状况下，所采用的指定加密算法模式对应的该第一预设数据长度阈值或该第二预设数据长度阈值，写入至该目标配置文件；将该第一预设数据长度阈值及该第二预设数据长度阈值，写入至该目标配置文件。进一步的，在获取上述的各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值、该第一预设数据长度阈值及该第二预设数据长度阈值写入至该目标配置文件，以方便后续的数据长度阈值调用。综上所述，获取各个加密算法模式，并根据目标处理器的运行状况对该各个加密算法模式分别进行模拟数据运算，以获取该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；获取目标处理器的当前运行状况、待处理数据的数据长度及该待处理数据对应的目标加密算法模式；根据该待处理数据对应的目标加密算法模式，获取该目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；将该目标数据长度阈值及该目标处理器的当前运行状况，与该待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式。上述方案将实际应用环境中的纯软件处理和硬件加速处理的特性相结合来，提高了整体数据处理的速度，由于各个加密算法模式在目标处理器的不同运行状况下分别对应有不同的数据长度阈值，可以针对不同加密算法模式的特性来去决定软件与硬件加密方式的切换，提高了其加密的灵活性；此外，还可以通过外部输入的方式对加密算法模式与数据长度阈值进行指定，实现了数据长度阈值的可配置性，大大提高了后续使用的一个拓展性，以便后期系统在遇到某些极端情况也可使用。图6是根据一示例性实施例示出的软硬结合的加密控制装置结构图，该装置包括：数据长度阈值获取模块601，用于获取各个加密算法模式，并根据目标处理器的运行状况对该各个加密算法模式分别进行模拟数据运算，以获取该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；该各个加密算法模式包括非对称加密算法模式、对称加密算法模式及摘要加密算法模式；待处理数据状态信息获取模块602，用于获取目标处理器的当前运行状况、待处理数据的数据长度及该待处理数据对应的目标加密算法模式；目标数据长度阈值获取模块603，用于根据该待处理数据对应的目标加密算法模式，获取该目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；目标加密方式确定模块604，用于将该目标数据长度阈值及该目标处理器的当前运行状况，与该待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式；该目标加密方式包括软件加密方式或硬件加密方式。在一种可能的实施方式中，该目标加密方式确定模块604，包括：当前CPU系数获取单元，用于根据该目标处理器的当前运行状况，确定该目标处理器的当前CPU系数；比较单元，用于获取该目标数据长度阈值与该目标处理器的当前CPU系数的乘积结果，并将该乘积结果与该待处理数据的数据长度进行比较；目标加密方式确定单元，用于根据该乘积结果与该待处理数据的数据长度之间的比较结果，确定目标加密方式。在一种可能的实施方式中，该当前CPU系数获取单元，还用于：根据该目标处理器的当前运行状况，确定该目标处理器的CPU使用率及CPU配置数据；根据该CPU使用率及该CPU配置数据，获取该目标处理器的当前CPU系数。在一种可能的实施方式中，该目标加密方式确定单元，还用于：当该乘积结果大于该待处理数据的数据长度时，确定目标加密方式为软件加密方式；当该乘积结果小于该待处理数据的数据长度时，确定目标加密方式为硬件加密方式。在一种可能的实施方式中，该装置还用于：获取外部输入的第一预设数据长度阈值及第二预设数据长度阈值，并根据该第一预设数据长度阈值及该第二预设数据长度阈值确定该待处理数据的目标加密方式；其中，该第一预设数据长度阈值指示该待处理数据在该目标处理器的指定运行状况下所采用的指定加密算法模式对应的目标加密方式为软件加密方式；该第二预设数据长度阈值指示该待处理数据在该目标处理器的指定运行状况下所采用的指定加密算法模式对应的目标加密方式为硬件加密方式。在一种可能的实施方式中，该装置还用于：当该硬件加密方式对应的加密设备存在故障时，将该目标处理器在故障运行状况下所采用的目标加密算法模式对应的数据长度阈值设置为第一预设数据长度阈值，以确定该目标加密方式为软件加密方式。在一种可能的实施方式中，将该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值，写入至目标配置文件；将该待处理数据在该目标处理器的指定运行状况下，所采用的指定加密算法模式对应的该第一预设数据长度阈值或该第二预设数据长度阈值，写入至该目标配置文件；将该目标处理器在故障运行状况下所采用的目标加密算法模式对应的该第一预设数据长度阈值，写入至该目标配置文件。综上所述，获取各个加密算法模式，并根据目标处理器的运行状况对该各个加密算法模式分别进行模拟数据运算，以获取该各个加密算法模式在目标处理器的不同运行状况下分别对应的数据长度阈值；获取目标处理器的当前运行状况、待处理数据的数据长度及该待处理数据对应的目标加密算法模式；根据该待处理数据对应的目标加密算法模式，获取该目标加密算法模式在目标处理器的当前运行状况下对应的目标数据长度阈值；将该目标数据长度阈值及该目标处理器的当前运行状况，与该待处理数据的数据长度进行分析比较，并根据分析比较结果确定目标加密方式。上述方案将实际应用环境中的纯软件处理和硬件加速处理的特性相结合来，提高了整体数据处理的速度，由于各个加密算法模式在目标处理器的不同运行状况下分别对应有不同的数据长度阈值，可以针对不同加密算法模式的特性来去决定软件与硬件加密方式的切换，提高了其加密的灵活性；此外，还可以通过外部输入的方式对加密算法模式与数据长度阈值进行指定，实现了数据长度阈值的可配置性，大大提高了后续使用的一个拓展性，以便后期系统在遇到某些极端情况也可使用。图7示出了本申请一示例性实施例示出的一种计算机设备的结构框图。所述计算机设备包括存储器和处理器，所述存储器用于存储计算机程序，所述计算机程序被所述处理器执行时，实现上述的一种软硬结合的加密控制方法。其中，处理器可以为中央处理器。处理器还可以为其他通用处理器、数字信号处理器、专用集成电路、现场可编程门阵列或者其他可编程逻辑器件、分立门或者晶体管逻辑器件、分立硬件组件等芯片，或者上述各类芯片的组合。存储器作为一种非暂态计算机可读存储介质，可用于存储非暂态软件程序、非暂态计算机可执行程序以及模块，如本发明实施方式中的方法对应的程序指令/模块。处理器通过运行存储在存储器中的非暂态软件程序、指令以及模块，从而执行处理器的各种功能应用以及数据处理，即实现上述方法实施方式中的方法。存储器可以包括存储程序区和存储数据区，其中，存储程序区可存储操作系统、至少一个功能所需要的应用程序；存储数据区可存储处理器所创建的数据等。此外，存储器可以包括高速随机存取存储器，还可以包括非暂态存储器，例如至少一个磁盘存储器件、闪存器件、或其他非暂态固态存储器件。在一些实施方式中，存储器可选包括相对于处理器远程设置的存储器，这些远程存储器可以通过网络连接至处理器。上述网络的实例包括但不限于互联网、企业内部网、局域网、移动通信网及其组合。本申请一个实施方式还提供一种计算机存储介质，所述计算机存储介质用于存储计算机程序，所述计算机程序被处理器执行时，实现上述的一种软硬结合的加密控制。本领域技术人员可以理解，实现上述实施方式方法中的全部或部分流程，是可以通过计算机程序来指令相关的硬件来完成，所述的程序可存储于一计算机可读取存储介质中，该程序在执行时，可包括如上述各方法的实施方式的流程。其中，所述存储介质可为磁碟、光盘、只读存储记忆体、随机存储记忆体、快闪存储器、硬盘或固态硬盘等；所述存储介质还可以包括上述种类的存储器的组合。虽然结合附图描述了本发明的实施方式，但是本领域技术人员可以在不脱离本发明的精神和范围的情况下作出各种修改和变型，这样的修改和变型均落入由所附权利要求所限定的范围之内。
