标题title
一种用于高速数据传输的错误校验方法、介质及装置
摘要abst
本申请提供一种用于高速数据传输的错误校验方法、介质及装置。方法包括：获得待处理数据，其中，数据处理流程包括先执行第一数据处理流程然后执行第二数据处理流程；对所述待处理数据执行第一数据处理流程获得第一数据处理结果；至少在获得第一数据处理结果之前，对待处理数据执行错误校验流程获得错误校验结果，并且，当错误校验结果指示不存在错误时允许执行第二数据处理流程，当指示存在错误时禁止执行第二数据处理流程。对待处理数据执行第一数据处理流程与对待处理数据执行错误校验流程至少部分地同步进行，第一数据处理流程的预期处理延时大于错误校验流程的预期处理延时。如此降低延时和确保数据传输正确性。
权利要求书clms
1.一种用于高速数据传输的错误校验方法，其特征在于，所述错误校验方法包括：获得待处理数据，其中，与所述待处理数据相关联的数据处理流程包括先执行第一数据处理流程然后对所述第一数据处理流程的执行结果执行第二数据处理流程；对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果；至少在获得所述第一数据处理结果之前，对所述待处理数据执行错误校验流程获得错误校验结果，并且，当所述错误校验结果指示所述待处理数据不存在错误时允许对所述第一数据处理结果执行所述第二数据处理流程，当所述错误校验结果指示所述待处理数据存在错误时禁止对所述第一数据处理结果执行所述第二数据处理流程，其中，对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时。2.根据权利要求1所述的错误校验方法，其特征在于，对所述待处理数据执行所述第一数据处理流程的开始时间与对所述待处理数据执行所述错误校验流程的开始时间相同。3.根据权利要求1所述的错误校验方法，其特征在于，对所述待处理数据执行所述第一数据处理流程的完成时间晚于对所述待处理数据执行所述错误校验流程的完成时间。4.根据权利要求1所述的错误校验方法，其特征在于，所述第一数据处理流程的预期处理延时减去所述错误校验流程的预期处理延时的差值大于延时裕量阈值，所述延时裕量阈值基于以下至少一项确定：数据位宽、算法复杂度、迭代次数、多项式。5.根据权利要求1所述的错误校验方法，其特征在于，所述错误校验方法还包括：当所述错误校验结果指示所述待处理数据存在错误时，对所述待处理数据进行纠错获得纠错后待处理数据，然后中断对所述待处理数据执行所述第一数据处理流程以及开始对所述纠错后待处理数据执行所述第一数据处理流程。6.根据权利要求1所述的错误校验方法，其特征在于，与所述待处理数据相关联的数据处理流程包括依次执行N个步骤中的第1步骤到第N步骤，N是大于1的正整数，其中，所述第一数据处理流程包括依次执行所述N个步骤中的第1步骤到第K步骤，K是大于1且小于N的正整数，从第1步骤到第K步骤的预期处理延时大于所述错误校验流程的预期处理延时，并且，从第1步骤到第K-1步骤的预期处理延时不大于所述错误校验流程的预期处理延时。7.根据权利要求1所述的错误校验方法，其特征在于，所述错误校验流程包括执行以下至少一项数据校验算法：循环冗余校验算法、前向纠错算法、自动重传请求算法。8.根据权利要求1所述的错误校验方法，其特征在于，所述错误校验流程包括先串行地执行多个第一错误校验算法然后并行地执行多个第二错误校验算法，所述多个第一错误校验算法中的每一个第一错误校验算法的出错概率大于所述多个第二错误校验算法各自的出错概率。9.根据权利要求8所述的错误校验方法，其特征在于，当所述多个第一错误校验算法中任一个第一错误校验算法指示所述待处理数据存在错误或者所述多个第二错误校验算法中任一个第二错误校验算法指示所述待处理数据存在错误时，所述错误校验流程指示所述待处理数据存在错误，并且，中断对所述待处理数据执行所述第一数据处理流程。10.根据权利要求8所述的错误校验方法，其特征在于，所述多个第一错误校验算法包括循环冗余校验算法和前向纠错算法，所述多个第二错误校验算法包括自动重传请求算法。11.根据权利要求1所述的错误校验方法，其特征在于，所述错误校验方法应用于错误校验装置，所述错误校验装置包括第一数据处理模块、第二数据处理模块、错误校验模块和第一输出控制模块，其中，所述第一数据处理模块用于对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果，所述第二数据处理模块用于对所述第一数据处理模块的输出执行所述第二数据处理流程，所述错误校验模块用于对所述待处理数据执行所述错误校验流程获得所述错误校验结果，所述第一输出控制模块用于根据所述错误校验模块所提供的所述错误校验结果开启或者关断所述第一数据处理模块的输出。12.根据权利要求11所述的错误校验方法，其特征在于，当所述错误校验结果指示所述待处理数据不存在错误时，所述第一输出控制模块开启所述第一数据处理模块的输出以便允许所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程；当所述错误校验结果指示所述待处理数据存在错误时，所述第一输出控制模块关断所述第一数据处理模块的输出以便禁止所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程。13.根据权利要求11所述的错误校验方法，其特征在于，所述第一输出控制模块被配置为在第一工作模式和第二工作模式之间切换，其中，所述第一输出控制模块在所述第一工作模式下默认开启所述第一数据处理模块的输出并且当所述错误校验结果指示所述待处理数据存在错误时关断所述第一数据处理模块的输出，所述第一输出控制模块在所述第二工作模式下默认关断所述第一数据处理模块的输出并且当所述错误校验结果指示所述待处理数据不存在错误时开启所述第一数据处理模块的输出。14.根据权利要求13所述的错误校验方法，其特征在于，当系统动态消耗的优先级大于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第一工作模式；当系统动态消耗的优先级小于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第二工作模式。15.根据权利要求13所述的错误校验方法，其特征在于，当所述错误校验方法应用于智能终端设备的数据传输时，所述第一输出控制模块被配置为所述第一工作模式；当所述错误校验方法应用于数据中心的数据传输时，所述第一输出控制模块被配置为所述第二工作模式。16.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质存储有计算机指令，当所述计算机指令在计算机设备上运行时使得所述计算机设备执行根据权利要求1至15中任一项所述的方法。17.一种用于高速数据传输的错误校验装置，其特征在于，所述错误校验装置包括：第一数据处理模块，用于对待处理数据执行第一数据处理流程获得第一数据处理结果，其中，与所述待处理数据相关联的数据处理流程包括先执行所述第一数据处理流程然后对所述第一数据处理流程的执行结果执行第二数据处理流程；第二数据处理模块，用于执行所述第二数据处理流程；错误校验模块，用于对所述待处理数据执行错误校验流程获得错误校验结果，其中，所述第一数据处理模块对所述待处理数据执行所述第一数据处理流程与所述错误校验模块对所述待处理数据执行所述错误校验流程至少部分地同步进行，所述第一数据处理模块执行所述第一数据处理流程的预期处理延时大于所述错误校验模块执行所述错误校验流程的预期处理延时；和第一输出控制模块，用于根据所述错误校验模块所提供的所述错误校验结果开启或者关断所述第一数据处理模块到所述第二数据处理模块的输出。18.根据权利要求17所述的错误校验装置，其特征在于，当所述错误校验结果指示所述待处理数据不存在错误时，所述第一输出控制模块开启所述第一数据处理模块到所述第二数据处理模块的输出以便允许所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程；当所述错误校验结果指示所述待处理数据存在错误时，所述第一输出控制模块关断所述第一数据处理模块到所述第二数据处理模块的输出以便禁止所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程。19.根据权利要求18所述的错误校验装置，其特征在于，所述第一输出控制模块被配置为在第一工作模式和第二工作模式之间切换，其中，所述第一输出控制模块在所述第一工作模式下默认开启所述第一数据处理模块到所述第二数据处理模块的输出并且当所述错误校验结果指示所述待处理数据存在错误时关断所述第一数据处理模块到所述第二数据处理模块的输出，所述第一输出控制模块在所述第二工作模式下默认关断所述第一数据处理模块到所述第二数据处理模块的输出并且当所述错误校验结果指示所述待处理数据不存在错误时开启所述第一数据处理模块到所述第二数据处理模块的输出。20.根据权利要求19所述的错误校验装置，其特征在于，当系统动态消耗的优先级大于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第一工作模式；当系统动态消耗的优先级小于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第二工作模式。21.根据权利要求17所述的错误校验装置，其特征在于，所述错误校验模块还用于：当所述错误校验结果指示所述待处理数据存在错误时，中断所述第一数据处理模块对所述待处理数据执行所述第一数据处理流程以及对所述待处理数据进行纠错获得纠错后待处理数据，所述错误校验装置还包括：第一数据选择模块，用于：当所述错误校验结果指示所述待处理数据存在错误时，将所述纠错后待处理数据发送给所述第一数据处理模块以便所述第一数据处理模块开始对所述纠错后待处理数据执行所述第一数据处理流程。
说明书desc
技术领域本申请涉及计算机技术领域，尤其涉及一种用于高速数据传输的错误校验方法、介质及装置。背景技术高速数据传输的应用中，例如基于串行器解串器的数据通信还有采用快捷外围组件互连标准协议的互联设备，一般在发送端产生校验信息并将校验信息与原始数据一起通过通信信道发送到接收端，然后在接收端利用校验信息检测出错的码字。随着数据传输速率和数据传输量的增加，以及编解码的算法和逻辑越来越复杂，对系统整体传输延时造成不利影响。为此，本申请提供了一种用于高速数据传输的错误校验方法、介质及装置，用于应对现有技术中的技术难题。发明内容第一方面，本申请提供了一种用于高速数据传输的错误校验方法。所述错误校验方法包括：获得待处理数据，其中，与所述待处理数据相关联的数据处理流程包括先执行第一数据处理流程然后对所述第一数据处理流程的执行结果执行第二数据处理流程；对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果；至少在获得所述第一数据处理结果之前，对所述待处理数据执行错误校验流程获得错误校验结果，并且，当所述错误校验结果指示所述待处理数据不存在错误时允许对所述第一数据处理结果执行所述第二数据处理流程，当所述错误校验结果指示所述待处理数据存在错误时禁止对所述第一数据处理结果执行所述第二数据处理流程，其中，对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时。通过本申请的第一方面，通过对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，避免了等待数据校验全部完成后才开始数据处理，从而减少了系统整体延时；并且，对于存在误码等错误的情况，通过所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时，有效地实现了及时检测错误并禁止用被检测出错误的数据进行后续流程，确保了数据传输的效率和正确性。在本申请的第一方面的一种可能的实现方式中，对所述待处理数据执行所述第一数据处理流程的开始时间与对所述待处理数据执行所述错误校验流程的开始时间相同。在本申请的第一方面的一种可能的实现方式中，对所述待处理数据执行所述第一数据处理流程的完成时间晚于对所述待处理数据执行所述错误校验流程的完成时间。在本申请的第一方面的一种可能的实现方式中，所述第一数据处理流程的预期处理延时减去所述错误校验流程的预期处理延时的差值大于延时裕量阈值，所述延时裕量阈值基于以下至少一项确定：数据位宽、算法复杂度、迭代次数、多项式。在本申请的第一方面的一种可能的实现方式中，所述错误校验方法还包括：当所述错误校验结果指示所述待处理数据存在错误时，对所述待处理数据进行纠错获得纠错后待处理数据，然后中断对所述待处理数据执行所述第一数据处理流程以及开始对所述纠错后待处理数据执行所述第一数据处理流程。在本申请的第一方面的一种可能的实现方式中，与所述待处理数据相关联的数据处理流程包括依次执行N个步骤中的第1步骤到第N步骤，N是大于1的正整数，其中，所述第一数据处理流程包括依次执行所述N个步骤中的第1步骤到第K步骤，K是大于1且小于N的正整数，从第1步骤到第K步骤的预期处理延时大于所述错误校验流程的预期处理延时，并且，从第1步骤到第K-1步骤的预期处理延时不大于所述错误校验流程的预期处理延时。在本申请的第一方面的一种可能的实现方式中，所述错误校验流程包括执行以下至少一项数据校验算法：循环冗余校验算法、前向纠错算法、自动重传请求算法。在本申请的第一方面的一种可能的实现方式中，所述错误校验流程包括先串行地执行多个第一错误校验算法然后并行地执行多个第二错误校验算法，所述多个第一错误校验算法中的每一个第一错误校验算法的出错概率大于所述多个第二错误校验算法各自的出错概率。在本申请的第一方面的一种可能的实现方式中，当所述多个第一错误校验算法中任一个第一错误校验算法指示所述待处理数据存在错误或者所述多个第二错误校验算法中任一个第二错误校验算法指示所述待处理数据存在错误时，所述错误校验流程指示所述待处理数据存在错误，并且，中断对所述待处理数据执行所述第一数据处理流程。在本申请的第一方面的一种可能的实现方式中，所述多个第一错误校验算法包括循环冗余校验算法和前向纠错算法，所述多个第二错误校验算法包括自动重传请求算法。在本申请的第一方面的一种可能的实现方式中，所述错误校验方法应用于错误校验装置，所述错误校验装置包括第一数据处理模块、第二数据处理模块、错误校验模块和第一输出控制模块，其中，所述第一数据处理模块用于对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果，所述第二数据处理模块用于对所述第一数据处理模块的输出执行所述第二数据处理流程，所述错误校验模块用于对所述待处理数据执行所述错误校验流程获得所述错误校验结果，所述第一输出控制模块用于根据所述错误校验模块所提供的所述错误校验结果开启或者关断所述第一数据处理模块的输出。在本申请的第一方面的一种可能的实现方式中，当所述错误校验结果指示所述待处理数据不存在错误时，所述第一输出控制模块开启所述第一数据处理模块的输出以便允许所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程；当所述错误校验结果指示所述待处理数据存在错误时，所述第一输出控制模块关断所述第一数据处理模块的输出以便禁止所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程。在本申请的第一方面的一种可能的实现方式中，所述第一输出控制模块被配置为在第一工作模式和第二工作模式之间切换，其中，所述第一输出控制模块在所述第一工作模式下默认开启所述第一数据处理模块的输出并且当所述错误校验结果指示所述待处理数据存在错误时关断所述第一数据处理模块的输出，所述第一输出控制模块在所述第二工作模式下默认关断所述第一数据处理模块的输出并且当所述错误校验结果指示所述待处理数据不存在错误时开启所述第一数据处理模块的输出。在本申请的第一方面的一种可能的实现方式中，当系统动态消耗的优先级大于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第一工作模式；当系统动态消耗的优先级小于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第二工作模式。在本申请的第一方面的一种可能的实现方式中，当所述错误校验方法应用于智能终端设备的数据传输时，所述第一输出控制模块被配置为所述第一工作模式；当所述错误校验方法应用于数据中心的数据传输时，所述第一输出控制模块被配置为所述第二工作模式。第二方面，本申请实施例还提供了一种计算机设备，所述计算机设备包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，所述处理器执行所述计算机程序时实现根据上述任一方面的任一种实现方式的方法。第三方面，本申请实施例还提供了一种计算机可读存储介质，所述计算机可读存储介质存储有计算机指令，当所述计算机指令在计算机设备上运行时使得所述计算机设备执行根据上述任一方面的任一种实现方式的方法。第四方面，本申请实施例还提供了一种计算机程序产品，所述计算机程序产品包括存储在计算机可读存储介质上的指令，当所述指令在计算机设备上运行时使得所述计算机设备执行根据上述任一方面的任一种实现方式的方法。第五方面，本申请提供了一种用于高速数据传输的错误校验装置。所述错误校验装置包括：第一数据处理模块，用于对待处理数据执行第一数据处理流程获得第一数据处理结果，其中，与所述待处理数据相关联的数据处理流程包括先执行所述第一数据处理流程然后对所述第一数据处理流程的执行结果执行第二数据处理流程；第二数据处理模块，用于执行所述第二数据处理流程；错误校验模块，用于对所述待处理数据执行错误校验流程获得错误校验结果，其中，所述第一数据处理模块对所述待处理数据执行所述第一数据处理流程与所述错误校验模块对所述待处理数据执行所述错误校验流程至少部分地同步进行，所述第一数据处理模块执行所述第一数据处理流程的预期处理延时大于所述错误校验模块执行所述错误校验流程的预期处理延时；和第一输出控制模块，用于根据所述错误校验模块所提供的所述错误校验结果开启或者关断所述第一数据处理模块到所述第二数据处理模块的输出。在本申请的第五方面的一种可能的实现方式中，当所述错误校验结果指示所述待处理数据不存在错误时，所述第一输出控制模块开启所述第一数据处理模块到所述第二数据处理模块的输出以便允许所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程；当所述错误校验结果指示所述待处理数据存在错误时，所述第一输出控制模块关断所述第一数据处理模块到所述第二数据处理模块的输出以便禁止所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程。在本申请的第五方面的一种可能的实现方式中，所述第一输出控制模块被配置为在第一工作模式和第二工作模式之间切换，其中，所述第一输出控制模块在所述第一工作模式下默认开启所述第一数据处理模块到所述第二数据处理模块的输出并且当所述错误校验结果指示所述待处理数据存在错误时关断所述第一数据处理模块到所述第二数据处理模块的输出，所述第一输出控制模块在所述第二工作模式下默认关断所述第一数据处理模块到所述第二数据处理模块的输出并且当所述错误校验结果指示所述待处理数据不存在错误时开启所述第一数据处理模块到所述第二数据处理模块的输出。在本申请的第五方面的一种可能的实现方式中，当系统动态消耗的优先级大于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第一工作模式；当系统动态消耗的优先级小于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第二工作模式。在本申请的第五方面的一种可能的实现方式中，所述错误校验模块还用于：当所述错误校验结果指示所述待处理数据存在错误时，中断所述第一数据处理模块对所述待处理数据执行所述第一数据处理流程以及对所述待处理数据进行纠错获得纠错后待处理数据，所述错误校验装置还包括：第一数据选择模块，用于：当所述错误校验结果指示所述待处理数据存在错误时，将所述纠错后待处理数据发送给所述第一数据处理模块以便所述第一数据处理模块开始对所述纠错后待处理数据执行所述第一数据处理流程。附图说明为了更清楚地说明本申请实施例技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为高速数据传输中进行数据校验的应用场景；图2为本申请实施例提供的一种用于高速数据传输的错误校验方法的流程示意图；图3为本申请实施例提供的一种用于高速数据传输的错误校验装置的示意图；图4为本申请实施例提供的图3所示的错误校验装置的另一种实施方式的示意图；图5为本申请实施例提供的一种计算设备的结构示意图。具体实施方式下面将结合附图对本申请实施例作进一步地详细描述。应当理解的是，在本申请的描述中，“至少一个”指一个或一个以上，“多个”指两个或两个以上。另外，“第一”、“第二”等词汇，除非另有说明，否则仅用于区分描述的目的，而不能理解为指示或暗示相对重要性，也不能理解为指示或暗示顺序。图1为高速数据传输中进行数据校验的应用场景。如图1所示，从发送端发送目标报文到接收端的基本流程包括：在步骤S102，发送端对原始数据进行编码产生校验信息；在步骤S104，发送端将校验信息和原始数据一起通过通信信道发送；在步骤S106，接收端对接收到的校验信息进行解码；在步骤S108，接收端根据解码得到的校验信息检测接收到的数据并纠错。这里，发送端和接收端分别需要进行用于错误校验的编码和解码。例如，发送端和接收端可以是基于串行器解串器进行高速数据传输的双方。又例如，发送端和接收端可以是采用快捷外围组件互连标准协议的互联设备。其中，在发送端和接收端之间用于数据传输的通信信道或者说通信链路，可能存在如信道噪声、损坏、失真等因素，这些可能导致通过通信信道传输的报文、数据等出现误码。为了确保数据传输的效率和正确性，发送端会对原始数据进行编码，产生校验信息，将校验信息与原始数据一起通过通信信道发送。接收端通过对应的解码模块，根据这些校验信息来检测并且纠正出错的码字。随着通信技术发展，传输速率和传输数据量日益增大，出现了更复杂的多样化的各种数据校验算法，而且用于错误校验的编码和解码模块的逻辑越来越复杂，处理延时也越来越大。实际应用中也存在需要采用多级错误校验机制的情况，例如可能需要考虑多种通信协议、互联标准的需求，而在接收端需要为此提供响应的解码模块并执行解码运算，将会大大增加系统的传输延时。下面结合本申请具体实施例和附图，详细说明本申请实施例提供的一种用于高速数据传输的错误校验方法、介质及装置如何在确保数据传输的效率和正确性同时还控制了在接收端进行错误校验对系统传输延时造成的影响。图2为本申请实施例提供的一种用于高速数据传输的错误校验方法的流程示意图。如图2所示，错误校验方法包括以下步骤。步骤S210：获得待处理数据，其中，与所述待处理数据相关联的数据处理流程包括先执行第一数据处理流程然后对所述第一数据处理流程的执行结果执行第二数据处理流程。步骤S220：对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果。步骤S230：至少在获得所述第一数据处理结果之前，对所述待处理数据执行错误校验流程获得错误校验结果，并且，当所述错误校验结果指示所述待处理数据不存在错误时允许对所述第一数据处理结果执行所述第二数据处理流程，当所述错误校验结果指示所述待处理数据存在错误时禁止对所述第一数据处理结果执行所述第二数据处理流程，其中，对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时。参阅上述各个步骤，待处理数据可以是高速数据传输的应用中，在接收端接收到的网络报文、网络数据等。发送端在发送时将用于数据校验的校验信息和原始数据一起发送给接收端。例如，发送端和接收端可以是基于串行器解串器进行高速数据传输的双方。又例如，发送端和接收端可以是采用快捷外围组件互连标准协议的互联设备。在数据传输应用中，如SERDES系统或者晶片之间接口互联，在发送端采用数据编码方案生成校验码用于校验数据传输或者数据保存中可能发生的错误，将校验码作为额外信息与数据一起发送，然后在接收端采用数据解码方案进行检错纠错。这样可以控制传输错误并且对连同数据发送额外的信息进行错误恢复从而降低比特误码率。数据校验算法的示例可以是如循环冗余校验，前向纠错，自动重传请求等。在接收端执行与所述待处理数据相关联的数据处理流程，例如对网络报文数据进行流匹配、流量控制等，又例如执行特定的运算式、算法等。如上所述，在数据传输过程中，可能因为信道噪声、损坏、失真等因素而导致在步骤S210获得的待处理数据中存在误码，为了确保与所述待处理数据相关联的数据处理流程能够正确执行，需要结合校验信息进行检错纠错。在对待处理数据进行检错纠错方面，需要采用与发送端使用的编码方案所对应的解码方案，而且可能需要采用多级错误校验机制，包括考虑多种通信协议、互联标准的需求。为此，在步骤S210获得待处理数据之后，接着，在步骤S220，对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果。这里，所述第一数据处理流程是与所述待处理数据相关联的数据处理流程的一部分，并且，与所述待处理数据相关联的数据处理流程包括先执行第一数据处理流程然后对所述第一数据处理流程的执行结果执行第二数据处理流程。因此，在步骤S220执行的所述第一数据处理流程是与所述待处理数据相关联的数据处理流程中的最初被执行的一部分。在一种可能的实施方式中，可以通过对与所述待处理数据相关联的数据处理流程进行解析，例如对代码、逻辑、算法、模型等进行解析，从中确定最初被执行的一部分作为在步骤S220执行的所述第一数据处理流程。在另一种可能的实施方式中，与所述待处理数据相关联的数据处理流程可以是标准化流程或者具有参考流程。例如，在高速数据传输的有关应用中，如SERDES系统，晶片间接口互联，数据中心，还有智能网卡等，一般采用标准化或者规范化的数据处理流程来执行如流表匹配、图像处理、数据压缩等操作。因此可以从这些标准化流程化或者参考流程中便利地确定最初被执行的一部分作为在步骤S220执行的所述第一数据处理流程。在步骤S220，对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果。与步骤S220相关联的是步骤S230，其中，在步骤S230，至少在获得所述第一数据处理结果之前，对所述待处理数据执行错误校验流程获得错误校验结果，并且，当所述错误校验结果指示所述待处理数据不存在错误时允许对所述第一数据处理结果执行所述第二数据处理流程，当所述错误校验结果指示所述待处理数据存在错误时禁止对所述第一数据处理结果执行所述第二数据处理流程。其中，对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时。应当理解的是，在步骤S220的操作，也即对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果，与在步骤S230的操作，也即对所述待处理数据执行错误校验流程获得错误校验结果，这两个操作至少部分地同步进行。因此，并不是在步骤S220的操作全部完成之后才开始步骤S230的操作；而是至少部分地同步进行步骤S220的操作和步骤S230的操作。在一些示例中，在同一时间或者几乎同时开始对所述待处理数据执行所述第一数据处理流程以及开始对所述待处理数据执行错误校验流程。例如，可以将待处理数据同时输入至用于对所述待处理数据执行所述第一数据处理流程的模块和用于对所述待处理数据执行错误校验流程的另一模块。在一些示例中，对所述待处理数据执行所述第一数据处理流程的开始时间可以与对所述待处理数据执行错误校验流程的开始时间相同，或者几乎相同。对所述待处理数据执行错误校验流程获得错误校验结果，意味着可以采用任意合适的错误校验机制，例如多级错误校验机制对所述待处理数据进行数据校验。基于对所述待处理数据执行错误校验流程获得的错误校验结果，可以判断所述待处理数据中是否存在错误例如误码等。当所述错误校验结果指示所述待处理数据不存在错误时允许对所述第一数据处理结果执行所述第二数据处理流程，也就是可以继续进行与所述待处理数据相关联的数据处理流程中相对于第一数据处理流程的其它部分。当所述错误校验结果指示所述待处理数据存在错误时禁止对所述第一数据处理结果执行所述第二数据处理流程，这样就避免了被检测出存在错误的待处理数据被用于与所述待处理数据相关联的数据处理流程中相对于第一数据处理流程的其它部分。如此，一方面，基于所述错误校验结果所指示的所述待处理数据中是否存在错误，可以确保发现误码时不将待处理数据用于后续处理，从而确保了数据传输的效率和正确性；另一方面，对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，这意味着不用等待对所述待处理数据执行所述错误校验流程全部完成就可以开始对所述待处理数据执行所述第一数据处理流程，在一些示例中可以在开始对所述待处理数据执行所述错误校验流程的同时就开始对所述待处理数据执行所述第一数据处理流程。考虑到在接收端进行数据校验发现错误的概率一般是较低的，也就是说有较高的概率对接收到的数据进行错误校验的结果是不存在错误，而一旦发现接收到的数据中存在错误则需要进行纠错并用纠错后的数据重头开始执行第一数据处理流程，因此通过对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，可以有利于减少系统整体延时。进一步地，所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时。这里，针对特定的待处理数据，第一数据处理流程和错误校验流程各自的实际处理延时是受到数据位宽、算法、逻辑等因素影响。但是，可以事先确定所述第一数据处理流程的预期处理延时，或者说确定执行所述第一数据处理流程所导致的处理延时的变化范围，例如最大可能处理延时和最小可能处理延时。类似地，可以事先确定所述错误校验流程的预期处理延时，或者说确定执行所述错误校验流程所导致的处理延时的变化范围，例如最大可能处理延时和最小可能处理延时。在一些示例中，可以将所述第一数据处理流程的最小可能处理延时作为所述第一数据处理流程的预期处理延时，将所述错误校验流程的最大可能处理延时作为所述错误校验流程的预期处理延时，因此，当满足所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时这一关系时，这意味着所述第一数据处理流程的最小可能处理延时大于所述错误校验流程的最大可能处理延时。在另一些示例中，可以用数学期望、中位数或者任意合适的数学模型、算法来计算第一数据处理流程和错误校验流程各自的预期处理延时。当满足所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时这一关系时，结合上述的对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，这意味着在对所述待处理数据执行所述第一数据处理流程的过程中或者说全部执行完成之前，可能已经完成了对所述待处理数据执行所述错误校验流程。在大多数情况下，也就是有较高的概率下，所述错误校验结果指示不存在错误，这样就避免了因为等待所述错误校验流程全部完成后再开始所述第一数据处理流程所导致的延时；而在较低的概率下，所述错误校验结果指示存在错误，这时一般还处在对所述待处理数据执行所述第一数据处理流程的过程中，可以中断对所述待处理数据执行所述第一数据处理流程并用纠错后的数据重新开始执行所述第一数据处理流程，为此损失的数据处理时间就是从开始对所述待处理数据执行所述第一数据处理流程直到对所述待处理数据执行错误校验流程获得错误校验结果为止。而通过事先确定所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时，这样就使得在对所述待处理数据执行错误校验流程获得错误校验结果的时候，一般还没有全部执行完成所述第一数据处理流程，因此可以及时地禁止对所述第一数据处理结果执行所述第二数据处理流程，也就避免了被检测出存在错误的待处理数据被用于与所述待处理数据相关联的数据处理流程中相对于第一数据处理流程的其它部分。换句话说，当满足所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时这一关系时，结合对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行这一特性，一般情况下，在执行完成所述第一数据处理流程之前，就已经执行完成所述错误校验流程，从而可以选择性地允许对所述第一数据处理结果执行所述第二数据处理流程或者禁止对所述第一数据处理结果执行所述第二数据处理流程。图2所示的用于高速数据传输的错误校验方法，通过对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行，避免了等待数据校验全部完成后才开始数据处理，从而减少了系统整体延时；并且，对于存在误码等错误的情况，通过所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时，有效地实现了及时检测错误并禁止用被检测出错误的数据进行后续流程，确保了数据传输的效率和正确性。在一种可能的实施方式中，对所述待处理数据执行所述第一数据处理流程的开始时间与对所述待处理数据执行所述错误校验流程的开始时间相同。上面提到，所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时。因此，当对所述待处理数据执行所述第一数据处理流程的开始时间与对所述待处理数据执行所述错误校验流程的开始时间相同，这意味着同步开始对所述待处理数据执行所述第一数据处理流程和开始对所述待处理数据执行所述错误校验流程，因此也就意味着，在执行完成所述第一数据处理流程之前，就已经执行完成所述错误校验流程，从而可以选择性地允许对所述第一数据处理结果执行所述第二数据处理流程或者禁止对所述第一数据处理结果执行所述第二数据处理流程。如此，通过同步开始对所述待处理数据执行所述第一数据处理流程和开始对所述待处理数据执行所述错误校验流程，避免了等待数据校验全部完成后才开始数据处理，从而减少了系统整体延时；并且，对于存在误码等错误的情况，有效地实现了及时检测错误并禁止用被检测出错误的数据进行后续流程，确保了数据传输的效率和正确性。在一种可能的实施方式中，对所述待处理数据执行所述第一数据处理流程的完成时间晚于对所述待处理数据执行所述错误校验流程的完成时间。在执行完成所述第一数据处理流程之前，就已经执行完成所述错误校验流程，从而可以选择性地允许对所述第一数据处理结果执行所述第二数据处理流程或者禁止对所述第一数据处理结果执行所述第二数据处理流程。如此，有效地实现了及时检测错误并禁止用被检测出错误的数据进行后续流程，确保了数据传输的效率和正确性。在一种可能的实施方式中，所述第一数据处理流程的预期处理延时减去所述错误校验流程的预期处理延时的差值大于延时裕量阈值，所述延时裕量阈值基于以下至少一项确定：数据位宽、算法复杂度、迭代次数、多项式。这里，延时裕量阈值作为评估是否满足所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时这一关系的量化指标，可以考虑实际应用中需要采用的各种可能的错误校验机制还有其它可能影响处理延时的因素。对处理延时的估计主要根据要处理的数据特点以及数据校验算法确定。因此，所述延时裕量阈值基于以下至少一项确定：数据位宽、算法复杂度、迭代次数、多项式。在一种可能的实施方式中，所述错误校验方法还包括：当所述错误校验结果指示所述待处理数据存在错误时，对所述待处理数据进行纠错获得纠错后待处理数据，然后中断对所述待处理数据执行所述第一数据处理流程以及开始对所述纠错后待处理数据执行所述第一数据处理流程。当满足所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时这一关系时，结合对所述待处理数据执行所述第一数据处理流程与对所述待处理数据执行所述错误校验流程至少部分地同步进行这一特性，一般情况下，在执行完成所述第一数据处理流程之前，就已经执行完成所述错误校验流程，从而可以选择性地允许对所述第一数据处理结果执行所述第二数据处理流程或者禁止对所述第一数据处理结果执行所述第二数据处理流程。如此，所述错误校验结果指示存在错误，这时一般还处在对所述待处理数据执行所述第一数据处理流程的过程中，可以中断对所述待处理数据执行所述第一数据处理流程并用纠错后的数据重新开始执行所述第一数据处理流程，为此损失的数据处理时间就是从开始对所述待处理数据执行所述第一数据处理流程直到对所述待处理数据执行错误校验流程获得错误校验结果为止。在一些示例中，可以同步开始对所述待处理数据执行所述第一数据处理流程和开始对所述待处理数据执行所述错误校验流程，因此通过如数据使能开关、数据使能控制器等可以便利地实现中断对所述待处理数据执行所述第一数据处理流程，进而可以通过数据选择器等用纠错后的数据重启执行所述第一数据处理流程，这样意味着只需要用非常有限的逻辑和有限的动态功耗，就可以实现检错纠错。而且，如上所述，在大多数情况下，也就是有较高的概率下，所述错误校验结果指示不存在错误，这样就避免了因为等待所述错误校验流程全部完成后再开始所述第一数据处理流程所导致的延时。因此，通过将检错操作也就是对所述待处理数据执行错误校验流程获得错误校验结果的操作与所述第一数据处理流程至少部分地同步进行，可以降低系统整体延时，以及通过纠错操作来中断所述第一数据处理流程的执行，实现了及时纠错。在一种可能的实施方式中，与所述待处理数据相关联的数据处理流程包括依次执行N个步骤中的第1步骤到第N步骤，N是大于1的正整数，其中，所述第一数据处理流程包括依次执行所述N个步骤中的第1步骤到第K步骤，K是大于1且小于N的正整数，从第1步骤到第K步骤的预期处理延时大于所述错误校验流程的预期处理延时，并且，从第1步骤到第K-1步骤的预期处理延时不大于所述错误校验流程的预期处理延时。应当理解的是，对于所述第一数据处理流程以及用于执行所述第一数据处理流程的模块的划分，需要满足所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时这一要求，也就是需要保证足够的延时裕量。并且，在能提供足够的延时裕量的前提下，应尽量简化所述第一数据处理流程的处理细节，例如包含越少的功能模块或者步骤，这样有助于提早检测出错误并进行纠错，而且重启所述第一数据处理流程的损耗也较小。为此，可以通过将与所述待处理数据相关联的数据处理流程拆分成依次执行第1步骤到第N步骤，然后基于各个步骤的预期处理延时，确定所述第一数据处理流程包括依次执行第1步骤到第K步骤。其中，从第1步骤到第K步骤的预期处理延时大于所述错误校验流程的预期处理延时，并且，从第1步骤到第K-1步骤的预期处理延时不大于所述错误校验流程的预期处理延时。这样，实现了简化所述第一数据处理流程的处理细节，有助于提早检测出错误并进行纠错，而且重启所述第一数据处理流程的损耗也较小。在一种可能的实施方式中，所述错误校验流程包括执行以下至少一项数据校验算法：循环冗余校验算法，前向纠错算法、自动重传请求算法。一般来说，循环冗余校验算法和前向纠错算法存在较高的检测出错误的概率，自动重传请求算法存在较低的检测出错误的概率。在一种可能的实施方式中，所述错误校验流程包括先串行地执行多个第一错误校验算法然后并行地执行多个第二错误校验算法，所述多个第一错误校验算法中的每一个第一错误校验算法的出错概率大于所述多个第二错误校验算法各自的出错概率。在一些实施例中，当所述多个第一错误校验算法中任一个第一错误校验算法指示所述待处理数据存在错误或者所述多个第二错误校验算法中任一个第二错误校验算法指示所述待处理数据存在错误时，所述错误校验流程指示所述待处理数据存在错误，并且，中断对所述待处理数据执行所述第一数据处理流程。在一些实施例中，所述多个第一错误校验算法包括循环冗余校验算法和前向纠错算法，所述多个第二错误校验算法包括自动重传请求算法。对于存在多种错误校验机制，例如多级错误校验机制的情况如多种通信协议、互联标准等，可以用串并行的方式对多种错误校验算法进行组合，并且按照出错概率进行分类，将出错概率较低的错误校验算法采用多路并行的方式来提升速度，而对于出错概率较高的错误校验算法采用串行的方式来提高对每个错误校验算法的实际控制。具体地，串行地执行多个第一错误校验算法然后并行地执行多个第二错误校验算法，所述多个第一错误校验算法中的每一个第一错误校验算法的出错概率大于所述多个第二错误校验算法各自的出错概率。如此，可以对多个第一错误校验算法分别施加控制，例如建立单独的模块和控制逻辑，而对于多个第二错误校验算法则可以通过简化的逻辑并行地执行。进一步地，当所述多个第一错误校验算法中任一个第一错误校验算法指示所述待处理数据存在错误或者所述多个第二错误校验算法中任一个第二错误校验算法指示所述待处理数据存在错误时，则意味着待处理数据中存在至少一个错误，或者说至少一种错误校验机制检测出待处理数据存在错误，这样可以及时地中断对所述待处理数据执行所述第一数据处理流程，有助于整体上降低错误校验的延时以及确保及时发现错误。在一种可能的实施方式中，所述错误校验方法应用于错误校验装置，所述错误校验装置包括第一数据处理模块、第二数据处理模块、错误校验模块和第一输出控制模块，其中，所述第一数据处理模块用于对所述待处理数据执行所述第一数据处理流程获得所述第一数据处理结果，所述第二数据处理模块用于对所述第一数据处理模块的输出执行所述第二数据处理流程，所述错误校验模块用于对所述待处理数据执行所述错误校验流程获得所述错误校验结果，所述第一输出控制模块用于根据所述错误校验模块所提供的所述错误校验结果开启或者关断所述第一数据处理模块的输出。如此，通过上述模块设计，如所述第一输出控制模块，对整体数据流施加控制，通过开启或者关断所述第一数据处理模块的输出，避免了被检测出错误的数据用于后续流程，确保了数据传输的正确性。在一种可能的实施方式中，当所述错误校验结果指示所述待处理数据不存在错误时，所述第一输出控制模块开启所述第一数据处理模块的输出以便允许所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程；当所述错误校验结果指示所述待处理数据存在错误时，所述第一输出控制模块关断所述第一数据处理模块的输出以便禁止所述第二数据处理模块对所述第一数据处理结果执行所述第二数据处理流程。如此，避免了被检测出错误的数据用于后续流程，确保了数据传输的正确性。在一种可能的实施方式中，所述第一输出控制模块被配置为在第一工作模式和第二工作模式 之间切换，其中，所述第一输出控制模块在所述第一工作模式下默认开启所述第一数据处理模块的输出并且当所述错误校验结果指示所述待处理数据存在错误时关断所述第一数据处理模块的输出，所述第一输出控制模块在所述第二工作模式下默认关断所述第一数据处理模块的输出并且当所述错误校验结果指示所述待处理数据不存在错误时开启所述第一数据处理模块的输出。这里，结合上述的模块设计，包括所述第一输出控制模块开启或者关断所述第一数据处理模块的输出，从而对整体数据流施加控制。上面提到，所述第一数据处理流程的预期处理延时大于所述错误校验流程的预期处理延时。当发生异常情况时，例如器件故障、老化等，可能导致所述错误校验流程的实质处理延时显著大于所述错误校验流程的预期处理延时，这样就可能发生所述错误校验流程的实质处理延时要大于所述第一数据处理流程的实质处理延时。为此，可以通过所述第一输出控制模块的第一工作模式和第二工作模式来进行优化。具体地，一方面，如果第一输出控制模块在第一工作模式下，也叫常开模式，这意味着，默认开启且当发现存在错误时才会关断。考虑到发生错误的概率较低，因此第一输出控制模块关断的次数较少，可以减少动态功耗。面对异常情况时，因为所述第一输出控制模块在所述第一工作模式下默认开启所述第一数据处理模块的输出，可能降低系统鲁棒性。另一方面，如果第一输出控制模块在第二工作模式下，也叫常关模式，这意味着，默认关闭且当发现不存在错误时才会开启。面对异常情况时，因为所述第一输出控制模块在所述第二工作模式下默认关断，可以提升系统鲁棒性，但是第一输出控制模块关断的次数较多，可能增加动态功耗。因此，通过所述第一输出控制模块的第一工作模式和第二工作模式之间的配置，可以结合系统需求进行优化，有助于克服异常情况。在一些实施例中，当系统动态消耗的优先级大于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第一工作模式；当系统动态消耗的优先级小于系统鲁棒性的优先级时，所述第一输出控制模块被配置为所述第二工作模式。在一些实施例中，当所述错误校验方法应用于智能终端设备的数据传输时，所述第一输出控制模块被配置为所述第一工作模式；当所述错误校验方法应用于数据中心的数据传输时，所述第一输出控制模块被配置为所述第二工作模式。如此，实现了根据系统需求和应用场景来灵活配置所述第一输出控制模块。对于晶体管集成度高、体积小、对散热要求高的系统，可以优先考虑降低动态功耗，例如手机、车载芯片等智能终端设备，因此所述第一输出控制模块被配置为所述第一工作模式。对于数据处理模块等对稳定性要求高的系统，例如大数据中心，可以优先考虑鲁棒性，因此所述第一输出控制模块被配置为所述第二工作模式。图3为本申请实施例提供的一种用于高速数据传输的错误校验装置的示意图。如图3所示，所述错误校验装置包括：第一数据处理模块310，用于对待处理数据302执行第一数据处理流程获得第一数据处理结果，其中，与所述待处理数据302相关联的数据处理流程包括先执行所述第一数据处理流程然后对所述第一数据处理流程的执行结果执行第二数据处理流程；第二数据处理模块320，用于执行所述第二数据处理流程；错误校验模块330，用于对所述待处理数据302执行错误校验流程获得错误校验结果，其中，所述第一数据处理模块310对所述待处理数据302执行所述第一数据处理流程与所述错误校验模块330对所述待处理数据302执行所述错误校验流程至少部分地同步进行，所述第一数据处理模块310执行所述第一数据处理流程的预期处理延时大于所述错误校验模块330执行所述错误校验流程的预期处理延时；和第一输出控制模块340，用于根据所述错误校验模块330所提供的所述错误校验结果开启或者关断所述第一数据处理模块310到所述第二数据处理模块320的输出。图3所示的用于高速数据传输的错误校验装置，通过所述第一数据处理模块310对所述待处理数据302执行所述第一数据处理流程与所述错误校验模块330对所述待处理数据302执行所述错误校验流程至少部分地同步进行，避免了等待数据校验全部完成后才开始数据处理，从而减少了系统整体延时；并且，对于存在误码等错误的情况，通过所述第一数据处理模块310执行所述第一数据处理流程的预期处理延时大于所述错误校验模块330执行所述错误校验流程的预期处理延时，以及第一输出控制模块340用于根据所述错误校验模块330所提供的所述错误校验结果开启或者关断所述第一数据处理模块310到所述第二数据处理模块320的输出，有效地实现了及时检测错误并禁止用被检测出错误的数据进行后续流程，确保了数据传输的效率和正确性。在一种可能的实施方式中，当所述错误校验结果指示所述待处理数据不存在错误时，所述第一输出控制模块340开启所述第一数据处理模块310到所述第二数据处理模块320的输出以便允许所述第二数据处理模块320对所述第一数据处理结果执行所述第二数据处理流程；当所述错误校验结果指示所述待处理数据存在错误时，所述第一输出控制模块340关断所述第一数据处理模块310到所述第二数据处理模块320的输出以便禁止所述第二数据处理模块320对所述第一数据处理结果执行所述第二数据处理流程。如此，避免了被检测出错误的数据用于后续流程，确保了数据传输的正确性。在一种可能的实施方式中，所述第一输出控制模块340被配置为在第一工作模式和第二工作模式之间切换，其中，所述第一输出控制模块340在所述第一工作模式下默认开启所述第一数据处理模块310到所述第二数据处理模块320的输出并且当所述错误校验结果指示所述待处理数据存在错误时关断所述第一数据处理模块310到所述第二数据处理模块320的输出，所述第一输出控制模块340在所述第二工作模式下默认关断所述第一数据处理模块310到所述第二数据处理模块320的输出并且当所述错误校验结果指示所述待处理数据不存在错误时开启所述第一数据处理模块310到所述第二数据处理模块320的输出。如此，实现了根据系统需求和应用场景来灵活配置所述第一输出控制模块340。在一种可能的实施方式中，当系统动态消耗的优先级大于系统鲁棒性的优先级时，所述第一输出控制模块340被配置为所述第一工作模式；当系统动态消耗的优先级小于系统鲁棒性的优先级时，所述第一输出控制模块340被配置为所述第二工作模式。如此，实现了根据系统需求和应用场景来灵活配置所述第一输出控制模块340。图4为本申请实施例提供的图3所示的错误校验装置的另一种实施方式的示意图。图4所示的错误校验装置在图3所示的错误校验装置的基础上，所述错误校验模块330还用于：当所述错误校验结果指示所述待处理数据302存在错误时，中断所述第一数据处理模块310对所述待处理数据302执行所述第一数据处理流程以及对所述待处理数据302进行纠错获得纠错后待处理数据。图4所示的错误校验装置还包括：第一数据选择模块350，用于：当所述错误校验结果指示所述待处理数据302存在错误时，将所述纠错后待处理数据发送给所述第一数据处理模块310以便所述第一数据处理模块310开始对所述纠错后待处理数据执行所述第一数据处理流程。如此，所述错误校验结果指示存在错误，这时一般还处在对所述待处理数据执行所述第一数据处理流程的过程中，可以中断对所述待处理数据执行所述第一数据处理流程并用纠错后的数据重新开始执行所述第一数据处理流程，为此损失的数据处理时间就是从开始对所述待处理数据执行所述第一数据处理流程直到对所述待处理数据执行错误校验流程获得错误校验结果为止。在一些示例中，可以同步开始对所述待处理数据执行所述第一数据处理流程和开始对所述待处理数据执行所述错误校验流程，因此通过如数据使能开关、数据使能控制器等可以便利地实现中断对所述待处理数据执行所述第一数据处理流程，进而可以通过数据选择器等用纠错后的数据重启执行所述第一数据处理流程，这样意味着只需要用非常有限的逻辑和有限的动态功耗，就可以实现检错纠错。而且，如上所述，在大多数情况下，也就是有较高的概率下，所述错误校验结果指示不存在错误，这样就避免了因为等待所述错误校验流程全部完成后再开始所述第一数据处理流程所导致的延时。因此，通过将检错操作也就是对所述待处理数据执行错误校验流程获得错误校验结果的操作与所述第一数据处理流程至少部分地同步进行，可以降低系统整体延时，以及通过纠错操作来中断所述第一数据处理流程的执行，实现了及时纠错。图5是本申请实施例提供的一种计算设备的结构示意图，该计算设备500包括：一个或者多个处理器510、通信接口520以及存储器530。所述处理器510、通信接口520以及存储器530通过总线540相互连接。可选地，该计算设备500还可以包括输入/输出接口550，输入/输出接口550连接有输入/输出设备，用于接收用户设置的参数等。该计算设备500能够用于实现上述的本申请实施例中设备实施例或者系统实施例的部分或者全部功能；处理器510还能够用于实现上述的本申请实施例中方法实施例的部分或者全部操作步骤。例如，该计算设备500执行各种操作的具体实现可参照上述实施例中的具体细节，如处理器510用于执行上述方法实施例中部分或者全部步骤或者上述方法实施例中的部分或者全部操作。再例如，本申请实施例中，计算设备500可用于实现上述装置实施例中一个或者多个部件的部分或者全部功能，此外通信接口520具体可用于为了实现这些装置、部件的功能所必须的通讯功能等，以及处理器510具体可用于为了实现这些装置、部件的功能所必须的处理功能等。应当理解的是，图5的计算设备500可以包括一个或者多个处理器510，并且多个处理器510可以按照并行化连接方式、串行化连接方式、串并行连接方式或者任意连接方式来协同提供处理能力，或者多个处理器510可以构成处理器序列或者处理器阵列，或者多个处理器510之间可以分成主处理器和辅助处理器，或者多个处理器510之间可以具有不同的架构如采用异构计算架构。另外，图5所示的计算设备500，相关的结构性描述及功能性描述是示例性且非限制性的。在一些示例性实施例中，计算设备500可以包括比图5所示的更多或更少的部件，或者组合某些部件，或者拆分某些部件，或者具有不同的部件布置。处理器510可以有多种具体实现形式，例如处理器510可以包括中央处理器、图形处理器、神经网络处理器、张量处理器或数据处理器等一种或多种的组合，本申请实施例不做具体限定。处理器510还可以是单核处理器或多核处理器。处理器510可以由CPU和硬件芯片的组合。上述硬件芯片可以是专用集成电路，可编程逻辑器件或其组合。上述PLD可以是复杂可编程逻辑器件，现场可编程逻辑门阵列，通用阵列逻辑或其任意组合。处理器510也可以单独采用内置处理逻辑的逻辑器件来实现，例如FPGA或数字信号处理器等。通信接口520可以为有线接口或无线接口，用于与其他模块或设备进行通信，有线接口可以是以太接口、局域互联网络等，无线接口可以是蜂窝网络接口或使用无线局域网接口等。存储器530可以是非易失性存储器，例如，只读存储器、可编程只读存储器、可擦除可编程只读存储器、电可擦除可编程只读存储器或闪存。存储器530也可以是易失性存储器，易失性存储器可以是随机存取存储器，其用作外部高速缓存。通过示例性但不是限制性说明，许多形式的RAM可用，例如静态随机存取存储器、动态随机存取存储器、同步动态随机存取存储器、双倍数据速率同步动态随机存取存储器、增强型同步动态随机存取存储器、同步连接动态随机存取存储器和直接内存总线随机存取存储器。存储器530也可用于存储程序代码和数据，以便于处理器510调用存储器530中存储的程序代码执行上述方法实施例中的部分或者全部操作步骤，或者执行上述设备实施例中的相应功能。此外，计算设备500可能包含相比于图5展示的更多或者更少的组件，或者有不同的组件配置方式。总线540可以是快捷外围部件互连标准总线，或扩展工业标准结构总线、统一总线、计算机快速链接、缓存一致互联协议等。总线540可以分为地址总线、数据总线、控制总线等。总线540除包括数据总线之外，还可以包括电源总线、控制总线和状态信号总线等。但是为了清楚说明起见，图5中仅用一条粗线表示，但并不表示仅有一根总线或一种类型的总线。本申请实施例提供的方法和设备是基于同一发明构思的，由于方法及设备解决问题的原理相似，因此方法与设备的实施例、实施方式、示例或实现方式可以相互参见，其中重复之处不再赘述。本申请实施例还提供一种系统，该系统包括多个计算设备，每个计算设备的结构可以参照上述所描述的计算设备的结构。该系统可实现的功能或者操作可以参照上述方法实施例中的具体实现步骤和/或上述装置实施例中所描述的具体功能，在此不再赘述。本申请实施例还提供一种计算机可读存储介质，所述计算机可读存储介质中存储有计算机指令，当所述计算机指令在计算机设备上运行时可以实现上述方法实施例中的方法步骤。所述计算机可读存储介质的处理器在执行上述方法步骤的具体实现可参照上述方法实施例中所描述的具体操作和/或上述装置实施例中所描述的具体功能，在此不再赘述。本领域内的技术人员应明白，本申请的实施例可提供为方法、系统、或计算机程序产品。本申请可采用完全硬件实施例、完全软件实施例、或结合软件和硬件方面的实施例的形式。本申请实施例可以全部或部分地通过软件、硬件、固件或其他任意组合来实现。当使用软件实现时，上述实施例可以全部或部分地以计算机程序产品的形式实现。本申请可采用在一个或多个其中包含有计算机可用程序代码的计算机可用存储介质上实施的计算机程序产品的形式。所述计算机程序产品包括一个或多个计算机指令。在计算机上加载或执行所述计算机程序指令时，全部或部分地产生按照本申请实施例所述的流程或功能。所述计算机可以为通用计算机、专用计算机、计算机网络、或者其他可编程装置。计算机指令可以存储在计算机可读存储介质中，或者从一个计算机可读存储介质向另一个计算机可读存储介质传输，例如，计算机指令可以从一个网站站点、计算机、服务器或数据中心通过有线或无线方式向另一个网站站点、计算机、服务器或数据中心进行传输。计算机可读存储介质可以是计算机能够存取的任何可用介质或者是包含一个或多个可用介质集合的服务器、数据中心等数据存储设备。可用介质可以是磁性介质、光介质、或者半导体介质。半导体介质可以是固态硬盘，也可以是随机存取存储器，闪存，只读存储器，可擦可编程只读存储器，电可擦可编程只读存储器，寄存器或任何其他形式的合适存储介质。本申请是参照根据本申请实施例的方法、设备、和计算机程序产品的流程图和/或方框图来描述。可由计算机程序指令实现流程图和/或方框图中的每一流程和/或方框、以及流程图和/或方框图中的流程和/或方框的结合。可提供这些计算机程序指令到通用计算机、专用计算机、嵌入式处理机或其他可编程数据处理设备的处理器以产生一个机器，使得通过计算机或其他可编程数据处理设备的处理器执行的指令产生用于实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能的装置。这些计算机程序指令也可存储在能引导计算机或其他可编程数据处理设备以特定方式工作的计算机可读存储器中，使得存储在该计算机可读存储器中的指令产生包括指令装置的制造品，该指令装置实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能。这些计算机程序指令也可装载到计算机或其他可编程数据处理设备上，使得在计算机或其他可编程设备上执行一系列操作步骤以产生计算机实现的处理，从而在计算机或其他可编程设备上执行的指令提供用于实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能的步骤。在上述实施例中，对各个实施例的描述都各有侧重，某个实施例中没有详述的部分，可以参见其它实施例的相关描述。显然，本领域的技术人员可以对本申请实施例进行各种改动和变型而不脱离本申请实施例的精神和范围。本申请实施例方法中的步骤可以根据实际需要进行顺序调整、合并或删减；本申请实施例系统中的模块可以根据实际需要进行划分、合并或删减。如果本申请实施例的这些修改和变型属于本申请权利要求及其等同技术的范围之内，则本申请也意图包含这些改动和变型在内。
