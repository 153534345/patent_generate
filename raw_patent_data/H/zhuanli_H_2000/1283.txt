标题title
先验聚类网络坐标系统优化方法、装置及计算机存储介质
摘要abst
本发明涉及先验聚类网络坐标系统优化方法、装置及计算机存储介质，涉及网络坐标系统技术领域。网络坐标系统中包括目标节点、多个邻居节点，对多个邻居节点聚类以划分为多个簇集；构建参考节点集，参考节点集中包括多个参考节点，参考节点由多个近程邻居节点以及从多个簇集中等量选取的多个有效远程邻居节点构成；参照参考节点计算目标节点坐标；当目标节点调整后坐标的局部误差之和减小时，更新目标节点坐标；构建双层目标节点坐标更新截止机制。本发明用于解决经典NCS节点坐标生成算法存在节点随机选择远程邻居误差大、坐标更新盲目和系统难以稳定收敛等问题。
权利要求书clms
1.一种先验聚类网络坐标系统优化方法，其特征在于，包括：网络坐标系统中包括目标节点、多个邻居节点，对所述多个邻居节点聚类以划分成多个簇集；构建参考节点集，所述参考节点集中包括多个参考节点，所述参考节点由多个近程邻居节点以及从多个所述簇集中等量选取的多个有效远程邻居节点构成；参照所述参考节点计算目标节点坐标；当调整后的所述目标节点坐标的局部误差之和减小时，更新所述目标节点坐标；构建双层目标节点坐标更新截止方法，其中，第一层所述目标节点坐标更新截止方法包括：设置所述目标节点的精度误差的阈值，当所述目标节点的精度误差的实测值等于阈值时，所述目标节点不参与坐标被迫调整机制；第二层所述目标节点坐标更新截止方法包括：设置所述目标节点选取所述有效远程邻居节点的次数阈值，当所述目标节点选取所述有效远程邻居节点的实际次数等于所述次数阈值时，停止更新所述目标节点坐标。2.根据权利要求1所述的先验聚类网络坐标系统优化方法，其特征在于，当调整后的所述目标节点坐标的局部误差之和增大时，停止更新所述目标节点坐标。3.根据权利要求1所述的先验聚类网络坐标系统优化方法，其特征在于，对所述多个邻居节点聚类以划分为多个簇集包括：根据延迟矩阵采用随机搜索聚类方法对所述多个邻居节点聚类以划分为多个簇集。4.根据权利要求3所述的先验聚类网络坐标系统优化方法，其特征在于，构建参考节点集，所述参考节点集中多个参考节点，所述参考节点由多个近程邻居节点以及从多个所述簇集中等量选取的多个有效远程邻居节点构成，包括：根据所述延迟矩阵对所述多个邻居节点进行时延升序排序，删除所有非正常通信排序结果，以获得时延升序队列，从所述时延升序队列中选取预设个数的邻居节点作为所述近程邻居节点；从每一所述簇集中分别选取一个远程邻居节点作为所述有效远程邻居节点，当所述簇集中包括前一步骤中的所述近程邻居节点时，所述有效远程邻居节点从排除所述近程邻居节点中选取。5.根据权利要求1所述的先验聚类网络坐标系统优化方法，其特征在于，当调整后的所述目标节点坐标的局部误差之和减小时，更新所述目标节点坐标，包括：确定调整前的所述目标节点坐标的局部误差之和；根据所述参考节点集中的每一所述参考节点对调整前的所述目标节点坐标执行一次时延预测算法，以获得计算后暂时坐标和计算后暂时误差；根据所述计算后暂时坐标计算调整后的所述目标节点坐标的局部误差之和；判断调整后的所述目标节点坐标的局部误差之和是否小于调整前的所述目标节点坐标的局部误差之和，若是，则更新所述目标节点坐标，即令所述目标节点的坐标等于所述计算后暂时坐标，所述目标节点的精度误差等于所述计算后暂时误差。6.根据权利要求5所述的先验聚类网络坐标系统优化方法，其特征在于，确定调整前所述目标节点坐标的局部误差之和，包括：根据调整前的所述目标节点坐标和参考节点的坐标在网络坐标系中的欧几里德距离，以及所述目标节点和参考节点在现实世界中的网络距离确定调整前的所述目标节点坐标的局部误差之和；根据所述计算后暂时坐标计算调整后的所述目标节点坐标的局部误差之和，包括：根据所述目标节点计算调整后暂时坐标和参考节点的坐标在网络坐标系中的欧几里德距离，以及所述目标节点和参考节点在现实世界中的网络距离确定调整后的所述目标节点坐标的局部误差之和。7.一种先验聚类网络坐标系统优化装置，其特征在于，用于执行权利要求1至6任一项所述的先验聚类网络坐标系统优化方法，所述优化装置包括：聚类单元，网络坐标系统中包括目标节点、多个邻居节点，所述聚类单元用于对所述多个邻居节点聚类以划分为多个簇集；参考节点集构建单元，用于构建参考节点集，所述参考节点集中包括多个参考节点，所述参考节点由多个近程邻居节点以及从多个所述簇集中等量选取的多个有效远程邻居节点构成；目标节点坐标计算单元，用于参照所述参考节点集中的所述参考节点调整目标节点坐标；目标节点坐标更新单元，用于在调整后的所述目标节点坐标的局部误差之和减小时，更新所述目标节点坐标；双层目标节点坐标更新截止单元，其中，第一层所述目标节点坐标更新截止方法包括：设置所述目标节点的精度误差的阈值，当所述目标节点的精度误差的实测值等于阈值时，所述目标节点不参与坐标被迫调整机制；第二层所述目标节点坐标更新截止方法包括：设置所述目标节点选取所述有效远程邻居节点的次数阈值，当所述目标节点选取所述有效远程邻居节点的实际次数等于所述次数阈值时，停止更新所述目标节点坐标。8.一种电子设备，包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，其特征在于，所述处理器执行所述计算机程序时实现如权利要求1至6任一项所述的先验聚类网络坐标系统优化方法。9.一种计算机存储介质，其特征在于，所述计算机存储介质存储有多条指令，所述指令适于由处理器加载并执行如权利要求1～6任意一项所述的方法步骤。
说明书desc
技术领域本发明属于网络坐标系统技术领域，尤其涉及一种先验聚类网络坐标系统优化方法、装置及计算机存储介质。背景技术随着互联网快速发展，网络规模也呈现出指数级别的增长。以多人在线游戏、P2P网络和内容寻址覆盖网络等为代表的网络服务都依赖精确的网络延迟测量。在以文件共享应用程序为代表的分布式应用中，网络延迟已成为决定分布式应用程序可伸缩性水平的关键因素之一。减少主机之间的单向延迟或者往返时延时，大多数网络应用程序的性能都会得到提高。但是，由于网络应用程序的大规模、高动态和自组织复杂性，这种精确和不间断的显式测量收集方式代价是极大的。每个节点不仅承受巨大的计算开销，而且会产生大量的测量流量，这对网络系统而言是不友好的。使用网络坐标系统来预测延迟是获得节点间延迟的有效方法之一。NCS主张不显式测量网络节点间延迟，它允许主机基于少数邻居节点的信息预测全局节点信息，从而减少网络资源的消耗。Azureus是第一个使用NCS为客户服务的大规模网络应用程序。经典NCS生成算法目前存在节点随机选择远程邻居误差大、坐标更新盲目和系统难以稳定收敛等问题。发明内容本发明的目的在于提供一种先验聚类网络坐标系统优化方法、装置及计算机存储介质，以解决经典NCS生成算法目前存在节点随机选择远程邻居误差大、坐标更新盲目和系统难以稳定收敛等问题。第一方面，本发明提供一种先验聚类网络坐标系统优化方法，包括：网络坐标系统中包括目标节点、多个邻居节点，对多个邻居节点聚类以划分为多个簇集；构建参考节点集，参考节点集中包括多个参考节点，参考节点由多个近程邻居节点以及从多个簇集中等量选取的多个有效远程邻居节点构成；参照参考节点集中的参考节点计算目标节点坐标；当调整后的目标节点坐标的局部误差之和减小时，更新目标节点坐标；构建双层目标节点坐标更新截止方法，其中，第一层目标节点坐标更新截止方法包括：设置目标节点的精度误差的阈值，当目标节点的精度误差的实测值等于阈值时，目标节点不参与坐标被迫调整机制；第二层目标节点坐标更新截止方法包括：设置目标节点选取有效远程邻居节点的次数阈值，当目标节点选取有效远程邻居节点的实际次数等于次数阈值时，停止更新目标节点坐标。作为一种可能的实现方式，当调整后的目标节点坐标的局部误差之和增大时，停止更新目标节点坐标。作为一种可能的实现方式，对多个邻居节点聚类以划分为多个簇集包括：根据延迟矩阵采用随机搜索聚类方法对多个邻居节点聚类以划分为多个簇集。作为一种可能的实现方式，参考节点集中包括多个参考节点，参考节点由多个近程邻居节点以及从多个簇集中等量选取的多个有效远程邻居节点构成，包括：根据延迟矩阵对多个邻居节点进行时延升序排序，删除所有非正常通信排序结果，以获得时延升序队列，从时延升序队列中选取预设个数的邻居节点作为近程邻居节点；从每一簇集中分别选取一个远程邻居节点作为有效远程邻居节点，当簇集中包括前一步骤中的近程邻居节点时，有效远程邻居节点从排除近程邻居节点中选取。作为一种可能的实现方式，当调整后的目标节点坐标的局部误差之和减小时，更新目标节点坐标，包括：确定调整前的目标节点坐标的局部误差之和；根据参考节点集中的每一参考节点对调整前的目标节点执行一次时延预测算法，以获得计算后暂时坐标和计算后暂时误差；根据计算后暂时坐标计算调整后的目标节点坐标的局部误差之和；判断调整后的目标节点坐标的局部误差之和是否小于调整前的目标节点坐标的局部误差之和，若是，则更新目标节点坐标，即令目标节点的坐标等于计算后暂时坐标，目标节点的精度误差等于计算后暂时误差。作为一种可能的实现方式，确定调整前的目标节点坐标的局部误差之和，包括：根据调整前的目标节点坐标和参考节点的坐标在网络坐标系中的欧几里德距离，以及目标节点和参考节点在现实世界中的网络距离确定调整前的目标节点坐标的局部误差之和。作为一种可能的实现方式，根据计算后暂时坐标计算调整后的目标节点坐标的局部误差之和，包括：根据目标节点计算调整后暂时坐标和参考节点的坐标在网络坐标系中的欧几里德距离，以及目标节点和参考节点在现实世界中的网络距离确定调整后的目标节点坐标的局部误差之和。与现有技术相比，本发明提供的先验聚类网络坐标系统优化方法具有如下效果：第一，首先引入聚类对邻居节点进行划分，通过从不同簇集中选择有效远程邻居节点优化参考节点集，不仅能够避免有效远程邻居节点在同一集群中，而且每个有效远程邻居节点又能独自代表其所在节点簇集，使目标节点坐标更新有效契合整个网络坐标系统。第二，加入目标节点坐标更新预测策略，即当目标节点调整后坐标的局部误差之和减小时，才更新目标节点坐标，基于此，能够很好的把握目标节点坐标调整的幅度，避免目标节点盲目更新的问题。第三，采用双层目标节点坐标更新截止机制，能够避免待更新的目标节点不必要的坐标更新，使其保持良好的精度，提高网络坐标系统的收敛稳定性。通过在实际数据集上开展的实验结果表面，本发明提供的先验聚类网络坐标系统优化方法相较于经典NCS生成算法具备更好的精确性和稳定性。第二方面，本发明还提供一种先验聚类网络坐标系统优化装置，用于执行第一方面的先验聚类网络坐标系统优化方法，优化装置包括：聚类单元，网络坐标系统中包括目标节点、多个邻居节点，聚类单元用于对多个邻居节点聚类以划分为多个簇集；参考节点集构建单元，用于构建参考节点集，参考节点集中包括多个参考节点，参考节点由多个近程邻居节点以及从多个簇集中等量选取的多个有效远程邻居节点构成；目标节点坐标计算单元，用于参照参考节点集中的参考节点调整目标节点坐标；目标节点坐标更新单元，用于在调整后的目标节点坐标的局部误差之和减小时，更新目标节点坐标；双层目标节点坐标更新截止单元，其中，第一层目标节点坐标更新截止方法包括：设置目标节点的精度误差的阈值，当目标节点的精度误差的实测值等于阈值时，目标节点不参与坐标被迫调整机制；第二层目标节点坐标更新截止方法包括：设置目标节点选取有效远程邻居节点的次数阈值，当目标节点选取有效远程邻居节点的实际次数等于次数阈值时，停止更新目标节点坐标。与现有技术相比，本发明提供的先验聚类网络坐标系统优化装置的有益效果与第一方面和/或第一方面任一种实现方式提供的先验聚类网络坐标系统优化方法的有益效果相同，在此不做赘述。第三方面，本发明还提供一种电子设备，包括存储器、处理器及存储在存储器上并可在处理器上运行的计算机程序，处理器执行计算机程序时实现第一方面提供的先验聚类网络坐标系统优化方法。与现有技术相比，本发明提供的电子设备的有益效果与第一方面和/或第一方面任一种实现方式提供的先验聚类网络坐标系统优化方法的有益效果相同，在此不做赘述。第四方面，本发明还提供一种计算机存储介质，所述计算机存储介质存储有多条指令，所述指令适于由处理器加载并执行第一方面提供的先验聚类网络坐标系统优化方法。与现有技术相比，本发明提供的计算机存储介质的有益效果与第一方面和/或第一方面任一种实现方式提供的先验聚类网络坐标系统优化方法的有益效果相同，在此不做赘述。附图说明此处所说明的附图用来提供对本发明的进一步理解，构成本发明的一部分，本发明的示意性实施例及其说明用于解释本发明，并不构成对本发明的不当限定。在附图中：图1为本发明实施例提供的先验聚类网络坐标系统优化方法的流程图；图2为本发明实施例提供的King通过测量靠近主机的DNS服务器间的延迟来评估主机间延迟；图3为本发明实施例提供的DNS服务器A与服务器B之间距离确定方法的示意图；图4为本发明实施例提供的不同坐标维度的预测误差累积分布；图5为本发明实施例提供的不同远程邻居节点组选取次数阈值的归一化误差影响；图6为本发明实施例提供的仿真模拟Vivaldi坐标嵌入过程；图7为本发明实施例提供的双层截止机制对Cpc-Vivaldi精确性影响；图8为本发明实施例提供的无双层截止机制的Cpc-Vivaldi二维节点分布图；图9为本发明实施例提供的带双层截止机制的Cpc-Vivaldi二维节点分布图；图10为Cpc-Vivaldi与Vivaldi实验归一化误差对比；图11为Cpc-Vivaldi与Vivaldi在8次实验下坐标精度表现；图12为节点一次实验中两种算法误差对比；图13为节点不同次实验两种算法精度表现对比；图14为网络坐标系统的坐标稳定性能。具体实施方式为了使本发明所要解决的技术问题、技术方案及有益效果更加清楚明白，以下结合附图及实施例，对本发明进行进一步详细说明。应当理解，此处所描述的具体实施例仅用以解释本发明，并不用于限定本发明。需要说明的是，当元件被称为“固定于”或“设置于”另一个元件，它可以直接在另一个元件上或者间接在该另一个元件上。当一个元件被称为是“连接于”另一个元件，它可以是直接连接到另一个元件或间接连接至该另一个元件上。此外，术语“第一”、“第二”仅用于描述目的，而不能理解为指示或暗示相对重要性或者隐含指明所指示的技术特征的数量。由此，限定有“第一”、“第二”的特征可以明示或者隐含地包括一个或者更多个该特征。在本发明的描述中，“多个”的含义是两个或两个以上，除非另有明确具体的限定。“若干”的含义是一个或一个以上，除非另有明确具体的限定。在本发明的描述中，需要理解的是，术语“上”、“下”、“前”、“后”、“左”、“右”等指示的方位或位置关系为基于附图所示的方位或位置关系，仅是为了便于描述本发明和简化描述，而不是指示或暗示所指的装置或元件必须具有特定的方位、以特定的方位构造和操作，因此不能理解为对本发明的限制。在本发明的描述中，需要说明的是，除非另有明确的规定和限定，术语“安装”、“相连”、“连接”应做广义理解，例如，可以是固定连接，也可以是可拆卸连接，或一体地连接；可以是机械连接，也可以是电连接；可以是直接相连，也可以通过中间媒介间接相连，可以是两个元件内部的连通或两个元件的相互作用关系。对于本领域的普通技术人员而言，可以根据具体情况理解上述术语在本发明中的具体含义。在详细介绍本发明实施例提供的先验聚类网络坐标系统优化方法之前，对本发明涉及的一些概念做解释：网络坐标系统，用于预测延迟是获得节点间延迟的有效方法之一。NCS试图通过在欧几里德坐标空间中为每个主机分配合适的坐标，建立坐标距离和主机之间网络延迟RTT的有效映射。由于网络中节点之间广泛存在不对称和反三角时延的现象，任何欧几里德坐标空间都无法生成准确的映射关系。因此，在构建NCS时，最主要的目的是找到相对误差最小化的节点坐标。本发明首先描述预测误差函数，然后介绍围绕NCS已开展的相关研究。下面针对预测误差函数进行如下介绍：使用NCS预测延迟是获得节点间时延的有效方法之一。大多数NCS使用基于欧几里德距离的计算模型。在该模型中，使用欧几里德空间中的经典距离函数来计算节点坐标之间的距离。因此，将NCS最小化相对误差函数定义为：其中，表示节点i与节点j在现实世界中的网络距离，/＞表示节点i和节点j在网络坐标系中的欧几里德距离。值得注意的是，网络坐标空间并不局限于二维或三维，故给出计算/＞的公式：=/＞=/＞式中：n为网络坐标空间维度。下面将对NCS生成算法的相关研究做简单介绍：NCS生成算法可以分为两类：中心式算法和分布式算法。网络距离地图服务是第一个预测网络上任意两个节点之间RTT的中心式系统。后续中心式算法以GNP和Lighthousez为代表，其特点是通过预先验证的地标节点，建立固定坐标参照系；后续节点参照地标节点计算自身坐标。其缺点是存在单点故障，限制NCS的可伸缩性。分布式算法则很好地解决了上述问题。它不存在地标节点的概念，系统中所有的节点都可以成为其他节点的参考节点，节点之间相互协调调整自身坐标，其实现是完全分布式的。近年来，利用分布式算法构建NCS取得了一系列的成果。DISCS利用有限的距离测量集以一个快速收敛的速度实现高精度的延迟预测，并采用创新的鲁棒非负矩阵完成方法提高预测精度。本领域技术人员将更新步长与地面实况延迟相关联，以改进短链路的预测。现有技术提出了一种用于网络距离预测的分散矩阵分解算法以及提出了一个完全分散的系统，其可以在数学上证明是收敛的。另外，还提出了一种基于张量的网络距离预测方法，用置信区间表示网络距离。NCS是主流的延迟预测系统，每个节点只需要部分邻居节点就可以确定它们的坐标，具有简单、轻量级和易于扩展等优点。Vivaldi采用弹簧模拟来构建NCS。在该系统中，任意两个节点被模拟为通过一个弹簧相连，弹簧的静止长度L即为现实世界中两端节点间的RTT，当弹簧存在压力或拉力时，其通过弹开或拉近来模拟节点在NCS中调整自身坐标的过程。该弹簧的势能与其静止长度的位移平方成正比，所有节点间弹簧的势能之和即坐标预测延迟的目标：最小化的相对误差函数。根据胡克定律，定义Fij为节点i和节点j之间的弹簧施加在节点i上的力向量：式中：是弹簧相对于静止位置的位移，该量给出了节点i与节点j之间弹簧力的大小，单位向量/＞则给出了力的方向。由于在网络中，每个节点可以和其他很多节点进行通信。因此，在NCS中，施加在节点上的力也不仅仅只有一个，施加在节点i上的力是来自其他节点的力的总和：在Vivaldi构建的系统中，每个节点都有自己的网络坐标xi和精度误差估计ei。其中，精度误差估计代表一个节点对自身精确度的衡量，若ei较大，则说明节点本身在NCS中距离其正确位置较远，反之则近。所有节点根据其自身对邻居节点的测量值，并结合邻居节点的网络坐标和精度误差估计，通过Vivaldi算法周期性的更新自身的坐标和精度误差估计。算法1为Vivaldi的伪代码，其中，ce和cc是协调参数。算法1 Vivaldi算法输入：待调整节点i的当前坐标xi，i节点的精度误差估计ei。邻居节点j的信息：j节点坐标xj，测量到j节点的RTT，以及节点j的精度误差估计ej。输出：节点i的更新后的坐标xi，j节点更新后的精度误差估计ei。1. /*常量ce和cc是协调因子*/；2. /*根据邻居节点j更新一次i节点坐标*/；3.w=ei//*计算误差权重*/；4.es=|-/＞|//＞/*计算样本相对误差*/；5.ei=es×ce×w+ei×/*更新精度误差估计*/；6.δ=ce×w/*计算自适应步长*/；7.xi=xi+δ××/＞/*更新i节点坐标*/。Vivaldi算法构建NCS时，不同邻居节点数量的NCS精度是不一样的。本领域技术人员指出，Vivaldi的性能在32个邻居节点中显著增加，之后并无太大改善。优先从网络附近的节点收集RTT样本可以提高预测准确性，这首先由PIC证明。此外，本领域技术人员表明，仅在附近节点采样可以保持局部关系的坐标，但在大规模网络范围内远距离非正确。这种情况可以通过增加随机远程邻居来修复。相关研究表明，当节点以概率p=0.5来选择随机远程邻居集时，坐标迅速收敛。收敛速度随着远程节点比例的增加而减慢，因此节点邻居集的最优选择为最近邻居与随机远程邻居同等数量。Vivaldi采用随机远程邻居机制，这些远程邻居不能有效契合整个NCS，对全局参考性不足，且节点在进行坐标调整时，缺乏对本次坐标更新幅度的掌握，导致节点盲目更新坐标、难以稳定收敛。聚类是将物理或抽象对象的集合分成由类似的对象组成的多个簇的过程。D2D组播分为簇头选择和簇形成两个过程，在簇头的选择中，D2D组播按一个规则把用户分成若干簇，从每个簇中选出一个簇头作为簇的代表。利用D2D多播选择簇头的思想，在构建NCS中引入聚类概念，从簇中选择远程邻居节点，可以增强其邻居集在NCS中的代表性和位置全局性。NCS需要根据节点间延迟矩阵进行构建，在此之前，节点并无坐标。因为同一集群中的节点坐标距离上相近，其对远程节点的作用也等同，所以需要按照距离标准来对节点进行集群划分。常用的基于距离矩阵而不显性使用坐标的聚类方法为K-Means方法或层次聚类方法。但层次聚类具有较高的时间复杂度O，这显然不适合用于大规模网络。CLARANS是基于K-Means方法的改进，具有更高的效率和有效性。基于随机选择的聚类算法是将采样技术和PAM结合起来的算法。其主要的思想是：不考虑整个数据集合，而是选择实际数据的一小部分作为数据的代表。然后采用PAM方法从样本点中选择中心点。如果样本是以随机的方式选取的，那么它应当接近代表原来的数据集。从中选取的代表对象大概率和从整个数据集合中选出的代表对象相似。采样技术CLARA抽取数据集合的多个样本，对每个样本应用PAM算法，并返回最好的聚类结果作为输出。其任何时候都不把自身局限于任何样本。算法如下：算法2 CLARANS聚类算法输入：参数num和max neighbor /*num表示抽样次数，max neighbor表示节点可以与任意特定邻居比较的数目*/。输出：聚类中心点。1.令i=1，mincost为大数/*i表示已经选样的次数，mincost为最小代价*/；2.设置当前节点current为所有节点中任意一个节点；3.令j=1/*表示已经与current进行比较的邻居数目*/；4.考虑当前点的一个随机邻居S，并计算两个节点的代价差；5.若S代价较低，则令mincost为S代价，转至步骤3；6.否则，令j=j+1，若j≤max neighbor，则转至步骤4；若j＞max neighbor，当前节点为本次选样最小代价点；当其代价小于mincost，则令mincost为当前节点代价，bestnode为当前节点；7.令i=i+1，若i＞num，输出bestnode，bestnode为最佳节点，结束。否则，转至步骤2。通过对上述现有技术提供的Vivaldi算法和CLARANS聚类算法分析可知，Vivaldi采用随机远程邻居机制，这些远程邻居不能有效契合整个NCS，对全局参考性不足，且节点在进行坐标调整时，缺乏对本次坐标更新幅度的掌握，导致节点盲目更新坐标、难以稳定收敛。CLARANS聚类算法存在的缺点主要是由于对参数的敏感性、计算复杂度高、可能陷入局部最优解以及对高维数据效果不佳等因素导致的。鉴于此，为了提高其性能，建立更加完善的预测机制，同时能有效应用于各分布式网络服务和应用程序，基于经典NCS生成算法提出了一种先验聚类网络坐标系统优化方法，可截止的先验聚类网络坐标系统优化算法，定义为Cpc-Vivaldi。通过引入聚类对邻居节点进行集群划分，通过从不同簇集选择有效远程邻居节点优化簇集；加入坐标调整预测策略，避免节点坐标盲目更新；使用双层截止机制提高收敛稳定性。参见图1，本发明实施例提供一种先验聚类网络坐标系统优化方法，包括如下步骤：S10. 网络坐标系统中包括目标节点、多个邻居节点，对多个邻居节点聚类以划分为多个簇集。具体可以通过如下方式实现聚类：S100. 根据延迟矩阵采用随机搜索聚类方法对多个邻居节点聚类以划分为多个簇集。需要进一步解释的是，同一集群中节点的网络坐标位置相近，上述相近的节点在调整其他距离较远的节点时，发挥同等的作用。通过从不同簇集中选择邻居节点，被选中作为参考节点的邻居节点可以定义为有效远程邻居节点，可以有效避免多个或者是所有有效远程邻居节点在同一集群中，增强参考节点集在NSC中的代表性和全局性。S11. 构建参考节点集，参考节点集中包括多个参考节点，参考节点由多个近程邻居节点以及从多个簇集中等量选取的多个有效远程邻居节点构成，具体可以包括如下步骤：S110. 根据延迟矩阵对多个邻居节点进行时延升序排序，删除所有非正常通信排序结果，以获得时延升序队列，从时延升序队列中选取预设个数的邻居节点作为近程邻居节点。需要进一步解释的是，每个目标节点坐标的更新依赖于参考节点集，而参考节点集中的参考节点从近程邻居节点和远程邻居节点中选取。作为一种示例，参考节点集中最佳参考节点数量为32个，基于此，可以对集群中所有邻居节点进行时延升序排序，选取前16个邻居节点将其定义为近程邻居节点，且全部选入参考节点集。除前16个以外的邻居节点将其定义为远程邻居节点，所有近程邻居节点和所有远程邻居节点均随机分布在上述多个簇集中。S111. 从每一簇集中分别选取一个远程邻居节点作为有效远程邻居节点，当簇集中包括前一步骤中的近程邻居节点时，有效远程邻居节点从排除近程邻居节点中选取。如此设置，能够确保每个目标节点的调整顾及整个网络坐标系统，且没有固定最佳远程邻居节点选择，避免单点故障问题。参考节点集中的参考节点选择过程如算法3：算法3参考节点选取算法输入:待调整的目标节点i，延迟矩阵Rn×n，聚类结果S={S1,S2,...,S16}。输出：待调整的目标节点i的邻居集neighbor={j1,j2,...,j32}。1.根据Rn×n对目标节点i的所有邻居节点j进行时延升序排序；2.排除所有非正常通信排序结果；3.选择最近的16个邻居节点加入参考节点集neighbor；4.根据S={S1,S2,...,S16}，从不同簇集中随机选择远程邻居节点以作为有效远程邻居节点加入参考集/*非已选节点*/。S12. 根据参考节点集中的参考节点计算目标节点坐标。S13. 当目标节点调整后坐标的局部误差之和减小时，更新目标节点坐标，具体包括：S130. 确定目标节点调整前坐标的局部误差之和；S131. 根据参考节点集中的每一参考节点对调整前的目标节点执行一次时延预测算法，以获得计算后暂时坐标和计算后暂时误差；S132. 根据计算后暂时坐标计算目标节点调整后坐标的局部误差之和；S133. 判断调整后的目标节点坐标的局部误差之和是否小于调整前的目标节点坐标的局部误差之和，若是，则更新目标节点坐标，即令目标节点的坐标等于计算后暂时坐标，目标节点的精度误差等于计算后暂时误差。作为一种示例，确定调整前的目标节点坐标的局部误差之和，包括：根据调整前的目标节点坐标和参考节点的坐标在网络坐标系中的欧几里德距离，以及目标节点和参考节点在现实世界中的网络距离确定调整前的目标节点坐标的局部误差之和。作为第二种示例，根据计算后暂时坐标计算调整后的目标节点坐标的局部误差之和，包括：根据目标节点计算后暂时坐标和参考节点的坐标在网络坐标系中的欧几里德距离，以及目标节点和参考节点在现实世界中的网络距离确定调整后的目标节点坐标的局部误差之和。需要进一步解释的是：在经典NCS生成算法中，目标节点盲目根据其参考节点集去调整自身坐标，可能导致目标节点坐标无效调整。之后若作为其他节点的邻居节点参与调整时，精度较低，参考性不足。Cpc-Vivaldi加入坐标调整预测策略，目标节点根据其参考节点集进行坐标调整时，进行先验，若本次目标节点坐标调整能使目标节点的局部误差之和减小，视为有效调整，更新其坐标，否则不更新其坐标。坐标调整预测策略能有效避免节点盲目更新，尽可能防止局部误差不减反增，使其坐标调整具有意义，提高有效调整概率，过程如算法4所示。算法4 目标节点坐标调整预测输入：待调整的目标节点i当前坐标xi，i节点的精度误差估计ei，参考节点集neighbor={j1,j2,...,j32}。输出：调整后的目标节点i坐标xi，i节点的精度误差估计ei。1./*计算调整前的目标节点i的局部误差之和*//＞表示目标节点i与参考节点j在现实世界中的网络距离；/＞表示目标节点i和参考节点j在网络坐标系中的欧几里德距离；2.令tmpx=0，tmpe=0/*tmpx表示计算后目标节点的暂时坐标，tmpe表示计算后目标节点暂时误差；3.根据参考节点集中每一个参考节点ji对目标节点i执行一次Vivaldi算法实例，获得tmpx和tmpe；4.根据tmpx计算；5.若Ei´＜Ei，则xi=tmpx，ei=tmpe，结束；6.否则，退出本次更新。即当调整后的所述目标节点坐标的局部误差之和增大时，停止更新所述目标节点坐标。S14. 构建双层目标节点坐标更新截止机制，其中，第一层目标节点坐标更新截止机制包括：设置目标节点的精度误差的阈值，当目标节点的精度误差的实测值等于阈值时，目标节点不参与坐标被迫调整机制；第二层目标节点坐标更新截止机制包括：设置目标节点选取有效远程邻居节点的次数阈值，当目标节点选取有效远程邻居节点的实际次数等于次数阈值时，停止更新目标节点坐标。在经典NCS生成算法中，即使当某节点精确度已达到100%时，其在实验运行过程或有新节点加入时仍会被迫参与坐标调整过程，称之为坐标被迫调整机制，这将可能导致其准确性或整个NCS的准确性有一定的下降，且系统难以稳定收敛。Cpc-Vivaldi加入了精度误差估计和远程邻居选择次数双层截止机制，分层截止不必要或者可能使得整个NCS性能下降的调整来促进系统稳定收敛。精度误差估计截止，构建NCS时，需要每个目标节点对自身坐标进行连续地精度误差估计ei。对每个目标节点，刚加入NCS时均处于原点位置，ei的初始值设定为1。随着坐标的调整，ei会逐步降低，代表目标节点对自身的坐标的误差估计越来越小，坐标的精度得到提升。当ei值达到0时，则表示节点坐标有100%的精确度。由于目标节点被迫调整的机制，ei并不只是单调递减，其可能会因为一部分所选取的参考节点而出现增长的现象。为了使目标节点保持较高的精度，通过精度误差估计值ei设置了第一层截止机制，即当目标节点进行坐标调整时，若其ei值已达到0值，表示该目标节点已有100%精度，则无需再进行算法调整坐标，从而避免不必要的更新。有效远程邻居节点选择次数截止，在坐标调整预测策略中，目标节点总会优先选择能够使自身坐标调整有效远程节点。当目标节点精度已经达到一定程度时，能够选取有效远程邻居节点的机率逐步变小。若一直循环随机选取，其时间复杂度相对较大。因此在第二层截止机制中，通过设定目标节点选取有效远程邻居节点组的次数阈值来实现截止，若目标节点在次数阈值内仍未能选取有效远程邻居节点组，则可认为该目标节点精度已经相对较高，则无需继续调整。将该阈值设定为10。结合簇集选择有效远程邻居、坐标调整预测策略与双层截止机制，整个过程如算法5所示。算法5 Cpc-Vivaldi算法输入：时延矩阵Rn×n。输出：NCS。1./*更新一次节点坐标*/；2.初始化待调整节点I={i1,i2,...,iN}，初始化参数cc和ce/*N为节点数量*/；3.根据Rn×n，对节点进行算法2：CLRANS聚类算法，获得16个簇集；4.令i=1/*其中i≤N，表示节点*/；5.对目标节点i执行以下步骤；6.若ei=0，则i=i+1，转至步骤5；7.否则，令m=1，num=10/*m为选择邻居集次数，num为选择邻居次数最大阈值*/；8.根据算法3进行邻居集选择，m=m+1；9.根据算法4判断当前邻居集是否能有效调整，若Ei´＜Ei，则节点进行坐标和误差估计更新，i=i+1，转至步骤5；10.否则，若m＞num，目标节点i选择不更新坐标，i=i+1，转至步骤5；反之，转至步骤8。与现有技术相比，本发明提供的先验聚类网络坐标系统优化方法具有如下效果：第一，首先引入聚类对邻居节点进行划分，通过从不同簇集中选择有效远程邻居节点优化参考节点集，不仅能够避免有效远程邻居节点在同一集群中，而且每个有效远程邻居节点又能独自代表其所在节点簇集，使目标节点坐标更新有效契合整个网络坐标系统。第二，加入目标节点坐标更新预测策略，即当目标节点调整后坐标的局部误差之和减小时，才更新目标节点坐标，基于此，能够很好的把握目标节点坐标调整的幅度，避免目标节点盲目更新的问题。第三，采用双层目标节点坐标更新截止机制，能够避免待更新的目标节点不必要的坐标更新，使其保持良好的精度，提高网络坐标系统的收敛稳定性。通过在实际数据集上开展的实验结果表面，本发明提供的先验聚类网络坐标系统优化方法相较于经典NCS生成算法具备更好的精确性和稳定性。1.评估方法1.1 数据集King数据集由King工具在1740台DNS服务器之间收集的RTT数据构成。King基于两个简单的观察：互联网中的大多数终端主机位于其DNS服务器附近，递归DNS查询可用于测量成对DNS服务器之间的延迟。因此可以通过定位附近的DNS服务器并测量它们之间的延迟来估计两个端主机之间的延迟，如图2所示。为了确定DNS服务器A与服务器B之间的距离，首先测量到A服务器的往返时间，然后要求A服务器递归的解析B服务器的域，如图3所示。两个操作之间的时间差即作为服务器A与服务器B之间的往返时间。现有技术指出基于King数据集，估计延迟准确率为96.1%。King数据集测采样节点均为域名服务器，因而其在互联网中具备较好地可连接性，其地理覆盖区域也较为广泛。1.2 Cpc-Vivaldi实验设置在实验中，为了避免瞬态拥塞和数据包丢失对实验结果的影响，将King数据集中收集到的网络时延进行预处理，选出多次测量RTT中的中位数，形成的延迟矩阵。将该延迟矩阵作为算法的输入，对每个节点运行一个Cpc-Vivaldi算法实例。为了研究NCS维度和精确度之间的关系，本节基于经典NCS生成算法，在不同的维度下对节点进行坐标嵌入，并分别计算了维度为2、3、5和8条件下相应的欧几里德相对误差。图4展示了不同维度下NCS的相对误差CDF图。图中可以发现，系统的相对误差随着坐标维度的增加而减小。虽然更高维度的坐标能够更加精确的拟合网络延迟，但同时也增加了运行开销。比5维更高维度的坐标精确度增加幅度基本很小，因此折中选择5维作为实验的坐标维度。同样，为了研究实验中远程邻居节点组的次数阈值大小，本小节基于Cpc-Vivaldi，分别从次数阈值为1、3、5、10、15、20、100、1000和2000进行了全局相对误差对比。图5展示了不同远程邻居节点组选取次数阈值下Cpc-Vivaldi的归一化相对误差。从图中可以看出，误差在次数阈值为1到10之间单调递减，在10之后开始增加并变化不大，当次数阈值为10时，整体误差相对较小。因此，本实验将该阈值设定为10。此外实验中涉及到的协调因子ce，将其值定为0.25。现有技术指出当为0.25时，可快速减少错误并降低振荡，因此，后续实验对比均将其设置为0.25。对于其他实验初始设置，将每个目标节点的参考节点集大小固定为32，其中包含16个近程邻居节点，16个有效远程邻居节点，所有节点从坐标原点加入NCS。2.实验分析NCS的精确性与稳定性对于考查其性能具有重要作用。为了避免不同系统对实验造成的影响，本发明首先通过仿真实验在本地验证了Vivaldi构建NCS的可行性；然后，采用真实数据集分别从精确性和收敛稳定性两方面验证了双层截止机制在Cpc-Vivaldi中的有效性；最后，实验将Cpc-Vivaldi算法与经典NCS生成算法Vivaldi进行了对比。2.1 Vivaldi构建NCS的可行性实验在二维坐标空间下，仿真设定了1600个坐标点，并通过计算这1600个点两两之间的欧几里德距离来组成一个“延迟矩阵”，最后将所有的点放置在坐标空间的原点处，对Vivaldi算法，仅给出得到的“延迟矩阵”，观察其能否有效的将这些点分配到合适的位置。图6展示了Vivaldi算法为这1600个点调整到合适位置的过程，可以清楚的看到约在实验运行第8轮左右，这些点之间已经被分配好合适的距离，呈现出最开始设定时规范的形状。值得注意的是，NCS有价值和有意义的地方在于节点距离与网络延迟的映射，节点坐标位置则并不重要。从图6所展示的过程可以得知，Vivaldi能够有效构建NCS。2.2 双层截止机制的有效性图7展示了双层截止机制对Cpc-Vivaldi精确性影响的相对误差累计分布图。在真实数据集上，实验分别对有双层截止机制和无双层截止机制的Cpc-Vivaldi算法进行50次迭代嵌入，并计算对应系统的相对误差，最后作累积分布函数处理。从图中可以明显地看出，有双层截止机制的Cpc-Vivaldi算法具有更小的相对误差，更高的精确性。为了进一步评估双层截止机制对Cpc-Vivaldi收敛稳定性的影响。以2维坐标为例，绘制了模拟不同时间的X和Y坐标，如图8、图9所示。可以从中清楚地看出，相较于不带双层截止机制的Cpc-Vivaldi，带双层截止机制的Cpc-Vivaldi在嵌入误差稳定后，坐标更加稳定，漂移更小。2.3 Cpc-Vivaldi与Vivaldi精确性对比图10描述了两种算法运用King数据集对网络节点进行坐标嵌入的归一化误差对比。可以看出，随着节点运行实例轮数的增加，两种嵌入算法的相对误差均在减小，但Cpc-Vivaldi相较于Vivaldi能够使节点更加快速的减小相对误差，且NCS的全局相对误差始终小于Vivaldi。在图11中，分别对于Cpc-Vivaldi与Vivaldi进行了8次不同的实验，当节点坐标趋于稳定后，NCS又继续进行了50轮更新，选取每次实验在系统稳定之后所能调整到最小的全局误差作为输出。这是为了避免图10一次实验造成的偶然现象，通过不同次实验对比Cpc-Vivaldi与Vivaldi算法的精确率。从图中可以看出，Cpc-Vivaldi在8次实验下系统精确度均高于Vivaldi，整体提升了大约0.7%左右，说明其具有更快的收敛能力。从图10和图11可以得知，对于NCS整体而言，Cpc-Vivaldi对网络节点的嵌入更加有效。但对于网络服务和应用程序而言，有时客户需要针对某个单独节点做出最佳网络服务，此时，NCS必须要保证单节点嵌入的有效性和精确性。图12展示了从1740个节点中随机均匀选出的4个节点：54、278、953和1439的归一化相对误差对比，以此来推断Cpc-Vivaldi是否对单节点也同样有效。可以看出，在单次实验下，四个随机节点相对于Vivaldi均表现出不同程度的优越性。同样，为了避免一次实验的偶然性，对于随机选出的单节点，本节又进行了多次不同的实验。图13只给出了5次实验结果图，这足以表明随机节点通过Cpc-Vivaldi算法调整优于Vivaldi。从实验图中可以看出，节点54、278和1439均在不同次实验中胜于Vivaldi，其精确度更高。对于节点953，其中存在一次实验精确度略低于Vivaldi算法0.01%，其余实验精确度均高于Vivaldi。网络坐标嵌入的波动性是难免的，其不影响Cpc-Vivaldi在单节点方面整体上有较好的表现。由上述实验结果可得，Cpc-Vivaldi在精确性方面优于经典NCS生成算法Vivaldi，具备更好的网络坐标嵌入有效性。2.4 Cpc-Vivaldi和Vivaldi稳定性对比除系统的精确性之外，稳定性也是衡量NCS的性能评价标准之一。在稳定性中，采用系统稳定性和坐标稳定性来作为性能衡量标准。2.4.1 系统稳定性实验以坐标系统趋于稳定情况时作为初始条件，继续运行算法迭代N次，对比两种算法对坐标系统稳定性的影响。将N次最佳全局误差{,/＞,...,/＞}称为误差样本，其中N为样本容量，Ea为每次实验最佳全局误差，如下式所示，计算样本均值/＞和样本抖动方差/＞：=/＞=本实验将N定为50，分别对Cpc-Vivaldi与Vivaldi进行计算样本均值和抖动方差。Cpc-Vivaldi在系统基本稳定后50次实验抖动方差为2.666×106，Vivaldi实验抖动方差为3.586×106。结果表明：Cpc-Vivaldi算法相较于Vivaldi算法在系统稳定之后波动性更小、稳定性更高。2.4.2 坐标稳定性坐标位置变化描述了单位时间T内的网络坐标位置变化量，如下式所示：其中，网络坐标位置变化量，ms为网络坐标变化量的单位，指代毫秒，网络坐标变化量本身为时延，即时间量，将其转化成空间坐标，sec为时间T的单位，即seconds。 NCS构建过程，节点从空间原点开始到调整到适宜位置，坐标位置变化V相对较大，当系统达到稳定状态之后，V值变化量并不大。图13展示了系统在运行30次时1740个节点的坐标值与系统运行50次坐标值之间的坐标位置变化CDF图。可以看出，Cpc-Vivaldi坐标位置偏移量要小于Vivaldi，其坐标稳定性优于Vivaldi。第二方面，本发明还提供一种先验聚类网络坐标系统优化装置，用于执行第一方面的先验聚类网络坐标系统优化方法，优化装置包括：聚类单元，网络坐标系统中包括目标节点、多个邻居节点，聚类单元用于对多个邻居节点聚类以划分为多个簇集；参考节点集构建单元，用于构建参考节点集，参考节点集中包括多个参考节点，参考节点由参考节点集中包括多个近程邻居节点以及从多个簇集中等量选取的多个有效远程邻居节点构成；目标节点坐标计算单元，用于参照参考节点集中的参考节点调整目标节点坐标；目标节点坐标更新单元，用于在目标节点调整后坐标的局部误差之和减小时，更新目标节点坐标；双层目标节点坐标更新截止单元，其中，第一层目标节点坐标更新截止机制包括：设置目标节点的精度误差的阈值，当目标节点的精度误差的实测值等于阈值时，目标节点不参与坐标被迫调整机制；第二层目标节点坐标更新截止机制包括：设置目标节点选取有效远程邻居节点的次数阈值，当目标节点选取有效远程邻居节点的实际次数等于次数阈值时，停止更新目标节点坐标。与现有技术相比，本发明提供的先验聚类网络坐标系统优化装置的有益效果与第一方面和/或第一方面任一种实现方式提供的先验聚类网络坐标系统优化方法的有益效果相同，在此不做赘述。第三方面，本发明还提供一种电子设备，包括存储器、处理器及存储在存储器上并可在处理器上运行的计算机程序，处理器执行计算机程序时实现第一方面提供的先验聚类网络坐标系统优化方法。与现有技术相比，本发明提供的电子设备的有益效果与第一方面和/或第一方面任一种实现方式提供的先验聚类网络坐标系统优化方法的有益效果相同，在此不做赘述。第四方面，本发明还提供一种计算机存储介质，所述计算机存储介质存储有多条指令，所述指令适于由处理器加载并执行第一方面提供的先验聚类网络坐标系统优化方法。与现有技术相比，本发明提供的计算机存储介质的有益效果与第一方面和/或第一方面任一种实现方式提供的先验聚类网络坐标系统优化方法的有益效果相同，在此不做赘述。在上述实施方式的描述中，具体特征、结构、材料或者特点可以在任何的一个或多个实施例或示例中以合适的方式结合。以上所述，仅为本发明的具体实施方式，但本发明的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本发明揭露的技术范围内，可轻易想到变化或替换，都应涵盖在本发明的保护范围之内。因此，本发明的保护范围应以所述权利要求的保护范围为准。
