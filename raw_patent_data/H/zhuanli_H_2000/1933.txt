标题title
数据加密方法、数据解密方法、装置、设备及介质
摘要abst
本公开实施例公开了一种数据加密方法、数据解密方法、装置、设备及介质，涉及数据处理技术领域。该方法包括：获取并以128bit长度将待加密数据分为n个待加密子数据；获取待加密子数据的第一子参数组；根据第一子参数组和共享密钥，基于SM4算法得到第二子参数组；将前n‑1个待加密子数据与前n‑1个第二子参数组进行异或运算得到n‑1个加密子数据；当第n个待加密子数据不足128bit时，在第n个第二子参数组中截取与第n个待加密子数据同长度的第三子参数组；将第n个待加密子数据与第三子参数组进行异或运算得到第n个加密子数据；将n个加密子数据拼接后发送。通过截取方式防止冗余数据的填充，避免带宽被冗余数据占用。
权利要求书clms
1.一种数据加密方法，其特征在于，所述方法应用于发送端，所述方法包括：获取待加密数据，并将所述待加密数据分割为n个待加密子数据，其中n≥1，且至少前n-1个待加密子数据中每个待加密子数据的数据长度为128bit；获取每个待加密子数据对应的第一子参数组，所述第一子参数组的数据长度为128bit；根据每个待加密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待加密子数据对应的第二子参数组；将所述n个待加密子数据中前n-1个待加密子数据中的每个待加密子数据，与所述前n-1个待加密子数据中的每个待加密子数据对应的第二子参数组进行异或运算，得到n-1个加密子数据；当第n个待加密子数据的数据长度小于128bit时，在所述第n个待加密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，所述第三子参数组的数据长度等于所述第n个待加密子数据的数据长度；将所述第n个待加密子数据与所述第三子参数组进行异或运算，得到第n个加密子数据；将第1个加密子数据至第n个加密子数据依次拼接，得到加密数据，并向接收端发送所述加密数据。2.根据权利要求1所述的方法，其特征在于，所述方法还包括：当第n个待加密子数据的数据长度等于128bit时，将所述第n个待加密子数据与所述第n个待加密子数据对应的第二子参数组进行异或运算，得到第n个加密子数据。3.根据权利要求1所述的方法，其特征在于，所述第一子参数组包括：帧计数器的计数值、方向位、初始化向量和所述第一子参数组的标识。4.根据权利要求3所述的方法，其特征在于，所述方法还包括：获取所述待加密数据的消息认证码，以及所述消息认证码对应的第四子参数组，所述第四子参数组的数据长度为128bit；根据所述第四子参数组和所述共享密钥，基于预设的SM4算法，得到所述消息认证码对应的第五子参数组；当所述消息认证码的数据长度小于128bit时，在所述第五子参数组中进行数据截取，以获取第六子参数组，所述第六子参数组的数据长度等于所述消息认证码的数据长度；将所述消息认证码与所述第六子参数组进行异或运算，得到加密消息认证码；所述将第1个加密子数据至第n个加密子数据依次拼接，得到加密数据，包括：将第1个加密子数据至第n个加密子数据、以及所述加密消息认证码依次拼接，得到所述加密数据。5.根据权利要求4所述的方法，其特征在于，所述第四子参数组包括：所述帧计数器的计数值、所述方向位和所述初始化向量。6.根据权利要求5所述的方法，其特征在于，在所述待加密数据的数据长度大于128bit时，所述获取所述待加密数据的消息认证码，包括：将所述待加密数据对应的第二参数组与第1个待加密子数据进行异或运算，得到第1加密混淆结果；根据所述第1加密混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；将加密后的第j-1加密混淆结果与第j个待加密子数据进行异或运算，得到第j加密混淆结果，其中2≤j＜n，且j依次取本公开涉及数据处理技术领域，具体涉及一种数据加密方法、数据解密方法、装置、设备及介质。背景技术为了保证两个通信设备之间数据传输的安全性，通常对数据进行加密后再发送，以保证数据传输的安全。目前，可采用SM4国密算法对数据进行加密，SM4国密算法严格要求数据的分组长度为128比特。但在两个通信设备的通信过程中，数据的长度并不一定恰好是128bit的整数倍，导致将数据分组为多个子数据时，最后一个子数据的数据长度达不到128bit。此时，采用SM4国密算法时，就需要对最后一个子数据进行数据填充，使该子数据的数据长度达到128bit。虽然该方式使得每个子数据的数据长度满足了SM4国密算法对分组长度的要求，但由于填充的数据同样需要被加密后发送，造成无用的填充数据对带宽的额外占用。因此，如何在保证数据安全传输的同时，避免冗余的填充数据对带宽的占用，成成为一项亟待解决的技术问题。发明内容为了解决相关技术中的问题，本公开实施例提供一种数据加密方法、数据解密方法、装置、设备及介质。第一方面，本公开实施例中提供了一种数据加密方法。具体地，所述数据加密方法，应用于发送端，所述方法包括：获取待加密数据，并将所述待加密数据分割为n个待加密子数据，其中n≥1，且至少前n-1个待加密子数据中每个待加密子数据的数据长度为128bit；获取每个待加密子数据对应的第一子参数组，所述第一子参数组的数据长度为128bit；根据每个待加密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待加密子数据对应的第二子参数组；将所述n个待加密子数据中前n-1个待加密子数据中的每个待加密子数据，与所述前n-1个待加密子数据中的每个待加密子数据对应的第二子参数组进行异或运算，得到n-1个加密子数据；当第n个待加密子数据的数据长度小于128bit时，在所述第n个待加密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，所述第三子参数组的数据长度等于所述第n个待加密子数据的数据长度；将所述第n个待加密子数据与所述第三子参数组进行异或运算，得到第n个加密子数据；将第1个加密子数据至第n个加密子数据依次拼接，得到加密数据，并向接收端发送所述加密数据。在本公开的一种实现方式中，所述方法还包括：当第n个待加密子数据的数据长度等于128bit时，将所述第n个待加密子数据与所述第n个待加密子数据对应的第二子参数组进行异或运算，得到第n个加密子数据。在本公开的一种实现方式中，所述第一子参数组包括：帧计数器的计数值、方向位、初始化向量和所述第一子参数组的标识。在本公开的一种实现方式中，所述方法还包括：获取所述待加密数据的消息认证码，以及所述消息认证码对应的第四子参数组，所述第四子参数组的数据长度为128bit；根据所述第四子参数组和所述共享密钥，基于预设的SM4算法，得到所述消息认证码对应的第五子参数组；当所述消息认证码的数据长度小于128bit时，在所述第五子参数组中进行数据截取，以获取第六子参数组，所述第六子参数组的数据长度等于所述消息认证码的数据长度；将所述消息认证码与所述第六子参数组进行异或运算，得到加密消息认证码；所述将第1个加密子数据至第n个加密子数据依次拼接，得到加密数据，包括：将第1个加密子数据至第n个加密子数据、以及所述加密消息认证码依次拼接，得到所述加密数据。在本公开的一种实现方式中，所述第四子参数组包括：所述帧计数器的计数值、所述方向位和所述初始化向量。在本公开的一种实现方式中，在所述待加密数据的数据长度大于128bit时，所述获取所述待加密数据的消息认证码，包括：将所述待加密数据对应的第二参数组与第1个待加密子数据进行异或运算，得到第1加密混淆结果；根据所述第1加密混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；将加密后的第j-1加密混淆结果与第j个待加密子数据进行异或运算，得到第j加密混淆结果，其中2≤j＜n，且j依次取在本公开的一种实现方式中，在所述待加密数据的数据长度等于128bit时，所述获取所述待加密数据的消息认证码，包括：将所述待加密数据对应的第二参数组与第1个待加密子数据进行异或运算，得到第1加密混淆结果；根据所述第1加密混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；在所述加密后的第1加密混淆结果中进行预设长度的数据截取，以获取所述消息认证码。在本公开的一种实现方式中，在所述待加密数据的数据长度小于128bit时，所述获取所述待加密数据的消息认证码，包括：对所述第1个待加密子数据进行冗余数据填充，得到第1'个待加密子数据，所述第1'个待加密子数据的数据长度为128bit；将所述待加密数据对应的第二参数组与第1'个待加密子数据进行异或运算，得到第1加密混淆结果；根据所述第1加密混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；在所述加密后的第1加密混淆结果中进行预设长度的数据截取，以获取所述消息认证码。在本公开的一种实现方式中，所述方法还包括：获取所述待加密数据对应的第一参数组，所述第一参数组的数据长度为128bit；根据所述第一参数组和所述共享密钥，基于预设的SM4算法，得到所述待加密数据对应的所述第二参数组。在本公开的一种实现方式中，所述第一参数组包括：所述待加密数据的数据长度、所述帧计数器的计数值、所述方向位、所述初始化向量和认证标识。在本公开的一种实现方式中，所述第一参数组还包括：附加认证数据，所述附加认证数据的数据长度为128bit。在本公开的一种实现方式中，所述方法还包括：将所述第二参数组与所述附加认证数据进行异或运算，得到附加认证混淆结果；根据所述附加认证混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的附加认证混淆结果；将所述加密后的附加认证混淆结果作为所述待加密数据对应的第二参数组。第二方面，本公开实施例中提供了一种数据解密方法。具体地，所述数据解密方法，应用于接收端，所述方法包括：接收发送端的待解密数据，并将所述待解密数据分割为n个待解密子数据，其中n≥1，且至少前n-1个待解密子数据中每个待解密子数据的数据长度为128bit；获取每个待解密子数据对应的第一子参数组，所述第一子参数组的数据长度为128bit；根据每个待解密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待解密子数据对应的第二子参数组；将所述n个待解密子数据中前n-1个待解密子数据中的每个待解密子数据，与所述前n-1个待解密子数据中的每个待解密子数据对应的第二子参数组进行异或运算，得到n-1个解密子数据；当第n个待解密子数据的数据长度小于128bit时，在所述第n个待解密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，所述第三子参数组的数据长度等于所述第n个待解密子数据的数据长度；将所述第n个待解密子数据与所述第三子参数组进行异或运算，得到第n个解密子数据；将第1个解密子数据至第n个解密子数据依次拼接，得到解密数据。在本公开的一种实现方式中，所述方法还包括：当第n个待解密子数据的数据长度等于128bit时，将所述第n个待解密子数据与所述第n个待解密子数据对应的第二子参数组进行异或运算，得到第n个解密子数据。在本公开的一种实现方式中，所述第一子参数组包括：帧计数器的计数值、方向位、初始化向量和所述第一子参数组的标识。在本公开的一种实现方式中，所述方法还包括：获取所述待解密数据的待解密消息认证码，以及获取所述待解密消息认证码对应的第四子参数组，所述第四子参数组的数据长度为128bit；根据所述第四子参数组和所述共享密钥，基于预设的SM4算法，得到所述待解密消息认证码对应的第五子参数组；当所述待解密消息认证码的数据长度小于128bit时，在所述第五子参数组中进行数据截取，以获取第六子参数组，所述第六子参数组的数据长度等于所述待解密消息认证码的数据长度；将所述待解密消息认证码与所述第六子参数组进行异或运算，得到解密消息认证码。在本公开的一种实现方式中，所述第四子参数组包括：所述帧计数器的计数值、所述方向位和所述初始化向量。在本公开的一种实现方式中，所述将所述待解密消息认证码与所述第六子参数组进行异或运算，得到解密消息认证码之后，所述方法还包括：根据所述解密子数据、所述共享密钥和所述待解密数据对应的第二参数组，基于预设的SM4算法和异或运算，获取本地消息认证码；在所述解密消息认证码与所述本地消息认证码不同时，生成告警信息，所述告警信息用于指示数据完整性校验失败。在本公开的一种实现方式中，在所述待解密数据的数据长度大于128bit时，所述根据所述解密子数据、所述共享密钥和所述待解密数据对应的第二参数组，基于预设的SM4算法和异或运算，获取本地消息认证码，包括：将所述待解密数据对应的第二参数组与第1个解密子数据进行异或运算，得到第1解密混淆结果；根据所述第1解密混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；将加密后的第j-1解密混淆结果与第j个解密子数据进行异或运算，得到第j解密混淆结果，其中2≤j＜n，且j依次取在本公开的一种实现方式中，在所述待解密数据的数据长度等于128bit时，所述根据所述解密子数据、所述共享密钥和所述待解密数据对应的第二参数组，基于预设的SM4算法和异或运算，获取本地消息认证码，包括：将所述待解密数据对应的第二参数组与第1个解密子数据进行异或运算，得到第1解密混淆结果；根据所述第1解密混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；在所述加密后的第1解密混淆结果中进行预设长度的数据截取，以获取所述本地消息认证码。在本公开的一种实现方式中，在所述待解密数据的数据长度小于128bit时，所述根据所述解密子数据、所述共享密钥和所述待解密数据对应的第二参数组，基于预设的SM4算法和异或运算，获取本地消息认证码，包括：对所述第1个解密子数据进行冗余数据填充，得到第1'个解密子数据，所述第1'个解密子数据的数据长度为128bit；将所述待解密数据对应的第二参数组和所述第1'个解密子数据进行异或运算，得到第1解密混淆结果；根据所述第1解密混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；在所述加密后的第1解密混淆结果中进行预设长度的数据截取，以获取所述本地消息认证码。在本公开的一种实现方式中，所述方法还包括：获取所述待解密数据对应的第一参数组，所述第一参数组的数据长度为128bit；根据所述第一参数组和所述共享密钥，基于预设的SM4算法，得到所述待解密数据对应的所述第二参数组。在本公开的一种实现方式中，所述第一参数组包括：所述待解密数据的数据长度、所述帧计数器的计数值、所述方向位、所述初始化向量和认证标识。在本公开的一种实现方式中，所述第一参数组还包括：附加认证数据，所述附加认证数据的数据长度为128bit。在本公开的一种实现方式中，所述方法还包括：将所述第二参数组与所述附加认证数据进行异或运算，得到附加认证混淆结果；根据所述附加认证混淆结果和所述共享密钥，基于预设的SM4算法，得到加密后的附加认证混淆结果；将所述加密后的附加认证混淆结果作为所述待解密数据对应的第二参数组。第三方面，本公开实施例中提供了一种数据加密装置。具体地，所述数据加密装置，应用于发送端，所述装置包括：获取模块，被配置为获取待加密数据，并将所述待加密数据分割为n个待加密子数据，其中n≥1，且至少前n-1个待加密子数据中每个待加密子数据的数据长度为128bit；获取每个待加密子数据对应的第一子参数组，所述第一子参数组的数据长度为128bit；处理模块，被配置为根据每个待加密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待加密子数据对应的第二子参数组；将所述n个待加密子数据中前n-1个待加密子数据中的每个待加密子数据，与所述前n-1个待加密子数据中的每个待加密子数据对应的第二子参数组进行异或运算，得到n-1个加密子数据；当第n个待加密子数据的数据长度小于128bit时，在所述第n个待加密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，所述第三子参数组的数据长度等于所述第n个待加密子数据的数据长度；将所述第n个待加密子数据与所述第三子参数组进行异或运算，得到第n个加密子数据；发送模块，被配置为将第1个加密子数据至第n个加密子数据依次拼接，得到加密数据，并向接收端发送所述加密数据。第四方面，本公开实施例中提供了一种数据解密装置。具体地，所述数据解密装置，应用于接收端，所述装置包括：接收模块，被配置为接收发送端的待解密数据，并将所述待解密数据分割为n个待解密子数据，其中n≥1，且至少前n-1个待解密子数据中每个待解密子数据的数据长度为128bit；获取模块，被配置为获取每个待解密子数据对应的第一子参数组，所述第一子参数组的数据长度为128bit；处理模块，被配置为根据每个待解密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待解密子数据对应的第二子参数组；将所述n个待解密子数据中前n-1个待解密子数据中的每个待解密子数据，与所述前n-1个待解密子数据中的每个待解密子数据对应的第二子参数组进行异或运算，得到n-1个解密子数据；当第n个待解密子数据的数据长度小于128bit时，在所述第n个待解密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，所述第三子参数组的数据长度等于所述第n个待解密子数据的数据长度；将所述第n个待解密子数据与所述第三子参数组进行异或运算，得到第n个解密子数据；将第1个解密子数据至第n个解密子数据依次拼接，得到解密数据。第五方面，本公开实施例提供了一种芯片，芯片包括处理器，该处理器用于调用存储器中的计算机程序，以执行上述数据加密方法或数据解密方法的方法步骤。第六方面，本公开实施例提供了一种电子设备，包括存储器和至少一个处理器，其中，所述存储器用于存储一条或多条计算机指令，所述一条或多条计算机指令被所述处理器执行，以实现上述第一方面或第二方面，以及第一方面或第二方面任一种可能实现方式中的方法。第七方面，本公开实施例提供了一种计算机可读存储介质，其上存储有计算机指令，该计算机指令被处理器执行时实现第一方面或第二方面，以及第一方面或第二方面任一种可能实现方式中的方法。第八方面，本公开实施例提供了一种计算机程序产品，包括计算机程序/指令，该计算机程序/指令被处理器执行时实现第一方面或第二方面，以及第一方面或第二方面任一种可能实现方式中的方法。本公开实施例提供的技术效果可以包括以下有益效果：上述技术方案通过对待加密数据进行加密时，将待加密数据以128bit的数据长度分割为n个待加密子数据。针对每个待加密子数据，将待加密子数据对应的第一子参数组和共享密钥作为SM4算法的输入，通过SM4算法输出加密的第一子参数组。若存在第一子参数组对应的待加密子数据的数据长度不足128bit，只需要从加密的第一子参数组中截取出与待加密子数据同样数据长度的第三子参数组，再将该第三子参数组与对应的待加密数据通过异或运算即可得到加密子数据，无需对不足128bit的待加密子数据额外填充冗余数据，避免了带宽被冗余数据的占用。并且，由于SM4算法和异或运算均对输入的数据进行了加密，也保证了数据传输的安全性。应当理解的是，以上的一般描述和后文的细节描述仅是示例性和解释性的，并不能限制本公开。附图说明结合附图，通过以下非限制性实施方式的详细描述，本公开的其它特征、目的和优点将变得更加明显。在附图中。图1示出根据本公开一实施方式的数据加密方法的流程图。图2示出根据本公开一实施方式的数据加密方法的示例图。图3示出根据本公开一实施方式的数据解密方法的流程图。图4示出根据本公开一实施方式的数据解密方法的示例图。图5示出根据本公开一实施方式的数据加密装置或数据解密装置的结构框图。图6示出根据本公开一实施方式的电子设备的结构框图。图7是适于用来实现根据本公开一实施方式的数据加密方法或数据解密方法的计算机系统的结构示意图。具体实施方式下文中，将参考附图详细描述本公开的示例性实施例，以使本领域技术人员可容易地实现它们。此外，为了清楚起见，在附图中省略了与描述示例性实施例无关的部分。在本公开中，应理解，诸如“包括”或“具有”等的术语旨在指示本说明书中所公开的特征、数字、步骤、行为、部件、部分或其组合的存在，并且不欲排除一个或多个其他特征、数字、步骤、行为、部件、部分或其组合存在或被添加的可能性。另外还需要说明的是，在不冲突的情况下，本公开中的实施例及实施例中的特征可以相互组合。下面将参考附图并结合实施例来详细说明本公开。上文提及，目前，可采用SM4国密算法对数据进行加密，SM4国密算法严格要求数据的分组长度为128比特。但在两个通信设备的通信过程中，数据的长度并不一定恰好是128bit的整数倍，导致将数据分组为多个子数据时，最后一个子数据的数据长度达不到128bit。此时，采用SM4国密算法时，就需要对最后一个子数据进行数据填充，使该子数据的数据长度达到128bit。虽然该方式使得每个子数据的数据长度满足了SM4国密算法对分组长度的要求，但由于填充的数据同样需要被加密后发送，造成无用的填充数据对带宽的额外占用。考虑到上述缺陷，本公开在对待加密数据进行加密时，将待加密数据以128bit的数据长度分割为n个待加密子数据。针对每个待加密子数据，将待加密子数据对应的第一子参数组和共享密钥作为SM4算法的输入，通过SM4算法输出加密的第一子参数组。若存在第一子参数组对应的待加密子数据的数据长度不足128bit，只需要从加密的第一子参数组中截取出与待加密子数据同样数据长度的第三子参数组，再将该第三子参数组与对应的待加密数据通过异或运算即可得到加密子数据，无需对不足128bit的待加密子数据额外填充冗余数据，避免了带宽被冗余数据的占用。并且，由于SM4算法和异或运算均对输入的数据进行了加密，也保证了数据传输的安全性。图1示出根据本公开一实施方式的数据加密方法的流程图。如图1所示，该方法100可以包括步骤101至步骤107，其可以由发送端实现，也可以由能够提供发送端功能的物理设备来执行，或者也可以由配置在物理设备中的部件来执行，或者还可以是能够实现部分或全部发送端功能的模块来执行等等，本申请对此不作限定。为了便于理解，本公开以发送端为例来描述本公开提供的方法。下面对方法100中的各个步骤做详细说明。在步骤101中，获取待加密数据，并将待加密数据分割为n个待加密子数据，其中n≥1，且至少前n-1个待加密子数据中每个待加密子数据的数据长度为128bit。在步骤102中，获取每个待加密子数据对应的第一子参数组，该第一子参数组的数据长度为128bit。在步骤103中，根据每个待加密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待加密子数据对应的第二子参数组。在步骤104中，将n个待加密子数据中前n-1个待加密子数据中的每个待加密子数据，与前n-1个待加密子数据中的每个待加密子数据对应的第二子参数组进行异或运算，得到n-1个加密子数据。在步骤105中，当第n个待加密子数据的数据长度小于128bit时，在第n个待加密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，该第三子参数组的数据长度等于第n个待加密子数据的数据长度。在步骤106中，将第n个待加密子数据与第三子参数组进行异或运算，得到第n个加密子数据。在步骤107中，将第1个加密子数据至第n个加密子数据依次拼接，得到加密数据，并向接收端发送加密数据。在本公开一实施方式中，待加密数据可以为发送端将要发送给接收端的、且需要进行加密的待传输的数据。待加密子数据可以为发送端以预设的数据分割长度对待加密数据进行分割，所得到的待传输的子数据。其中，该数据分割长度与发送端所采用的加密算法相关。例如，采用SM4国密算法时，数据分割长度可以为128bit。在上述步骤101中，发送端分割得到的前n-1个待加密子数据中每个待加密子数据的数据长度等于128bit，第n个待加密子数据的数据长度可以等于128bit，也可以小于128bit。在本公开一实施方式中，第一子参数组可以包括：帧计数器的计数值、方向位、初始化向量和第一子参数组的标识。其中，帧计数器的计数值可以为：截止目前，发送端的帧计数器所统计的发送端向接收端发送的数据次数。其中，第一子参数组的标识可以与该第一子参数组对应的待加密子数据的标识对应。例如，第1个待加密子数据对应的第一子参数组的标识可以为A1，第2个待加密子数据对应的第一子参数组的标识可以为A2，...，第n个待加密子数据对应的第一子参数组的标识可以为An。在本公开一实施方式中，第一子参数组的数据长度和所包含的参数类型可以是发送端和接收端预先协商好的，该第一子参数组的数据长度指第一子参数组中所包含的所有参数的数据长度之和。例如，帧计数器的计数值对应的数据长度、方向位对应的数据长度、初始化向量对应的数据长度和第一子参数组的标识对应的数据长度之和为128bit。在上述步骤102中，发送端可获取到n个数据长度均为128bit的第一子参数组，且多个第一子参数组之间互不相同。在本公开一实施方式中，共享密钥可以为发送端和接收端预先协商好的、专属于该发送端和该接收端之间的密钥。第二子参数组为加密后的第一子参数组。在上述步骤103中，通过SM4算法，发送端可得到n个加密后的第一子参数组。上述步骤104中的异或运算可以理解为：将待加密子数据与加密后的第一子参数组进行加密，得到加密子数据的运算。在上述步骤104中，由于前n-1个待加密子数据的数据长度均为128bit，且前n-1个第二子参数组的数据长度也均为128bit。因此，通过异或运算，可得到n-1个数据长度为128bit的加密子数据。在本公开一实施方式中，在第n个待加密子数据对应的第二子参数组中截取第三子参数组时，可通过截取第二子参数组的头部数据、中部数据或尾部数据来获取第三子参数组。第三子参数组的数据长度由第n个待加密子数据的数据长度决定。应理解，本领域技术人员可根据实际需求设置截取位置，本公开对此不作限定。在上述步骤105中，由于第n个待加密子数据的数据长度小于128bit，而第n个待加密子数据对应的第二子参数组的数据长度为128bit。因此，发送端从第n个加密子数据对应的第二子参数组中截取出与第n个待加密数据的数据长度相同的第三子参数组。上述步骤106中异或运算可以理解为：将第n个待加密子数据与第三子参数组进行加密，得到第n个加密子数据的运算。在上述步骤106中，由于第n个待加密子数据的数据长度与第三子参数组的数据长度相同，且均小于128bit。因此，通过异或运算，可得到第n个数据长度小于128bit的加密子数据。为了便于理解，下面结合图2进行示例性说明。图2示出根据本公开一实施方式的数据加密方法的示例图。如图2中的所示，其示例性给出了发送端对待加密数据进行加密的过程。发送端获取到待加密数据时，可将待加密数据分割为n个待加密子数据，分别为D1，D2，...，Dn。其中，D1至Dn-1的数据长度均为128bit，假设Dn的数据长度小于128bit。发送端也可获取到每个待加密子数据对应的第一子参数组，分别为A1，A2，...，An，其中，A1至An的数据长度均为128bit。从第1个待加密子数据得到第1个加密子数据的过程为：将第1个待加密子数据D1对应的第一子参数组A1和共享密码SK作为SM4算法的输入，通过SM4算法输出第1个加密后的第一子参数组，即eA1。再将第1个加密后的第一子参数组eA1和第1个待加密子数据D1进行异或运算，得到第1个加密子数据eD1。从第2个待加密子数据得到第2个加密子数据的过程为：将第2个待加密子数据D2对应的第一子参数组A2和共享密码SK作为SM4算法的输入，通过SM4算法输出第2个加密后的第一子参数组，即eA2。再将第2个加密后的第一子参数组eA2和第2个待加密子数据D2进行异或运算，得到第2个加密子数据eD2。从第n个待加密子数据得到第n个加密子数据的过程为：将第n个待加密子数据Dn对应的第一子参数组An和共享密码SK作为SM4算法的输入，通过SM4算法输出第n个加密后的第一子参数组，即eAn。由于第n个加密后的第一子参数组eAn的数据长度为128bit，而第n个待加密子数据Dn的数据长度小于128bit，则对第n个加密后的第一子参数组eAn进行数据截取，得到与第n个待加密子数据Dn的数据长度相同的第三子参数组eBn，再将第三子参数组eBn和第n个待加密子数据Dn进行异或运算，得到第n个加密子数据eDn。之后，发送端将eD1，eD2，...，eDn依次拼接，即可得到加密数据。在上述实施方式中，发送端对待加密数据进行加密时，可将待加密数据以128bit的数据长度分割为n个待加密子数据。针对每个待加密子数据，将待加密子数据对应的第一子参数组和共享密钥作为SM4算法的输入，通过SM4算法输出加密的第一子参数组。若存在第一子参数组对应的待加密子数据的数据长度不足128bit，只需要从加密的第一子参数组中截取出与待加密子数据同样数据长度的第三子参数组，再将该第三子参数组与对应的待加密数据通过异或运算即可得到加密子数据，无需对不足128bit的待加密子数据额外填充冗余数据，避免了带宽被冗余数据的占用。并且，由于SM4算法和异或运算均对输入的数据进行了加密，也保证了数据传输的安全性。在本公开一实施方式中，上述方法100还可以包括：当第n个待加密子数据的数据长度等于128bit时，将第n个待加密子数据与第n个待加密子数据对应的第二子参数组进行异或运算，得到第n个加密子数据。在该实施方式中，在第n个待加密子数据的数据长度等于128bit时，由于与第n个待加密子数据对应的第二子参数组的数据长度也为128bit，则发送端无需对该第二子参数组进行数据截取，直接将第n个待加密子数据与第n个待加密子数据对应的第二子参数组进行异或运算，即可得到第n个加密子数据。换言之，在第n个待加密子数据的数据长度等于128bit时，发送端不执行前述步骤105和步骤106，而是依照步骤104的处理方式得到第n个加密子数据。在本公开一实施方式中，上述方法100还可以包括：获取待加密数据的消息认证码，以及消息认证码对应的第四子参数组，该第四子参数组的数据长度为128bit；根据第四子参数组和共享密钥，基于预设的SM4算法，得到消息认证码对应的第五子参数组；当消息认证码的数据长度小于128bit时，在第五子参数组中进行数据截取，以获取第六子参数组，该第六子参数组的数据长度等于消息认证码的数据长度；将消息认证码与第六子参数组进行异或运算，得到加密消息认证码；此时，步骤107，可以包括：将第1个加密子数据至第n个加密子数据、以及加密消息认证码依次拼接，得到加密数据。在本公开中，消息认证码可用于保证通信数据的完整性，该MAC具有对应的第四子参数组。在本公开一实施方式中，第四子参数组包括：帧计数器的计数值、方向位和初始化向量。其中，帧计数器的计数值为：截止目前，发送端的帧计数器所统计的发送端向接收端发送的数据次数。在本公开一实施方式中，第四子参数组的数据长度和所包含的参数类型是发送端和接收端预先协商好的，该第四子参数组的数据长度指第四子参数组中所包含的所有参数的数据长度之和。在本公开一实施方式中，第五子参数组为加密后的第四子参数组。应理解，在该实施方式中，对第五子参数组进行数据截取时，截取位置的选取方式与前述步骤105中截取位置的选取方式相同，不再赘述。示例性地，如图2中的中的虚线框中所示的内容，其示出了从消息认证码得到加密消息认证码的过程。具体地，将消息认证码MAC对应的第四子参数组A0和共享密码SK作为SM4算法的输入，通过SM4算法输出加密后的第四子参数组，即eA0。假设消息认证码MAC的数据长度小于128bit，而第五子参数组eA0的数据长度等于128bit，则对第五子参数组eA0进行数据截取，得到与消息认证码MAC的数据长度相同的第六子参数组eA0'，再将第六子参数组eA0'和消息认证码MAC进行异或运算，得到加密消息认证码eMAC。之后，可将eD1，...，eDi，...，eDn，eMAC依次拼接，从而得到加密数据。在该实施方式中，发送端可通过上述方式，可得到加密消息认证码，由于在加密数据中携带了加密消息认证码，确保了加密数据的完整性。同时，在消息认证码的数据长度不足128bit时，对消息认证码对应的加密后的第四子参数组进行数据截取，得到与消息认证码数据长度相同的第六子参数组后，再通过异或运算得到加密消息认证码的过程中，未填充额外的无用数据，也避免了无用数据对带宽的占用。在本公开一实施方式中，在得到加密消息认证码的过程中，方法100还可以包括：当消息认证码的数据长度等于128bit时，将消息认证码与消息认证码对应的第五子参数组进行异或运算，得到加密消息认证码。在该实施方式中，在消息认证码的数据长度等于128bit时，发送端无需对第五子参数组进行数据截取，直接将消息认证码与消息认证码对应的第五子参数组进行异或运算，即可得到加密消息认证码。下面，根据待加密数据的不同数据长度，对消息认证码的获取方式进行分别介绍。在本公开一实施方式中，在待加密数据的数据长度大于128bit时，发送端可通过如下方式获取消息认证码：将待加密数据对应的第二参数组与第1个待加密子数据进行异或运算，得到第1加密混淆结果；根据第1加密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；将加密后的第j-1加密混淆结果与第j个待加密子数据进行异或运算，得到第j加密混淆结果，其中2≤j＜n，且j依次取在本公开中，待加密数据具有对应的第二参数组，第二参数组的数据长度为128bit。需要说明的是，第二参数组的获取方式可见后文介绍，在此暂不赘述。该处的异或运算可以理解为：在发送端，对输入的数据进行混淆运算，经过混淆运算所输出的结果可以称为加密混淆结果。在待加密数据的数据长度大于128bit时，发送端可将第二参数组和第1个待加密子数据作为初始输入参数，通过异或运算对其进行混淆，以得到第1加密混淆结果。发送端继续将第1加密混淆结果和共享密钥作为SM4算法的输入参数，通过SM4算法输出加密后的第1加密混淆结果。之后，发送端可执行循环运算，从第2个待加密子数据一直依次迭代混淆和加密至第n-1个待加密子数据。具体地，发送端将加密后的第1加密混淆和第2个待加密子数据进行混淆运算，得到第2加密混淆结果，再将第2加密混淆结果和共享密钥作为SM4算法的输入，通过SM4算法得到加密后的第2加密混淆结果；发送端继续将加密后的第2加密混淆结果和第3个待加密子数据进行混淆运算，得到第3加密混淆结果，再将第3加密混淆结果和共享密钥作为SM4算法的输入，通过SM4算法得到加密后的第3加密混淆结果；…；发送端继续将加密后的第n-2加密混淆结果和第n-1个待加密子数据进行混淆运算，得到第n-1加密混淆结果，再将第n-1加密混淆结果和共享密钥作为SM4算法的输入，通过SM4算法可得到数据长度为128bit的加密后的第n-1加密混淆结果。由于加密后的第n-1加密混淆结果的数据长度为128bit，若第n个待加密子数据的数据长度不足128bit，就无法保证后续正常的迭代混淆。因此，在第n个待加密子数据的数据长度小于128bit时，可采用冗余数据对第n个待加密数据进行填充，使得第n个待加密子数据的数据长度达到128bit。例如，可使用数字“0”来填充第n个待加密子数据中的空缺的比特位，填充后的第n个待加密数据可以记为第n'个待加密子数据。之后，发送端可将加密后的第n-1加密混淆结果和第n'个待加密子数据进行混淆运算，得到第n加密混淆结果，再将第n加密混淆结果和共享密钥作为SM4算法的输入，通过SM4算法输出加密后的第n加密混淆结果。至此，整个迭代混淆和加密过程结束。应理解，整个迭代混淆和加密过程结束后，所得到的加密后的第n加密混淆结果的数据长度为128bit。之后，发送端可对加密后的第n加密混淆结果进行数据截取，将截取得到的数据段作为消息认证码。其中，截取的数据段的数据长度≤128bit。在本公开一实施方式中，在上述获取消息认证码的过程中，当第n个待加密子数据的数据长度等于128bit时，将加密后的第n-1加密混淆结果和第n个待加密子数据进行异或运算，得到第n加密混淆结果，进而根据第n加密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第n加密混淆结果，并在加密后的第n加密混淆结果中进行预设长度的数据截取，以得到消息认证码。由于发送端所生成的加密数据在传输过程中，可能出现被危险的第三方设备截取加密数据的情况。若第三方设备的解密功能强大，就可能出现数据被窃取、篡改、重放攻击等攻击手段，就无法保证接收端接收到的是完整的数据。并且，对于接收端而言，由于其并不知道发送端发送的数据内容，即使接收到的数据不完整，发送端也无法获知，导致出现错误的数据通信。因此，在该实施方式中，发送端在获取消息认证码时，可通过异或运算，将待加密数据的参数组和待加密子数据进行循环地、迭代混淆运算，并结合加密算法，在保证数据安全性的同时，实现了对数据的完整性保护。在本公开一实施方式中，在待加密数据的数据长度等于128bit时，发送端也可通过如下方式，来获取消息认证码：将待加密数据对应的第二参数组与第1个待加密子数据进行异或运算，得到第1加密混淆结果；根据第1加密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；在加密后的第1加密混淆结果中进行预设长度的数据截取，以获取消息认证码。在该实施方式中，若待加密数据的数据长度等于128bit，则该待加密数据只可分割到一个数据长度为128bit的待加密子数据。因此，在获取消息认证码时，发送端无需执行迭代混淆和循环的加密运算，也无需进行冗余数据的填充，直接对该待加密子数据执行一次异或运算、SM4算法以及数据截取，就可得到消息认证码。在本公开一实施方式中，在待加密数据的数据长度小于128bit时，发送端还可通过如下方式，来获取消息认证码：对第1个待加密子数据进行冗余数据填充，得到第1'个待加密子数据，该第1'个待加密子数据的数据长度为128bit；将待加密数据对应的第二参数组与第1'个待加密子数据进行异或运算，得到第1加密混淆结果；根据第1加密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；在加密后的第1加密混淆结果中进行预设长度的数据截取，以获取消息认证码。在该实施方式中，若待加密数据的数据长度小于128bit，则该待加密数据只可分割到一个数据长度小于128bit的待加密子数据。因此，在获取消息认证码时，发送端无需执行迭代混淆和循环的加密运算，但需要进行冗余数据的填充。即，先对该待加密子数据进行冗余数据的填充，将其数据长度填充到128bit，再基于填充后的该待加密子数据，执行一次异或运算、SM4算法以及数据截取，从而得到消息认证码。在本公开一实施方式中，上述待加密数据对应的第二参数组可通过如下方式得到：获取待加密数据对应的第一参数组，该第一参数组的数据长度为128bit；根据第一参数组和共享密钥，基于预设的SM4算法，得到待加密数据对应的第二参数组。在本公开一实施方式中，第一参数组包括：待加密数据的数据长度、帧计数器的计数值、方向位、初始化向量和认证标识。其中，帧计数器的计数值仍旧为：截止目前，发送端的帧计数器所统计的发送端向接收端发送的数据次数。在本公开一实施方式中，第一参数组的数据长度和所包含的参数类型也是发送端和接收端预先协商好的，该第一参数组的数据长度指第一参数组中所包含的所有参数的数据长度之和。在本公开中，第二参数组为加密后的第一参数组，第二参数组的数据长度也为128bit。在该实施方式中，发送端可根据与接收端预先协商好的共享密钥和第一参数组，基于SM4算法，可得到加密的第一参数组为了对消息认证码的获取方式更好的理解，下面结合图2进行示例性说明。如图2中的所示，其示出了消息认证码的获取过程。发送端将待加密数据对应的第一参数组B0和共享密钥SK作为SM4算法的输入，通过SM4算法输出加密后的第一参数组eB0。假设待加密数据的数据长度大于128bit，则发送端继续将第二参数组eB0和第1个待加密子数据D1通过异或运算进行混淆，得到第1加密混淆结果X1，再将第1加密混淆结果X1和共享密钥SK作为SM4算法的输入，通过SM4算法输出加密后的第1加密混淆结果，即eX1。发送端继续将加密后的第1加密混淆eX1和第2个待加密子数据D2通过混淆运算进行混淆，得到第2加密混淆结果X2，再将第2加密混淆结果X2和共享密钥SK作为SM4算法的输入，通过SM4算法得到加密后的第2加密混淆结果eX2。假设第n个待加密子数据Dn的数据长度小于128bit，则发送端对第n个待加密子数据Dn填充冗余数据，得到第n'个待加密子数据Dn'。之后，发送端继续将加密后的第n-1加密混淆结果 eXn-1和第n'个待加密子数据Dn'通过混淆运算进行混淆，得到第n加密混淆结果Xn，再将第n加密混淆结果Xn和共享密钥SK作为SM4算法的输入，通过SM4算法得到加密后的第n加密混淆结果eXn。最后，可从加密后的第n加密混淆结果eXn中截取一定长度的数据，作为如图2中的中所示的消息认证码。在本公开一实施方式中，第一参数组还包括：附加认证数据，该附加认证数据的数据长度为128bit。例如，附加认证数据可以为帧头部部分信息。在本公开一实施方式中，发送端在得到待加密数据对应的第二参数组之后，以及将待加密数据对应的第二参数组与第1个待加密子数据进行异或运算之前，还可以包括如下过程：将第二参数组与附加认证数据进行异或运算，得到附加认证混淆结果；根据附加认证混淆结果和共享密钥，基于预设的SM4算法，得到加密后的附加认证混淆结果；将加密后的附加认证混淆结果作为待加密数据对应的第二参数组。在该实施方式中，发送端还可以将附加认证数据加入前述的循环过程，进行迭代混淆和加密，以进一步提高对数据完整性的保护。示例性地，如图2中的中虚线框所示的内容，发送端在得到第二参数组eB0后，继续将该第二参数组eB0和附加认证数据C0通过异或运算进行混淆，得到附加认证混淆结果X0，再将附加认证混淆结果X0和共享密钥SK作为SM4算法的输入，通过SM4算法输出加密后的附加认证混淆结果，即eX0。此时，将加密后的附加认证混淆结果eX0作为新的第二参数组，继续进入后续的迭代循环过程。图3示出根据本公开一实施方式的数据解密方法的流程图。如图3所示，该方法300可以包括步骤301至步骤307，其可以由接收端实现，也可以由能够提供接收端功能的物理设备来执行，或者也可以由配置在物理设备中的部件来执行，或者还可以是能够实现部分或全部接收端功能的模块来执行等等，本申请对此不作限定。为了便于理解，本公开以接收端为例来描述本公开提供的方法。下面对方法300中的各个步骤做详细说明。在步骤301中，接收发送端的待解密数据，并将待解密数据分割为n个待解密子数据，其中n≥1，且至少前n-1个待解密子数据中每个待解密子数据的数据长度为128bit。在步骤302中，获取每个待解密子数据对应的第一子参数组，该第一子参数组的数据长度为128bit。在步骤303中，根据每个待解密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待解密子数据对应的第二子参数组。在步骤304中，将n个待解密子数据中前n-1个待解密子数据中的每个待解密子数据，与前n-1个待解密子数据中的每个待解密子数据对应的第二子参数组进行异或运算，得到n-1个解密子数据。在步骤305中，当第n个待解密子数据的数据长度小于128bit时，在第n个待解密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，该第三子参数组的数据长度等于第n个待解密子数据的数据长度。在步骤306中，将第n个待解密子数据与第三子参数组进行异或运算，得到第n个解密子数据。在步骤307中，将第1个解密子数据至第n个解密子数据依次拼接，得到解密数据。在本公开中，待解密数据为接收端从发送端接收到的加密数据。待解密子数据为接收端以预设的数据分割长度对待解密数据进行分割得到的多个数据段。在本公开一实施方式中，接收端对待解密数据数据进行分割的数据分割长度与发送端对待加密数据进行分割的数据分割长度是预先协商好的。例如，发送端以128bit的数据分割长度来分割待加密数据时，接收端也以128bit的数据分割长度来分割待解密数据。在上述步骤301中，接收端分割得到的前n-1个待解密子数据中每个待解密子数据的数据长度等于128bit，第n个待解密子数据的数据长度可以等于128bit，也可以小于128bit。在本公开一实施方式中，第一子参数组包括：帧计数器的计数值、方向位、初始化向量和第一子参数组的标识。其中，帧计数器的计数值可以为：截止目前，接收端的帧计数器所统计的接收端从发送端接收到的数据次数。如方法100中的介绍可知，第一子参数组的数据长度和所包含的参数类型是发送端和接收端预先协商好的。因此，在本公开一实施方式中，发送端的待加密子数据对应的第一子参数组的标识和接收端的待解密子数据对应的第一子参数组的标识可以相同。在上述步骤302中，接收端同样可获取到n个数据长度均为128bit的第一子参数组，且多个第一子参数组之间互不相同。在本公开中，待解密子数据对应的第二子参数组也为加密后的第一子参数组。该第二子参数组的数据长度与第一子参数组的数据长度相同。在上述步骤303中，通过SM4算法，接收端同样可得到n个加密后的第一子参数组。上述步骤304中的异或运算可以理解为：将待解密子数据与加密后的第一子参数组进行解密，得到解密子数据的运算。在上述步骤304中，由于前n-1个待解密子数据的数据长度均为128bit，且前n-1个第二子参数组的数据长度也均为128bit。因此，通过异或运算，可得到n-1个数据长度为128bit的解密子数据。在上述步骤305中，由于第n个待解密子数据的数据长度小于128bit，而第n个待解密子数据对应的第二子参数组的数据长度为128bit。因此，接收端可从第n个第二子参数组中截取出与第n个待解密数据的数据长度相同的第三子参数组。上述步骤306中异或运算可以理解为：将待解密子数据与第三子参数组进行解密，得到解密子数据的运算。在上述步骤306中，由于第n个待解密子数据的数据长度与第三子参数组的数据长度相同，且均小于128bit。因此，通过异或运算，可得到第n个数据长度小于128bit的解密子数据。为了便于理解，下面结合图4进行示例性说明。图4示出根据本公开一实施方式的数据解密方法的示例图。如图4中的所示，其示例性给出了接收端对待解密数据进行解密的过程。接收端接收到待解密数据时，可将待解密数据分割为n个待解密子数据，分别为eD1，eD2，...，eDn。其中，eD1至eDn-1的数据长度均为128bit，假设eDn的数据长度小于128bit。接收端也可获取到每个待解密子数据对应的第一子参数组，分别为A1，A2，...，An，其中，A1至An的数据长度均为128bit。从第1个待解密子数据得到第1个解密子数据的过程为：将第1个待解密子数据eD1对应的第一子参数组A1和共享密码SK作为SM4算法的输入，通过SM4算法输出第1个第二子参数组eA1。再将第1个第二子参数组eA1和第1个待解密子数据eD1进行异或运算，得到第1个解密子数据D1。从第2个待解密子数据得到第2个解密子数据的过程为：将第2个待解密子数据eD2对应的第一子参数组A2和共享密码SK作为SM4算法的输入，通过SM4算法输出第2个第二子参数组eA2。再将第2个第二子参数组eA2和第2个待解密子数据eD2进行异或运算，得到第2个解密子数据D2。从第n个待解密子数据得到第n个解密子数据的过程为：将第n个待解密子数据eDn对应的第一子参数组An和共享密码SK作为SM4算法的输入，通过SM4算法输出第n个第二子参数组eAn。由于第n个第二子参数组eAn的数据长度为128bit，而第n个待解密子数据eDn的数据长度小于128bit，则对第n个第二子参数组eAn截取，得到与第n个待解密子数据eDn的数据长度相同的第三子参数组eBn，再将第三子参数组eBn和第n个待解密子数据eDn进行异或运算，得到第n个解密子数据Dn。之后，接收端将D1，D2，...，Dn依次拼接，即可得到解密数据。在上述实施方式中，接收端对待解密数据进行解密时，可将待解密数据以128bit的数据长度分割为n个待解密子数据。针对每个待解密子数据，将待解密子数据对应的第一子参数组和共享密钥作为SM4算法的输入，通过SM4算法输出加密的第一子参数组。若存在第一子参数组对应的待解密子数据的数据长度不足128bit，只需要从加密的第一子参数组中截取与待解密子数据同等数据长度的第三子参数组，再将该第三子参数组与对应的待解密子数据通过异或运算即可得到解密子数据。在本公开一实施方式中，接收端在得到第n个解密子数据时，还可存在如下情况：当第n个待解密子数据的数据长度等于128bit时，将第n个待解密子数据与第n个待解密子数据对应的第二子参数组进行异或运算，得到第n个解密子数据。在该实施方式中，在第n个待解密子数据的数据长度等于128bit时，接收端不执行步骤305和步骤306，而是可依照步骤304的处理方式得到第n个解密子数据。在本公开一实施方式中，上述方法300还可以包括：获取待解密数据的待解密消息认证码，以及获取待解密消息认证码对应的第四子参数组，该第四子参数组的数据长度为128bit；根据第四子参数组和共享密钥，基于预设的SM4算法，得到待解密消息认证码对应的第五子参数组；当待解密消息认证码的数据长度小于128bit时，在第五子参数组中进行数据截取，以获取第六子参数组，该第六子参数组的数据长度等于待解密消息认证码的数据长度；将待解密消息认证码与第六子参数组进行异或运算，得到解密消息认证码。在本公开中，发送端和接收端可预先协商好待解密消息认证码在待解密数据中的位置，接收端可基于协商好的位置，从待解密数据中对应的位置分割得到待解密消息认证码。在本公开一实施方式中，第四子参数组包括：帧计数器的计数值、方向位和初始化向量。其中，帧计数器的计数值为：截止目前，接收端的帧计数器所统计的接收端从发送端接收到的数据的次数。需要说明的是，由于第四子参数组的数据长度和所包含的参数类型是发送端和接收端预先协商好的。因此，在本公开一实施方式中，接收端的待解密消息认证码对应的第四子参数组的标识与发送端的消息认证码对应的第四子参数组的标识相同。在本公开一实施方式中，第五子参数组为加密后的第四子参数组，该第五子参数的数据长度为128bit。在本公开一实施方式中，接收端在得到解密消息认证码时，还可存在如下情况：当待解密消息认证码的数据长度等于128bit时，将待解密消息认证码与待解密消息认证码对应的第五子参数组进行异或运算，得到解密消息认证码。示例性地，如图4中的中的虚线框中所示的内容，其示出了从待解密消息认证码得到解密消息认证码的过程。具体地，将待解密消息认证码eMAC对应的第四子参数组A0和共享密码SK作为SM4算法的输入，通过SM4算法输出第五子参数组eA0。假设待解密消息认证码eMAC的数据长度小于128bit，而第五子参数组eA0的数据长度等于128bit，则对第五子参数组eA0截取，得到与待解密消息认证码eMAC的数据长度相同的第六子参数组eA0'，再将第六子参数组eA0'和待解密消息认证码eMAC进行异或运算，从而得到解密消息认证码MAC。在该实施方式中，在待解密消息认证码的数据长度不足128bit，且第五子参数组的数据长度为128bit时，接收端无需对待解密消息认证码填充冗余数据，而是从第五子参数组截取出与待解密消息认证码的数据长度相同的第六子参数组，再对待解密消息认证码进行解密，从而得到解密消息认证码。在本公开一实施方式中，接收端在得到解密消息认证码之后，还可以包括如下过程：根据解密子数据、共享密钥和待解密数据对应的第二参数组，基于预设的SM4算法和异或运算，获取本地消息认证码；在解密消息认证码与本地消息认证码不同时，生成告警信息，该告警信息用于指示数据完整性校验失败。由于发送端向接收端发送的数据在传输过程中经常被危险的第三方设备截取，在第三方设备的解密功能强大时，可能对数据进行篡改或重放攻击，无法保证接收端接收到的是完整的数据。因此，在该实施方式中，接收端从待解密数据中解密出消息认证码后，可在本地生成一个新的消息认证码。由于解密出的消息认证码表征了发送端在发送数据之前，该数据的数据情况，而本地新生成的消息认证码表征了接收端在接收到待解密数据之后，当前待解密数据的情况。若解密出的消息认证码与本地生成的消息认证码相同，说明待解密数据未被第三方设备篡改或重放攻击，认为待解密数据完整；若解密出的消息认证码与本地生成的消息认证码不同，说明待解密数据被第三方设备进行了篡改或重放攻击，认为待解密数据不完整，则接收端可生成告警信息，以指示数据完整性校验失败。下面，根据待解密数据的不同数据长度，对本地消息认证码的获取方式进行分别介绍。在本公开一实施方式中，在待解密数据的数据长度大于128bit时，接收端可通过如下方式获取本地消息认证码：将待解密数据对应的第二参数组与第1个解密子数据进行异或运算，得到第1解密混淆结果；根据第1解密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；将加密后的第j-1解密混淆结果与第j个解密子数据进行异或运算，得到第j解密混淆结果，其中2≤j＜n，且j依次取在本公开中，该处的异或运算可以理解为：在接收端，对输入的数据进行混淆运算，经过混淆运算所输出的结果可以称为解密混淆结果。在本公开中，接收端的解密子数据也就是发送端的待加密子数据，因此，两者可采用相同的标识。类似地，接收端的解密混淆结果与发送端的加密混淆结果可采用相同的标识，接收端的加密后的解密混淆结果与发送端的加密后的加密混淆结果可采用相同的标识。在本公开一实施方式中，在获取本地消息认证码的过程中，还可以存在如下情况：当第n个解密子数据的数据长度等于128bit时，将加密后的第n-1解密混淆结果和第n个解密子数据进行异或运算，得到第n解密混淆结果，进而根据第n解密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第n解密混淆结果，并在加密后的第n解密混淆结果中进行预设长度的数据截取，以获取本地消息认证码。在该实施方式中，接收端在确定本地消息认证码时，同样可通过异或运算，将每个解密子数据和参数组进行循环地、迭代混淆运算。由于接收端和发送端生成消息认证码的方式相同，从而使得接收端本地生成的消息认证码与解密出的消息认证码可更加准确的比较。在本公开一实施方式中，在待解密数据的数据长度等于128bit时，接收端可通过如下方式获取本地消息认证码：将待解密数据对应的第二参数组与第1个解密子数据进行异或运算，得到第1解密混淆结果；根据第1解密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；在加密后的第1解密混淆结果中进行预设长度的数据截取，以获取本地消息认证码。在该实施方式中，若待解密数据的数据长度等于128bit，则该待解密数据只可分割到一个数据长度为128bit的待解密子数据。因此，在获取本地消息认证码时，接收端无需执行迭代循环运算，也无需进行冗余数据的填充，直接对该待解密子数据执行一次异或运算、SM4算法以及数据截取，就可得到本地消息认证码。在本公开一实施方式中，在待解密数据的数据长度小于128bit时，接收端可通过如下方式获取本地消息认证码：对第1个解密子数据进行冗余数据填充，得到第1'个解密子数据，该第1'个解密子数据的数据长度为128bit；将待解密数据对应的第二参数组和第1'个解密子数据进行异或运算，得到第1解密混淆结果；根据第1解密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；在加密后的第1解密混淆结果中进行预设长度的数据截取，以获取本地消息认证码。在该实施方式中，若待解密数据的数据长度小于128bit，则该待解密数据只可分割到一个数据长度小于128bit的待解密子数据。因此，在获取本地消息认证码时，接收端无需执行迭代循环运算，但需要进行冗余数据的填充。即，先对该待解密子数据进行冗余数据的填充，将其数据长度填充到128bit，再基于填充后的待解密子数据，执行一次异或运算、SM4算法以及数据截取，从而得到本地消息认证码。在本公开一实施方式中，待加密数据对应的第二参数组可通过如下过程得到：获取待解密数据对应的第一参数组，该第一参数组的数据长度为128bit；根据第一参数组和共享密钥，基于预设的SM4算法，得到待解密数据对应的第二参数组。在本公开一实施方式中，该第一参数组包括：待解密数据的数据长度、帧计数器的计数值、方向位、初始化向量和认证标识。其中，帧计数器的计数值仍旧为：截止目前，接收端的帧计数器所统计的接收端从发送端接收到的数据的次数。由于第一参数组的数据长度和所包含的参数类型也是发送端和接收端预先协商好的。因此，在本公开一实施方式中，发送端的第一参数组的标识和接收端的第一参数组的标识可以相同。在本公开中，该第二参数组同样为加密后的第一参数组。相应地，接收端的第二参数组和发送端的第二参数组的标识可以相同。在该实施方式中，接收端也可采取与发送端相同的方式来获取待解密数据对应的第二参数组，从而使得接收端本地生成的消息认证码与解密出的消息认证码可进一步精准的比较。为了对本地消息认证码的获取方式更好的理解，下面结合图4进行示例性说明。如图4中的所示，其示出了本地消息认证码的获取过程。接收端将待解密数据对应的第一参数组B0和共享密钥SK作为SM4算法的输入，通过SM4算法输出第二参数组eB0。接收端继续将第二参数组eB0和第1个解密子数据D1通过异或运算进行混淆，得到第1解密混淆结果X1，再将第1解密混淆结果X1和共享密钥SK作为SM4算法的输入，通过SM4算法输出加密后的第1解密混淆结果，即eX1。接收端继续将加密后的第1解密混淆eX1和第2个解密子数据D2通过混淆运算进行混淆，得到第2解密混淆结果X2，再将第2解密混淆结果X2和共享密钥SK作为SM4算法的输入，通过SM4算法得到加密后的第2解密混淆结果eX2。在第n个解密子数据Dn的数据长度小于128bit时，接收端对其填充冗余数据，得到第n'个解密子数据Dn'。之后，接收端继续将加密后的第n-1解密混淆结果 eXn-1和第n'个解密子数据Dn'通过混淆运算进行混淆，得到第n解密混淆结果Xn，再将第n解密混淆结果Xn和共享密钥SK作为SM4算法的输入，通过SM4算法得到加密后的第n解密混淆结果eXn。最后，从加密后的第n解密混淆结果eXn中截取与解密消息认证码的数据长度相同的数据，作为本地消息认证码mac。之后，通过比较本地消息认证码mac和解密消息认证码MAC是否相同，就可确定接收到的待解密数据是否完整。在本公开一实施方式中，第一参数组还包括：附加认证数据，该附加认证数据的数据长度为128bit。由于第一参数组的数据长度和所包含的参数类型也是发送端和接收端预先协商好的。因此，发送端的附加认证数据和接收端的附加认证数据的标识可以相同。在本公开一实施方式中，接收端在得到待解密数据对应的第二参数组之后，以及将待解密数据对应的第二参数组与第1个待解密子数据进行异或运算之前，还可以包括如下过程：将第二参数组与附加认证数据进行异或运算，得到附加认证混淆结果；根据附加认证混淆结果和共享密钥，基于预设的SM4算法，得到加密后的附加认证混淆结果；将加密后的附加认证混淆结果作为待解密数据对应的第二参数组。示例性地，可见如图4中的中虚线框所示的内容，具体可参照前述方法100中的相关描述，在此不再赘述。在该实施方式中，接收端还可以将附加认证数据加入前述的循环过程，进行迭代混淆和加密，使生成的本地消息认证码更契合解密出的消息认证码。下述为本公开装置实施例，可以用于执行本公开方法实施例。图5示出根据本公开一实施方式的数据加密装置或数据解密装置的结构框图，该装置可以通过软件、硬件或者两者的结合实现成为电子设备的部分或者全部。如图5所示，在装置500为数据加密装置时，该装置500可应用于发送端，该装置500包括：获取模块510，被配置为获取待加密数据，并将待加密数据分割为n个待加密子数据，其中n≥1，且至少前n-1个待加密子数据中每个待加密子数据的数据长度为128bit；获取每个待加密子数据对应的第一子参数组，第一子参数组的数据长度为128bit；处理模块520，被配置为根据每个待加密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待加密子数据对应的第二子参数组；将n个待加密子数据中前n-1个待加密子数据中的每个待加密子数据，与前n-1个待加密子数据中的每个待加密子数据对应的第二子参数组进行异或运算，得到n-1个加密子数据；当第n个待加密子数据的数据长度小于128bit时，在第n个待加密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，第三子参数组的数据长度等于第n个待加密子数据的数据长度；将第n个待加密子数据与第三子参数组进行异或运算，得到第n个加密子数据；发送模块530，被配置为将第1个加密子数据至第n个加密子数据依次拼接，得到加密数据，并向接收端发送加密数据。在本公开一实施方式中，处理模块520，还被配置为当第n个待加密子数据的数据长度等于128bit时，将第n个待加密子数据与第n个待加密子数据对应的第二子参数组进行异或运算，得到第n个加密子数据。在本公开一实施方式中，第一子参数组包括：帧计数器的计数值、方向位、初始化向量和第一子参数组的标识。在本公开一实施方式中，获取模块510，还被配置为获取待加密数据的消息认证码，以及消息认证码对应的第四子参数组，第四子参数组的数据长度为128bit；处理模块520，还被配置为根据第四子参数组和共享密钥，基于预设的SM4算法，得到消息认证码对应的第五子参数组；当消息认证码的数据长度小于128bit时，在第五子参数组中进行数据截取，以获取第六子参数组，第六子参数组的数据长度等于消息认证码的数据长度；将消息认证码与第六子参数组进行异或运算，得到加密消息认证码；将第1个加密子数据至第n个加密子数据依次拼接，得到加密数据，包括：将第1个加密子数据至第n个加密子数据、以及加密消息认证码依次拼接，得到加密数据。在本公开一实施方式中，第四子参数组包括：帧计数器的计数值、方向位和初始化向量。在本公开一实施方式中，在待加密数据的数据长度大于128bit时，处理模块520，还被配置为将待加密数据对应的第二参数组与第1个待加密子数据进行异或运算，得到第1加密混淆结果；根据第1加密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；将加密后的第j-1加密混淆结果与第j个待加密子数据进行异或运算，得到第j加密混淆结果，其中2≤j＜n，且j依次取在本公开一实施方式中，在待加密数据的数据长度等于128bit时，处理模块520，还被配置为将待加密数据对应的第二参数组与第1个待加密子数据进行异或运算，得到第1加密混淆结果；根据第1加密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；获取模块510，还被配置为在加密后的第1加密混淆结果中进行预设长度的数据截取，以获取消息认证码。在本公开一实施方式中，在待加密数据的数据长度小于128bit时，处理模块520，还被配置为对第1个待加密子数据进行冗余数据填充，得到第1'个待加密子数据，第1'个待加密子数据的数据长度为128bit；将待加密数据对应的第二参数组与第1'个待加密子数据进行异或运算，得到第1加密混淆结果；根据第1加密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1加密混淆结果；获取模块510，还被配置为在加密后的第1加密混淆结果中进行预设长度的数据截取，以获取消息认证码。在本公开一实施方式中，获取模块510，还被配置为获取待加密数据对应的第一参数组，第一参数组的数据长度为128bit；处理模块520，还被配置为根据第一参数组和共享密钥，基于预设的SM4算法，得到待加密数据对应的第二参数组。在本公开一实施方式中，第一参数组包括：待加密数据的数据长度、帧计数器的计数值、方向位、初始化向量和认证标识。在本公开一实施方式中，第一参数组还包括：附加认证数据，附加认证数据的数据长度为128bit。在本公开一实施方式中，处理模块520，还被配置为将第二参数组与附加认证数据进行异或运算，得到附加认证混淆结果；根据附加认证混淆结果和共享密钥，基于预设的SM4算法，得到加密后的附加认证混淆结果；将加密后的附加认证混淆结果作为待加密数据对应的第二参数组。如图5所示，在装置500为数据解密装置时，该装置500可应用于接收端，该装置500包括：接收模块530，被配置为接收发送端的待解密数据，并将待解密数据分割为n个待解密子数据，其中n≥1，且至少前n-1个待解密子数据中每个待解密子数据的数据长度为128bit；获取模块510，被配置为获取每个待解密子数据对应的第一子参数组，第一子参数组的数据长度为128bit；处理模块520，被配置为根据每个待解密子数据对应的第一子参数组和共享密钥，基于预设的SM4算法，得到每个待解密子数据对应的第二子参数组；将n个待解密子数据中前n-1个待解密子数据中的每个待解密子数据，与前n-1个待解密子数据中的每个待解密子数据对应的第二子参数组进行异或运算，得到n-1个解密子数据； 当第n个待解密子数据的数据长度小于128bit时，在第n个待解密子数据对应的第二子参数组中进行数据截取，以获取第三子参数组，第三子参数组的数据长度等于第n个待解密子数据的数据长度；将第n个待解密子数据与第三子参数组进行异或运算，得到第n个解密子数据；将第1个解密子数据至第n个解密子数据依次拼接，得到解密数据。在本公开一实施方式中，处理模块520，还被配置为当第n个待解密子数据的数据长度等于128bit时，将第n个待解密子数据与第n个待解密子数据对应的第二子参数组进行异或运算，得到第n个解密子数据。在本公开一实施方式中，第一子参数组包括：帧计数器的计数值、方向位、初始化向量和第一子参数组的标识。在本公开一实施方式中，获取模块510，还被配置为获取待解密数据的待解密消息认证码，以及获取待解密消息认证码对应的第四子参数组，第四子参数组的数据长度为128bit；处理模块520，还被配置为根据第四子参数组和共享密钥，基于预设的SM4算法，得到待解密消息认证码对应的第五子参数组；当待解密消息认证码的数据长度小于128bit时，在第五子参数组中进行数据截取，以获取第六子参数组，第六子参数组的数据长度等于待解密消息认证码的数据长度；将待解密消息认证码与第六子参数组进行异或运算，得到解密消息认证码。在本公开一实施方式中，第四子参数组包括：帧计数器的计数值、方向位和初始化向量。在本公开一实施方式中，处理模块520，还被配置为根据解密子数据、共享密钥和待解密数据对应的第二参数组，基于预设的SM4算法和异或运算，获取本地消息认证码；在解密消息认证码与本地消息认证码不同时，生成告警信息，告警信息用于指示数据完整性校验失败。在本公开一实施方式中，在待解密数据的数据长度大于128bit时，处理模块520，还被配置为将待解密数据对应的第二参数组与第1个解密子数据进行异或运算，得到第1解密混淆结果；根据第1解密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；将加密后的第j-1解密混淆结果与第j个解密子数据进行异或运算，得到第j解密混淆结果，其中2≤j＜n，且j依次取在本公开一实施方式中，在待解密数据的数据长度等于128bit时，处理模块520，还被配置为将待解密数据对应的第二参数组与第1个解密子数据进行异或运算，得到第1解密混淆结果；根据第1解密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；获取模块510，还被配置为在加密后的第1解密混淆结果中进行预设长度的数据截取，以获取本地消息认证码。在本公开一实施方式中，在待解密数据的数据长度小于128bit时，处理模块520，还被配置为对第1个解密子数据进行冗余数据填充，得到第1'个解密子数据，第1'个解密子数据的数据长度为128bit；将待解密数据对应的第二参数组和第1'个解密子数据进行异或运算，得到第1解密混淆结果；根据第1解密混淆结果和共享密钥，基于预设的SM4算法，得到加密后的第1解密混淆结果；获取模块510，还被配置为在加密后的第1解密混淆结果中进行预设长度的数据截取，以获取本地消息认证码。在本公开一实施方式中，获取模块510，还被配置为获取待解密数据对应的第一参数组，第一参数组的数据长度为128bit；处理模块520，还被配置为根据第一参数组和共享密钥，基于预设的SM4算法，得到待解密数据对应的第二参数组。在本公开一实施方式中，第一参数组包括：待解密数据的数据长度、帧计数器的计数值、方向位、初始化向量和认证标识。在本公开一实施方式中，第一参数组还包括：附加认证数据，附加认证数据的数据长度为128bit。在本公开一实施方式中，处理模块520，还被配置为将第二参数组与附加认证数据进行异或运算，得到附加认证混淆结果；根据附加认证混淆结果和共享密钥，基于预设的SM4算法，得到加密后的附加认证混淆结果；将加密后的附加认证混淆结果作为待解密数据对应的第二参数组。本公开还公开了一种电子设备，图6示出根据本公开一实施方式的电子设备的结构框图，如图6所示，该电子设备600包括存储器601和处理器602；其中，该存储器601用于存储一条或多条计算机指令，其中，该一条或多条计算机指令被处理器602执行以实现上述方法步骤。图7是适于用来实现根据本公开一实施方式的数据加密方法或数据解密方法的计算机系统的结构示意图。如图7所示，计算机系统700包括处理单元701，其可以根据存储在只读存储器702中的程序或者从存储部分708加载到随机访问存储器703中的程序而执行上述实施方式中的各种处理。在RAM 703中，还存储有计算机系统700操作所需的各种程序和数据。处理单元701、ROM 702以及RAM 703通过总线704彼此相连。输入/输出接口705也连接至总线704。以下部件连接至I/O接口705：包括键盘、鼠标等的输入部分706；包括诸如阴极射线管、液晶显示器等以及扬声器等的输出部分707；包括硬盘等的存储部分708；以及包括诸如LAN卡、调制解调器等的网络接口卡的通信部分709。通信部分709经由诸如因特网的网络执行通信处理。驱动器710也根据需要连接至I/O接口705。可拆卸介质711，诸如磁盘、光盘、磁光盘、半导体存储器等等，根据需要安装在驱动器710上，以便于从其上读出的计算机程序根据需要被安装入存储部分708。其中，处理单元701可实现为CPU、GPU、TPU、FPGA、NPU等处理单元。附图中的流程图和框图，图示了按照本公开各种实施方式的系统、方法和计算机程序产品的可能实现的体系架构、功能和操作。在这点上，路程图或框图中的每个方框可以代表一个模块、程序段或代码的一部分，所述模块、程序段或代码的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。也应当注意，在有些作为替换的实现中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个接连地表示的方框实际上可以基本并行地执行，它们有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图和/或流程图中的每个方框、以及框图和/或流程图中的方框的组合，可以用执行规定的功能或操作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。描述于本公开实施方式中所涉及到的单元或模块可以通过软件的方式实现，也可以通过硬件的方式来实现。所描述的单元或模块也可以设置在处理器中，这些单元或模块的名称在某种情况下并不构成对该单元或模块本身的限定。作为另一方面，本公开还提供了一种芯片，该芯片包括至少一个处理器，可用于实现上述方法实施例中发送端或接收端所涉及的功能。在一种可能的设计中，该芯片还包括存储器，该存储器用于保存程序指令和数据，存储器位于处理器之内或处理器之外。作为另一方面，本公开还提供了一种计算机可读存储介质，该计算机可读存储介质可以是上述实施方式中所述装置中所包含的计算机可读存储介质；也可以是单独存在，未装配入设备中的计算机可读存储介质。计算机可读存储介质存储有一个或者一个以上程序，所述程序被一个或者一个以上的处理器用来执行描述于本公开的方法。作为另一方面，本公开还提供一种计算机程序产品，包括计算机程序/指令，当计算机程序/指令被允许时，实现数据加密方法或数据解密方法。以上描述仅为本公开的较佳实施例以及对所运用技术原理的说明。本领域技术人员应当理解，本公开中所涉及的发明范围，并不限于上述技术特征的特定组合而成的技术方案，同时也应涵盖在不脱离所述发明构思的情况下，由上述技术特征或其等同特征进行任意组合而形成的其它技术方案。例如上述特征与本公开中公开的具有类似功能的技术特征进行互相替换而形成的技术方案。
