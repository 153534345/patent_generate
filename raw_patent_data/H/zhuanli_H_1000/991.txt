标题title
数据处理方法及相关装置
摘要abst
本申请提供了一种数据处理方法及相关装置，该方法包括：获取缓存队列中包括的业务数据包的数量K，缓存队列中包括的业务数据包来自第二设备，K为大于0的整数；从多个预设数量范围中确定K所在的预设数量范围；基于K所在的预设数量范围确定递交时间间隔，递交时间间隔为相邻两次将缓存队列中包括的业务数据包递交至应用层的时间间隔。也就是说，根据缓存队列中业务数据包的数量K和预设数量范围实时调整递包速度，可将缓存队列的实际长度维持在满足业务实时性要求的长度区间，这样既能保证业务的实时性要求，又有利于平滑空口传输的抖动，提高用户的业务体验。
权利要求书clms
1.一种数据处理方法，其特征在于，应用于第一设备，所述方法包括：获取缓存队列中包括的业务数据包的数量K，所述缓存队列中包括的业务数据包来自第二设备，所述K为大于0的整数；从多个预设数量范围中确定所述K所在的预设数量范围；基于所述K所在的预设数量范围确定递交时间间隔，所述递交时间间隔为相邻两次将所述缓存队列中包括的业务数据包递交至应用层的时间间隔。2.根据权利要求1所述的方法，其特征在于，所述多个预设数量范围包括以下范围中的一项或者多项：第一预设数量范围，第二预设数量范围，所述第三预设数量范围，第二预设数量范围，所述第三预设数量范围和预设数量范围实时调整递包速度，可将缓存队列的实际长度维持在满足业务实时性要求的长度区间，这样既能保证业务的实时性要求，又有利于平滑空口传输的抖动，进而提高用户的业务体验。在一种可能的实现中，所述多个预设数量范围包括以下范围中的一项或者多项：第一预设数量范围，第二预设数量范围，所述第三预设数量范围，有利于增大缓存队列长度至满足业务实时性要求的长度区间；当S2＜K≤S3时，通过加快递包速度，可降低缓存队列长度至满足业务实时性要求的长度区间；当K＞S2时，通过进一步加快递包速度，可更快速地降低缓存队列长度至满足业务实时性要求的长度区间。在一种可能的实现中，任一业务数据包中包括所述任一业务数据包的发送时间戳；所述发包时间间隔v0根据相邻两次发送的业务数据包中包括的发送时间戳确定。在该种实现方式下，通过在业务数据包中携带发送该业务数据包的发送时间戳，有利于接收端在接收到业务数据包后，可以解析并计算出缓存队列中相邻两个数据包的发送间隔。在一种可能的实现中，所述缓存队列中队首的业务数据包的序号为H1，所述缓存队列中队尾的业务数据包的序号为H2，最近一次向所述应用层递交的业务数据包的序号为H0，H0＜H1＜H2；所述方法还包括：接收所述第一设备发送的序号为H的业务数据包；若H＜H0，则丢弃所述序号为H的业务数据包；若K＜N，且H0＜H＜H1，则将所述序号为H的业务数据包插入所述缓存队列的队首，所述N为最大队列长度；若K＜N，且H1＜H＜H2，则将序号为H的业务数据包有序插入所述缓存队列；若K＜N，且H＞H2，则将所述序号为H的业务数据包插入所述缓存队列的队尾。在该种实现方式下，由于缓存队列的最大长度有限，同时递交给应用层的业务数据包序号需要保序处理，因此当发生空口传输抖动而导致接收端短时间收到大量的业务数据包或者出现乱序情况时，不可避免的需要丢弃业务数据包或执行按序向缓存队列插入数据包的步骤，以此来优化性能体验。在一种可能的实现中，所述方法还包括：若K＝N，且H0＜H＜H1，则将所述序号为H的业务数据包递交至所述应用层；若K＝N，且H1＜H＜H2，则在将所述H1对应的业务数据包递交至所述应用层之后，将所述序号为H的业务数据包有序插入所述缓存队列；若K＝N，且H＞H2，则在将所述H1对应的业务数据包递交至所述应用层之后，将所述序号为H的业务数据包插入所述缓存队列的队尾。在一种可能的实现中，所述方法还包括：在第一时间段内接收多个业务数据包；向所述第二设备发送第一确认消息，所述第一确认消息用于确认成功接收所述多个业务数据包；接收来自所述第二设备的第二确认消息，所述第二确认消息用于确认成功接收所述第一确认消息。在该种实现方式下，在接收端每次收到业务数据包后，延迟等待若干时间，进行批量消息的ACK确认，可以保证业务数据包传输的可靠性，以及有效提高网络带宽资源利用率。第二方面，本申请提供了一种数据处理装置，所述数据处理装置为第一设备，该装置包括：获取单元，用于获取缓存队列中包括的业务数据包的数量K，所述缓存队列中包括的业务数据包来自第二设备，所述K为大于0的整数；处理单元，用于从多个预设数量范围中确定所述K所在的预设数量范围；所述处理单元，用于基于所述K所在的预设数量范围确定递交时间间隔，所述递交时间间隔为相邻两次将所述缓存队列中包括的业务数据包递交至应用层的时间间隔。在一种可能的实现中，所述多个预设数量范围包括以下范围中的一项或者多项：第一预设数量范围，第二预设数量范围，所述第三预设数量范围和预设数量范围实时调整递包速度，可将缓存队列的实际长度维持在满足业务实时性要求的长度区间，这样既能保证业务的实时性要求，又有利于平滑空口传输的抖动，进而提高用户的业务体验。下面首先介绍本申请实施例提供的无线通信系统。请参见图1，图1是本申请提供的无线通信系统的示意图。如图1所示，该无线通信系统可包括多个电子设备。其中，各个电子设备可以与无线通信系统中的其他电子设备通信。本申请实施例对电子设备的类型不做具体限定，例如电子设备可以为手机、平板电脑、个人数字助理、可穿戴设备、膝上型计算机等便携式电子设备，也可以为台式计算机等非便携式电子设备。电子设备的示例包括但不限于搭载iOS、android、microsoft或者其他操作系统的电子设备。为方便描述，本申请实施例主要以搭载microsoft操作系统的电子设备与搭载android操作系统的电子设备之间的交互为例进行示意性说明。可以理解，终端设备通常可以通过与一个或多个输入设备连接，以实现相应功能。例如，个人计算机可以与鼠标连接，通过鼠标实现PC显示屏上光标的移动，以及进一步的文件的打开/删除等功能。PC也可以与键盘连接，通过键盘实现移动PC显示屏上的光标、输入字符、打开/删除文件等功能。又如，平板电脑也可以与鼠标连接，通过鼠标实现平板电脑显示屏上光标的移动，以及打开平板电脑中的应用/视频/音频等功能。本申请实施例中描述的电子设备也可以称作终端设备，其可以是一种具有无线收发功能的设备，具体可以指用户设备、接入终端、用户单元、用户站、移动台、客户终端设备、远方站、远程终端、移动设备、用户终端、无线通信设备、用户代理或用户装置。终端设备还可以是卫星电话、蜂窝电话、智能手机、无线数据卡、无线调制解调器、机器类型通信设备、可以是无绳电话、会话启动协议电话、无线本地环路站、个人数字处理、具有无线通信功能的手持设备、计算设备或连接到无线调制解调器的其它处理设备、车载设备、高空飞机上搭载的通信设备、可穿戴设备、无人机、机器人、智能销售点机、设备到设备通信中的终端、车到一切中的终端、虚拟现实终端设备、增强现实终端设备、工业控制中的无线终端、无人驾驶中的无线终端、远程医疗中的无线终端、智能电网中的无线终端、运输安全中的无线终端、智慧城市中的无线终端、智慧家庭中的无线终端或者未来通信网络中的终端设备等，本申请不作限制。本申请实施例中，用于实现终端设备的功能的装置可以是终端设备；也可以是能够支持终端设备实现该功能的装置，例如芯片系统。该装置可以被安装在终端设备中或者和终端设备匹配使用。本申请实施例中，芯片系统可以由芯片构成，也可以包括芯片和其他分立器件。请参见图2，图2是本申请提供的电子设备的结构示意图。如图2所示，该电子设备100可以是图1所示的无线通信系统中的电子设备。应该理解的是，电子设备100可以具有比图中所示的更多的或者更少的部件，可以组合两个或多个的部件，或者可以具有不同的部件配置。图中所示出的各种部件可以在包括一个或多个信号处理和/或专用集成电路在内的硬件、软件、或硬件和软件的组合中实现。如图2所示，电子设备100可以包括处理器110，外部存储器接口120，内部存储器121，通用串行总线接口130，充电管理模块140，电源管理模块141，电池142，天线1，天线2，移动通信模块150，无线通信模块160，音频模块170，扬声器170A，受话器170B，麦克风170C，耳机接口170D，传感器模块180，按键190，马达191，指示器192，摄像头193，显示屏194，以及用户标识模块卡接口195等。其中传感器模块180可以包括压力传感器180A，陀螺仪传感器180B，气压传感器180C，加速度传感器180E，距离传感器180F，指纹传感器180H，温度传感器180J，触摸传感器180K，环境光传感器180L等。可以理解的是，本申请实施例示意的结构并不构成对电子设备100的具体限定。在本申请另一些实施例中，电子设备100可以包括比图示更多或更少的部件，或者组合某些部件，或者拆分某些部件，或者不同的部件布置。图示的部件可以以硬件，软件或软件和硬件的组合实现。处理器110可以包括一个或多个处理模块，例如：处理器110可以包括应用处理器，调制解调处理器，图形处理器，图像信号处理器，控制器，存储器，视频编解码器，数字信号处理器，基带处理器，和/或神经网络处理器等。其中，不同的处理模块可以是独立的器件，也可以集成在一个或多个处理器中。其中，控制器可以是电子设备100的神经中枢和指挥中心。控制器可以根据指令操作码和时序信号，产生操作控制信号，完成取指令和执行指令的控制。处理器110中还可以设置存储器，用于存储指令和数据。在一些实施例中，处理器110中的存储器为高速缓冲存储器。该存储器可以保存处理器110刚用过或循环使用的指令或数据。如果处理器110需要再次使用该指令或数据，可从所述存储器中直接调用。避免了重复存取，减少了处理器110的等待时间，因而提高了系统的效率。在本申请实施例中，存储器存储了使得电子设备执行本申请实施例提供的数据处理方法的指令，关于本申请提供的数据处理方法可参照后续实施例的相关描述。在一些实施例中，处理器110可以包括一个或多个接口。接口可以包括集成电路接口，集成电路内置音频接口，脉冲编码调制接口，通用异步收发传输器接口，移动产业处理器接口，通用输入输出接口，用户标识模块接口，和/或通用串行总线接口等。I2C接口是一种双向同步串行总线，包括一根串行数据线和一根串行时钟线。在一些实施例中，处理器110可以包含多组I2C总线。处理器110可以通过不同的I2C总线接口分别耦合触摸传感器180K，充电器，闪光灯，摄像头193等。例如：处理器110可以通过I2C接口耦合触摸传感器180K，使处理器110与触摸传感器180K通过I2C总线接口通信，实现电子设备100的触摸功能。I2S接口可以用于音频通信。在一些实施例中，处理器110可以包含多组I2S总线。处理器110可以通过I2S总线与音频模块170耦合，实现处理器110与音频模块170之间的通信。在一些实施例中，音频模块170可以通过I2S接口向无线通信模块160传递音频信号，实现通过蓝牙耳机接听电话的功能。PCM接口也可以用于音频通信，将模拟信号抽样，量化和编码。在一些实施例中，音频模块170与无线通信模块160可以通过PCM总线接口耦合。在一些实施例中，音频模块170也可以通过PCM接口向无线通信模块160传递音频信号，实现通过蓝牙耳机接听电话的功能。所述I2S接口和所述PCM接口都可以用于音频通信。UART接口是一种通用串行数据总线，用于异步通信。该总线可以为双向通信总线。它将要传输的数据在串行通信与并行通信之间转换。在一些实施例中，UART接口通常被用于连接处理器110与无线通信模块160。例如：处理器110通过UART接口与无线通信模块160中的蓝牙模块通信，实现蓝牙功能。在一些实施例中，音频模块170可以通过UART接口向无线通信模块160传递音频信号，实现通过蓝牙耳机播放音乐的功能。MIPI接口可以被用于连接处理器110与显示屏194，摄像头193等外围器件。MIPI接口包括摄像头串行接口，显示屏串行接口等。在一些实施例中，处理器110和摄像头193通过CSI接口通信，实现电子设备100的拍摄功能。处理器110和显示屏194通过DSI接口通信，实现电子设备100的显示功能。GPIO接口可以通过软件配置。GPIO接口可以被配置为控制信号，也可被配置为数据信号。在一些实施例中，GPIO接口可以用于连接处理器110与摄像头193，显示屏194，无线通信模块160，音频模块170，传感器模块180等。GPIO接口还可以被配置为I2C接口，I2S接口，UART接口，MIPI接口等。USB接口130是符合USB标准规范的接口，具体可以是Mini USB接口，Micro USB接口，USB Type C接口等。USB接口130可以用于连接充电器为电子设备100充电，也可以用于电子设备100与外围设备之间传输数据。也可以用于连接耳机，通过耳机播放音频。该接口还可以用于连接其他电子设备，例如AR设备等。可以理解的是，本申请实施例示意的各模块间的接口连接关系，只是示意性说明，并不构成对电子设备100的结构限定。在本申请另一些实施例中，电子设备100也可以采用上述实施例中不同的接口连接方式，或多种接口连接方式的组合。充电管理模块140用于从充电器接收充电输入。其中，充电器可以是无线充电器，也可以是有线充电器。在一些有线充电的实施例中，充电管理模块140可以通过USB接口130接收有线充电器的充电输入。在一些无线充电的实施例中，充电管理模块140可以通过电子设备100的无线充电线圈接收无线充电输入。充电管理模块140为电池142充电的同时，还可以通过电源管理模块141为电子设备供电。电源管理模块141用于连接电池142，充电管理模块140与处理器110。电源管理模块141接收电池142和/或充电管理模块140的输入，为处理器110，内部存储器121，外部存储器，显示屏194，摄像头193，和无线通信模块160等供电。电源管理模块141还可以用于监测电池容量，电池循环次数，电池健康状态等参数。在其他一些实施例中，电源管理模块141也可以设置于处理器110中。在另一些实施例中，电源管理模块141和充电管理模块140也可以设置于同一个器件中。电子设备100的无线通信功能可以通过天线1，天线2，移动通信模块150，无线通信模块160，调制解调处理器以及基带处理器等实现。天线1和天线2用于发射和接收电磁波信号。电子设备100中的每个天线可用于覆盖单个或多个通信频带。不同的天线还可以复用，以提高天线的利用率。例如：可以将天线1复用为无线局域网的分集天线。在另外一些实施例中，天线可以和调谐开关结合使用。移动通信模块150可以提供应用在电子设备100上的包括2G/3G/4G/5G等无线通信的解决方案。移动通信模块150可以包括至少一个滤波器，开关，功率放大器，低噪声放大器等。移动通信模块150可以由天线1接收电磁波，并对接收的电磁波进行滤波，放大等处理，传送至调制解调处理器进行解调。移动通信模块150还可以对经调制解调处理器调制后的信号放大，经天线1转为电磁波辐射出去。在一些实施例中，移动通信模块150的至少部分功能模块可以被设置于处理器110中。在一些实施例中，移动通信模块150的至少部分功能模块可以与处理器110的至少部分模块被设置在同一个器件中。调制解调处理器可以包括调制器和解调器。其中，调制器用于将待发送的低频基带信号调制成中高频信号。解调器用于将接收的电磁波信号解调为低频基带信号。随后解调器将解调得到的低频基带信号传送至基带处理器处理。低频基带信号经基带处理器处理后，被传递给应用处理器。应用处理器通过音频设备输出声音信号，或通过显示屏194显示图像或视频。在一些实施例中，调制解调处理器可以是独立的器件。在另一些实施例中，调制解调处理器可以独立于处理器110，与移动通信模块150或其他功能模块设置在同一个器件中。无线通信模块160可以提供应用在电子设备100上的包括无线局域网网络)，蓝牙，全球导航卫星系统，调频，近距离无线通信技术，红外技术等无线通信的解决方案。无线通信模块160可以是集成至少一个通信处理模块的一个或多个器件。无线通信模块160经由天线2接收电磁波，将电磁波信号调频以及滤波处理，将处理后的信号发送到处理器110。无线通信模块160还可以从处理器110接收待发送的信号，对其进行调频，放大，经天线2转为电磁波辐射出去。在本申请实施例中，电子设备100支持BLE，可基于BLE和其他设备通信。电子设备100可以在BLE广播信道上发送或者扫描本申请实施例提供的BLE广播。在一些实施例中，电子设备100的天线1和移动通信模块150耦合，天线2和无线通信模块160耦合，使得电子设备100可以通过无线通信技术与网络以及其他设备通信。所述无线通信技术可以包括全球移动通讯系统，通用分组无线服务，码分多址接入，宽带码分多址，时分码分多址，长期演进，BT，GNSS，WLAN，NFC，FM，和/或IR技术等。所述GNSS可以包括全球卫星定位系统，全球导航卫星系统，北斗卫星导航系统，准天顶卫星系统和/或星基增强系统。在本申请的一些实施例中，电子设备100可以通过无线通信技术获取自身的位置信息。电子设备100通过GPU，显示屏194，以及应用处理器等实现显示功能。GPU为图像处理的微处理器，连接显示屏194和应用处理器。GPU用于执行数学和几何计算，用于图形渲染。处理器110可包括一个或多个GPU，其执行程序指令以生成或改变显示信息。显示屏194用于显示图像，视频等。显示屏194包括显示面板。显示面板可以采用液晶显示屏，有机发光二极管，有源矩阵有机发光二极体或主动矩阵有机发光二极体，柔性发光二极管，Miniled，MicroLed，Micro-oLed，量子点发光二极管等。在一些实施例中，电子设备100可以包括1个或N个显示屏194，N为大于1的正整数。电子设备100可以通过ISP，摄像头193，视频编解码器，GPU，显示屏194以及应用处理器等实现拍摄功能。ISP用于处理摄像头193反馈的数据。例如，拍照时，打开快门，光线通过镜头被传递到摄像头感光元件上，光信号转换为电信号，摄像头感光元件将所述电信号传递给ISP处理，转化为肉眼可见的图像。ISP还可以对图像的噪点，亮度，肤色进行算法优化。ISP还可以对拍摄场景的曝光，色温等参数优化。在一些实施例中，ISP可以设置在摄像头193中。摄像头193用于捕获静态图像或视频。物体通过镜头生成光学图像投射到感光元件。感光元件可以是电荷耦合器件或互补金属氧化物半导体光电晶体管。感光元件把光信号转换成电信号，之后将电信号传递给ISP转换成数字图像信号。ISP将数字图像信号输出到DSP加工处理。DSP将数字图像信号转换成标准的RGB，YUV等格式的图像信号。在一些实施例中，电子设备100可以包括1个或N个摄像头193，N为大于1的正整数。数字信号处理器用于处理数字信号，除了可以处理数字图像信号，还可以处理其他数字信号。例如，当电子设备100在频点选择时，数字信号处理器用于对频点能量进行傅里叶变换等。视频编解码器用于对数字视频压缩或解压缩。电子设备100可以支持一种或多种视频编解码器。这样，电子设备100可以播放或录制多种编码格式的视频，例如：动态图像专家组1，MPEG2，MPEG3，MPEG4等。NPU为神经网络计算处理器，通过借鉴生物神经网络结构，例如借鉴人脑神经元之间传递模式，对输入信息快速处理，还可以不断的自学习。通过NPU可以实现电子设备100的智能认知等应用，例如：图像识别，人脸识别，语音识别，文本理解等。外部存储器接口120可以用于连接外部存储卡，例如Micro SD卡，实现扩展电子设备100的存储能力。外部存储卡通过外部存储器接口120与处理器110通信，实现数据存储功能。例如将音乐，视频等文件保存在外部存储卡中。内部存储器121可以用于存储计算机可执行程序代码，所述可执行程序代码包括指令。处理器110通过运行存储在内部存储器121的指令，从而执行电子设备100的各种功能应用以及数据处理。内部存储器121可以包括存储程序区和存储数据区。其中，存储程序区可存储操作系统，至少一个功能所需的应用程序等。存储数据区可存储电子设备100使用过程中所创建的数据等。此外，内部存储器121可以包括高速随机存取存储器，还可以包括非易失性存储器，例如至少一个磁盘存储器件，闪存器件，通用闪存存储器等。电子设备100可以通过音频模块170，扬声器170A，受话器170B，麦克风170C，耳机接口170D，以及应用处理器等实现音频功能。例如音乐播放，录音等。音频模块170用于将数字音频信息转换成模拟音频信号输出，也用于将模拟音频输入转换为数字音频信号。音频模块170还可以用于对音频信号编码和解码。在一些实施例中，音频模块170可以设置于处理器110中，或将音频模块170的部分功能模块设置于处理器110中。扬声器170A，也称“喇叭”，用于将音频电信号转换为声音信号。电子设备100可以通过扬声器170A收听音乐，或收听免提通话。受话器170B，也称“听筒”，用于将音频电信号转换成声音信号。当电子设备100接听电话或语音信息时，可以通过将受话器170B靠近人耳接听语音。在本申请的一些实施例中，受话器可用于接收用户输入的用于发送求救广播包的语音。麦克风170C，也称“话筒”，“传声器”，用于将声音信号转换为电信号。当拨打电话或发送语音信息时，用户可以通过人嘴靠近麦克风170C发声，将声音信号输入到麦克风170C。电子设备100可以设置至少一个麦克风170C。在另一些实施例中，电子设备100可以设置两个麦克风170C，除了采集声音信号，还可以实现降噪功能。在另一些实施例中，电子设备100还可以设置三个，四个或更多麦克风170C，实现采集声音信号，降噪，还可以识别声音来源，实现定向录音功能等。在本申请的一些实施例中，麦克风可用于接收用户输入的用于发送求救广播包的语音。耳机接口170D用于连接有线耳机。耳机接口170D可以是USB接口130，也可以是3.5mm的开放移动电子设备平台标准接口，美国蜂窝电信工业协会标准接口。压力传感器180A用于感受压力信号，可以将压力信号转换成电信号。在一些实施例中，压力传感器180A可以设置于显示屏194。压力传感器180A的种类很多，如电阻式压力传感器，电感式压力传感器，电容式压力传感器等。电容式压力传感器可以是包括至少两个具有导电材料的平行板。当有力作用于压力传感器180A，电极之间的电容改变。电子设备100根据电容的变化确定压力的强度。当有触摸操作作用于显示屏194，电子设备100根据压力传感器180A检测所述触摸操作强度。电子设备100也可以根据压力传感器180A的检测信号计算触摸的位置。在一些实施例中，作用于相同触摸位置，但不同触摸操作强度的触摸操作，可以对应不同的操作指令。例如：当有触摸操作强度小于第一压力阈值的触摸操作作用于短消息应用图标时，执行查看短消息的指令。当有触摸操作强度大于或等于第一压力阈值的触摸操作作用于短消息应用图标时，执行新建短消息的指令。在本申请的一些实施例中，压力传感器可用于检测用户输入的用于发送求救广播包的手势。陀螺仪传感器180B可以用于确定电子设备100的运动姿态。在一些实施例中，可以通过陀螺仪传感器180B确定电子设备100围绕三个轴的角速度。陀螺仪传感器180B可以用于拍摄防抖。示例性的，当按下快门，陀螺仪传感器180B检测电子设备100抖动的角度，根据角度计算出镜头模组需要补偿的距离，让镜头通过反向运动抵消电子设备100的抖动，实现防抖。陀螺仪传感器180B还可以用于导航，体感游戏场景。气压传感器180C用于测量气压。在一些实施例中，电子设备100通过气压传感器180C测得的气压值计算海拔高度，辅助定位和导航。加速度传感器180E可检测电子设备100在各个方向上加速度的大小。当电子设备100静止时可检测出重力的大小及方向。还可以用于识别电子设备姿态，应用于横竖屏切换，计步器等应用。距离传感器180F，用于测量距离。电子设备100可以通过红外或激光测量距离。在一些实施例中，拍摄场景，电子设备100可以利用距离传感器180F测距以实现快速对焦。环境光传感器180L用于感知环境光亮度。电子设备100可以根据感知的环境光亮度自适应调节显示屏194亮度。环境光传感器180L也可用于拍照时自动调节白平衡。环境光传感器180L还可以与接近光传感器配合，检测电子设备100是否在口袋里，以防误触。指纹传感器180H用于采集指纹。电子设备100可以利用采集的指纹特性实现指纹解锁，访问应用锁，指纹拍照，指纹接听来电等。温度传感器180J用于检测温度。在一些实施例中，电子设备100利用温度传感器180J检测的温度，执行温度处理策略。例如，当温度传感器180J上报的温度超过阈值，电子设备100执行降低位于温度传感器180J附近的处理器的性能，以便降低功耗实施热保护。在另一些实施例中，当温度低于另一阈值时，电子设备100对电池142加热，以避免低温导致电子设备100异常关机。在其他一些实施例中，当温度低于又一阈值时，电子设备100对电池142的输出电压执行升压，以避免低温导致的异常关机。触摸传感器180K，也称“触控面板”。触摸传感器180K可以设置于显示屏194，由触摸传感器180K与显示屏194组成触摸屏，也称“触控屏”。触摸传感器180K用于检测作用于其上或附近的触摸操作。触摸传感器可以将检测到的触摸操作传递给应用处理器，以确定触摸事件类型。可以通过显示屏194提供与触摸操作相关的视觉输出。在另一些实施例中，触摸传感器180K也可以设置于电子设备100的表面，与显示屏194所处的位置不同。按键190包括开机键，音量键等。按键190可以是机械按键。也可以是触摸式按键。电子设备100可以接收按键输入，产生与电子设备100的用户设置以及功能控制有关的键信号输入。马达191可以产生振动提示。马达191可以用于来电振动提示，也可以用于触摸振动反馈。例如，作用于不同应用的触摸操作，可以对应不同的振动反馈效果。作用于显示屏194不同区域的触摸操作，马达191也可对应不同的振动反馈效果。不同的应用场景也可以对应不同的振动反馈效果。触摸振动反馈效果还可以支持自定义。指示器192可以是指示灯，可以用于指示充电状态，电量变化，也可以用于指示消息，未接来电，通知等。SIM卡接口195用于连接SIM卡。SIM卡可以通过插入SIM卡接口195，或从SIM卡接口195拔出，实现和电子设备100的接触和分离。电子设备100可以支持1个或N个SIM卡接口，N为大于1的正整数。SIM卡接口195可以支持Nano SIM卡，Micro SIM卡，SIM卡等。同一个SIM卡接口195可以同时插入多张卡。所述多张卡的类型可以相同，也可以不同。SIM卡接口195也可以兼容不同类型的SIM卡。SIM卡接口195也可以兼容外部存储卡。电子设备100通过SIM卡和网络交互，实现通话以及数据通信等功能。在一些实施例中，电子设备100采用eSIM，即：嵌入式SIM卡。eSIM卡可以嵌在电子设备100中，不能和电子设备100分离。请参见图3，图3是本申请提供的电子设备的软件结构框图。如图3所示，分层架构将软件分成若干个层，每一层都有清晰的角色和分工。层与层之间通过软件接口通信。在一些实施例中，将Android系统分为四层，从上至下分别为应用程序层，应用程序框架层，安卓运行时和系统库，以及内核层。需要说明的是，本申请实施例中涉及的第一设备向应用层递交业务数据包具体可以理解为是第一设备的系统库通过第一设备的应用程序框架层向第一设备的应用层递交业务数据包。应用程序层可以包括一系列应用程序包。如图3所示，应用程序包可以包括相机，图库，日历，通话，地图，导航，WLAN，蓝牙，音乐，视频，短信息等应用程序。应用程序框架层为应用程序层的应用程序提供应用编程接口和编程框架。应用程序框架层包括一些预先定义的函数。如图3所示，应用程序框架层可以包括窗口管理器，内容提供器，视图系统，电话管理器，资源管理器，通知管理器等。窗口管理器用于管理窗口程序。窗口管理器可以获取显示屏大小，判断是否有状态栏，锁定屏幕，截取屏幕等。内容提供器用来存放和获取数据，并使这些数据可以被应用程序访问。所述数据可以包括视频，图像，音频，拨打和接听的电话，浏览历史和书签，电话簿等。视图系统包括可视控件，例如显示文字的控件，显示图片的控件等。视图系统可用于构建应用程序。显示界面可以由一个或多个视图组成的。例如，包括短信通知图标的显示界面，可以包括显示文字的视图以及显示图片的视图。电话管理器用于提供电子设备100的通信功能。例如通话状态的管理。资源管理器为应用程序提供各种资源，比如本地化字符串，图标，图片，布局文件，视频文件等等。通知管理器使应用程序可以在状态栏中显示通知信息，可以用于传达告知类型的消息，可以短暂停留后自动消失，无需用户交互。比如通知管理器被用于告知下载完成，消息提醒等。通知管理器还可以是以图表或者滚动条文本形式出现在系统顶部状态栏的通知，例如后台运行的应用程序的通知，还可以是以对话界面形式出现在屏幕上的通知。例如在状态栏提示文本信息，发出提示音，电子设备振动，指示灯闪烁等。Android runtime包括核心库和虚拟机。Android runtime负责安卓系统的调度和管理。核心库包含两部分：一部分是java语言需要调用的功能函数，另一部分是安卓的核心库。应用程序层和应用程序框架层运行在虚拟机中。虚拟机将应用程序层和应用程序框架层的java文件执行为二进制文件。虚拟机用于执行对象生命周期的管理，堆栈管理，线程管理，安全和异常的管理，以及垃圾回收等功能。系统库可以包括多个功能模块。例如：表面管理器，媒体库，三维图形处理库，2D图形引擎等。表面管理器用于对显示子系统进行管理，并且为多个应用程序提供了2D和3D图层的融合。媒体库支持多种常用的音频，视频格式回放和录制，以及静态图像文件等。媒体库可以支持多种音视频编码格式，例如:MPEG4，H.264，MP3，AAC，AMR，JPG，PNG等。三维图形处理库用于实现三维图形绘图，图像渲染，合成，和图层处理等。2D图形引擎是2D绘图的绘图引擎。内核层是硬件和软件之间的层。内核层至少包含显示驱动，摄像头驱动，音频驱动，传感器驱动。在介绍本申请提供的数据处理方法之前，先对本申请的应用场景进行简单介绍。超级终端间在进行大量的视频流、语音流等数据传输时，如超级键鼠、超级通话等业务数据的传输中，由于发送端是均匀发送数据包的，例如每隔3ms发送一次数据包，但如果空口传输不均匀或抖动，将出现接收端在一段时间内一直收不到包，而在后面几毫秒的短时间内收到之前大量数据包的情况发生，由于接收端每接收到一个数据包，就会立刻将接收到的数据包递交给接收端的应用层，进而容易出现超级鼠标不跟手，或超级通话卡顿等问题。示例性地，请参见图4，图4是本申请实施例提供的空口传输抖动的场景示意图。如图4所示，发送端每隔3ms发送一次数据包，发送端与接收端的传输时延为20ms，由于空口传输抖动，导致接收端在收到数据包4后的80ms一直收不到包，而在后面几毫秒的短时间内收到大量数据包的情况发生。由于接收端每接收到一个数据包，就会立刻将接收到的数据包递交给接收端的应用层，因此，应用层也会在短时间内接收到大量数据包，进而容易出现卡顿，延迟等现象，严重影响业务体验。基于此，本申请提供了一种数据处理方法，可平滑空口传输的抖动，提高用户的业务体验。下面基于图1所示的无线通信系统以及图2或图3所示的电子设备，结合具体的应用场景对本申请实施例提供的数据处理方法进行说明。请参见图5，图5是本申请实施例提供的数据处理方法的流程示意图。其中图5中的第一设备终端设备1，第二设备例如可以是终端设备2等，在此不做限制。如图5所示，该数据处理方法包括如下步骤S501～S503。图5所示的方法执行主体可以为第一设备。或者，图5所示的方法执行主体可以为第一设备中的芯片，以下本申请实施例以第一设备为例进行示意性说明。其中：S501、第一设备获取缓存队列中包括的业务数据包的数量K。在一些可行的实施方式中，第二设备可以向第一设备发送业务数据包，其中，第二设备相邻两次向第一设备发送业务数据包的时间间隔可以是均匀的，也可以不均匀的，具体根据实际场景确定，在此不做限制。例如，假设第二设备需要发送业务数据包1，业务数据包2，业务数据包3，业务数据包4和业务数据包5，那么相邻2个业务数据包的发包时间间隔可以是均匀的，例如皆为3ms，也就是说，业务数据包2和业务数据包1之间的发包时间间隔为3ms，业务数据包3和业务数据包2之间的发包时间间隔为3ms，业务数据包4和业务数据包3之间的发包时间间隔为3ms，业务数据包5和业务数据包4之间的发包时间间隔为3ms。可选的，相邻2个业务数据包的发包时间间隔也可以是不均匀的，例如业务数据包2和业务数据包1之间的发包时间间隔为3ms，业务数据包3和业务数据包2之间的发包时间间隔为3ms，业务数据包4和业务数据包3之间的发包时间间隔为5ms，业务数据包5和业务数据包4之间的发包时间间隔为4ms等，在此不做限制。为方便理解，以下本申请实施例主要以相邻两次发送业务数据包的时间间隔为均匀发送的为例进行示意性说明。需要说明的是，本申请实施例中涉及的业务数据包具体可以是视频业务的数据包，或者，语音业务的数据包等，在此不做限制。其中，本申请实施例中第二设备发送的业务数据包中还包括第二设备发送该业务数据包时的发送时间戳。示例性地，请参见图6，图6是本申请实施例提供的业务数据包的格式示意图。如图6所示，业务数据包包括包头和报文负载，其中报文负载中包括该业务数据包的发送时间戳和业务数据内容。需要说明的是，由于第二设备发送的业务数据包中包括该业务数据包的发送时间戳，因此第一设备通过接收并解析该业务数据包，可以得到该业务数据包的发送时间戳，进而第一设备后续可以根据相邻两次发送的业务数据包中包括的发送时间戳确定该相邻两次发送的业务数据包的发包时间间隔v0。可理解的，对于第一设备而言，在第一设备新接收到来自第二设备的业务数据包之后，第一设备首先需要判断第一设备的缓存队列中当前缓存的业务数据包的数量是否已经达到最大队列长度N。其中，在一种实现中，若第一设备的缓存队列中当前缓存的业务数据包的数量未达到最大队列长度N，那么第一设备需要比较该新接收到的业务数据包的序号与最近一次向应用层递交的业务数据包的序号的大小。若该新接收到的业务数据包的序号小于最近一次向应用层递交的业务数据包的序号，那么第一设备丢弃该新接收到的业务数据包；若该新接收到的业务数据包的序号大于最近一次向应用层递交的业务数据包的序号，那么第一设备可以将该新接收到的业务数据包有序插入到缓存队列中。例如，若新接收到的业务数据包的序号小于当前缓存队列中队首的业务数据包的序号，且新接收到的业务数据包的序号大于最近一次向应用层递交的业务数据包的序号，那么将新接收到的业务数据包插入缓存队列的队首。又例如，若新接收到的业务数据包的序号大于当前缓存队列中队首的业务数据包的序号，且新接收到的业务数据包的序号小于当前缓存队列中队尾的业务数据包的序号，那么将新接收到的业务数据包插入缓存队列中的正确位置。又例如，若新接收到的业务数据包的序号大于当前缓存队列中队尾的业务数据包的序号，那么将新接收到的业务数据包插入缓存队列的队尾。举例来说，假设缓存队列的最大队列长度为6，且当前缓存队列中一共缓存了4个业务数据包，该4个业务数据包分别为业务数据包4，业务数据包5，业务数据包7，业务数据包8，其中，队首业务数据包即业务数据包4，队尾业务数据包即业务数据包8。其中第一设备最近一次向应用层递交的业务数据包为业务数据包2。其中：①假设第一设备新接收到的来自第二设备的业务数据包为业务数据包1，由于业务数据包1的序号1小于最近一次向应用层递交的业务数据包2的序号2，因此，第一设备丢弃接收到的业务数据包1，因此缓存队列的状态无变化。②假设第一设备新接收到的来自第二设备的业务数据包为业务数据包3，由于业务数据包3的序号3大于最近一次向应用层递交的业务数据包2的序号2，且业务数据包3的序号3小于队首业务数据包的序号，因此，第一设备可将业务数据包3插入缓存队列的队首，因此更新后缓存队列中缓存的业务数据包分别为业务数据包3，业务数据包4，业务数据包5，业务数据包7，业务数据包8；其中，队首业务数据包即业务数据包3，队尾业务数据包即业务数据包8。③假设第一设备新接收到的来自第二设备的业务数据包为业务数据包6，由于业务数据包6的序号6大于队首业务数据包的序号，且业务数据包6的序号6小于队尾业务数据包的序号，因此，第一设备可将业务数据包6插入缓存队列中的正确位置，即插入至业务数据包5之后，业务数据包7之前，因此更新后缓存队列中缓存的业务数据包分别为业务数据包4，业务数据包5，业务数据包6，业务数据包7，业务数据包8；其中，队首业务数据包即业务数据包4，队尾业务数据包即业务数据包8。④假设第一设备新接收到的来自第二设备的业务数据包为业务数据包10，由于业务数据包10的序号10大于队尾业务数据包的序号，因此，第一设备可将业务数据包10插入缓存队列的队尾，因此更新后缓存队列中缓存的业务数据包分别为业务数据包4，业务数据包5，业务数据包7，业务数据包8，业务数据包10；其中，队首业务数据包即业务数据包4，队尾业务数据包即业务数据包10。可选的，在另一种实现中，若第一设备的缓存队列中当前缓存的业务数据包的数量达到最大队列长度N，那么第一设备需要比较该新接收到的业务数据包的序号与最近一次向应用层递交的业务数据包的序号的大小。若该新接收到的业务数据包的序号小于最近一次向应用层递交的业务数据包的序号，那么第一设备丢弃该新接收到的业务数据包；若该新接收到的业务数据包的序号大于最近一次向应用层递交的业务数据包的序号，那么第一设备需要先递交一个业务数据包后，才可以将该新接收到的业务数据包有序插入到缓存队列中。例如，若新接收到的业务数据包的序号小于当前缓存队列中队首的业务数据包的序号，且新接收到的业务数据包的序号大于最近一次向应用层递交的业务数据包的序号，那么第一设备可直接将新接收到的业务数据递交至应用层。又例如，若新接收到的业务数据包的序号大于当前缓存队列中队首的业务数据包的序号，且新接收到的业务数据包的序号小于当前缓存队列中队尾的业务数据包的序号，那么第一设备将当前缓存队列中队首的业务数据包递交给应用层之后，再将新接收到的业务数据包插入缓存队列中的正确位置。又例如，若新接收到的业务数据包的序号大于当前缓存队列中队尾的业务数据包的序号，那么第一设备将当前缓存队列中队首的业务数据包递交给应用层之后，再将新接收到的业务数据包插入缓存队列的队尾。举例来说，假设缓存队列的最大队列长度为4，且当前缓存队列中一共缓存了4个业务数据包，该4个业务数据包分别为业务数据包4，业务数据包5，业务数据包7，业务数据包8，其中，队首业务数据包即业务数据包4，队尾业务数据包即业务数据包8。其中第一设备最近一次向应用层递交的业务数据包为业务数据包2。其中：①假设第一设备新接收到的来自第二设备的业务数据包为业务数据包1，由于业务数据包1的序号1小于最近一次向应用层递交的业务数据包2的序号2，因此，第一设备丢弃接收到的业务数据包1，因此缓存队列的状态无变化。②假设第一设备新接收到的来自第二设备的业务数据包为业务数据包3，由于业务数据包3的序号3大于最近一次向应用层递交的业务数据包2的序号2，且业务数据包3的序号3小于队首业务数据包的序号，因此，第一设备可直接向应用层递交该业务数据包3，因此缓存队列的状态无变化。③假设第一设备新接收到的来自第二设备的业务数据包为业务数据包6，由于业务数据包6的序号6大于队首业务数据包的序号，且业务数据包6的序号6小于队尾业务数据包的序号，因此，第一设备可将业务数据包4递交至应用层之后，再将业务数据包6插入缓存队列中的正确位置，即插入至业务数据包5之后，业务数据包7之前，因此更新后缓存队列中缓存的业务数据包分别为业务数据包5，业务数据包6，业务数据包7，业务数据包8；其中，队首业务数据包即业务数据包5，队尾业务数据包即业务数据包8。④假设第一设备新接收到的来自第二设备的业务数据包为业务数据包10，由于业务数据包10的序号10大于队尾业务数据包的序号，因此，第一设备可将业务数据包4递交至应用层之后，再将业务数据包10插入缓存队列的队尾，因此更新后缓存队列中缓存的业务数据包分别为业务数据包5，业务数据包7，业务数据包8，业务数据包10；其中，队首业务数据包即业务数据包5，队尾业务数据包即业务数据包10。需要说明的是，第一设备在向应用层递交业务数据包时，第一设备需要按照从队首业务数据包到队尾业务数据包的顺序依次向应用层递交业务数据包。其中，第一设备向应用层递交业务数据包的速度需要根据当前缓存队列中包括的业务数据包的数量K确定。也就是说，当第一设备需要向应用层递交业务数据包时，第一设备需要获取缓存队列中包括的业务数据包的数量K。S502、第一设备从多个预设数量范围中确定K所在的预设数量范围。在一些可行的实施方式中，第一设备可以从多个预设数量范围中确定K所在的预设数量范围。其中，多个预设数量范围包括以下范围中的一项或者多项：第一预设数量范围，第二预设数量范围，第三预设数量范围，其分别为业务数据包1，业务数据包2，业务数据包3和业务数据包4。其中：业务数据包1与业务数据包2之间的发包时间间隔为3ms；业务数据包2与业务数据包3之间的发包时间间隔为4ms；业务数据包3与业务数据包4之间的发包间隔为3ms。假设S1为5，即满足0＜K＜S1，因此，需要以慢于发包速度的速度向应用层递交数据包。例如，业务数据包1与业务数据包2之间的递交时间间隔为4ms；业务数据包2与业务数据包3之间的递交时间间隔为5ms；业务数据包3与业务数据包4之间的递交时间间隔为4ms。又例如，业务数据包1与业务数据包2之间的递交时间间隔为5ms；业务数据包2与业务数据包3之间的递交时间间隔为5ms；业务数据包3与业务数据包4之间的递交时间间隔为5ms。若S1≤K≤S2，则递交时间间隔为发包时间间隔v0。这里，递交时间间隔为发包时间间隔v0可以理解为第一设备实时跟随发包时间间隔向应用层递交相应业务数据包。其中，第一设备可以根据业务数据包中携带的发送时间戳确定发包时间间隔。举例来说，假设当前缓存队列中缓存了5个业务数据包，其分别为业务数据包1，业务数据包2，业务数据包3，业务数据包4和业务数据包5。其中：业务数据包1与业务数据包2之间的发包时间间隔为3ms；业务数据包2与业务数据包3之间的发包时间间隔为4ms；业务数据包3与业务数据包4之间的发包间隔为3ms；业务数据包4与业务数据包5之间的发包间隔为5ms。假设S1为5，S2为7，即满足S1≤K≤S2，因此，需要以发包速度向应用层递交数据包，即：业务数据包1与业务数据包2之间的递交时间间隔为3ms；业务数据包2与业务数据包3之间的递交时间间隔为4ms；业务数据包3与业务数据包4之间的递交时间间隔为3ms；业务数据包4与业务数据包5之间的递交时间间隔为5ms。若S2＜K≤S3，则递交时间间隔为第二时间间隔v2，第二时间间隔v2小于发包时间间隔v0。举例来说，假设当前缓存队列中缓存了8个业务数据包，其分别为业务数据包1，业务数据包2，业务数据包3，业务数据包4，业务数据包5，业务数据包6，业务数据包7和业务数据包8。其中：业务数据包1与业务数据包2之间的发包时间间隔为3ms；业务数据包2与业务数据包3之间的发包时间间隔为4ms；业务数据包3与业务数据包4之间的发包间隔为3ms；业务数据包4与业务数据包5之间的发包间隔为5ms；业务数据包5与业务数据包6之间的发包时间间隔为3ms；业务数据包6与业务数据包7之间的发包时间间隔为3ms；业务数据包7与业务数据包8之间的发包时间间隔为3ms。假设S2为7，S3为10，即满足S2＜K≤S3，因此，需要以快于发包速度的速度向应用层递交数据包。例如，业务数据包1与业务数据包2之间的递交时间间隔为2ms；业务数据包2与业务数据包3之间的递交时间间隔为3ms；业务数据包3与业务数据包4之间的递交时间间隔为2ms；业务数据包4与业务数据包5之间的递交时间间隔为4ms；业务数据包5与业务数据包6之间的递交时间间隔为2ms；业务数据包6与业务数据包7之间的递交时间间隔为2ms；业务数据包7与业务数据包8之间的递交时间间隔为2ms。又例如，业务数据包1与业务数据包2之间的递交时间间隔为2ms；业务数据包2与业务数据包3之间的递交时间间隔为2ms；业务数据包3与业务数据包4之间的递交时间间隔为2ms；业务数据包4与业务数据包5之间的递交时间间隔为2ms。业务数据包5与业务数据包6之间的递交时间间隔为2ms；业务数据包6与业务数据包7之间的递交时间间隔为2ms；业务数据包7与业务数据包8之间的递交时间间隔为2ms。若K＞S3，则递交时间间隔为第三时间间隔v3，第三时间间隔v3小于第二时间间隔v2。举例来说，假设当前缓存队列中缓存了12个业务数据包，其分别为业务数据包1，业务数据包2，业务数据包3，业务数据包4，业务数据包5，业务数据包6，业务数据包7，业务数据包8，业务数据包9，业务数据包10，业务数据包11，业务数据包12。其中：业务数据包1与业务数据包2之间的发包时间间隔为3ms；业务数据包2与业务数据包3之间的发包时间间隔为4ms；业务数据包3与业务数据包4之间的发包间隔为3ms；业务数据包4与业务数据包5之间的发包间隔为5ms；业务数据包5与业务数据包6之间的发包时间间隔为3ms；业务数据包6与业务数据包7之间的发包时间间隔为3ms；业务数据包7与业务数据包8之间的发包时间间隔为3ms；业务数据包8与业务数据包9之间的发包间隔为5ms；业务数据包9与业务数据包10之间的发包时间间隔为3ms；业务数据包10与业务数据包11之间的发包时间间隔为3ms；业务数据包11与业务数据包12之间的发包时间间隔为3ms。假设S3为10，即满足K＞S3，因此，需要以比快于S2＜K≤S3情况下的递包速度向应用层递交数据包。例如，业务数据包1与业务数据包2之间的递交时间间隔为1ms；业务数据包2与业务数据包3之间的递交时间间隔为2ms；业务数据包3与业务数据包4之间的递交时间间隔为1ms；业务数据包4与业务数据包5之间的递交时间间隔为3ms；业务数据包5与业务数据包6之间的递交时间间隔为1ms；业务数据包6与业务数据包7之间的递交时间间隔为1ms；业务数据包7与业务数据包8之间的递交时间间隔为1ms；业务数据包8与业务数据包9之间的递交时间间隔为3ms；业务数据包9与业务数据包10之间的递交时间间隔为1ms；业务数据包10与业务数据包11之间的递交时间间隔为1ms；业务数据包11与业务数据包12之间的递交时间间隔为1ms。又例如，业务数据包1与业务数据包2之间的递交时间间隔为1ms；业务数据包2与业务数据包3之间的递交时间间隔为1ms；业务数据包3与业务数据包4之间的递交时间间隔为1ms；业务数据包4与业务数据包5之间的递交时间间隔为1ms。业务数据包5与业务数据包6之间的递交时间间隔为1ms；业务数据包6与业务数据包7之间的递交时间间隔为1ms；业务数据包7与业务数据包8之间的递交时间间隔为1ms；业务数据包8与业务数据包9之间的递交时间间隔为1ms；业务数据包9与业务数据包10之间的递交时间间隔为1ms；业务数据包10与业务数据包11之间的递交时间间隔为1ms；业务数据包11与业务数据包12之间的递交时间间隔为1ms。需要说明的是，上述第二预设数量范围即满足业务实时性要求的长度区间，这里，满足业务实时性要求的长度区间可以理解为业务能够容忍的缓存队列的长度范围，也就是说，当缓存队列的实际长度维持在该长度区间时，可以将发包时间间隔v0作为向应用层递交缓存队列中业务数据包的时间间隔，这样既可以平滑传输抖动，同时也可以满足业务的实时性要求。当0＜K＜S1时，通过降低递包速度，有利于增大缓存队列长度至满足业务实时性要求的长度区间；当S2＜K≤S3时，通过加快递包速度，可降低缓存队列长度至满足业务实时性要求的长度区间；当K＞S2时，通过进一步加快递包速度，可更快速地降低缓存队列长度至满足业务实时性要求的长度区间。需要说明的是，当K等于1时，可以理解为是边缓存边递交的方案，例如在接收端收到某个业务的第一个业务数据包时，可以慢于发送端的发送间隔进行递包，此时发包速度快于递包速度，因此缓存队列的长度会逐渐增大至满足业务实时性要求的长度区间。当缓存队列长度增大至满足业务实时性要求的长度区间后，才开始以发送端发送数据包的发送间隔均匀的递交给应用层，以维持缓存队列的长度处于满足业务实时性要求的长度区间。可理解的，这种边缓存边递交的方案可使得首包端到端时延较小，即首包在缓存队列中等待被递交的时间较短。举例来说，请参见图7，图7是本申请实施例提供的边缓存边递交的场景示意图。如图7所示，假设发包间隔为3ms，递包间隔为5ms。当接收端接收到来自发送端的业务数据包1时，等待5ms后才开始递交，后续也以5ms的递包间隔向应用层递交接收到的业务数据包。如图7所示，接收业务数据包1后，业务数据包2～业务数据包4都正常接收，但是在接收到业务数据包4之后，出现了传输抖动，导致80ms内无包接收，并在后续短时间内接收到业务数据包5～业务数据包9，由于是边缓存边递交，因此，首包在缓存队列中等待被递交的时间只有5ms，且由于递包间隔为5ms小于发包间隔为3ms，即使出现了传输抖动，对于应用层而言，也不会出现在短时间内接收到大量业务数据包的情况发生，达到了平滑空口传输的抖动的效果。可理解的，首包定义方式可以理解但不限于以下方式：首包是第一设备第一次收到第二设备的业务数据包；首包也可以是，当一段时间未收到业务数据包后有重新开始连续收到的第一个业务数据包。可选的，在一些可行的实施方式中，也可以将业务数据包缓存到固定包数后开始均匀递交。例如在接收端收到某个业务的第一个业务数据包时，可以不立即递交，而是等到缓存队列中缓存到固定包数后才开始按照某种递包间隔均匀地向应用层递交业务数据包。可理解的，这种缓存到固定包数后开始均匀递交的方案可能导致首包端到端时延较大，即首包在缓存队列中等待被递交的时间较长。其中，缓存的包数可根据实际场景确定，在此不做限定。举例来说，请参见图8，图8是本申请实施例提供的缓存到固定包数后均匀递交的场景示意图。如图8所示，假设发包间隔为3ms，递包间隔也可以固定为3ms。当接收端接收到来自发送端的业务数据包1时，并非立马把业务数据包1递交给应用层，而是等待缓存队列已经缓存了若干包后才开始以发送端数据包的发送间隔均匀的递交给业务，示例性地，如图8所示，当缓存队列中缓存了4个业务数据包后，再等待3ms后才开始递交业务数据包1，后续也以3ms的递包间隔向应用层递交接收到的业务数据包。其中，业务数据包2～业务数据包4都正常接收，但是在接收到业务数据包4之后，出现了传输抖动，导致80ms内无包接收，并在后续短时间内接收到业务数据包5～业务数据包9，由于是业务数据包缓存到固定包数后均匀递交，因此，即使出现了传输抖动，在无包接收或短时间内接收到大量业务数据包的情况下，也能按照规定的递交间隔均匀地将缓存队列中已缓存的业务数据包均匀地递交给应用层，达到了平滑空口传输的抖动的效果。可选的，在一些可行的实施方式中，假设当前缓存队列中包括的业务数据包的数量为K，且该缓存队列中队首的业务数据包的序号为H1，该缓存队列中队尾的业务数据包的序号为H2，最近一次向应用层递交的业务数据包的序号为H0，其中H0＜H1＜H2，若第一设备在下一时刻又接收到第一设备发送的序号为H的业务数据包，那么第一设备可以根据当前缓存队列的情况，确定如何处理新接收到的序号为H的业务数据包，示例性地：若H＜H0，则丢弃序号为H的业务数据包；若K＜N，且H0＜H＜H1，则将序号为H的业务数据包插入缓存队列的队首，N为最大队列长度；若K＜N，且H1＜H＜H2，则将序号为H的业务数据包有序插入缓存队列；若K＜N，且H＞H2，则将序号为H的业务数据包插入缓存队列的队尾。可选的，若K＝N，且H0＜H＜H1，则将序号为H的业务数据包递交至应用层；若K＝N，且H1＜H＜H2，则在将H1对应的业务数据包递交至应用层之后，将序号为H的业务数据包有序插入缓存队列；若K＝N，且H＞H2，则在将H1对应的业务数据包递交至应用层之后，将序号为H的业务数据包插入缓存队列的队尾。也就是说，每次第一设备新接收到一个业务数据包时，都应该根据缓存队列当前缓存的业务数据包的情况确定如何处理新接收到的业务数据包。可选的，当接收业务数据包出现空口抖动，导致短时间内收到大量业务数据包时，第一设备还可以执行以下策略中一项或者多项：1、短时间内快速递包，即加快向应用层递包的速度。2、在缓存队列已经达到最大队列长度或短时间内新接收的业务数据包的数量超过缓存队列中剩余可缓存的业务数据包的数量时，丢弃缓存队列中靠前的业务数据包，保留最新的业务数据包进行缓存，即丢弃缓存队列中靠近队首的业务数据包，并将新接收到的业务数据包分别插入至缓存队列中正确位置。举例来说，假设短时间内收到5个业务数据包，缓存队列的最大队列长度为10，当前缓存队列中包括的业务数据包的数量为10，那么可以丢弃缓存队列中前5个业务数据包，并将新接收到的5个业务数据包分别插入缓存队列中的正确位置。3、对短时间收到的业务数据包进行稀疏采样后缓存，即先从大量业务数据包中采样得到少量业务数据包，针对少量业务数据包中的每个业务数据包，依次进行处理。举例来说，假设短时间内收到10个业务数据包，缓存队列的最大队列长度为10，当前缓存队列中包括的业务数据包的数量为5，因此，需要从接收到的10个业务数据包中采样5个业务数据包，并分别将该5个业务数据包插入至缓存队列中的正确位置。可理解的，采样规则可根据实际场景确定，在此不做限制。可选的，在一些可行的实施方式中，语音业务和视频业务等具有数据量大，收发包频繁的特点，为提高接收业务数据包的可靠性，同时提高网络带宽资源利用率，在第一设备每次收到业务数据包后，可以延迟等待若干时间，对一段时间内接收到的所有业务数据包进行批量确认。也就是说，第一设备在第一时间段内接收多个业务数据包之后，向第二设备发送第一确认消息，第一确认消息用于确认成功接收多个业务数据包。相应地，第一设备接收来自第二设备的第二确认消息，第二确认消息用于确认成功接收第一确认消息。本申请中涉及的确认消息具体可以为ACK等，在此不做限制。示例性地，请参见图9，图9是本申请实施例提供的延迟确认的场景示意图。如图9所示，接收端在收到业务数据包1后，延迟等待100ms，向发送端发送第一确认消息，该第一确认消息用于确认成功接收业务数据包1，以及确认在延迟等待的100ms内接收到的业务数据包2，业务数据包3和业务数据包4。若发送端成功接收第一确认消息，则向接收端发送第二确认消息，该第二确认消息用于确认成功接收第一确认消息，相应地，接收端接收来自发送端的第二确认消息。在本申请实施例中，根据缓存队列中业务数据包的数量K和预设数量范围实时调整递包速度，可将缓存队列的实际长度维持在满足业务实时性要求的长度区间，这样既能保证业务的实时性要求，又有利于平滑空口传输的抖动，进而提高用户的业务体验。下面将结合图10～图11对本申请提供的数据处理装置进行详细说明。请参见图10，图10是本申请实施例提供的一种数据处理装置的结构示意图。图10所示的数据处理装置1000可以用于执行上述图5所描述的方法实施例中第一设备的部分或全部功能。该装置可以是第一设备，也可以是第一设备中的装置，或者是能够和第一设备匹配使用的装置。其中，该数据处理装置1000还可以为芯片系统。图10所示的数据处理装置可以包括获取单元1001，处理单元1002，收发单元1003和存储单元1004。其中，获取单元1001用于获取缓存队列中包括的业务数据包的数量K。处理单元1002，用于进行业务数据包的处理，例如解析业务数据包等。收发单元1003用于接收或发送业务数据包。存储单元1004用于缓存/存储接收到的业务数据包。其中：获取单元1001，用于获取存储单元1004中缓存队列中包括的业务数据包的数量K，所述缓存队列中包括的业务数据包来自第二设备，所述K为大于0的整数；处理单元1002，用于从多个预设数量范围中确定所述K所在的预设数量范围；所述处理单元1002，用于基于所述K所在的预设数量范围确定递交时间间隔，所述递交时间间隔为相邻两次将所述缓存队列中包括的业务数据包递交至应用层的时间间隔。在一种可能的实现中，所述多个预设数量范围包括以下范围中的一项或者多项：第一预设数量范围，第二预设数量范围，所述第三预设数量范围执行本申请各个实施例所述方法的全部或部分步骤。而前述的计算机可读存储介质，可以是计算机能够存取的任何可用介质。以此为例但不限于：计算机可读介质可以包括随机存取存储器、只读存储器、可编程只读存储器、可擦除可编程只读存储器、电可擦可编程只读存储器、紧凑型光盘只读存储器、通用串行总线闪存盘、移动硬盘、或其他光盘存储、磁盘存储介质或者其他磁存储设备、或者能够用于携带或存储具有指令或数据结构形式的期望的程序代码并能够由计算机存取的任何其他介质。另外，通过示例性但不是限制性说明，许多形式的RAM可用，例如静态随机存取存储器、动态随机存取存储器、同步动态随机存取存储器、双倍数据速率同步动态随机存取存储器、增强型同步动态随机存取存储器、同步连接动态随机存取存储器或直接内存总线随机存取存储器。以上所述，仅为本申请的具体实施方式，但本申请实施例的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本申请实施例揭露的技术范围内，可轻易想到变化或替换，都应涵盖在本申请实施例的保护范围之内。因此，本申请实施例的保护范围应所述以权利要求的保护范围为准。
