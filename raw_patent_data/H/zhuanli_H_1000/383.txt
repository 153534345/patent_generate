标题title
一种网络服务启停管理系统、方法及系统架构
摘要abst
本发明公开了一种网络服务启停管理系统、方法及系统架构，包括若干用于执行各种服务的物理设备和对各种服务进行启停管理的服务启停管理模块，服务启停管理模块通过命令分发控制器通信连接物理设备，其中服务启停管理模块包括：管控配置子模块，用于配置当前服务的管控策略；链路安全子模块，用于设置服务端之间的通信连接方式；日志溯源子模块，用于追溯从服务配置、命令管理到命令执行的命令操作；链路闭环子模块，用于当出现网络分区或故障时，通过定时补偿的方式，将整个命令执行链路进行闭环。通过本申请可以实现网络服务启停管理系统的灵活配置、资源统一监控，从而提高网络服务的系统性能和稳定性，降低网络服务维护成本。
权利要求书clms
1.一种网络服务启停管理系统，其特征在于，包括若干用于执行各种服务的物理设备和对各种服务进行启停管理的服务启停管理模块，服务启停管理模块通过命令分发控制器通信连接物理设备，其中服务启停管理模块包括：管控配置子模块，用于配置当前服务的管控策略；链路安全子模块，用于设置服务端之间的通信连接方式；日志溯源子模块，用于追溯从服务配置、命令管理到命令执行的命令操作；链路闭环子模块，用于当出现网络分区或故障时，通过定时补偿的方式，将整个命令执行链路进行闭环；扩展接口子模块，用于支持接口的全方位扩展；其中管控配置子模块包括：启停配置建模功能单元，用于将不同操作系统、文件目录中部署的服务，抽象为数据通用模型；启停分发策略功能单元，支持SSH或API的管控方式，依据启停配置，按照不同的管控策略，实现任务快速下发，并同步实时回显控制台输出。2.根据权利要求1所述的一种网络服务启停管理系统，其特征在于，每台物理设备中设有一个用于接收各种指令信息的系统代理模块。3.根据权利要求1所述的一种网络服务启停管理系统，其特征在于，管控策略包括服务部署类型、命令下发模式、访问账户、端口，管控策略的数据以加密方式存储。4.根据权利要求3所述的一种网络服务启停管理系统，其特征在于，数据通用模型包括服务IP、服务端口、管控方式、管控账户、部署方式、指令。5.根据权利要求1所述的一种网络服务启停管理系统，其特征在于，所述服务端之间的通信通过HTTPS、验签、时间戳的方式，保证业务线数据不被中途篡改。6.根据权利要求1所述的一种网络服务启停管理系统，其特征在于，所述日志溯源子模块还用于分析判断出具有攻击性的命令操作。7.根据权利要求1所述的一种网络服务启停管理系统，其特征在于，所述扩展接口子模块中的接口支持热拔插，并依据现有的接口规范，快速开发新接口并部署。8.一种网络服务启停管理方法，其特征在于，包括以下步骤：S1、当服务启停管理模块中的主引擎接收到启停通知后，从启停配置表中读取当前启停服务的配置信息；S2、对配置信息进行脱敏、防篡改判断后，通过启停配置建模功能单元转化为数据通用模型，并对数据通用模型进行封装，封装后的数据通过命令分发控制器发送给系统代理模块；S3、由系统代理模块与该系统代理模块所处的物理设备进行交互，执行命令，且系统代理模块实时将控制台日志输出回传到主引擎；S4、指令执行成功，返回成功信息。9.根据权利要求8所述的一种网络服务启停管理方法，其特征在于，当命令下发完成后，若遇到网络分区或故障，通过时间补偿机制，恢复并达到数据的最终一致性。10.一种应用于如权利要求1-7任一项所述的网络服务启停管理系统的系统架构，其特征在于，包括系统框架，采用Spring作为整个系统框架的平台容器，该系统框架中设有持久层、业务层、控制层、展现层，其中持久层分别通信连接数据库和业务层，而控制层分别通信连接展现层和业务层。
说明书desc
技术领域本发明涉及网络服务的技术领域，具体来说，涉及一种网络服务启停管理系统、方法及系统架构。背景技术目前，网络服务的技术架构、部署方式和交互方式越来越多样化。为了支持现有的业务，网络服务的复杂性也越来越高。稳定性和可维护性已成为网络服务管理和发展的瓶颈，而且服务的灵活性也必然要求网络服务系统的功能可灵活配置，可任意编排服务节点，从而达到真正的可运营、可管理、低成本的要求。当前世面上更多的是网络服务管理系统，大多是采用注册中心的管理方式，服务启动时与注册中心建立心跳连接，注册中心轮询服务的状态，从而达到服务的在线管理，这种结构无疑将压力全部传输到注册中心，极大的降低了服务管理系统的可用性，更为致命的是，这种管理方式只是对服务进行一个预览和服务状态的监控，无法对服务进行真正的在线管理。发明内容针对相关技术中的上述技术问题，本发明提供一种网络服务启停管理系统、方法及系统架构，能够解决上述问题。为实现上述技术目的，本发明的技术方案是这样实现的：一种网络服务启停管理系统，包括若干用于执行各种服务的物理设备和对各种服务进行启停管理的服务启停管理模块，服务启停管理模块通过命令分发控制器通信连接物理设备，其中服务启停管理模块包括：管控配置子模块，用于配置当前服务的管控策略；链路安全子模块，用于设置服务端之间的通信连接方式；日志溯源子模块，用于追溯从服务配置、命令管理到命令执行的命令操作；链路闭环子模块，用于当出现网络分区或故障时，通过定时补偿的方式，将整个命令执行链路进行闭环；扩展接口子模块，用于支持接口的全方位扩展；其中管控配置子模块包括：启停配置建模功能单元，用于将不同操作系统、文件目录中部署的服务，抽象为数据通用模型；启停分发策略功能单元，支持SSH或API的管控方式，依据启停配置，按照不同的管控策略，实现任务快速下发，同步实时回显控制台输出。进一步的，每台物理设备中设有一个用于接收各种指令信息的系统代理模块。进一步的，管控策略包括服务部署类型、命令下发模式、访问账户、端口，管控策略的数据以加密方式存储。进一步的，数据通用模型包括服务IP、服务端口、管控方式、管控账户、部署方式、指令。进一步的，所述服务端之间的通信通过HTTPS、验签、时间戳的方式，保证业务线数据不被中途篡改。进一步的，所述日志溯源子模块还用于分析判断出具有攻击性的命令操作。进一步的，所述扩展接口子模块中的接口支持热拔插，并依据现有的接口规范，快速开发新接口并部署。一种网络服务启停管理方法，包括以下步骤：S1、当服务启停管理模块中的主引擎接收到启停通知后，从启停配置表中读取当前启停服务的配置信息；S2、对配置信息进行脱敏、防篡改判断后，通过启停配置建模功能单元转化为数据通用模型，并对数据通用模型进行封装，封装后的数据通过命令分发控制器发送给系统代理模块；S3、由系统代理模块与该系统代理模块所处的物理设备进行交互，执行命令，且系统代理模块实时将控制台日志输出回传到主引擎；S4、指令执行成功，返回成功信息。进一步的，当命令下发完成后，若遇到网络分区或故障，通过时间补偿机制，恢复并达到数据的最终一致性。一种网络服务启停管理系统的系统架构，包括系统框架，采用Spring作为整个系统框架的平台容器，该系统框架中设有持久层、业务层、控制层、展现层，其中持久层分别通信连接数据库和业务层，而控制层分别通信连接展现层和业务层。本发明的有益效果：通过本申请可以实现网络服务启停管理系统的灵活配置、资源统一监控，从而提高网络服务的系统性能和稳定性，降低网络服务维护成本。附图说明为了更清楚地说明本发明实施例或现有技术中的技术方案，下面将对实施例中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。下面根据附图对本发明作进一步详细说明。图1是本发明实施例所述的一种网络服务启停管理系统的系统框图；图2是本发明实施例所述的网络服务启停管理系统的系统技术架构图；图3是本发明实施例所述的网络服务启停管理系统的实施调试流程图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员所获得的所有其他实施例，都属于本发明保护的范围。如图1-3所示，根据本发明公开了一种网络服务启停管理系统，包括若干用于执行各种服务的物理设备和对各种服务进行启停管理的服务启停管理模块，服务启停管理模块通过命令分发控制器通信连接物理设备。服务启停管理模块包括管控配置子模块、链路安全子模块、日志溯源子模块、链路闭环子模块、扩展接口子模块。其中管控配置子模块可配置当前服务的管控策略，涉及服务部署类型、命令下发模式、访问账户、端口等，数据以加密方式存储，保证安全性，而管控配置子模块包括启停配置建模功能单元和启停分发策略功能单元，启停配置建模功能单元可将不同操作系统、文件目录中部署的服务，抽象为数据通用模型，该数据通用模型包括服务IP、服务端口、管控方式、管控账户、部署方式、指令等等，而启停分发策略功能单元支持SSH或API的管控方式，依据启停配置，按照不同的管控策略，实现任务快速下发，并同步实时回显控制台输出，管控策略包括服务部署类型、命令下发模式、访问账户、端口，管控策略的数据以加密方式存储。其中日志溯源子模块可从服务配置、命令管理到命令执行，均做到有理可依，有据可查，并分析判断具有攻击性的命令操作，提升服务安全性。其中链路安全子模块用于配置服务端之间的通信连接方式，例如服务端之间的通信可通过HTTPS、验签、时间戳等方式，保证业务线数据不被中途篡改，进一步提升安全性。其中链路闭环子模块可依据CAP理论，当网络中的服务出现网络分区或故障等问题时，例如丢包、阻塞、超时等等，而命令执行又严重依赖于网络，此时可通过定时补偿的方式，将整个命令执行链路进行闭环，无需人工干预。其中扩展接口子模块用于支持接口的全方位扩展，本申请中接口支持热拔插，依据现有的接口规范，可快速开发新接口并部署，例如文件批量上传更新、批量执行命令等等。本申请还提供一种网络服务启停管理方法，包括以下步骤：S1、当服务启停管理模块中的主引擎接收到启停通知后，从启停配置表中读取当前启停服务的配置信息；S2、对配置信息进行脱敏、防篡改判断后，通过启停配置建模功能单元转化为数据通用模型，并对数据通用模型进行封装，封装后的数据通过命令分发控制器发送给系统代理模块；S3、由系统代理模块与该系统代理模块所处的物理设备进行交互，执行命令，且系统代理模块实时将控制台日志输出回传到主引擎；S4、指令执行成功，返回成功信息。当命令下发完成后，若遇到网络分区或故障，可能导致启停状态与服务的真实状态不一致。此时通过时间补偿机制，恢复并达到数据的一致性。在本申请中每台被管理的物理设备上装一个用于接收启停命令的系统代理模块，该模块是用于完成网络服务启停管理所需的最小单元化功能，例如接收启动命令、执行命令、或资源监控模块等，在物理设备开启时，该模块就被启动。本申请还提供一种网络服务启停管理系统的系统架构，包括系统框架，采用Spring作为整个系统框架的平台容器，该系统框架中设有持久层、业务层、控制层、展现层，其中持久层分别通信连接数据库和业务层，而控制层分别通信连接展现层和业务层。平台容器的设计：采用Spring作为整个系统框架的容器。Spring是一个AOP框架和IOC容器。运用AOP可以创建“横切关注点”，在应用时将它们插入代码中，使得代码有良好的可重用性。IOC容器允许在需要生成对象的地方创建一个应用上下文，然后将这些对象传递给它们的合作对象。只需要在配置文件中声明对象间的关系，由IOC容器管理这些对象，在需要时由Spring提供。使用Spring，开发者可以有效的组织中间层对象，消除项目中单例类的大量使用以及对大量定制文件格式使用的需要。无论是使用JDBC还是使用ORM，Spring都提供了一个数据存取的一致性框架，Spring的这种扩展能力，使系统框架能够不断增加或升级技术组件，并且不会因组件的改变或升级，影响业务逻辑的实现。控制层设计：采用SpringBoot框架实现系统的控制器部分，分离展现层和业务层，将展现层和业务层完全分离，降低二者耦合性，提高了开发效率和架构灵活性。数据持久层的设计：数据持久层设计采用开源框架JPA作为持久层支撑框架。JPA是一个基于JAVA的数据库持层化框架，JPA功能强大，是JAVA应用与关系数据库之间的桥梁，较JDBC方式操作数据库代码量大大减少，提高了持久化代码的开发速度，降低维护成本；JPA支持许多面向对象的特性，如组合，继承，多态等，使开发人员不必再面向业务领域的对象模型和面向数据库的关系模型之间来回切换，方便开发人员进行领域驱动的面向对象的设计与开发。展现层设计：展现层由React和Ajax构成，React是一个用于构建用户界面的JavaScript库，它由Facebook开发并维护，被广泛应用于Web应用程序的前端开发，React采用组件化的开发方式，将用户界面拆分为独立的、可复用的组件，并通过组件之间的数据传递来构建整个应用程序；Ajax是一种用于创建异步Web应用程序的技术，它允许在不刷新整个页面的情况下向服务器发送请求，并更新部分页面内容，Ajax使用JavaScript和XML来实现异步通信。本申请中React用于构建用户界面，Ajax用于与后端进行异步数据交互，获取数据并更新React组件的状态和页面内容，这样可以实现更动态、响应式的用户界面。本申请网络服务启停管理系统在具体实施调试时，包括以下步骤：项目初期：了解网络架构，收集服务部署结构、整理服务器操作系统；项目中期：配置管控策略、配置命令、脚本、配置展示内容，以及约定暴露的端口；项目测试：对系统功能进行测试验证，包括命令下发、命令执行、数据回传等。项目上线：使用培训和正式上线。综上所述：本申请是基于网络+SSH+API的远程服务启停控制系统，该系统创造性地将分散在各个服务器的服务节点以集中管理的方式呈现在主业务系统中，将各个节点的系统硬件负载、系统硬件总览、中间件配置、服务基本配置完整的展示到客户端，并可对节点进行启动、停止、重启的操作。首先利用SpringBoot构建web平台，用户可以在web界面上查看当前服务节点列表以及基本信息，针对每个节点可以分别设置启停方式、启停脚本、认证信息等，在Mongo数据库构建数据通用模型，包括启停命令、启停配置、启停日志等。这样，在新增服务节点时，仅需拷贝、粘贴等简单操作即可，若服务节点的部署结构发生变更时，仅需后台人员修改启停配置即可，无需再登录服务器进行操作，大大提高了服务节点的水平扩展控制能力。主业务系统中包括服务管理、服务管控配置、命令配置、日志管理、命令执行、数据回传等功能。除上述功能外，还支持自定义接口，与第三方系统集成，提高与对方系统的契合度。服务管理：支持在线添加、修改、删除服务，服务在线时，可对服务的硬件资源负载、系统配置总览、环境属性进行监控，并提供服务启停的操作入口；服务管控配置：配置当前服务的管控策略，涉及服务部署类型、命令下发模式、访问账户、端口等，数据以加密方式存储，保证安全性；命令配置：命令类型支持启动、停止、重启，可以通过自定义接口实现其他功能，例如上传、下载等，同时自动分析判断命令内容是否含有破坏性操作，同时在数据库层面对数据进行防篡改操作；日志管理：对服务节点的任何属性进行增删查改，均有记录可查；命令执行：支持各种主流操作系统，例如windows、linux等，网络数据传输采用AES加密+时间戳，有效防止抓包篡改数据等行为，保护服务器的安全稳定。支持命令执行日志实时推送，用户可以直观的感受到当前命令的执行进度以及结果。以上所述仅为本发明的较佳实施例而已，并不用以限制本发明，凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的保护范围之内。
