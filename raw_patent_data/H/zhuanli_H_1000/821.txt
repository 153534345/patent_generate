标题title
一种用于隧道报文封装的方法、计算机设备及介质
摘要abst
本申请涉及计算机技术领域并提供一种用于隧道报文封装的方法、计算机设备及介质。方法包括：响应于传输网络层邻居表的更新，虚拟交换机利用更新后的表同步更新隧道邻居表中的多个隧道的隧道相关网络协议地址；响应于对内层报文进行隧道报文封装和通过第一隧道进行隧道报文发送，通过查询本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址；当查询成功时，利用目的物理地址进行封装，当查询失败时，缓存报文并发送地址解析协议请求，以及，当对应的地址解析协议响应没有在报文生存周期内被收到时，清理被缓存的报文。如此，提高隧道报文封装成功率、实现零丢包还有降低网络延迟和提升网络传输性能。
权利要求书clms
1.一种用于隧道报文封装的方法，其特征在于，所述方法包括：响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址；响应于对内层报文进行隧道报文封装和通过所述多个隧道中的第一隧道进行隧道报文发送，通过查询相对于所述虚拟交换机的本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址，所述第一隧道的隧道相关网络协议地址包括所述目的网络协议地址；当所述本地地址解析协议表查询成功时，不缓存所述内层报文，并且，利用所述目的物理地址，对所述内层报文进行隧道报文封装得到由所述内层报文和所述外层报文构成的隧道报文，当所述本地地址解析协议表查询失败时，缓存所述内层报文并向所述目的网络协议地址发送地址解析协议请求，以及，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。2.根据权利要求1所述的方法，其特征在于，所述传输网络层邻居表的更新包括主动轮询所述隧道邻居表中的所述多个隧道各自的隧道相关网络协议地址是否存在对应物理地址。3.根据权利要求1所述的方法，其特征在于，所述方法还包括：在所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址之后，所述虚拟交换机利用所述更新后的传输网络层邻居表来更新内核的地址解析协议表中的隧道相关网络协议地址。4.根据权利要求3所述的方法，其特征在于，所述内核被配置为：基于所述内核的地址解析协议表中的全部网络协议地址，向所述内核的地址解析协议表中的全部网络协议地址发送地址解析协议请求从而更新所述内核的地址解析协议表中的隧道相关网络协议地址和所述内核的地址解析协议表中的非隧道相关网络协议地址。5.根据权利要求1所述的方法，其特征在于，所述传输网络层邻居表包括用于指示网络协议地址与物理地址之间的对应关系的至少一个表项，所述更新后的传输网络层邻居表包括相对于所述至少一个表项的新增表项，其中，所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址，包括：所述虚拟交换机利用所述更新后的传输网络层邻居表中的所述新增表项，更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址。6.根据权利要求1所述的方法，其特征在于，所述传输网络层邻居表的更新至少基于所述多个隧道的隧道创建和隧道删除。7.根据权利要求6所述的方法，其特征在于，所述传输网络层邻居表的更新至少还基于待添加隧道所对应的网络协议地址是否存在于所述传输网络层邻居表。8.根据权利要求7所述的方法，其特征在于，所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址，从而降低所述本地地址解析协议表查询失败的概率。9.根据权利要求1所述的方法，其特征在于，所述方法还包括：当与所述地址解析协议请求对应的所述地址解析协议响应在所述内层报文相关联的报文生存周期内被收到时，利用所述地址解析协议响应，更新所述本地地址解析协议表以及对被缓存的所述内层报文进行隧道报文封装得到所述隧道报文。10.根据权利要求1所述的方法，其特征在于，所述内层报文包括内层以太网报文头、内层网络协议地址头和载荷。11.根据权利要求1所述的方法，其特征在于，所述隧道报文的隧道报文格式是虚拟扩展局域网，网络虚拟化通用路由封装或者通用网络虚拟化封装。12.根据权利要求1所述的方法，其特征在于，所述虚拟交换机是开放虚拟交换机、或者开放虚拟交换机与数据平面开发套件的结合。13.一种计算机设备，其特征在于，所述计算机设备包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，所述处理器执行所述计算机程序时实现根据权利要求1至12中任一项所述的方法。14.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质存储有计算机指令，当所述计算机指令在计算机设备上运行时使得所述计算机设备执行根据权利要求1至12中任一项所述的方法。
说明书desc
技术领域本申请涉及计算机技术领域，尤其涉及一种用于隧道报文封装的方法、计算机设备及介质。背景技术云计算和数据中心的发展应用到网络虚拟化，使用隧道技术实现物理网络层和虚拟网络层之间的隔离，在现有物理网络基础上创建多个虚拟网络，实现数据中心的自动化和智能化。现有技术中，使用隧道技术进行隧道报文封装和隧道报文发送，可能因为地址解析问题而导致丢包也即丢弃报文，并且在流量较低的情况下也可能发生丢包现象，这样导致需要重传，不利于提升网络性能和降低延迟。为此，本申请提供了一种用于隧道报文封装的方法、计算机设备及介质，用于应对现有技术中的技术难题。发明内容第一方面，本申请提供了一种用于隧道报文封装的方法。所述方法包括：响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址；响应于对内层报文进行隧道报文封装和通过所述多个隧道中的第一隧道进行隧道报文发送，通过查询相对于所述虚拟交换机的本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址，所述第一隧道的隧道相关网络协议地址包括所述目的网络协议地址；当所述本地地址解析协议表查询成功时，不缓存所述内层报文，并且，利用所述目的物理地址，对所述内层报文进行隧道报文封装得到由所述内层报文和所述外层报文构成的隧道报文，当所述本地地址解析协议表查询失败时，缓存所述内层报文并向所述目的网络协议地址发送地址解析协议请求，以及，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。通过本申请的第一方面，提供了两种彼此独立运行的更新机制，第一种更新机制是：响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址；第二种更新机制是：响应于对内层报文进行隧道报文封装和通过所述多个隧道中的第一隧道进行隧道报文发送，通过查询相对于所述虚拟交换机的本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址，当所述本地地址解析协议表查询失败时，缓存所述内层报文并向所述目的网络协议地址发送地址解析协议请求，以及，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。应当理解的是，第一种更新机制和第二种更新机制之间是彼此独立运行且协同作用。在这两种更新机制的协同作用下，可以避免首包的丢失，提高隧道首包的转发效率，还可以降低需要缓存的首包数量，降低内存资源和处理流程的损耗，有利于提高隧道报文封装成功率、实现零丢包还有降低网络延迟和提升网络传输性能。在本申请的第一方面的一种可能的实现方式中，所述传输网络层邻居表的更新包括主动轮询所述隧道邻居表中的所述多个隧道各自的隧道相关网络协议地址是否存在对应物理地址。在本申请的第一方面的一种可能的实现方式中，所述方法还包括：在所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址之后，所述虚拟交换机利用所述更新后的传输网络层邻居表来更新内核的地址解析协议表中的隧道相关网络协议地址。在本申请的第一方面的一种可能的实现方式中，所述内核被配置为：基于所述内核的地址解析协议表中的全部网络协议地址，向所述内核的地址解析协议表中的全部网络协议地址发送地址解析协议请求从而更新所述内核的地址解析协议表中的隧道相关网络协议地址和所述内核的地址解析协议表中的非隧道相关网络协议地址。在本申请的第一方面的一种可能的实现方式中，所述传输网络层邻居表包括用于指示网络协议地址与物理地址之间的对应关系的至少一个表项，所述更新后的传输网络层邻居表包括相对于所述至少一个表项的新增表项，其中，所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址，包括：所述虚拟交换机利用所述更新后的传输网络层邻居表中的所述新增表项，更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址。在本申请的第一方面的一种可能的实现方式中，所述传输网络层邻居表的更新至少基于所述多个隧道的隧道创建和隧道删除。在本申请的第一方面的一种可能的实现方式中，所述传输网络层邻居表的更新至少还基于待添加隧道所对应的网络协议地址是否存在于所述传输网络层邻居表。在本申请的第一方面的一种可能的实现方式中，所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址，从而降低所述本地地址解析协议表查询失败的概率。在本申请的第一方面的一种可能的实现方式中，所述方法还包括：当与所述地址解析协议请求对应的所述地址解析协议响应在所述内层报文相关联的报文生存周期内被收到时，利用所述地址解析协议响应，更新所述本地地址解析协议表以及对被缓存的所述内层报文进行隧道报文封装得到所述隧道报文。在本申请的第一方面的一种可能的实现方式中，所述内层报文包括内层以太网报文头、内层网络协议地址头和载荷。在本申请的第一方面的一种可能的实现方式中，所述隧道报文的隧道报文格式是虚拟扩展局域网，网络虚拟化通用路由封装或者通用网络虚拟化封装。在本申请的第一方面的一种可能的实现方式中，所述虚拟交换机是开放虚拟交换机、或者开放虚拟交换机与数据平面开发套件的结合。第二方面，本申请实施例还提供了一种计算机设备，所述计算机设备包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，所述处理器执行所述计算机程序时实现根据上述任一方面的任一种实现方式的方法。第三方面，本申请实施例还提供了一种计算机可读存储介质，所述计算机可读存储介质存储有计算机指令，当所述计算机指令在计算机设备上运行时使得所述计算机设备执行根据上述任一方面的任一种实现方式的方法。第四方面，本申请实施例还提供了一种计算机程序产品，所述计算机程序产品包括存储在计算机可读存储介质上的指令，当所述指令在计算机设备上运行时使得所述计算机设备执行根据上述任一方面的任一种实现方式的方法。附图说明为了更清楚地说明本申请实施例技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为一种隧道报文封装的示意图；图2为本申请实施例提供的一种用于隧道报文封装的方法的流程示意图；图3为本申请实施例提供的一种计算设备的结构示意图。具体实施方式下面将结合附图对本申请实施例作进一步地详细描述。应当理解的是，在本申请的描述中，“至少一个”指一个或一个以上，“多个”指两个或两个以上。另外，“第一”、“第二”等词汇，除非另有说明，否则仅用于区分描述的目的，而不能理解为指示或暗示相对重要性，也不能理解为指示或暗示顺序。图1为一种隧道报文封装的示意图。如图1所示，位于网络A 110中的网络设备A112通过隧道130向位于网络B 120中的网络设备B 122发送隧道报文。这里，隧道报文是基于隧道技术对原始报文进行隧道报文封装得到并用于通过隧道进行隧道报文发送。利用隧道技术，可以将由物理设备和物理链路组成的物理网络与虚拟网络隔离开，在物理网络的基础上可以创建多个虚拟网络，可以解决如私有网络之间无法通过公有网络互通或者异种网络之间无法直通的问题。一种隧道报文封装方式是利用通用路由封装协议，用于将使用一个路由协议的数据包封装在另一协议的数据包中。例如，图1中所示的网络A 110和网络B 120可能是两个采用新版本的互联网协议的局域网，但是连接网络A 110和网络B 120的第三方网络可能是采用旧版本的互联网协议，可以利用隧道技术如通用路由封装协议，将适用新版本的互联网协议的数据包封装在适用旧版本的互联网协议的数据包中，然后将封装得到的数据包通过隧道130传输流量。再例如，图1中所示的网络A 110和网络B 120可能是两个私有网络且使用私有地址，可以利用隧道技术如通用路由封装协议，将位于网络A 110中的网络设备A 112的原始报文，加上公有网络的报文头还有公有网络地址，这样就可以通过隧道130传输流量，等位于网络B 120中的网络设备B 122收到后，再去掉公有网络的报文头，恢复为原始报文。在云计算和数据中心网络，一般利用开源虚拟交换机为各种虚拟化设备、虚拟功能提供数据平面的流量转发。虚拟交换机可以支持对原始报文进行隧道报文封装和隧道报文发送，从而在不改造现有物理网络的情况下，可以通过创建多个虚拟网络还有如通用路由封装协议，实现数据中心的自动化和智能化。其中，发送端，例如图1中所示的位于网络A 110中的网络设备A 112，对原始报文进行隧道封装，然后通过隧道130发送隧道报文；接收端，例如图1中所示的位于网络B 120中的网络设备B 122，在接收到报文后，判断该报文是否是隧道报文如利用通用路由封装协议封装的报文，然后可以通过对应的隧道口进行隧道解封装，恢复为原始报文。对于发送端而言，当虚拟交换机发送一个要进行隧道报文封装的原始报文到隧道口时，如果此时还没有学习到对端的地址解析协议，可能因为地址解析问题而导致丢弃该原始报文，这样会导致丢包并且需要重新发包，不利于提升网络性能和降低延迟。下面结合本申请具体实施例详细说明，本申请实施例提供的一种用于隧道报文封装的方法、计算机设备及介质，如何提高隧道报文封装成功率、实现零丢包还有降低网络延迟和提升网络传输性能。图2为本申请实施例提供的一种用于隧道报文封装的方法的流程示意图。如图2所示，方法包括以下步骤。步骤S210：响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址。步骤S220：响应于对内层报文进行隧道报文封装和通过所述多个隧道中的第一隧道进行隧道报文发送，通过查询相对于所述虚拟交换机的本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址，所述第一隧道的隧道相关网络协议地址包括所述目的网络协议地址。步骤S230：当所述本地地址解析协议表查询成功时，不缓存所述内层报文，并且，利用所述目的物理地址，对所述内层报文进行隧道报文封装得到由所述内层报文和所述外层报文构成的隧道报文。步骤S240：当所述本地地址解析协议表查询失败时，缓存所述内层报文并向所述目的网络协议地址发送地址解析协议请求，以及，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。参阅图2，图2所示的用于隧道报文封装的方法，包括了两种彼此独立运行的更新机制，在这两种更新机制的协同作用下，可以避免首包的丢失，提高隧道首包的转发效率，还可以降低需要缓存的首包数量，降低内存资源和处理流程的损耗。具体地，步骤S210定义了第一种更新机制，响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址。这里，每一个隧道有唯一的源网络协议地址和目的网络协议地址，当具有不同的目的网络协议地址的隧道口被创建时，会在隧道邻居表中新增一个潜在的表项用于指示网络协议地址与物理地址也叫媒体存取控制位址地址。网络模型中一般是第三层网络层负责IP地址也即网络协议地址，第二层数据链路层负责MAC地址也即物理地址。因此IP地址与MAC地址之间的对应关系，也即网络协议地址与物理地址之间的对应关系，在隧道技术的应用中，意味着在原始报文的基础上通过每条隧道所依赖的正确的目的网络协议地址进行外层数据的封装，这是正确进行隧道报文封装的关键。如果在进行隧道报文封装时，因为外层的目的物理地址在本地地址解析协议表或者说本地ARP邻居表中查询不到，则会导致无法正确完成外层数据封装，这样可能导致丢弃原始报文如首包丢弃的问题。如此，响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址，意味着虚拟交换机主动地响应于传输网络层邻居表的更新，同步地更新所述虚拟交换机的隧道邻居表，这样意味着，当具有不同的目的网络协议地址的隧道口被创建时，虚拟交换机及时地为隧道邻居表中的新增表项填充物理地址相关信息，也就是及时地更新了隧道邻居表以确保其中的网络协议地址与物理地址之间的对应关系可以用于正确地进行隧道报文封装。在一些实施例中，响应于传输网络层邻居表的更新来同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址，这一更新机制，可以结合轮询机制来执行。虚拟交换机可以通过轮询机制，为所有表项中没有对应物理地址相关信息的发送地址解析协议报文，并且在收到地址解析协议响应后完成对应表项的信息填充。例如，可以每次在获取隧道IP之后确认对应MAC是否存在，如果不存在则发送ARP请求包并通过OVS的收发包逻辑来处理ARP响应包，如果存在则按照轮询机制遍历下一个隧道IP，直到最后一个隧道IP。在一些实施例中，响应于传输网络层邻居表的更新来同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址，这一更新机制，不仅可以基于由OVS发送的ARP请求来完成隧道邻居表中的表项填充从而完成对OVS的隧道邻居表的更新，而且还可以同时对OVS的隧道邻居表和内核邻居表进行同步更新。如此，极大降低了对首包做隧道报文封装时，查询外层物理地址失败的概率，提高了隧道报文封装成功完成的概率；提高了隧道首包的转发速率；可以通过同步更新内核邻居表，从而节省内核报文更新本地地址解析协议的操作损耗，有效提高内核首包的构造速率；因为更新范围仅限于所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址，因此相比于内核对所有网络协议地址的地址解析协议进行更新的机制，具有更新范围小且执行效率高的优点。继续参阅图2，步骤S220和步骤S240，定义了另一种更新机制，响应于对内层报文进行隧道报文封装和通过所述多个隧道中的第一隧道进行隧道报文发送，通过查询相对于所述虚拟交换机的本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址，其中，当所述本地地址解析协议表查询失败时，缓存所述内层报文并向所述目的网络协议地址发送地址解析协议请求，以及，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。这里，所述第一隧道的隧道相关网络协议地址包括所述目的网络协议地址。如此，当对内层报文进行隧道报文封装和通过所述多个隧道中的第一隧道进行隧道报文发送时，意味着在原始报文的基础上通过每条隧道所依赖的正确的目的网络协议地址进行外层数据的封装，这里，通过查询相对于所述虚拟交换机的本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址。本地地址解析协议表也即本地ARP表，是相对于所述虚拟交换机的本地，例如位于同一主机上或者同一服务器上。如果在进行隧道报文封装时，因为外层的目的物理地址在本地地址解析协议表或者说本地ARP邻居表中查询不到，则会导致无法正确完成外层数据封装，换句话说，如果在所述虚拟交换机的隧道邻居表中查询不到与外层网络协议地址对应的物理地址，则无法完成包含物理地址的报文头的封装。因此，对于查询失败的情况，该另一种更新机制为了完全防止首包丢弃，在步骤S240，提出了：当所述本地地址解析协议表查询失败时，缓存所述内层报文并向所述目的网络协议地址发送地址解析协议请求，以及，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。如此，当对原始报文进行隧道报文封装时，如果因为在隧道邻居表中查询不到外层网络协议地址对应的物理地址而无法完成包含物理地址报文头的封装时，虚拟交换机对原始报文进行缓存，并发送一个ARP请求包去获取物理地址。当所需物理地址获取到后，再对缓存中的原始报文重新执行隧道报文封装并转发的操作。同时，通过对缓存中的报文执行超时老化机制，通过该老化机制可以针对网络不可达场景，对缓存超过设定时间的报文进行清理。应当理解的是，第二种更新机制，意味着只要发生了所述本地地址解析协议表查询失败的情况，就需要发送地址解析协议请求，同时，为了防止丢弃首包，还要缓存内层报文并执行超时老化机制也即当所述内层报文相关联的报文生存周期到期后清理掉缓存中的还没有收到对应的地址解析协议响应的报文。因此，通过降低发生查询失败的情况的概率，就可以在防止丢弃首包从而提高隧道首包的转发效率的同时，还实现了降低需要缓存的首包数量也就降低内存资源和处理流程的损耗。上面提到，第一种更新机制，也就是响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址。利用第一种更新机制，当具有不同的目的网络协议地址的隧道口被创建时，虚拟交换机及时地为隧道邻居表中的新增表项填充物理地址相关信息，也就是及时地更新了隧道邻居表以确保其中的网络协议地址与物理地址之间的对应关系可以用于正确地进行隧道报文封装。如此，极大降低了对首包做隧道报文封装时，查询外层物理地址失败的概率，提高了隧道报文封装成功完成的概率；提高了隧道首包的转发速率。因此，利用第一种更新机制，可以执行主动的ARP更新操作，可以在更短的触发周期内，及时响应隧道业务的需求；在第一种更新机制的作用下，第二种更新机制的运行，也即对于需要执行隧道报文封装业务的原始报文，可以大幅降低根据隧道外层IP查找MAC地址失败的概率，这意味着有效地降低了触发第二种更新机制中发送地址解析协议请求及缓存内层报文的概率，从而提高隧道首包的处理和转发效率，以及降低需要缓存的首包数量也就降低内存资源和处理流程的损耗；在第一种更新机制和第二种更新机制的协作下，即使存在查找MAC失败的情况，也可以对收到的原始报文进行缓存，然后立即发出ARP请求，更新完ARP信息后，将缓存的报文发送出去，这样在网络状况正常的情况下可以做到零丢包。继续参阅图2，上述的第二种更新机制，包括了对缓存中的报文执行超时老化机制，也就是，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。这里，超时清理报文针对的是网络异常的情况，例如网络拥塞和链路异常等造成长时间得不到响应的情况。这些网络异常情况一般可认为网络不可达，因此在这样的网络异常情况下发生丢包是可以接受的，并不是因为处理机制造成的丢包。另外，超时清理报文，可以预留足够的等待时间，这样在网络状况正常的情况下可以做到零丢包。另外，基于隧道表的目的IP，提供了定期检查并更新隧道邻居表的机制，通过该机制能有效降低首包处理时间。如此，通过上述的第一种更新机制和第二种更新机制，改进了隧道报文封装的处理机制，避免了因为地址解析问题而导致丢包。当查询成功时也就是说，当所述本地地址解析协议表查询成功时，这意味着成功获取了与所述外层报文所包括的目的网络协议地址对应的目的物理地址，在步骤S230，当所述本地地址解析协议表查询成功时，不缓存所述内层报文，并且，利用所述目的物理地址，对所述内层报文进行隧道报文封装得到由所述内层报文和所述外层报文构成的隧道报文；如此，实现了支持对原始报文进行隧道报文封装和隧道报文发送，从而在不改造现有物理网络的情况下，可以通过创建多个虚拟网络还有如通用路由封装协议，实现数据中心的自动化和智能化。总之，图2所示的用于隧道报文封装的方法，包括了两种彼此独立运行的更新机制，第一种更新机制是：响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址；第二种更新机制是：响应于对内层报文进行隧道报文封装和通过所述多个隧道中的第一隧道进行隧道报文发送，通过查询相对于所述虚拟交换机的本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址，当所述本地地址解析协议表查询失败时，缓存所述内层报文并向所述目的网络协议地址发送地址解析协议请求，以及，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。应当理解的是，第一种更新机制和第二种更新机制之间是彼此独立运行且协同作用。在这两种更新机制的协同作用下，可以避免首包的丢失，提高隧道首包的转发效率，还可以降低需要缓存的首包数量，降低内存资源和处理流程的损耗，有利于提高隧道报文封装成功率、实现零丢包还有降低网络延迟和提升网络传输性能。在一种可能的实施方式中，所述传输网络层邻居表的更新包括主动轮询所述隧道邻居表中的所述多个隧道各自的隧道相关网络协议地址是否存在对应物理地址。如此，通过主动轮询所述隧道邻居表中的所述多个隧道各自的隧道相关网络协议地址是否存在对应物理地址，可以在虚拟交换机主动地响应于传输网络层邻居表的更新来同步地更新所述虚拟交换机的隧道邻居表的基础上，通过主动轮询所述隧道邻居表中的所述多个隧道各自的隧道相关网络协议地址是否存在对应物理地址来主动地利用第一种更新机制来协作第二种更新机制，不仅及时地更新了隧道邻居表以确保其中的网络协议地址与物理地址之间的对应关系，而且可以及时地为隧道邻居表中的新增表项填充物理地址相关信息。这样意味着，极大降低了对首包做隧道报文封装时，查询外层物理地址失败的概率，提高了隧道报文封装成功完成的概率；提高了隧道首包的转发速率。在一种可能的实施方式中，所述方法还包括：在所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址之后，所述虚拟交换机利用所述更新后的传输网络层邻居表来更新内核的地址解析协议表中的隧道相关网络协议地址。如此，实现了利用所述更新后的传输网络层邻居表来同步地更新所述虚拟交换机的所述隧道邻居表以及所述内核的地址解析协议表。通过更新内核的地址解析协议表中的隧道相关网络协议地址，可以节省内核报文更新本地地址解析协议的操作损耗，也就是说，可以降低因为内核的地址解析协议表中的隧道相关网络协议地址需要更新而导致内核发起更新本地地址解析协议的操作的概率。另外，考虑到内核在发起更新本地地址解析协议的操作时，一般不区分内核的地址解析协议表中的隧道相关网络协议地址和其它网络协议地址也即非隧道相关网络协议地址，因此，相比于内核对所有网络协议地址的地址解析协议进行更新的机制，所述虚拟交换机利用所述更新后的传输网络层邻居表来更新内核的地址解析协议表中的隧道相关网络协议地址，具有更新范围小且执行效率高的优点。如此，极大降低了对首包做隧道报文封装时，查询外层物理地址失败的概率，提高了隧道报文封装成功完成的概率；提高了隧道首包的转发速率；可以通过同步更新内核邻居表，从而节省内核报文更新本地地址解析协议的操作损耗，有效提高内核首包的构造速率；因为更新范围仅限于所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址，因此相比于内核对所有网络协议地址的地址解析协议进行更新的机制，具有更新范围小且执行效率高的优点。在一些实施例中，所述内核被配置为：基于所述内核的地址解析协议表中的全部网络协议地址，向所述内核的地址解析协议表中的全部网络协议地址发送地址解析协议请求从而更新所述内核的地址解析协议表中的隧道相关网络协议地址和所述内核的地址解析协议表中的非隧道相关网络协议地址。如此，极大降低了对首包做隧道报文封装时，查询外层物理地址失败的概率，提高了隧道报文封装成功完成的概率；提高了隧道首包的转发速率；可以通过同步更新内核邻居表，从而节省内核报文更新本地地址解析协议的操作损耗，有效提高内核首包的构造速率；因为更新范围仅限于所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址，因此相比于内核对所有网络协议地址的地址解析协议进行更新的机制，具有更新范围小且执行效率高的优点。在一种可能的实施方式中，所述传输网络层邻居表包括用于指示网络协议地址与物理地址之间的对应关系的至少一个表项，所述更新后的传输网络层邻居表包括相对于所述至少一个表项的新增表项，其中，所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址，包括：所述虚拟交换机利用所述更新后的传输网络层邻居表中的所述新增表项，更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址。如此，不仅及时地更新了隧道邻居表以确保其中的网络协议地址与物理地址之间的对应关系，而且可以及时地为隧道邻居表中的新增表项填充物理地址相关信息。这样意味着，极大降低了对首包做隧道报文封装时，查询外层物理地址失败的概率，提高了隧道报文封装成功完成的概率；提高了隧道首包的转发速率。在一些实施例中，所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址，同步地，或者至少部分同步地，所述虚拟交换机利用所述更新后的传输网络层邻居表来更新内核的地址解析协议表中的隧道相关网络协议地址，如此，节省内核报文更新本地地址解析协议的操作损耗，有效提高内核首包的构造速率。在一种可能的实施方式中，所述传输网络层邻居表的更新至少基于所述多个隧道的隧道创建和隧道删除。所述传输网络层邻居表的更新，可能基于多种因素或者说因为多种情况而导致。其中一种情况是所述多个隧道的隧道创建和隧道删除，例如创建了新的隧道或者删除了现有的隧道。当一个待添加的隧道口对应的网络协议地址在隧道邻居表中不存在时，该隧道口的创建会为隧道邻居表提供一个新表项。多个隧道可以共用同一个隧道邻居表中的表项。因此，至少基于所述多个隧道的隧道创建和隧道删除，来进行所述传输网络层邻居表的更新，进而利用第一种更新机制，也就是，响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址；如此，能极大降低了在新建隧道口做隧道报文封装时，在隧道邻居表中查询物理地址失败的概率。在一些实施例中，所述传输网络层邻居表的更新至少还基于待添加隧道所对应的网络协议地址是否存在于所述传输网络层邻居表。如此，至少还基于待添加隧道所对应的网络协议地址是否存在于所述传输网络层邻居表，当待添加隧道所对应的网络协议地址不存在于所述传输网络层邻居表时，来进行所述传输网络层邻居表的更新，进而利用第一种更新机制，也就是，响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址；如此，能极大降低了在新建隧道口做隧道报文封装时，在隧道邻居表中查询物理地址失败的概率。在一些实施例中，所述虚拟交换机利用所述更新后的传输网络层邻居表同步更新所述虚拟交换机的所述隧道邻居表中的所述多个隧道的隧道相关网络协议地址，从而降低所述本地地址解析协议表查询失败的概率。如此，通过两种彼此独立运行的更新机制，第一种更新机制是：响应于传输网络层邻居表的更新，虚拟交换机利用更新后的传输网络层邻居表同步更新所述虚拟交换机的隧道邻居表中的多个隧道的隧道相关网络协议地址；第二种更新机制是：响应于对内层报文进行隧道报文封装和通过所述多个隧道中的第一隧道进行隧道报文发送，通过查询相对于所述虚拟交换机的本地地址解析协议表，获取与外层报文所包括的目的网络协议地址对应的目的物理地址，当所述本地地址解析协议表查询失败时，缓存所述内层报文并向所述目的网络协议地址发送地址解析协议请求，以及，当与所述地址解析协议请求对应的地址解析协议响应没有在所述内层报文相关联的报文生存周期内被收到时，清理被缓存的所述内层报文。应当理解的是，第一种更新机制和第二种更新机制之间是彼此独立运行且协同作用。在这两种更新机制的协同作用下，可以避免首包的丢失，提高隧道首包的转发效率，还可以降低需要缓存的首包数量，降低内存资源和处理流程的损耗，有利于提高隧道报文封装成功率、实现零丢包还有降低网络延迟和提升网络传输性能。在一种可能的实施方式中，所述方法还包括：当与所述地址解析协议请求对应的所述地址解析协议响应在所述内层报文相关联的报文生存周期内被收到时，利用所述地址解析协议响应，更新所述本地地址解析协议表以及对被缓存的所述内层报文进行隧道报文封装得到所述隧道报文。超时清理报文针对的是网络异常的情况，例如网络拥塞和链路异常等造成长时间得不到响应的情况。这些网络异常情况一般可认为网络不可达，因此在这样的网络异常情况下发生丢包是可以接受的，并不是因为处理机制造成的丢包。另外，超时清理报文，可以预留足够的等待时间，这样在网络状况正常的情况下可以做到零丢包。如此，实现了防止丢弃首包从而提高隧道首包的转发效率。在一种可能的实施方式中，所述内层报文包括内层以太网报文头、内层网络协议地址头和载荷。在一种可能的实施方式中，所述隧道报文的隧道报文格式是虚拟扩展局域网，网络虚拟化通用路由封装或者通用网络虚拟化封装。在一种可能的实施方式中，所述虚拟交换机是开放虚拟交换机、或者开放虚拟交换机与数据平面开发套件的结合。应当理解的是，本申请实施例提供的一种用于隧道报文封装的方法、计算机设备及介质，可以适用于如云计算和数据中心的应用场景，可以适配任意合适的内层报文或者原始报文的报文封装格式，也可以适配任意合适的隧道报文格式，虚拟交换机可以采用任意合适的产品或者服务，只要满足在上述的两种彼此独立运行的更新机制的协同作用下，可以避免首包的丢失，提高隧道首包的转发效率，还可以降低需要缓存的首包数量，降低内存资源和处理流程的损耗，有利于提高隧道报文封装成功率、实现零丢包还有降低网络延迟和提升网络传输性能。图3是本申请实施例提供的一种计算设备的结构示意图，该计算设备300包括：一个或者多个处理器310、通信接口320以及存储器330。所述处理器310、通信接口320以及存储器330通过总线340相互连接。可选地，该计算设备300还可以包括输入/输出接口350，输入/输出接口350连接有输入/输出设备，用于接收用户设置的参数等。该计算设备300能够用于实现上述的本申请实施例中设备实施例或者系统实施例的部分或者全部功能；处理器310还能够用于实现上述的本申请实施例中方法实施例的部分或者全部操作步骤。例如，该计算设备300执行各种操作的具体实现可参照上述实施例中的具体细节，如处理器310用于执行上述方法实施例中部分或者全部步骤或者上述方法实施例中的部分或者全部操作。再例如，本申请实施例中，计算设备300可用于实现上述装置实施例中一个或者多个部件的部分或者全部功能，此外通信接口320具体可用于为了实现这些装置、部件的功能所必须的通讯功能等，以及处理器310具体可用于为了实现这些装置、部件的功能所必须的处理功能等。应当理解的是，图3的计算设备300可以包括一个或者多个处理器310，并且多个处理器310可以按照并行化连接方式、串行化连接方式、串并行连接方式或者任意连接方式来协同提供处理能力，或者多个处理器310可以构成处理器序列或者处理器阵列，或者多个处理器310之间可以分成主处理器和辅助处理器，或者多个处理器310之间可以具有不同的架构如采用异构计算架构。另外，图3所示的计算设备300，相关的结构性描述及功能性描述是示例性且非限制性的。在一些示例性实施例中，计算设备300可以包括比图3所示的更多或更少的部件，或者组合某些部件，或者拆分某些部件，或者具有不同的部件布置。处理器310可以有多种具体实现形式，例如处理器310可以包括中央处理器、图形处理器、神经网络处理器、张量处理器或数据处理器等一种或多种的组合，本申请实施例不做具体限定。处理器310还可以是单核处理器或多核处理器。处理器310可以由CPU和硬件芯片的组合。上述硬件芯片可以是专用集成电路，可编程逻辑器件或其组合。上述PLD可以是复杂可编程逻辑器件，现场可编程逻辑门阵列，通用阵列逻辑或其任意组合。处理器310也可以单独采用内置处理逻辑的逻辑器件来实现，例如FPGA或数字信号处理器等。通信接口320可以为有线接口或无线接口，用于与其他模块或设备进行通信，有线接口可以是以太接口、局域互联网络等，无线接口可以是蜂窝网络接口或使用无线局域网接口等。存储器330可以是非易失性存储器，例如，只读存储器、可编程只读存储器、可擦除可编程只读存储器、电可擦除可编程只读存储器或闪存。存储器330也可以是易失性存储器，易失性存储器可以是随机存取存储器，其用作外部高速缓存。通过示例性但不是限制性说明，许多形式的RAM可用，例如静态随机存取存储器、动态随机存取存储器、同步动态随机存取存储器、双倍数据速率同步动态随机存取存储器、增强型同步动态随机存取存储器、同步连接动态随机存取存储器和直接内存总线随机存取存储器。存储器330也可用于存储程序代码和数据，以便于处理器310调用存储器330中存储的程序代码执行上述方法实施例中的部分或者全部操作步骤，或者执行上述设备实施例中的相应功能。此外，计算设备300可能包含相比于图3展示的更多或者更少的组件，或者有不同的组件配置方式。总线340可以是快捷外围部件互连标准总线，或扩展工业标准结构总线、统一总线、计算机快速链接、缓存一致互联协议等。总线340可以分为地址总线、数据总线、控制总线等。总线340除包括数据总线之外，还可以包括电源总线、控制总线和状态信号总线等。但是为了清楚说明起见，图3中仅用一条粗线表示，但并不表示仅有一根总线或一种类型的总线。本申请实施例提供的方法和设备是基于同一发明构思的，由于方法及设备解决问题的原理相似，因此方法与设备的实施例、实施方式、示例或实现方式可以相互参见，其中重复之处不再赘述。本申请实施例还提供一种系统，该系统包括多个计算设备，每个计算设备的结构可以参照上述所描述的计算设备的结构。该系统可实现的功能或者操作可以参照上述方法实施例中的具体实现步骤和/或上述装置实施例中所描述的具体功能，在此不再赘述。本申请实施例还提供一种计算机可读存储介质，所述计算机可读存储介质中存储有计算机指令，当所述计算机指令在计算机设备上运行时可以实现上述方法实施例中的方法步骤。所述计算机可读存储介质的处理器在执行上述方法步骤的具体实现可参照上述方法实施例中所描述的具体操作和/或上述装置实施例中所描述的具体功能，在此不再赘述。本领域内的技术人员应明白，本申请的实施例可提供为方法、系统、或计算机程序产品。本申请可采用完全硬件实施例、完全软件实施例、或结合软件和硬件方面的实施例的形式。本申请实施例可以全部或部分地通过软件、硬件、固件或其他任意组合来实现。当使用软件实现时，上述实施例可以全部或部分地以计算机程序产品的形式实现。本申请可采用在一个或多个其中包含有计算机可用程序代码的计算机可用存储介质上实施的计算机程序产品的形式。所述计算机程序产品包括一个或多个计算机指令。在计算机上加载或执行所述计算机程序指令时，全部或部分地产生按照本申请实施例所述的流程或功能。所述计算机可以为通用计算机、专用计算机、计算机网络、或者其他可编程装置。计算机指令可以存储在计算机可读存储介质中，或者从一个计算机可读存储介质向另一个计算机可读存储介质传输，例如，计算机指令可以从一个网站站点、计算机、服务器或数据中心通过有线或无线方式向另一个网站站点、计算机、服务器或数据中心进行传输。计算机可读存储介质可以是计算机能够存取的任何可用介质或者是包含一个或多个可用介质集合的服务器、数据中心等数据存储设备。可用介质可以是磁性介质、光介质、或者半导体介质。半导体介质可以是固态硬盘，也可以是随机存取存储器，闪存，只读存储器，可擦可编程只读存储器，电可擦可编程只读存储器，寄存器或任何其他形式的合适存储介质。本申请是参照根据本申请实施例的方法、设备、和计算机程序产品的流程图和/或方框图来描述。可由计算机程序指令实现流程图和/或方框图中的每一流程和/或方框、以及流程图和/或方框图中的流程和/或方框的结合。可提供这些计算机程序指令到通用计算机、专用计算机、嵌入式处理机或其他可编程数据处理设备的处理器以产生一个机器，使得通过计算机或其他可编程数据处理设备的处理器执行的指令产生用于实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能的装置。这些计算机程序指令也可存储在能引导计算机或其他可编程数据处理设备以特定方式工作的计算机可读存储器中，使得存储在该计算机可读存储器中的指令产生包括指令装置的制造品，该指令装置实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能。这些计算机程序指令也可装载到计算机或其他可编程数据处理设备上，使得在计算机或其他可编程设备上执行一系列操作步骤以产生计算机实现的处理，从而在计算机或其他可编程设备上执行的指令提供用于实现在流程图一个流程或多个流程和/或方框图一个方框或多个方框中指定的功能的步骤。在上述实施例中，对各个实施例的描述都各有侧重，某个实施例中没有详述的部分，可以参见其它实施例的相关描述。显然，本领域的技术人员可以对本申请实施例进行各种改动和变型而不脱离本申请实施例的精神和范围。本申请实施例方法中的步骤可以根据实际需要进行顺序调整、合并或删减；本申请实施例系统中的模块可以根据实际需要进行划分、合并或删减。如果本申请实施例的这些修改和变型属于本申请权利要求及其等同技术的范围之内，则本申请也意图包含这些改动和变型在内。
