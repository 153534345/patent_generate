标题title
一种簇间区块传输方法、存储介质及计算设备
摘要abst
本发明公开了一种簇间区块传输方法、存储介质及计算设备，首先计算簇的信任值，然后计算节点综合PR值包括节点的传输速率PR值和信任PR值，最后依据节点综合PR值选择最优节点传输块。由于该方法是簇头节点遍历其邻居节点和与其同属一簇的非簇头节点集合，从而降低区块链的区块传输时延，减少分叉的可能性，降低低效节点的影响，进而增加区块链的稳定性和安全性。
权利要求书clms
1.一种簇间区块传输方法，其特征在于，包括：发送簇的簇头节点广播inv消息到所有同属发送簇的非簇头节点；接收所述inv消息后的发送簇的非簇头节点广播inv消息给目标簇的特定非簇头节点，所述特定非簇头节点指的是与发送簇的非簇头节点处于邻居节点位置的非簇头节点；接收所述inv消息后的特定非簇头节点广播inv消息给目标簇的簇头节点，并记录inv消息的来源；接收所述inv消息后的目标簇的簇头节点发送request消息；接收所述request消息后的特定非簇头节点查找消息来源记录将其发送给发送簇对应的非簇头节点；接收所述request消息后的发送簇对应的非簇头节点判断消息来源所在簇的信任PR值是否高于设定值，如高于则记录消息来源所在簇的综合PR值，否则不记录；发送簇对应的非簇头节点从记录下来的消息来源所在簇的综合PR值中选取最高值更新作为推荐簇，如记录为空则推荐簇也为空；从发送簇的各个非簇头节点的推荐簇中选取综合PR值最高的作为传输对象，并将提供该推荐簇的非簇头节点作为推荐节点，如果发送簇的各个非簇头节点的推荐簇均为空，则终止；发送簇的簇头节点发送区块给所述推荐节点，再通过推荐节点将区块发送给推荐簇的特定非簇头节点，之后将发送簇中所有非簇头节点的request消息记录来源和推荐簇相同的记录删除。2.根据权利要求1所述的簇间区块传输方法，其特征在于，所述综合PR值的计算过程包括：获取簇I在t时刻信任PR值；获取簇I在t时刻传输效率PR值；根据下式计算簇I在t时刻的综合PR值γIt；；式中，表示簇I在t时刻传输效率PR值，/＞表示簇I在t时刻信任PR值，σ1和σ2分别表示传输效率系数和信任值系数，σ1+σ2=1。3.根据权利要求2所述的簇间区块传输方法，其特征在于，所述簇I在t时刻信任PR值的计算公式为：；式中，βIt和表示簇I在t时刻的信任PR值，βJt表示簇J在t时刻的信任PR值，MI表示非簇头节点集合，e为自然常数，d为阻尼系数，d∈，N为整个当前区块链网络中所有簇的数量，表示簇I在t时刻的传输行为信任值，/＞表示簇I在t时刻的验证行为信任值。4.根据权利要求3所述的簇间区块传输方法，其特征在于，所述簇I在t时刻的传输行为信任值的计算公式为：；式中，λ1和λ2分别表示当前信任值系数和历史信任值系数，且，/＞表示簇J在t时刻的当前信任值，/＞表示簇J在t时刻的历史信任值。5.根据权利要求3所述的簇间区块传输方法，其特征在于，所述簇I在t时刻的验证行为信任值的计算公式为：；式中，B表示单个交易的大小，Cj表示节点j的CPU功率，节点j属于MI ，card表示集合MI内的非簇头节点数目。6.根据权利要求2所述的簇间区块传输方法，其特征在于，所述簇I在t时刻传输效率PR值的计算公式为：；式中，表示簇J在t时刻的传输效率PR值，簇J为簇I的邻簇，NI为簇I的邻簇集合，e为自然常数，d为阻尼系数，d∈，N为整个当前区块链网络中所有簇的数量，μIJ为簇I到簇J的传输速率。7.根据权利要求6所述的簇间区块传输方法，其特征在于，所述簇I的邻簇集合的出度，计算公式为：；式中，OI表示簇I的出度，card表示簇I的邻簇集合NI内的元素数目。8.根据权利要求6所述的簇间区块传输方法，其特征在于，所述簇I到簇J的传输速率的计算公式为：；式中，η表示节点间的平均传输速度，kIJ表示簇I的出度占邻居簇J的总出度的比例，Dij表示簇I到簇J的距离。9.一种存储一个或多个程序的计算机可读存储介质，其特征在于，所述一个或多个程序包括指令，所述指令当由计算设备执行时，使得所述计算设备执行根据权利要求1至8所述的方法中的任一方法。10.一种计算设备，其特征在于，包括，一个或多个处理器、存储器以及一个或多个程序，其中一个或多个程序存储在所述存储器中并被配置为由所述一个或多个处理器执行，所述一个或多个程序包括用于执行根据权利要求1至8所述的方法中的任一方法的指令。
说明书desc
技术领域本发明涉及一种簇间区块传输方法、存储介质及计算设备，属于区块链技术领域。背景技术区块链，字面意思即由区块组成的链条，其中的各个区块是由密码学串接并保护的串连文字记录。每一个区块中均存储着前一个区块的加密散列、相应时间戳记以及交易资料等验证信息，如果对区块内容进行更改，可以较为轻松地通过其他区块保存的验证信息来验证，这使得区块内容难以篡改，具有较高的可信度。区块链是一个集合了分布式数据存储、点对点传输、共识机制、加密算法等计算机技术的新型应用模式，其有着广泛的应用前景，但是面临着节点间如何有效地共享区块信息等问题。问题一：分叉产生的原因是区块链版本更迭导致的新版本和旧版本产生的区块无法被对方识别认可。比特币按计划进行了名为Genesis的升级。由于大多数节点还没有更新，这导致了一个较小的链被拆分，其中存在两个版本的BSV。大约四分之一的区块链节点仍在旧版本上，这意味着这些节点无法与主链同步。为了降低分叉产生的可能性，提高块在区块链中的传输速率，让区块尽快传播是有效的解决方案。因此，如何提高区块的传输效率具有很高的意义。问题二：在节点传输与验证块的过程中，由于节点的自身能力差异导致传输与验证效率不一致。在区块链网络中，恶意攻击将会导致安全和信任问题，并且在公共区块链中有51％的攻击可能性。还有不少节点加入区块链却不具备较高的验证传输意愿，这些节点的存在会大大降低块在区块链中传输的效率，也会对其他节点产生攻击行为。因此需要对高效率的安全节点提供奖励，并及时对低效率的有害节点采取行动。发明内容本发明所要解决的技术问题是克服现有技术的缺陷，提供一种簇间区块传输方法、存储介质及计算设备。为解决上述技术问题，本发明提供一种簇间区块传输方法，包括：发送簇的簇头节点广播inv消息到所有同属发送簇的非簇头节点；接收所述inv消息后的发送簇的非簇头节点广播inv消息给目标簇的特定非簇头节点，所述特定非簇头节点指的是与发送簇的非簇头节点处于邻居节点位置的非簇头节点；接收所述inv消息后的特定非簇头节点广播inv消息给目标簇的簇头节点，并记录inv消息的来源；接收所述inv消息后的目标簇的簇头节点发送request消息；接收所述request消息后的特定非簇头节点查找消息来源记录将其发送给发送簇对应的非簇头节点；接收所述request消息后的发送簇对应的非簇头节点判断消息来源所在簇的信任PR值是否高于设定值，如高于则记录消息来源所在簇的综合PR值，否则不记录；发送簇对应的非簇头节点从记录下来的消息来源所在簇的综合PR值中选取最高值更新作为推荐簇，如记录为空则推荐簇也为空；从发送簇的各个非簇头节点的推荐簇中选取综合PR值最高的作为传输对象，并将提供该推荐簇的非簇头节点作为推荐节点，如果发送簇的各个非簇头节点的推荐簇均为空，则终止；发送簇的簇头节点发送区块给所述推荐节点，再通过推荐节点将区块发送给推荐簇的特定非簇头节点，之后将发送簇中所有非簇头节点的request消息记录来源和推荐簇相同的记录删除。进一步的，所述综合PR值的计算过程包括：获取簇I在t时刻信任PR值；获取簇I在t时刻传输效率PR值；根据下式计算簇I在t时刻的综合PR值γIt； ；式中，表示簇I在t时刻传输效率PR值，/＞表示簇I在t时刻信任PR值，σ1和σ2分别表示传输效率系数和信任值系数，σ1+σ2=1。进一步的，所述簇I在t时刻信任PR值的计算公式为：；式中，βIt和表示簇I在t时刻的信任PR值，βJt表示簇J在t时刻的信任PR值，MI表示非簇头节点集合，e为自然常数，d为阻尼系数，d∈，N为整个当前区块链网络中所有簇的数量，表示簇I在t时刻的传输行为信任值，/＞表示簇I在t时刻的验证行为信任值。进一步的，所述簇I在t时刻的传输行为信任值的计算公式为：；式中，λ1和λ2分别表示当前信任值系数和历史信任值系数，且，/＞表示簇J在t时刻的当前信任值，/＞表示簇J在t时刻的历史信任值。进一步的，所述簇I在t时刻的验证行为信任值的计算公式为：；式中，B表示单个交易的大小，Cj表示节点j的CPU功率，节点j属于MI ，card表示集合MI内的非簇头节点数目。进一步的，所述簇I在t时刻传输效率PR值的计算公式为：；式中，表示簇J在t时刻的传输效率PR值，簇J为簇I的邻簇，NI为簇I的邻簇集合，e为自然常数，d为阻尼系数，d∈，N为整个当前区块链网络中所有簇的数量，μIJ为簇I到簇J的传输速率。进一步的，所述簇I的邻簇集合的出度，计算公式为：；式中，OI表示簇I的出度，card表示簇I的邻簇集合NI内的元素数目。进一步的，所述簇I到簇J的传输速率的计算公式为：；式中，η表示节点间的平均传输速度，kIJ表示簇I的出度占邻居簇J的总出度的比例，Dij表示簇I到簇J的距离。一种存储一个或多个程序的计算机可读存储介质，所述一个或多个程序包括指令，所述指令当由计算设备执行时，使得所述计算设备执行所述的方法中的任一方法。一种计算设备，包括，一个或多个处理器、存储器以及一个或多个程序，其中一个或多个程序存储在所述存储器中并被配置为由所述一个或多个处理器执行，所述一个或多个程序包括用于执行所述的方法中的任一方法的指令。本发明所达到的有益效果：降低区块链的区块传输时延，减少分叉的可能性，降低低效节点的影响，进而增加区块链的稳定性和安全性。附图说明图1是消息及区块的传输示意图；图2是面向区块传输的簇选择模型示意图；图3是信任值关系图；图4是区块传递到全网络的时间图；图5是不同网络大小下区块传递到全网络的时间图；图6是区块平均传输时延图；图7是区块链网络平均吞吐量图；图8是存在恶意节点下区块传播率图。实施方式下面结合附图对本发明作进一步描述。以下实施例仅用于更加清楚地说明本发明的技术方案，而不能以此来限制本发明的保护范围。实施例1，本实施例中，公开了一种簇间区块传输方法，包括：1）簇头节点广播inv消息到所有同属一簇的非簇头节点；2）非簇头节点收到来自与其同属一簇的簇头节点的inv消息后广播给与其不属于一簇的邻居节点；3）非簇头节点收到来自与其不属于一簇的节点的inv消息后将其发送与其同属一簇的簇头节点，并记录消息的来源；4）簇头节点收到inv消息后发送request消息给该inv消息的发送方；5）非簇头节点收到来自与其同属一簇的簇头节点的request消息后，查找消息来源记录将其发送给对应的节点；6）非簇头节点收到来自与其不属于一簇的节点的request消息后，判断消息来源所在簇的信任PR值是否高于设定值，如高于则记录消息来源所在簇的综合PR值，否则不记录；7）非簇头节点从记录下来的消息来源所在簇的综合PR值中选取最高值更新作为推荐簇，如记录为空则推荐簇也为空；8）在一次区块传输事件中，簇头节点第一次收到request消息，等待一段时间后，从与其同属一簇的各个非簇头节点的推荐簇中选取综合PR值最高的作为传输对象，并将提供该推荐簇的非簇头节点作为推荐节点。如果同属一簇的各个非簇头节点的推荐簇均为空，则终止；9）簇头节点将区块发送给推荐节点；10）非簇头节点收到来自与其同属一簇的簇头节点的区块后，将其发送给隶属于推荐簇的邻居节点。之后将该簇中所有非簇头节点的request消息记录来源和推荐簇相同的记录删除。执行步骤8）。如图1所示，簇头节点a和非簇头节点b同属于一个簇簇A，簇头节点c和非簇头节点d同属于一个簇簇B，节点a和节点b之间、节点b和节点c之间、节点c和节点d之间存在链接。区块的发送方簇头节点a首先将inv消息簇内广播发送给非簇头节点b，然后非簇头节点b转发给属于邻簇的非簇头节点c，非簇头节点c将消息发送给其所属簇的簇头节点d。簇头节点d将发送request消息来请求区块，按照inv消息的发送路劲原路返回。当簇B成为簇A的发送方后，簇A的簇头节点a按照inv消息的路径将区块传输给簇B的簇头节点d。如图2所示，表示先对节点的接收传输块的状态进行分类，然后计算节点综合PR值包括节点的传输速率PR值和信任PR值，最后依据节点综合PR值选择最优节点传输块；将区块链P2P网络作为一个无向图来看待。采用改进后的PageRank算法计算节点综合PR值，以代表节点在区块传输的重要性，并以此选择邻居节点。但是运用PageRank算法计算节点传输区块能力时存在几个问题：1）当节点外连接为0 时会导致迭代停止；2）新加入节点无法快速提高自己的PR值；3）假设在短暂时间内同时出现两个以上区块，容易出现计算混乱；4）PageRank算法对矩阵S有严格要求，即每列值之和均等于1，否则无法使得第 n次迭代时节点的 PR 值组成的列向量矩阵趋于一致，不适用于需权衡多个数据的区块传输情况。为了解决该问题，本发明提出改进的节点PR值计算方法，如式所示：；式中，Rit为节点i在t时刻的PR值。ω表示节点i在t时刻的影响因子，具体分为传输速率影响因子和信任值影响因子，Outi为节点i的出度集合。由于区块链节点之间双向连接，因此即节点i的出度集合与节点i的入度集合相同，同为节点i的邻居节点集合。簇选择的具体过程：将基于节点传输效率和节点信任值进行研究。假设所有节点均属于任意一个簇并在其中担任簇头节点或非簇头节点工作。1、簇传输效率：节点传输块的传输效率受节点出度和节点间距离的影响。具有较大出度的节点能够把区块传输给更多的节点，节点间的距离则象征着块在节点间传输所消耗的时间。1）出度：具有大出度的簇表示簇拥有将块传给更多其他簇的能力，那么该簇就可能具有在整个网络中快速传输块的能力。假设簇I内的非簇头节点集合为，节点的邻节点集合/＞。首先求集合MI中各个节点的邻居节点集合，定义簇Ni为节点/＞所属的簇。令NI表示簇I的邻簇集合，NI的计算方式如式所示：;式中，Ni为节点所属的簇。令OI表示簇I的出度，最后通过式计算出OI： ;式中card意为集合NI内的元素数目。然后令kIJ表示簇I的出度占邻居簇J的总出度的比例，如式所示：;式中，OI和OM分别表示簇I和簇M的出度，NJ为节点J的邻簇集合。2）传输距离：传输速率也受节点间的传输距离影响，计算节点间的欧几里得距离，令Dij表示节点i到节点j的距离，如式所示： ；式中节点i和j的坐标分别为和。由于在簇中，所有收到的消息都经由簇头节点收转分发，因此，对于簇与独立节点、簇与簇之间的距离判定，可以以簇头节点到独立节点的距离或者到另一个簇的簇头节点的距离作为参考。假设簇I的簇头节点HI，其邻簇J，令簇头节点HI传输信息到邻簇J的簇头HJ需要经过节点集合，令DIJ为簇I到簇J的距离，如式所示：；令μIJ为簇I到簇J的传输速率，如式所示： ；式中，η表示节点间的平均传输速度。3）传输速率PR值：令αIt和αJt分别表示簇I和簇J在t时刻的传输效率PR值，如式所示：； 式中，簇J属于集合NI，即簇I的邻簇集合。2、簇信任值假设簇I内有簇头节点，非簇头节点集合MI，以及簇I的邻簇集合NI，OI为簇I的出度即簇I的邻居簇数，设有簇J∈NI，簇J的簇头节点HJ，非簇头节点集合MJ。以节点为类，其信任值分类如下：1）信任PR值：表示结合节点传输和验证方面综合考虑的信任PR值。2）验证行为信任值：表示验证行为体现在节点收到一个块的验证时间，通过节点需要花费多少时间验证块信息来确定。3）传输行为信任值：表示传输行为体现在节点传输块给邻居节点，通过节点间传输块数确定。4）历史信任值：表示之前历史信任值的平均值。5）当前信任值：表示当前节点的信任值。6）直接信任值：表示节点自身的信任值，直接信任值与节点在线时间有关。7）间接信任值：表示节点的邻居节点的在线情况。簇间区块传输主要由簇头节点主使，当无新的推荐节点更新时，终止区块传输行为。由于该方法是簇头节点遍历与其同属一簇的非簇头节点集合，因此该方法的时间复杂度为O。簇的更新由簇头节点发起，每隔一段时间进行，对簇外和簇内的传输效率和信任值进行综合计算，最终得到评判簇的传输优先级的权值，即簇的综合PR值。由于该算法是簇头节点遍历其邻居节点和与其同属一簇的非簇头节点集合，因此该算法的时间复杂度为O。信任值之间的关系如图3所示：图3按照从右到左的顺序即信任值计算方式，具体细则如下：1）节点i在t时刻的直接信任值记为sit，计算如式所示： ；式中，Yi表示节点i当前在线时长，Xi表示节点i的上次离线时长。直接信任值表示节点自身的信任值，直接信任值与节点在线时间有关，需要考虑到节点在线时间对整个网络的稳定性影响。簇I在t时刻的直接信任值记为sIt，计算如式所示：；式中，sIt表示簇I在t时刻的直接信任值，表示簇I的簇头节点HI的节点直接信任值，MI即簇I中非簇头节点集合，card意为集合MI内的元素数目即簇内非簇头节点数目。2）节点i在t时刻的间接信任值记为υit，计算如式所示：；式中，υit表示节点i在t时刻的间接信任值，nij表示节点i对节点j的即时信任值，如式所示：；式中，通过判断节点j是否在线来决定节点i对节点j的即时信任值nij的取值。因为节点之间在线时间存在很大差异性，容易出现某一节点在线而其邻居节点均不在线的情况，因此该式通过统计邻居节点在线数来对节点信任值产的影响。簇I在t时刻的间接信任值记为υIt，计算如式所示： ；式中，表示簇I在t时刻的间接信任值，/＞可通过式得到，为簇I的簇头节点HI的邻簇对其的即时信任值。3）簇I在t时刻的当前信任值记为qIt，计算如式所示： 式中，qIt表示簇I在t时刻的当前信任值，sIt和υIt来自式和式，分别表示簇I在t时刻的直接信任值和间接信任值。4）节点i在t时刻的历史信任值记为hit，计算如式所示：；式中，hit表示节点i在t时刻的历史信任值，τi表示在节点i的当前时刻，Ui表示节点i收到的块总数，uit表示节点i是否在t时刻成功传输一个块，计算如式所示：；式中，通过判断节点i在t时刻是否传输块来决定uit的值，由于非簇头节点主要工作是转发存储交易信息，因此非簇头节点的历史信誉值作为信誉判断标准。由于块的关键收发由一个簇的簇头节点负责，则簇I在t时刻的历史信任值记为hIt，计算如式所示：；式中，表示簇I在t时刻的历史信任值HI为簇I的簇头节点。5）簇I在t时刻的传输行为信任值记为rIt，计算如式所示： ；式中，rIt表示簇I在t时刻的传输行为信任值，λ1和λ2分别表示当前信任值系数和历史信任值系数，且，将式中的I换成J，可以得到簇J在t时刻的传输行为信任值记为rJt。6）簇I在t时刻的验证行为信任值记为vIt，计算如式所示：；式中，B表示单个交易的大小，Cj表示节点j的CPU功率，节点j属于MI即簇I的非簇头节点集合，将式中的I换成J，可以得到簇J在t时刻的验证行为信任值记为vJt。7）令βIt和βJt分别表示簇I和簇J在t时刻的信任PR值，其中，βIt计算如式所示：；式中，簇J属于集合NI，即簇I的邻簇集合，βJt表示簇J在t时刻的信任PR值。3、簇综合PR值簇I在t时刻综合PR值记为γIt，如式所示： ；式中αIt表示簇I在t时刻传输效率PR值，βIt表示簇I在t时刻信任PR值，σ1和σ2分别表示传输效率系数和信任值系数，保证σ1+σ2=1。根据图2可得，当一个簇收到块后在可传输簇中选择值最高的簇进行区块传输行为。对比方法，实验的对比方法是两个比较经典的方法：Layer-Chain：该方法提出了一种被称为分层链的分层边缘云区块链系统，将设备的长期区块链事务数据由轻和全边缘节点和多个分布式云共同保持为三层继承结构，通过构建层链来减少区块传输事件。此外，该方法设计了一种边缘节点分类方法，以有效适应不同边缘节点的计算功率和存储空间的差异。BlockP2P-EP：该方法提出了一种新的网络协议BlockP2P-EP，将区块链网络的工作流划分为两个阶段。在第一阶段，BlockP2P-E实现了构建信任增强的P2P拓扑的目标。在第二阶段，BlockP2P-EP在考虑非活动节点检测的同时，采用优化的广播算法。实验过程：1、实验指标：1）区块传递到全网络的时间：记录区块产生事件发生的时刻和每一个区块存储块事件发生的时刻，计算两者的差值，从而得到从块产生到各个节点收到块的时间。计算最大值得到区块传递到全网的时间，记为Tall，以尽可能减少问题一带来的影响，如式所示：；式中，Ti表示节点i收到区块的时刻，T0表示区块产生事件发生的时刻，节点i属于区块链网络中的所有节点集合。2）不同网络大小下区块传递到全网络的时间：将区块链网络节点数目依次设置为500、1000、2000进行实验，实验公式同式。3）区块平均传输时延将Block内含的交易数目：num依次设置为300、400、500，记录每次区块传输事件的开始时刻和区块传输事件的结束时刻，计算二者的差值得到一次区块传输事件的传输时延。统计每次区块传输事件的传输时延，计算其平均值，得到区块平均传输时延的数据，记为Tave，计算如式所示： ；式中，Tis和Tie分别表示第i次区块传输事件的开始时刻和区块传输事件的结束时刻，all表示一次区块传递到全网的事件中，发生过的区块传输事件的次数。4）区块链网络平均吞吐量记录每次区块传输事件所传输的区块的大小，计算其和除以区块传递到全区块链网络的时间，得到网络平均吞吐量，记为Thr，Thr的计算如式所示：；式中，Trinum表示第i次区块传输事件所传输的区块中所含的交易数目，B表示单个交易的大小，all表示一次区块传递到全网的事件中，发生过的区块传输事件的次数，Tall由式计算所得。5）实时吞吐量首先由各个节点统计自身当前的吞吐量，节点i在t时刻的吞吐量记为Thrit，的计算如式所示：；式中，我们设如果节点i在t时刻处于传输区块状态，那么这是第j次区块传输事件，Bj表示第j次区块传输所传输的区块的大小，Tjs和Tje分别表示第j次区块传输事件的开始时刻和区块传输事件的结束时刻。6）存在恶意节点下区块传播率将pb数值更改为0.5，令一次实验发生数起起区块传输事件，统计每次区块产生事件后，收到区块的节点占总节点的比例，记为PN，以尽可能减少问题三带来的影响，PN的计算如式所示：；式中，Nums表示收到区块的节点数目，N表示区块链网络中总节点数。2、区块传递到全网络的时间区块传递到全网络的时间如图4所示：图4中，BlockP2P-EP方法不同于Layer-Chain方法完全依赖固有链接，主动建立近距离网络集合间的连接，因此相对较快。同时虽然Layer-Chain方法和BlockP2P-EP方法中所有节点也参与传播块，但由于本发明方法中簇头节点仅需将部分区块信息传输给非簇头节点，而BlockP2P-EP方法和Layer-Chain方法需要传输完整的区块信息，因此，本发明方法的传输效率高于其他两个方法。3、不同网络大小下区块传递到全网络的时间不同网络大小下区块传递到全网络的时间如图5所示：图5中，在不同网络节点数下可以观察到Layer-Chain方法、BlockP2P-EP方法和本发明方法在块同步时间上是依次递减的，在节点数为20000 时表现更加明显。相较于Layer-Chain方法，BlockP2P-EP方法采用簇模型，降低了传输时延但并未将节点间区块传输损耗纳入选取区块传输对象标准，本发明方法将节点间区块传输损耗纳入选取区块传输对象标准，降低了所需传输的区块的大小，因此本发明在较大节点数网络中也可以做到最低的区块传递到全网络的时间。4、区块平均传输时延区块平均传输时延如图6所示：图6中，由于Layer-Chain方法完全依赖固有链接，因此区块平均传输时延较高，而本发明方法和BlockP2P-EP方法考虑了这点，则相对较低。与BlockP2P-EP方法相比，本发明方法的区块平均传输时延有显著降低的原因是在本发明簇头节点给非簇头节点传输交易包承担传输主力，而该传输仅需要传输部分区块信息，因此本发明方法的区块平均传输时延能做到最低。5、网络平均吞吐量区块链网络平均吞吐量如图7所示：图7中，BlockP2P-EP方法和Layer-Chain方法在传输中均是传输完整的区块，且绝大部分节点均参与区块传输，因此这两个方法的网络平均吞吐量较高，而且BlockP2P-EP方法所消耗的时间远小于Layer-Chain方法，因此吞吐量较高。与BlockP2P-EP和Layer-Chain方法相比，本发明方法的网络平均吞吐量较低的原因在于本发明簇头节点给非簇头节点传输交易包承担传输主力，非簇头节点绝大部分时刻并不主动传输区块，因此本发明方法的网络平均吞吐量能做到最低。6、存在恶意节点下区块传播率存在恶意节点下区块传播率如图8所示：图8中，由于本方法和BlockP2P-EP方法均统计了传输过程中的情况并设计算法针对性传输，因此在经过一段时间后，收到区块节点数占总节点数比例会稳步提升，而Layer-Chain方法并未对此进行设计，且区块传输依赖于节点间的固有链接，很容易产生被恶意节点包围而导致的传输终止。相较于BlockP2P-EP方法，本发明方法受簇头节点的低效问题影响较大，因此开始数值较低，同样，只要解决簇头低效问题便可以解决问题，在中后期成功率最高。通过将本方法和Layer-Chain方法、BlockP2P-EP方法进行对比，从区块传递到全网络的时间、存在恶意节点下区块传播率三个角度进行对照试验，论证了本发明方法可有效降低分叉和低效节点对区块链网络效率和安全性的影响。 7、实验环境、仿真工具和参数设置实验环境是操作系统为Windows 10，处理器为Intel Core i5-10300HCPU 2.50 GHz，8G运行内存。实验基于Omnet++ 5.4.1模拟器，该模拟器是一个离散事件驱动的仿真模拟器，用来模拟区块链网络中区块传输过程，主要有以下组成部分：1）块产生事件：通过生成随机数控制块的产生，当一个节点生成的随机数低于设定好的块产生的概率/＞时，视为产生一个块。2）区块传输事件：当节点收到块之后选择传输对象并传输的过程。3）恶意节点事件：节点收到合法区块却不执行区块传输或拒绝存储事件。参数设置如下表1所示：表1符号名称数值Ei节点的性能0.5e1节点CPU功率系数0.5O候选节点冗余率2p为簇头节点占总节点数的百分比log2η区块传输速率1d系数0.85N节点总数500αI0传输效率初始值1/NβI0信任值初始值1/Nλ1当前信任值系数0.5λ2历史信任值系数0.5B单个交易的大小500 Mbσ1传输效率系数0.5σ2信任值系数0.5Tgap更新间隔时间1numBlock内含的交易数目300pb恶意节点占比0, 0.8表1中，簇头节点的占比log2的选取由文献一种适用于开放区块链的安全分片协议可得是较优解之一。8、Omnet++模拟方案：1）将网上的资源包解压。2）启动omnetomnetpp-5.4.1ideomnetpp.exe。3）File-＞New-＞new OMNeT++ Project。4）在Project中新建两个文件夹，ned文件夹存储.ned文件，cc文件夹存储.cc、.h、.msg等文件。5）Omnet++ 5.4.1要求定义.ned文件来决定网络的基本样式，例如定义模块有几个门、自定义样式，一个网络中有几个模块，模块之间有什么样的连接关系。定义Node.ned来描述节点的门情况，定义Network.ned来描述一个网络中有几个节点以及节点间的连接情况。6）除了基础样式，要实现具体信息的收发验证，需要定义.cc文件，例如Node.cc，使用Define_Module;语句使其与Node.ned文件建立联系。在Node.cc中，可以面向对象建立节点模型，包括其属性和成员函数。此外，注意在定义Node类时，需要引入父类cSimpleModule，这样可以使用两个模块关键函数：void initialize和voidhandleMessage，前者是一个初始化函数，在模拟模块时执行，后者是当节点收到信息后执行操作。7）虽然在Network.ned文件中可以设置节点间传输时延，但是无法根据节点间距离和传输的文件大小动态的调整传输时延，本次模拟中，采用sendDely函数来认为定义一段时间后传输来模拟传输时延。8）在需要节点自己给自己发送一条区块信息时，自消息scheduleAt可以实现这一需求，通过该函数将区块传输给自己，节点当作收到来自别的节点的块消息进行处理。9）通过新建.msg文件可以在初始类的基础上对消息增加新的属性，比如加入一个int来表示该消息的编号，调试程序可以自动帮助将.msg文件转化为可使用的.h文件和.cc文件，用这种方式可以模拟一个区块，并将区块大小等信息纳入其中。但是节点用handleMessage接收到的依旧是cMessage类，即消息的初始类，缺乏很多成员和成员函数，这时可以用dynamic_cast＜Block*＞将其转化为完整的区块，区块本应有的信息可以调用。同样可以用此方式将cModule类转化为Node类。10）新建.ini文件，写入指定运行的网络名称Network，将Network视作执行模块，即可模拟网络情况。实施例2，与实施例1基于相同的发明构思，本实施例介绍一种存储一个或多个程序的计算机可读存储介质，所述一个或多个程序包括指令，所述指令当由计算设备执行时，使得所述计算设备执行所述方法。实施例3，与实施例1基于相同的发明构思，本实施例介绍一种计算设备，包括，一个或多个处理器、存储器以及一个或多个程序，其中一个或多个程序存储在所述存储器中并被配置为由所述一个或多个处理器执行，所述一个或多个程序包括用于执行所述方法中的任一方法的指令。本领域内的技术人员应明白，本发明的实施例可提供为方法、系统、或计算机程序产品。因此，本发明可采用完全硬件实施例、完全软件实施例、或结合软件和硬件方面的实施例的形式。而且，本发明可采用在一个或多个其中包含有计算机可用程序代码的计算机可用存储介质上实施的计算机程序产品的形式。本发明是参照根据本发明实施例的方法、设备、和计算机程序产品的流程图和／或方框图来描述的。应理解可由计算机程序指令实现流程图和／或方框图中的每一流程和／或方框、以及流程图和／或方框图中的流程和／或方框的结合。可提供这些计算机程序指令到通用计算机、专用计算机、嵌入式处理机或其他可编程数据处理设备的处理器以产生一个机器，使得通过计算机或其他可编程数据处理设备的处理器执行的指令产生用于实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能的装置。这些计算机程序指令也可存储在能引导计算机或其他可编程数据处理设备以特定方式工作的计算机可读存储器中，使得存储在该计算机可读存储器中的指令产生包括指令装置的制造品，该指令装置实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能。这些计算机程序指令也可装载到计算机或其他可编程数据处理设备上，使得在计算机或其他可编程设备上执行一系列操作步骤以产生计算机实现的处理，从而在计算机或其他可编程设备上执行的指令提供用于实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能的步骤。以上所述仅是本发明的优选实施方式，应当指出，对于本技术领域的普通技术人员来说，在不脱离本发明技术原理的前提下，还可以做出若干改进和变形，这些改进和变形也应视为本发明的保护范围。
