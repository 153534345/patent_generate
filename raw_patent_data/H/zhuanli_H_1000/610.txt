标题title
一种基于UDP协议的传输方法
摘要abst
本发明公开了一种基于UDP协议的传输方法，包括以下步骤：S1：对数据进行采集，并打包成文件；S2：数据发送端通过UDP协议对数据进行上传，发送端在预定时间内未收到确认消息则进行超时重传；S3：轮询对应文件的上传状态信息，若收到上传成功指示，则删除对应文件。本发明的有益效果是：本发明无需接收端对数据进行判定是否完整，全部由发送端来判断数据的完整性，从而降低服务器接收端的技术能力要求；并且对文件进行加密处理，从而在不可靠网络环境下保证了数据的完整性和安全性。
权利要求书clms
1.一种基于UDP协议的传输方法，其特征在于：包括以下步骤：S1：对数据进行采集，并打包成文件；S2：数据发送端通过UDP协议对数据进行上传，发送端在预定时间内未收到确认消息则进行超时重传；S3：轮询对应文件的上传状态信息，若收到上传成功指示，则删除对应文件。2.根据权利要求1所述的基于UDP协议的传输方法，其特征在于：所述步骤S1中，还包括以下步骤：S11：从数据源采集对应数据，并将采集到的数据按照预定格式打包成文件，以时间戳命名存储在固定路径F中；S12：发送端定期检测路径F下是否有文件需要上传，若有，则执行步骤S2，若路径F下不存在文件，则重新进行数据采集。3.根据权利要求2所述的基于UDP协议的传输方法，其特征在于：所述步骤S11中，对文件进行加密处理。4.根据权利要求3所述的基于UDP协议的传输方法，其特征在于：所述步骤S2中，还包括以下步骤：S21：数据发送端定期检查路径F下是否有文件需要上传，若有，则向服务器发送上传命令；S22：服务器接收上传命令后，等待数据接收；S23：通过UDP协议对数据进行上传，并通过确认机制确保每个数据成功传输，发送端在最后一个数据包中添加上传完成标识，用于通知服务器数据上传已完成；S24：服务器完成数据接收后发送确认消息确认，当确认消息未在预定时间内收到，则重新发送当前数据块；S25：当上传成功后，重复步骤S21~步骤S24继续上传下一个数据块。5.根据权利要求4所述的基于UDP协议的传输方法，其特征在于：所述步骤S24中，记录数据上传成功的文件名和上传时间。6.根据权利要求5所述的基于UDP协议的传输方法，其特征在于：所述步骤S3中，还包括以下步骤：S31：当在路径F下发现文件时，则向服务器发送请求，获取对应文件的上传状态；S32：服务器接收到请求后，返回确认消息，发送端根据服务器返回的确认消息判断数据是否成功上传，若成功上传，则删除路径F下的对应文件，S33：若上传失败，则等待预设时间后重复步骤S31和步骤S32重新检查上传状态。7.根据权利要求6所述的基于UDP协议的传输方法，其特征在于：步骤S2预定检查的时间小于步骤S3状态查询的时间。
说明书desc
技术领域本发明涉及计算机网络通信技术领域，特别是一种基于UDP协议的传输方法。背景技术电力信息采集、农业用水、工业现场传感器数据采集等应用场景的通信的方式都是现场采集设备收集对应数据，定时进行上报，其特点是每次采集的数据相对比较完整，两次采集的数据内容基本一致，只是各个时刻的值不一样。为了保证每次采集的数据能让服务器收到，就需要保证网络通信的可靠性。在现有的技术中，大部分都是通过服务器来发现数据丢失及发起重传，比如现有专利名称为“一种基于 UDP 协议的故障录波数据的传输方法”的中国专利中记载了接收端定时检查数据缓冲区的连续性，如果检测到数据不连续，将丢失的数据序号发送给发送端，发送端收到后重传相应序号的数据；再如现有专利名称为“基于UDP协议的数据流快速传输方法、系统及介质”的中国专利，其中记载了接收端在接收目标文件的数据包的过程中还包括在接收最后一个数据包是进行校验的步骤，扫描索引位置A、最大索引位置n-1之间的索引，将该区间内未接收的包索引生成重传请求发送给发送端。即传统的实现方法均是通过服务器进行判断，需要服务器跟踪数据的完整性，若服务器连接的终端量非常大时，服务器将成为瓶颈。发明内容本发明的目的在于克服现有技术的缺点，提供一种基于UDP协议的传输方法。本发明的目的通过以下技术方案来实现：一种基于UDP协议的传输方法，包括以下步骤：S1：对数据进行采集，并打包成文件；S2：数据发送端通过UDP协议对数据进行上传，发送端在预定时间内未收到确认消息则进行超时重传；S3：轮询对应文件的上传状态信息，若收到上传成功指示，则删除对应文件。优选的，步骤S1中，还包括以下步骤：S11：从数据源采集对应数据，并将采集到的数据按照预定格式打包成文件，以时间戳命名存储在固定路径F中；S12：发送端定期检测路径F下是否有文件需要上传，若有，则执行步骤S2，若路径F下不存在文件，则重新进行数据采集。优选的，步骤S11中，对文件进行加密处理。优选的，步骤S2中，还包括以下步骤：S21：数据发送端定期检查路径F下是否有文件需要上传，若有，则向服务器发送上传命令；S22：服务器接收上传命令后，等待数据接收；S23：通过UDP协议对数据进行上传，并通过确认机制确保每个数据成功传输，发送端在最后一个数据包中添加上传完成标识，用于通知服务器数据上传已完成；S24：服务器完成数据接收后发送确认消息确认，当确认消息未在预定时间内收到，则重新发送当前数据块；S25：当上传成功后，重复步骤S21~步骤S24继续上传下一个数据块。优选的，步骤S24中，记录数据上传成功的文件名和上传时间。优选的，步骤S3中，还包括以下步骤：S31：当在路径F下发现文件时，则向服务器发送请求，获取对应文件的上传状态；S32：服务器接收到请求后，返回确认消息，发送端根据服务器返回的确认消息判断数据是否成功上传，若成功上传，则删除路径F下的对应文件，S33：若上传失败，则等待预设时间后重复步骤S31和步骤S32重新检查上传状态。优选的，步骤S2预定检查的时间小于步骤S3状态查询的时间。本发明具有以下优点：本发明无需接收端对数据进行判定是否完整，全部由发送端来判断数据的完整性，从而降低服务器接收端的技术能力要求；并且对文件进行加密处理，从而在不可靠网络环境下保证了数据的完整性和安全性。附图说明图1 为步骤S1流程的结构示意图；图2 为步骤S2流程的结构示意图；图3 为步骤S3流程的结构示意图。具体实施方式为使本发明实施方式的目的、技术方案和优点更加清楚，下面将结合本发明实施方式中的附图，对本发明实施方式中的技术方案进行清楚、完整地描述，显然，所描述的实施方式是本发明一部分实施方式，而不是全部的实施方式。通常在此处附图中描述和示出的本发明实施方式的组件可以以各种不同的配置来布置和设计。因此，以下对在附图中提供的本发明的实施方式的详细描述并非旨在限制要求保护的本发明的范围，而是仅仅表示本发明的选定实施方式。基于本发明中的实施方式，本领域普通技术人员在没有作出创造性劳动前提下所获得的所有其他实施方式，都属于本发明保护的范围。需要说明的是，在不冲突的情况下，本发明中的实施方式及实施方式中的特征可以相互组合。应注意到：相似的标号和字母在下面的附图中表示类似项，因此，一旦某一项在一个附图中被定义，则在随后的附图中不需要对其进行进一步定义和解释。在本实施例中，一种基于UDP协议的传输方法，包括以下步骤：S1：对数据进行采集，并打包成文件；S2：数据发送端通过UDP协议对数据进行上传，发送端在预定时间内未收到确认消息则进行超时重传；S3：轮询检测服务器发送的对应文件的上传状态信息，若收到上传成功指示，则删除对应文件。本发明无需接收端对数据进行判定是否完整，全部由发送端来判断数据的完整性，从而降低服务器接收端的技术能力要求；并且对文件进行加密处理，从而在不可靠网络环境下保证了数据的完整性和安全性。在本实施例中，步骤S1的主要目的是负责数据采集和文件打包，步骤S2的主要目的是负责数据上传，步骤S3的主要目的是负责状态检测和文件删除。进一步的，如图1所示，步骤S1中，还包括以下步骤：S11：从数据源采集对应数据，并将采集到的数据按照预定格式打包成文件，以时间戳命名存储在固定路径F中；优选的，对文件进行加密处理。具体地说，可使用数字签名机制，从而防止数据被篡改。S12：发送端定期检测路径F下是否有文件需要上传，若有，则执行步骤S2，若路径F下不存在文件，则重新进行数据采集。具体地说，按照时间戳命名文件，确保了文件的唯一性。再进一步的，如图2所示，步骤S2中，还包括以下步骤：S21：数据发送端定期检查路径F下是否有文件需要上传，若有，则向服务器发送上传命令；S22：服务器接收上传命令后，等待数据接收；S23：通过UDP协议对数据进行上传，并通过确认机制确保每个数据成功传输，发送端在最后一个数据包中添加上传完成标识，用于通知服务器数据上传已完成；S24：服务器完成数据接收后发送确认消息确认，当确认消息未在预定时间内收到，则重新发送当前数据块；优选的，记录数据上传成功的文件名和上传时间，用于后续检查。S25：当上传成功后，重复步骤S21~步骤S24继续上传下一个数据块。在本实施例中，如图3所示，步骤S3中，还包括以下步骤：S31：当在路径F下发现文件时，则向服务器发送请求，获取对应文件的上传状态；进一步的，步骤S2预定检查的时间小于步骤S3状态查询的时间，其目的是防止重传。S32：服务器接收到请求后，返回确认消息，发送端根据服务器返回的确认消息判断数据是否成功上传，若成功上传，则删除路径F下的对应文件，S33：若上传失败，则等待预设时间后重复步骤S31和步骤S32重新检查上传状态。尽管参照前述实施例对本发明进行了详细的说明，对于本领域的技术人员来说，其依然可以对前述各实施例所记载的技术方案进行修改，或者对其中部分技术特征进行等同替换,凡在本发明的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本发明的保护范围之内。
