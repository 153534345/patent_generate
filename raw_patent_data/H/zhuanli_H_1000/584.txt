标题title
一种基于VIFOX优化算法的车联网计算卸载方法
摘要abst
一种基于VIFOX优化算法的车联网计算卸载方法，属于车联网边缘计算技术领域，通过协调车载设备、道路边缘服务器资源，实现智能任务卸载和动态负载均衡。利用VIFOX算法的优化特性，根据车辆位置、网络状况和任务特性，动态调整任务分配方案，可以大幅度的提高系统资源的利用率，有效降低端到端时延，满足车载终端大量计算密集型和时延敏感型任务对处理的实时性和计算密集的服务需求。本发明可以大幅度的提高系统资源的利用率，有效降低端到端时延，满足车载终端大量计算密集型和时延敏感型任务对处理的实时性和计算密集的服务需求。
权利要求书clms
1.一种基于VIFOX优化算法的车联网计算卸载方法，其特征是：包括以下步骤，步骤一、以最小化系统的总成本为目标，优化时延与能耗因素，建立车联网计算卸载任务问题模型；步骤二、使用整数编码方式，通过染色体表示问题模型计算任务的分配方案；步骤三、对问题模型初始化种群矩阵XP_FOX，XP_FOX代表狐狸的位置；遍历搜索代理索引，检查搜索代理是否满足约束条件；若满足条件，则进行步骤四，若不满足条件，卸载变量设为0；步骤四、使用VIFOX算法结合全局搜索和局部搜索，寻找新位置XP；设置随机变量r用于分配50%的机会执行探索或利用；步骤五、在每次迭代时使用标准基准函数计算每个搜索代理XP_FOX矩阵中每一行的适应度值；将新解决方案的适应度值fit1与先前解决方案的适应度值fit进行重复比较；具有最高拟合值的解决方案将被选择为最佳问题模型解决方案。2.根据权利要求1所述的一种基于VIFOX优化算法的车联网计算卸载方法，其特征是：所述步骤一车联网计算卸载任务问题模型为：对车辆产生的任务j，时延为，任务j的能耗为；式中，χ为任务j的决策指标，当χ为0时在本地进行计算，则计算本地计算时延和本地计算能耗/＞；当χ为1时任务卸载到边缘服务器进行计算，则计算卸载计算时延/＞和卸载计算能耗/＞；以最小化系统总成本为目标，同时考虑所述时延和所述能耗两个因素，建立问题模型；式中，η和λ是权衡时延和能耗的系数，且/＞；通过不断调整和优化权衡因子的取值，获得适合具体应用需求的最佳权衡方案，获得优化后问题模型：式中，V为集合，V={1,2,...,n}。3.根据权利要求1所述的一种基于VIFOX优化算法的车联网计算卸载方法，其特征是：所述步骤二每个所述染色体包含多个基因，每个基因表示一个任务，基因的取值表示任务被分配给对应的设备。4.根据权利要求1所述的一种基于VIFOX优化算法的车联网计算卸载方法，其特征是：所述步骤四VIFOX算法模拟了狐狸在雪地中捕捉猎物的行为，并结合了探索和利用的策略，以平衡全局搜索和局部搜索。5.根据权利要求1所述的一种基于VIFOX优化算法的车联网计算卸载方法，其特征是：所述步骤四VIFOX算法进行探索或利用的方法为：一、开发阶段寻找新位置：p∈时，狐狸会向东北方向跳跃去捕捉猎物；新位置计算如下：当p∈否则，狐狸会向相反方向跳跃，得到新位置如下：为四则运算中的乘法运算，C1,C2均为方向变量；跳跃高度为H_Jump，狐狸与猎物之间的距离为D_FoxP；二、探索阶段寻找新位置：新位置的探索策略如下：变量T_Min，控制因子a，位置BestXP，狐狸对猎物的随机探索通过利用rand得到增强。6.根据权利要求5所述的一种基于VIFOX优化算法的车联网计算卸载方法，其特征是：所述变量T_Min计算为：。7.根据权利要求1所述的一种基于VIFOX优化算法的车联网计算卸载方法，其特征是：所述步骤五标准基准函数的优化目标是最小化车辆处理任务的总时延和总能耗的加权平均值，函数计算为：式中，T为总时延,E为总能耗,η和λ为权重因子。
说明书desc
技术领域本发明属于车联网边缘计算技术领域，特别是涉及到一种基于VIFOX优化算法的车联网计算卸载方法。背景技术随着车辆数量的不断增加和车载网络道路的发展，车载终端的业务环境更加复杂，出现了大量的计算密集型和时延敏感型任务，这些任务不仅数据量较大，而且对处理的实时性具有较高要求。例如：自动驾驶，视频辅助实时导航和语音识别等。然而，车辆有限的计算资源将难以满足此类计算任务的时延需求。为解决这一问题，移动边缘计算作为一种新兴的技术被引入到车联网中，车载边缘计算有能力应对复杂、异构、动态的车载环境，为用户提供低时延、高带宽、高可靠性的服务，最大程度保障不同用户多样化的服务质量。车辆产生的数据不必全部上传至云端，而是在基站、路侧单元等位置部署的边缘服务器上进行计算、存储和应用，可有效降低通信传输数据量、缩短时延并降低用户响应时间。计算卸载作为车联网的关键技术之一，计算卸载能够将计算任务从车辆转移到边缘服务器，以减轻车辆的计算负担并提高计算效率。是有效提升任务处理效率和减少计算时延的重要手段。VEC将轻量级和无处不在的资源从云服务器迁移到配备有VEC服务器的路边单元，以扩展传统VNs的计算能力。目前传统的计算卸载策略存在以下缺点：1.传统方法通常采用静态的分配策略，无法根据实时的网络负载和车辆需求进行动态调整。这导致资源利用率低下和计算性能的不稳定性。2.传统方法通常采用简单的负载均衡或启发式算法来进行任务分配和卸载决策，缺乏针对复杂问题的优化算法。这限制了系统性能的进一步提升和优化。3.不考虑系统效用：传统方法通常只关注单个指标，如任务完成时间或能耗，而忽略了系统整体效用的最大化。这可能导致局部优化而忽视了整体性能的提升。发明内容本发明所要解决的技术问题是：提供一种基于VIFOX优化算法的车联网计算卸载方法，在计算资源的约束下，尽可能地降低用户端的总消耗。一种基于VIFOX优化算法的车联网计算卸载方法，包括以下步骤，步骤一、以最小化系统的总成本为目标，优化时延与能耗因素，建立车联网计算卸载任务问题模型；步骤二、使用整数编码方式，通过染色体表示问题模型计算任务的分配方案；步骤三、对问题模型初始化种群矩阵XP_FOX，XP_FOX代表狐狸的位置；遍历搜索代理索引，检查搜索代理是否满足约束条件；若满足条件，则进行步骤四，若不满足条件，卸载变量设为0；步骤四、使用VIFOX算法结合全局搜索和局部搜索，寻找新位置XP；设置随机变量r用于分配50%的机会执行探索或利用；步骤五、在每次迭代时使用标准基准函数计算每个搜索代理XP_FOX矩阵中每一行的适应度值；将新解决方案的适应度值fit1与先前解决方案的适应度值fit进行重复比较；具有最高拟合值的解决方案将被选择为最佳问题模型解决方案。所述步骤一车联网计算卸载任务问题模型为：对车辆产生的任务j，时延为，任务j的能耗为；式中，χ为任务j的决策指标，当χ为0时在本地进行计算，则计算本地计算时延和本地计算能耗/＞；当χ为1时任务卸载到边缘服务器进行计算，则计算卸载计算时延和卸载计算能耗/＞；以最小化系统总成本为目标，同时考虑所述时延和所述能耗两个因素，建立问题模型 ；式中，η和λ是权衡时延和能耗的系数，且/＞；通过不断调整和优化权衡因子的取值，获得适合具体应用需求的最佳权衡方案，获得优化后问题模型：式中，V为集合，V={1,2,...,n}。所述步骤二每个所述染色体包含多个基因，每个基因表示一个任务，基因的取值表示任务被分配给对应的设备。所述步骤四该算法模拟了狐狸在雪地中捕捉猎物的行为，并结合了探索和利用的策略，以平衡全局搜索和局部搜索。所述步骤四VIFOX算法进行探索或利用的方法为：一、开发阶段寻找新位置：p∈时，狐狸会向东北方向跳跃去捕捉猎物；新位置计算如下：当p∈否则，狐狸会向相反方向跳跃，得到新位置如下：为四则运算中的乘法运算，C1,C2均为方向变量；跳跃高度为H_Jump，狐狸与猎物之间的距离为D_FoxP；二、探索阶段寻找新位置：新位置的探索策略如下：变量T_Min，控制因子a，位置BestXP，狐狸对猎物的随机探索通过利用rand得到增强。所述变量T_Min计算为：。所述步骤五标准基准函数的优化目标是最小化车辆处理任务的总时延和总能耗的加权平均值，函数计算为：式中，T为总时延,E为总能耗,η和λ为权重因子。通过上述设计方案，本发明可以带来如下有益效果：一种基于VIFOX优化算法的车联网计算卸载方法，可以大幅度的提高系统资源的利用率，有效降低端到端时延，满足车载终端大量计算密集型和时延敏感型任务对处理的实时性和计算密集的服务需求。附图说明以下结合附图和具体实施方式对本发明作进一步的说明：图1为本发明一种基于VIFOX优化算法的车联网计算卸载方法流程图。图2为本发明一种基于VIFOX优化算法的车联网计算卸载方法多车多服务模型示意图。图3为本发明一种基于VIFOX优化算法的车联网计算卸载方法VIFOX算法模拟示意图。图4为本发明一种基于VIFOX优化算法的车联网计算卸载方法具体实施方式仿真结果数据量示意图。图5为本发明一种基于VIFOX优化算法的车联网计算卸载方法具体实施方式仿真结果任务量示意图。实施方式一种基于VIFOX优化算法的车联网计算卸载方法，如图1所示，包括以下步骤：步骤1：以最小化联合优化时延与能耗为目的，构建系统问题模型。系统问题模型的构建包括任务模型、车辆移动性模型，计算模型等。步骤2：使用整数编码方式，染色体表示计算任务的分配方案。每个染色体包含多个基因，每个基因表示一个任务，基因的取值表示任务被分配给对应的设备。步骤3：初始化种群矩阵XP_FOX，XP_FOX代表狐狸的位置。遍历搜索代理索引检查搜索代理是否满足约束条件。若满足条件，则进行步骤四，否则，卸载变量设为0。步骤4：使用VIFOX算法寻找新位置XP。该算法模拟了狐狸在雪地中捕捉猎物的行为，并结合了探索和利用的策略，以平衡全局搜索和局部搜索。设置随机变量r用于分配50%的机会执行探索或利用的机会。步骤5：在每次迭代时使用标准基准函数计算每个搜索代理的适应度值。将新解决方案的适应度值fit1与先前解决方案的适应度值fit进行重复比较。具有最高拟合值的解决方案将被选择为最佳解决方案。进一步的，所述步骤1包括如下具体步骤：步骤1-1：本发明所构建车联网计算卸载多车多服务模型如图2所示，道路被划分为多个路段，每个路段均由路边单元RSU和边缘服务器 MEC覆盖。每辆车通过V2I与路边单元进行通信。车辆以速度v匀速行驶，路边等距离设有 RUS且每个RSU中部署MEC服务器。RSU或MEC集合定义为M={1，2，3，...，m}且每个RSU所作用范围半径为R。步骤1-2：构建任务模型，车辆在行驶时产生服从泊松分布的任务，每辆车有且仅有一个任务。任务集合定义为N ={N1,N2，...,Nn}其中j∈V,集合V={1,2,...,n}。在某时刻t，车辆Nj产生的任务可用四元组T=表示，其中Dj表示计算任务的输入数据量大小，Cj表示完成该计算任务所需要的CPU周期数，Tmax表示完成该计算任务的最大容忍时延，χ表示任务卸载决策变量。χ=0时表示该计算任务在车辆进行计算，χ=1时表示该计算任务卸载到边缘服务器进行计算。步骤1-3：车辆以速度v匀速行驶，为了避免路边单元切换带来的任务传输中断问题，车辆在当前路边单元所属的边缘服务器管辖范围内产生的任务应尽可能在当前服务器信号所属范围内完成。假设车辆j当前位于边缘服务器m的覆盖范围内，则车辆j在离开边缘服务器m的覆盖范围之前的剩余停留时间可以为：其中，Rj为边缘服务器j的通信半径，d是车辆j与边缘服务器m之间的水平距离，建模为步骤1-4：计算模型建模为本地和卸载。本地计算时间为：表示车辆自身的计算能力本地计算能耗为：表示每个车辆核心计算任务的功耗，其中/＞是与RSU功率相关的系数卸载计算时延为：Fj表示边缘服务器的计算能力卸载计算能耗为：步骤1-5：传输速率用香农公式来计算，表示为B为信道带宽，Pj 为车辆j的传输功率，Hj2表示车辆j和所属基站的信道增益，信道增益，其中u是车辆用户的信道衰减模型表示为/＞，N0为高斯信道白噪声，上述公式中的V均为集合V={1,2,...,n}。步骤1-6：问题模型对车辆产生的任务j，时延为，任务j的能耗为/＞。式中，χ为任务j的决策指标，当χ为0时在本地进行计算，则计算本地计算时延/＞和本地计算能耗/＞；当χ为1时任务卸载到边缘服务器进行计算，则计算卸载计算时延/＞和卸载计算能耗/＞；本发明的目标是最小化系统的总成本，同时考虑到时延和能耗两个因素。总的问题模型 ； η和λ是权衡时延和能耗的系数，其中/＞且/＞。通过不断调整和优化权衡因子的取值，可以找到适合具体应用需求的最佳权衡方案。则总的优化问题模型可表示为：进一步的，所述步骤3包括如下具体步骤：初始化种群矩阵XP_FOX，XP_FOX代表狐狸的位置。遍历搜索代理索引检查搜索代理是否满足约束条件。若满足条件，则进行步骤四，否则，卸载变量设为0。进一步的，如图4所示，所述步骤4包括如下具体步骤：步骤4-1：红狐会在搜索空间中随机移动，以发现潜在的猎物。它通过听到猎物发出的超声波来寻找猎物，这种听觉感知成为红狐寻找和定位猎物的关键。随机数R＞0.18,声音传播距离D_SouTit计算如下： T_SouT是一个在区间内的随机数。步骤4-2：V_SouS是用于计算基于群体中最佳搜索代理的位置的声速。计算如下所示： 步骤4-3：开发阶段寻找新位置。p∈时，狐狸会向东北方向跳跃去捕捉猎物。新位置计算如下：当p∈否则，狐狸会向相反方向跳跃，得到新位置如下：/＞为四则运算中的乘法运算，C1,C2均为方向变量；跳跃高度为H_Jump，狐狸与猎物之间的距离为D_FoxP。步骤4-4：探索阶段寻找新位置。新位置的探索策略如下：变量T_Min，控制因子a，位置BestXP，狐狸对猎物的随机探索通过利用rand得到增强。步骤4-5：变量T_Min计算如下： 进一步的，所述步骤5包括如下具体步骤：步骤5-1：在每次迭代中，计算每只狐狸的适应度值fit，并且所有狐狸的fit都会创建一个名为适应度函数Fit的向量。将XP_FOX中每只狐狸的适应值与其他狐狸的适应值进行比较，以确定最佳适应值BestF和位置BestXP。步骤5-2：计算适应度函数。系统的优化目标是最小化车辆处理任务的总时延和总能耗的加权平均值。适应度函数计算如下：T为总时延,E为总能耗,η和λ为权重因子。步骤5-3：为了在可能性中选择最佳解决方案，将新解决方案的适应度值fit1与先前解决方案的适应度值fit进行重复比较。具有最高拟合值的解决方案将被选择为最佳解决方案。为了验证优化算法的有效性，本文在python环境下2.70 GHz Intel Core i7处理器中进行仿真。仿真结果如附图4与图5所示，下面对仿真结果进行详细说明。图4对比分析了不同方法在不同数据量情况下的性能。Local为本地计算方案，AVEofflaod为平均卸载方案。Cost代表总代价，总代价为时延和能耗的加权和，总代价越低则表示该方法性能越好。结果表明，随着任务量的增加，所有方法得到的总代价都随着任务量的增多而提升，但本发明提出的VIFOX方法在三种方法中成本值始终最低且总代价消耗平稳。在任务量目达到1500左右时，Local的总消耗是所提算法总消耗的4倍。可以看出，当综合考虑时延和功耗时，我们所提出的计算卸载方案较本地计算具优势，弥补了本地计算的缺陷，同时比AVE offlaod卸载方案在性能上表现更优异。图5对比分析了不同卸载方案在不同可卸载任务量大小下的性能。可以看出，随着计算任务量的增大，Local执行方案所花费的总代价显著增大。VIFOX算法所消耗的总代价变化并不明显，且显著优于其他方案，耗费成本值更低，性能更优。因此，综合仿真结果图4与图5，可以看出本发明提出的方法在计算密集型业务中，较本地执行方案和平均卸载方案来说具有明显的性能优势。
