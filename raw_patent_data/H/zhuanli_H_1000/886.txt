标题title
一种基于物联网平台进行设备数据采集的方法及系统
摘要abst
本发明公开一种基于物联网平台进行设备数据采集的方法及系统，涉及物联网技术领域，方法包括：S1接收目标设备的设备信息；S2根据设备信息检索设备模型；S3根据设备型号信息从数据库中查询设备型号信息对应的设备模型，如果已存在设备模型，则执行S7，否则执行S4；S4根据设备型号信息创建与设备型号信息对应设备模型；S5如果是非直连型设备模型，分指令型和监听型，对于监听型对应对的非直连型设备，则直接跳转到S6；S6使用XML描述报文解析后得到的信息；S7根据使用XML描述的通信指令报文及报文解析后得到的信息创建通信控制模块。在同一软件环境里实现设备定义，能够提升物联网设备的接入效率。
权利要求书clms
1.一种基于物联网平台进行设备数据采集的方法，其特征在于，所述方法应用于接入所述物联网平台的目标设备，所述方法包括：步骤S1，接收目标设备的设备信息，所述设备信息包括设备型号信息；步骤S2，根据所述设备信息检索设备模型；步骤S3，根据设备型号信息从数据库中查询设备型号信息对应的设备模型，如果数据库中已存在设备型号信息对应的设备模型，则执行步骤S7，否则执行步骤S4；步骤S4，根据所述设备型号信息创建与所述设备型号信息对应设备模型；步骤S5，如果是非直连型设备模型，可分为指令型和监听型，如果是指令型非指令设备，需要使用可扩展标记XML语言描述非直连型设备模型的通信指令报文；对于监听型对应对的非直连型设备，则直接跳转到步骤S6；步骤S6，使用可扩展标记XML语言描述报文解析后得到的信息，包括：使用可扩展标记XML语言描述接收报文中的数据偏移量和数据类型；步骤S7，根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，所述控制模块基于XML文件信息实现数据采集接口、应用程序API服务接口或事件发布接口的定义。2.根据权利要求1所述的一种基于物联网平台进行设备数据采集的方法，其特征在于，所述方法还包括：步骤S8，部署所述通信控制模块运行，包括：为每个通信控制模块分配独立的线程。3.根据权利要求1所述的一种基于物联网平台进行设备数据采集的方法，其特征在于，设备模型分为直连型设备模型和非直连型设备模型，直连型设备模型可以自主发送符合平台格式要求的报文；非直连设备模型不能自主发送报文，或发送的报文格式不符合平台的要求，需要根据通信协议解析后，才能被平台理解。4.根据权利要求1所述的一种基于物联网平台进行设备数据采集的方法，其特征在于，在步骤S4之后，如果是直连型设备模型，由于直连型设备模型对应的目标设备配置了标准通信协议，只需要使用JSON语言完成目标设备的描述即可，然后跳转到步骤S7。5.根据权利要求1所述的一种基于物联网平台进行设备数据采集的方法，其特征在于，指令型非直连型设备使用可扩展标记XML语言描述指令的二进制内容，包括：指令的二进制编码、对应的解析文件、指令序号、通信类型、通信地址、发送间隔。6.根据权利要求1所述的一种基于物联网平台进行设备数据采集的方法，其特征在于，所述数据偏移量为采集的目标设备的数据信息在比特流中的位置，所述数据类型所述数据信息的编码方法。7.根据权利要求1所述的一种基于物联网平台进行设备数据采集的方法，其特征在于，所述根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，包括：使用抽象工厂模式创建通信控制模块，每个控制模块可以实现对一个或多个目标设备的通信控制。8.一种基于物联网平台进行设备数据采集的系统，所述系统应用权利要求1-7任一项所述的方法，所述系统包括：信息获取模块，用于接收目标设备的设备信息，所述设备信息包括设备型号信息；检索模块，用于根据所述设备信息检索设备模型；查询模块，根据设备型号信息从数据库中查询设备型号信息对应的设备模型，如果数据库中已存在设备型号信息对应的设备模型，则执行步骤S7，否则执行步骤S4；模型创建模块，根据所述设备型号信息创建与所述设备型号信息对应设备模型；通信指令描述模块，如果是非直连型设备模型，使用可扩展标记XML语言描述非直连型设备模型的通信指令；报文解析模块，所述通信指令分为指令型和监听型，对于监听型对应对的非直连型设备，用于使用可扩展标记XML语言描述报文解析后得到的信息，包括：使用可扩展标记XML语言描述接收报文中的数据偏移量和数据类型；通信控制模块的创建模块，用于根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，所述控制模块基于XML文件信息实现数据采集接口、应用程序API服务接口或事件发布接口的定义。
说明书desc
技术领域本发明涉及物联网技术领域，特别涉及一种基于物联网平台进行设备数据采集的方法及系统。背景技术设备远程管理一直是工业物联网的难点。设备种类繁多,通信协议不统一，给开发和使用都带来很大困难。过去的方法是把设备管理和协议转换分开进行，在通用计算机上集中定义设备,然后在嵌入式系统上开发协议转换程序。这无疑增加了跨平台协作的复杂性。发明内容本发明提供一种基于物联网平台进行设备数据采集的方法及系统，在物联网平台实现设备定义、远程管理和协议转换。这样不仅简化开发,也改善用户体验。根据本公开的一方面，提供了一种基于物联网平台进行设备数据采集的方法，所述方法应用于接入所述物联网平台的目标设备，所述方法包括：步骤S1，接收目标设备的设备信息，所述设备信息包括设备型号信息；步骤S2，根据所述设备信息检索设备模型；步骤S3，根据设备型号信息从数据库中查询设备型号信息对应的设备模型，如果数据库中已存在设备型号信息对应的设备模型，则执行步骤S7，否则执行步骤S4；步骤S4，根据所述设备型号信息创建与所述设备型号信息对应设备模型；步骤S5，如果是非直连型设备模型，可分为指令型和监听型，如果是指令型非指令设备，需要使用可扩展标记XML语言描述非直连型设备模型的通信指令报文；对于监听型对应对的非直连型设备，则直接跳转到步骤S6；步骤S6，使用可扩展标记XML语言描述报文解析后得到的信息，包括：使用可扩展标记XML语言描述接收报文中的数据偏移量和数据类型；步骤S7，根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，所述控制模块基于XML文件信息实现数据采集接口、应用程序API服务接口或事件发布接口的定义。在一种可能的实现方式中，所述方法还包括：步骤S8，部署所述通信控制模块运行，包括：为每个通信控制模块分配独立的线程。在一种可能的实现方式中，设备模型分为直连型设备模型和非直连型设备模型，直连型设备模型可以自主发送符合平台格式要求的报文；非直连设备模型不能自主发送报文，或发送的报文格式不符合平台的要求，需要根据通信协议解析后，才能被平台理解。在一种可能的实现方式中，在步骤S4之后，如果是直连型设备模型，由于直连型设备模型对应的目标设备配置了标准通信协议，只需要使用JSON语言完成目标设备的描述即可，然后跳转到步骤S7。在一种可能的实现方式中，指令型非直连型设备使用可扩展标记XML语言描述指令的二进制内容，包括：指令的二进制编码、对应的解析文件、指令序号、通信类型、通信地址、发送间隔。在一种可能的实现方式中，所述数据偏移量为采集的目标设备的数据信息在比特流中的位置，所述数据类型所述数据信息的编码方法。在一种可能的实现方式中，所述根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，包括：使用抽象工厂模式创建通信控制模块，每个控制模块可以实现对一个或多个目标设备的通信控制。根据本公开的一方面，提供了一种基于物联网平台进行设备数据采集的系统，所述系统应用所述的方法，所述系统包括：信息获取模块，用于接收目标设备的设备信息，所述设备信息包括设备型号信息；检索模块，用于根据所述设备信息检索设备模型；查询模块，根据设备型号信息从数据库中查询设备型号信息对应的设备模型，如果数据库中已存在设备型号信息对应的设备模型，则执行步骤S7，否则执行步骤S4；模型创建模块，根据所述设备型号信息创建与所述设备型号信息对应设备模型；通信指令描述模块，如果是非直连型设备模型，使用可扩展标记XML语言描述非直连型设备模型的通信指令；报文解析模块，所述通信指令分为指令型和监听型，对于监听型对应对的非直连型设备，用于使用可扩展标记XML语言描述报文解析后得到的信息，包括：使用可扩展标记XML语言描述接收报文中的数据偏移量和数据类型；通信控制模块的创建模块，用于根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，所述控制模块基于XML文件信息实现数据采集接口、应用程序API服务接口或事件发布接口的定义。与现有技术相比，本发明的有益效果是：本发明提出了基于物联网平台进行设备数据采集的方法及系统,在同一软件环境里实现设备定义、远程管理和协议转换。这样不仅简化开发,也改善用户体验。基于物联网平台进行设备数据采集的方法利用标准语法完成各种通信协议的表达，程序基于这种表达构建设备的通信控制模块，使得应用程序能够在通用环境中实现对不同设备的通信控制，能够大幅提升物联网设备的接入效率和维护成本。附图说明图1示出本公开一实施例的一种基于物联网平台进行设备数据采集的方法流程图。具体实施方式以下将参考附图详细说明本公开的各种示例性实施例、特征和方面。附图中相同的附图标记表示功能相同或相似的元件。尽管在附图中示出了实施例的各种方面，但是除非特别指出，不必按比例绘制附图。在这里专用的词“示例性”意为“用作例子、实施例或说明性”。这里作为“示例性”所说明的任何实施例不必解释为优于或好于其它实施例。另外，为了更好的说明本公开，在下文的具体实施方式中给出了众多的具体细节。本领域技术人员应当理解，没有某些具体细节，本公开同样可以实施。在一些实例中，对于本领域技术人员熟知的方法、手段、元件和电路未作详细描述，以便于凸显本公开的主旨。根据本公开的一方面，提供了一种基于物联网平台进行设备数据采集的方法，所述方法应用于接入所述物联网平台的目标设备，所述方法包括：步骤S1，接收目标设备的设备信息，所述设备信息包括设备型号信息；步骤S2，根据所述设备信息检索设备模型；步骤S3，根据设备型号信息从数据库中查询设备型号信息对应的设备模型，如果数据库中已存在设备型号信息对应的设备模型，则执行步骤S7，否则执行步骤S4；步骤S4，根据所述设备型号信息创建与所述设备型号信息对应设备模型；步骤S5，如果是非直连型设备模型，可分为指令型和监听型，如果是指令型非指令设备，需要使用可扩展标记XML语言描述非直连型设备模型的通信指令报文；对于监听型对应对的非直连型设备，则直接跳转到步骤S6；步骤S6，使用可扩展标记XML语言描述报文解析后得到的信息，包括：使用可扩展标记XML语言描述接收报文中的数据偏移量和数据类型；步骤S7，根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，所述控制模块基于XML文件信息实现数据采集接口、应用程序API服务接口或事件发布接口的定义。在一种可能的实现方式中，所述方法还包括：步骤S8，部署所述通信控制模块运行，包括：为每个通信控制模块分配独立的线程。在一种可能的实现方式中，设备模型分为直连型设备模型和非直连型设备模型，直连型设备模型可以自主发送符合平台格式要求的报文；非直连设备模型不能自主发送报文，或发送的报文格式不符合平台的要求，需要根据通信协议解析后，才能被平台理解。在一种可能的实现方式中，在步骤S4之后，如果是直连型设备模型，由于直连型设备模型对应的目标设备配置了标准通信协议，只需要使用JSON语言完成目标设备的描述即可，然后跳转到步骤S7。在一种可能的实现方式中，指令型非直连型设备使用可扩展标记XML语言描述指令的二进制内容，包括：指令的二进制编码、对应的解析文件、指令序号、通信类型、通信地址、发送间隔。在一种可能的实现方式中，所述数据偏移量为采集的目标设备的数据信息在比特流中的位置，所述数据类型所述数据信息的编码方法。在一种可能的实现方式中，所述根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，包括：使用抽象工厂模式创建通信控制模块，每个控制模块可以实现对一个或多个目标设备的通信控制。根据本公开的一方面，提供了一种基于物联网平台进行设备数据采集的系统，所述系统应用所述的方法，所述系统包括：信息获取模块，用于接收目标设备的设备信息，所述设备信息包括设备型号信息；检索模块，用于根据所述设备信息检索设备模型；查询模块，根据设备型号信息从数据库中查询设备型号信息对应的设备模型，如果数据库中已存在设备型号信息对应的设备模型，则执行步骤S7，否则执行步骤S4；模型创建模块，根据所述设备型号信息创建与所述设备型号信息对应设备模型；通信指令描述模块，如果是非直连型设备模型，使用可扩展标记XML语言描述非直连型设备模型的通信指令；报文解析模块，所述通信指令分为指令型和监听型，对于监听型对应对的非直连型设备，用于使用可扩展标记XML语言描述报文解析后得到的信息，包括：使用可扩展标记XML语言描述接收报文中的数据偏移量和数据类型；通信控制模块的创建模块，用于根据使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块，所述控制模块基于XML文件信息实现数据采集接口、应用程序API服务接口或事件发布接口的定义。本公开实施例的一种基于物联网平台进行设备数据采集的方法，包括如下步骤：步骤S1，接收设备信息，所述设备信息包括设备型号信息。例如，所述设备信息可以是用户输入的信息。例如，所述设备可以是流量计、电表、积算仪、PLC控制器等。步骤S2，根据所述设备信息检索设备模型。步骤S3，根据设备型号信息从数据库中查询设备型号信息对应的设备模型，如果数据库中已存在设备型号信息对应的设备模型，则执行步骤S7，如果数据库中不存在设备型号信息对应的设备模型，则执行步骤S4。步骤S4，根据所述设备型号信息创建与所述设备型号信息对应设备模型。举例来说，设备模型分为直连型设备模型和非直连型设备模型。直连型设备模型可以自主发送符合平台格式要求的报文。非直连设备模型不能自主发送报文，或发送的报文格式不符合平台的要求，需要根据通信协议解析后，才能被平台理解。如果是直连型设备模型，由于已经直连型设备模型对应的目标设备配置了标准通信协议，只需要使用JSON语言完成设备描述即可，然后跳转到步骤S7；如果是非直连型设备模型，则执行步骤S5，进行通信协议的开发。目标设备是准备接入物联网平台的设备，可以为流量计、电表、积算仪、PLC控制器等。步骤S5，使用可扩展标记XML语言描述非直连型设备模型的通信指令。所述非直连设备模型分为指令型和监听型，监听型对应对的非直连型设备跳转到步骤6，指令型非直连型设备使用可扩展标记XML语言描述指令的二进制内容，包括：指令的二进制编码、对应的解析文件、指令序号、通信类型、通信地址、发送间隔等信息。举例来说，例如，以下XML命令描述了一个MODBUS指令：＜instruct type="MODBUS" deviceaddress="1" functionnumber="3"offsetaddress="3000" registernumber="32" datatype="7"/＞”其中：instruct表示标签名称，表示这是一个指令标签；type，表示指令的类型；deviceaddress，表示设备的通信地址；functionnumber，表示指令的功能码；offsetaddress，表示取数的偏移地址；registernumber，需要获取的寄存器数量；datatype，表示数据类型；通信协议不同，属性也不一样，例如，下面是一个DLT645的指令描述：＜instruct type="DLT645_07" elecaddress="000055162404" PT="20" CT="100" functionnumber="33,33,34,33"/＞。其中，instruct type表示通信协议的类型Elecaddress表示电表地址PT表示电压变比 CT=表示电流变比functionnumber表示指令的功能类型步骤S6，使用可扩展标记XML语言描述报文解析后得到的信息。使用可扩展标记XML语言描述接收报文中的数据偏移量和数据类型。举例来说，在通信传输中，最底层传输的是由“0”，“1”组成的比特流：发送端将信息编码成比特流，接收端将接收到的所述比特流反编码成信息。一个通信报文就是一段包含了完整通信信息的比特流。也就是说，物联网平台需要的信息就包含在这段比特流中。例如，我们需要采集电表设备中的电压这个数据，物联网平台发送指令后，电表设备会返回一串比特流，应用程序根据可扩展标记XML语言中的描述，从这段比特流的指定位置提取出电压数值信息。其中：偏移量就是这个电压数值信息在比特流中的位置。数据类型表示这个电压数值信息的编码方法。例如，接收到的比特流为：01 03 02 00 64 B9 AF，报文用可扩展标记XML语言描述为：＜节点名称 偏移量=“3” 数据类型=“整形”＞。平台根据报文描述可以解析出电压值为100。步骤S7，根据所述使用可扩展标记XML语言描述的通信指令报文及报文解析后得到的信息创建通信控制模块。使用抽象工厂模式创建通信控制模块，每个控制模块可以实现对一个或多个物理设备的通信控制。抽象控制器定义了数据采集、API服务监听、事件发布三个接口。具体的控制器对象基于XML文件信息实现数据采集、API服务、事件发布相关接口。抽象工厂模式是一种计算机软件的设计模式。在软件开发中会将一些行为相似的操作类看成一组产品，把创建具体操作类的行为看成是产品的生产。这样就可以把创建对象的行为放在一个“工厂”类中，“工厂”类根据外部输入的信息创建具体的操作类。而抽象工厂方法就是为多个类似的工厂类定义一个抽象类，使用时先获取一个具体的工厂类，再利用工厂类获得一组操作类，再利用操作类完成具体的动作。在本方案中，设备的操作类包括：数据采集、API服务和事件发布。每种设备都有这些操作类，但具体的实现方式各不相同。把每种设备的不同的操作类用一个“工厂”类来创建，例如：“流量计A工厂”可以创建流量计A数据采集类、流量计AAPI服务类、流量计A事件发布类；“流量计B工厂”可以创建流量计B数据采集类、流量计BAPI服务类、流量计B事件发布类。以此例推，为每种设备都定义一个工厂，来创建具体的操作类。同时可以看到，这些工厂都具备类似的行为：创建数据采集类、创建API服务类和创建事件发布类，因此可以为这些工厂类建立抽象工厂类。使用时，根据输入设备型号信息，平台会实例化对应的工厂类，从而获取该设备的操作类。步骤S8，通信控制模块部署运行。为每个通信控制模块分配独立的线程。应用示例：接收设备信息，例如，用户输入电表型号“Acrel-DTSD1352”，“Acrel-DTSD1352”即为设备信息；物联网平台未检索到该型号的信息，提示用户进行定义设备模型；经查询设备说明文档，“Acrel-DTSD1352”不满足直连设备要求，需要使用XML语言对设备进行建模；使用XML语言对设备进行建模：＜device name="IOTHFYL001" type="INSTRUCT" collectorinterval="60000"sendinterval="1000"＞＜instruct type="MODBUS" deviceaddress="1" functionnumber="3"offsetaddress="3000" registernumber="32"/＞＜/device＞；使用XML语言描述报文解析：＜device name="IOTHFYL001" type="INSTRUCT"＞＜receive instructnumber=”1” propertyname=”电压” offsetnumber="10"datatype="7"/＞＜receive instructnumber=”2” propertyname=”电流” offsetnumber="12"datatype="7"/＞＜/device＞；根据XML文件，动态实例化对应的操作类；通过程序自动的为操作类分配独立的线程，并监视操作类的运行状态。程序在接收设备型号信息输入后，首先从数据库中查找该设备模型，如果设备模型已经存在，则根据设备模型的相关信息构建设备的通信控制模块；否则，应用程序会提示用户新建设备模型，利用标准化语法完成设备模型的开发。图1示出本公开一实施例的一种基于物联网平台进行设备数据采集的方法流程图。如图1所示，所述物联网平台接收设备型号，判断设备模型不存在，如果否，则创建通信控制模块，如果是，则判断是否为非直连设备，如果不是非直连设备，则使用JSON语言完成设备描述，进而创建通信控制模块，如果是非直连设备则判断是否为监听型，如果是监听型，则使用XML描述报文解析，进而创建通信控制模块，如果不是监听型，则使用XML语言描述通信指令，进而使用XML描述报文解析，进而创建通信控制模块，创建通信控制模块步骤之后，为通信控制模块分配独立线程。本发明提出了基于物联网平台进行设备数据采集的方法及系统，在同一软件环境里实现设备定义、远程管理和协议转换。这样不仅简化开发,也改善用户体验。基于物联网平台进行设备数据采集的方法利用标准语法完成各种通信协议的表达，程序基于这种表达构建设备的通信控制模块，使得应用程序能够在通用环境中实现对不同设备的通信控制，能够大幅提升物联网设备的接入效率和维护成本。需要说明的是，对于前述的各方法实施例，为了简单描述，故将其都表述为一系列的动作组合，但是本领域技术人员应该知悉，本公开并不受所描述的动作顺序的限制，因为依据本公开，某些步骤可以采用其他顺序或者同时进行。其次，本领域技术人员也应该知悉，说明书中所描述的实施例均属于可选实施例，所涉及的动作和模块并不一定是本公开所必须的。在上述实施例中，对各个实施例的描述都各有侧重，某个实施例中没有详述的部分，可以参见其他实施例的相关描述。在本公开所提供的几个实施例中，应该理解到，所揭露的装置，可通过其它的方式实现。例如，以上所描述的装置实施例仅仅是示意性的，例如所述单元的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，例如多个单元或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另一点，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些接口，装置或单元的间接耦合或通信连接，可以是电性或其它的形式。所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本公开各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。上述集成的单元既可以采用硬件的形式实现，也可以采用软件程序模块的形式实现。所述集成的单元如果以软件程序模块的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读取存储器中。基于这样的理解，本公开的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的全部或部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储器中，包括若干指令用以使得一台计算机设备执行本公开各个实施例所述方法的全部或部分步骤。而前述的存储器包括：U盘、只读存储器、随机存取存储器、移动硬盘、磁碟或者光盘等各种可以存储程序代码的介质。本领域普通技术人员可以理解上述实施例的各种方法中的全部或部分步骤是可以通过程序来指令相关的硬件来完成，该程序可以存储于一计算机可读存储器中，存储器可以包括：闪存盘、只读存储器、随机存取器、磁盘或光盘等。以上对本公开实施例进行了详细介绍，本文中应用了具体个例对本公开的原理及实施方式进行了阐述，以上实施例的说明只是用于帮助理解本公开的方法及其核心思想；同时，对于本领域的一般技术人员，依据本公开的思想，在具体实施方式及应用范围上均会有改变之处，综上所述，本说明书内容不应理解为对本公开的限制。这里参照根据本公开实施例的方法、装置和计算机程序产品的流程图和/或框图描述了本公开的各个方面。应当理解，流程图和/或框图的每个方框以及流程图和/或框图中各方框的组合，都可以由计算机可读程序指令实现。附图中的流程图和框图显示了根据本公开的多个实施例的系统、方法和计算机程序产品的可能实现的体系架构、功能和操作。在这点上，流程图或框图中的每个方框可以代表一个模块、程序段或指令的一部分，所述模块、程序段或指令的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。在有些作为替换的实现中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个连续的方框实际上可以基本并行地执行，它们有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图和/或流程图中的每个方框、以及框图和/或流程图中的方框的组合，可以用执行规定的功能或动作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。以上已经描述了本公开的各实施例，上述说明是示例性的，并非穷尽性的，并且也不限于所披露的各实施例。在不偏离所说明的各实施例的范围和精神的情况下，对于本技术领域的普通技术人员来说许多修改和变更都是显而易见的。本文中所用术语的选择，旨在最好地解释各实施例的原理、实际应用或对市场中的技术改进，或者使本技术领域的其它普通技术人员能理解本文披露的各实施例。
