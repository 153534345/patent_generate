标题title
登录态的管理方法、装置、设备及存储介质
摘要abst
本申请公开了一种登录态的管理方法、装置、设备及存储介质，涉及计算机技术领域，可以减少拦截者通过登录态访问SDK服务端的时长，提高APP访问SDK服务端的安全性。该方法应用于服务端，包括：接收APP经SDK发送的第一访问请求；第一访问请求携带有SDK存储的短登录凭证；在确定短登录凭证过期的情况下，经SDK向APP发起获取请求，用于获取APP存储的长登录凭证；长登录凭证的有效时长大于短登录凭证的有效时长；接收APP经SDK发送的长登录凭证，并对长登录凭证和短登录凭证进行参数校验；在确定参数校验的结果为校验通过的情况下，重新生成短登录凭证，并基于重新生成的短登录凭证保持APP访问服务端的登录态。
权利要求书clms
1.一种登录态的管理方法，应用于服务端，其特征在于，包括：接收应用程序APP经软件开发工具包SDK发送的第一访问请求；所述第一访问请求携带有所述SDK存储的短登录凭证；在确定所述短登录凭证过期的情况下，经所述SDK向所述APP发起获取请求，用于获取所述APP存储的长登录凭证；所述长登录凭证的有效时长大于所述短登录凭证的有效时长；接收所述APP经所述SDK发送的所述长登录凭证，并对所述长登录凭证和所述短登录凭证进行参数校验；在确定所述参数校验的结果为校验通过的情况下，重新生成短登录凭证，并基于重新生成的短登录凭证保持所述APP访问所述服务端的登录态。2.根据权利要求1所述的登录态的管理方法，其特征在于，所述长登录凭证和所述短登录凭证均为jwttoken格式，所述长登录凭证的载荷信息至少包括用户账号、所述长登录凭证的过期时间和第一随机字符串，所述短登录凭证的载荷信息至少包括所述用户账号、所述短登录凭证的过期时间和第二随机字符串，所述对所述长登录凭证和所述短登录凭证进行参数校验，包括：对所述第一随机字符串和所述第二随机字符串的一致性进行校验，并对所述长登录凭证的签名信息和所述短登录凭证的签名信息进行校验。3.根据权利要求2所述的登录态的管理方法，其特征在于，所述对所述第一随机字符串和所述第二随机字符串的一致性进行校验，并对所述长登录凭证的签名信息和所述短登录凭证的签名信息进行校验之后，所述方法还包括：在确定所述第一随机字符串和所述第二随机字符串一致，且所述长登录凭证的签名信息和所述短登录凭证的签名信息均正确的情况下，确定登录态关系表中是否包括所述第一随机字符串与所述用户账号的对应关系；在确定所述登录态关系表中包括所述第一随机字符串与所述用户账号的对应关系的情况下，确定所述参数校验的结果为校验通过。4.根据权利要求2所述的登录态的管理方法，其特征在于，所述长登录凭证的载荷信息和所述短登录凭证的载荷信息还包括版本标识，所述对所述长登录凭证和所述短登录凭证进行参数校验，还包括：对所述版本标识进行校验。5.根据权利要求2所述的登录态的管理方法，其特征在于，所述接收APP经SDK发送的第一访问请求之前，所述方法还包括：接收所述APP经所述SDK发送的第二访问请求；所述第二访问请求携带有用户账号和用户信息；基于预设规则生成所述jwttoken格式的所述长登录凭证和所述短登录凭证；所述第一随机字符串和所述第二随机字符串一致；将所述第一随机字符串与所述用户账号的对应关系添加至登录态关系表中，并将所述短登录凭证与所述用户信息的对应关系发送至所述SDK，且将所述长登录凭证发送至所述APP。6.根据权利要求5所述的登录态的管理方法，其特征在于，所述将所述第一随机字符串与所述用户账号的对应关系添加至登录态关系表中，并将所述短登录凭证与所述用户信息的对应关系发送至所述SDK，且将所述长登录凭证发送至所述APP之后，所述方法还包括：接收所述APP经所述SDK发送的登出请求；所述登出请求用于表征所述APP已删除存储的所述长登录凭证；删除所述登录态关系表中所述第一随机字符串与所述用户账号的对应关系，并向所述SDK发起删除请求，用于指示所述SDK删除存储的所述短登录凭证与所述用户信息的对应关系。7.根据权利要求1-6任意一项所述的登录态的管理方法，其特征在于，所述对所述长登录凭证和所述短登录凭证进行参数校验之后，所述方法还包括：在确定所述参数校验的结果为校验不通过的情况下，经所述SDK向所述APP发送提示信息，所述提示信息用于表征所述APP访问所述服务端的登录态失效。8.一种登录态的管理装置，应用于服务端，其特征在于，包括：接收模块，接收APP经SDK发送的第一访问请求；所述第一访问请求携带有所述SDK存储的短登录凭证；发送模块，用于在确定所述短登录凭证过期的情况下，经所述SDK向所述APP发起获取请求，用于获取所述APP存储的长登录凭证；所述长登录凭证的有效时长大于所述短登录凭证的有效时长；所述接收模块，还用于接收所述APP经所述SDK发送的所述长登录凭证，并对所述长登录凭证和所述短登录凭证进行参数校验；管理模块，用于在确定所述参数校验的结果为校验通过的情况下，重新生成短登录凭证，并基于重新生成的短登录凭证保持所述APP访问所述服务端的登录态。9.一种登录态的管理设备，其特征在于，包括存储器、处理器、总线和通信接口；所述存储器用于存储计算机执行指令，所述处理器与所述存储器通过所述总线连接；当所述登录态的管理设备运行时，处理器执行所述存储器存储的所述计算机执行指令，以使所述登录态的管理设备执行如权利要求1-7任意一项所述的登录态的管理方法。10.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质中存储有指令，当计算机执行所述指令时，使得所述计算机执行如权利要求1-7任意一项所述的登录态的管理方法。
说明书desc
技术领域本申请涉及计算机技术领域，尤其涉及一种登录态的管理方法、装置、设备及存储介质。背景技术用户在使用应用程序期间，APP在通过软件开发工具包访问SDK服务端的业务功能时，需要用户进行用户信息的登录。现有的，为了使用户更便捷的使用SDK服务端的业务功能，SDK服务端可以向用户提供长时间的免登录功能。比如，APP首次通过SDK访问SDK服务端的业务功能时，SDK服务端可以生成一个有效时长为30天的登录态，APP在30天内再次访问SDK服务端的业务功能时，SDK会带上30天的登录态，自动对SDK服务端的业务功能进行访问，无需再次进行用户信息的登录。然而，现有向用户提供长时间免登录功能的过程中，当登录态被恶意拦截时登录态会泄露，导致拦截者可以通过登录态长期访问SDK服务端的业务功能，访问安全性较低。发明内容本申请提供一种登录态的管理方法、装置、设备及存储介质，可以减少拦截者通过登录态访问SDK服务端的访问时长，从而提高APP访问SDK服务端的安全性。为达到上述目的，本申请采用如下技术方案：第一方面，本申请提供一种登录态的管理方法，该方法可以应用于服务端，包括：接收APP经SDK发送的第一访问请求；第一访问请求携带有SDK存储的短登录凭证；在确定短登录凭证过期的情况下，经SDK向APP发起获取请求，用于获取APP存储的长登录凭证；长登录凭证的有效时长大于短登录凭证的有效时长；接收APP经SDK发送的长登录凭证，并对长登录凭证和短登录凭证进行参数校验；在确定参数校验的结果为校验通过的情况下，重新生成短登录凭证，并基于重新生成的短登录凭证保持APP访问服务端的登录态。本申请提供的技术方案中，服务端可以向APP提供两个登录态凭证，包括短登录凭证和长登录凭证，短登录凭证由SDK存储，长登录凭证由APP存储。APP在需要访问服务端的业务功能时，SDK会带上短登录凭证向服务端发起第一访问请求，服务端可以对短登录凭证是否过期进行判断。当服务端确定短登录凭证过期时，可以经SDK向APP请求获取长登录凭证，之后，在对长登录凭证和短登录凭证校验通过后，可以重新生成短登录凭证实现对登录态的续期。可以看出，本申请中，当短登录凭证没有过期时服务端可以通过短登录凭证来验证登录态，当短登录凭证过期时，服务端可以结合短登录凭证和长登录凭证来验证登录态并实现对短登录凭证的续期。这样，只有当短登录凭证过期时才会使用长登录凭证，极大的降低了长登录凭证的传输频次，所以极大的降低了长登录凭证被拦截的可能性。而当短登录凭证被拦截导致登录态泄露时，由于短登录凭证的有效时长很短，所以拦截者仅能在短时间内通过登录态访问SDK服务端。因此，本申请提供的技术方案可以减少拦截者通过登录态访问SDK服务端的访问时长，从而提高APP访问SDK服务端的安全性。可选的，在一种可能的设计方式中，长登录凭证和短登录凭证均为jwttoken格式，长登录凭证的载荷信息至少包括用户账号、长登录凭证的过期时间和第一随机字符串，短登录凭证的载荷信息至少包括用户账号、短登录凭证的过期时间和第二随机字符串，上述“对长登录凭证和短登录凭证进行参数校验”可以包括：对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验。可选的，在另一种可能的设计方式中，上述“对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验”之后，还可以包括：在确定第一随机字符串和第二随机字符串一致，且长登录凭证的签名信息和短登录凭证的签名信息均正确的情况下，确定登录态关系表中是否包括第一随机字符串与用户账号的对应关系；在确定登录态关系表中包括第一随机字符串与用户账号的对应关系的情况下，确定参数校验的结果为校验通过。可选的，在另一种可能的设计方式中，长登录凭证的载荷信息和短登录凭证的载荷信息还包括版本标识，上述“对长登录凭证和短登录凭证进行参数校验”还可以包括：对版本标识进行校验。可选的，在另一种可能的设计方式中，上述“接收APP经SDK发送的第一访问请求”之前还可以包括：接收APP经SDK发送的第二访问请求；第二访问请求携带有用户账号和用户信息；基于预设规则生成jwttoken格式的长登录凭证和短登录凭证；第一随机字符串和第二随机字符串一致；将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP。可选的，在另一种可能的设计方式中，上述“将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP”之后还可以包括：接收APP经SDK发送的登出请求；登出请求用于表征APP已删除存储的长登录凭证；删除登录态关系表中第一随机字符串与用户账号的对应关系，并向SDK发起删除请求，用于指示SDK删除存储的短登录凭证与用户信息的对应关系。可选的，在另一种可能的设计方式中，上述“对长登录凭证和短登录凭证进行参数校验”之后还可以包括：在确定参数校验的结果为校验不通过的情况下，经SDK向APP发送提示信息，提示信息用于表征APP访问服务端的登录态失效。第二方面，本申请提供一种登录态的管理装置，包括：接收模块、发送模块以及管理模块；接收模块，接收APP经SDK发送的第一访问请求；第一访问请求携带有SDK存储的短登录凭证；发送模块，用于在确定短登录凭证过期的情况下，经SDK向APP发起获取请求，用于获取APP存储的长登录凭证；长登录凭证的有效时长大于短登录凭证的有效时长；接收模块，还用于接收APP经SDK发送的长登录凭证，并对长登录凭证和短登录凭证进行参数校验；管理模块，用于在确定参数校验的结果为校验通过的情况下，重新生成短登录凭证，并基于重新生成的短登录凭证保持APP访问服务端的登录态。可选的，在一种可能的设计方式中，长登录凭证和短登录凭证均为jwttoken格式，长登录凭证的载荷信息至少包括用户账号、长登录凭证的过期时间和第一随机字符串，短登录凭证的载荷信息至少包括用户账号、短登录凭证的过期时间和第二随机字符串，接收模块具体用于：对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验。可选的，在另一种可能的设计方式中，接收模块还用于：在对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验之后，若确定第一随机字符串和第二随机字符串一致，且长登录凭证的签名信息和短登录凭证的签名信息均正确，则确定登录态关系表中是否包括第一随机字符串与用户账号的对应关系；在确定登录态关系表中包括第一随机字符串与用户账号的对应关系的情况下，确定参数校验的结果为校验通过。可选的，在另一种可能的设计方式中，长登录凭证的载荷信息和短登录凭证的载荷信息还包括版本标识，接收模块还具体用于：对版本标识进行校验。可选的，在另一种可能的设计方式中，登录态的管理装置还可以包括生成模块；接收模块还用于，在接收APP经SDK发送的第一访问请求之前，接收APP经SDK发送的第二访问请求；第二访问请求携带有用户账号和用户信息；生成模块，用于基于预设规则生成jwttoken格式的长登录凭证和短登录凭证；第一随机字符串和第二随机字符串一致；发送模块，用于将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP。可选的，在另一种可能的设计方式中，登录态的管理装置还可以包括删除模块；接收模块，还用于在发送模块将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP之后，接收APP经SDK发送的登出请求；登出请求用于表征APP已删除存储的长登录凭证；删除模块，用于删除登录态关系表中第一随机字符串与用户账号的对应关系，并通过发送模块向SDK发起删除请求，用于指示SDK删除存储的短登录凭证与用户信息的对应关系。可选的，在另一种可能的设计方式中，发送模块还用于，在对长登录凭证和短登录凭证进行参数校验之后，在确定参数校验的结果为校验不通过的情况下，经SDK向APP发送提示信息，提示信息用于表征APP访问服务端的登录态失效。第三方面，本申请提供一种登录态的管理设备，包括存储器、处理器、总线和通信接口；存储器用于存储计算机执行指令，处理器与存储器通过总线连接；当登录态的管理设备运行时，处理器执行存储器存储的计算机执行指令，以使登录态的管理设备执行如上述第一方面提供的登录态的管理方法。第四方面，本申请提供一种计算机可读存储介质，计算机可读存储介质中存储有指令，当计算机执行指令时，使得计算机执行如第一方面提供的登录态的管理方法。第五方面，本申请提供一种计算机程序产品，该计算机程序产品包括计算机指令，当计算机指令在计算机上运行时，使得计算机执行如第一方面提供的登录态的管理方法。需要说明的是，上述计算机指令可以全部或者部分存储在计算机可读存储介质上。其中，计算机可读存储介质可以与登录态的管理设备的处理器封装在一起的，也可以与登录态的管理设备的处理器单独封装，本申请对此不做限定。本申请中第二方面、第三方面、第四方面以及第五方面的描述，可以参考第一方面的详细描述；并且，第二方面、第三方面、第四方面以及第五方面的描述的有益效果，可以参考第一方面的有益效果分析，此处不再赘述。在本申请中，对于上述涉及到的设备或功能模块的名称不构成限定，在实际实现中，这些设备或功能模块可以以其他名称出现。只要各个设备或功能模块的功能和本申请类似，均属于本申请权利要求及其等同技术的范围之内。本申请的这些方面或其他方面在以下的描述中会更加简明易懂。附图说明图1为本申请实施例提供的一种登录态的管理方法的流程示意图；图2为本申请实施例提供的另一种登录态的管理方法的流程示意图；图3为本申请实施例提供的又一种登录态的管理方法的流程示意图；图4为本申请实施例提供的又一种登录态的管理方法的流程示意图；图5为本申请实施例提供的一种登录态的管理装置的结构示意图；图6为本申请实施例提供的一种登录态的管理设备的结构示意图。具体实施方式下面结合附图对本申请实施例提供的登录态的管理方法、装置、设备及存储介质进行详细地描述。本文中术语“和/或”，仅仅是一种描述关联对象的关联关系，表示可以存在三种关系，例如，A和/或B，可以表示：单独存在A，同时存在A和B，单独存在B这三种情况。本申请的说明书以及附图中的术语“第一”和“第二”等是用于区别不同的对象，或者用于区别对同一对象的不同处理，而不是用于描述对象的特定顺序。此外，本申请的描述中所提到的术语“包括”和“具有”以及它们的任何变形，意图在于覆盖不排他的包含。例如包含了一系列步骤或单元的过程、方法、系统、产品或设备没有限定于已列出的步骤或单元，而是可选的还包括其他没有列出的步骤或单元，或可选的还包括对于这些过程、方法、产品或设备固有的其它步骤或单元。需要说明的是，本申请实施例中，“示例性的”或者“例如”等词用于表示作例子、例证或说明。本申请实施例中被描述为“示例性的”或者“例如”的任何实施例或设计方案不应被解释为比其它实施例或设计方案更优选或更具优势。确切而言，使用“示例性的”或者“例如”等词旨在以具体方式呈现相关概念。在本申请的描述中，除非另有说明，“多个”的含义是指两个或两个以上。另外，本申请技术方案中对数据的获取、存储、使用、处理等均符合国家法律法规的相关规定。现有向用户提供长时间免登录功能的过程中，当登录态被恶意拦截时登录态会泄露，导致拦截者可以通过登录态长期访问SDK服务端的业务功能。针对上述现有技术中存在的问题，本申请实施例提供了一种登录态的管理方法，该方法中，当短登录凭证没有过期时服务端可以通过短登录凭证来验证登录态，当短登录凭证过期时，服务端可以结合短登录凭证和长登录凭证来验证登录态并实现对短登录凭证的续期，可以减少拦截者通过登录态访问SDK服务端的时长，提高APP访问SDK服务端的安全性。本申请实施例提供的登录态的管理方法可以应用于服务端，该服务端也即是SDK的服务端。该方法可以由本申请实施例提供的登录态的管理装置来执行，登录态的管理装置可以通过软件和/或硬件的方式实现，并集成在执行本方法的登录态的管理设备中。示例性的，登录态的管理设备可以是SDK的服务端的电子设备，比如SDK的服务器集群。本申请实施例提供的登录态的管理方法可以适用于登录态的管理系统，该登录态的管理系统可以包括用户终端和登录态的管理设备。其中，用户终端中载有APP，用户终端可以在用户使用该APP期间，根据APP的业务需求访问登录态的管理设备提供的业务功能。并且，用户终端中还载有APP的SDK插件，APP可以通过该SDK插件访问登录态的管理设备提供的业务功能。示例性的，用户终端，可以是手机、平板电脑、桌面型计算机、膝上型计算机、笔记本电脑、超级移动个人计算机、手持计算机、上网本、个人数字助理、可穿戴电子设备、虚拟现实设备等不同类型的终端。下面结合附图对本申请实施例提供的登录态的管理方法进行详细说明。参照图1，本申请实施例提供的登录态的管理方法包括S101-S104：S101、接收APP经SDK发送的第一访问请求。其中，第一访问请求携带有SDK存储的短登录凭证。APP需要访问SDK服务端的业务功能时，可以通过SDK向SDK服务端发起第一访问请求。可以理解的是，第一访问请求不是APP首次发起的对该业务功能的访问请求，也即是APP发起第一访问请求之前，SDK服务端已经生成了用于保持APP访问服务端的短登录凭证和长登录凭证。在一种可能的实现方式中，SDK可以通过中间件以键值对的形式存储短登录凭证。示例性的，SDK可以以短登录凭证为key，以用户数据为value，将短登录凭证与value的对应关系存储在远程字典服务数据库中。S102、在确定短登录凭证过期的情况下，经SDK向APP发起获取请求，用于获取APP存储的长登录凭证。其中，长登录凭证的有效时长大于短登录凭证的有效时长。示例性的，长登录凭证的有效时长可以为15天、30天或者60天，短登录凭证的有效时长可以为1小时、2小时或3小时。在一种可能的实现方式中，在生成长登录凭证和短登录凭证时，可以根据实时时间和长登录凭证的有效时长确定长登录凭证的过期时间，并根据实时时间和短登录凭证的有效时长确定短登录凭证的过期时间。在接收到携带有短登录凭证的第一访问请求时，可以通过对比当前时刻与短登录凭证的过期时间来确定短登录凭证是否过期。可选的，服务端在确定短登录凭证未过期的情况下，APP可以正常访问服务端的业务功能。S103、接收APP经SDK发送的长登录凭证，并对长登录凭证和短登录凭证进行参数校验。本申请实施例中，当短登录凭证过期时，需要对长登录凭证和短登录凭证进行参数校验，确定长登录凭证和短登录凭证是一对登录凭证后才可以对短登录凭证进行续期。这样，可以提高SDK服务端的登录态的安全性。可选的，本申请实施例中的长登录凭证和短登录凭证均为jwttoken格式，长登录凭证的载荷信息至少包括用户账号、长登录凭证的过期时间和第一随机字符串，短登录凭证的载荷信息至少包括用户账号、短登录凭证的过期时间和第二随机字符串；对长登录凭证和短登录凭证进行参数校验可以包括：对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验。一般的，jwttoken格式的字符串可以包括三个字段，第一个字段是header，包括元信息，比如jwttoken的签名类型和/或加密算法的类型；第二个字段是载荷信息payload，可以包括用户自定义的信息；第三个字段是Signature，用于存储签名信息，保证payload无法被篡改。jwttoken格式的字符串在使用过程中，尽管载荷信息中明文存储了部分用户信息，但是可以通过签名信息来保证字符串无法被篡改，以确保签名信息的准确性。本申请实施例中，可以借助jwttoken格式的字符串的特点，将用户账号、过期时间及随机字符串等信息作为载荷信息，生成jwttoken格式的长登录凭证和短登录凭证。这样，在对长登录凭证和短登录凭证进行参数校验时，可以通过对长登录凭证的签名信息和短登录凭证的签名信息的准确性进行校验来确定长登录凭证和短登录凭证是否为合法凭证。另外，用户在使用APP期间，可能会进行用户账号的切换，所以APP中可能存储了多个用户账号的长登录凭证。这样，服务端在对短登录凭证进行续期的过程中，可能会出现当A账号的长登录凭证已经过期时，误根据B账号的长登录凭证对A账号的短登录凭证进行续期。为避免多账号续期时出错，本申请实施例中，长登录凭证和短登录凭证的载荷信息中还可以包括随机字符串，服务端在对短登录凭证进行续期时，可以通过判断长登录凭证和短登录凭证的随机字符串的一致性来确定长登录凭证和短登录凭证是否为一对登录凭证，当长登录凭证和短登录凭证不是一对登录凭证时，不对短登录凭证进行续期。此外，本申请实施例中，载荷信息可以供APP的用户随时进行查看，所以载荷信息可以包含用户账号等非敏感信息，不包含用户的手机号或身份证号等敏感信息。并且，载荷信息中的信息内容过多时，jwttoken格式的字符串会过长，所以，本申请实施例中仅在载荷信息中存储一些必要的非敏感信息。可选的，本申请实施例中，在对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验之后，还可以包括：在确定第一随机字符串和第二随机字符串一致，且长登录凭证的签名信息和短登录凭证的签名信息均正确的情况下，确定登录态关系表中是否包括第一随机字符串与用户账号的对应关系；在确定登录态关系表中包括第一随机字符串与用户账号的对应关系的情况下，确定参数校验的结果为校验通过。本申请实施例中，长登录凭证是存储在APP中的，其有效性是通过签名信息及随机字符串与短登录凭证的一致性来判断的，当用户需要提前结束长登录凭证的有效期时，无法直接通过删除中间件中的存储内容来实现。所以本申请实施例中，可以新增登录态关系表，用于存储长登录凭证和短登录凭证的随机字符串与用户账号的对应关系。这样，当需要提前结束某个用户账号的长登录凭证的有效期时，只需删除登录态关系表中随机字符串与用户账号的对应关系即可。所以，本申请实施例中，在对短登录凭证进行续期时，还可以通过验证登录态关系表中是否存有随机字符串与用户账号的对应关系来对长登录凭证的有效性进行验证。可选的，长登录凭证的载荷信息和短登录凭证的载荷信息还可以包括版本标识，对长登录凭证和短登录凭证进行参数校验，还可以包括：对版本标识进行校验。服务端在向APP提供长登录凭证和短登录凭证之后，用户可能会对用户信息进行变更，此时需要用户采用新的用户信息进行登录。所以，本申请实施例中，在对短登录凭证进行续期时，还可以对版本标识进行校验，确定是否为当前最新的用户信息对应的版本标识，当确定不是当前最新用户信息对应的版本标识时，可以通知APP根据最新的用户信息重新登录，以重新生成长登录凭证和短登录凭证。S104、在确定参数校验的结果为校验通过的情况下，重新生成短登录凭证，并基于重新生成的短登录凭证保持APP访问服务端的登录态。当参数校验的结果为校验通过时，表示长登录凭证和短登录凭证为一对登录凭证，且长登录凭证处于有效期内，此时可以重新生成短登录凭证，实现对短登录凭证的续期，APP可以继续使用重新生成的短登录凭证正常访问SDK服务端，无需进行用户信息的登录。可选的，本申请实施例还提供了一种服务端接收第一访问请求之前，生成长登录凭证和短登录凭证的实现方式，具体可以包括：接收APP经SDK发送的第二访问请求；基于预设规则生成jwttoken格式的长登录凭证和短登录凭证；将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP。其中，第二访问请求携带有用户账号和用户信息。可以理解的是，第二访问请求为APP经SDK发起的首次对该业务功能的访问请求，也即是此时SDK服务端还未生成用于保持APP访问服务端的登录态的短登录凭证和长登录凭证。预设规则可以是事先确定的生成jwttoken格式字符串的规则，预设规则中可以包括jwttoken的签名类型和/或加密算法的类型，还可以包括生成随机字符串的算法等。具体生成jwttoken格式字符串的规则可以参照现有技术中的相关描述，本申请实施例在此不再赘述。随机字符串是用于判断短登录凭证和长登录凭证是否为一对登录凭证，所以，本申请实施例中，生成的长登录凭证的第一随机字符串需要与短登录凭证的第二随机字符串一致。现有SDK服务端向用户提供长时间免登录功能的过程中，SDK服务端需要存储各用户账号的长登录凭证，长登录凭证一般是存储在Redis等使用内存保存的中间件中，而SDK服务端提供的长登录凭证会使大量用户同时在线，导致SDK服务端的存储压力很大。本申请实施例提供的技术方案中，SDK服务端仅存储短登录凭证，即使用户量很大，但这些短登录凭证同时处于有效的情况比长登录凭证低很多，所以同时在线的用户量不会很多，因此，本申请实施例可以降低SDK服务端的存储压力。另外，现有SDK服务端向用户提供免登录功能的过程中，服务端在生成登录凭证后会同步将该登录凭证发给APP，但是在传输过程中可能会出现对接问题，导致服务端存储的登录凭证的过期时间与APP存储的登录凭证的过期时间不一致，也即是SDK服务端与APP的登录态不一致。当登录态不一致时，SDK服务端会重新生成新的登录态，所以登录态往往存在冗余存储。而本申请实施例中，服务端在生成短登录凭证和长登录凭证之后，可以分别由SDK和APP进行短登录凭证和长登录凭证的存储。这样，当任一个登录凭证丢失或者两个登录凭证不一致时，都无法进行短登录凭证的续期，可以避免出现SDK服务端与APP的登录态不一致的问题，从而可以减少冗余存储的登录态，进一步降低SDK服务端的存储压力。可选的，本申请实施例中，在将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP之后，还可以包括：接收APP经SDK发送的登出请求；删除登录态关系表中第一随机字符串与用户账号的对应关系，并向SDK发起删除请求，用于指示SDK删除存储的短登录凭证与用户信息的对应关系。其中，登出请求用于表征APP已删除存储的长登录凭证。本申请实施例中，当用户需要提前结束登录态的有效期时，APP可以先删除存储的长登录凭证，然后经SDK向服务端发起登出请求。服务端在接收到登出请求后，可以通知SDK删除存储的短登录凭证与用户信息的对应关系，以结束短登录凭证的有效期。并且，可以删除登录态关系表中第一随机字符串与用户账号的对应关系，以结束长登录凭证的有效期。可选的，本申请实施例中，在对长登录凭证和短登录凭证进行参数校验之后，若确定参数校验的结果为校验不通过，则可以经SDK向APP发送提示信息，提示信息用于表征APP访问服务端的登录态失效。APP接收到提示信息后，可以重新获取用户信息，以重新向SDK服务端发起第二访问请求。综合以上描述，本申请实施例提供的登录态的管理方法中，服务端可以向APP提供两个登录态凭证，包括短登录凭证和长登录凭证，短登录凭证由SDK存储，长登录凭证由APP存储。APP在需要访问服务端的业务功能时，SDK会带上短登录凭证向服务端发起第一访问请求，服务端可以对短登录凭证是否过期进行判断。当服务端确定短登录凭证过期时，可以经SDK向APP请求获取长登录凭证，之后，在对长登录凭证和短登录凭证校验通过后，可以重新生成短登录凭证实现对登录态的续期。可以看出，本申请实施例中，当短登录凭证没有过期时服务端可以通过短登录凭证来验证登录态，当短登录凭证过期时，服务端可以结合短登录凭证和长登录凭证来验证登录态并实现对短登录凭证的续期。这样，只有当短登录凭证过期时才会使用长登录凭证，极大的降低了长登录凭证的传输频次，所以极大的降低了长登录凭证被拦截的可能性。而当短登录凭证被拦截导致登录态泄露时，由于短登录凭证的有效时长很短，所以拦截者仅能在短时间内通过登录态访问SDK服务端。因此，本申请实施例提供的技术方案可以减少拦截者通过登录态访问SDK服务端的时长。可选的，如图2所示，在图1中的步骤S101之前，本申请实施例提供的登录态的管理方法还可以包括S1001-S1003：S1001、接收APP经SDK发送的第二访问请求。S1002、基于预设规则生成jwttoken格式的长登录凭证和短登录凭证。S1003、将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP。可选的，如图3所示，在图1中的步骤S104之后，本申请实施例提供的登录态的管理方法还可以包括S105-S106：S105、接收APP经SDK发送的登出请求。S106、删除登录态关系表中第一随机字符串与用户账号的对应关系，并向SDK发起删除请求，用于指示SDK删除存储的短登录凭证与用户信息的对应关系。可选的，如图4所示，本申请实施例还提供了一种登录态的管理方法，包括S401-S407：S401、接收APP经SDK发送的第一访问请求。S402、在确定短登录凭证过期的情况下，经SDK向APP发起获取请求，用于获取APP存储的长登录凭证。S403、接收APP经SDK发送的长登录凭证。S404、对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验，且对版本标识进行校验。S405、在确定第一随机字符串和第二随机字符串一致，且长登录凭证的签名信息和短登录凭证的签名信息均正确，并且版本标识为最新的版本标识的情况下，确定登录态关系表中是否包括第一随机字符串与用户账号的对应关系。S406、在确定登录态关系表中包括第一随机字符串与用户账号的对应关系的情况下，确定参数校验的结果为校验通过。S407、重新生成短登录凭证，并基于重新生成的短登录凭证保持APP访问服务端的登录态。如图5所示，本申请实施例还提供了一种登录态的管理装置，该装置可以包括：接收模块11、发送模块21以及管理模块31。其中，接收模块11执行上述方法实施例中的S101和S103，发送模块21执行上述方法实施例中的S102，管理模块31执行上述方法实施例中的S104。具体地，接收模块11，接收APP经SDK发送的第一访问请求；第一访问请求携带有SDK存储的短登录凭证；发送模块21，用于在确定短登录凭证过期的情况下，经SDK向APP发起获取请求，用于获取APP存储的长登录凭证；长登录凭证的有效时长大于短登录凭证的有效时长；接收模块11，还用于接收APP经SDK发送的长登录凭证，并对长登录凭证和短登录凭证进行参数校验；管理模块31，用于在确定参数校验的结果为校验通过的情况下，重新生成短登录凭证，并基于重新生成的短登录凭证保持APP访问服务端的登录态。可选的，在一种可能的设计方式中，长登录凭证和短登录凭证均为jwttoken格式，长登录凭证的载荷信息至少包括用户账号、长登录凭证的过期时间和第一随机字符串，短登录凭证的载荷信息至少包括用户账号、短登录凭证的过期时间和第二随机字符串，接收模块11具体用于：对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验。可选的，在另一种可能的设计方式中，接收模块11还用于：在对第一随机字符串和第二随机字符串的一致性进行校验，并对长登录凭证的签名信息和短登录凭证的签名信息进行校验之后，若确定第一随机字符串和第二随机字符串一致，且长登录凭证的签名信息和短登录凭证的签名信息均正确，则确定登录态关系表中是否包括第一随机字符串与用户账号的对应关系；在确定登录态关系表中包括第一随机字符串与用户账号的对应关系的情况下，确定参数校验的结果为校验通过。可选的，在另一种可能的设计方式中，长登录凭证的载荷信息和短登录凭证的载荷信息还包括版本标识，接收模块11还具体用于：对版本标识进行校验。可选的，在另一种可能的设计方式中，登录态的管理装置还可以包括生成模块；接收模块11还用于，在接收APP经SDK发送的第一访问请求之前，接收APP经SDK发送的第二访问请求；第二访问请求携带有用户账号和用户信息；生成模块，用于基于预设规则生成jwttoken格式的长登录凭证和短登录凭证；第一随机字符串和第二随机字符串一致；发送模块21，用于将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP。可选的，在另一种可能的设计方式中，登录态的管理装置还可以包括删除模块；接收模块11，还用于在发送模块21将第一随机字符串与用户账号的对应关系添加至登录态关系表中，并将短登录凭证与用户信息的对应关系发送至SDK，且将长登录凭证发送至APP之后，接收APP经SDK发送的登出请求；登出请求用于表征APP已删除存储的长登录凭证；删除模块，用于删除登录态关系表中第一随机字符串与用户账号的对应关系，并通过发送模块21向SDK发起删除请求，用于指示SDK删除存储的短登录凭证与用户信息的对应关系。可选的，在另一种可能的设计方式中，发送模块21还用于，在对长登录凭证和短登录凭证进行参数校验之后，在确定参数校验的结果为校验不通过的情况下，经SDK向APP发送提示信息，提示信息用于表征APP访问服务端的登录态失效。可选的，登录态的管理装置还可以包括存储模块，存储模块用于存储该登录态的管理装置的程序代码等。如图6所示，本申请实施例还提供一种登录态的管理设备，包括存储器41、处理器42、总线43和通信接口44；存储器41用于存储计算机执行指令，处理器42与存储器41通过总线43连接；当登录态的管理设备运行时，处理器42执行存储器41存储的计算机执行指令，以使登录态的管理设备执行如上述实施例提供的登录态的管理方法。在具体的实现中，作为一种实施例，处理器42可以包括一个或多个中央处理器，例如图6中所示的CPU0和CPU1。且作为一种实施例，登录态的管理设备可以包括多个处理器42，例如图6中所示的处理器42-1和处理器42-2。这些处理器42中的每一个CPU可以是一个单核处理器，也可以是一个多核处理器。这里的处理器42可以指一个或多个设备、电路、和/或用于处理数据的处理核。存储器41可以是只读存储器41或可存储静态信息和指令的其他类型的静态存储设备，随机存取存储器或者可存储信息和指令的其他类型的动态存储设备，也可以是电可擦可编程只读存储器、只读光盘或其他光盘存储、光碟存储、磁盘存储介质或者其他磁存储设备、或者能够用于携带或存储具有指令或数据结构形式的期望的程序代码并能够由计算机存取的任何其他介质，但不限于此。存储器41可以是独立存在，通过总线43与处理器42相连接。存储器41也可以和处理器42集成在一起。在具体的实现中，存储器41，用于存储本申请中的数据和执行本申请的软件程序对应的计算机执行指令。处理器42可以通过运行或执行存储在存储器41内的软件程序，以及调用存储在存储器41内的数据，登录态的管理设备的各种功能。通信接口44，使用任何收发器一类的设备，用于与其他设备或通信网络通信，如控制系统、无线接入网，无线局域网等。通信接口44可以包括接收单元实现接收功能，以及发送单元实现发送功能。总线43，可以是工业标准体系结构总线、外部设备互连总线或扩展工业标准体系结构总线等。该总线43可以分为地址总线、数据总线、控制总线等。为便于表示，图6中仅用一条粗线表示，但并不表示仅有一根总线或一种类型的总线。作为一个示例，结合图5，登录态的管理装置中的接收模块实现的功能与图6中的接收单元实现的功能相同，登录态的管理装置中的发送模块实现的功能与图6中发送单元实现的功能相同，登录态的管理装置中的管理模块实现的功能与图6中的处理器实现的功能相同。当登录态的管理装置包括有存储模块时，存储模块实现的功能与图6中的存储器实现的功能相同。本实施例中相关内容的解释可参考上述方法实施例，此处不再赘述。通过以上的实施方式的描述，所属领域的技术人员可以清楚地了解到，为描述的方便和简洁，仅以上述各功能模块的划分进行举例说明，实际应用中，可以根据需要而将上述功能分配由不同的功能模块完成，即将设备的内部结构划分成不同的功能模块，以完成以上描述的全部或者部分功能。上述描述的系统，设备和单元的具体工作过程，可以参考前述方法实施例中的对应过程，在此不再赘述。本申请实施例还提供一种计算机可读存储介质，计算机可读存储介质中存储有指令，当计算机执行该指令时，使得计算机执行上述实施例提供的登录态的管理方法。其中，计算机可读存储介质，例如可以是但不限于电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。计算机可读存储介质的更具体的例子包括：具有一个或多个导线的电连接、便携式计算机磁盘、硬盘、RAM、ROM、可擦式可编程只读存储器、寄存器、硬盘、光纤、CD-ROM、光存储器件、磁存储器件、或者上述的任意合适的组合、或者本领域熟知的任何其它形式的计算机可读存储介质。一种示例性的存储介质耦合至处理器，从而使处理器能够从该存储介质读取信息，且可向该存储介质写入信息。当然，存储介质也可以是处理器的组成部分。处理器和存储介质可以位于特定用途集成电路中。在本申请实施例中，计算机可读存储介质可以是任何包含或存储程序的有形介质，该程序可以被指令执行系统、装置或者器件使用或者与其结合使用。以上所述，仅为本申请的具体实施方式，但本申请的保护范围并不局限于此，任何在本申请揭露的技术范围内的变化或替换，都应涵盖在本申请的保护范围之内。因此，本申请的保护范围应该以权利要求的保护范围为准。
