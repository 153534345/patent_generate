标题title
一种基于web浏览器数据缓存方法、系统和存储介质
摘要abst
本发明提供一种基于web浏览器数据缓存方法、系统和存储介质，包括：进入web浏览器的页面，创建一个indexedDB数据库及数据表；判断是否首次进入页面或刷新页面；如果是，则清空数据表中所有缓存数据，并基于访问请求向web服务器请求返回第二数据到业务层；如果不是，查询indexedDB数据库及数据表中是否存在与本次访问请求相同的第一数据；如果存在，则进行时间戳有效性判定，如果时间戳有效，返回所述第一数据到业务层；如果不存在，则基于访问请求向web服务器请求返回第二数据到业务层；基于返回到业务层的第一数据或第二数据更新页面数据。本发明能提升用户的使用体验，并在一定程度上减少web服务器压力。
权利要求书clms
1.一种基于web浏览器数据缓存方法，其特征在于，所述方法包括：进入web浏览器的页面，创建一个indexedDB数据库及数据表，以用于存储需要缓存的数据；基于用户操作发起访问请求，并进行访问请求拦截，判断是否是首次进入页面或刷新页面；如果是首次进入页面或刷新页面，则清空数据表中所有缓存数据，并基于访问请求向web服务器请求返回第二数据到业务层；如果不是首次进入页面或刷新页面，查询indexedDB数据库及数据表中是否存在与本次访问请求相同的第一数据；如果存在，用当前的时间戳减去所述第一数据存下时的时间戳计算得到时差，如果时差大于等于预设的第一时效期限，从indexedDB数据库及数据表中删除所述第一数据，并基于访问请求向web服务器请求返回第二数据到业务层，如果时差小于预设的第一时效期限，返回所述第一数据到业务层；如果不存在，则基于访问请求向web服务器请求返回第二数据到业务层；基于返回到业务层的第一数据或第二数据更新页面数据。2.根据权利要求1所述的一种基于web浏览器数据缓存方法，其特征在于，基于访问请求向web服务器请求返回第二数据到业务层，具体包括：继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截；判断响应的第二数据是否为正确数据；如果是正确数据，则以当前访问请求的路径结合访问请求的参数进行字符串拼接作为唯一主键ID，获取当前的时间戳，并通过预设算法制定第二数据的第二时效期限，并把web服务器响应的第二数据、当前的时间戳以及第二时效期限以JSON字符串的形式存入indexedDB数据库及数据表；返回web服务器响应的第二数据到业务层。3.根据权利要求2所述的一种基于web浏览器数据缓存方法，其特征在于，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；将每个待选数据基于各个参数信息的贴合度得分进行累加，得到每个待选数据的第一总得分；基于第一总得分的高低对多个待选数据进行排序，选择第一总得分最高的待选数据作为第二数据。4.根据权利要求2所述的一种基于web浏览器数据缓存方法，其特征在于，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；预设每个参数信息对数据选取具有不同的影响权重；将每个待选数据基于各个参数信息的贴合度得分乘以对应的影响权重，得到每个待选数据基于各个参数信息的贴合度权重得分；将每个待选数据基于各个参数信息的贴合度权重得分进行累加，得到每个待选数据的第二总得分；基于第二总得分的高低对多个待选数据进行排序，选择第二总得分最高的待选数据作为第二数据。5.根据权利要求2所述的一种基于web浏览器数据缓存方法，其特征在于，通过预设算法制定第二数据的第二时效期限，具体包括：预设不同数据匹配对应的时效期限；构建时效期限预测模型；创建样本数据库，并通过样本数据库中的样本数据对时效期限预测模型进行优化；将第二数据输入所述时效期限预测模型，并预测得到所述第二数据对应的第二时效期限。6.根据权利要求5所述的一种基于web浏览器数据缓存方法，其特征在于，在预测得到所述第二数据对应的第二时效期限之后，所述方法还包括：获取多个历史数据集，每个历史数据集至少包括历史数据，历史实际时效期限，以及对应历史时间的环境参数和用户属性；获取当前时间的环境参数和用户属性，并对当前时间的环境参数和用户属性进行特征计算，得到历史特征值对每个历史数据集的对应历史时间的的环境参数和用户属性进行特征计算，得到当前特征值；将当前特征值与每个历史数据集的历史特征值进行近似度计算，判断近似度是否大于第一预设阈值，如果是，则将对应的历史数据集加入第一数据库；基于第一数据库中每个历史数据集的历史数据，通过时效期限预测模型预测得到每个历史数据集的历史预测时效期限；基于第一数据库中的每个历史数据集，将历史实际时效期限减去历史预测时效期限，得到期限差值；对第一数据库中多个历史数据集的期限差值进行相加得到期限差值和，并将期限差值和除以第一数据库中历史数据集的总数量，得到期限修正值；将预测得到所述第二数据对应的第二时效期限加上期限修正值，得到修正后的第二时效期限。7.一种基于web浏览器数据缓存系统，其特征在于，包括存储器和处理器，所述存储器中包括一种基于web浏览器数据缓存方法程序，所述基于web浏览器数据缓存方法程序被所述处理器执行时实现如下步骤：进入web浏览器的页面，创建一个indexedDB数据库及数据表，以用于存储需要缓存的数据；基于用户操作发起访问请求，并进行访问请求拦截，判断是否是首次进入页面或刷新页面；如果是首次进入页面或刷新页面，则清空数据表中所有缓存数据，并基于访问请求向web服务器请求返回第二数据到业务层；如果不是首次进入页面或刷新页面，查询indexedDB数据库及数据表中是否存在与本次访问请求相同的第一数据；如果存在，用当前的时间戳减去所述第一数据存下时的时间戳计算得到时差，如果时差大于等于预设的第一时效期限，从indexedDB数据库及数据表中删除所述第一数据，并基于访问请求向web服务器请求返回第二数据到业务层，如果时差小于预设的第一时效期限，返回所述第一数据到业务层；如果不存在，则基于访问请求向web服务器请求返回第二数据到业务层；基于返回到业务层的第一数据或第二数据更新页面数据。8.根据权利要求7所述的一种基于web浏览器数据缓存系统，其特征在于，基于访问请求向web服务器请求返回第二数据到业务层，具体包括：继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截；判断响应的第二数据是否为正确数据；如果是正确数据，则以当前访问请求的路径结合访问请求的参数进行字符串拼接作为唯一主键ID，获取当前的时间戳，并通过预设算法制定第二数据的第二时效期限，并把web服务器响应的第二数据、当前的时间戳以及第二时效期限以JSON字符串的形式存入indexedDB数据库及数据表；返回web服务器响应的第二数据到业务层。9.根据权利要求8所述的一种基于web浏览器数据缓存系统，其特征在于，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；将每个待选数据基于各个参数信息的贴合度得分进行累加，得到每个待选数据的第一总得分；基于第一总得分的高低对多个待选数据进行排序，选择第一总得分最高的待选数据作为第二数据。10.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质中包括一种基于web浏览器数据缓存方法程序，所述基于web浏览器数据缓存方法程序被处理器执行时，实现如权利要求1至6中任一项所述的一种基于web浏览器数据缓存方法的步骤。
说明书desc
技术领域本发明涉及网络通信技术领域，尤其涉及一种基于web浏览器数据缓存方法、系统和存储介质。背景技术Web浏览器是个显示网页服务器或档案系统内的文件，并让用户与此些文件互动的一种软件。它用来显示在万维网或局部局域网路等内的文字、影像及其他资讯。web服务器是离web浏览器最近的服务器端，主要作用包含三个方面：监听web浏览器请求，处理web浏览器请求，web浏览器与数据库之间的屏障。现有的web浏览器数据缓存机制是通过web服务器与web浏览器协商缓存；在首次请求接口时，web浏览器把数据缓存在本地；在下次请求接口时，如数据未更新，服务端发送未更新指令，则web浏览器继续使用缓存数据；如数据已更新，则web浏览器则更新本地缓存数据及页面数据；然而这种缓存方式需要web服务器支持，且每次进入页面都会发起一次请求还是会给web服务器造成一定压力；现有的web浏览器把一些数据自己缓存在cookie中，将会设置一个过期时间。此方式存在以下缺陷：cookie容量相对较小，当数据量比较大时，且数据量超出浏览器所支持的cookie存储大小时，根据不同浏览器会出现不同的情况，用户体验感不佳。发明内容为了解决上述至少一个技术问题，本发明提出了一种基于web浏览器数据缓存方法、系统和存储介质，能够提升用户的使用体验，并在一定程度上减少了web服务器的压力。本发明第一方面提出了一种基于web浏览器数据缓存方法，所述方法包括：进入web浏览器的页面，创建一个indexedDB数据库及数据表，以用于存储需要缓存的数据；基于用户操作发起访问请求，并进行访问请求拦截，判断是否是首次进入页面或刷新页面；如果是首次进入页面或刷新页面，则清空数据表中所有缓存数据，并基于访问请求向web服务器请求返回第二数据到业务层；如果不是首次进入页面或刷新页面，查询indexedDB数据库及数据表中是否存在与本次访问请求相同的第一数据；如果存在，用当前的时间戳减去所述第一数据存下时的时间戳计算得到时差，如果时差大于等于预设的第一时效期限，从indexedDB数据库及数据表中删除所述第一数据，并基于访问请求向web服务器请求返回第二数据到业务层，如果时差小于预设的第一时效期限，返回所述第一数据到业务层；如果不存在，则基于访问请求向web服务器请求返回第二数据到业务层；基于返回到业务层的第一数据或第二数据更新页面数据。本方案中，基于访问请求向web服务器请求返回第二数据到业务层，具体包括：继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截；判断响应的第二数据是否为正确数据；如果是正确数据，则以当前访问请求的路径结合访问请求的参数进行字符串拼接作为唯一主键ID，获取当前的时间戳，并通过预设算法制定第二数据的第二时效期限，并把web服务器响应的第二数据、当前的时间戳以及第二时效期限以JSON字符串的形式存入indexedDB数据库及数据表；返回web服务器响应的第二数据到业务层。本方案中，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；将每个待选数据基于各个参数信息的贴合度得分进行累加，得到每个待选数据的第一总得分；基于第一总得分的高低对多个待选数据进行排序，选择第一总得分最高的待选数据作为第二数据。本方案中，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；预设每个参数信息对数据选取具有不同的影响权重；将每个待选数据基于各个参数信息的贴合度得分乘以对应的影响权重，得到每个待选数据基于各个参数信息的贴合度权重得分；将每个待选数据基于各个参数信息的贴合度权重得分进行累加，得到每个待选数据的第二总得分；基于第二总得分的高低对多个待选数据进行排序，选择第二总得分最高的待选数据作为第二数据。本方案中，通过预设算法制定第二数据的第二时效期限，具体包括：预设不同数据匹配对应的时效期限；构建时效期限预测模型；创建样本数据库，并通过样本数据库中的样本数据对时效期限预测模型进行优化；将第二数据输入所述时效期限预测模型，并预测得到所述第二数据对应的第二时效期限。本方案中，在预测得到所述第二数据对应的第二时效期限之后，所述方法还包括：获取多个历史数据集，每个历史数据集至少包括历史数据，历史实际时效期限，以及对应历史时间的环境参数和用户属性；获取当前时间的环境参数和用户属性，并对当前时间的环境参数和用户属性进行特征计算，得到历史特征值对每个历史数据集的对应历史时间的的环境参数和用户属性进行特征计算，得到当前特征值；将当前特征值与每个历史数据集的历史特征值进行近似度计算，判断近似度是否大于第一预设阈值，如果是，则将对应的历史数据集加入第一数据库；基于第一数据库中每个历史数据集的历史数据，通过时效期限预测模型预测得到每个历史数据集的历史预测时效期限；基于第一数据库中的每个历史数据集，将历史实际时效期限减去历史预测时效期限，得到期限差值；对第一数据库中多个历史数据集的期限差值进行相加得到期限差值和，并将期限差值和除以第一数据库中历史数据集的总数量，得到期限修正值；将预测得到所述第二数据对应的第二时效期限加上期限修正值，得到修正后的第二时效期限。本发明第二方面还提出一种基于web浏览器数据缓存系统，包括存储器和处理器，所述存储器中包括一种基于web浏览器数据缓存方法程序，所述基于web浏览器数据缓存方法程序被所述处理器执行时实现如下步骤：进入web浏览器的页面，创建一个indexedDB数据库及数据表，以用于存储需要缓存的数据；基于用户操作发起访问请求，并进行访问请求拦截，判断是否是首次进入页面或刷新页面；如果是首次进入页面或刷新页面，则清空数据表中所有缓存数据，并基于访问请求向web服务器请求返回第二数据到业务层；如果不是首次进入页面或刷新页面，查询indexedDB数据库及数据表中是否存在与本次访问请求相同的第一数据；如果存在，用当前的时间戳减去所述第一数据存下时的时间戳计算得到时差，如果时差大于等于预设的第一时效期限，从indexedDB数据库及数据表中删除所述第一数据，并基于访问请求向web服务器请求返回第二数据到业务层，如果时差小于预设的第一时效期限，返回所述第一数据到业务层；如果不存在，则基于访问请求向web服务器请求返回第二数据到业务层；基于返回到业务层的第一数据或第二数据更新页面数据。本方案中，基于访问请求向web服务器请求返回第二数据到业务层，具体包括：继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截；判断响应的第二数据是否为正确数据；如果是正确数据，则以当前访问请求的路径结合访问请求的参数进行字符串拼接作为唯一主键ID，获取当前的时间戳，并通过预设算法制定第二数据的第二时效期限，并把web服务器响应的第二数据、当前的时间戳以及第二时效期限以JSON字符串的形式存入indexedDB数据库及数据表；返回web服务器响应的第二数据到业务层。本方案中，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；将每个待选数据基于各个参数信息的贴合度得分进行累加，得到每个待选数据的第一总得分；基于第一总得分的高低对多个待选数据进行排序，选择第一总得分最高的待选数据作为第二数据。本发明第三方面还提出一种计算机可读存储介质，所述计算机可读存储介质中包括一种基于web浏览器数据缓存方法程序，所述基于web浏览器数据缓存方法程序被处理器执行时，实现如上述的一种基于web浏览器数据缓存方法的步骤。本发明提出的一种基于web浏览器数据缓存方法、系统和存储介质，能够提升用户的使用体验，并在一定程度上减少了web服务器的压力。本发明的附加方面和优点将在下面的描述部分中给出，部分将从下面的描述中变得明显，或通过本发明的实践了解到。附图说明图1示出了本发明一种基于web浏览器数据缓存方法的流程图；图2示出了本发明具体实施例的时效期限制定的流程图；图3示出了本发明具体实施例的web浏览器数据缓存流程图；图4示出了本发明一种基于web浏览器数据缓存系统的框图。具体实施方式为了能够更清楚地理解本发明的上述目的、特征和优点，下面结合附图和具体实施方式对本发明进行进一步的详细描述。需要说明的是，在不冲突的情况下，本申请的实施例及实施例中的特征可以相互组合。在下面的描述中阐述了很多具体细节以便于充分理解本发明，但是，本发明还可以采用其他不同于在此描述的其他方式来实施，因此，本发明的保护范围并不受下面公开的具体实施例的限制。图1示出了本发明一种基于web浏览器数据缓存方法的流程图。如图1所示，本发明第一方面提出一种基于web浏览器数据缓存方法，所述方法包括：进入web浏览器的页面，创建一个indexedDB数据库及数据表，以用于存储需要缓存的数据；基于用户操作发起访问请求，并进行访问请求拦截，判断是否是首次进入页面或刷新页面；如果是首次进入页面或刷新页面，则清空数据表中所有缓存数据，并基于访问请求向web服务器请求返回第二数据到业务层；如果不是首次进入页面或刷新页面，查询indexedDB数据库及数据表中是否存在与本次访问请求相同的第一数据；如果存在，用当前的时间戳减去所述第一数据存下时的时间戳计算得到时差，如果时差大于等于预设的第一时效期限，从indexedDB数据库及数据表中删除所述第一数据，并基于访问请求向web服务器请求返回第二数据到业务层，如果时差小于预设的第一时效期限，返回所述第一数据到业务层；如果不存在，则基于访问请求向web服务器请求返回第二数据到业务层；基于返回到业务层的第一数据或第二数据更新页面数据。可以理解，indexedDB 是一个大型的 NoSQL 存储系统。它允许在用户的浏览器中存储任意内容。除了通常的查找、读取和更新操作外，indexedDB 还支持事务。本发明提出的基于web浏览器数据缓存方法，在进入web浏览器的页面，创建一个indexedDB数据库及数据表，以用于存储需要缓存的数据；基于用户操作发起访问请求，并进行访问请求拦截，判断是否是首次进入页面或刷新页面；如果是首次进入页面或刷新页面，则清空数据表中所有缓存数据，并基于访问请求向web服务器请求返回第二数据到业务层；如果不是首次进入页面或刷新页面，查询indexedDB数据库及数据表中是否存在与本次访问请求相同的第一数据；如果存在，用当前的时间戳减去所述第一数据存下时的时间戳计算得到时差，如果时差大于等于预设的第一时效期限，从indexedDB数据库及数据表中删除所述第一数据，则证明该第一数据已过期，并基于访问请求向web服务器请求返回第二数据到业务层，如果时差小于预设的第一时效期限，则证明该第一数据有效，返回所述第一数据到业务层；如果不存在，则基于访问请求向web服务器请求返回第二数据到业务层；基于返回到业务层的第一数据或第二数据更新页面数据。基于上述，本发明能够提升用户的使用体验，并在一定程度上减少了web服务器的压力。根据本发明的具体实施例，在进入web浏览器的页面之后，所述方法还包括：存一个字段到浏览器的cookie中，以用于判断是否是首次进入web浏览器的页面，且该字段的时效性为关闭web浏览器时清除cookie。根据本发明的具体实施例，在返回所述第一数据到业务层之前，所述还包括：预设数据表中预置有该第一数据的第一摘要值，并由web浏览器的私钥进行签名，得到签名数据进行保存；通过web浏览器的公钥对签名数据进行验签；待验签通过后，对该第一数据重新进行摘要值计算，得到第二摘要值；对比所述第二摘要值与预置的第一摘要值是否一致，如果一致，则说明该第一数据未被篡改，如果不一致，则说明该第一数据被篡改，并进行删除。本发明通过对第一数据进行摘要值比对，从而可以分辨出该第一数据是否被篡改，如果被篡改，则进行删除第一数据，并基于访问请求向web服务器请求返回第二数据到业务层。根据本发明的实施例，基于访问请求向web服务器请求返回第二数据到业务层，具体包括：继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截；判断响应的第二数据是否为正确数据；如果是正确数据，则以当前访问请求的路径结合访问请求的参数进行字符串拼接作为唯一主键ID，获取当前的时间戳，并通过预设算法制定第二数据的第二时效期限，并把web服务器响应的第二数据、当前的时间戳以及第二时效期限以JSON字符串的形式存入indexedDB数据库及数据表；返回web服务器响应的第二数据到业务层。本发明的主要目的是为了提升用户的使用体验，并在一定程度上减少了web服务器的压力；主要使用indexedDB进行数据存储，使用performance.getEntriesByType方法结合cookie实现刷新、普通页面跳转还是打开web浏览器后首次打开网站的判断。首先创建一个数据库及存数据的表，判断是否是本次打开web浏览器后首次进入本网站或刷新页面；如果是，则证明需要显示最新数据，所以需要发起最新请求并清空数据表；反之，在请求拦截器中查询数据表是否存在相同请求；如果存在，则进行时间比对，判断是否大于需要缓存的时间；如果大于，则证明当前数据已失效并删除该数据，并继续发起请求。最后在响应拦截器进行数据存储，以请求路径拼接请求参数转成字符串作为唯一主键ID，用一个字段保存请求成功后返回的JSON字符串，并用另外一个地址存下当前时间戳用于判断数据是否过期的校验。根据本发明的实施例，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；将每个待选数据基于各个参数信息的贴合度得分进行累加，得到每个待选数据的第一总得分；基于第一总得分的高低对多个待选数据进行排序，选择第一总得分最高的待选数据作为第二数据。需要说明的是，由于web服务器中包括较多的数据，为了便于提取出最符合的访问请求的数据，则本发明基于访问请求的各个参数信息，将多个待选数据进行两两挑战，最终统计出每个待选数据与访问需求贴合度的总得分，进而可以将总得分最高的待选数据选定为第二数据进行响应。根据本发明的实施例，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；预设每个参数信息对数据选取具有不同的影响权重；将每个待选数据基于各个参数信息的贴合度得分乘以对应的影响权重，得到每个待选数据基于各个参数信息的贴合度权重得分；将每个待选数据基于各个参数信息的贴合度权重得分进行累加，得到每个待选数据的第二总得分；基于第二总得分的高低对多个待选数据进行排序，选择第二总得分最高的待选数据作为第二数据。需要说明的是，由于各个参数信息的重要性不同，因此对数据选取的影响权重不同，本发明将每个待选数据基于各个参数信息的贴合度得分乘以对应的影响权重，得到每个待选数据基于各个参数信息的贴合度权重得分；并将每个待选数据基于各个参数信息的贴合度权重得分进行累加，得到每个待选数据的第二总得分，进而根据第二总得分对多个待选数据进行准确排序，进一步便于选择出最匹配的第二数据。如图2所示，通过预设算法制定第二数据的第二时效期限，具体包括：预设不同数据匹配对应的时效期限，构建时效期限预测模型；创建样本数据库，并通过样本数据库中的样本数据对时效期限预测模型进行优化；将第二数据输入所述时效期限预测模型，并预测得到所述第二数据对应的第二时效期限。需要说明的是，不同的数据具有对应的时效期限，部分数据为更新较为频繁的数据，则相应的时效期限通常较短，部分数据为更新不频繁的数据，则相应的时效期限通常较长，本发明通过时效期限预测模型分析数据的属性，进而预测得到适配对应数据的时效期限。根据本发明的实施例，在预测得到所述第二数据对应的第二时效期限之后，所述方法还包括：获取多个历史数据集，每个历史数据集至少包括历史数据，历史实际时效期限，以及对应历史时间的环境参数和用户属性；获取当前时间的环境参数和用户属性，并对当前时间的环境参数和用户属性进行特征计算，得到历史特征值对每个历史数据集的对应历史时间的的环境参数和用户属性进行特征计算，得到当前特征值；将当前特征值与每个历史数据集的历史特征值进行近似度计算，判断近似度是否大于第一预设阈值，如果是，则将对应的历史数据集加入第一数据库；基于第一数据库中每个历史数据集的历史数据，通过时效期限预测模型预测得到每个历史数据集的历史预测时效期限；基于第一数据库中的每个历史数据集，将历史实际时效期限减去历史预测时效期限，得到期限差值；对第一数据库中多个历史数据集的期限差值进行相加得到期限差值和，并将期限差值和除以第一数据库中历史数据集的总数量，得到期限修正值；将预测得到所述第二数据对应的第二时效期限加上期限修正值，得到修正后的第二时效期限。需要说明的是，受到环境参数和用户属性，即不同用户具有不用的使用习惯，有的用户节奏较快，则需要适配较短的时效期限，有的用户节奏较慢，则需要适配较长的时效期限。上述通过时效期限预测模型预测得到的第二时效期限是基于数据内容分析出的，然而单从数据内容方面分析则可能存在一定的误差，本发明进一步结合多个历史数据集的历史实际时效期限和历史预测时效期限进行计算出期限修正值，进而根据期限修正值来对模型预测得到的第二时效期限进行修正，以便于得到更加准确的第二时效期限。为了进一步说明本发明的技术方案，下面结合具体实施例进行详细说明，如图3所示。步骤S101，进入页面后存一个字段到cookie中；用于判断是否是首次进入页面，时效性为关闭web浏览器清除cookie；步骤S201，创建一个indexedDB数据库及数据表；用于存储需要缓存的数据；步骤S301，发起请求，并进行请求拦截，在请求拦截中判断是否是首次进入页面或刷新；步骤S302，如果是首次进入页面或刷新，则清空表中所有缓存数据；步骤S303，继续发起请求到web服务器，得到web服务器响应并进行响应拦截，判断响应的数据是否为正确的数据；如果是正确数据，则以当前请求路径结合请求参数进行字符串拼接作为唯一主键ID，保存当前的时间戳，并把web服务器响应的数据以JSON字符串的形式存入；并返回web服务器数据到业务层；步骤S304，如果不是首次进入页面和页面刷新，查询表中是否存在相同请求的数据；如果存在，用当前时间戳减去该条数据存下时的时间戳，如果大于需要缓存的时间，删除该数据，则证明该数据已过期，并重新执行步骤S303；如果当前时间戳减去该条数据存下时的时间戳小于需要缓存的时间，则证明该数据有效，返回该数据到业务层；如果不存在，则重新执行步骤S303。步骤S401，更新页面数据。图4示出了本发明一种基于web浏览器数据缓存系统的框图。如图4所示，本发明还提出一种基于web浏览器数据缓存系统4，包括存储器41和处理器42，所述存储器中包括一种基于web浏览器数据缓存方法程序，所述基于web浏览器数据缓存方法程序被所述处理器执行时实现如下步骤：进入web浏览器的页面，创建一个indexedDB数据库及数据表，以用于存储需要缓存的数据；基于用户操作发起访问请求，并进行访问请求拦截，判断是否是首次进入页面或刷新页面；如果是首次进入页面或刷新页面，则清空数据表中所有缓存数据，并基于访问请求向web服务器请求返回第二数据到业务层；如果不是首次进入页面或刷新页面，查询indexedDB数据库及数据表中是否存在与本次访问请求相同的第一数据；如果存在，用当前的时间戳减去所述第一数据存下时的时间戳计算得到时差，如果时差大于等于预设的第一时效期限，从indexedDB数据库及数据表中删除所述第一数据，并基于访问请求向web服务器请求返回第二数据到业务层，如果时差小于预设的第一时效期限，返回所述第一数据到业务层；如果不存在，则基于访问请求向web服务器请求返回第二数据到业务层；基于返回到业务层的第一数据或第二数据更新页面数据。根据本发明的实施例，基于访问请求向web服务器请求返回第二数据到业务层，具体包括：继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截；判断响应的第二数据是否为正确数据；如果是正确数据，则以当前访问请求的路径结合访问请求的参数进行字符串拼接作为唯一主键ID，获取当前的时间戳，并通过预设算法制定第二数据的第二时效期限，并把web服务器响应的第二数据、当前的时间戳以及第二时效期限以JSON字符串的形式存入indexedDB数据库及数据表；返回web服务器响应的第二数据到业务层。根据本发明的实施例，继续发起访问请求到web服务器；得到web服务器响应的第二数据并进行响应拦截，具体包括：预设web服务器包括多个待选数据；获取所述访问请求的各个参数信息，从多个参数信息中选定一个参数信息作为第一参数信息；将每个待选数据与第一参数信息的贴合度，与其他待选数据与第一参数信息的贴合度进行逐一挑战对比；如果前者的待选数据优于后者的待选数据，则对前者的待选数据在第一参数信息的贴合度加1分，否者不加分；待所有待选数据均完成基于各个参数信息的贴合度比对后，统计每个待选数据基于每个参数信息的贴合度得分；将每个待选数据基于各个参数信息的贴合度得分进行累加，得到每个待选数据的第一总得分；基于第一总得分的高低对多个待选数据进行排序，选择第一总得分最高的待选数据作为第二数据。本发明第三方面还提出一种计算机可读存储介质，所述计算机可读存储介质中包括一种基于web浏览器数据缓存方法程序，所述基于web浏览器数据缓存方法程序被处理器执行时，实现如上述的一种基于web浏览器数据缓存方法的步骤。本发明提出的一种基于web浏览器数据缓存方法、系统和存储介质，能够提升用户的使用体验，并在一定程度上减少了web服务器的压力。在本申请所提供的几个实施例中，应该理解到，所揭露的设备和方法，可以通过其它的方式实现。以上所描述的设备实施例仅仅是示意性的，例如，所述单元的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，如：多个单元或组件可以结合，或可以集成到另一个系统，或一些特征可以忽略，或不执行。另外，所显示或讨论的各组成部分相互之间的耦合、或直接耦合、或通信连接可以是通过一些接口，设备或单元的间接耦合或通信连接，可以是电性的、机械的或其它形式的。上述作为分离部件说明的单元可以是、或也可以不是物理上分开的，作为单元显示的部件可以是、或也可以不是物理单元；既可以位于一个地方，也可以分布到多个网络单元上；可以根据实际的需要选择其中的部分或全部单元来实现本实施例方案的目的。另外，在本发明各实施例中的各功能单元可以全部集成在一个处理单元中，也可以是各单元分别单独作为一个单元，也可以两个或两个以上单元集成在一个单元中；上述集成的单元既可以采用硬件的形式实现，也可以采用硬件加软件功能单元的形式实现。本领域普通技术人员可以理解：实现上述方法实施例的全部或部分步骤可以通过程序指令相关的硬件来完成，前述的程序可以存储于计算机可读取存储介质中，该程序在执行时，执行包括上述方法实施例的步骤；而前述的存储介质包括：移动存储设备、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。或者，本发明上述集成的单元如果以软件功能模块的形式实现并作为独立的产品销售或使用时，也可以存储在一个计算机可读取存储介质中。基于这样的理解，本发明实施例的技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台计算机设备执行本发明各个实施例所述方法的全部或部分。而前述的存储介质包括：移动存储设备、ROM、RAM、磁碟或者光盘等各种可以存储程序代码的介质。以上所述，仅为本发明的具体实施方式，但本发明的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本发明揭露的技术范围内，可轻易想到变化或替换，都应涵盖在本发明的保护范围之内。因此，本发明的保护范围应以所述权利要求的保护范围为准。
