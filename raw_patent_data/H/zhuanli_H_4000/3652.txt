标题title
一种多模态进程数据传输方法和装置
摘要abst
本发明涉及一种多模态进程数据传输方法和装置，其中，方法包括：通过端口底层驱动读取传输设备的原始数据流；基于所述原始数据流对端口底层驱动进行性能测试，判断所述端口底层驱动是否满足数据传输要求；在所述端口底层驱动无法满足数据传输要求的情况下，采用用户驱动进程对所述原始数据流进行传输。本发明能够提升灵活性。
权利要求书clms
1.一种多模态进程数据传输方法，其特征在于，包括以下步骤：通过端口底层驱动读取传输设备的原始数据流；基于所述原始数据流对端口底层驱动进行性能测试，判断所述端口底层驱动是否满足数据传输要求；在所述端口底层驱动无法满足数据传输要求的情况下，采用用户驱动进程对所述原始数据流进行传输。2.根据权利要求1所述的多模态进程数据传输方法，其特征在于，所述对所述原始数据流进行性能测试前，还包括：判断数据传输系统是否为首次运行，若是，则对所述原始数据流进行性能测试，否则，执行上一次选择的驱动进程对所述原始数据流进行传输。3.根据权利要求1所述的多模态进程数据传输方法，其特征在于，所述对所述原始数据流进行性能测试前，还包括：判断是否需要特定应用需求，若是则直接采用用户驱动进程对所述原始数据流进行传输。4.根据权利要求1所述的多模态进程数据传输方法，其特征在于，所述判断所述端口底层驱动是否满足数据传输要求时，分别对传输性能和传输稳定性进行判断，当传输性能和传输稳定性中有一个无法满足数据传输要求，则确定所述端口底层驱动无法满足数据传输要求。5.根据权利要求1所述的多模态进程数据传输方法，其特征在于，所述采用用户驱动进程对所述原始数据流进行传输后，还包括：判断用户驱动进程对所述原始数据流进行传输时是否发生数据传输错误的情况，当发生数据传输错误的情况时，采用端口协议驱动和系统API对所述原始数据流进行传输。6.一种多模态进程数据传输装置，其特征在于，包括：读取模块，用于通过端口底层驱动读取传输设备的原始数据流；传输要求判断模块，用于基于所述原始数据流对端口底层驱动进行性能测试，判断所述端口底层驱动是否满足数据传输要求；用户驱动数据传输模块，用于在所述端口底层驱动无法满足数据传输要求的情况下，采用用户驱动进程对所述原始数据流进行传输。7.根据权利要求6所述的多模态进程数据传输装置，其特征在于，还包括：首次运行判断模块，用于判断数据传输系统是否为首次运行，若是，所述传输要求判断模块对所述原始数据流进行性能测试，否则，执行上一次选择的驱动进程对所述原始数据流进行传输。8.根据权利要求6所述的多模态进程数据传输装置，其特征在于，还包括：特定应用需求判断模块，用于判断是否需要特定应用需求，若是，所述用户驱动数据传输模块直接采用用户驱动进程对所述原始数据流进行传输。9.根据权利要求6所述的多模态进程数据传输装置，其特征在于，所述传输要求判断模块包括传输性能判断单元和传输稳定性判断单元，所述传输性能判断单元用于对传输性能进行判断，所述传输稳定性判断单元用于对传输稳定性进行判断，当传输性能和传输稳定性中有一个无法满足数据传输要求，则确定所述端口底层驱动无法满足数据传输要求。10.根据权利要求6所述的多模态进程数据传输装置，其特征在于，还包括错误判断模块，用于判断用户驱动进程对所述原始数据流进行传输时是否发生数据传输错误的情况，当发生数据传输错误的情况时，采用端口协议驱动和系统API对所述原始数据流进行传输。
说明书desc
技术领域本发明涉及数据传输技术领域，特别是涉及一种多模态进程数据传输方法和装置。背景技术传统基于端口的数据通讯设备在工作中的数据读取逻辑如图1所示，由于该数据传输模式只会为端口提供单一标准协议驱动，它对于特定应用需求而言并非定制的，同时标准协议面对各种不同需求在设计上不会为特定需求单独优化，因此实际使用中可能会存在无法使用、稳定性差、性能低、功能可靠性方面无法保障，不够灵活的诸多局限性。发明内容本发明所要解决的技术问题是提供一种多模态进程数据传输方法和装置，能够提升灵活性。本发明解决其技术问题所采用的技术方案是：提供一种多模态进程数据传输方法，包括以下步骤：通过端口底层驱动读取传输设备的原始数据流；基于所述原始数据流对端口底层驱动进行性能测试，判断所述端口底层驱动是否满足数据传输要求；在所述端口底层驱动无法满足数据传输要求的情况下，采用用户驱动进程对所述原始数据流进行传输。所述对所述原始数据流进行性能测试前，还包括：判断数据传输系统是否为首次运行，若是，则对所述原始数据流进行性能测试，否则，执行上一次选择的驱动进程对所述原始数据流进行传输。所述对所述原始数据流进行性能测试前，还包括：判断是否需要特定应用需求，若是则直接采用用户驱动进程对所述原始数据流进行传输。所述判断所述端口底层驱动是否满足数据传输要求时，分别对传输性能和传输稳定性进行判断，当传输性能和传输稳定性中有一个无法满足数据传输要求，则确定所述端口底层驱动无法满足数据传输要求。所述采用用户驱动进程对所述原始数据流进行传输后，还包括：判断用户驱动进程对所述原始数据流进行传输时是否发生数据传输错误的情况，当发生数据传输错误的情况时，采用端口协议驱动和系统API对所述原始数据流进行传输。本发明解决其技术问题所采用的技术方案是：一种多模态进程数据传输装置，包括：读取模块，用于通过端口底层驱动读取传输设备的原始数据流；传输要求判断模块，用于基于所述原始数据流对端口底层驱动进行性能测试，判断所述端口底层驱动是否满足数据传输要求；用户驱动数据传输模块，用于在所述端口底层驱动无法满足数据传输要求的情况下，采用用户驱动进程对所述原始数据流进行传输。所述多模态进程数据传输装置还包括：首次运行判断模块，用于判断数据传输系统是否为首次运行，若是，所述传输要求判断模块对所述原始数据流进行性能测试，否则，执行上一次选择的驱动进程对所述原始数据流进行传输。所述多模态进程数据传输装置还包括：特定应用需求判断模块，用于判断是否需要特定应用需求，若是，所述用户驱动数据传输模块直接采用用户驱动进程对所述原始数据流进行传输。所述传输要求判断模块包括传输性能判断单元和传输稳定性判断单元，所述传输性能判断单元用于对传输性能进行判断，所述传输稳定性判断单元用于对传输稳定性进行判断，当传输性能和传输稳定性中有一个无法满足数据传输要求，则确定所述端口底层驱动无法满足数据传输要求。所述多模态进程数据传输装置还包括错误判断模块，用于判断用户驱动进程对所述原始数据流进行传输时是否发生数据传输错误的情况，当发生数据传输错误的情况时，采用端口协议驱动和系统API对所述原始数据流进行传输。有益效果由于采用了上述的技术方案，本发明与现有技术相比，具有以下的优点和积极效果：本发明通过运行在系统内部的用户驱动进程，可以实现绕过原本单一的端口协议驱动与API，直接通过端口底层读取传输设备的原始数据流，并同时与原有数据传输模式并行。通过这种多进程模式，可以实现更高的性能、更低的延迟，解决不同需求场景中，因对设备出现标准协议不支持而导致系统可不用的情况，大大提升了灵活性。附图说明图1是现有技术中基于端口的数据通讯设备在工作中的数据读取逻辑示意图；图2是本发明第一实施方式的流程图；图3是本发明第二实施方式的方框图。具体实施方式下面结合具体实施例，进一步阐述本发明。应理解，这些实施例仅用于说明本发明而不用于限制本发明的范围。此外应理解，在阅读了本发明讲授的内容之后，本领域技术人员可以对本发明作各种改动或修改，这些等价形式同样落于本申请所附权利要求书所限定的范围。本发明的第一实施方式涉及一种多模态进程数据传输方法，如图1所示，包括以下步骤：步骤1：启动应用，判断本实施方式采用的数据传输系统是否具备用户驱动功能，当具备用户驱动功能时，则进入下一步，否则，直接采用标准模式进行传输，即采用端口协议驱动和系统API对所述原始数据流进行传输。本实施方式中的用户驱动是指通过目标平台的API直接访问原始数据流。该步骤即是去检测目标平台是否具备实现用户驱动功能的可行性，当不具备可行性时，则直接采用标准模式进行传输。步骤2，通过端口底层驱动读取传输设备的原始数据流。步骤3，判断数据传输系统是否为首次运行，若是，则进入下一步，否则，执行上一次选择的驱动进程对所述原始数据流进行传输，也就是说，当判断出数据传输系统并不是首次运行时，如果上一次采用用户驱动进程对所述原始数据流进行传输，则本次也使用用户驱动进程对所述原始数据流进行传输，如果上一次采用标准模式进行传输，则本次也使用标准模式进行传输。步骤4，判断是否需要特定应用需求，若是则直接采用用户驱动进程对所述原始数据流进行传输。也就是说，在具体选择使用用户驱动进程还是标准模式进行传输前，还需要对数据传输是否有特定应用需求进行判断，当有特定应用需求时，由于标准模式并非定制，因此其不具备该功能，此时，直接采用用户驱动进程对所述原始数据流进行传输，当不需要特定应用需求时，则进入下一步。步骤5，基于所述原始数据流对端口底层驱动进行性能测试，判断所述端口底层驱动是否满足数据传输要求，在判断端口底层驱动是否满足数据传输要求时，需要分别对传输性能和传输稳定性进行判断，当传输性能和传输稳定性中有一个无法满足数据传输要求，则确定所述端口底层驱动无法满足数据传输要求，则采用用户驱动进程对所述原始数据流进行传输，当传输性能和传输稳定性均能够满足数据传输要求时，则采用标准模式进行传输。步骤6，当采用用户驱动进程对所述原始数据流进行传输时，还需要判断用户驱动进程对所述原始数据流进行传输时是否发生数据传输错误的情况，当发生数据传输错误的情况时，则采用标准模式进行传输，即采用端口协议驱动和系统API对所述原始数据流进行传输。值得一提的是，在运行过程中，本传输系统可以实时监测运行状态，并根据情况在用户驱动进程和标准模式之间进行动态切换，如此可以为设备数据传输提供结合了两者优点。由此可见，本实施方式利用运行在系统内部的用户驱动进程，可以实现绕过原本单一的端口协议驱动与API，直接通过端口底层读取传输设备的原始数据流，并同时与原有数据传输模式并行，通过这种多进程模式，可以实现更高的性能、更低的延迟，解决不同需求场景中，因对设备出现标准协议不支持而导致系统可不用的情况，大大提升了灵活性。本发明的第二实施方式涉及一种多模态进程数据传输装置，如图2所示，包括：读取模块，用于通过端口底层驱动读取传输设备的原始数据流；传输要求判断模块，用于基于所述原始数据流对端口底层驱动进行性能测试，判断所述端口底层驱动是否满足数据传输要求；用户驱动数据传输模块，用于在所述端口底层驱动无法满足数据传输要求的情况下，采用用户驱动进程对所述原始数据流进行传输。所述多模态进程数据传输装置还包括：首次运行判断模块，用于判断数据传输系统是否为首次运行，若是，所述传输要求判断模块对所述原始数据流进行性能测试，否则，执行上一次选择的驱动进程对所述原始数据流进行传输。所述多模态进程数据传输装置还包括：特定应用需求判断模块，用于判断是否需要特定应用需求，若是，所述用户驱动数据传输模块直接采用用户驱动进程对所述原始数据流进行传输。所述传输要求判断模块包括传输性能判断单元和传输稳定性判断单元，所述传输性能判断单元用于对传输性能进行判断，所述传输稳定性判断单元用于对传输稳定性进行判断，当传输性能和传输稳定性中有一个无法满足数据传输要求，则确定所述端口底层驱动无法满足数据传输要求。所述多模态进程数据传输装置还包括错误判断模块，用于判断用户驱动进程对所述原始数据流进行传输时是否发生数据传输错误的情况，当发生数据传输错误的情况时，采用端口协议驱动和系统API对所述原始数据流进行传输。不难发现，本实施方式通过用户驱动进程与相关的逻辑控制，可以实现在不修改数据发送设备且无需配置的前提下，自动在传统传输模式与直接访问设备数据读写的传输模式中动态切换，最大程度的保证兼容性和传输性能，极大程度地提高了数据传输的稳定性和可靠性，增强了系统的可用性及工作效率。
