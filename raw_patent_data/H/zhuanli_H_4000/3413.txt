标题title
一种适用于电力通信网络的时间敏感网络流量调度方法
摘要abst
本发明公开了一种适用于电力通信网络的时间敏感网络流量调度方法，包括以下步骤：步骤S1、资源计算：步骤S2、发送窗口分配；步骤S3、发送窗口偏向机制；步骤S4、数据流调度流程；主要对电力通信业务网络中时间敏感数据流的调度方法进行研究，并且基于TAS的调度方式提出多级队列窗口调度方法，通过基于回溯的发送窗口分配算法，根据数据流优先级权重计算并选择全局最小抖动的数据流发送窗口分配方式。然后通过发送窗口偏向机制来优化数据帧错过发送窗口对时延稳定性的影响。
权利要求书clms
1.一种适用于电力通信网络的时间敏感网络流量调度方法，其特征在于，包括以下步骤：步骤S1、资源计算：电力通信业务环境下的数据流通常会有特定的特征，其类型也相较固定，继而会保持流量平稳性，基于包含的轮询类型业务、周期性检测类型业务、实时同步类型业务，进行多级队列窗口调度资源计算，优先保障这类周期型的时间敏感数据流；步骤S2、发送窗口分配：根据步骤S1的资源计算方法可以产生每个数据流在一个调度周期内发送时间序列，以全局最小抖动的分配方式为目标，生成发送窗口分配表，根据发生窗口分配表的数据流的发送序列，实现不同数据流的分配发送；步骤S3、发送窗口偏向机制：采用发送窗口分配项偏向机制和发送窗口整体偏向机制，对多级队列窗口调度方法进行优化，降低数据帧调度过程中错过发送窗口造成的排队时延；步骤S4、数据流调度流程：对数据流进行调度主要分为资源初始化阶段和数据流调度阶段，在资源初始化阶段中，对于每个交换节点的出端口传输的数据流，根据预留的相关参数，进行资源初始化，得到每个数据流的发送时间序列，然后通过发送窗口分配算法分配数据流的发送窗口，接下来进入数据流的调度流程，对到达的数据流进行调度发送。2.根据权利要求1所述的一种适用于电力通信网络的时间敏感网络流量调度方法，其特征在于：步骤S1的具体方法如下：根据上述分析，可以对电力通信网络中周期型时间敏感数据流进行建模，对于时间敏感数据流Fi，发包周期记为Ti，数据帧长度为li，传输数据的信道带宽记为R。则该数据流中一个数据帧在交换节点中通信链路上发送所需的时间可以表示为：交换节点分配发送窗口的调度周期定义为从该端口发出的所有时间敏感数据流的数据帧发送周期的最小公倍数，表示为：Ts＝lcm那么在一个调度周期内，数据流Fi需要发送的数据帧数量可以表示为：根据数据流的发包周期和调度周期内的发包数量。可计算调度周期内的发送时间序列为：0,Ti,2Ti,3Ti…Ti另外为了保证数据帧可以在指定发送窗口成功传输，数据帧最终的发送窗口长度要大于发送时间，表示为：其中wi表示发送窗口长度，slot保护间隔单位为Bytes，最后结果向上取整，避免交换节点在执行非整数大小窗口长度切换时存在的误差影响。3.根据权利要求1所述的一种适用于电力通信网络的时间敏感网络流量调度方法，其特征在于：步骤S2的具体操作方法基于数据流进行定义分配对象：定义1：Window对象，用来表示数据流Fi的数据帧发送时间序列的相关参数，因此数据流Fi的对应的发送时间序列可以表示为一个Window列表；定义2：分配项Item对象，用于表示经过冲突调整的发送窗口分配项，最终的发送窗口分配表将包含一系列的分配项表示，并以链表的结构保存记为Link；基于上述的定义区分，在解决数据流Fi和其他数据流发送时间的冲突时，必然需要调整Fi的发送时间的偏移量，在调整Fi发送时间的同时可能会改变发送间隔从而产生时延抖动，通过回溯算法尝试不同发送时间序列的排列方式，找到全局抖动最小值，另外根据数据流的优先级赋予数据流权重，在计算全局抖动时，需要考虑每个数据流具有的权重值。4.根据权利要求3所述的一种适用于电力通信网络的时间敏感网络流量调度方法，其特征在于：回溯算法具体为：1)初始化窗口分配表，创建一个空闲分配项Item，Item.length＝Ts,Item.start＝0,Item.end＝Ts，基于权重的全局抖动值weightedJitterValue＝0；2)IF数据流全部分配完成；IF weightedJitterValue是最小值；保存发送窗口分配表Return；3)FOR i＝1…n；3.1)IF Fi已经分配,THEN返回第3步；3.2)解决Fi与发送窗口分配表冲突，调整Fi发送时间序列，更新全局抖动值；3.3)根据调整后的Fi发送时间序列，执行分配，更新发送窗口分配表；3.4)递归执行第2步；3.5)Fi设未分配状态，恢复全局抖动值，恢复Fi的发送时间序列，恢复发送窗口分配表；这里的抖动为发送间隔抖动，根据下面公式可得全局抖动值：其中wi表示数据流Fi的权重。intervali,j和intervali,k表示数据流Fi当前周期内任意两个发送间隔，经过上述的发送窗口分配过程，遍历所有的数据流分配方式，为了减少算法的时间复杂度，在分配算法找到第一种可以使基于数据流权重的全局抖动值为零时，就停止继续遍历，另外发送窗口分配算法中，在步骤3.3执行分配之前，需要在步骤3.2中判断当前数据流的发送时间序列是否与已经分配的发送窗口冲突，如果冲突则须要对发送时间序列的偏移量进行调整。5.根据权利要求4所述的一种适用于电力通信网络的时间敏感网络流量调度方法，其特征在于：发生冲突时，发送时间序列的偏移量进行调整的方法如下：a)FOR j＝1…n；a.1)Fi在一个调度周期中的第j个数据帧发送时间: windowj；a.2)在Link链表中查找前后最近合适的窗口偏移量，记为数组offset；a.3)FOR k＝0,1；a.3.1)Fi的所有发送时间序列调整offsetk，并根据Link链表找到前后最近最合适的窗口偏移量item_offsetk,对应发送时间序列调整item_offsetk+offsetk；a.3.2)计算数据流Fi的抖动值；a.4)比较两次调整窗口的抖动值，保留抖动值较小的发送时间调整结果，保存以windowj为主调整的发送时间的抖动值b)比较步骤1结束后得到的n种调方式，将抖动值最小的作为数据流Fi发送时间序列调整方式并保留。返回抖动值；其中步骤a.2和步骤a.3.1中的冲突调整有所不同，在步骤a.2中，以数据帧j的发送时间windowj为主，然后整体调整Fi的发送时间，其调整的方向有两个方向：向前调整和向后调整，两者之间都有可能找到Fi抖动为零的排列方式，因此都需要考虑，而在步骤a.3.1则只是在整体调整Fi之后进行局部调整，向前或者向后寻找到最近能满足发送时间的空闲窗口即可，数据流Fi在一个调度周期内的每一个数据帧进行整体的调整之后，可以得到n种排列方式，选择抖动值最小的一种即可，为了减小遍历次数，在进行过程中如果可以得到一种抖动为零的排列方式，则停止遍历；根据发送窗口分配算法的步骤3.2和3.3在调整数据流Fi的发送时间序列之后，根据冲突调整得到的抖动更新全局抖动值，并且执行发送窗口的分配过程，由于此时已经过冲突调整，发送窗口的分配过程则较为简单，只需创建新的发送窗口分配项并插入到发送窗口分配表中，并且合并前后新增的空闲分配项；经过上述分配可以在尽可能减少改变发送端口数据流“形状”的情况下，对每个数据流发送窗口进行分配，形成若干个分配项和空闲分配项，其中分配项是时间敏感类型分配的发送窗口，而空闲分配项则是留给非时间敏感类型的数据流。6.根据权利要求1所述的一种适用于电力通信网络的时间敏感网络流量调度方法，其特征在于：步骤S3中的发送窗口分配项偏向机制和发送窗口整体偏向机制具体如下：发送窗口分配项偏向机制：上述发送窗口分配流程可以满足各个数据流之间隔离发送的目的，但是这是在交换节点内部端口为不同类型流量划分出来的发送窗口，当考虑从发送节点到接收节点全部过程时，基于存在一些干扰部分，数据流未能Fi及时被交换节点的端口发送，首先对端到端各部分时延进行分析，各部分时延可分为传输时延Dpath、处理时延Dproc、排队时延Dqueu、以及发送时延Dtans；当Fi的某个数据帧到达交换节点时，经过传输时延Dpath、交换设备处理时延Dproc等过程，导致数据流Fi的数据帧错过对应的发送窗口，则该数据帧可能将会被顺延到下一个周期Ps中，这样则会带来较大的时延和抖动；当这种情况十分频繁时，也即是数据流Fi更加偏向一个新的发送窗口，在较为简单的网络环境下，Fi的发送窗口的改变与其他时间敏感的数据流发送窗口的冲突较低的情况下，我们可以考虑对发送窗口分配项进行偏向流程处理，触发发送窗口偏向机制的流程；对于数据流Fi来说，传输时延Dpath、交换设备处理时延Dproc等过程可能导致数据帧错过对应的发送窗口，但由于不确定时延影响，偏向时间可能小范围的抖动，因此将数据流Fi的偏向窗口判定的起始值定义为一段时间，预留出偏向时间的抖动情况；发送窗口整体偏向机制：在时间敏感数据流负载较大的情况下，可能会导致无法寻找到合适的空闲分配表，则会导致发送窗口更新失败，而一个完整的调度周期看作是一个环，这里假设每个环为交换节点的一个调度周期，调度周期内分为多个发送窗口，分别分配给时间敏感数据流F1、F2、F3，并且F1、F2、F3在交换节点中的发送窗口大小相同,剩余部分为非时延敏感数据流，在这种情况下，数据流F1、F2、F3都较难通过发送窗口分配项偏向机制来调整发送窗口除，非正好偏向到空闲区域，为了尽量减少排队时延Dqueu，需要将下对应节点的状态回拨到delay′时间前的状态，这也是发送窗口整体偏向机制的主要作用，由于发送窗口是循环进行的，这里可以使用delay′％Ts代替，这里的delay′可以表示为：delay′＝wi+Dpath+Dproc其中wi为数据流Fi的发送窗口长度，在这里F1、F2、F3的发送窗口长度需要保证后续数据帧在对应发送窗口开启时，已经到达等待队列当中。即wi≥transi+1，其中wi表示数据流Fi的发送窗口，而transi+1表示下一个数据流Fi+1的发送时间，可以根据公式适当对不同数据流发送窗口时间进行对齐处理，使其满足这一条件；经过上交换节点调度的数据流F1、F2、F3的数据帧将会以对应发送窗口大小的时间间隔到达下对应节点，此时下对应节点的调度状态已经调整到delay′状态，并且根据发送窗口长度调整调度窗口，那么F2、F3的数据帧也会在对应的发送窗口之前到达出端口队列中，并且及时的传输出去，对于多个交换节点需要进行相同的处理。7.根据权利要求1所述的一种适用于电力通信网络的时间敏感网络流量调度方法，其特征在于：步骤S4的具体流程如下：步骤S401：在调度开始时，获取当前允许发送窗口id，并且以此得到对应发送窗口时间和队列id；步骤S402：发送窗口时间一方面用于计算下一次更新发送窗口的时间，另一方面在查询到当前允许发送队列非空时，则需要判断是否可以发送，即发送时间小于窗口剩余时间，否则就会进入发送窗口分配项偏向机制；步骤S403：这里添加对窗口剩余时间的判断可以保证当前数据帧的发送不会影响下一个数据帧的发送，起到保护带的作用；步骤S404：在满足所有发送条件的情况下，当前数据帧则执行出队及交换节点的发送流程；步骤S405：最后在窗口计时器超时后，更新为下一项窗口，在开启发送窗口分配项偏向机制时，还需要考虑更新窗口分配；步骤S406：最终循环地按照窗口分配表执行数据流的调度。
说明书desc
技术领域本发明涉及时间敏感网络技术领域，特别是涉及一种适用于电力通信业务的时间敏感网络流量调度方法。背景技术随着电力通信网基础设施的不断迭代升级，通信网络资源的调度更加灵活，能够承载的业务类型也在不断增长。长期以来，一些对时延高度敏感的电力业务，难以实现业务状态的实时监控和资源的弹性调度，在故障状态下也很难实现网络影响最小化的快速恢复。本文主要关注于电力通信厂站内部网络，并且根据承载业务及管理环境形成了OT网络层、IT网络层，这样的分层结构。随着电力厂站内部网络互通互联，实现不同厂商设备，信息数据互通，智能化生产设备集中控制成为必然的趋势。由于电力厂站内部网络层级逐渐融合，IT网络数据和OT网络数据融合的多媒体信息传输成为电力通信业务必要的发展方向。在电力厂站内部网络互通互联的场景下，需要在现有网络上承载电力业务，提高全网的资源利用率，保障电力业务的实时性要求。为了解现有技术的发展状况，对已有的论文和专利进行了检索、比较和分析，筛选出如下与本发明相关度比较高的技术信息：技术方案1：专利号为CN202110313167.3的专利提出适用于时间敏感网络中多周期应用的门控调度方法，通过数据流发包周期和路由信息建立相关约束条件，从而确定数据流调度的周期和流量开始发送的时间，以及交换机中每条流的开门时间，生成门控调度表并更新；并且根据门控制调度表，对合适相邻的门开关事件进行合并，从而优化门开关事件数量，提升带宽利用率。技术方案2：专利号为CN202111200856.X的专利提出时间敏感网络门控列表实现方法及门控列表条目生成方法，根据数据流的源节点、宿节点、周期、包长、时延要求等信息，建立时延和抖动的约束条件建立原始门控列表，并将其拆分为指定数量的条目集合，从而获得指定目标的门控列表条目。技术方案3：专利号为CN202011611783.9的专利提出一种时间敏感网络门控整形资源调度方法，首先收集网络中所有时间敏感和非时间敏感的数据流相关信息，计算调度周期与相关数据流的发送序列，根据优先级进行排序后，进行发送时隙的调整，完成对时间敏感数据流的时隙窗口调度，空闲窗口分配给非时间敏感数据流，最终生成用于门控制的帧传输调度表。技术方案1通过确定流量开始发送时间，一定程度上了避免冲突，但并未考虑到数据流发送周期对调度的影响。技术方案2对于门控列表条目冲突的问题，建立了同一组数据流时隙不允许重叠 的约束和属于不同组的数据流的时隙不允许重叠且不允许相邻的约束。但没有考虑对时延和抖动具有更高要求的数据流受到其他数据流时隙调度的影响。技术方案3对于网络中的时间敏感数据流的发送时隙窗口分配中，为了保证高优先级数据流的优先调度，从多个维度进行优先级的排序，按照排序的结果分配发送窗口。对于后分配发送时隙窗口的数据流来说，如果发生冲突则寻找最近合适的空闲窗口进行分配。这种方法优先保障了高优先级数据流的传输的时延和抖动。但是并不是全局最优的结果。本发明通过基于回溯的发送窗口分配算法，根据数据流优先级权重计算并选择全局最小抖动的数据流发送窗口分配方式。然后通过发送窗口偏向机制来优化数据帧错过发送窗口对时延稳定性的影响。发明内容本发明的目的在于提供一种适用于电力通信业务的时间敏感网络流量调度方法，以解决上述背景技术中提出的问题。为实现上述目的，本发明提供如下技术方案：一种适用于电力通信网络的时间敏感网络流量调度方法，包括以下步骤：步骤S1、资源计算：电力通信业务环境下的数据流通常会有特定的特征，其类型也相较固定，继而会保持流量平稳性，基于包含的轮询类型业务、周期性检测类型业务、实时同步类型业务，进行多级队列窗口调度资源计算，优先保障这类周期型的时间敏感数据流；步骤S2、发送窗口分配：根据步骤S1的资源计算方法可以产生每个数据流在一个调度周期内发送时间序列，以全局最小抖动的分配方式为目标，生成发送窗口分配表，根据发生窗口分配表的数据流的发送序列，实现不同数据流的分配发送；步骤S3、发送窗口偏向机制：采用发送窗口分配项偏向机制和发送窗口整体偏向机制，对多级队列窗口调度方法进行优化，降低数据帧调度过程中错过发送窗口造成的排队时延；步骤S4、数据流调度流程：对数据流进行调度主要分为资源初始化阶段和数据流调度阶段，在资源初始化阶段中，对于每个交换节点的出端口传输的数据流，根据预留的相关参数，进行资源初始化，得到每个数据流的发送时间序列，然后通过发送窗口分配算法分配数据流的发送窗口，接下来进入数据流的调度流程，对到达的数据流进行调度发送。优选的，步骤S1的具体方法如下：根据上述分析，可以对电力通信网络中周期型时间敏感数据流进行建模，对于时间敏感数据流Fi，发包周期记为Ti，数据帧长度为li，传输数据的信道带宽记为R。则该数据流中一个数据帧在交换节点中通信链路上发送所需的时间可以表示为：交换节点分配发送窗口的调度周期定义为从该端口发出的所有时间敏感数据流的数据帧发送周期的最小公倍数，表示为：Ts＝lcm 那么在一个调度周期内，数据流Fi需要发送的数据帧数量可以表示为：根据数据流的发包周期和调度周期内的发包数量。可计算调度周期内的发送时间序列为：0,Ti,2Ti,3Ti…Ti 另外为了保证数据帧可以在指定发送窗口成功传输，数据帧最终的发送窗口长度要大于发送时间，表示为：其中wi表示发送窗口长度，slot保护间隔单位为Bytes，最后结果向上取整，避免交换节点在执行非整数大小窗口长度切换时存在的误差影响。优选的，步骤S2的具体操作方法基于数据流进行定义分配对象：定义1：Window对象，用来表示数据流Fi的数据帧发送时间序列的相关参数，因此数据流Fi的对应的发送时间序列可以表示为一个Window列表；定义2：分配项Item对象，用于表示经过冲突调整的发送窗口分配项，最终的发送窗口分配表将包含一系列的分配项表示，并以链表的结构保存记为Link；基于上述的定义区分，在解决数据流Fi和其他数据流发送时间的冲突时，必然需要调整Fi的发送时间的偏移量，在调整Fi发送时间的同时可能会改变发送间隔从而产生时延抖动，通过回溯算法尝试不同发送时间序列的排列方式，找到全局抖动最小值，另外根据数据流的优先级赋予数据流权重，在计算全局抖动时，需要考虑每个数据流具有的权重值。优选的，回溯算法具体为：1)初始化窗口分配表，创建一个空闲分配项Item， Item.length＝Ts,Item.start＝0,Item.end＝Ts，基于权重的全局抖动值weightedJitterValue＝0；2)IF数据流全部分配完成；IF weightedJitterValue是最小值；保存发送窗口分配表Return；3)FOR i＝1…n；3.1)IF Fi已经分配,THEN返回第3步；3.2)解决Fi与发送窗口分配表冲突，调整Fi发送时间序列，更新全局抖动值；3.3)根据调整后的Fi发送时间序列，执行分配，更新发送窗口分配表；3.4)递归执行第2步；3.5)Fi设未分配状态，恢复全局抖动值，恢复Fi的发送时间序列，恢复发送窗口分配表；这里的抖动为发送间隔抖动，根据下面公式可得全局抖动值：其中wi表示数据流Fi的权重。intervali,j和intervali,k表示数据流 Fi当前周期内任意两个发送间隔，经过上述的发送窗口分配过程，遍历所有的数据流分配方式，为了减少算法的时间复杂度，在分配算法找到第一种可以使基于数据流权重的全局抖动值为零时，就停止继续遍历，另外发送窗口分配算法中，在步骤3.3执行分配之前，需要在步骤3.2中判断当前数据流的发送时间序列是否与已经分配的发送窗口冲突，如果冲突则须要对发送时间序列的偏移量进行调整。优选的，发生冲突时，发送时间序列的偏移量进行调整的方法如下：a)FOR j＝1…n；a.1)Fi在一个调度周期中的第j个数据帧发送时间: windowj；a.2)在Link链表中查找前后最近合适的窗口偏移量，记为数组offset；a.3)FOR k＝0,1；a.3.1)Fi的所有发送时间序列调整offstk，并根据Link 链表找到前后最近最合适的窗口偏移量item_offstk,对应发送时间序列调整item_offstk+offstk；a.3.2)计算数据流Fi的抖动值；a.4)比较两次调整窗口的抖动值，保留抖动值较小的发送时间调整结果，保存以windowj为主调整的发送时间的抖动值b)比较步骤1结束后得到的n种调方式，将抖动值最小的作为数据流Fi发送时间序列调整方式并保留。返回抖动值；其中步骤a.2和步骤a.3.1中的冲突调整有所不同，在步骤a.2 中，以数据帧j的发送时间windowj为主，然后整体调整Fi的发送时间，其调整的方向有两个方向：向前调整和向后调整，两者之间都有可能找到Fi抖动为零的排列方式，因此都需要考虑，而在步骤a.3.1则只是在整体调整Fi之后进行局部调整，向前或者向后寻找到最近能满足发送时间的空闲窗口即可，数据流Fi在一个调度周期内的每一个数据帧进行整体的调整之后，可以得到n种排列方式，选择抖动值最小的一种即可，为了减小遍历次数，在进行过程中如果可以得到一种抖动为零的排列方式，则停止遍历；根据发送窗口分配算法的步骤3.2和3.3在调整数据流Fi的发送时间序列之后，根据冲突调整得到的抖动更新全局抖动值，并且执行发送窗口的分配过程，由于此时已经过冲突调整，发送窗口的分配过程则较为简单，只需创建新的发送窗口分配项并插入到发送窗口分配表中，并且合并前后新增的空闲分配项；经过上述分配可以在尽可能减少改变发送端口数据流“形状”的情况下，对每个数据流发送窗口进行分配，形成若干个分配项和空闲分配项，其中分配项是时间敏感类型分配的发送窗口，而空闲分配项则是留给非时间敏感类型的数据流。优选的，步骤S3中的发送窗口分配项偏向机制和发送窗口整体偏向机制具体如下：发送窗口分配项偏向机制：上述发送窗口分配流程可以满足各个数据流之间隔离发送的目的，但是这是在交换节点内部端口为不同类型流量划分出来的发送窗口，当考虑从发送节点到接收节点全部过程时，基于存在一些干扰部分，数据流未能Fi及时被交换节点的端口发送，首先对端到端各部分时延进行分析，各部分时延可分为传输时延 Dpath、处理时延Dproc、排队时延Dqueu、以及发送时延Dtans；当Fi的某个数据帧到达交换节点时，经过传输时延Dpath、交换设备处理时延Dproc等过程，导致数据流Fi的数据帧错过对应的发送窗口，则该数据帧可能将会被顺延到下一个周期Ps中，这样则会带来较大的时延和抖动；当这种情况十分频繁时，也即是数据流Fi更加偏向一个新的发送窗口，在较为简单的网络环境下，Fi的发送窗口的改变与其他时间敏感的数据流发送窗口的冲突较低的情况下，我们可以考虑对发送窗口分配项进行偏向流程处理，触发发送窗口偏向机制的流程；对于数据流Fi来说，传输时延Dpath、交换设备处理时延Dproc等过程可能导致数据帧错过对应的发送窗口，但由于不确定时延影响，偏向时间可能小范围的抖动，因此将数据流Fi的偏向窗口判定的起始值定义为一段时间，预留出偏向时间的抖动情况；发送窗口整体偏向机制：在时间敏感数据流负载较大的情况下，可能会导致无法寻找到合适的空闲分配表，则会导致发送窗口更新失败，而一个完整的调度周期看作是一个环，这里假设每个环为交换节点的一个调度周期，调度周期内分为多个发送窗口，分别分配给时间敏感数据流F1、F2、F3，并且F1、F2、F3在交换节点中的发送窗口大小相同,剩余部分为非时延敏感数据流，在这种情况下，数据流F1、 F2、F3都较难通过发送窗口分配项偏向机制来调整发送窗口除，非正好偏向到空闲区域，为了尽量减少排队时延Dqueu，需要将下对应节点的状态回拨到delay′时间前的状态，这也是发送窗口整体偏向机制的主要作用，由于发送窗口是循环进行的，这里可以使用delay′％Ts代替，这里的delay′可以表示为：delay′＝wi+Dpath+Dproc 其中wi为数据流Fi的发送窗口长度，在这里F1、F2、F3的发送窗口长度需要保证后续数据帧在对应发送窗口开启时，已经到达等待队列当中。即wi≥transi+1，其中wi表示数据流Fi的发送窗口，而 transi+1表示下一个数据流Fi+1的发送时间，可以根据公式适当对不同数据流发送窗口时间进行对齐处理，使其满足这一条件；经过上交换节点调度的数据流F1、F2、F3的数据帧将会以对应发送窗口大小的时间间隔到达下对应节点，此时下对应节点的调度状态已经调整到delay′状态，并且根据发送窗口长度调整调度窗口，那么 F2、F3的数据帧也会在对应的发送窗口之前到达出端口队列中，并且及时的传输出去，对于多个交换节点需要进行相同的处理。优选的，步骤S4的具体流程如下：步骤S401：在调度开始时，获取当前允许发送窗口id，并且以此得到对应发送窗口时间和队列id；步骤S402：发送窗口时间一方面用于计算下一次更新发送窗口的时间，另一方面在查询到当前允许发送队列非空时，则需要判断是否可以发送，即发送时间小于窗口剩余时间，否则就会进入发送窗口分配项偏向机制；步骤S403：这里添加对窗口剩余时间的判断可以保证当前数据帧的发送不会影响下一个数据帧的发送，起到保护带的作用；步骤S404：在满足所有发送条件的情况下，当前数据帧则执行出队及交换节点的发送流程；步骤S405：最后在窗口计时器超时后，更新为下一项窗口，在开启发送窗口分配项偏向机制时，还需要考虑更新窗口分配；步骤S406：最终循环地按照窗口分配表执行数据流的调度。与现有技术相比，本发明的有益效果是：本发明主要对电力通信业务网络中时间敏感数据流的调度方法进行研究，并且基于TAS的调度方式提出多级队列窗口调度方法，通过基于回溯的发送窗口分配算法，根据数据流优先级权重计算并选择全局最小抖动的数据流发送窗口分配方式。然后通过发送窗口偏向机制来优化数据帧错过发送窗口对时延稳定性的影响附图说明图1为本发明的发送窗口分配项偏向机制触发流程；图2为本发明的发送窗口分配项偏向机制处理流程；图3为本发明的发送窗口整体偏向示意；图4为本发明的数据流调度整体流程。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。实施例请参阅图1-4，本发明提供一种技术方案：一种适用于电力通信网络的时间敏感网络流量调度方法，包括以下步骤：步骤S1、资源计算：电力通信业务环境下的数据流通常会有特定的特征，其类型也相较固定，继而会保持流量平稳性，基于包含的轮询类型业务、周期性检测类型业务、实时同步类型业务，进行多级队列窗口调度资源计算，优先保障这类周期型的时间敏感数据流；步骤S2、发送窗口分配：根据步骤S1的资源计算方法可以产生每个数据流在一个调度周期内发送时间序列，以全局最小抖动的分配方式为目标，生成发送窗口分配表，根据发生窗口分配表的数据流的发送序列，实现不同数据流的分配发送；步骤S3、发送窗口偏向机制：采用发送窗口分配项偏向机制和发送窗口整体偏向机制，对多级队列窗口调度方法进行优化，降低数据帧调度过程中错过发送窗口造成的排队时延；步骤S4、数据流调度流程：对数据流进行调度主要分为资源初始化阶段和数据流调度阶段，在资源初始化阶段中，对于每个交换节点的出端口传输的数据流，根据预留的相关参数，进行资源初始化，得到每个数据流的发送时间序列，然后通过发送窗口分配算法分配数据流的发送窗口，接下来进入数据流的调度流程，对到达的数据流进行调度发送。具体而言，步骤S1的具体方法如下：根据上述分析，可以对电力通信网络中周期型时间敏感数据流进行建模，对于时间敏感数据流Fi，发包周期记为Ti，数据帧长度为li，传输数据的信道带宽记为R。则该数据流中一个数据帧在交换节点中通信链路上发送所需的时间可以表示为：交换节点分配发送窗口的调度周期定义为从该端口发出的所有时间敏感数据流的数据帧发送周期的最小公倍数，表示为：Ts＝lcm 那么在一个调度周期内，数据流Fi需要发送的数据帧数量可以表示为：根据数据流的发包周期和调度周期内的发包数量。可计算调度周期内的发送时间序列为：0,Ti,2Ti,3Ti…Ti 另外为了保证数据帧可以在指定发送窗口成功传输，数据帧最终的发送窗口长度要大于发送时间，表示为：其中wi表示发送窗口长度，slot保护间隔单位为Bytes，最后结果向上取整，避免交换节点在执行非整数大小窗口长度切换时存在的误差影响。具体而言，步骤S2的具体操作方法基于数据流进行定义分配对象：定义1：Window对象，用来表示数据流Fi的数据帧发送时间序列的相关参数，因此数据流Fi的对应的发送时间序列可以表示为一个 Window列表，如表1所示：属性说明flowId数据流idindex一个调度周期内的发送序号start该发送时间的起始值end该发送时间的结束值offset调整发送时间的偏移量 表1Window属性说明定义2：分配项Item对象，用于表示经过冲突调整的发送窗口分配项，最终的发送窗口分配表将包含一系列的分配项表示，并以链表的结构保存记为Link，如表2所示：表2Item属性说明基于上述的定义区分，在解决数据流Fi和其他数据流发送时间的冲突时，必然需要调整Fi的发送时间的偏移量，在调整Fi发送时间的同时可能会改变发送间隔从而产生时延抖动，通过回溯算法尝试不同发送时间序列的排列方式，找到全局抖动最小值，另外根据数据流的优先级赋予数据流权重，在计算全局抖动时，需要考虑每个数据流具有的权重值。具体而言，回溯算法如表3：表3发送窗口分配算法表3里的抖动为发送间隔抖动，根据下面公式可得全局抖动值：其中wi表示数据流Fi的权重。intervali,j和intervali,k表示数据流 Fi当前周期内任意两个发送间隔，经过上述的发送窗口分配过程，遍历所有的数据流分配方式，为了减少算法的时间复杂度，在分配算法找到第一种可以使基于数据流权重的全局抖动值为零时，就停止继续遍历，另外发送窗口分配算法中，在步骤3.3执行分配之前，需要在步骤3.2中判断当前数据流的发送时间序列是否与已经分配的发送窗口冲突，如果冲突则须要对发送时间序列的偏移量进行调整。具体而言，发生冲突时，发送时间序列的偏移量进行调整的方法如表4所示：表4冲突调整算法表4中步骤1.2和步骤1.3.1中的冲突调整有所不同，在步骤 1.2中，以数据帧j的发送时间windowj为主，然后整体调整Fi的发送时间，其调整的方向有两个方向：向前调整和向后调整，两者之间都有可能找到Fi抖动为零的排列方式，因此都需要考虑，而在步骤1.3.1则只是在整体调整Fi之后进行局部调整，向前或者向后寻找到最近能满足发送时间的空闲窗口即可，数据流Fi在一个调度周期内的每一个数据帧进行整体的调整之后，可以得到n种排列方式，选择抖动值最小的一种即可，为了减小遍历次数，在进行过程中如果可以得到一种抖动为零的排列方式，则停止遍历；根据发送窗口分配算法的步骤3.2和3.3在调整数据流Fi的发送时间序列之后，根据冲突调整得到的抖动更新全局抖动值，并且执行发送窗口的分配过程，由于此时已经过冲突调整，发送窗口的分配过程则较为简单，只需创建新的发送窗口分配项并插入到发送窗口分配表中，并且合并前后新增的空闲分配项；经过上述分配可以在尽可能减少改变发送端口数据流“形状”的情况下，对每个数据流发送窗口进行分配，形成若干个分配项和空闲分配项，其中分配项是时间敏感类型分配的发送窗口，而空闲分配项则是留给非时间敏感类型的数据流。具体而言，步骤S3中的发送窗口分配项偏向机制和发送窗口整体偏向机制具体如下：发送窗口分配项偏向机制：上述发送窗口分配流程可以满足各个数据流之间隔离发送的目的，但是这是在交换节点内部端口为不同类型流量划分出来的发送窗口，当考虑从发送节点到接收节点全部过程时，基于存在一些干扰部分，数据流未能Fi及时被交换节点的端口发送，首先对端到端各部分时延进行分析，各部分时延可分为传输时延 Dpath、处理时延Dproc、排队时延Dqueu、以及发送时延Dtans；当Fi的某个数据帧到达交换节点时，经过传输时延Dpath、交换设备处理时延Dproc等过程，导致数据流Fi的数据帧错过对应的发送窗口，则该数据帧可能将会被顺延到下一个周期Ps中，这样则会带来较大的时延和抖动；当这种情况十分频繁时，也即是数据流Fi更加偏向一个新的发送窗口，在较为简单的网络环境下，Fi的发送窗口的改变与其他时间敏感的数据流发送窗口的冲突较低的情况下，我们可以考虑对发送窗口分配项进行偏向流程处理，触发发送窗口偏向机制的流程，如图1所示，具体的发送窗口分配项偏向机制处理流程可由图2所示；对于数据流Fi来说，传输时延Dpath、交换设备处理时延Dproc等过程可能导致数据帧错过对应的发送窗口，但由于不确定时延影响，偏向时间可能小范围的抖动，因此将数据流Fi的偏向窗口判定的起始值定义为一段时间，预留出偏向时间的抖动情况；发送窗口整体偏向机制：在时间敏感数据流负载较大的情况下，可能会导致无法寻找到合适的空闲分配表，则会导致发送窗口更新失败，而一个完整的调度周期看作是一个环，如图3中的所示，这里假设图中的环形图为交换节点的一个调度周期，调度周期内分为多个发送窗口，分别分配给时间敏感数据流F1、F2、F3，并且F1、F2、 F3在交换节点中的发送窗口大小相同,剩余部分为非时延敏感数据流，在这种情况下，数据流F1、F2、F3都较难通过发送窗口分配项偏向机制来调整发送窗口除，非正好偏向到空闲区域，图3中和分别为两个交换节点a和b根据统一的资源预留得到的发送窗口分配示意图，为了尽量减少排队时延Dqueu，需要将b节点的分配表状态调整到的状态，即将的状态回拨到delay′时间前的状态，这也是发送窗口整体偏向机制的主要作用，由于发送窗口是循环进行的，这里可以使用delay′％Ts代替，这里的delay′可以表示为：delay′＝wi+Dpath+Dproc 其中wi为数据流Fi的发送窗口长度，在这里F1、F2、F3的发送窗口长度需要保证后续数据帧在对应发送窗口开启时，已经到达等待队列当中。即wi≥transi+1，其中wi表示数据流Fi的发送窗口，而 transi+1表示下一个数据流Fi+1的发送时间，可以根据公式适当对不同数据流发送窗口时间进行对齐处理，使其满足这一条件；经过上交换节点调度的数据流F1、F2、F3的数据帧将会以对应发送窗口大小的时间间隔到达下对应节点，此时下对应节点的调度状态已经调整到delay′状态，并且根据发送窗口长度调整调度窗口，那么 F2、F3的数据帧也会在对应的发送窗口之前到达出端口队列中，并且及时的传输出去，对于多个交换节点需要进行相同的处理。具体而言，步骤S4的具体流程如下：步骤S401：在调度开始时，获取当前允许发送窗口id，并且以此得到对应发送窗口时间和队列id；步骤S402：发送窗口时间一方面用于计算下一次更新发送窗口的时间，另一方面在查询到当前允许发送队列非空时，则需要判断是否可以发送，即发送时间小于窗口剩余时间，否则就会进入发送窗口分配项偏向机制；步骤S403：这里添加对窗口剩余时间的判断可以保证当前数据帧的发送不会影响下一个数据帧的发送，起到保护带的作用；步骤S404：在满足所有发送条件的情况下，当前数据帧则执行出队及交换节点的发送流程；步骤S405：最后在窗口计时器超时后，更新为下一项窗口，在开启发送窗口分配项偏向机制时，还需要考虑更新窗口分配；步骤S406：最终循环地按照窗口分配表执行数据流的调度。。尽管已经示出和描述了本发明的实施例，对于本领域的普通技术人员而言，可以理解在不脱离本发明的原理和精神的情况下可以对这些实施例进行多种变化、修改、替换和变型，本发明的范围由所附权利要求及其等同物限定。
