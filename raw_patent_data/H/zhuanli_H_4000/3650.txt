标题title
自动驾驶软件镜像部署方法、装置、电子设备和可读介质
摘要abst
本公开的实施例公开了自动驾驶软件镜像部署方法、装置、电子设备和可读介质。该方法的一具体实施方式包括：响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请；响应于接收到主服务端返回的访问申请通过信息，从主服务端获取目标编译环境镜像容器文件；启动目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包；对自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件；将自动驾驶软件镜像容器文件发送至主服务端以完成自动驾驶软件镜像部署。该实施方式可以提高自动驾驶软件镜像部署的效率。
权利要求书clms
1.一种自动驾驶软件镜像部署方法，包括：响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请；响应于接收到所述主服务端返回的访问申请通过信息，从所述主服务端获取目标编译环境镜像容器文件，其中，所述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号；启动所述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于所述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包；对所述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件；将所述自动驾驶软件镜像容器文件发送至所述主服务端以完成自动驾驶软件镜像部署。2.根据权利要求1所述的方法，其中，所述方法还包括：对所述自动驾驶软件镜像容器文件和所述目标编译环境镜像容器文件进行存储，其中，所述自动驾驶软件镜像容器文件还包括自动驾驶软件版本号。3.根据权利要求1所述的方法，其中，所述基于所述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包，包括：从所述目标编译环境镜像容器文件包括的目标软件传输端口号对应的端口，获取与所述目标软件数据卷对应的自动驾驶软件包。4.根据权利要求1所述的方法，其中，所述对所述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件，包括：安装用于编译的镜像容器编译工具链；在所述目标编译环境容器的容器环境下，利用所述镜像容器编译工具链，对所述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件。5.根据权利要求1所述的方法，其中，所述方法还包括：响应接收到自动驾驶软件升级信息，确定与所述自动驾驶软件升级信息包括的软件标识组中各个软件标识对应的软件版本号，得到软件版本号集合，其中，所述软件升级信息还包括软件升级版本号集合；将所述软件升级版本号集合中与所述软件版本号集合中每个软件版本号相匹配的软件升级版本号确定为目标软件升级版本号，得到目标软件升级版本号组；从软件管理服务端获取与所述目标软件升级版本号组中各个目标软件升级版本号对应的目标软件镜像环境容器组；基于所述目标软件镜像环境容器组，对与所述目标软件升级版本号组中每个目标软件升级版本号对应的自动驾驶软件进行升级操作以得到升级后自动驾驶软件，得到升级后自动驾驶软件组。6.根据权利要求5所述的方法，其中，所述方法还包括：确定所述升级后自动驾驶软件组中每个升级后自动驾驶软件的升级状态和程序运行状态以生成升级结果，得到升级结果集；对所述升级结果集和所述目标软件升级版本号组作为升级记录数据进行存储。7.一种自动驾驶软件镜像部署装置，包括：第一发送单元，被配置成响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请；第一获取单元，被配置成响应于接收到所述主服务端返回的访问申请通过信息，从所述主服务端获取目标编译环境镜像容器文件，其中，所述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号；启动以及获取单元，被配置成启动所述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于所述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包；编译单元，被配置成对所述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件；第二发送单元，被配置成将所述自动驾驶软件镜像容器文件发送至所述主服务端以完成自动驾驶软件镜像部署。8.一种电子设备，包括：一个或多个处理器；存储装置，其上存储有一个或多个程序，当所述一个或多个程序被所述一个或多个处理器执行，使得所述一个或多个处理器实现如权利要求1-6中任一所述的方法。9.一种计算机可读介质，其上存储有计算机程序，其中，所述程序被处理器执行时实现如权利要求1-6中任一所述的方法。10.一种计算机程序产品，包括计算机程序，所述计算机程序在被处理器执行时实现根据权利要求1-6中任一项所述的方法。
说明书desc
技术领域本公开的实施例涉及计算机技术领域，具体涉及自动驾驶软件镜像部署方法、装置、电子设备和可读介质。背景技术自动驾驶软件镜像部署，是部署自动驾驶软件编译环境的一项技术。目前，在进行自动驾驶软件镜像部署时，通常采用的方式为：首先，通过人工操作子网络节点的主机与主节点建立网络连接，以供拷贝自动驾驶软件镜像。然后，根据拷贝的自动驾驶软件镜像部署编译环境。然而，发明人发现，当采用上述方式进行自动驾驶软件镜像部署时，经常会存在如下技术问题：第一，未对不同子网络节点的编译环境镜像进行集中管控，若批量子网络节点需要进行自动驾驶软件镜像部署，会存在人工操作时间点不同的情况，使得对不同的网络节点，不能同步的部署编译环境，由此，导致自动驾驶软件镜像部署的效率降低；第二，未对网络节点的不同平台的编辑环境进行隔离，在进行自动驾驶软件镜像部署时，需要对所有平台对应的编译环境进行重新部署，从而，导致需要占用大量计算资源，同时也降低自动驾驶软件镜像部署的效率。该背景技术部分中所公开的以上信息仅用于增强对本发明构思的背景的理解，并因此，其可包含并不形成本国的本领域普通技术人员已知的现有技术的信息。发明内容本公开的内容部分用于以简要的形式介绍构思，这些构思将在后面的具体实施方式部分被详细描述。本公开的内容部分并不旨在标识要求保护的技术方案的关键特征或必要特征，也不旨在用于限制所要求的保护的技术方案的范围。本公开的一些实施例提出了自动驾驶软件镜像部署方法、装置、电子设备和可读介质，来解决以上背景技术部分提到的技术问题中的一项或多项。第一方面，本公开的一些实施例提供了一种自动驾驶软件镜像部署方法，该方法包括：响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请；响应于接收到上述主服务端返回的访问申请通过信息，从上述主服务端获取目标编译环境镜像容器文件，其中，上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号；启动上述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包；对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件；将上述自动驾驶软件镜像容器文件发送至上述主服务端以完成自动驾驶软件镜像部署。第二方面，本公开的一些实施例提供了一种自动驾驶软件镜像部署装置，该装置包括：第一发送单元，被配置成响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请；第一获取单元，被配置成响应于接收到上述主服务端返回的访问申请通过信息，从上述主服务端获取目标编译环境镜像容器文件，其中，上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号；启动以及获取单元，被配置成启动上述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包；编译单元，被配置成对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件；第二发送单元，被配置成将上述自动驾驶软件镜像容器文件发送至上述主服务端以完成自动驾驶软件镜像部署。第三方面，本公开的一些实施例提供了一种电子设备，包括：一个或多个处理器；存储装置，其上存储有一个或多个程序，当一个或多个程序被一个或多个处理器执行，使得一个或多个处理器实现上述第一方面任一实现方式所描述的方法。第四方面，本公开的一些实施例提供了一种计算机可读介质，其上存储有计算机程序，其中，程序被处理器执行时实现上述第一方面任一实现方式所描述的方法。第五方面，本公开的一些实施例提供了一种计算机程序产品，包括计算机程序，计算机程序在被处理器执行时实现上述第一方面任一实现方式所描述的方法。本公开的上述各个实施例具有如下有益效果：通过本公开的一些实施例的自动驾驶软件镜像部署方法，可以提高自动驾驶软件镜像部署的效率。具体来说，造成自动驾驶软件镜像部署的效率降低的原因在于：未对不同子网络节点的编译环境镜像进行集中管控，若批量子网络节点需要进行自动驾驶软件镜像部署，会存在人工操作时间点不同的情况，使得对不同的网络节点，不能同步的部署编译环境。基于此，本公开的一些实施例的自动驾驶软件镜像部署方法，首先，响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请。这里，通过引入主服务端，可以用于对自动驾驶软件镜像进行集中管控。然后，响应于接收到上述主服务端返回的访问申请通过信息，从上述主服务端获取目标编译环境镜像容器文件，其中，上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号。这里，所有子网络节点均可通过获取目标编译环境镜像容器文件，以用于进行自动驾驶软件镜像部署。接着，启动上述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包。通过启动目标编译环境镜像容器以及进入目标编译环境容器的容器环境，可以避免破坏当前子网络节点的其它环境。之后，对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件。由此，可以完成当前网络节点的自动驾驶软件镜像部署。最后，将上述自动驾驶软件镜像容器文件发送至上述主服务端以完成自动驾驶软件镜像部署。这里，通过再次将自动驾驶软件镜像容器文件发送至上述主服务端，可以供主服务端对各个网络节点自动驾驶软件镜像部署进行进度把控。使得可以进一步管控各个网络节点。从而，可以在批量子网络节点需要进行自动驾驶软件镜像部署时，同时对不同的网络节点，进行同步的部署编译环境。进而，提高自动驾驶软件镜像部署的效率。附图说明结合附图并参考以下具体实施方式，本公开各实施例的上述和其他特征、优点及方面将变得更加明显。贯穿附图中，相同或相似的附图标记表示相同或相似的元素。应当理解附图是示意性的，元件和元素不一定按照比例绘制。图1是根据本公开的自动驾驶软件镜像部署方法的一些实施例的流程图；图2是根据本公开的自动驾驶软件镜像部署装置的一些实施例的结构示意图；图3是适于用来实现本公开的一些实施例的电子设备的结构示意图。具体实施方式下面将参照附图更详细地描述本公开的实施例。虽然附图中显示了本公开的某些实施例，然而应当理解的是，本公开可以通过各种形式来实现，而且不应该被解释为限于这里阐述的实施例。相反，提供这些实施例是为了更加透彻和完整地理解本公开。应当理解的是，本公开的附图及实施例仅用于示例性作用，并非用于限制本公开的保护范围。另外还需要说明的是，为了便于描述，附图中仅示出了与有关发明相关的部分。在不冲突的情况下，本公开中的实施例及实施例中的特征可以相互组合。需要注意，本公开中提及的“第一”、“第二”等概念仅用于对不同的装置、模块或单元进行区分，并非用于限定这些装置、模块或单元所执行的功能的顺序或者相互依存关系。需要注意，本公开中提及的“一个”、“多个”的修饰是示意性而非限制性的，本领域技术人员应当理解，除非在上下文另有明确指出，否则应该理解为“一个或多个”。本公开实施方式中的多个装置之间所交互的消息或者信息的名称仅用于说明性的目的，而并不是用于对这些消息或信息的范围进行限制。下面将参考附图并结合实施例来详细说明本公开。图1示出了根据本公开的自动驾驶软件镜像部署方法的一些实施例的流程100。该自动驾驶软件镜像部署方法的流程100，包括以下步骤：步骤101，响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请。在一些实施例中，自动驾驶软件镜像部署方法的执行主体可以响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请。其中，自动驾驶软件镜像部署指令可以是部署用于编译自动驾驶软件镜像的指令。访问申请可以用于向主服务端发出访问授权请求，以供可以从主服务端获取数据。另外，自动驾驶软件镜像部署指令可以包括自动驾驶软件镜像版本号。上述自动驾驶软件镜像版本号可以用于表征所需部署的自动驾驶软件镜像的版本。实践中，自动驾驶软件镜像部署指令可以是操作当前网络节点的人工通过当前网络节点的物理主机发出的。因此，对于不同的网络节点，可以实现自由部署。自动驾驶软件镜像部署指令还可以是操作主服务端发出的。使得可以同时对所有的网络节点进行同步部署。从而，可以用于提高自动驾驶软件镜像部署的效率。可选的，上述执行主体在向主服务端发出访问申请之前，还可以确定当前网络节点的自动驾驶软件镜像版本是否与上述自动驾驶软件镜像部署指令包括的自动驾驶软件镜像版本号相同。若不同，则可以向主服务端发出访问申请以供自动驾驶软件镜像部署。若相同，则无需再次部署。从而，可以减少对主服务端的资源占用。进而，可以进一步提高自动驾驶软件镜像部署的效率降低。作为示例，主服务端可以是预先搭建的Harbor服务端程序。步骤102，响应于接收到主服务端返回的访问申请通过信息，从主服务端获取目标编译环境镜像容器文件。在一些实施例中，上述执行主体可以响应于接收到上述主服务端返回的访问申请通过信息，从上述主服务端获取目标编译环境镜像容器文件。其中，上述目标编译环境镜像容器文件可以包括目标软件数据卷和目标软件传输端口号。访问申请能通过信息可以表征上述执行主体与上述主服务端通信连接成功。可以从上述主服务端获取与上述自动驾驶软件镜像版本号对应的目标编译环境镜像容器文件。上述目标软件数据卷和上述目标软件传输端口号，可以用于从上述主服务端获取目标编译环境镜像容器文件。步骤103，启动目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包。在一些实施例中，上述执行主体可以启动上述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包。其中，可以通过预设的启动命令，启动上述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境。作为示例，启动命令可以是docker的命令。在一些实施例的一些可选的实现方式中，上述执行主体基于上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包，可以包括以下步骤：从上述目标编译环境镜像容器文件包括目标软件传输端口号对应的端口，获取与上述目标软件数据卷对应的自动驾驶软件包。其中，目标软件传输端口号可以用于唯一标识一个端口。目标软件数据卷可以包括自动驾驶软件包在主服务端的路径。自动驾驶软件包可以是自动驾驶软件编译环境镜像，也可以是自动驾驶应用软件。步骤104，对自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件。在一些实施例中，上述执行主体可以对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件。在一些实施例的一些可选的实现方式中，上述执行主体对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件，可以包括以下步骤：第一步，安装用于编译的镜像容器编译工具链。其中，可以通过预设的安装命令，安装用于编译的镜像容器编译工具链。这里，用于编译的镜像容器编译工具链可以是预先设置的，也可以是从上述主服务端获取的。第二步，在上述目标编译环境容器的容器环境下，利用上述镜像容器编译工具链，对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件。其中，镜像容器编译工具链可以是用于编译，镜像容器的工具链。步骤105，将自动驾驶软件镜像容器文件发送至主服务端以完成自动驾驶软件镜像部署。在一些实施例中，上述执行主体可以将上述自动驾驶软件镜像容器文件发送至上述主服务端以完成自动驾驶软件镜像部署。其中，通过发送，可以对主服务端反馈自动驾驶软件镜像部署进度以及结果。从而，可以便于主服务端对不同子网络节点的编译环境镜像的集中管控。从而，有利于同步的部署编译环境。进而，可以用于提高自动驾驶软件镜像部署的效率降低。可选的，上述执行主体还可以执行如下步骤：第一步，响应接收到自动驾驶软件升级信息，确定与上述自动驾驶软件升级信息包括的软件标识组中各个软件标识对应的软件版本号，得到软件版本号集合。其中，上述软件升级信息还包括软件升级版本号集合。自动驾驶软件升级信息也可以是由上述主服务端发出的，用于升级各个网络节点的自动驾驶软件。自动驾驶软件升级信息包括的软件标识组中的各个软件标识可以是需要升级的软件的唯一标识。可以将当前网络节点中各个软件的版本号中与软件标识表征同一软件的版本号确定为软件版本号，得到软件版本号集合。第二步，将上述软件升级版本号集合中与上述软件版本号集合中每个软件版本号相匹配的软件升级版本号确定为目标软件升级版本号，得到目标软件升级版本号组。其中，相匹配可以是软件版本号与软件升级版本号表征同一软件、且软件升级版本号大于软件版本号。第三步，从软件管理服务端获取与上述目标软件升级版本号组中各个目标软件升级版本号对应的目标软件镜像环境容器组。其中，软件管理服务端可以是自动管理软件的服务端。作为示例，软件管理服务端可以是k8s容器集群管理系统。第四步，基于上述目标软件镜像环境容器组，对与上述目标软件升级版本号组中每个目标软件升级版本号对应的自动驾驶软件进行升级操作以得到升级后自动驾驶软件，得到升级后自动驾驶软件组。在一些实施例的一些可选的实现方式中，上述执行主体基于上述目标软件镜像环境容器组，对与上述目标软件升级版本号组中每个目标软件升级版本号对应的自动驾驶软件进行升级操作以得到升级后自动驾驶软件，包括：第一步，启动上述目标软件镜像环境容器组中与目标软件升级版本号对应的目标软件镜像环境容器，作为目标软件升级环境。其中，上述目标软件镜像环境容器组中的每个目标软件镜像环境容器包括目标软镜像。可以通过上述启动命令启动上述目标软件镜像环境容器组中与目标软件升级版本号对应的目标软件镜像环境容器，作为目标软件升级环境。第二步，在上述目标软件升级环境下，对与目标软件升级版本号对应的目标软件镜像环境容器包括的目标软镜像进行编译，得到升级后自动驾驶软件。其中，上述编译是对与上述目标软件升级版本号组中每个目标软件升级版本号对应的自动驾驶软件进行升级操作。可以通过上述镜像容器编译工具链，对与目标软件升级版本号对应的目标软件镜像环境容器包括的目标软镜像进行编译，得到升级后自动驾驶软件。可选的，上述执行主体还可以执行如下步骤：第一步，确定上述升级后自动驾驶软件组中每个升级后自动驾驶软件的升级状态和程序运行状态以生成升级结果，得到升级结果集。其中，升级状态可以是自动驾驶软件的升级过程的状态。程序运行状态可以是自动驾驶软件在升级后的运行状态。作为示例，升级状态可以是：“升级成功”或“未升级成功”。程序运行状态可以是：“正常运行”或“异常运行”。第二步，对上述升级结果集和上述目标软件升级版本号组作为升级记录数据进行存储。其中，通过存储可以便于主服务端对各个网络节点的编译环境镜像进行集中管控。上述步骤及其相关内容作为本公开的实施例的一个发明点，解决了背景技术提及的技术问题二“未对网络节点的不同平台的编辑环境进行隔离，在进行自动驾驶软件镜像部署时，需要对所有平台对应的编译环境进行重新部署，从而，导致需要占用大量计算资源，同时也降低自动驾驶软件镜像部署的效率”。导致需要占用大量计算资源，同时也降低自动驾驶软件镜像部署的效率的因素往往如下：未对网络节点的不同平台的编辑环境进行隔离，在进行自动驾驶软件镜像部署时，需要对所有平台对应的编译环境进行重新部署。如果解决了上述因素，就能降低计算资源的占用，同时进一步降低自动驾驶软件镜像部署的效率。为了达到这一效果，首先，通过在容器环境中对目标软镜像进行编译，可以使得不同环境之间相互不影响。从而，达到隔离不同软件编译环境的目的。进而，避免在部署过程中，出现对无需升级的环境进行升级操作的情况。从而，可以减少计算资源的占用。然后，还通过引入软件管理服务端，用于对各个版本的编译环境容器进行集中管控，从而，可以自动化对网络节点的软件镜像或编译环境进行升级。进而，也可以提高自动驾驶软件镜像部署的效率。本公开的上述各个实施例具有如下有益效果：通过本公开的一些实施例的自动驾驶软件镜像部署方法，可以提高自动驾驶软件镜像部署的效率。具体来说，造成自动驾驶软件镜像部署的效率降低的原因在于：未对不同子网络节点的编译环境镜像进行集中管控，若批量子网络节点需要进行自动驾驶软件镜像部署，会存在人工操作时间点不同的情况，使得对不同的网络节点，不能同步的部署编译环境。基于此，本公开的一些实施例的自动驾驶软件镜像部署方法，首先，响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请。这里，通过引入主服务端，可以用于对自动驾驶软件镜像进行集中管控。然后，响应于接收到上述主服务端返回的访问申请通过信息，从上述主服务端获取目标编译环境镜像容器文件，其中，上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号。这里，所有子网络节点均可通过获取目标编译环境镜像容器文件，以用于进行自动驾驶软件镜像部署。接着，启动上述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包。通过启动目标编译环境镜像容器以及进入目标编译环境容器的容器环境，可以避免破坏当前子网络节点的其它环境。之后，对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件。由此，可以完成当前网络节点的自动驾驶软件镜像部署。最后，将上述自动驾驶软件镜像容器文件发送至上述主服务端以完成自动驾驶软件镜像部署。这里，通过再次将自动驾驶软件镜像容器文件发送至上述主服务端，可以供主服务端对各个网络节点自动驾驶软件镜像部署进行进度把控。使得可以进一步管控各个网络节点。从而，可以在批量子网络节点需要进行自动驾驶软件镜像部署时，同时对不同的网络节点，进行同步的部署编译环境。进而，提高自动驾驶软件镜像部署的效率。进一步参考图2，作为对上述各图所示方法的实现，本公开提供了一种自动驾驶软件镜像部署装置的一些实施例，这些装置实施例与图1所示的那些方法实施例相对应，该装置具体可以应用于各种电子设备中。如图2所示，一些实施例的自动驾驶软件镜像部署装置200包括：第一发送单元201、第一获取单元202、启动以及获取单元203、编译单元204和第二发送单元205。其中，第一发送单元201，被配置成响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请；第一获取单元202，被配置成响应于接收到上述主服务端返回的访问申请通过信息，从上述主服务端获取目标编译环境镜像容器文件，其中，上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号；启动以及获取单元203，被配置成启动上述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包；编译单元204，被配置成对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件；第二发送单元205，被配置成将上述自动驾驶软件镜像容器文件发送至上述主服务端以完成自动驾驶软件镜像部署。可以理解的是，该装置200中记载的诸单元与参考图1描述的方法中的各个步骤相对应。由此，上文针对方法描述的操作、特征以及产生的有益效果同样适用于装置200及其中包含的单元，在此不再赘述。下面参考图3，其示出了适于用来实现本公开的一些实施例的电子设备300的结构示意图。图3示出的电子设备仅仅是一个示例，不应对本公开的实施例的功能和使用范围带来任何限制。如图3所示，电子设备300可以包括处理装置301，其可以根据存储在只读存储器302中的程序或者从存储装置308加载到随机访问存储器303中的程序而执行各种适当的动作和处理。在RAM 303中，还存储有电子设备300操作所需的各种程序和数据。处理装置301、ROM 302以及RAM 303通过总线304彼此相连。输入/输出接口305也连接至总线304。通常，以下装置可以连接至I/O接口305：包括例如触摸屏、触摸板、键盘、鼠标、摄像头、麦克风、加速度计、陀螺仪等的输入装置306；包括例如液晶显示器、扬声器、振动器等的输出装置307；包括例如磁带、硬盘等的存储装置308；以及通信装置309。通信装置309可以允许电子设备300与其他设备进行无线或有线通信以交换数据。虽然图3示出了具有各种装置的电子设备300，但是应理解的是，并不要求实施或具备所有示出的装置。可以替代地实施或具备更多或更少的装置。图3中示出的每个方框可以代表一个装置，也可以根据需要代表多个装置。特别地，根据本公开的一些实施例，上文参考流程图描述的过程可以被实现为计算机软件程序。例如，本公开的一些实施例包括一种计算机程序产品，其包括承载在计算机可读介质上的计算机程序，该计算机程序包含用于执行流程图所示的方法的程序代码。在这样的一些实施例中，该计算机程序可以通过通信装置309从网络上被下载和安装，或者从存储装置308被安装，或者从ROM 302被安装。在该计算机程序被处理装置301执行时，执行本公开的一些实施例的方法中限定的上述功能。需要说明的是，本公开的一些实施例上述的计算机可读介质可以是计算机可读信号介质或者计算机可读存储介质或者是上述两者的任意组合。计算机可读存储介质例如可以是——但不限于——电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。计算机可读存储介质的更具体的例子可以包括但不限于：具有一个或多个导线的电连接、便携式计算机磁盘、硬盘、随机访问存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑磁盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。在本公开的一些实施例中，计算机可读存储介质可以是任何包含或存储程序的有形介质，该程序可以被指令执行系统、装置或者器件使用或者与其结合使用。而在本公开的一些实施例中，计算机可读信号介质可以包括在基带中或者作为载波一部分传播的数据信号，其中承载了计算机可读的程序代码。这种传播的数据信号可以采用多种形式，包括但不限于电磁信号、光信号或上述的任意合适的组合。计算机可读信号介质还可以是计算机可读存储介质以外的任何计算机可读介质，该计算机可读信号介质可以发送、传播或者传输用于由指令执行系统、装置或者器件使用或者与其结合使用的程序。计算机可读介质上包含的程序代码可以用任何适当的介质传输，包括但不限于：电线、光缆、RF等等，或者上述的任意合适的组合。在一些实施方式中，客户端、服务器可以利用诸如HTTP之类的任何当前已知或未来研发的网络协议进行通信，并且可以与任意形式或介质的数字数据通信互连。通信网络的示例包括局域网，广域网，网际网以及端对端网络，以及任何当前已知或未来研发的网络。上述计算机可读介质可以是上述装置中所包含的；也可以是单独存在，而未装配入该电子设备中。上述计算机可读介质承载有一个或者多个程序，当上述一个或者多个程序被该电子设备执行时，使得该电子设备：响应于接收到自动驾驶软件镜像部署指令，向主服务端发出访问申请；响应于接收到上述主服务端返回的访问申请通过信息，从上述主服务端获取目标编译环境镜像容器文件，其中，上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号；启动上述目标编译环境镜像容器文件对应的目标编译环境镜像容器以进入目标编译环境容器的容器环境，以及基于上述目标编译环境镜像容器文件包括目标软件数据卷和目标软件传输端口号，获取自动驾驶软件包；对上述自动驾驶软件包进行编译，得到自动驾驶软件镜像容器文件；将上述自动驾驶软件镜像容器文件发送至上述主服务端以完成自动驾驶软件镜像部署。可以以一种或多种程序设计语言或其组合来编写用于执行本公开的一些实施例的操作的计算机程序代码，上述程序设计语言包括面向对象的程序设计语言—诸如Java、Smalltalk、C++，还包括常规的过程式程序设计语言—诸如“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算机上执行、部分地在用户计算机上执行、作为一个独立的软件包执行、部分在用户计算机上部分在远程计算机上执行、或者完全在远程计算机或服务器上执行。在涉及远程计算机的情形中，远程计算机可以通过任意种类的网络——包括局域网或广域网——连接到用户计算机，或者，可以连接到外部计算机。附图中的流程图和框图，图示了按照本公开各种实施例的系统、方法和计算机程序产品的可能实现的体系架构、功能和操作。在这点上，流程图或框图中的每个方框可以代表一个模块、程序段、或代码的一部分，该模块、程序段、或代码的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。也应当注意，在有些作为替换的实现中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个接连地表示的方框实际上可以基本并行地执行，它们有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图和/或流程图中的每个方框、以及框图和/或流程图中的方框的组合，可以用执行规定的功能或操作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。描述于本公开的一些实施例中的单元可以通过软件的方式实现，也可以通过硬件的方式来实现。所描述的单元也可以设置在处理器中，例如，可以描述为：一种处理器包括第一发送单元、第一获取单元、启动以及获取单元、编译单元和第二发送单元。其中，这些单元的名称在某种情况下并不构成对该单元本身的限定，例如，第一发送单元还可以被描述为“向主服务端发出访问申请的单元”。本文中以上描述的功能可以至少部分地由一个或多个硬件逻辑部件来执行。例如，非限制性地，可以使用的示范类型的硬件逻辑部件包括：现场可编程门阵列、专用集成电路、专用标准产品、片上系统、复杂可编程逻辑设备等等。以上描述仅为本公开的一些较佳实施例以及对所运用技术原理的说明。本领域技术人员应当理解，本公开的实施例中所涉及的发明范围，并不限于上述技术特征的特定组合而成的技术方案，同时也应涵盖在不脱离上述发明构思的情况下，由上述技术特征或其等同特征进行任意组合而形成的其它技术方案。例如上述特征与本公开的实施例中公开的具有类似功能的技术特征进行互相替换而形成的技术方案。
