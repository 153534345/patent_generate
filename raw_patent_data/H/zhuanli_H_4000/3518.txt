标题title
数据处理方法及电子设备
摘要abst
本申请提供了一种数据处理方法及电子设备。数据处理方法包括：从电子设备的解码模块的输出缓存中读取第一视频数据帧。然后，确定在第一视频数据帧之前写入第一缓存的第二视频数据帧，第二视频数据帧与第一视频数据帧之间间隔第一数量个视频数据帧，第一缓存用于存储待发送给电子设备的显示系统的视频数据帧。接着，根据将向第一缓存写入第一视频数据帧的第一时刻和向第一缓存写入第二视频数据帧的第二时刻，确定第一时间差。当第一时间差小于或等于显示系统的当前垂直同步周期，丢弃第一视频数据帧。这样，通过控制一个Vsync周期内缓存的待送显的视频数据帧的数量，能够减少视频数据帧等待显示的时长，从而降低显示时延。
权利要求书clms
1.一种数据处理方法，其特征在于，应用于电子设备，包括：从所述电子设备的解码模块的输出缓存中读取第一视频数据帧，所述输出缓存用于存储所述解码模块从源端电子设备发送的编码数据中解码出来的视频数据帧；确定在所述第一视频数据帧之前写入第一缓存的第二视频数据帧，所述第二视频数据帧与所述第一视频数据帧之间间隔第一数量个视频数据帧，所述第一缓存用于存储待发送给所述电子设备的显示系统的视频数据帧；根据将向所述第一缓存写入所述第一视频数据帧的第一时刻和向所述第一缓存写入所述第二视频数据帧的第二时刻，确定第一时间差；当所述第一时间差小于或等于所述显示系统的当前垂直同步周期，丢弃所述第一视频数据帧。2.根据权利要求1所述的方法，其特征在于，还包括：从所述电子设备的解码模块的输出缓存中读取第三视频数据帧；确定在所述第三视频数据帧之前写入所述第一缓存的第四视频数据帧，所述第四数据帧与所述第三视频数据帧之间间隔所述第一数量个视频数据帧；根据将向所述第一缓存写入所述第三视频数据帧的第三时刻和向所述第一缓存写入所述第四视频数据帧的第四时刻，确定第二时间差；当所述第二时间差大于所述显示系统的当前垂直同步周期，向所述第一缓存写入所述第三视频数据帧。3.根据权利要求2所述的方法，其特征在于，当所述第二时间差大于所述显示系统的当前垂直同步周期，向所述第一缓存写入所述第三视频数据帧之后，还包括：记录向所述第一缓存写入所述第三视频数据帧的时刻。4.根据权利要求1所述的方法，其特征在于，还包括：在当前时刻与上一次向所述显示系统发送视频数据帧的时刻之间的时间差等于当前垂直同步周期的情况下，从所述第一缓存中读取写入时刻最早的目标视频数据帧；将所述目标视频数据帧发送给所述显示系统。5.根据权利要求4所述的方法，其特征在于，将所述目标视频数据帧发送给所述显示系统之后，还包括：从所述第一缓存中删除所述目标视频数据帧。6.根据权利要求1所述的方法，其特征在于，从所述电子设备的解码模块的输出缓存中读取第一视频数据帧之前，还包括：从所述电子设备的解码模块的输出缓存中读取第五视频数据帧；在向所述第一缓存已写入的视频数据帧的数量小于或等于所述第一数量的情况下，向所述第一缓存写入所述第五视频数据帧。7.根据权利要求6所述的方法，其特征在于，从所述电子设备的解码模块的输出缓存中读取第五视频数据帧之前，还包括：接收所述源端电子设备发送的编码数据，所述编码数据是对视频数据帧编码得到的；将所述编码数据写入所述解码模块的输入缓存，以使所述解码模块对所述编码数据进行解码，得到解码出的视频数据帧；将解码出的视频数据帧存储到所述解码模块的输出缓存。8.根据权利要求1～7任一项所述的方法，其特征在于，当所述第一时间差小于或等于所述显示系统的当前垂直同步周期，丢弃所述第一视频数据帧之后，还包括：从所述输出缓存中删除所述第一视频数据帧。9.根据权利要求2所述的方法，其特征在于，当所述第二时间差大于所述显示系统的当前垂直同步周期，向所述第一缓存写入所述第三视频数据帧之后，还包括：从所述输出缓存中删除所述第三视频数据帧。10.根据权利要求1所述的方法，其特征在于，所述第一数量小于或等于所述第一缓存的容量。11.一种电子设备，其特征在于，包括：存储器和处理器，所述存储器与所述处理器耦合；所述存储器存储有程序指令，当所述程序指令由所述处理器执行时，使得所述电子设备执行权利要求1～10中任意一项所述的数据处理方法。
说明书desc
技术领域本申请涉及终端设备领域，尤其涉及一种数据处理方法及电子设备。背景技术当前，在两个电子设备之间通过网络传输视频数据、由接收端电子设备对视频数据对应的内容进行显示的场景中，接收端电子设备接收到视频数据，对视频数据进行解码后直接送显，但存在一些视频数据帧的显示时延很大，用户体验较差。发明内容本申请实施例提供一种数据处理方法及电子设备，以降低视频数据帧的显示时延。在一些场景中，由于网络传输的不稳定性，导致接收端电子设备对视频数据的解码送显时间不稳定。接收端电子设备的SurfaceFlinger是按照Vsync周期固定进行屏幕刷新的，因此解码后的各帧视频数据还需要按照顺序，进一步等待Vsync信号才能被SurfaceFlinger显示。这样，就造成一些视频数据帧的显示时延很大。第一方面，本申请实施例提供一种数据处理方法。该数据处理方法应用于电子设备，该方法包括：从电子设备的解码模块的输出缓存中读取第一视频数据帧，输出缓存用于存储解码模块从源端电子设备发送的编码数据中解码出来的视频数据帧。然后，确定在第一视频数据帧之前写入第一缓存的第二视频数据帧，第二视频数据帧与第一视频数据帧之间间隔第一数量个视频数据帧，第一缓存用于存储待发送给电子设备的显示系统的视频数据帧。接着，根据将向第一缓存写入第一视频数据帧的第一时刻和向第一缓存写入第二视频数据帧的第二时刻，确定第一时间差。当第一时间差小于或等于显示系统的当前垂直同步周期，丢弃第一视频数据帧。这样，如果在一个Vsync周期内缓存的待送显的视频数据帧达到一定的数量，电子设备就丢弃该视频数据帧，从而使得一个Vsync周期内缓存的待送显的视频数据帧的数量不超过第一数量。通过控制一个Vsync周期内缓存的待送显的视频数据帧的数量，能够减少视频数据帧等待显示的时长，从而降低显示时延。根据第一方面，在一种实现方式中，数据处理方法还可以包括：从电子设备的解码模块的输出缓存中读取第三视频数据帧，确定在第三视频数据帧之前写入第一缓存的第四视频数据帧，第四数据帧与第三视频数据帧之间间隔第一数量个视频数据帧。然后，根据将向第一缓存写入第三视频数据帧的第三时刻和向第一缓存写入第四视频数据帧的第四时刻，确定第二时间差，当第二时间差大于显示系统的当前垂直同步周期，向第一缓存写入第三视频数据帧。这样，如果将视频数据帧写入第一缓存的时刻，与在该视频数据帧之前被写入第一缓存的第个视频数据帧的写入时刻的时间差超过一个Vsync周期，该视频数据帧的写入不会使在一个Vsync周期内缓存的待送显的视频数据帧的数量超过第一数量，因此可以将该视频数据帧写入第一缓存，以便后续将该视频数据帧发送给显示系统进行显示。根据第一方面，在一种实现方式中，当第二时间差大于显示系统的当前垂直同步周期，向第一缓存写入第三视频数据帧之后，还包括：记录向第一缓存写入第三视频数据帧的时刻。这样，可以根据第三视频数据帧的写入时刻，来确定第三视频数据帧之后的第个视频数据帧是否可以写入第一缓存，以确保在一个Vsync周期内缓存的待送显的视频数据帧的数量不超过第一数量，降低显示时延。根据第一方面，在一种实现方式中，还包括：在当前时刻与上一次向显示系统发送视频数据帧的时刻之间的时间差等于当前垂直同步周期的情况下，从第一缓存中读取写入时刻最早的目标视频数据帧，将目标视频数据帧发送给显示系统。这样，按照当前垂直同步周期向显示系统发送视频数据帧，与显示系统的屏幕刷新频率相一致，能够降低对显示系统的缓存的容量要求，减少显示系统丢帧数量。根据第一方面，在一种实现方式中，将目标视频数据帧发送给显示系统之后，还包括：从第一缓存中删除目标视频数据帧。这样，将已经送显的视频数据帧从第一缓存中删除，可以及时释放第一缓存的存储资源，以便第一缓存有足够的空间存储解码模块后续解码出的视频数据帧。根据第一方面，在一种实现方式中，从电子设备的解码模块的输出缓存中读取第一视频数据帧之前，还包括：从电子设备的解码模块的输出缓存中读取第五视频数据帧，在向第一缓存已写入的视频数据帧的数量小于或等于第一数量的情况下，向第一缓存写入第五视频数据帧。在源端向接收端传输数据的初期，第一缓存为空，此时不需要丢弃视频数据帧，当第一缓存中的视频数据帧达到第一数量后，再确定后续的视频数据帧是否写入第一缓存。根据第一方面，在一种实现方式中，从电子设备的解码模块的输出缓存中读取第五视频数据帧之前，还包括：接收源端电子设备发送的编码数据，编码数据是对视频数据帧编码得到的，将编码数据写入解码模块的输入缓存，以使解码模块对编码数据进行解码，得到解码出的视频数据帧，将解码出的视频数据帧存储到解码模块的输出缓存。这样，接收端电子设备能够对源端电子设备发送的编码数据进行持续接收和解码。根据第一方面，在一种实现方式中，当第一时间差小于或等于显示系统的当前垂直同步周期，丢弃第一视频数据帧之后，还包括：从输出缓存中删除第一视频数据帧。这样，将已经丢弃的视频数据帧从输出缓存中删除，可以及时释放输出缓存的存储资源，以防止因输出缓存剩余存储空间不足导致解码模块后续解码出的视频数据帧覆盖还未送显的视频数据帧。根据第一方面，在一种实现方式中，当第二时间差大于显示系统的当前垂直同步周期，向第一缓存写入第三视频数据帧之后，还包括：从输出缓存中删除第三视频数据帧。这样，将已经写入第一缓存的视频数据帧从输出缓存中删除，可以及时释放输出缓存的存储资源，以防止因输出缓存剩余存储空间不足导致解码模块后续解码出的视频数据帧覆盖还未送显的视频数据帧。根据第一方面，在一种实现方式中，第一数量小于或等于第一缓存的容量。这样，可以保证第一缓存空间能够存储至少第一数量的视频数据帧，确保一定的显示质量。第二方面，本申请提供一种电子设备，该电子设备包括：存储器和处理器，处理器与存储器耦合，存储器存储有程序指令，当程序指令由处理器执行时，使得电子设备执行如下步骤：从电子设备的解码模块的输出缓存中读取第一视频数据帧；输出缓存用于存储解码模块从源端电子设备发送的编码数据中解码出来的视频数据帧，确定在第一视频数据帧之前写入第一缓存的第二视频数据帧，第二视频数据帧与第一视频数据帧之间间隔第一数量个视频数据帧，第一缓存用于存储待发送给电子设备的显示系统的视频数据帧，根据将向第一缓存写入第一视频数据帧的第一时刻和向第一缓存写入第二视频数据帧的第二时刻，确定第一时间差，当第一时间差小于或等于显示系统的当前垂直同步周期，丢弃第一视频数据帧。根据第二方面，在一种实现方式中，当程序指令由处理器执行时，使得电子设备执行如下步骤：从电子设备的解码模块的输出缓存中读取第三视频数据帧，确定在第三视频数据帧之前写入第一缓存的第四视频数据帧，第四数据帧与第三视频数据帧之间间隔第一数量个视频数据帧。然后，根据将向第一缓存写入第三视频数据帧的第三时刻和向第一缓存写入第四视频数据帧的第四时刻，确定第二时间差，当第二时间差大于显示系统的当前垂直同步周期，向第一缓存写入第三视频数据帧。这样，如果将视频数据帧写入第一缓存的时刻，与在该视频数据帧之前被写入第一缓存的第个视频数据帧的写入时刻的时间差超过一个Vsync周期，该视频数据帧的写入不会使在一个Vsync周期内缓存的待送显的视频数据帧的数量超过第一数量，因此可以将该视频数据帧写入第一缓存，以便后续将该视频数据帧发送给显示系统进行显示。根据第二方面，在一种实现方式中，当程序指令由处理器执行时，使得电子设备执行如下步骤：记录向第一缓存写入第三视频数据帧的时刻。这样，可以根据第三视频数据帧的写入时刻，来确定第三视频数据帧之后的第个视频数据帧是否可以写入第一缓存，以确保在一个Vsync周期内缓存的待送显的视频数据帧的数量不超过第一数量，降低显示时延。根据第二方面，在一种实现方式中，当程序指令由处理器执行时，使得电子设备执行如下步骤：在当前时刻与上一次向显示系统发送视频数据帧的时刻之间的时间差等于当前垂直同步周期的情况下，从第一缓存中读取写入时刻最早的目标视频数据帧，将目标视频数据帧发送给显示系统。这样，按照当前垂直同步周期向显示系统发送视频数据帧，与显示系统的屏幕刷新频率相一致，能够降低对显示系统的缓存的容量要求，减少显示系统丢帧数量。根据第二方面，在一种实现方式中，当程序指令由处理器执行时，使得电子设备执行如下步骤：从第一缓存中删除目标视频数据帧。这样，将已经送显的视频数据帧从第一缓存中删除，可以及时释放第一缓存的存储资源，以便第一缓存有足够的空间存储解码模块后续解码出的视频数据帧。根据第二方面，在一种实现方式中，当程序指令由处理器执行时，使得电子设备执行如下步骤：从电子设备的解码模块的输出缓存中读取第五视频数据帧，在向第一缓存已写入的视频数据帧的数量小于或等于第一数量的情况下，向第一缓存写入第五视频数据帧。在源端向接收端传输数据的初期，第一缓存为空，此时不需要丢弃视频数据帧，当第一缓存中的视频数据帧达到第一数量后，再确定后续的视频数据帧是否写入第一缓存。根据第二方面，在一种实现方式中，当程序指令由处理器执行时，使得电子设备执行如下步骤：接收源端电子设备发送的编码数据，编码数据是对视频数据帧编码得到的，将编码数据写入解码模块的输入缓存，以使解码模块对编码数据进行解码，得到解码出的视频数据帧，将解码出的视频数据帧存储到解码模块的输出缓存。这样，接收端电子设备能够对源端电子设备发送的编码数据进行持续接收和解码。根据第二方面，在一种实现方式中，当程序指令由处理器执行时，使得电子设备执行如下步骤：从输出缓存中删除第一视频数据帧。这样，将已经丢弃的视频数据帧从输出缓存中删除，可以及时释放输出缓存的存储资源，以防止因输出缓存剩余存储空间不足导致解码模块后续解码出的视频数据帧覆盖还未送显的视频数据帧。根据第二方面，在一种实现方式中，当程序指令由处理器执行时，使得电子设备执行如下步骤：从输出缓存中删除第三视频数据帧。这样，将已经写入第一缓存的视频数据帧从输出缓存中删除，可以及时释放输出缓存的存储资源，以防止因输出缓存剩余存储空间不足导致解码模块后续解码出的视频数据帧覆盖还未送显的视频数据帧。根据第二方面，在一种实现方式中，第一数量小于或等于第一缓存的容量。这样，可以保证第一缓存空间能够存储至少第一数量的视频数据帧，确保一定的显示质量。第三方面，本申请提供一种计算机可读存储介质，包括计算机程序，当计算机程序在电子设备上运行时，使得电子设备执行前述的第一方面中任意一项的数据处理方法。附图说明图1为示例性示出的电子设备100的结构示意图；图2为示例性示出的本申请实施例的电子设备100的软件结构框图；图3为示例性示出的本申请实施例的数据处理方法的一种应用场景示意图；图4为示例性示出的图3所示应用场景中的数据处理过程示意图；图5为示例性示出的本申请实施例的数据处理方法中数据的一种流转过程示意图；图6为示例性示出的视频帧处理过程中的时序示意图。具体实施方式下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有作出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。本文中术语“和/或”，仅仅是一种描述关联对象的关联关系，表示可以存在三种关系，例如，A和/或B，可以表示：单独存在A，同时存在A和B，单独存在B这三种情况。本申请实施例的说明书和权利要求书中的术语“第一”和“第二”等是用于区别不同的对象，而不是用于描述对象的特定顺序。例如，第一目标对象和第二目标对象等是用于区别不同的目标对象，而不是用于描述目标对象的特定顺序。在本申请实施例中，“示例性的”或者“例如”等词用于表示作例子、例证或说明。本申请实施例中被描述为“示例性的”或者“例如”的任何实施例或设计方案不应被解释为比其它实施例或设计方案更优选或更具优势。确切而言，使用“示例性的”或者“例如”等词旨在以具体方式呈现相关概念。在本申请实施例的描述中，除非另有说明，“多个”的含义是指两个或两个以上。例如，多个处理单元是指两个或两个以上的处理单元；多个系统是指两个或两个以上的系统。本文中，显示时延是指视频数据帧在接收端电子设备中显示的时刻与该视频数据帧在源端电子设备中显示的时刻之差。本文中，Vsync周期即垂直同步周期，也可称为屏幕刷新周期。Vsync周期与屏幕刷新频率之间为倒数关系。例如当屏幕刷新频率为60Hz时，Vsync周期为16.6ms，当屏幕刷新频率为120Hz时，Vsync周期为8.3ms。本申请实施例的数据处理方法可以应用于投屏场景。在投屏场景中，第一电子设备作为源端，将视频数据编码后，可以通过网络，例如Wi-Fi、蓝牙等，传输给第二电子设备，第二电子设备为接收端。第二电子设备对视频数据进行解码后，将解码后的视频数据送到显示系统进行显示。传统方案中，视频数据被解码后立即被送显。接收端电子设备的SurfaceFlinger按照Vsync周期一帧一帧地显示视频数据。需要显示的视频帧都在SurfaceFlinger的缓存中等待，排序越靠后，视频帧等待的时间越长，显示时延就越大。例如，假设缓存中有5个视频帧在等待显示，如果第1个视频帧需要等待1个Vsync周期才能显示，那么第2个视频帧需要等待2个Vsync周期，第3个视频帧需要等待3个Vsync周期，第4个视频帧需要等待4个Vsync周期，第5个视频帧需要等待5个Vsync周期。可见，排序越靠后的视频帧，等待时间越长，显示时延越大。如果等待的视频帧很多，那么排序在后的视频帧的显示时延将会很大，给用户的体验将会很差。在一个示例中，第一电子设备例如可以是PC机，该PC机可以安装Windows系统。第二电子设备可以是安装有安卓系统的手机、平板等。在另一个示例中，第一电子设备例如可以是安装有安卓系统的手机、平板等，第二电子设备可以是安装Windows系统的PC机。在另一个示例中，第一电子设备例如可以是安装有安卓系统的手机、平板等，第二电子设备也可以是安装有安卓系统的手机、平板等。本申请实施例提供一种数据处理方法，能够降低第二电子设备的显示时延，提升用户使用体验。本申请实施例的数据处理方法可以应用于前述的第二电子设备。该第二电子设备的结构可以如图1所示。图1为示例性示出的电子设备100的结构示意图。应该理解的是，图1所示电子设备100仅是电子设备的一个范例，并且电子设备100可以具有比图中所示的更多的或者更少的部件，可以组合两个或多个的部件，或者可以具有不同的部件配置。图1中所示出的各种部件可以在包括一个或多个信号处理和/或专用集成电路在内的硬件、软件、或硬件和软件的组合中实现。请参见图1，电子设备100可以包括：处理器110，外部存储器接口120，内部存储器121，通用串行总线接口130，充电管理模块140，电源管理模块141，电池142，天线1，天线2，移动通信模块150，无线通信模块160，音频模块170，扬声器170A，受话器170B，麦克风170C，耳机接口170D，传感器模块180，按键190，马达191，指示器192，摄像头193，显示屏194，以及用户标识模块卡接口195等。其中传感器模块180可以包括压力传感器180A，陀螺仪传感器180B，气压传感器180C，磁传感器180D，加速度传感器180E，距离传感器180F，接近光传感器180G，指纹传感器180H，温度传感器180J，触摸传感器180K，环境光传感器180L，骨传导传感器180M等。电子设备100的软件系统可以采用分层架构、事件驱动架构、微核架构、微服务架构，或云架构。本申请实施例以分层架构的安卓系统为例，示例性说明电子设备100的软件结构。图2为示例性示出的本申请实施例的电子设备100的软件结构框图。电子设备100的分层架构将软件分成若干个层，每一层都有清晰的角色和分工。层与层之间通过软件接口通信。在一些实施例中，Android系统可以包括应用程序层、应用程序框架层、以及内核层等。应用程序层可以包括一系列应用程序包。如图2所示，电子设备100的应用程序层的应用程序包可以包括业务、业务管理、业务设置、传输模块、解码逻辑模块、显示模块等模块。其中，业务模块用于实现具体的业务功能。业务管理模块用于实现与业务模块所对应的业务相应的管理功能。业务管理模块用于实现与业务模块所对应的业务相应的设置功能。例如，业务模块可以为无线投屏模块。其中，解码逻辑模块用于执行本申请的数据处理方法。解码逻辑模块的具体功能请参见本文后续实施例中的详细说明。其中，显示模块用于对视频数据进行显示。如图2所示，应用程序框架层可以包括基础能力、视频编解码、Socket等模块。其中，基础能力模块用于提供构建应用程序时可能用到的各种API。视频编解码模块用于实现对视频数据的编码和解码功能。视频编解码模块可以包括编码模块和解码模块。编码模块用于对视频数据进行编码，解码模块用于对视频数据进行解码。视频编解码模块可以是采用硬件方式对视频数据进行编码和解码的模块。其中，应用程序层的编码逻辑模块可以调用视频编解码模块中的编码模块进行编码，应用程序层的解码逻辑模块可以调用视频编解码模块中的解码模块进行解码。Socket是对网络中不同主机上的应用进程之间进行双向通信的端点的抽象。一个套接字就是网络上进程通信的一端，提供了应用层进程利用网络协议交换数据的机制。从所处的地位来讲，套接字上联应用进程，下联网络协议栈，是应用程序通过网络协议进行通信的接口，是应用程序与网络协议栈进行交互的接口。其中，应用程序框架层还可以包括SurfaceFlinger。内核层是硬件和软件之间的层。如图2所示，内核层可以包括传感器驱动、Wi-Fi驱动、USB驱动等模块。可以理解的是，图2示出的软件结构中的层以及各层中包含的部件，并不构成对电子设备100的具体限定。在本申请另一些实施例中，电子设备100可以包括比图示更多或更少的层，以及每个层中可以包括更多或更少的部件，本申请不做限定。图3为示例性示出的本申请实施例的数据处理方法的一种应用场景示意图。请参见图3，本实施例的应用场景中包括源端和接收端，二者均为电子设备。接收端的软件架构可以如图2所示，此处不再赘述。源端的软件架构可以包括应用程序层、应用程序框架层、以及内核层。其中，源端的应用程序层可以包括业务、业务管理、业务设置、传输模块、抓屏模块、编码逻辑模块等模块。源端的应用程序框架层可以与接收端的应用程序框架层结构相同，源端的内核层可以与接收端的内核层结构相同，请参见前述对图2所示软件结构的相关描述，此处不再赘述。图4为示例性示出的图3所示应用场景中的数据处理过程示意图。请参见图4，本实施例中，数据处理过程可以包括如下步骤：S1、当源端的业务启动后，源端的业务模块向源端的抓屏模块发送业务启动通知。本实施例中，以源端为安装有安卓系统的手机A、接收端为安装有安卓系统的平板B、源端将视频投屏到接收端为例进行说明。当用户开启手机A的无线投屏功能后，在手机A中搜索能够接收手机A投屏的设备，获得能够接收手机A投屏的可用设备列表C，可用设备列表C中包括平板B。然后，用户可以在搜索到的可用设备列表C中选中平板B作为本次的接收投屏设备。接着，手机A与平板B之间建立无线连接，例如Wi-Fi连接或者蓝牙连接。手机A与平板B之间的无线连接建立成功后，手机A中的无线投屏模块向手机A中的抓屏模块发送业务启动通知。该业务启动通知用于指示抓屏模块抓取屏幕上的视频数据。在手机A与平板B之间的无线连接建立成功后，平板B中的解码逻辑模块创建第一线程、第二线程、第三线程和第一缓存。其中，第一缓存的容量N需要大于平板B中解码模块的输出缓存的容量。N表示第一缓存中能够存储的最大帧数。在实际应用中，第一缓存的容量可以根据经验设置。例如，如果平板B中解码模块的解码速度与平板B的屏幕刷新频率相差较小，可以设置较小容量的第一缓存。反之，如果平板B中解码模块的解码速度与平板B的屏幕刷新频率相差较大，可以设置较大容量的第一缓存。S2、源端的抓屏模块抓取源端屏幕上的视频数据。例如，手机A的抓屏模块接收到业务启动通知后，开始抓取手机A屏幕上的视频数据。抓屏模块可以按照一定的帧率抓取视频数据，例如60FPS。S3、源端的抓屏模块向源端的编码逻辑模块发送视频数据。例如，手机A的抓屏模块向手机A的编码逻辑模块发送抓取到的视频数据。S4、源端的编码逻辑模块调用编码模块对视频数据进行编码，得到编码数据。此处，编码模块为源端的视频编解码模块中的模块。其中，编码模块可以基于视频编码标准H.264对视频数据进行编码。编码模块还可以采用JPEG、H.261、MPEG等中的任一种编码方法进行编码。在另一个示例中，编码模块还可以采用两种以上的编码方法进行混合编码。需要说明的是，以上仅为编码模块所采用的编码方法的示意性说明，并不排除其它的编码方法，本申请实施例对编码模块所采用的编码方法不做限制。S5、源端的编码逻辑模块向源端的传输模块发送编码数据。其中，在一个示例中，传输模块可以为Wi-Fi模块。在另一个示例中，传输模块可以为蓝牙模块。假设手机A和平板B都安装有Wi-Fi模块和蓝牙模块，当在无线投屏中手机A与平板B之间的无线连接为Wi-Fi连接时，手机A的编码逻辑模块向手机A的Wi-Fi模块发送编码数据。如果在无线投屏中手机A与平板B之间的无线连接为蓝牙连接，手机A的编码逻辑模块向手机A的蓝牙模块发送编码数据。S6、源端的传输模块向接收端的传输模块发送编码数据。例如，如果在无线投屏中手机A与平板B之间的无线连接为Wi-Fi连接，手机A的Wi-Fi模块向平板B的Wi-Fi模块发送编码数据。如果在无线投屏中手机A与平板B之间的无线连接为蓝牙连接，手机A的蓝牙模块向平板B的蓝牙模块发送编码数据。由于网络传输的不稳定，接收端在一个Vsync周期内接收到的帧数是不固定的。例如，在第1个Vsync周期，接收端接收到1帧数据；在第2个Vsync周期，接收端接收到2帧数据；在第3个Vsync周期，接收端接收到1帧数据……。S7、接收端的传输模块向接收端的解码逻辑模块发送编码数据。例如，平板B的Wi-Fi模块接收到手机A的Wi-Fi模块发送的编码数据后，可以向平板B的解码码逻辑模块发送编码数据。S8、接收端的编码逻辑模块通过已创建的第一线程接收编码数据。S9、接收端的编码逻辑模块通过第一线程发送编码数据到解码模块的输入缓存。此处，解码模块为源端的视频编解码模块中的模块。解码模块自身有两个缓存，一个为输入缓存，另一个为输出缓存。前述的第一缓存不属于解码模块，第一缓存是解码逻辑模块所创建的缓存。S10、接收端的解码模块对编码数据进行解码，得到视频数据，存储到解码模块的输出缓存。解码模块从编码数据中解码出视频数据后，会立即将视频数据存储到解码模块的输出缓存OutputBuffer中。S11、接收端的解码逻辑模块通过已创建的第二线程从解码模块的输出缓存中获视频数据，根据预设的送显阈值M确定是否将获取的视频数据存储到已创建的第一缓存中。第二线程可以对解码模块的输出缓存OutputBuffer进行监听，一旦输出缓存OutputBuffer中被写入视频数据，立即将输出缓存OutputBuffer中的视频数据读取到第一缓存中。然后，输出缓存OutputBuffer可以删除第二线程已读取完毕的视频数据。每一次第二线程从输出缓存OutputBuffer读取的视频数据可以为一帧或多帧。其中，送显阈值M表示一个Vsync周期内的最大送显帧数。送显阈值M可以预先设置，M小于或等于N。其中，M的值可以根据对时延的要求确定。当要求时延较小时，可以设置M值为较小的值；当要求时延较大时，可以设置M值为较大的值。这样，就将在一个Vsync周期内送显的帧数控制在M帧以下。本申请实施例中，根据预设的送显阈值M确定是否将获取的视频数据存储到已创建的第一缓存中，可以包括：获取当前视频数据帧进入第一缓存的时间T1；获取当前视频数据帧之前的第M-1帧视频数据进入第一缓存的时间T2；将T1与T2的差值与Vsync周期进行比较，得到比较结果；如果比较结果指示T1与T2的差值大于Vsync周期，那么将当前视频数据帧存储到第一缓存中；如果比较结果指示T1与T2的差值小于或等于Vsync周期，那么将当前视频数据帧丢弃，当前视频帧不会被存储到第一缓存中。S12、接收端的解码逻辑模块通过已创建的第三线程从第一缓存中周期性地读取视频数据，周期为Vsync周期。例如，如果平板B的Vsync周期为16.6ms，那么第三线程每隔16.6ms从第一缓存中读取一帧视频数据。如果平板B的Vsync周期为8.3ms，那么第三线程每隔8.3ms从第一缓存中读取一帧视频数据。需要说明的是，以上的Vsync周期的数值仅为示例性说明，并不对本申请实施例的Vsync周期进行限制。在实际应用中，可以根据第二电子设备中SurfaceFlingerVsync采用的屏幕刷新频率确定实际的Vsync周期。S13、接收端的解码逻辑模块通过第三线程按照Vsync周期发送视频数据至显示模块。例如，如果平板B的Vsync周期为16.6ms，那么第三线程每隔16.6ms向显示模块发送一帧视频数据。如果平板B的Vsync周期为8.3ms，那么第三线程每隔8.3ms向显示模块发送一帧视频数据。需要说明的是，在同一个Vsync周期内，第三线程从第一缓存中读取视频数据帧的时刻t1早于第三线程向显示模块发送视频数据的时刻t2。显示模块接收到视频数据帧后，可以调用releaseOutputBuffer方法，releaseOutputBuffer方法调用安卓显示系统的MediaCodec，MediaCodec再调用SurfaceFlinger，由SurfaceFlinger显示视频数据帧对应的界面。图5为示例性示出的本申请实施例的数据处理方法中数据的一种流转过程示意图。结合图4，如图5所示，第一线程接收源端传输过来的编码数据，然后将编码数据存储到解码模块的输入缓存中。然后，解码模块对输入缓存中的数据进行解码，将解码出的视频数据存储到解码模块的输出缓存中。接着，第二线程从解码模块的输出缓存中获取视频数据帧，如果该视频数据帧进入第一缓存的时间T1与该视频数据帧之前的第M-1帧视频数据进入第一缓存的时间T2的差值t0大于Vsync周期，那么将该视频数据帧存储到第一缓存中；如果T1与T2的差值t0小于或等于Vsync周期，那么将该视频数据帧丢弃，该视频数据帧不会被存储到第一缓存中。接下来，第三线程按照Vsync周期从第一缓存中逐帧读取视频数据，待接收到Vsync信号，第三线程将读取的视频数据传送给SurfaceFlinger进行显示。SurfaceFlinger接收到视频数据后，按照Vsync周期逐帧显示视频图像。本申请实施例通过控制一个Vsync周期内缓存的待送显的视频数据帧的数量，能够减少视频数据帧等待显示的时长，从而降低显示时延。下面通过视频帧处理过程中的时序对此进行说明。图6为示例性示出的视频帧处理过程中的时序示意图。图6中的所有时间轴是对齐的。请参见图6，在第一个Vsync周期内，第二线程在t1时刻从输出缓存中读取第一帧视频数据，在t2时刻从输出缓存中读取第二帧视频数据，在t3时刻从输出缓存中读取第三帧视频数据，在t4时刻从输出缓存中读取第四帧视频数据，在t5时刻从输出缓存中读取第五帧视频数据。在第二个Vsync周期内，第二线程在t6时刻从输出缓存中读取第六帧视频数据。请继续参见图6，第一帧视频数据在t1'时刻进入第一缓存，第二帧视频数据在t2'时刻进入第一缓存，第三帧视频数据在t3'时刻进入第一缓存，第四帧视频数据在t4'时刻进入第一缓存，第五帧视频数据在t5'时刻进入第一缓存，第六帧视频数据在t6'时刻进入第一缓存。假设SurfaceFlinger缓存的容量为6帧。在传统方案中，第一帧视频数据、第二帧视频数据、第三帧视频数据、第四帧视频数据、第五帧视频数据、第六帧视频数据都被送入SurfaceFlinger缓存，然后SurfaceFlinger按照Vsync周期逐帧进行显示。这样，第六帧视频数据与第一帧视频数据的显示时间间隔为5个Vsync周期，即第六帧视频数据在第一帧视频数据显示后需要等待5个Vsync周期才能显示，第六帧视频数据之后的视频数据的显示时延会大于第六帧视频数据的显示时延，并且后面随着帧数的增多，显示时延会越来越大。本文中，视频数据帧进入第一缓存的时刻是指将向第一缓存写入视频数据帧的时刻，但是否实际写入第一缓存还需要根据本实施例后续的判断，如果确定丢弃该视频数据帧，那么该视频数据帧不会被写入第一缓存，如果确定写入第一缓存该视频数据帧，那么在已经确定的该视频数据帧进入第一缓存的时刻将该视频数据帧写入第一缓存。请继续参见图6，按照本申请实施例的数据处理方法，假设送显阈值M＝5，由于第五帧视频数据进入第一缓存的时刻t5'与第一帧视频数据进入第一缓存的时刻t1'之间的差值小于一个Vsync周期，第二线程将第五帧视频数据丢弃，第五帧视频数据不会被存储到第一缓存中。第六帧视频数据进入第一缓存的时刻t6'与第一帧视频数据进入第一缓存的时刻t1'之间的差值大于一个Vsync周期，因此第二线程将第六帧视频数据写入第一缓存。这种情况下，第六帧视频数据在第一帧视频数据显示后需要等待4个Vsync周期就能够显示。可见，相比于传统方案，第六帧视频数据的显示时延降低了。并且，第六帧视频数据之后的每一帧视频数据都会根据送显阈值M进行判断后符合条件才会被写入第一缓存。这样，就保证了在任意一个时长等于一个Vsync周期的时间窗内等待送显的帧数不超过送显阈值M，从而有效降低了视频数据帧的显示时延。需要说明的是，以上的数据处理方式仅为本申请数据处理方法的一个实施例，本申请数据处理方法还可以采用其他的实施例。例如，前述实施例中采用了3个处理线程，并且构建了一个新的缓存，即第一缓存，而在本申请其他实施例中，也可以采用2个处理线程，并且无需构建上述的第一缓存。在采用2个处理线程的实施例中，线程1可以与前述的第一线程相同，另一个线程2可以用于按照Vsync周期从解码模块的输出缓存中读取视频数据并送显。例如，假设送显阈值M＝5，在第1个Vsync周期，接收端电子设备接收到第1～5帧视频数据；在第2个Vsync周期，接收端接收到第6～9帧视频数据；在第3个Vsync周期……。线程2构造送显周期，送显周期的时长与Vsync周期的时长相等。在第1个送显周期，线程2从解码模块的输出缓存中读取第1帧视频数据并发送给SurfaceFlinger；在第2个送显周期，线程2从解码模块的输出缓存中读取第2帧视频数据并发送给SurfaceFlinger……在第5个送显周期，线程2从解码模块的输出缓存中读取第5帧视频数据，如果向SurfaceFlinger发送第5帧视频数据的时刻与向SurfaceFlinger发送第1帧视频数据的时刻的差值小于或等于Vsync周期，线程2丢弃第5帧视频数据。接下来，线程2从解码模块的输出缓存中读取第6帧视频数据，如果向SurfaceFlinger发送第6帧视频数据的时刻与向SurfaceFlinger发送第1帧视频数据的时刻的差值大于Vsync周期，线程2将第6帧视频数据发送给SurfaceFlinger。然后，线程2从解码模块的输出缓存中读取第7帧视频数据，如果向SurfaceFlinger发送第7帧视频数据的时刻与向SurfaceFlinger发送第2帧视频数据的时刻的差值小于或等于Vsync周期，线程2丢弃第7帧视频数据……依此类推。可见，本申请实施例中，在每一个Vsync周期内等待送显的帧数都不会超过送显阈值M。这样，通过控制一个Vsync周期内缓存的待送显的视频数据帧的数量，减少视频数据帧等待显示的时长，从而降低显示时延。本申请实施例还提供一种电子设备，该电子设备包括存储器和处理器，存储器与处理器耦合，存储器存储有程序指令，当程序指令由所述处理器执行时，使得电子设备前述电子设备所执行的数据处理方法。可以理解的是，电子设备为了实现上述功能，其包含了执行各个功能相应的硬件和/或软件模块。结合本文中所公开的实施例描述的各示例的算法步骤，本申请能够以硬件或硬件和计算机软件的结合形式来实现。某个功能究竟以硬件还是计算机软件驱动硬件的方式来执行，取决于技术方案的特定应用和设计约束条件。本领域技术人员可以结合实施例对每个特定的应用来使用不同方法来实现所描述的功能，但是这种实现不应认为超出本申请的范围。本实施例还提供一种计算机存储介质，该计算机存储介质中存储有计算机指令，当该计算机指令在电子设备上运行时，使得电子设备执行上述相关方法步骤实现上述实施例中的数据处理方法。本实施例还提供了一种计算机程序产品，当该计算机程序产品在计算机上运行时，使得计算机执行上述相关步骤，以实现上述实施例中的数据处理方法。另外，本申请实施例还提供一种装置，这个装置具体可以是芯片，组件或模块，该装置可包括相连的处理器和存储器；其中，存储器用于存储计算机执行指令，当装置运行时，处理器可执行存储器存储的计算机执行指令，以使芯片执行上述各方法实施例中的数据处理方法。其中，本实施例提供的电子设备、计算机存储介质、计算机程序产品或芯片均用于执行上文所提供的对应的方法，因此，其所能达到的有益效果可参考上文所提供的对应的方法中的有益效果，此处不再赘述。通过以上实施方式的描述，所属领域的技术人员可以了解到，为描述的方便和简洁，仅以上述各功能模块的划分进行举例说明，实际应用中，可以根据需要而将上述功能分配由不同的功能模块完成，即将装置的内部结构划分成不同的功能模块，以完成以上描述的全部或者部分功能。在本申请所提供的几个实施例中，应该理解到，所揭露的装置和方法，可以通过其它的方式实现。例如，以上所描述的装置实施例仅仅是示意性的，例如，模块或单元的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，例如多个单元或组件可以结合或者可以集成到另一个装置，或一些特征可以忽略，或不执行。另一点，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些接口，装置或单元的间接耦合或通信连接，可以是电性，机械或其它的形式。作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是一个物理单元或多个物理单元，即可以位于一个地方，或者也可以分布到多个不同地方。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本申请各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。上述集成的单元既可以采用硬件的形式实现，也可以采用软件功能单元的形式实现。本申请各个实施例的任意内容，以及同一实施例的任意内容，均可以自由组合。对上述内容的任意组合均在本申请的范围之内。集成的单元如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个可读取存储介质中。基于这样的理解，本申请实施例的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的全部或部分可以以软件产品的形式体现出来，该软件产品存储在一个存储介质中，包括若干指令用以使得一个设备或处理器执行本申请各个实施例方法的全部或部分步骤。而前述的存储介质包括：U盘、移动硬盘、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。上面结合附图对本申请的实施例进行了描述，但是本申请并不局限于上述的具体实施方式，上述的具体实施方式仅仅是示意性的，而不是限制性的，本领域的普通技术人员在本申请的启示下，在不脱离本申请宗旨和权利要求所保护的范围情况下，还可做出很多形式，均属于本申请的保护之内。结合本申请实施例公开内容所描述的方法或者算法的步骤可以硬件的方式来实现，也可以是由处理器执行软件指令的方式来实现。软件指令可以由相应的软件模块组成，软件模块可以被存放于随机存取存储器、闪存、只读存储器、可擦除可编程只读存储器、电可擦可编程只读存储器、寄存器、硬盘、移动硬盘、只读光盘或者本领域熟知的任何其它形式的存储介质中。一种示例性的存储介质耦合至处理器，从而使处理器能够从该存储介质读取信息，且可向该存储介质写入信息。当然，存储介质也可以是处理器的组成部分。处理器和存储介质可以位于ASIC中。本领域技术人员应该可以意识到，在上述一个或多个示例中，本申请实施例所描述的功能可以用硬件、软件、固件或它们的任意组合来实现。当使用软件实现时，可以将这些功能存储在计算机可读介质中或者作为计算机可读介质上的一个或多个指令或代码进行传输。计算机可读介质包括计算机存储介质和通信介质，其中通信介质包括便于从一个地方向另一个地方传送计算机程序的任何介质。存储介质可以是通用或专用计算机能够存取的任何可用介质。上面结合附图对本申请的实施例进行了描述，但是本申请并不局限于上述的具体实施方式，上述的具体实施方式仅仅是示意性的，而不是限制性的，本领域的普通技术人员在本申请的启示下，在不脱离本申请宗旨和权利要求所保护的范围情况下，还可做出很多形式，均属于本申请的保护之内。
