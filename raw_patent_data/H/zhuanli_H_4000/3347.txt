标题title
一种基于RPC的离群摘除方法、存储介质及电子设备
摘要abst
本发明提供了一种基于RPC的离群摘除方法、存储介质及电子设备，包括控制服务系统中的每一服务器群均按照第一方法运行，由此可以及时检测到每一服务器群中出现异常的子服务器，并将其移动至隔离列表中，进而降低每一服务器群中异常服务器的数量，提高了服务器群对服务请求成功响应的机率，同时也提高了服务器群的可用性。具体的，每一服务器群会根据自身对应的请求访问频率，确定对应的目标时间窗口的时段长度，由此，对具有较高的请求访问频率的服务器群可以进行更加密集的异常检测，以保证及时摘除服务器群中出现异常的子服务器，进而确保具有较高请求访问频率的服务器群具备较高的请求成功响应机率。
权利要求书clms
1.一种基于RPC的离群摘除方法，其特征在于，应用于服务系统，所述服务系统包括多个服务器群，每一所述服务器群用于响应同种类型的服务请求，不同的所述服务器群用于响应不同类型的服务请求，每一所述服务器群包括多个子服务器，每一所述服务器群中的子服务器均用于响应所述服务器群对应的服务请求；每一所述服务器群对应一个调用列表及一个隔离列表；所述隔离列表用于存放所述服务器群中无法对服务请求进行响应的子服务器的设备标识；所述调用列表用于存放所述服务器群中对服务请求进行正常响应的子服务器的设备标识；控制所述服务系统中的每一服务器群均按照第一方法运行，以摘除任一所述服务器群中出现异常的子服务器，所述第一方法包括如下步骤：根据所述服务器群对应的请求访问频率P，确定所述服务器群对应的目标时间窗口的时段长度L，L＝k1/P；其中，k1为第一系数，k1∈；根据L，确定所述目标时间窗口的滑动步长B，B＝L/k2；其中，k2为第二系数，k2∈；每当所述目标时间窗口按照B完成一次滑动后，统计当前所述目标时间窗口确定的时间段内所述服务器群中每一子服务器的调用次数D1,D2,…,Df，及所述服务器群中每一子服务器的调用失败次数d1,d2,…,df，其中，Dm为所述服务器群中第m个子服务器的调用次数，dm为所述服务器群中第m个子服务器的调用失败次数，m＝1,2,…,f；f为当前所述目标时间窗口确定的时间段内所述服务器群中对服务请求进行响应的子服务器的总数量，v为目标时间窗口的滑动次数，v≥0；当D＞Y1时，对所述服务器群中的子服务器进行异常判定处理；其中，D＝D1+D2+...+Df；D为当前所述目标时间窗口确定的时间段内所述服务器群的总调用次数；Y1为调用阈值，Y1＝k3*k1；其中，k3为第三系数，k3∈；将所述异常判定处理确定出的异常服务器对应的设备标识从对应的所述调用列表移动至所述隔离列表中；所述异常判定处理包括：根据D1,D2,…,Df及d1,d2,…,df，确定每一子服务器对应的异常值s1,s2,…,sf，其中，sm为dm对应的子服务器的异常值；sm＝dm/Dm；当sm＞Y2时，确定sm对应的所述子服务器为所述异常服务器；Y2为第一异常阈值。2.根据权利要求1所述的方法，其特征在于，Y2满足如下条件：Y2＝P/k4；其中，k4＞P，k4为第四系数。3.根据权利要求2所述的方法，其特征在于，所述服务器群中对服务请求进行响应的子服务器随机对所述服务器群对应的服务请求进行响应；所述异常判定处理替换为：根据D1,D2,…,Df及d1,d2,…,df，确定每一子服务器对应的异常值s1,s2,…,sf，其中，sm为dm对应的子服务器的异常值；当sm＞Y3时，确定sm对应的所述子服务器为所述异常服务器；其中，Y3为第二异常阈值；Y3满足如下条件：Y3＝∑fm＝1dm/D。4.根据权利要求1所述的方法，其特征在于，所述方法还包括：在第i次判定所述服务器群中的子服务器为异常服务器时，确定当前所述服务器群对应的摘除比例值Qi，Qi满足如下条件：Qi＝1-ei/n；其中，ei为在第i次判定子服务器为异常服务器时，所述服务器群对应的调用列表中剩余的正常的子服务器的数量；当Qi＞Y3时，停止对所述服务器群中的子服务器进行异常判定处理。5.根据权利要求2所述的方法，其特征在于，当前所述目标时间窗口确定的时间段属于第二时段；在根据所述服务器群的请求访问频率P，确定所述服务器群对应的目标时间窗口的时段长度L之前，所述方法还包括：获取所述服务器群在第一时段T1内的请求访问总量W1；根据T1及W1，确定在第一时段内所述服务器群的请求访问频率P1，P1满足如下条件：P1＝W1/T1；将P1作为所述第二时段内所述服务器群的请求访问频率P2；其中，所述第一时段在时间顺序上早于所述第二时段；将P2作为当前所述目标时间窗口确定的时间段内的所述服务器群的请求访问频率P。6.根据权利要求5所述的方法，其特征在于，在确定sm对应的所述子服务器为异常服务器之前，所述异常判定处理还包括：获取所述服务系统中每一服务器群在第二时段内的第一请求访问频率G1,G2,…,Gu，其中，Gc为所述服务系统中第c个服务器群在第二时段内的第一请求访问频率，c＝1,2,…,u；u为所述服务系统中服务器群的总数量；根据G1,G2,…,Gu，确定所述服务系统在第二时段内的第二请求访问频率G，G满足如下条件：G＝k5*max；其中；max为预设最大值函数；max为G1,G2,…,Gu中的最大值；k5为第五系数；k5＞1；将G作为k4。7.根据权利要求5所述的方法，其特征在于，所述方法还包括：根据所述第二时段中的最晚时间Tr及当前所述目标时间窗口确定的时间段中的最晚时间Tc1，确定时段更新值E，E满足如下条件：E＝Tr-Tc1；当E＜B时，对所述第二时段进行时段更新处理；所述时段更新处理包括：将当前所述目标时间窗口确定的时间段中的最早时间Tc2，确定为更新后的第二时段的起始时间J1；根据J1及第二时段的时段长度H，确定更新后的第二时段的终止时间J2，J2满足如下条件：J2＝J1+H；根据J1及J2，确定更新后的第二时段对应的时间段。8.根据权利要求6所述的方法，其特征在于，k5∈。9.一种非瞬时性计算机可读存储介质，所述非瞬时性计算机可读存储介质存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1至8任一项所述的一种基于RPC的离群摘除方法。10.一种电子设备，包括存储器、处理器以及存储在所述存储器中并可在所述处理器上运行的计算机程序，其特征在于，所述处理器执行所述计算机程序时实现如权利要求1至8任一项所述的一种基于RPC的离群摘除方法。
说明书desc
技术领域本发明涉及服务器摘除领域，特别是涉及一种基于RPC的离群摘除方法、存储介质及电子设备。背景技术在现有的微服务架构中，通常通过RPC来调用服务器中对应的服务来响应用户的服务请求。但是，在使用过程中可能会出现部分服务器由于出现异常而无法响应的情况，此时若一直保留异常的服务器在对应的服务器群中，则用户后续发出的服务请求，依然有较大的可能性被分配至异常的服务器中，但是由于异常的服务器无法对服务请求进行响应，所以会提高对应的服务器群对服务请求无法响应的机率，进而导致对应的服务器群的可用性降低。发明内容针对上述技术问题，本发明采用的技术方案为：根据本发明的一个方面，提供了一种基于RPC的离群摘除方法，应用于服务系统，服务系统包括多个服务器群，每一服务器群用于响应同种类型的服务请求，不同的服务器群用于响应不同类型的服务请求，每一服务器群包括多个子服务器，每一服务器群中的子服务器均用于响应服务器群对应的服务请求；每一服务器群对应一个调用列表及一个隔离列表；隔离列表用于存放服务器群中无法对服务请求进行响应的子服务器的设备标识；调用列表用于存放服务器群中对服务请求进行正常响应的子服务器的设备标识；控制服务系统中的每一服务器群均按照第一方法运行，以摘除任一服务器群中出现异常的子服务器，第一方法包括如下步骤：根据服务器群对应的请求访问频率P，确定服务器群对应的目标时间窗口的时段长度L，L＝k1/P；其中，k1为第一系数，k1∈；根据L，确定目标时间窗口的滑动步长B，B＝L/k2；其中，k2为第二系数，k2∈；每当目标时间窗口按照B完成一次滑动后，统计当前目标时间窗口确定的时间段内服务器群中每一子服务器的调用次数D1,D2,…,Df，及服务器群中每一子服务器的调用失败次数d1,d2,…,df，其中，Dm为服务器群中第m个子服务器的调用次数，dm为服务器群中第m个子服务器的调用失败次数，m＝1,2,…,f；f为当前目标时间窗口确定的时间段内服务器群中对服务请求进行响应的子服务器的总数量，v为目标时间窗口的滑动次数，v≥0；当D＞Y1时，对服务器群中的子服务器进行异常判定处理；其中，D＝D1+D2+...+Df；D为当前目标时间窗口确定的时间段内服务器群的总调用次数；Y1为调用阈值，Y1＝k3*k1；其中，k3为第三系数，k3∈；将异常判定处理确定出的异常服务器对应的设备标识从对应的调用列表移动至隔离列表中；异常判定处理包括：根据D1,D2,…,Df及d1,d2,…,df，确定每一子服务器对应的异常值s1,s2,…,sf，其中，sm为dm对应的子服务器的异常值；sm＝dm/Dm；当sm＞Y2时，确定sm对应的子服务器为异常服务器；Y2为第一异常阈值。根据本发明的第二个方面，提供了一种非瞬时性计算机可读存储介质，非瞬时性计算机可读存储介质存储有计算机程序，计算机程序被处理器执行时实现上述的一种基于RPC的离群摘除方法。根据本发明的第三个方面，提供了一种电子设备，包括存储器、处理器以及存储在存储器中并可在处理器上运行的计算机程序，处理器执行计算机程序时实现上述的一种基于RPC的离群摘除方法。本发明至少具有以下有益效果：本发明中的服务系统的中的每一服务器群均按照第一方法进行运行，可以及时检测到对应的服务器群中出现异常的子服务器，并将其移动至隔离列表中。由此可以尽可能的保证每一服务器群中剩余的子服务器均为正常的子服务器。也即，尽量降低每一服务器群中异常服务器的数量，进而提高了对应的服务器群对服务请求成功响应的机率，对应的也提高了服务器群的可用性，终而提升用户的使用体验。同时，每一服务器群会根据自身对应的请求访问频率，确定对应的目标时间窗口的时段长度，由此，可以保证每一服务器群确定的对应的目标时间窗口与服务器群自身的工作情况更加贴近，也即，请求访问频率较高的服务器群对应的目标时间窗口的长度较短，且滑动步长更小。所以，对具有较高的请求访问频率的服务器群可以进行更加密集的异常判定检测处理，以保证及时摘除服务器群中出现异常的子服务器，进而保证具有较高的请求访问频率的服务器群，具有较高的对服务请求成功响应的机率。附图说明为了更清楚地说明本发明实施例中的技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本发明实施例提供的一种基于RPC的离群摘除方法的流程图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域技术人员在没有作出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。根据本发明的一个方面，提供了一种基于RPC的离群摘除方法，如图1所示，该方法应用于服务系统，服务系统包括多个服务器群，每一服务器群用于响应同种类型的服务请求，不同的服务器群用于响应不同类型的服务请求，每一服务器群包括多个子服务器，每一服务器群中的子服务器均用于响应服务器群对应的服务请求；每一服务器群对应一个调用列表及一个隔离列表；隔离列表用于存放服务器群中无法对服务请求进行响应的子服务器的设备标识；调用列表用于存放服务器群中对服务请求进行正常响应的子服务器的设备标识。具体的，当用户发起的一个服务请求被分配至对应的服务器群时，该服务器群会根据自身预设的请求分配策略将服务请求分配至本服务器群对应的调用列表中对应的子服务器中，对应的子服务器根据获得的服务请求进行响应。请求分配策略可使用现有的请求分配策略，如哈希一致分配策略或随机分配策略。本发明中用户每发起一次服务请求，对应的服务器群就会对应地产生一次调用。步骤S1：控制服务系统中的每一服务器群均按照第一方法运行，以摘除任一服务器群中出现异常的子服务器，第一方法包括如下步骤：步骤S10：根据服务器群对应的请求访问频率P，确定服务器群对应的目标时间窗口的时段长度L，L满足如下条件：L＝k1/P；其中，k1为第一系数，k1∈；步骤S20：根据L，确定目标时间窗口的滑动步长B，B满足如下条件：B＝L/k2；其中，k2为第二系数，k2∈。本实施例中的L及B均与P有关，具体的，P越大对应的L越小，且对应的B越小。由此，请求访问频率较高的服务器群，对应的目标时间窗口的数量更多且时段长度更短，由此，可以对具有较高的请求访问频率的服务器群进行更加密集的异常检测。通常，较高的请求访问频率可以说明对应的服务器群处于更加繁忙的使用场景中，而在此场景中用户对于服务器群的失败响应感受更加突出，也更加敏感，所以在此场景中对服务器群成功响应服务请求有着较高的要求。所以通过对服务器群进行更加密集的异常检测，可以及时摘除服务器群中出现异常的子服务器，进而保证具有较高的请求访问频率的服务器群，具有较高的对服务请求成功响应的机率，提高用户的使用体验。对应的，请求访问频率较低的服务器群，对应的目标时间窗口的数量更少且时段长度更长，由此，可以对具有较低的请求访问频率的服务器群进行较为稀疏的异常检测。通常，较低的请求访问频率可以说明对应的服务器群处于空闲的使用场景中，而在此场景中用户发出的服务请求数量少，且间隔时间长。通常，由于大多数子服务器会配置对应的自修复程序，当首次对服务请求响应失败后，会启动对应的自修复程序进行自动修复。且自动修复的时间长度一般小于两次服务请求的间隔时间长。由此，一些子服务器在第一次响应失败后，会进行自我修复，通常在下一次再接收到服务请求时，可以进行正常响应。所以较为稀疏的异常检测对处于空闲的使用场景中的服务器群中的子服务器而言，不仅可以留出较多的时间让子服务器进行自我修复，以提高子服务器被修复的成功率。而且，可以降低计算量，进而减少对计算资源的占用。步骤S30：每当目标时间窗口按照B完成一次滑动后，统计当前目标时间窗口确定的时间段内服务器群中每一子服务器的调用次数D1,D2,…,Df，及服务器群中每一子服务器的调用失败次数d1,d2,…,df，其中，Dm为服务器群中第m个子服务器的调用次数，dm为服务器群中第m个子服务器的调用失败次数，m＝1,2,…,f；f为当前目标时间窗口确定的时间段内服务器群中对服务请求进行响应的子服务器的总数量，v为目标时间窗口的滑动次数，v≥0。步骤S40：当D＞Y1时，对服务器群中的子服务器进行异常判定处理。其中，D＝D1+D2+...+Df为当前目标时间窗口确定的时间段内服务器群的总调用次数；Y1为调用阈值，Y1满足如下条件：Y1＝k3*k1；其中，k3为第三系数，k3∈。具体的，当前目标时间窗口确定的时间段内服务器群的总调用次数小于调用阈值，也即表明服务器群处于正常的运行状态，无需进行异常判定处理。而当服务器群中的子服务器出现异常无法响应时，对于同一条服务请求会对子服务器发起多次调用，由此会导致D迅速增加，进而超过调用阈值。在此情况下需要进行异常判定处理。步骤S50：将异常判定处理确定出的异常服务器对应的设备标识从对应的调用列表移动至隔离列表中。具体的，当异常判定处理结束后，将通过异常判定处理确定出来的所有的异常服务器对应的设备标识从对应的调用列表移动至隔离列表中。移动完成后，调用列表中剩余的设备标识为该服务器群后续在进行服务请求分派时对应设备标识。在后续的服务请求分派工作中，该服务器群对应的请求分配模块会根据预设的请求分配策略，将服务请求分配至新的调用列表中对应的设备标识代表的子服务器中。每一次异常判定处理结束后均会更新服务器群对应的调用列表中剩余的设备标识，以生成新的调用列表。设备标识可以为每一子服务器对应的设备序列号。异常判定处理包括：步骤S41：根据D1,D2,…,Df及d1,d2,…,df，确定每一子服务器对应的异常值s1,s2,…,sf，其中，sm为dm对应的子服务器的异常值；sm满足如下条件：sm＝dm/Dm。步骤S42：当sm＞Y2时，确定sm对应的子服务器为异常服务器；其中，Y2为第一异常阈值。Y2可以根据实际的使用场景进行自行设置，如Y2＝0.6。优选的，Y2满足如下条件：Y2＝P/k4。其中，k4＞P，k4为第四系数。本实施例中，Y2与P成正相关，通常该Y2的设置方式，更加适合用于使用哈希一致分配策略的服务器群。由于，哈希一致分配策略具体为将服务请求分配至具有与目标哈希值相同哈希值的子服务器中，所以，在服务器群中会存在至少一个子服务器相对于其他的子服务器具有更高的异常值，且该异常值也与P成正相关。所以，将Y2设置为与P成正相关，可以使不同的服务器群也具有与自身更加贴合的第一异常阈值。由此，可以提高异常判定处理的判定精度。作为本发明一种可能的实施例，在步骤S42：确定sm对应的子服务器为异常服务器之前，异常判定处理还包括：步骤S420：获取服务系统中每一服务器群在第二时段内的第一请求访问频率G1,G2,…,Gu,其中，Gc为服务系统中第c个服务器群在第二时段内的第一请求访问频率。c＝1,2,…,u。u为服务系统中服务器群的总数量。步骤S421：根据G1,G2,…,Gu，确定服务系统在第二时段内的第二请求访问频率G，G满足如下条件：G＝k5*max。其中。max为预设最大值函数。max为G1,G2,…,Gu中的最大值。k5为第五系数。k5＞1。优选的，k5∈。步骤S422：将G作为k4。通常在一个服务系统中不同的服务器群也会对应不同的第一请求访问频率。所以，对于使用哈希一致分配策略的各个服务器群中的异常服务器的错误率的增长速度也不同。将Y2设置为与P成正相关，可以使不同的服务器群也具有与自身更加贴合的第一异常阈值。由此，可以提高异常判定处理的判定精度。另外，本实施例中G＝k4，且G与max正相关，由于，k4的值是以服务系统中在第二时段内最高的请求访问频率为参考计算出来的。所以，使得由k4计算出的Y2与本服务系统中的每一个服务器群的贴合性更高。也可以避免人为设定k4的过程中，由于缺少参考而使得设定的k4太大或太小，进而导致Y2的值与每一个服务器群的贴合性较低的情况，从而进一步提高异常判定处理的判定精度。作为本发明一种可能的实施例，服务器群中的多个子服务器随机对服务器群对应的服务请求进行响应。对应的异常判定处理替换为：本实施例更加适用于使用随机分配策略的服务器群。也即，服务请求被分派至服务器群中的每个子服务器的概率相同。步骤S41：根据D1,D2,…,Df及d1,d2,…,df，确定每一子服务器对应的异常值s1,s2,…,sf，其中，sm为dm对应的子服务器的异常值：步骤S43：当sm＞Y3时，确定sm对应的子服务器为异常服务器；其中，Y3为第二异常阈值；Y3满足如下条件：Y3＝∑fm＝1dm/D。本实施例中，由于使用的是随机分派的策略，所以，服务器群中的每一个子服务器获得的服务请求的数量基本一致。通常来说，每一个子服务器出现异常概率也相同，所以，将Y3设置为服务器群平均每次调用出现调用失败的概率。由于，服务器群中大部分的子服务器为正常的，所以Y3会大于正常的子服务器对应的异常值，且Y3小于异服务器对应的异常值。由此，可以更加准确的将服务器群中的异常服务器判定出来，进而可以提高异常判定处理的判定精度。作为本发明一种可能的实施例，方法还包括：步骤S2：在第i次确定服务器群中的子服务器为异常服务器时，确定当前服务器群对应的摘除比例值Qi，Qi满足如下条件：Qi＝1-ei/n。其中，ei为在第i次确定子服务器为异常服务器时，服务器群对应的调用列表中剩余的正常的子服务器的数量。步骤S3：当Qi＞Y3时，停止对服务器群中的子服务器进行异常判定处理。本实施例中，在进行异常判定处理的过程中，每次判定对应的子服务器为异常服务器之后，都要计算摘除比例值，当摘除比例值达到摘除比例上限时，也即当Qi＞Y3时，则停止对服务器群中的子服务器进行异常判定处理。通常Y3会根据具体的使用场景进行自行设置，如Y3＝0.3。通常一个服务器群中的子服务器被摘除后，由于服务器群中剩余的子服务器数量减少，会增加剩余的子服务器的服务压力。当服务器群中剩余的子服务器数量低于一定阈值时，整个服务器群中的子服务器会由于服务压力超过阈值而崩溃，进而导致整个服务器群无法使用。在该情况下，摘除异常服务器会比保留异常服务器对整个服务器群造成的不利影响更大。所以，通过本实施例可以保证每一个服务器群中剩余的子服务器的数量均会在一个阈值之上，进而保证整个服务器群不会出现崩溃的情况。作为本发明一种可能的实施例，当前目标时间窗口确定的时间段属于第二时段。在步骤S10：根据服务器群的请求访问频率P，确定服务器群对应的目标时间窗口的时段长度L之前，方法还包括：步骤S01：获取服务器群在第一时段T1内的请求访问总量W1。步骤S02：根据T1及W1，确定在第一时段内服务器群的请求访问频率P1，P1满足如下条件：P1＝W1/T1。步骤S03：将P1作为第二时段内服务器群的请求访问频率P2。其中，第一时段在时间顺序上早于第二时段。步骤S04：将P2作为当前目标时间窗口确定的时间段内的服务器群的请求访问频率P。本是实施例中，第一时段在时间顺序上早于第二时段，也即第一时段为第二时段的历史时段。由于，服务器群的请求访问频率在时间上具有一定的重复相似性，也即每一个时间周期内服务器群的请求访问频率基本相同。如，8月份服务器群的请求访问频率的变化和9月份服务器群的请求访问频率基本一致。所以，可以通过服务器群在历史时段中的平均请求访问频率，也即P1，来代表服务器群在当前时段中请求访问频率，也即P2。第一时段及第二时段可以根据具体的使用场景进行确定，如第一时段可以为第二时段的前一个月的时段。具体的，第一时段可以为8月对应的时段，第二时段可以为9月对应的时段。作为本发明一种可能的实施例，方法还包括：步骤S4：根据第二时段中的最晚时间Tr及当前目标时间窗口确定的时间段中的最晚时间Tc1，确定时段更新值E，E满足如下条件：E＝Tr-Tc1。步骤S5：当E＜B时，对第二时段进行时段更新处理。时段更新处理包括：步骤S51：将当前目标时间窗口确定的时间段中的最早时间Tc2，确定为更新后的第二时段的起始时间J1。步骤S52：根据J1及第二时段的时段长度H，确定更新后的第二时段的终止时间J2，J2满足如下条件：J2＝J1+H。步骤S53：根据J1及J2，确定更新后的第二时段对应的时间段。本实施例主要是第二时段的更新方法。具体为，当E＜B时，将原来的第二时段在时间上向后平移，直至将原来的第二时段的起始时间移动至与当前目标时间窗口确定的时间段的起始时间相同的位置即可。当第二时段更新后，对应的，第一时段也会按照第二时段向后移动的量进行同等程度的移动，以对应更新第一时段所在的时间段。如，第二时段向后平移了28天得到了更新后的第二时段，则第一时段也会同样向后平移28天得到了更新后的第一时段。通过对第一时段及第二时段的自动更新，保证了对应获取的数据均为最靠近当前目标时间窗口确定的时间段的数据。由此可以更加准确的反应出实际的情况，进而可以进一步提高异常判定处理的判定精度。本发明的实施例还提供了一种非瞬时性计算机可读存储介质，该存储介质可设置于电子设备之中以保存用于实现方法实施例中一种方法相关的至少一条指令或至少一段程序，该至少一条指令或该至少一段程序由该处理器加载并执行以实现上述实施例提供的方法。本发明的实施例还提供了一种电子设备，包括处理器和前述的非瞬时性计算机可读存储介质。本发明的实施例还提供一种计算机程序产品，其包括程序代码，当程序产品在电子设备上运行时，程序代码用于使该电子设备执行本说明书上述描述的根据本发明各种示例性实施方式的方法中的步骤。虽然已经通过示例对本发明的一些特定实施例进行了详细说明，但是本领域的技术人员应该理解，以上示例仅是为了进行说明，而不是为了限制本发明的范围。本领域的技术人员还应理解，可以对实施例进行多种修改而不脱离本发明的范围和精神。本发明开的范围由所附权利要求来限定。
