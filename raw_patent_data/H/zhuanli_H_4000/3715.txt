标题title
一种可定制化的单元化路由组件的实现方法、装置及设备
摘要abst
本申请公开了一种可定制化的单元化路由组件的实现方法、装置及设备，可应用于分布式领域以及金融领域，能够实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感。该方法包括：首先在应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至各服务单元，然后通过网关获取目标外部交易请求，接着将其输入预先构建的网关到单元转发组件模块，以访问路由服务组件模块，来获取待转发的单元信息，并转发至目标单元的第一应用，进而通过预先构建的单元间转发组件模块，访问路由服务组件模块，来获取待转发的单元信息，并转发至目标单元的第二应用。
权利要求书clms
1.一种可定制化的单元化路由组件的实现方法，其特征在于，所述方法包括：在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至所述各服务单元；通过网关获取目标外部交易请求；将所述目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第一应用；通过预先构建的单元间转发组件模块，访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第二应用。2.根据权利要求1所述的方法，其特征在于，所述方法还包括：通过预先构建的路由查询组件模块，根据所述目标外部交易请求中包含的分区要素，选择对应的查询机制；当分区要素为通用的分区要素时，直接查询下发的路由信息进行交易转发；或者，对于定制化的查询要素，通过访问Redis获取映射到的目标单元路由信息进行交易转发。3.根据权利要求2所述的方法，其特征在于，所述方法还包括：利用远程字典服务Redis存储非分区要素和分区要素间的映射关系。4.根据权利要求2-3任一项所述的方法，其特征在于，所述分区要素和单元之间的映射信息是在配置中心进行配置，并统一下发到各个应用的。5.一种可定制化的单元化路由组件的实现装置，其特征在于，所述装置包括：下发单元，用于在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至所述各服务单元；获取单元，用于通过网关获取目标外部交易请求；第一转发单元，用于将所述目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第一应用；第二转发单元，用于通过预先构建的单元间转发组件模块，访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第二应用。6.根据权利要求5所述的装置，其特征在于，所述装置还包括：选择单元，用于通过预先构建的路由查询组件模块，根据所述目标外部交易请求中包含的分区要素，选择对应的查询机制；第三转发单元，用于当分区要素为通用的分区要素时，直接查询下发的路由信息进行交易转发；或者，对于定制化的查询要素，通过访问Redis获取映射到的目标单元路由信息进行交易转发。7.根据权利要求6所述的装置，其特征在于，所述装置还包括：存储单元，用于利用远程字典服务Redis存储非分区要素和分区要素间的映射关系。8.根据权利要求6-7任一项所述的装置，其特征在于，所述分区要素和单元之间的映射信息是在配置中心进行配置，并统一下发到各个应用的。9.一种可定制化的单元化路由组件的实现设备，其特征在于，包括：处理器、存储器、系统总线；所述处理器以及所述存储器通过所述系统总线相连；所述存储器用于存储一个或多个程序，所述一个或多个程序包括指令，所述指令当被所述处理器执行时使所述处理器执行权利要求1-4任一项所述的方法。10.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质中存储有指令，当所述指令在终端设备上运行时，使得所述终端设备执行权利要求1-4任一项所述的方法。
说明书desc
技术领域本申请涉及分布式技术领域，尤其涉及一种可定制的单元化路由组件的实现方法、装置及设备。背景技术随着应用系统的发展和应用系统规模的扩大，单体应用逐步陷入瓶颈期，分布式微服务应用架构将替代现有的单体应用架构，单元路由组件是形成分布式微服务应用架构体系不可或缺的一部分。目前已有两种单元路由组件设计方案：一种是如图1所示的BFW服务分片路由组件，其具体实现流程以及使用实例分别如图2和图3所示，存在的缺点是代码侵入性较强，不利于无感式设计，组件层次简单，不支持复杂的路由要素映射关系，且组件可拓展性差。另一种是如图4和图5所示的技术中台全局路由组件和交易转发组件，存在的缺点是每次请求都需要访问服务端的全局路由组件获取路由信息，网络请求频繁，且客户端配置的路由映射规则不支持定制化需求。因此，如何实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感并可以实现请求的转发是目前亟待解决的问题。发明内容本申请实施例的主要目的在于提供一种可定制化的单元化路由组件的实现方法、装置及设备，能够实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感。第一方面，本申请实施例提供了一种可定制化的单元化路由组件的实现方法，所述方法包括：在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至所述各服务单元；通过网关获取目标外部交易请求；将所述目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第一应用；通过预先构建的单元间转发组件模块，访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第二应用。可选的，所述方法还包括：通过预先构建的路由查询组件模块，根据所述目标外部交易请求中包含的分区要素，选择对应的查询机制；当分区要素为通用的分区要素时，直接查询下发的路由信息进行交易转发；或者，对于定制化的查询要素，通过访问Redis获取映射到的目标单元路由信息进行交易转发。可选的，所述方法还包括：利用远程字典服务Redis存储非分区要素和分区要素间的映射关系。可选的，所述分区要素和单元之间的映射信息是在配置中心进行配置，并统一下发到各个应用的。第二方面，本申请实施例还提供了一种可定制化的单元化路由组件的实现装置，所述装置包括：下发单元，用于在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至所述各服务单元；获取单元，用于通过网关获取目标外部交易请求；第一转发单元，用于将所述目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第一应用；第二转发单元，用于通过预先构建的单元间转发组件模块，访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第二应用。可选的，所述装置还包括：选择单元，用于通过预先构建的路由查询组件模块，根据所述目标外部交易请求中包含的分区要素，选择对应的查询机制；第三转发单元，用于当分区要素为通用的分区要素时，直接查询下发的路由信息进行交易转发；或者，对于定制化的查询要素，通过访问Redis获取映射到的目标单元路由信息进行交易转发。可选的，所述装置还包括：存储单元，用于利用远程字典服务Redis存储非分区要素和分区要素间的映射关系。可选的，所述分区要素和单元之间的映射信息是在配置中心进行配置，并统一下发到各个应用的。本申请实施例还提供了一种可定制化的单元化路由组件的实现设备，包括：处理器、存储器、系统总线；所述处理器以及所述存储器通过所述系统总线相连；所述存储器用于存储一个或多个程序，所述一个或多个程序包括指令，所述指令当被所述处理器执行时使所述处理器执行上述可定制化的单元化路由组件的实现方法中的任意一种实现方式。本申请实施例还提供了一种计算机可读存储介质，所述计算机可读存储介质中存储有指令，当所述指令在终端设备上运行时，使得所述终端设备执行上述可定制化的单元化路由组件的实现方法中的任意一种实现方式。本申请实施例提供的一种可定制化的单元化路由组件的实现方法、装置及设备，首先在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至各服务单元，然后，通过网关获取目标外部交易请求，接着，将目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第一应用，进而可以通过预先构建的单元间转发组件模块，访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第二应用。从而能够实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本申请实施例提供的BFW服务分片路由组件的代码示意图；图2为本申请实施例提供的BFW服务分片路由组件实现流程的示意图；图3为本申请实施例提供的BFW服务分片路由组件使用实例的示意图；图4为本申请实施例提供的技术中台全局路由组件的示意图；图5为本申请实施例提供的技术中台交易转发组件的示意图；图6为本申请实施例提供的一种可定制化的单元化路由组件的实现方法的流程示意图；图7为本申请实施例提供的可定制化的单元化路由组件的实现方法的各模块调用示意图；图8为本申请实施例提供的网关到单元转发组件模块的功能实现流程示意图；图9为本申请实施例提供的单元间转发组件模块的功能实现流程示意图；图10为本申请实施例提供的一种可定制化的单元化路由组件的实现装置的组成示意图。具体实施方式目前随着应用系统的发展和应用系统规模的扩大，单体应用逐步陷入瓶颈期，分布式微服务应用架构将替代现有的单体应用架构，单元路由组件是形成分布式微服务应用架构体系不可或缺的一部分。目前已有以下两种单元路由组件设计方案：一、BFW服务分片路由组件在大数据量、高并发的业务场景下，为了避免单节点数据量过大，单点读写瓶颈的问题，数据往往需要支持分片和副本的能力：对数据按照一定的规则进行分片，每个分片存储一部分数据，对应的微服务分组进行部署，分别访问不同的分片数据。对于微服务的消费者，需要按照一定的路由规则，调用不同的分片微服务。Bfw对领域模型进行了抽象，设计了服务分片访问组件bfw-sharding-router，如图1所示。图2为BFW服务分片路由组件分片路由的实现流程，通过给被调方接口添加@Sharding注解的方式，用切面拦截请求，并放开doRouter方法进行自定义路由，该方法支持tsf相关路由配置，如图3所示的使用实例示意图。二、技术中台全局路由组件和交易转发组件技术中台全局路由组件客户端提供路由单元信息的注册和查询功能。技术中台提供的交易转发、异步可靠消息、批量调度服务、服务编排等组件都依赖于全局路由提供的单元信息。全局路由组件各部分说明：全局路由SDK：全局路由SDK封装具体的路由定位业务逻辑，负责与服务端通讯，为网关/微服务应用/服务编排/异步消息提供全局路由服务集成能力，客户端调用服务端时通过TSF平台进行就近路由与负载均衡；全局路由服务：为客户端SDK提供业务要素映射关系的查询/新增/修改/注销等服务；数据库：全局路由组件的数据库，负责记录业务要素映射关系。路由组件提供了两种映射方案：①服务端仅存储第一层映射关系，不存储第二层映射关系，第二层映射关系可以通过客户端进行计算分配。②不再建立客户号的映射关系，第一层映射关系存储在服务端，其他映射关系缓存在客户端。交易请求通过全局路由组件的服务端获取单元信息，并通过客户端的交易转发组件进行转发。交易转发组件各部分说明：交易转发SDK：提供整个应用服务的交易转发功能；切面/拦截：拦截交易请求，对当前请求进行分析；客户要素：请求被拦截后通过报文体或者头部进行客户要素的提取。路由策略：从注册中心拉取策略配置，为服务定位提供策略选择；服务定位：通过客户要素请求全局路由服务获取服务所在单元信息列表并通过路由策略筛选合适的地址信息；服务路由：通过服务定位的单元地址更改当前请求服务名进行交易的转发处理；容错/重试：对于转发失败的请求进行重新转发或者失败返回等。但是，现有的两种单元路由组件具有以下不足之处：一、BFW服务分片路由组件①代码侵入性较强，不利于无感式设计。②组件层次简单，不支持复杂的路由要素映射关系。③组件可拓展性差。二、技术中台配套组件①每次请求都需要访问服务端的全局路由组件获取路由信息，网络请求频繁。②客户端配置的路由映射规则不支持定制化需求。因此，如何实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感并可以实现请求的转发是目前亟待解决的问题。为解决上述缺陷，本申请实施例提供了一种可定制化的单元化路由组件的实现方法，首先在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至各服务单元，然后，通过网关获取目标外部交易请求，接着，将目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第一应用，进而可以通过预先构建的单元间转发组件模块，访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第二应用。从而能够实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感。为使本申请实施例的目的、技术方案和优点更加清楚，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。第一实施例参见图6，为本实施例提供的一种可定制化的单元化路由组件的实现方法的流程示意图，该方法包括以下步骤：S601：在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至各服务单元。在本实施例中，为了实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感，本申请预先构建了四个组件模块：服务改名组件模块、路由服务组件模块、网关到单元转发组件模块、单元间转发组件模块。这样，在微服务应用启动时，首先可以通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至各服务单元。S602：通过网关获取目标外部交易请求。S603：将目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第一应用。在本实施例中，通过步骤S602获取到目标外部交易请求后，进一步可以将目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第一应用，用以执行后续步骤S604。具体来讲，目标外部交易请求从网关进入后，首先通过网关到单元转发组件模块，访问路由服务组件模块获取要转发的单元信息，转发到目标单元的应用A模块，如图7所示的步骤①至⑦。S604：通过预先构建的单元间转发组件模块，访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第二应用。在本实施例中，通过步骤S603将单元信息转发至目标单元的第一应用后，进一步可以通过预先构建的单元间转发组件模块，访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第二应用。具体来讲，目标外部交易请求从目标单元内应用A模块转发至应用B模块是通过单元间转发组件模块，访问路由服务组件模块获取要转发的单元信息，转发到目标单元的应用B模块的，如图7所示的步骤⑧至其中，需要说明的是，本申请的关键在于转发组件处理逻辑的设计部分，目标外部交易请求从网关到单元，和该请求在单元间的处理逻辑是不同的。针对不同的路由查询关系，可以通过预先构建的路由查询组件模块，根据所述目标外部交易请求中包含的分区要素，选择对应的查询机制，当分区要素为通用的分区要素时，直接查询下发的路由信息进行交易转发；或者，对于定制化的查询要素，通过访问Redis获取映射到的目标单元路由信息进行交易转发。并且，还需要说明的是，本申请是利用远程字典服务Redis存储非分区要素和分区要素间的映射关系。且分区要素和单元之间的映射信息是在配置中心进行配置，并统一下发到各个应用的。另外，如图8所示，其示出了网关到单元转发组件模块的功能实现流程示意图；如图9所示，其示出了单元间转发组件模块的功能实现流程示意图。这样，微服务应用在启动时通过服务改名组件模块注册分片单元信息到注册中心，交易请求从网关进入到服务应用，依次通过客户端的网关到单元转发组件模块、单元间转发组件模块，查询单元路由信息。单元路由信息通过路由服务组件模块统一下发到各个单元模块，路由服务组件模块时刻检查注册中心各单元的活动状态，并将路由配置信息变动广播至各单元，如果部分单元需新增路由查询要素，路由服务组件模块会将新增的要素存储至Redis中。单元间转发组件模块根据返回的路由组件信息进行交易请求转发。通过执行上述步骤S601-S604，设计一种可定制化的单元化路由组件，路由配置信息是在应用启动时，由路由服务组件模块从配置中心读取路由信息，并统一下发至各单元，不存在服务端访问，不消耗网络资源，仅在路由配置信息发生变动时统一广播变动信息至单元本地。此外，支持定制化路由要素并由Redis进行存储，对于微服务应用而言，整个单元路由组件更加轻量和无感。也就是说，在微服务应用体系下，满足单元化架构系统内，各单元内部，和单元之间的路由交易请求转发，并且兼具可拓展性，支持定制化路由查询要素。综上，本实施例提供的一种可定制化的单元化路由组件的实现方法，首先在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至各服务单元，然后，通过网关获取目标外部交易请求，接着，将目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第一应用，进而可以通过预先构建的单元间转发组件模块，访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第二应用。从而能够实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感。第二实施例本实施例将对一种可定制化的单元化路由组件的实现装置进行介绍，相关内容请参见上述方法实施例。参见图10，为本实施例提供的一种可定制化的单元化路由组件的实现装置的组成示意图，具体包括：下发单元1001，用于在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至所述各服务单元；获取单元1002，用于通过网关获取目标外部交易请求；第一转发单元1003，用于将所述目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第一应用；第二转发单元1004，用于通过预先构建的单元间转发组件模块，访问所述路由服务组件模块，来获取待转发的单元信息，并将所述单元信息转发至目标单元的第二应用。在本实施例的一种实现方式中，所述装置还包括：选择单元，用于通过预先构建的路由查询组件模块，根据所述目标外部交易请求中包含的分区要素，选择对应的查询机制；第三转发单元，用于当分区要素为通用的分区要素时，直接查询下发的路由信息进行交易转发；或者，对于定制化的查询要素，通过访问Redis获取映射到的目标单元路由信息进行交易转发。在本实施例的一种实现方式中，所述装置还包括：存储单元，用于利用远程字典服务Redis存储非分区要素和分区要素间的映射关系。在本实施例的一种实现方式中，所述分区要素和单元之间的映射信息是在配置中心进行配置，并统一下发到各个应用的。综上，本实施例提供的一种可定制化的单元化路由组件的实现装置，首先在微服务应用启动时，通过预先构建的服务改名组件模块标记各服务单元，并注册到注册中心；以及通过预先构建的路由服务组件模块读取配置中心的路由信息并下发至各服务单元，然后，通过网关获取目标外部交易请求，接着，将目标外部交易请求输入预先构建的网关到单元转发组件模块，以访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第一应用，进而可以通过预先构建的单元间转发组件模块，访问路由服务组件模块，来获取待转发的单元信息，并将单元信息转发至目标单元的第二应用。从而能够实现可定制化的单元化路由组件，且使得单元路由组件更加轻量和无感。进一步地，本申请实施例还提供了一种可定制化的单元化路由组件的实现设备，包括：处理器、存储器、系统总线；所述处理器以及所述存储器通过所述系统总线相连；所述存储器用于存储一个或多个程序，所述一个或多个程序包括指令，所述指令当被所述处理器执行时使所述处理器执行上述可定制化的单元化路由组件的实现方法的任一种实现方法。进一步地，本申请实施例还提供了一种计算机可读存储介质，所述计算机可读存储介质中存储有指令，当所述指令在终端设备上运行时，使得所述终端设备执行上述可定制化的单元化路由组件的实现方法的任一种实现方法。通过以上的实施方式的描述可知，本领域的技术人员可以清楚地了解到上述实施例方法中的全部或部分步骤可借助软件加必需的通用硬件平台的方式来实现。基于这样的理解，本申请的技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品可以存储在存储介质中，如ROM/RAM、磁碟、光盘等，包括若干指令用以使得一台计算机设备执行本申请各个实施例或者实施例的某些部分所述的方法。需要说明的是，本说明书中各个实施例采用递进的方式描述，每个实施例重点说明的都是与其他实施例的不同之处，各个实施例之间相同相似部分互相参见即可。对于实施例公开的装置而言，由于其与实施例公开的方法相对应，所以描述的比较简单，相关之处参见方法部分说明即可。还需要说明的是，在本文中，诸如第一和第二等之类的关系术语仅仅用来将一个实体或者操作与另一个实体或操作区分开来，而不一定要求或者暗示这些实体或操作之间存在任何这种实际的关系或者顺序。而且，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括所述要素的过程、方法、物品或者设备中还存在另外的相同要素。另外，需要说明的是，本发明提供的可定制化的单元化路由组件的实现方法、装置及设备可用于分布式领域以及金融领域。上述仅为示例，并不对本发明提供的可定制化的单元化路由组件的实现方法、装置及设备的应用领域进行限定。对所公开的实施例的上述说明，使本领域专业技术人员能够实现或使用本申请。对这些实施例的多种修改对本领域的专业技术人员来说将是显而易见的，本文中所定义的一般原理可以在不脱离本申请的精神或范围的情况下，在其它实施例中实现。因此，本申请将不会被限制于本文所示的这些实施例，而是要符合与本文所公开的原理和新颖特点相一致的最宽的范围。
