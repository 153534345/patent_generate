标题title
基于OPC-UA通信环境中提供和验证替代对象标识符并确定引用替代对象标识符的方法
摘要abst
本发明提出一种在基于OPC‑UA的通信环境内为服务器的地址空间中的对象提供替代对象标识符的方法，其中所述服务器的地址空间中的每个对象是由一个常规对象标识符唯一标识，其中至少一个附加标识符被定义并存储在为所述服务器的这个地址空间定义的附加标识符的目录中，并且对于所述服务器S1、S2)地址空间中的每个对象形成也唯一地标识所述对象的替代对象标识符，其中根据特定模式将附加标识符与相应对象的常规对象标识符组合。本发明还提出用于验证替代对象标识符的方法，以及用于确定替代对象标识符的引用的方法，以及设计用于执行所述方法中的至少一个的服务器、系统和计算机程序产品。
权利要求书clms
1.一种为在基于OPC-UA的通信环境内的服务器的地址空间中的对象提供替代对象标识符的方法，其中所述服务器的所述地址空间中的每个对象由常规对象标识符唯一地标识，其中至少一个附加标识符被定义并存储在为所述服务器的所述地址空间定义的附加标识符的目录中，并且其中通过根据确定的模式将所述附加标识符与相应对象的常规对象标识符组合，为所述服务器的所述地址空间中的每个对象形成也唯一地标识所述对象的替代对象标识符。2.根据权利要求1所述的方法，其中所述模式规定：如果所述常规对象标识符是STRING标识符类型，则附加标识符也是STRING标识符类型，并且包括两个附加标识符部分，其中第一附加标识符部分是能够自由定义的字符串，第二附加标识符部分是能够自由定义的分隔符。3.根据权利要求2所述的方法，其中所述模式规定：所述替代对象标识符也是STRING标识符类型，并且由第一附加标识符部分、第二附加标识符部分和相应对象的常规对象标识符这三个部分以所列顺序或相反的顺序组成。4.根据权利要求1所述的方法，其中所述模式规定：如果常规对象标识符是NUMERIC标识符类型，则附加标识符也是NUMERIC标识符类型并且是基值的倍数，其中所述基值比所述服务器的所述地址空间对象的所有常规对象标识符中的最大数值大1。5.根据权利要求4所述的方法，其中所述模式规定：所述替代对象标识符也是NUMERIC标识符类型，并且通过将所述附加标识符和所述相应对象的所述常规对象标识符相加而形成。6.一种在基于OPC-UA的通信环境中验证替代对象标识符的方法，其中服务器的地址空间中的每个对象由常规对象标识符唯一地标识，并且额外地由至少一个替代对象标识符唯一地标识，所述方法包括以下步骤：-从客户端的请求中提取替代对象标识符，-根据确定的模式使用拆分准则拆分所述替代对象标识符，使得形成常规对象标识符和附加标识符，-如果能够在所述服务器的该地址空间中存在的常规对象标识符的目录中确定所述常规对象标识符，则将所述常规对象标识符评估为有效，-如果可以在为所述服务器的该地址空间定义的附加标识符的目录中确定所述附加标识符，则将所述附加标识符评估为有效，-如果所述常规对象标识符和所述附加标识符在前都被评估为有效，则将所述替代对象标识符评估为有效，-如果所述常规对象标识符和/或所述附加标识符在前被评估为无效，则将所述替代对象标识符评估为无效。7.根据权利要求6所述的方法，其中所述模式规定：如果替代对象标识符为STRING标识符类型，则使用分隔符作为拆分准则，并将所述分隔符在所述替代对象标识符的整个字符串内标识为第二附加标识符部分，并且其中将所述分隔符之前的字符串部分标识为第一附加标识符部分并进一步处理，将所述分隔符之后的字符串部分标识为常规对象标识符并进一步处理，或者将所述分隔符之前的字符串部分标识为常规对象标识符并进一步处理，并将所述分隔符之后的字符串部分标识为第一附加标识符部分并进一步处理。8.根据权利要求6所述的方法，其中所述模式规定：如果替代对象标识符是NUMERIC标识符类型，则使用基值作为拆分准则，并且所述替代对象标识符除以所述基值，其中所述除法的整数商，特别是在与所述基值Base再次相乘后，标识为附加标识符并进一步处理，并且所述除法的余数标识为常规对象标识符并进一步处理。9.一种在基于OPC-UA的通信环境中确定替代对象标识符的引用的方法，其中服务器的地址空间的每个对象由常规对象标识符唯一地标识，并且额外地由至少一个替代对象标识符唯一地标识，所述方法包括以下步骤：-从客户端的请求中提取替代对象标识符，-根据确定的模式使用拆分准则拆分替代对象标识符，使得形成常规对象标识符和附加标识符，-在存在于所述服务器的该地址空间中的引用的目录中确定与常规对象标识符相关的引用，其中每个引用包括相关的其他对象的常规对象标识符，-对于每个确定的引用，通过组合根据确定的模式的引用所包含的附加标识符和所述相关的其他对象的常规对象标识而形成替代对象标识符。10.根据权利要求9所述的方法，其中所述模式规定：如果待确定其引用的所述替代对象标识为STRING标识符类型，则使用分隔符作为拆分准则，并将所述分隔符在所述替代对象标识的字符串中标识为第二附加标识符部分，并且其中将所述分隔符之前的字符串部分标识为第一附加标识部分并进一步处理，将所述分隔符之后的字符串部分标识为常规对象标识符并进一步处理，或者将所述分隔符之前的字符串部分标识为常规对象标识符并进一步处理，将分隔符之后的字符串部分标识为第一附加标识符部分并进一步处理。11.根据权利要求10所述的方法，其中所述模式规定：对于每个确定的引用，所述替代对象标识符也是STRING标识符类型，并由如下三部分按以下顺序组成：第一附加标识符部分、第二附加标识符部分和所述相应的相关的其他对象的常规对象标识符，或者所述相应的相关的其他对象的常规对象标识符、第二附加标识符部分和第一附加标识符部分。12.根据权利要求9所述的方法，其中所述模式规定：如果待确定其引用的所述替代对象标识符是NUMERIC标识符类型，则使用基值作为拆分准则，并且所述替代对象标识符除以所述基值，其中所述除法的整数商，特别地在与所述基值Base重新相乘之后，作为附加标识符进一步处理，并且所述除法的余数作为常规对象标识符进一步处理。13.根据权利要求12所述的方法，其中所述模式规定：对于每个确定的引用，所述替代对象标识符也是NUMERIC标识符类型，并且通过将所述附加标识符和所述相应的相关的其他对象的常规对象标识符相加而形成。14.一种服务器，其设计成用于执行根据权利要求1至13中任一项所述的方法。15.一种包括基于OPC-UA的通信环境的系统，其具有通过网络相互连接的至少一个根据权利要求14所述的服务器和至少一个客户端。16.一种包括指令的计算机程序产品，所述指令在由计算机执行时使得所述计算机执行根据权利要求1至13中任一项所述的方法。
说明书desc
技术领域本发明涉及一种在基于OPC-UA的通信环境内为服务器地址空间中的对象提供替代对象标识符的方法、用于验证这种替代对象标识符的方法以及确定对这种替代对象标识符的引用的方法。本发明涉及一种服务器、系统和计算机程序产品，它们被设计成执行这些方法中的至少一种。背景技术IEC 62541是OPC统一架构的一个多部分标准，其定义了例如用于所谓的机器对机器通信的协议，即用于在终端设备之间自动交换信息。OPC-UA受制于客户端-服务器模型，即服务器提供客户端从所述服务器请求的信息。所述客户端通过所谓服务可以使用服务器的功能。服务允许通过为相应服务定义的请求和响应消息访问服务器的某些方面，这些消息在客户端和所述服务器之间交换。信息在服务器的地址空间中由服务器提供给客户端。特别地根据直至申请日有效的版本，IEC 62541标准的第3部分定义了地址空间的面向对象的概念，其中特别地根据直至申请日有效的版本，根据该标准的第4部分，通过节点表示对象。节点具有指向其他节点并表示有向图的边的属性和引用，因此可以存在前向和后向引用。基于UPC-UA的通信环境中的客户端可以浏览服务器提供的这种地址空间，以从已知根节点开始确定另一个节点的唯一标识符。例如，使用“数据访问”等指定服务，OPC-UA客户端获得对地址空间中节点的属性值的读取或写入访问权限。节点ID通常由“namespaceIndex”、“identifierType”和“identifier”三种元素组成。“标识符类型”元素定义了唯一标识符的类型，可以是NUMERIC、STRING、GUID或BYTESTRING。为了每个节点ID的唯一性，必须根据定义的标识符类型为地址空间的每个节点指定唯一的标识符作为“标识符”元素。为了避免地址或标识符冲突并进一步细分地址空间，一个地址空间可以包含多个命名空间。必须为地址空间的每个节点指定节点的相应命名空间作为节点ID的“命名空间索引”元素。一个地址空间的所有命名空间或命名空间索引的目录被存储为已知节点的属性。OPC-UA服务器的一个可能应用是，例如在自动化技术领域，为OPC-UA客户端提供对存储器可编程控制变量的访问权限。例如，在基于申请人的PLCnext技术的控制中，组件的变量被列为OPC-UA服务器地址空间中的节点，其中为唯一节点标识符定义STRING标识符类型。地址空间的所有命名空间或命名空间索引的目录存储为“服务器”节点的“命名空间数组”属性。然而，到目前为止的问题在于，特别是动态地实现多个信息模型，例如不同的语义表示，用于OPC-UA地址空间的同一数据集，或者随着时间的推移在地址空间中进行改变，其对现有节点ID具有影响。上述命名空间确实允许对地址空间进行结构化。但是，它们的性质是静态的，并且需要在另一命名空间中复制节点或节点实例，以便为OPC-UA地址空间的同一数据集实现多个信息模型。OPC-UA视图的概念允许根据特定任务和应用示例组织和定制地址空间。但是，它们更多地用作地址空间的入口点或过滤器。发明内容因此，本发明的一个目的在于提供一种克服至少一个上述缺点的方法。本发明提出了具有独立专利权利要求1特征的方法，具有独立专利权利要求6特征的方法以及具有独立专利权利要求9特征的方法。此外，本发明提出了根据独立专利权利要求14的服务器，根据独立专利权利要求15的系统和一种根据独立专利权利要求16的计算机程序产品。根据本发明的控制装置的进一步有利的方案在从属权利要求中说明。本发明的基本构思在于，使用新的寻址模式实现OPC-UA地址空间同一数据集的多种不同表示，所述寻址模式特别地可以在常规寻址模式基础上额外地实施。这允许不同的信息模型，特别是对不同语境中对象或节点的访问权限。新的寻址模式基于替代的对象标识符，其本质上将现有的常规对象标识符与附加标识符组合，其中替代标识符被理解为对象或节点的常规标识符的代表、别名或同义词。本发明的一个明显优点在于OPC-UA服务器本质上不需要额外的计算或内存资源来实现这种新的寻址模式，稍后将更详细地解释。因此，提出一种用于在基于OPC-UA的通信环境内为服务器地址空间中的对象提供替代对象标识符的方法，其中所述服务器地址空间中的每个对象由常规的对象标识符唯一地标识。在这种情况下，至少一个附加标识符被定义并方便地存储在为所述服务器的这个地址空间定义的附加标识符的目录中。此外，通过根据特定模式将附加标识符与相应对象的常规对象标识符组合，为所述服务器地址空间中的每个对象形成也唯一地标识所述对象的替代对象标识符。在根据本发明的这个方法和其他方法中，对象可以由节点表示，因此对象标识符是节点标识符。此外，可以将地址空间细分为命名空间，在这种情况下，可以为一个地址空间的一个或多个、特别是所有命名空间的对象或节点应用或执行相应的方法。有利地，用户可以清楚地识别替代对象标识符，并且可以容易地将它们与常规对象标识符区分开来。替代对象标识符为随着时间的推移可能变得必要的地址空间的改变提供了极大的灵活性，例如为现有对象或节点分配新标识符，因为由于新的寻址模式，这种改变不会影响常规对象，而只会影响替代对象或节点标识符。另一个优点是，从OPC-UA协议的角度来看，替代对象标识符可以以与常规对象标识符相同的方式处理。根据所述方法的第一实施例，所述模式规定，如果常规对象标识符是STRING标识符类型，则附加标识符也是STRING标识符类型并且包括两个附加标识符部分，其中第一附加标识符部分是可自由定义的字符串，并且第二附加标识符部分是可自由定义的分隔符。在有利的进一步的实施例中，所述模式规定替代对象标识符也是STRING标识符类型，并且由三个部分组成，第一替代标识符部分，第二替代标识符部分，以及相应对象的常规对象标识符，他们以上述顺序或者相反顺序组合。因此，对于具有STRING标识符类型的常规对象标识符的地址空间，可以非常容易地实现新的寻址模式。根据所述方法的另一个实施例，所述模式规定，如果常规对象标识符是NUMERIC标识符类型，则附加标识符也是NUMERIC标识符类型，并且是基值的倍数，其中所述基值比服务器地址空间对象的所有常规对象标识符中的最大数值大1。在有利的进一步实施例中，所述模式规定，替代对象标识符也是NUMERIC标识符类型，并且通过将相应对象的附加标识符和常规对象标识符相加而形成。在这种情况下，所述替代对象标识符对应于所述附加标识符和所述常规对象标识符的数值之和。因此，对于具有NUMERIC标识符类型的常规对象标识符的地址空间，新的寻址模式也可以非常容易地实现。此外还提出了一种在基于OPC-UA的通信环境中验证替代对象标识符的方法，其中服务器地址空间的每个对象由常规对象标识符唯一地标识，并且还额外地由至少一个替代对象标识符唯一地标识，所述方法包括以下步骤：-从客户端的请求中提取替代对象标识符，-根据特定模式使用拆分准则拆分替代对象标识符，从而随后形成常规对象标识符和附加标识符，-如果可以在服务器的这个地址空间中存在的常规对象标识符目录中确定所述常规对象标识符，则将所述常规对象标识符评估为有效，-如果可以在为服务器的这个地址空间定义的附加标识符目录中确定所述附加标识符，则将所述附加标识符评估为有效，-如果所述常规对象标识符和所述附加标识符两者先前都被评估为有效，则将所述替代对象标识符评估为有效，-如果所述常规对象标识符和/或所述附加标识符先前被评估为无效，则将所述替代对象标识符评估为无效。由于OPC-UA客户端的请求原则上可以包含任何对象标识符，所以必须首先特别地在OPC-UA服务器部分验证，所请求的替代对象标识符确实是有效的，这通过验证在所述替代对象标识符中所包含的附加标识符并验证在所述替代对象标识符中所包含的常规对象标识符确实是所述地址空间的一部分而实现。根据所述方法的第一实施例，所述模式规定，如果替代对象标识符是STRING标识符类型，则使用分隔符作为拆分准则，并且在替代对象标识符的整个字符串内将所述分隔符标识为第二附加标识符部分，将所述分隔符之前的字符串部分标识为第一附加标识符部分，将所述分隔符之后的字符串部分标识为常规对象标识符，并继续处理，或将所述分隔符之前的字符串部分标识为常规对象标识符，将所述分隔符之后的字符串部分标识为第一附加标识符部分并继续处理。根据所述方法的另一实施例，所述模式规定，如果替代对象标识符是NUMERIC标识符类型，则使用基值作为拆分准则，并且所述替代对象标识符除以所述基值，其中将该除法的整数商，特别是在再次乘以所述基值Base之后，标识为附加标识符并进一步处理，并且将该除法的余数标识为常规对象标识符并进一步处理。由此可以验证STRING标识符类型以及NUMERIC标识符类型的请求的对象标识符。如果替代对象标识符是STRING标识符类型，则可以例如在源代码中、特别是在用于所谓的节点ID剖析器的所述源代码中确定用作拆分替代对象标识符的拆分准则的分隔符。替代地，待使用的拆分准则也可以例如设置为可配置的参数。即使替代对象标识符是NUMERIC标识符类型，也可以例如在源代码中确定用作拆分替代对象标识符分割标准的基数，特别是在所述源代码中用于节点ID剖析器。所述基数的值应选择为尽可能的大，以使命名空间中不同信息模型的节点ID重叠的可能性尽可能小。OPC-UA将UINT32指定为数字节点ID的数据类型，因此可以选择/Y为基数的最大值，其中Y表示不同尺寸或信息模型的最大可能数。另一方面，如果要将所述基数的值设置为最小，则必须已知并观察地址空间中的节点的最大数。替代地，待使用的拆分准则也可以例如设置为可配置的参数。如果替代对象标识符是STRING标识符类型，则可以将定义的附加标识符的目录例如确定为源代码、特别是在用于所谓的节点ID剖析器的所述源代码中的列表或数组。即使替代对象标识符是NUMERIC标识符类型，也可以将附加标识符的目录例如确定为在源代码、特别是在用于所谓的节点ID剖析器的所述源代码中的列表或数组。此外还提出一种在基于OPC-UA的通信环境中确定对替代对象标识符引用的方法，其中服务器地址空间中的每个对象由常规对象标识符唯一地标识，并且还额外由至少一个替代对象标识符唯一地标识，所述方法包括以下步骤：-从客户端的请求中提取替代对象标识符，-根据特定模式使用拆分准则拆分所述替代对象标识符，从而随后形成常规对象标识符和附加标识符，-在存在于服务器的这个地址空间中的引用的目录中确定和常规对象标识符相关的引用，其中每个引用包括相关的其他对象的常规对象标识符，-通过根据特定模式将附加标识符与所述引用包括的所述相关的其他对象的常规对象标识符组合，而对每个所确定的引用形成替代对象标识符。OPC-UA客户端的请求可以旨在确定对所请求的替代对象标识符的引用。所述方法使用包含在所请求的替代对象标识符中的附加标识符为每个确定的引用生成替代对象标识符。因此，在回答请求时考虑客户端使用的信息模型。所述方法可以有利地应用或执行前向引用和后向引用。根据所述方法的第一实施例，所述模式规定，如果替代对象标识符的引用待确定，且该替代对象为STRING标识符类型，则使用分隔符作为拆分准则，并将在所述替代对象标识符的字符串内的所述分隔符标识为第二附加标识符部分，并且其中将所述分隔符之前的字符串部分标识为第一附加标识符部分，将所述分隔符之后的字符串部分标识为常规对象标识符，并进一步处理或者，将所述分隔符之前的字符串部分标识为常规对象标识符，将所述分隔符之后的字符串部分标识为第一附加标识符部分，并进一步处理。根据所述方法的进一步方案，所述模式规定对于每个所确定的引用，替代对象标识符也是STRING标识符类型，并且由三个部分形成，按顺序为：第一附加标识符部分、第二附加标识符部分和相应的相关的其他对象的常规对象标识符或者按顺序为：相应的相关的其他对象的常规对象标识符、第二附加标识符部分和第一附加标识符部分。根据所述方法的另一实施例，所述模式规定，如果替代对象标识符的引用待确定，且该替代对象标识符是NUMERIC标识符类型，则使用基值作为拆分准则，并且所述替代对象标识符除以基值，其中，所述除法的整数商特别是在与所述基值Base重新相乘之后作为附加标识符，而所述除法的余数作为常规对象标识符进一步处理。根据所述方法的进一步方案，所述模式规定，对于每个确定的引用，替代对象标识符也是NUMERIC标识符类型，并且通过将附加标识符和相应的相关的其他对象的常规对象标识符相加而形成。这样可以对所请求的STRING标识符类型以及NUMERIC标识符类型的对象标识符有效地确定引用。还提出一种服务器，特别是OPC-UA服务器，其被设计成用于执行根据本发明的上述方法中的至少一个。还提出一种系统，其包括一个基于OPC-UA的通信环境，所述系统具有至少一个如上所述的根据本发明的服务器和至少一个客户端，它们通过网络相互连接。最后，还提出一种计算机程序产品，其包括指令，在计算机、特别是服务器执行所述指令时，使得计算机执行根据本发明的上述方法中至少一个。为根据本发明的方法所指出的特征和优点，包括它们的实施例和进一步的实施例，也类似地适用于根据本发明的服务器，以及系统和计算机程序产品。附图说明本发明的这些和其他特征和优点也来自示例性实施例，这些实施例将在下面参考附图更详细地解释。在示意图中示出：图1示出具有基于OPC-UA的通信环境的系统；图2示出用于提供替代对象标识符的方法的第一示例；图3示出用于验证替代对象标识符的方法的第一示例；图4示出用于确定替代对象标识符的引用的方法的第一示例；图5示出用于提供替代对象标识符的方法的第二示例；图6示出用于验证替代对象标识符的方法的第二示例；图7示出用于确定替代对象标识符的引用的方法的第二示例；图8示出OPC-UA服务器的地址空间，其中控制器的组件变量被列为具有STRING标识符类型的唯一节点标识符的节点；图9示出OPC-UA服务器的地址空间，其中所述地址空间的所有命名空间或命名空间索引的目录存储为“服务器”节点的“命名空间数组”属性；图10示出用于地址空间的对象或节点的常规对象标识符和替代对象标识符的列表的第一示例，所述对象和所述节点代表控制组件“Arp.PLC.Eclr”在不同的信息模型中的变量；图11示出用于地址空间的对象或节点的常规对象标识符和替代对象标识符的列表的第二示例，所述对象和所述节点代表控制组件“Arp.PLC.Eclr”在不同的信息模型中的变量。具体实施方式图1示出了具有基于OPC-UA的通信环境K的系统的示例，所述通信环境在这里具有两个服务器S1和S2以及两个客户端C1和C2，它们通过网络N相互连接。其中所述客户端设计为OPC-UA客户端，所述服务器设计为OPC-UA服务器。所述服务器还被设计为执行根据本发明的用于提供，验证和确定替代对象标识符的引用的方法，下面将更详细地解释各个方法。所述服务器S1和S2在地址空间中将它们的信息提供给所述客户端C1和C2。图8示例性示出了OPC-UA服务器S1的地址空间的一部分。其中列出了未示出的PLCnext技术控制器的组件变量作为具有STRING标识符类型的唯一常规节点标识符的节点，至少服务器S1连接到所述控制器。图9示出了所述OPC-UA服务器S1的地址空间的另一部分，其中可以看出，所述地址空间的所有命名空间的目录或命名空间索引被存储为“服务器”节点的“命名空间数组”属性。OPC-UA标准没有指定服务器如何管理节点。假设地址空间被拆分为命名空间N，其中常规节点ID节点标识符是在标识符类型＝STRING标识符类型或标识符类型＝NUMERIC标识符类型的命名空间N中。进一步假设服务器使用被称为NodeIDArray的数组式结构来存储有效的节点标识符NodeID，并使用被称为Forward-/BackwardReferenceMap的映射式结构来存储引用，即具有对每个节点标识符NodeID的引用的节点标识符NodeID数组。然而，做出这些假设只是为了简化本发明的描述，而不是限制本发明。本发明旨在将现有地址空间，特别是在命名空间N内，扩展尺寸y，y＝1…Y，并且成本和费用较低，即无需在储存器内复制节点例，尤其是在不向节点ID数组或向前/向后引用映射添加新元素的情况下。因此，本发明使得为数据集实现Y个附加信息模型或上下文成为可能。为此，本发明提出一种在开头已经提到的新的寻址模式。在命名空间N中标识符类型＝STRING标识符类型的常规节点标识符NodeID的情况下，定义了相同标识符类型的新的或替代的节点标识符PrefixedNodeID，所述前缀节点ID如图2所示由附加标识符前缀的第一部分和附加标识符的第二部分组合或连接形成，以具有常规节点标识符NodeID的分隔符文字形式，其中前缀是具有索引y＝1:Y的前缀集合中的元素。在命名空间N中标识符类型＝NUMERIC标识符类型的常规节点标识符NodeID的情况下，定义了相同标识符类型的新的或替代的节点标识符BiasedNodeID，所述偏差节点ID如图5所示由附加标识符偏差和常规节点标识符NodeID组合或加和)形成，其中偏差是具有索引y＝1:Y的偏差集合中的元素，其中偏差是基值Base与y的乘积，其中所述基值Base大于命名空间N中所有常规节点标识符NodeID中最大的数值加1。例如，如果命名空间N包括10个具有节点标识符NodeID＝1…9的节点，则基值可以是Base＝100，因为100＞max适用，因此对于Y＝3个替代节点标识符产生偏差节点ID＝。概括地说，提供一种用于在基于OPC-UA的通信环境K内为服务器S1、S2的地址空间，特别是命名空间中的对象提供替代对象标识符的方法，其中所述服务器S1、S2地址空间中的每个对象由常规对象标识符唯一地标识，其中定义至少一个附加标识符，并存储在为所述服务器S1、S2的这个地址空间定义的附加标识符的目录中，并且通过根据特定模式将附加标识符与相应对象的常规对象标识符组合的方法，为所述服务器S1、S2地址空间中的每个对象形成也唯一地标识所述对象的替代对象标识符。在所述方法的第一实施例中，所述模式规定如果常规对象标识符是STRING标识符类型，则附加标识符也是STRING标识符类型，并且包括两个附加标识符部分，其中第一附加标识符部分是可自由定义的字符串，并且第二个附加标识符部分是可自由定义的分隔符。此外所述模式还规定，所述替代对象标识符也是STRING标识符类型，并且由所述第一附加标识符部分、所述第二附加标识符部分和相应对象的常规对象标识符三部分按这个组合顺序形成。所述方法的示例性结果如图10和图11所示。图10示出了地址空间中的对象或节点的常规对象标识符和替代对象标识符的列表，所述对象或节点表示不同信息模型中的控制组件“Arp.PLC.Eclr”的变量。一方面，定义了附加标识符“PlcOpen.Programs”，以便为程序变量提供信息模型。另一方面，定义了附加标识符“PlcOpen.GlobalVars”，以便为全局变量提供信息模型。在这两种情况下，所述附加标识符还包括分隔符“：”。图11示出了地址空间中的对象或节点的常规对象标识符和替代对象标识符的另一列表，所述对象或节点表示控制组件“Arp.PLC.Eclr”在其他信息模型中的变量。一方面，此处为用于访问这些变量历史值的信息模型定义了附加标识符“History.SessionA”，这些变量以第一采样率记录在会话A中。另一方面，为用于访问这些变量历史值的信息模型定义了附加标识符“History.SessionB”，这些变量以第二个采样率记录在会话B中。在这两种情况下，所述附加标识符还包括分隔符“：”。在根据图2、图10和图11的示例中，附加标识符被设置为常规对象标识符的前缀。然而，也可以设想将所述附加标识符设置为常规对象标识符的后缀。在所述方法的替代实施例中，所述模式规定，如果常规对象标识符是NUMERIC标识符类型，则附加标识符也是NUMERIC标识符类型并且是基值的倍数，其中基值大于服务器S1、S2地址空间中对象的所有常规对象标识符的最大值加1。所述模式还规定，所述替代对象标识符也是NUMERIC标识符类型，并且通过将附加标识符和相应对象的常规对象标识符相加形成。图3和图6显示了用于在基于OPC-UA的通信环境K中验证替代对象标识符的方法的两个示例，其中服务器S1、S2的地址空间中的每个对象由常规对象标识符唯一标识，另外还由指定至少一个替代对象唯一地标识符。通常，所述方法包括以下步骤：-从来自客户端C1、C2的请求中提取替代对象标识符前缀节点ID或偏差节点ID，-使用拆分准则根据特定模式拆分替代对象标识符，从而存在常规对象标识符节点ID和附加标识符前缀或偏差，-如果可以在服务器S1、S2的这个地址空间中存在的常规对象标识符的节点ID数组目录中确定常规对象标识符节点ID，则将所述常规对象标识符评估为有效，-如果可以在为服务器S1、S2的这个地址空间定义的附加标识符的目录前缀或偏差中确定附加标识符，则将所述附加标识符评估为有效，-如果常规对象标识符和附加标识符之前都被评估为有效，则评估替代对象标识符为有效，-如果常规对象标识符和/或附加标识符先前被评估为无效，则替代对象标识符评估为无效。根据所述方法的第一实施例，所述模式规定如果替代对象标识符是STRING标识符类型，则分隔符文字用作拆分准则，并且所述分隔符在所述替代对象标识符前缀节点ID的整个字符串中被标识为第二附加标识符部分，从而将所述分隔符之前的字符串部分标识为第一附加前缀标识符部分，将所述分隔符之后的字符串部分标识为常规对象标识符节点ID并进一步处理。在一种图中未示出的情况下，可以替代地规定，将分隔符之前的字符串部分标识为常规对象标识符并进一步处理，将分隔符之后的字符串部分标识为第一附加标识符部分并进一步处理。根据所述方法的另一个实施例，所述模式规定如果替代对象标识符是NUMERIC标识符类型，则使用基值Base作为拆分准则，并且所述替代对象标识符偏差节点ID除以所述基值Base，其中所述除法的整数商，特别是在与所述基值Base重新相乘后，被标识为附加偏差标识符并进一步处理，并且所述除法的余数被标识为常规对象标识符节点ID并进一步处理。图6没有示出所述整数商与所述基值Base的再次相乘。所述整数商本身对应于尺寸或信息模型的索引y。由于根据本发明的这种逐步验证，替代对象标识符的验证可以非常有效地进行。并且由于根据本发明为附加信息模型提供替代对象标识符仅需在附加标识符目录中输入新的附加标识符，而无需复制节点实例，所述替代对象标识符的验证几乎不需要任何额外的存储空间和计算能力或计算时间。因此，本发明可以为数据集实现Y个附加信息模型或上下文，而不需要存储空间和计算能力或计算时间增加Y+1个系数。图4和图7显示了用于确定在基于OPC-UA的通信环境K内的替代对象标识符的引用的方法的两个示例，服务器S1、S2的地址空间中的每个对象由一个常规对象标识符唯一标识，并且另外通过至少一个替代对象标识符被唯一地识别。通常，所述方法包括以下步骤：-从来自客户端C1、C2的请求中提取替代对象标识符前缀节点ID或偏差节点ID，-使用拆分准则根据特定模式拆分替代对象标识符，从而形成常规对象标识符节点ID和附加标识符前缀或偏差，-在服务器S1、S2的这个地址空间中存在的引用的目录“向前引用映射”中确定分配给常规对象标识符节点ID的引用，其中每个引用包括相关的其他对象的常规对象标识符，-通过根据特定模式将附加标识符前缀或偏差与由引用“向前引用”包括的相关的其他对象的常规对象标识符组合，为每个确定的引用“向前引用”形成替代对象标识符“前缀向前引用”或“偏差向前引用”。根据所述方法的第一实施例，所述模式规定，如果要确定其引用的替代对象标识符“前缀节点ID”是STRING标识符类型，则使用分隔符文字作为拆分准则，并且所述分隔符在替代对象标识符的字符串中被标识为第二附加标识符部分，并且其中将所述分隔符之前的字符串部分标识为第一附加前缀标识符部分，将所述分隔符之后的字符串部分标识为常规对象标识符节点ID并进一步处理。在一种图中未示出的情况下，可以替代地规定，将分隔符之前的字符串部分标识为常规对象标识符，将分隔符之后的字符串部分标识为第一附加标识符部分并进一步处理。此外，所述模式规定，对于每个确定的引用“向前引用”，替代对象标识符“前缀向前引用”也是STRING标识符类型，由第一附加标识符部分前缀，第二附加标识符部分分隔文字和相关的相应其他对象的常规对象标识符三部分按顺序组成，也可以由相关的相应其他对象的常规对象标识符，第二附加标识符部分和第一附加标识符部分三部分按顺序组成。在根据图4的示例中，附加标识符作为常规对象标识符的前缀出现。然而，也可以想到附加标识符作为常规对象标识符的后缀出现。根据所述方法的另一实施例，所述模式规定，如果要确定其引用的替代对象标识符偏差节点ID是NUMERIC标识符类型，则使用基值Base作为拆分准则，并且所述替代对象标识符除以所述基值，其中所述除法的整数商在再次乘以基值Base之后作为附加标识符偏差进一步处理，并且所述除法的余数作为常规对象标识符节点ID进一步处理。图7没有示出所述整数商与所述基值Base的重新相乘。所述整数商本身对应于尺寸或信息模型的索引y。所述模式还规定，对于每个确定的引用“向前引用”，替代对象标识符“偏差向前引用”也是NUMERIC标识符类型，并且通过将附加标识符偏差和相关的相应其他对象的常规对象标识符相加而形成。即使根据图4和图7的方法被示出和描述用于确定向前引用，其也可以用于确定向后引用。附图标记列表K基于OPC-UA的通信环境S1、S2服务器，OPC-UA服务器C1、C2客户端，OPC-UA客户端N网络。
