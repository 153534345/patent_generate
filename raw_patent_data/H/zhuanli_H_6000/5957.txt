标题title
一种基于TCP协议的客户端情况下的安全传输方法
摘要abst
一种基于TCP协议的多客户端情况下的安全传输方法，包括：S1，TCP发送客户端、TCP接收客户端分别与TCP服务端建立连接后预设用于加密和解密的salt值；S2，TCP发送客户端构建消息体并进行打包，通过SM4国密算法利用所述salt值对消息体加密；S3，在所述消息体前拼接消息头并进行打包后向TCP服务端发送消息；S4，TCP服务端接收所述消息并解析消息头，判断消息头中是否包含接收者唯一标识符，若否，则直接执行步骤S5；若是，则将消息发送给TCP接收客户端后执行步骤S5；S5，通过SM4国密算法对消息体解密后进行处理。通过上述方法，有效保证了数据安全问题，提高了消息传输的可靠性。
权利要求书clms
1.一种基于TCP协议的多客户端情况下的安全传输方法,其特征在于，包括下列步骤：S1，TCP发送客户端、TCP接收客户端分别与TCP服务端建立连接后预设用于加密和解密的salt值；若连接失败则直接结束，若连接成功则执行步骤S2；S2，TCP发送客户端构建消息体并进行打包，通过SM4国密算法利用所述salt值对消息体加密；S3，在所述消息体前拼接消息头并进行打包后向TCP服务端发送消息；S4，TCP服务端接收所述消息并解析消息头，判断消息头中是否包含接收者唯一标识符，若否，则直接执行步骤S5；若是，则将消息发送给TCP接收客户端,由接收客户端执行步骤S5；S5，通过SM4国密算法对消息体解密后进行处理。2.根据权利要求1所述的一种基于TCP协议的多客户端情况下的安全传输方法,其特征在于，步骤S2，包括：S21，TCP发送客户端通过uuid/uuid.h库获取唯一标识符，并通过linkhelp::fillBody函数构造消息体，所述唯一标识符存放于消息体中；S22，通过SM4库中的YSM4::ecb_encrypt函数使用salt值将消息体加密，并返回加密后的消息体和消息体长度。3.根据权利要求1所述的一种基于TCP协议的多客户端情况下的安全传输方法,其特征在于，步骤S3，包括：S31，使用QjsonObject封装消息头，所述消息头由消息体长度、消息体类型、接收者唯一标识符以及发送者唯一标识符进行构建；S32，将所述消息头和消息体拼接到一起，并使用QT的事件机制通过QCoreApplication::postEvent函数向TCP服务端发送消息。4.根据权利要求1所述的一种基于TCP协议的多客户端情况下的安全传输方法，其特征在于，步骤S5，包括：S51，通过SM4国密算法根据salt值将消息体进行解密；S52，通过消息体中的唯一标识符查询是否处理过消息，若否，则执行步骤S53；S53，处理消息。
说明书desc
技术领域本发明涉及协议传输技术，具体为一种基于TCP协议的多客户端情况下的安全传输方法。背景技术在现代计算机的网络中，TCP协议是最常用的传输层协议，并且被广泛应用于各种应用场景，例如web浏览、文件传输、电子邮件等。然而，由于TCP协议的本质，使它在传输的过程中无法提供足够的安全保障，使得数据容易遭受中间人攻击，数据窃听等安全威胁，为了保护TCP传输的安全性，通常采用传输层安全协议或虚拟专用网络等安全保护措施，然而，这些安全措施的实现方式和应用场景可能存在一些局限性，不一定适用所有的TCP传输请求。例如，使用TLS或VPV需要额外的配置和管理，需要安装证书、配置加密算法、处理秘钥等，对于普通用户而言可能难以理解和操作。另外，加密和解密的过程会消耗计算资源，并可能会降低网络传输的性能和效率性。因此，在多客户端的情况下，需要一种基于TCP协议的安全传输方法，可以更加有效的解决TCP传输的安全问题。发明内容为解决上述问题，本发明的目的是提供一种基于TCP协议的多客户端情况下的安全传输方法，通过使用基于国密算法加密以及唯一标识符验证TCP协议的安全传输方法，解决传统加密方法中消耗计算资源的问题。本发明提供一种基于TCP协议的多客户端情况下的安全传输方法，包括：S1，TCP发送客户端、TCP接收客户端分别与TCP服务端建立连接后预设用于加密和解密的salt值；若连接失败则直接结束，若连接成功则执行步骤S2；S2，TCP发送客户端构建消息体并进行打包，通过SM4国密算法利用所述salt值对消息体加密；S3，在所述消息体前拼接消息头并进行打包后向TCP服务端发送消息；S4，TCP服务端接收所述消息并解析消息头，判断消息头中是否包含接收者唯一标识符，若否，则直接执行步骤S5；若是，则将消息发送给TCP接收客户端,由接收客户端执行步骤S5；S5，通过SM4国密算法对消息体解密后进行处理。优选的，步骤S2，包括：S21，TCP发送客户端通过uuid/uuid.h库获取唯一标识符，并通过linkhelp::fillBody函数构造消息体，所述唯一标识符存放于消息体中；S22，通过SM4库中的YSM4::ecb_encrypt函数使用salt值将消息体加密，并返回加密后的消息体和消息体长度。优选的，步骤S3，包括：S31，使用QjsonObject封装消息头，所述消息头由消息体长度、消息体类型、接收者唯一标识符以及发送者唯一标识符进行构建；S32，将所述消息头和消息体拼接到一起，并使用QT的事件机制通过QCoreApplication::postEvent函数向TCP服务端发送消息。优选的，步骤S5，包括：S51，通过SM4国密算法根据salt值将消息体进行解密；S52，通过消息体中的唯一标识符查询是否处理过消息，若否，则执行步骤S53；S53，处理消息。本发明的有益效果：在进行数据传输时，对消息体进行了加密，由此消息头中仅暴露了消息体的长度信息。解密后消息体通唯一标识符有效保证了数据安全问题，提高了消息传输的安全性和可靠性。附图说明为了更清楚地说明本发明具体实施方式或现有技术中的技术方案，下面将对具体实施方式或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本发明的一些实施方式，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为多个TCP客户端与TCP服务端进行传输的时序图；图2为多客户端情况下进行安全传输的步骤图；图3为TCP发送客户端将消息发送到TCP服务端的流程图；图4为在进行传输时数据包的结构图；图5为TCP服务端接收到消息后进行处理的流程图；图6为TCP接收客户端接收消息后进行解密的流程图。具体实施方式下面结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述。在下面的描述中阐述了很多具体细节以便于充分理解本发明，但是本发明还可以采用其他不同于在此描述的其它方式来实施，本领域技术人员可以在不违背本发明内涵的情况下做类似推广，因此本发明不受下面公开的具体实施例的限制。由背景技术可知，传统的传输方式需要进行额外的配置和管理，即需要安装证书以及配置加密算法、处理秘钥等，对于普通的用户难以进行操作，并且在加密过程中会耗费计算资源。为了克服上述问题，本发明基于国密算法加密以及采用唯一标识符验证的TCP安全传输方法，提供了一种基于TCP协议的多客户端传输方法,能够解决传统加密和解密过程会消耗计算资源，以及低网络传输的性能和效率性的问题。参照图1所示，为多个TCP客户端与TCP服务端进行传输的时序图，首先，TCP客户端与TCP服务端提前约定好加解密的salt值，然后二者建立连接，连接后构建消息体，消息体打包好后先通过SM4国密算法将消息体中的唯一标识符和消息内容加密，得到加密的消息体长度，加密后，在消息体之前拼接消息头，消息头和消息体打包好后构成一个消息；TCP发送客户端将消息发送给TCP服务端；TCP服务端接收到消息后获取消息头，判断消息头中是否有接收者唯一标识符，若有，则传送到对应的TCP接收客户端，由对应的TCP接收客户端使用SM4国密算法解密消息体，并处理消息，若无，则TCP服务端使用SM4国密算法解密消息体，并处理消息。为了使本技术领域的人员更好的理解本申请方案，下面结合附图和实施例对本申请做进一步的详细说明。参见图2及图3所示，本申请实施例公开了一种TCP协议的多客户端情况下的安全协议传输方法，该方法包括：步骤S1，TCP发送客户端、TCP接收客户端分别与TCP服务端建立连接后预设用于加密和解密的salt值；若连接失败则直接结束，若连接成功则执行步骤S2；步骤S2，TCP发送客户端构建消息体并进行打包，通过SM4国密算法利用所述salt值对消息体加密。具体的，步骤S2，包括：步骤S21，TCP发送客户端通过uuid/uuid.h库获取唯一标识符，并通过linkhelp::fillBody函数体构造消息体，所述唯一标识符存放在消息体中；步骤S22，通过SM4库中YSM4::ecb_encrypt函数使用salt值将消息体加密，并返回加密后的消息体和消息体长度。步骤S3，在所述消息体前拼接消息头并进行打包后向TCP服务端发送消息；具体的，步骤S3，包括：步骤S31，使用QjsonObject封装消息头，所述消息头由消息体长度、消息体类型、接收者唯一标识符以及发送者唯一标识符进行构建；步骤S32，将所述消息头和消息体拼接到一起，并使用QT的事件机制通过QCoreApplication::postEvent函数向TCP服务端发送消息。参照图4所示，为消息在进行传输时数据包的结构图；数据包中的内容包括消息头和消息体，消息头包括消息体长度、消息体类型、发送者唯一标识以及接收者唯一标识符；消息体包括唯一标识符和消息内容。其中，消息头共48bit，消息体长度以及消息体类型分别为4bit，发送者唯一标识符有20bit，接收者唯一标识符有20bit。步骤S4，TCP服务端接收所述消息并解析消息头，判断消息头中是否包含接收者唯一标识符，若否，则直接执行步骤S5；若是，则将消息发送给TCP接收客户端，由接收客户端执行步骤S5；步骤S5，通过SM4国密算法对消息体解密后进行处理。具体的，步骤S5中，包括：步骤S51，通过SM4国密算法根据salt值将消息体进行解密；步骤S52，通过消息体中的唯一标识符查询是否处理过消息，若否，则执行步骤S53；步骤S53，处理消息。在本实施例中，参照图5，为TCP服务端接收消息的流程图，TCP服务端通过TCPServer::sigUPdateSever信号监听是否接收到消息，并在接收到消息后，通过QjsonObject对象解析消息的消息头，判断消息头中是否包含接收者唯一标识符receiver，若消息头中没有接收者唯一标识符receiver，则继续由TCP服务端进行处理。若消息头中有接收者唯一标识符，则根据消息头中的唯一标识符将消息发送给TCP接收客户端处理，参照图6，为TCP接收端处理消息的流程图，TCP接收客户端在接收消息后视作TCP服务端对消息进行处理。TCP服务器端或TCP客户接受端根据消息头中的消息体长度以及步骤S1确定好的salt值，通过YSM4::ecb_decrypt方法将消息解密后处理，根据消息头中Datatype参数进行不同类型的消息处理，其中，Datatype参数可事先约定好，例如，msg为普通消息、file为文件消息等。在处理时，通过QSql数据库的数据库语句根据消息体中的uuid查询是否处理过该条消息，如果没有处理过则重新开始处理；如果处理过，需要确认之前对于该消息的处理位置，处理位置根据消息类型不同，确定方法不同，如msg普通消息判断消息是否显示成功，如果没有则重新开始处理，如果显示成功则放弃该消息；file消息类型根据接收者接收文件后的接收大小，从文件未接收完毕的末尾开始处理，如file已处理完毕，则放弃该消息。本发明的有益效果如下：1.通过基于TCP协议的多客户端情况下引入SM4国密对称算法对消息体进行加密和解密，并且在消息体中有唯一标识符uuid，则可以根据uuid来判断消息是否为二次处理；消息头中仅暴露了消息体的长度信息；有效保证了数据安全问题，保证了消息的安全性和可靠性。2.根据消息头中的receiver直接发送给接收者处理，从而不会在服务器端保存消息数据。3.通过经济、高效的部署安全传输方案，可以广泛的应用于各种TCP传输场景，例如数据中心、云计算、物联网等，提高网络传输的性能和效率性。虽然本发明已利用上述较佳实施例进行说明，然其并非用以限定本发明的保护范围，任何本领域技术人员在不脱离本发明的精神和范围之内，相对上述实施例进行各种变动与修改仍属本发明所保护的范围，因此本发明的保护范围以权利要求书所界定的为准。
