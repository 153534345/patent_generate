标题title
基于嵌入式设备的FTP文件系统软件交叉调试方法及系统
摘要abst
本发明公开了一种基于嵌入式设备的FTP文件系统软件交叉调试方法及系统，涉及嵌入式设备交叉调试领域，本发明基于嵌入式实时操作系统，实现标准网络服务，通过网络实现GDB代理，实现GDB调试，从而提供一种适用于多类嵌入式设备的FTP文件系统软件交叉调试方法及系统。该方法及系统能够将网络协议栈、GDB组件和GDB server组件统一管理，通过对应的交叉编译工具链编译后，同一套网络协议栈、GDB组件和GDB server组件将能够应用于多类嵌入式设备，大大降低了开发工作量，规避了分别交叉编译系统、GDB组件和GDB server组件可能存在的编译问题，降低了交叉编译工具链的版本匹配与版本管理的压力。
权利要求书clms
1.一种基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，包括以下步骤：S1、基于嵌入式实时操作系统提供的API接口，移植LwIP网络协议栈；S2、采用YDI接口标准，向嵌入式设备移植yaffs2文件系统作为flash文件系统；S3、构建GDB组件；其中GDB组件包括GDB中断处理模块、GDB命令处理模块和GDB调试通信模块；S4、向嵌入式设备移植TFTP服务组件，并将其集成到yaffs2文件系统中；S5、统一编译包括LwIP网络协议栈、yaffs2文件系统、GDB组件、GDB server组件在内的FTP文件系统及软件交叉调试工具；S6、将FTP文件系统及软件交叉调试工具应用到嵌入式设备上，利用GDB server组件和GDB组件开展软件交叉调试工作。2.根据权利要求1所述的基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，步骤S1中移植LwIP网络协议栈包括移植LwIP网络协议栈的系统配置文件LwIP SystemConfig部分和移植LwIP的硬件驱动抽象层。3.根据权利要求2所述的基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，移植LwIP网络协议栈的系统配置文件LwIP System Config部分的具体方法包括以下子步骤：A1、创建tcp ip stack线程，并调用lwip init函数初始化LwIP网络协议栈；A2、申请一个网络接口，设置其默认的IP地址、子网掩码和网关，并将该网络接口添加到接口列表；A3、将步骤A2的网络接口注册为默认网络接口并启动；A4、通过DHCP自动获取IP地址。4.根据权利要求2所述的基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，移植LwIP的硬件驱动抽象层的具体方法为：设置以太网的输入输出、时钟、多址接入信道、直接内存访问，并创建读取以太网消息的线程。5.根据权利要求1所述的基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，步骤S2的具体方法包括以下子步骤：S2-1、采用YDI接口标准，移植实现应用调用yaffs2的接口；S2-2、移植实现yaffs2文件系统和嵌入式实时操作系统交互所使用的通讯接口；S2-3、移植实现yaffs2文件系统和Flash设备的交互接口；S2-4、移植实现yaffs2文件系统和嵌入式实时操作系统一起工作的多任务环境下所需的接口，包括信号量全局变量检查接口和内存区域检查接口；S2-5、修改嵌入式实时操作系统配置文件，配置yaffs2文件系统所需的RAM资源。6.根据权利要求1所述的基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，步骤S6的具体方法为：将FTP文件系统及软件交叉调试工具中的GDB server组件、GDB中断处理模块和GDB命令处理模块应用到嵌入式设备上，将FTP文件系统及软件交叉调试工具中的GDB调试通信模块同时应用在嵌入式设备和上位机上，并进行如下操作：F1、启动嵌入式设备，并启动嵌入式设备的网络服务；F2、启动嵌入式设备的GDB server组件；F3、启动上位机，并启动上位机的网络服务；F4、在上位机中获取待交叉调试的应用软件；F5、在上位机中通过GDB组件连接嵌入式设备的GDB server组件；F6、在上位机中通过GDB组件开展嵌入式设备的软件交叉调试工作。7.根据权利要求6所述的基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，GDB中断处理模块的具体操作过程为：B1、实时监测触发调试的中断信号，并在收到中断信号时将其保存在寄存器，进入步骤B2；B2、查找断点向量表中是否存在与中断信号相对应的断点，若是则将控制权转交给GDBserver组件进行调试代理，并在调试代理程序结束后恢复寄存器、继续原有操作系统的处理；否则直接恢复寄存器、继续原有嵌入式实时操作系统的处理；GDB命令处理模块的具体操作过程为：C1、调用命令接收函数monitor接收来自上位机的数据包；数据包包括命令和信息；命令包括寄存器相关命令、内存相关命令和程序控制命令；C2、通过串口接收函数getmsg向上位机返回即将处理的命令；C3、解析命令：解析数据包中命令开始符号与命令结束符号之间的一个或多个用于组成要发送的消息的ASCII字节；C4、格式转换：将解析得到的ASCII字节转换为可识别命令；C5、处理可识别命令；C6、判断是否需要向调试前端发送返回信息，若是则形成相应的可识别命令并调用putmsg函数向调试前端发送返回信息，返回步骤C5；否则进入步骤C7；C7、判断是否继续接收命令并进行处理，若是则返回步骤C2；否则退回到GDB中断处理模块。8.根据权利要求7所述的基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，通过GDB调试通信模块向嵌入式设备发送数据的过程为：D1、向嵌入式设备上发送表示消息开始发送的字符；D2、通过ASCII码对本次通信发送流程需要发送的消息进行传输，直至字符串长度len为0，判定当前发送流程结束；其中字符串长度len为当前剩余待发送数据的总数；D3、向嵌入式设备发送代表发送流程结束的符号；D4、向嵌入式设备发送验证码，即命令的校验和；并判断是否接收到来自嵌入式设备的表示校验成功的字符，若是则判定通信成功，结束本次通信流程；否则返回步骤D1。9.根据权利要求7所述的基于嵌入式设备的FTP文件系统软件交叉调试方法，其特征在于，嵌入式设备通过GDB调试通信模块接收数据的过程为：E1、接收来自上位机的字符，并将其存入变量ch中；E2、判断变量ch中存入的字符是否为表示消息开始发送的字符，若是则继续接收来自上位机的字符，并进入步骤E3；否则返回步骤E1；E3、判断变量ch中最新存入的字符是否为代表发送流程结束的符号，若是则判定本次数据传输结束，验证码传输开始，进入步骤E5；否则进入步骤E4；E4、更新变量checksum的值并将变量ch存入对应的缓存空间，同时将缓存计数+1，返回步骤E3；E5、将验证码存入变量xmitcsum中，判断接收到的验证码与变量checksum 的值是否相等，若相等则判定成功完成数据接收，并向上位机返回表示校验成功的字符；否则向上位机返回表示通信失败的字符，并返回“checksum=0”以及“count=0”的信息到上位机，返回步骤E1。10.一种基于权利要求1~9任一所述的基于嵌入式设备的FTP文件系统软件交叉调试方法的系统，其特征在于，包括：LwIP网络协议栈移植组件，用于基于嵌入式实时操作系统提供的API接口，移植LwIP网络协议栈；yaffs2文件系统移植组件，用于采用YDI接口标准，移植yaffs2文件系统作为flash文件系统；GDB组件构建模块，用于构建GDB中断处理模块、GDB命令处理模块和GDB调试通信模块；TFTP服务组件组件，用于移植TFTP服务组件，并将其集成到yaffs2文件系统中；统一编译组件，用于统一编译包括LwIP网络协议栈、yaffs2文件系统、GDB组件、GDBserver组件在内的FTP文件系统及软件交叉调试工具；FTP文件系统及软件交叉调试组件，用于将FTP文件系统及软件交叉调试工具应用到嵌入式设备上，利用GDB server组件和GDB组件开展软件交叉调试工作。
说明书desc
技术领域本发明涉及嵌入式设备交叉调试领域，具体涉及一种基于嵌入式设备的FTP文件系统软件交叉调试方法及系统。背景技术当前嵌入式领域的交叉调试方法主要有以下四种方式：ROM仿真、在线仿真、片上调试、调试桩和调试服务器。ROM仿真ROM仿真是指将ROM monitor小程序存储在作为目标机的嵌入式设备的ROM或Flash中，用户在开发运行在嵌入式设备上的嵌入式程序时，可以通过ROM monitor获得开发过程中的辅助测试与调试功能。ROM Monitor也有缺点，比如需要占用单片机的程序空间和串口资源，当ROM Monitor占用CPU时，应用程序不响应外部的中断，因此不便调试有时间特性的程序。在线仿真在线仿真器取代了目标机上的CPU进行工作，功能与目标机处理器完全一致，而且它能产生外部电路所需信号，并且捕获外部所有信号。满足用户查看处理器内部数据并控制CPU运行的需求。主机调试器通过在线仿真器控制目标机上的用户程序。在线仿真器具备许多优点，如不消耗目标系统资源和对硬件断点的支持等。同时，在线仿真器也存在着典型的缺陷，如开发成本高，价格昂贵，可扩展性差。在线仿真器通常提供固定的处理速度，在目标机处理器速度提高时，其速度很难扩展。片上调试片上调试通过在目标机微处理器内部嵌入控制模块，由该模块接管目标机的中断和异常处理，其调试形式与ROM监控基本一致。用户可设置需要进入调试状态的中断和异常。进入调试状态后，内嵌控制模块向外部通信接口发送信号，通知监听该接口的主机调试器，主机调试器通过该内嵌模块控制目标机，进行内存/寄存器读写操作，控制被调试程序的运行。片上调试方式的主要缺点是：调试的实时性不如在线仿真强，不支持非干扰调试查询，CPU必须具有片上调试功能，片上调试存在各种实现且标准不统一。调试桩和调试服务器调试桩和调试服务器是一小段驻留在目标机上的代码。采用这种调试方式进行交叉调试需要在目标机上运行调试桩和被调试程序，宿主机的调试器和目标机的调试桩使用远程调试协议进行连接。与ROM Monitor调试方式不同的是，ROM Monitor程序是驻留在目标机的ROM中的，系统复位时首先被执行，然后下载被调试程序进行调试；而调试桩和调试服务器不是固化在目标机上的，需要先通过某种工具将它们下载到目标机中，因此调试桩和调试服务器的使用更加灵活，能够和系统启动过程解耦，对系统启动和系统运行的影响更小。由于调试桩往往是被设计用来独立运行于目标板上的，不需要系统软件环境的支持，因此它必须与被调试程序编译、连接在一起运行，一般用于底层系统软件的调试；而调试服务器通常作为目标机系统上的一个应用程序运行，一般用于应用软件的调试。对于嵌入式设备而言，软件交叉调试可以采用上述调试服务器的方式进行。由于嵌入式设备系统资源有限，因此大部分软件调试无法在目标设备上进行，需要采用交叉调试的方式尽可能确保开发者、测试者或使用者所调试的软件能够在目标设备上正常运行，同时减小调试过程对嵌入式设备及其系统的影响。调试服务器的使用需要嵌入式系统支持网络，需要嵌入式设备的系统能够支持对宿主机/上位机发送过来的调试命令的解析与处理。现有的应用于应用软件调试的调试服务器，以GNU调试器gdb为例，其主要过程如下：1)使用buildroot或其他工具编译GDB server服务和GDB应用；2)通过网卡驱动适配等方式使嵌入式操作系统支持网络服务功能；3)嵌入式设备上电，启动运行于嵌入式设备的嵌入式操作系统；4)宿主机/上位机上电启动；5)为成功启动嵌入式操作系统的嵌入式设备配置网络服务；6)通过网络，将编译好的GDB server服务上传到嵌入式设备；7)通过网络，将编译好的GDB上传到宿主机/上位机；8)嵌入式设备，通过命令行等方式启动GDB server服务；9)通过网络，上传待调试的应用程序到宿主机/上位机；10)宿主机/上位机，通过命令行等方式启动GDB；11)宿主机/上位机，通过GDB工具输入命令连接到嵌入式设备的GDB server服务端；12)宿主机/上位机，通过命令行输入GDB调试命令发送至嵌入式设备的GDBserver服务端；13)嵌入式设备，接收到来自宿主机/上位机的GDB调试命令，进行相应处理并返回处理结果；14)宿主机/上位机收到嵌入式设备的GDB server返回的处理结果，调试完成，宿主机/上位机通过GDB命令断开与GDB server 的连接；15)嵌入式设备，通过命令行关闭GDB server服务；宿主机/上位机退出GDB应用。上述流程存在以下缺点：依赖目标嵌入式设备提供可用的网络服务，嵌入式设备使用GDB server服务之前，需要确保其网络服务可用，因此使用GDB server之前可能存在较大的网络协议栈开发工作；提供了网络服务的嵌入式设备的系统大多不具有强实时性，不适用于要求实时性的嵌入式场景； GDB server和GDB单独编译，并没有和嵌入式网络文件系统配套编译，可能存在与交叉编译相关的潜在问题，不能确保其可用性； GDB server和GDB单独编译，增加了交叉编译工具链的版本匹配与版本管理相关的工作。综上所述，受限于嵌入式设备有限的资源条件和复杂的设备类型与应用场景，运行在嵌入式设备上的调试服务器的通用性、易用性与资源低占用就成为了调试服务器开发与适配工作的重点。发明内容针对现有技术中的上述不足，本发明提供的基于嵌入式设备的FTP文件系统软件交叉调试方法及系统解决了现有方法对嵌入式设备进行调试过程中的通用性和易用性较差的问题。为了达到上述发明目的，本发明采用的技术方案为：提供一种基于嵌入式设备的FTP文件系统软件交叉调试方法，其包括以下步骤：S1、基于嵌入式实时操作系统提供的API接口，移植LwIP网络协议栈；S2、采用YDI接口标准，向嵌入式设备移植yaffs2文件系统作为flash文件系统；S3、构建GDB组件；其中GDB组件包括GDB中断处理模块、GDB命令处理模块和GDB调试通信模块；S4、向嵌入式设备移植TFTP服务组件，并将其集成到yaffs2文件系统中；S5、统一编译包括LwIP网络协议栈、yaffs2文件系统、GDB组件、GDB server组件在内的FTP文件系统及软件交叉调试工具；S6、将FTP文件系统及软件交叉调试工具应用到嵌入式设备上，利用GDB server组件和GDB组件开展软件交叉调试工作。提供一种基于嵌入式设备的FTP文件系统软件交叉调试系统，其包括：LwIP网络协议栈移植组件，用于基于嵌入式实时操作系统提供的API接口，移植LwIP网络协议栈；yaffs2文件系统移植组件，用于采用YDI接口标准，移植yaffs2文件系统作为flash文件系统；GDB组件构建模块，用于构建GDB中断处理模块、GDB命令处理模块和GDB调试通信模块；TFTP服务组件组件，用于移植TFTP服务组件，并将其集成到yaffs2文件系统中；统一编译组件，用于统一编译包括LwIP网络协议栈、yaffs2文件系统、GDB组件、GDB server组件在内的FTP文件系统及软件交叉调试工具；FTP文件系统及软件交叉调试组件，用于将FTP文件系统及软件交叉调试工具应用到嵌入式设备上，利用GDB server组件和GDB组件开展软件交叉调试工作。本发明的有益效果为：本发明基于嵌入式实时操作系统，实现标准网络服务，通过网络实现GDB代理，实现GDB调试，从而提供一种适用于多类嵌入式设备的FTP文件系统软件交叉调试方法及系统。该方法及系统能够将网络协议栈、GDB组件和GDB server组件统一管理，通过对应的交叉编译工具链编译后，同一套网络协议栈、GDB组件和GDB server组件将能够应用于多类嵌入式设备，大大降低了开发工作量，规避了分别交叉编译系统、GDB组件和GDB server组件可能存在的编译问题，降低了交叉编译工具链的版本匹配与版本管理的压力。附图说明图1为本方法的流程示意图；图2为移植yaffs2文件系统作为flash文件系统中重点需要实现的接口示意图；图3为GDB中断处理模块的操作流程图；图4为GDB命令处理模块的操作流程图；图5为通过GDB调试通信模块向嵌入式设备发送数据的流程图；图6为嵌入式设备通过GDB调试通信模块接收数据的流程图；图7为移植工作完成后的系统整体框图；图8为实施例中本方法以复旦微FMQL10S400嵌入式硬件设备为例的交叉调试流程图。具体实施方式下面对本发明的具体实施方式进行描述，以便于本技术领域的技术人员理解本发明，但应该清楚，本发明不限于具体实施方式的范围，对本技术领域的普通技术人员来讲，只要各种变化在所附的权利要求限定和确定的本发明的精神和范围内，这些变化是显而易见的，一切利用本发明构思的发明创造均在保护之列。如图1所示，该基于嵌入式设备的FTP文件系统软件交叉调试方法包括以下步骤：S1、基于嵌入式实时操作系统提供的API接口，移植LwIP网络协议栈；S2、采用YDI接口标准，向嵌入式设备移植yaffs2文件系统作为flash文件系统；S3、构建GDB组件；其中GDB组件包括GDB中断处理模块、GDB命令处理模块和GDB调试通信模块；S4、向嵌入式设备移植TFTP服务组件，并将其集成到yaffs2文件系统中；S5、统一编译包括LwIP网络协议栈、yaffs2文件系统、GDB组件、GDB server组件在内的FTP文件系统及软件交叉调试工具；S6、将FTP文件系统及软件交叉调试工具应用到嵌入式设备上，利用GDB server组件和GDB组件开展软件交叉调试工作。步骤S1中移植LwIP网络协议栈包括移植LwIP网络协议栈的系统配置文件LwIPSystem Config部分和移植LwIP的硬件驱动抽象层。移植LwIP网络协议栈的系统配置文件LwIP System Config部分的具体方法包括以下子步骤：A1、创建tcp ip stack线程，并调用lwip init函数初始化LwIP网络协议栈；A2、申请一个网络接口，设置其默认的IP地址、子网掩码和网关，并将该网络接口添加到接口列表；A3、将步骤A2的网络接口注册为默认网络接口并启动；A4、通过DHCP自动获取IP地址。移植LwIP的硬件驱动抽象层的具体方法为：设置以太网的输入输出、时钟、多址接入信道、直接内存访问，并创建读取以太网消息的线程。在具体实施过程中，以嵌入式实时操作系统中的FreeRTOS为例，它为LwIP协议栈提供了Mutex、Mail box和Create Thread等API接口，因此我们基于上述接口及FreeRTOS的API接口实现模板开展具体的移植工作，从而使得本发明能够在嵌入式实时操作系统中使用。步骤S2的具体方法包括以下子步骤：S2-1、采用YDI接口标准，移植实现应用调用yaffs2的接口；S2-2、移植实现yaffs2文件系统和嵌入式实时操作系统交互所使用的通讯接口；S2-3、移植实现yaffs2文件系统和Flash设备的交互接口；重点需要实现的接口如图2所示；S2-4、移植实现yaffs2文件系统和嵌入式实时操作系统一起工作的多任务环境下所需的接口，包括信号量全局变量检查接口和内存区域检查接口；S2-5、修改嵌入式实时操作系统配置文件，配置yaffs2文件系统所需的RAM资源。步骤S6的具体方法为：将FTP文件系统及软件交叉调试工具中的GDB server组件、GDB中断处理模块和GDB命令处理模块应用到嵌入式设备上，将FTP文件系统及软件交叉调试工具中的GDB调试通信模块同时应用在嵌入式设备和上位机上，并进行如下操作：F1、启动嵌入式设备，并启动嵌入式设备的网络服务；F2、启动嵌入式设备的GDB server组件；F3、启动上位机，并启动上位机的网络服务；F4、在上位机中获取待交叉调试的应用软件；F5、在上位机中通过GDB组件连接嵌入式设备的GDB server组件；F6、在上位机中通过GDB组件开展嵌入式设备的软件交叉调试工作。在具体实施过程中，GDB组件包括运行在上位机的部分和运行在嵌入式设备的部分。GDB server组件运行在嵌入式设备，但是它只是一个服务端，用于确保上位机和嵌入式设备的顺利连接，确保上位机能够通过GDB server组件连接到嵌入式设备；而在嵌入式设备上的具体处理，是由运行在嵌入式设备上的GDB组件来实现的。如图3所示，GDB中断处理模块的具体操作过程为：B1、实时监测触发调试的中断信号，并在收到中断信号时将其保存在寄存器，进入步骤B2；B2、查找断点向量表中是否存在与中断信号相对应的断点，若是则将控制权转交给GDB server组件进行调试代理，并在调试代理程序结束后恢复寄存器、继续原有操作系统的处理；否则直接恢复寄存器、继续原有嵌入式实时操作系统的处理。在具体实施过程中，GDB中断处理模块用于负责处理运行中的异常，在中断信号到来时将控制权转交给GDB server组件进行调试代理，并在GDB server组件调试代理完成后将控制权移交给嵌入式实时操作系统。如图4所示，GDB命令处理模块的具体操作过程为：C1、调用命令接收函数monitor接收来自上位机的数据包；数据包包括命令和信息；命令包括寄存器相关命令、内存相关命令和程序控制命令；C2、通过串口接收函数getmsg向上位机返回即将处理的命令；C3、解析命令：解析数据包中命令开始符号与命令结束符号之间的一个或多个用于组成要发送的消息的ASCII字节；C4、格式转换：将解析得到的ASCII字节转换为可识别命令；C5、处理可识别命令；C6、判断是否需要向调试前端发送返回信息，若是则形成相应的可识别命令并调用putmsg函数向调试前端发送返回信息，返回步骤C5；否则进入步骤C7；C7、判断是否继续接收命令并进行处理，若是则返回步骤C2；否则退回到GDB中断处理模块。在具体实施过程中，GDB命令处理模块用于在调试处理程序中处理各调试命令，包括单步、多步、设置断点、读取内存和感知操作系统。如图5所示，通过GDB调试通信模块向嵌入式设备发送数据的过程为：D1、向嵌入式设备上发送表示消息开始发送的字符；D2、通过ASCII码对本次通信发送流程需要发送的消息进行传输，直至字符串长度len为0，判定当前发送流程结束；其中字符串长度len为当前剩余待发送数据的总数；D3、向嵌入式设备发送代表发送流程结束的符号；D4、向嵌入式设备发送验证码，即命令的校验和；并判断是否接收到来自嵌入式设备的表示校验成功的字符，若是则判定通信成功，结束本次通信流程；否则返回步骤D1。如图6所示，嵌入式设备通过GDB调试通信模块接收数据的过程为：E1、接收来自上位机的字符，并将其存入变量ch中；E2、判断变量ch中存入的字符是否为表示消息开始发送的字符，若是则继续接收来自上位机的字符，并进入步骤E3；否则返回步骤E1；E3、判断变量ch中最新存入的字符是否为代表发送流程结束的符号，若是则判定本次数据传输结束，验证码传输开始，进入步骤E5；否则进入步骤E4；E4、更新变量checksum的值并将变量ch存入对应的缓存空间，同时将缓存计数+1，返回步骤E3；E5、将验证码存入变量xmitcsum中，判断接收到的验证码与变量checksum 的值是否相等，若相等则判定成功完成数据接收，并向上位机返回表示校验成功的字符；否则向上位机返回表示通信失败的字符，并返回“checksum=0”以及“count=0”的信息到上位机，返回步骤E1。移植工作完成后的系统整体框图如图7所示。该基于嵌入式设备的FTP文件系统软件交叉调试系统包括：LwIP网络协议栈移植组件，用于基于嵌入式实时操作系统提供的API接口，移植LwIP网络协议栈；yaffs2文件系统移植组件，用于采用YDI接口标准，向嵌入式设备移植yaffs2文件系统作为flash文件系统；GDB组件构建模块，用于构建GDB中断处理模块、GDB命令处理模块和GDB调试通信模块；TFTP服务组件组件，用于向嵌入式设备移植TFTP服务组件，并将其集成到yaffs2文件系统中；统一编译组件，用于统一编译包括LwIP网络协议栈、yaffs2文件系统、GDB组件、GDB server组件在内的FTP文件系统及软件交叉调试工具；FTP文件系统及软件交叉调试组件，用于将FTP文件系统及软件交叉调试工具应用到嵌入式设备上，利用GDB server组件和GDB组件开展软件交叉调试工作。在本发明的一个实施例中，以复旦微FMQL10S400嵌入式硬件设备为例，本发明提出的一种基于嵌入式设备的FTP文件系统软件交叉调试工具及方法的工作流程如图8所示。上述流程与现有技术的软件交叉调试流程对比，主要差异在于运行GDB组件和GDB server组件的嵌入式设备的网络协议栈实现与文件系统环境。复旦微FMQL10S400设备通过本发明提出的网络协议栈、yaffs文件系统、GDB组件、TFTP服务组件以及组件统一编译这五个步骤，实现了GDB组件和GDB server组件作为软件交叉调试工具集成到网络文件系统中的功能，实现了GDB组件和GDB server组件在嵌入式实时操作系统下的运行，提升了FTP文件系统交叉调试工具在不同嵌入式设备上的通用性，规避了分别编译可能带来的编译问题，降低了网络协议栈、GDB组件/GDB server工具以及交叉编译工具链在版本匹配与版本管理方面的压力。具体来说，现有方法通过网卡驱动适配等方式使嵌入式操作系统支持网络服务功能，并不采用统一的网络协议栈；本方法移植LwIP网络协议栈，采用了统一的网络协议栈。现有方法各个嵌入式板卡使用不同的文件系统环境，需要根据文件系统环境适配GDB组件和GDB server的可用性；本方法移植yaffs2文件系统，无需根据文件系统环境适配GDBserver的可用性。现有技术使用buildroot或其他工具编译单独GDB server服务和GDB应用；本方法统一编译包括LwIP网络协议栈、yaffs2文件系统、GDB组件、GDB server这些组件在内的FTP文件系统及软件交叉调试工具，解决了通用性和易用性较差的问题。综上所述，本发明提出的网络协议栈、GDB组件和GDB server将能够应用于多类嵌入式设备，大大降低开发工作量；本发明适配了嵌入式实时操作系统，能够在有强实时性要求的嵌入式场景下使用；本发明能够将网络协议栈、GDB组件和GDB server工具统一管理，通过对应的交叉编译工具链编译后，规避了分别交叉编译系统、GDB组件和GDB server可能存在的编译问题，降低了交叉编译工具链的版本匹配与版本管理的压力。
