标题title
日程生成方法及装置、终端、存储介质
摘要abst
本申请实施例提供一种日程生成方法及装置、终端、存储介质。本申请实施例提供的日程生成方法，包括：在实时渲染画面的过程中，基于渲染指令确定渲染过程中的时间信息及对应的绘制区域；根据被选取的所述绘制区域确定对应的时间信息，根据所述对应的时间信息生成日程事件。可以在实时渲染画面的过程中，基于渲染指令确定存储渲染过程中的时间信息及对应的绘制区域，进而根据用户所选取的绘制区域确定相应的时间信息，进而根据该时间信息生成日程事件。解决了现有技术中存在的不能基于渲染流生成日程事件的问题，并且可以在不退出当前渲染画面的情况下，直接进行上述日程事件生成的操作，实现了日程生成操作的便捷性以及灵活性。
权利要求书clms
1.一种日程生成方法，其特征在于，包括：在实时渲染画面的过程中，基于渲染指令确定渲染过程中的时间信息及对应的绘制区域；根据被选取的所述绘制区域确定对应的时间信息，根据所述对应的时间信息生成日程事件。2.根据权利要求1所述的方法，其特征在于，所述在实时渲染画面的过程中，基于渲染指令确定渲染过程中的时间信息及对应的绘制区域的过程包括：在实时渲染画面的过程中，筛选出当前帧画面的渲染指令中的目标类型渲染指令，并确定所述目标类型渲染指令中是否包含时间信息，若是，则将所述时间信息和对应的绘制区域存储在预存区。3.根据权利要求2所述的方法，其特征在于，将所述时间信息和对应的绘制区域存储在预存区包括：以当前帧画面渲染过程中确定的所述时间信息和对应的绘制区域替换所述预存区中的相应数据。4.根据权利要求2所述的方法，其特征在于，在所述根据被选取的绘制区域确定对应的时间信息，根据所述对应的时间信息生成日程事件的过程之前，还包括：确定选取区域；确定所述预存区中与所述选取区域相匹配的绘制区域，并将所述相匹配的绘制区域作为所述被选取的绘制区域。5.根据权利要求4所述的方法，其特征在于，在所述确定选取区域前，所述方法还包括：获取操作指令；确定所述操作指令中是否包含开始选取区域的信息，若是，则触发所述确定选取区域的操作。6.根据权利要求5所述的方法，其特征在于，所述确定所述预存区中与所述选取区域相匹配的绘制区域包括：将所述预存区中相对于所述选取区域的重叠面积比超过预设值的绘制区域作为与所述选取区域相匹配的绘制区域。7.根据权利要求4所述的方法，其特征在于，所述根据所述对应的时间信息生成日程事件的过程包括：生成日程描述编辑界面；获取所述日程描述编辑界面中的文字，并根据所述文字和所述对应的时间信息生成日程事件。8.根据权利要求1所述的方法，其特征在于，所述渲染指令为OpenGL指令或Vukan指令。9.一种日程生成装置，其特征在于，所述装置包括：处理器和存储器，所述存储器用于存储至少一条指令，所述指令由所述处理器加载并执行时以实现如权利要求1-8中任意一项所述的日程生成方法。10.一种终端，其特征在于，所述终端包括权利要求9所述的日程生成装置。11.一种计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1-8中任意一项所述的日程生成方法。
说明书desc
技术领域本申请涉及图像处理技术领域，尤其涉及一种日程生成方法及装置、终端、存储介质。背景技术现有技术中，高品质画面是通过实时渲染技术所生成的，例如游戏场景、动漫画面，其中的时间信息都是由图像表示的，以手机游戏为例，其中有很多时间进度的事件，比如游戏中角色升级完成还需要xx天xx小时，距离游戏某活动开始还有xx天xx小时，这些时间是真实的时间，玩家可能忙于其它事情极易错过该时间。为避免用户错过该时间，可以创建相应日程以到期提醒用户，而现有技术中是从短信、邮件以及语音信息中获取日程信息并加入到日历中的，并不能基于渲染画面生成关于时间信息的日程信息，若用户相应基于游戏内的时间信息创建相应日程事件还需退出游戏通过日历程序手动输入时间信息，该过程操作繁琐，并且占用用户的游戏时间。发明内容本申请实施例提供一种日程生成方法及装置、终端、存储介质，可以在实时渲染画面的过程中，基于渲染指令确定存储渲染过程中的时间信息及对应的绘制区域，进而根据用户所选取的绘制区域确定相应的时间信息，进而根据该时间信息生成日程事件。解决了现有技术中存在的不能基于渲染流生成日程事件的问题，并且可以在不退出当前渲染画面的情况下，直接进行上述日程事件生成的操作，实现了日程生成操作的便捷性以及灵活性。本申请实施例提供一种日程生成方法，包括：在实时渲染画面的过程中，基于渲染指令确定渲染过程中的时间信息及对应的绘制区域；根据被选取的绘制区域确定对应的时间信息，根据对应的时间信息生成日程事件。进一步地，在实时渲染画面的过程中，基于渲染指令确定渲染过程中的时间信息及对应的绘制区域的过程包括：在实时渲染画面的过程中，筛选出当前帧画面的渲染指令中的目标类型渲染指令，并确定目标类型渲染指令中是否包含时间信息，若是，则将时间信息和对应的绘制区域存储在预存区。进一步地，将时间信息和对应的绘制区域存储在预存区包括：以当前帧画面渲染过程中确定的时间信息和对应的绘制区域替换预存区中的相应数据。进一步地，在根据被选取的绘制区域确定对应的时间信息，根据对应的时间信息生成日程事件的过程之前，还包括：确定选取区域；确定预存区中与选取区域相匹配的绘制区域，并将相匹配的绘制区域作为被选取的绘制区域。进一步地，在确定选取区域前，方法还包括：获取操作指令；确定操作指令中是否包含开始选取区域的信息，若是，则触发确定选取区域的操作。进一步地，确定预存区中与选取区域相匹配的绘制区域包括：将所述预存区中相对于选取区域的重叠面积比超过预设值的绘制区域作为与选取区域相匹配的绘制区域。进一步地，根据对应的时间信息生成日程事件的过程包括：生成日程描述编辑界面；获取日程描述编辑界面中的文字，并根据文字和对应的时间信息生成日程事件。进一步地，渲染指令为OpenGL指令或Vukan指令。本申请实施例还提供一种日程生成装置，装置包括：处理器和存储器，存储器用于存储至少一条指令，指令由处理器加载并执行时以实现上述日程生成方法。本申请实施例还提供一种终端，该终端包括上述日程生成装置。本申请实施例还提供一种计算机可读存储介质，其上存储有计算机程序，计算机程序被处理器执行时实现上述日程生成方法。通过上述技术方案，可以在实时渲染画面的过程中，基于渲染指令确定存储渲染过程中的时间信息及对应的绘制区域，进而根据用户所选取的绘制区域确定相应的时间信息，进而根据该时间信息生成日程事件。解决了现有技术中存在的不能基于渲染流生成日程事件的问题，并且可以在不退出当前渲染画面的情况下，直接进行上述日程事件生成的操作，实现了日程生成操作的便捷性以及灵活性。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作一简单地介绍，显而易见地，下面描述中的附图是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。图1A为本申请实施例提供的确定时间信息及对应的绘制区域的示意图；图1B为本申请实施例提供的预存区示意图；图1C为本申请实施例提供的显示界面时间进度事件示意图；图2为本申请实施例提供的日程事件生成示意图；图3为本申请实施例提供的选取区域示意图；图4为本申请实施例提供的添加日程事件的日历示意图；图5为本申请实施例提供的终端执行框架图；图6为本申请实施例提供的日程生成装置的结构示意图。具体实施方式为使本申请实施例的目的、技术方案和优点更加清楚，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在没有作出创造性劳动前提下所获得的所有其他实施例，都属于本申请保护的范围。本申请实施例提供的该日程生成方法可以包括：步骤01：在实时渲染画面的过程中，基于渲染指令确定渲染过程中的时间信息及对应的绘制区域；步骤02：根据被选取的绘制区域确定对应的时间信息，根据对应的时间信息生成日程事件。图1A示出了本申请实施例提供的确定时间信息及对应的绘制区域的示意图，如图1A所示，上述步骤01中涉及的日程生成方法中渲染过程中的时间信息及对应的绘制区域可以通过以下具体步骤确定：步骤101：一帧画面开始渲染；步骤102：确定当前帧画面的渲染指令中是否包括目标类型渲染指令，若是，进入步骤103，若否，则进入步骤105；步骤103：确定目标类型渲染指令中是否包含时间信息，若是，则进入步骤104，若否，则进入步骤105；步骤104：将渲染指令中的时间信息以及对应的绘制区域存储在如图1B所示的预存区01中；进入步骤105：等待此帧画面渲染结束。其中，该步骤101～105用于在一帧画面开始渲染后，确定当前帧画面渲染的渲染指令中是否包括目标类型渲染指令，具体地，该目标类型渲染指令可以为文本渲染指令，若当前帧画面的渲染指令中包括文本渲染指令，进一步地确定每个上述文本渲染指令中是否包含时间信息，若确定该文本渲染指令中包含时间信息，则存储所确定的时间信息及对应的绘制区域。例如，在图1C中所示的游戏界面10中，存在一些关于时间进度事件的信息，“武器研究库”的时间进度为在4天15小时后升级，在游戏界面中该“武器研究库”附近的则标记有“升级4天15小时”的倒计时信息，其中用户所见的该“升级4天15小时”的倒计时信息则为根据包含有时间信息“4天15小时”的渲染指令在预设的绘制区域110内渲染生成的，该时间信息“4天15小时”与其绘制区域110存在对应关系。类似于上述关于“武器研究库”的时间进度“升级4天15小时”，在渲染画面中的每个时间进度事件分别根据相应的渲染指令在相应的绘制区域渲染生成。每条与时间进度事件相关的渲染指令中均包含与该时间进度事件相关的时间信息及对应的绘制区域的区域数据。因此，欲将确定实时渲染过程中的时间信息和对应的绘制区域，可以通过分析渲染指令中是否存在时间信息，若是，则可以将该条渲染指令中的存在对应关系的时间信息和绘制区域的区域数据存储在预存区01中。在步骤104中，将渲染指令中存在对应关系的时间信息和绘制区域的区域数据存储在如图1B所示的预存区01的具体实现方式可以为：以当前帧画面渲染过程中确定的上述时间信息以及对应的绘制区域数据替换预存区01中原有存储的时间信息以及对应的绘制区域数据，以使预存区01仅存储最新一帧画面渲染过程中确定的时间信息以及对应的绘制区域数据。需要说明的是，根据对渲染指令的分析，将当前帧画面渲染过程中所有的时间信息以及对应的绘制区域的区域数据存储至预存区01中。该预存区01中所存储的每条时间信息以及对应的绘制区域的区域数据构成一组配对信息。例如，在当前帧画面的渲染过程中，对每条渲染指令进行分析，确定了3条时间信息，该3条时间信息分别对应图1C中“武器研究所”、“哨所”以及“仓库”的时间进度，且该3条时间信息分别为时间信息1、时间信息2以及时间信息3。根据渲染指令的分析还可以确定该3条时间信息各自对应的绘制区域数据分别为绘制区域1、绘制区域2以及绘制区域3。由此可以确定，时间信息1与绘制区域1构成一组配对信息011、时间信息2与绘制区域2构成一组配对信息012以及时间信息3与绘制区域3构成一组配对信息013，并将3组配对信息011-013存储至预存区01中以替换原有的配对信息。画面持续刷新，对渲染指令的分析持续进行，即，每刷新一帧画面执行一次上述配对信息的确定与存储的操作。图2示出了本申请实施例提供的日程事件生成示意图，如图2所示，该日程生成方法中步骤02可以在图1A-1C相关实施例的基础上继续通过以下具体步骤实现：步骤201：确定用户选取区域；步骤202：确定预存区01中与选取区域相匹配的绘制区域；步骤203：确定是否存在匹配结果，若存在，则进入步骤204，如不存在，则进入步骤207；步骤204：确定相匹配的绘制区域对应的时间信息；步骤205：根据时间信息生成日程事件；步骤206：将日程事件添加至终端系统内的日历中；步骤207：结束。具体地，对步骤201-207进行以下详细说明：关于步骤201用户在显示界面注意到存在时间进度事件时，欲将根据该时间进度事件创建相应的日程事件，为实现关于创建日程事件的便捷性与灵活性，用户无需退出当前程序，可以在当前程序的显示界面直接操作，即，用户在显示界面上选取一区域，该区域范围可以包含该时间进度事件的全部区域或部分区域。为避免用户对当前程序的其他操作与用户选区域的操作出现冲突，仅在启动“选取区域”功能的情况下，用户才能进行选取区域的操作，用户可以通过触控显示界面上的相应按钮，如：触控“选取”按钮，向系统发送包含“开始选取区域”信息的操作指令，系统对收到的操作指令进行分析，确定该操作指令中包含“开始选取区域”信息的情况下，启动上述选取区域的功能。关于如何确定选取区域的方式可以为在启动选取区域的功能时在当前渲染画面上铺设一张隐形网格，其目的在于：①、根据用户的选取操作轨迹确定用户选取范围以得到用户选取区域；②、指令隔绝，避免用户的选取操作影响对当前程序操控。需要说明的是，上述关于如何确定选取区域的方式不作唯一限定。关于步骤202在基于步骤201获取到用户选取区域的情况下，进一步确定预存区01中与选取区域相匹配的绘制区域，具体地，其匹配方式可以包括：将选取区域直接与预存区中的区域数据进行匹配；关于匹配方式用户可以基于所见的画面，选取一区域范围作为选取区域，其选取方式可以基于用户所使用终端类型进行适应性匹配，例如，用户所使用的终端为带有触控屏的设备的情况下，可以匹配为在触控屏上圈选的方式进行选取区域；如用户所使用的终端为如个人电脑的情况下，可以匹配为光标移动选取的方式进行选取区域。例如，图3示出了本申请实施例提供的选取区域的示意图，如图3所示，用户在手机游戏界面10上进行圈选，得到选取区域301，该选取区域301中包含关于“武器研究所”的时间进度。用户想要创建关于“武器研究所”时间进度的日程事件，可以将用户的选取区域301基于显示屏的位置数据与预存区01中的绘制区域数据进行匹配，其匹配机制可以为将预存区01中相对于选取区域301的重叠面积比超过预设值的绘制区域作为与选取区域301相匹配的绘制区域。其中，在重叠面积比计算过程中涉及的预存区01中存储的绘制区域数据可以为该绘制区域基于显示屏的位置数据。进一步地将匹配到的绘制区域作为与选取区域301相匹配的绘制区域，即，被选取绘制区域。需要说明的是，在上述匹配过程中，存在用户的选取区域中包含2个时间进度的情况，例如如图3所示，用户的选取区域302中包含关于“武器研究所”的完整时间进度“升级4天15小时”和“哨所”的非完整时间进度“升级18小时”，将选取区域302基于显示屏的位置数据分别与预存区01中的绘制区域数据进行匹配，以确定预存区01中相对于该选取区域302的重叠面积比超过60％的绘制区域，其中，根据匹配结果可以得出预存区01中的绘制区域1相对于选取区域302的重叠面积比为100％，即，预存区01中的绘制区域1全部包含于选取区域302中。同时还可以得出预存区01中的绘制区域2相对于选取区域302的重叠面积比为94.5％，即，预存区01中的绘制区域2的94.5％包含于选取区域302中。由于计算得到的重叠面积比均大于设定值60％，因此，本次匹配结果中存在2个与选取区域相匹配的绘制区域，即，关于“武器研究所”的绘制区域和关于“哨所”的绘制区域。进一步地将关于“武器研究所”的绘制区域和关于“哨所”的绘制区域作为被选取绘制区域。关于步骤203-207基于步骤202进行的匹配操作，确定匹配结果，其中，确定存在匹配结果，即，匹配得到选取区域301/302相比于预存区01中的绘制区域的覆盖率大于设定值的绘制区域，进一步地，在预存区01中，根据匹配得到的绘制区域数据所在的配对信息确定匹配得到的绘制区域对应的时间信息，进而根据所确定的时间信息创建日程事件。在创建日程事件过程中，可以生成日程描述编辑界面，该日程描述编辑界面可以为在当前程序显示界面上叠加显示的弹框，用户可以在该弹框中输入关于本次创建的日程事件的描述信息。获取用户在该日程描述编辑界面中的输入信息，根据该输入信息以及匹配得到的绘制区域对应的时间信息生成日程事件。进而将所生成的日程事件发送至日历程序中，以使日历系统能够根据其中的时间信息自动提示用户日程事件到期的消息。在该日程事件未到期前，用户可以在如图4所示的日历系统界面40的日程提示区域401中查看所添加的日程事件。实施例图5示出了本申请实施例提供的终端执行框架图，如图5所示，游戏程序50启动后，在游戏画面渲染过程中，游戏应用一般通过游戏引擎51将3D模型、纹理、时间标记、按钮等元素渲染到游戏界面上，游戏引擎51把每帧画面转译成GL API 52资源和GL 53资源并调用，进一步地，该资源分别通过OpenGL库54、图形驱动55操作，最终通过图形处理器56完成对游戏界面生成的处理。以游戏渲染画面为例，提供以下基于终端交互的完整实施例。游戏界面的每一帧在绘制开始和结束中每一个渲染指令代表绘制界面上一个元素，在游戏界面的实时渲染过程中，分析每个渲染指令，其目的在于确定渲染指令中是否包含时间信息，若是，则将所确定的渲染指令中的时间信息以及对应的绘制区域存储到预存区01中；若当前帧画面的渲染指令中不包含任何时间信息的情况下，不执行任何操作，等待当前帧画面渲染结束。需要说明的是，一帧画面渲染过程中，在游戏界面需要显示多个时间进度信息的情况下，则能够确定多个时间信息，进而将多个时间信息以及各自对应的绘制区域存储在预存区01中。在游戏过程中，每经历一帧游戏画面渲染，若确定渲染指令中包含时间信息的情况下，以当前帧画面渲染过程中所确定的时间信息以及对应的绘制区域替换预存区中原有的时间信息以及对应的绘制区域数据。预存区01中仅存储最新一帧画面渲染过程的时间信息与对应绘制区域的数据。用户想通过在游戏界面将关于游戏内的时间进度事件创建为日程事件添加到日历的情况下，用户可以通过触控游戏界面的相应按钮，如：触控“助手”按钮，以启动选取游戏界面部分区域的功能。用户选取动作可以为在图3所示的游戏界面10上进行圈选，根据用户的圈选指令，获取选取区域301。即，获取到选取区域301基于显示屏的位置数据。进而将选取区域301基于显示屏的位置数据与预存区01中的绘制区域数据进行匹配，确定出预存区01中相比于选取区域301的重叠面积比大于60％的绘制区域，将匹配到的绘制区域作为被选取区域。为确定该被选取区域所对应的时间信息，在预存区01中，根据匹配得到的绘制区域数据所在的配对信息确定匹配得到的绘制区域对应的时间信息，进而根据所确定的时间信息创建日程事件。在创建日程事件过程中，生成日程描述编辑界面，获取用户在该日程描述编辑界面中的输入信息，根据该输入信息以及匹配得到的绘制区域对应的时间信息生成日程事件。进一步地，可以将生成的日程事件发送至日历中。如图4所示，在该日程事件未到期前，在用户查看日历时，用户可以根据日历系统界面40中的日程提示区域401中查看所添加的该日程事件。在日程事件到期时自动提示用户日程事件到期的消息。还可以根据用户需求进一步添加闹铃提醒，即，在该日程事件到期时进行闹铃提醒，以提示用户启动游戏进行相应操作。需要说明的是，本申请实施例中所涉及的渲染指令为OpenGL指令或Vukan指令。本申请实施例还提供一种日程生成装置，图6为本申请实施例提供的日程生成装置的结构示意图，如图6所示该装置包括：处理器601和存储器602，存储器602用于存储至少一条指令，指令由处理器601加载并执行时以实现如下日程生成方法：在实时渲染画面的过程中，基于渲染指令确定渲染过程中的时间信息及对应的绘制区域；根据被选取的绘制区域确定对应的时间信息，根据对应的时间信息生成日程事件。进一步地，在实时渲染画面的过程中，基于渲染指令确定渲染过程中的时间信息及对应的绘制区域的过程包括：在实时渲染画面的过程中，筛选出当前帧画面的渲染指令中的目标类型渲染指令，并确定目标类型渲染指令中是否包含时间信息，若是，则将时间信息和对应的绘制区域存储在预存区。进一步地，将时间信息和对应的绘制区域存储在预存区包括：以当前帧画面渲染过程中确定的时间信息和对应的绘制区域替换预存区中的相应数据。进一步地，在根据被选取的绘制区域确定对应的时间信息，根据对应的时间信息生成日程事件的过程之前，还包括：确定选取区域；确定预存区中与选取区域相匹配的绘制区域，并将相匹配的绘制区域作为被选取的绘制区域。进一步地，在确定选取区域前，方法还包括：获取操作指令；确定操作指令中是否包含开始选取区域的信息，若是，则触发确定选取区域的操作。进一步地，确定预存区中与选取区域相匹配的绘制区域包括：将所述预存区中相对于选取区域的重叠面积比超过预设值的绘制区域作为与选取区域相匹配的绘制区域。进一步地，根据对应的时间信息生成日程事件的过程包括：生成日程描述编辑界面；获取日程描述编辑界面中的文字，并根据文字和对应的时间信息生成日程事件。进一步地，渲染指令为OpenGL指令或Vukan指令。本申请实施例还可以提供一种终端，该终端包括上述日程生成装置。本申请实施例还提供一种计算机可读存储介质，其上存储有计算机程序，所述计算机程序被处理器执行时实现上述日程生成方法。需要说明的是，本申请实施例中所涉及的终端可以包括但不限于个人计算机、个人数字助理、无线手持设备、平板电脑、手机、MP3播放器、MP4播放器等。可以理解的是，所述应用可以是安装在终端上的应用程序，或者还可以是终端上的浏览器的一个网页程序，本申请实施例对此不进行限定。所属领域的技术人员可以清楚地了解到，为描述的方便和简洁，上述描述的系统，装置和单元的具体工作过程，可以参考前述方法实施例中的对应过程，在此不再赘述。在本申请所提供的几个实施例中，应该理解到，所揭露的系统，装置和方法，可以通过其它的方式实现。例如，以上所描述的装置实施例仅仅是示意性的，例如，所述单元的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，例如，多个单元或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另一点，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些接口，装置或单元的间接耦合或通信连接，可以是电性，机械或其它的形式。所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本申请各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。上述集成的单元既可以采用硬件的形式实现，也可以采用硬件加软件功能单元的形式实现。上述以软件功能单元的形式实现的集成的单元，可以存储在一个计算机可读取存储介质中。上述软件功能单元存储在一个存储介质中，包括若干指令用以使得一台计算机装置或处理器执行本申请各个实施例所述方法的部分步骤。而前述的存储介质包括：U盘、移动硬盘、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。以上所述仅为本申请的较佳实施例而已，并不用以限制本申请，凡在本申请的精神和原则之内，所做的任何修改、等同替换、改进等，均应包含在本申请保护的范围之内。最后应说明的是：以上各实施例仅用以说明本申请的技术方案，而非对其限制；尽管参照前述各实施例对本申请进行了详细的说明，本领域的普通技术人员应当理解：其依然可以对前述各实施例所记载的技术方案进行修改，或者对其中部分或者全部技术特征进行等同替换；而这些修改或者替换，并不使相应技术方案的本质脱离本申请各实施例技术方案的范围。
