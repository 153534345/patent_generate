标题title
报文解析方法、装置、电子设备及介质
摘要abst
本公开提供了一种报文解析方法，可以应用于互联网技术领域。该报文解析方法包括：根据multipart类型的报文的第一头部信息中的第一分割符，将multipart类型的报文的第一实体信息分割为至少两段子报文；确定至少两段子报文分别对应的键名和键值；根据键名和键值生成multipart类型的报文的JSON对象。本公开还提供了一种报文解析装置、设备、存储介质和程序产品，可用于金融领域或其他领域的multipart类型报文的解析。
权利要求书clms
1.一种报文解析方法，包括：根据multipart类型的报文的第一头部信息中的第一分割符，将所述multipart类型的报文的第一实体信息分割为至少两段子报文；确定所述至少两段子报文分别对应的键名和键值；根据所述键名和所述键值生成所述multipart类型的报文的JSON对象。2.根据权利要求1所述的方法，其中，所述确定所述至少两段子报文分别对应的键名和键值包括：根据所述子报文的第二头部信息确定所述键名，根据所述子报文的第二实体信息确定所述键值。3.根据权利要求1所述的方法，其中，所述根据multipart类型的报文的第一头部信息中的第一分割符，将所述multipart类型的报文的第一实体信息分割为至少两段子报文包括：根据所述第一分割符构建第一正则表达式，其中，所述第一分隔符至少包括boundary字段；根据第一正则表达式将所述第一实体信息分割为至少两段子报文。4.根据权利要求3所述的方法，其中，所述根据第一正则表达式将所述第一实体信息分割为至少两段子报文包括：根据所述第一正则表达式生成所述第一实体信息的至少两个占位符；根据所述至少两个占位符将所述报文分割成第一数组，所述第一数组包含至少两段子报文。5.根据权利要求2所述的方法，其中，所述根据所述子报文的第二头部信息确定所述键名，根据所述子报文的第二实体信息确定所述键值包括：根据所述子报文中的第二分隔符将所述子报文分割成所述第二头部信息和第二实体信息；根据所述第二头部信息获得第二正则表达式；利用所述第二正则表达式处理所述第二头部信息，得到所述键名；将所述第二实体信息利用分行分割符分隔为第二数组，所述第二数组的第一位为所述键值。6.根据权利要求1所述的方法，其中，所述根据所述键名和所述键值生成所述multipart类型的报文的JSON对象包括：创建空对象；在所述空对象中记录所述至少两段子报文对应的键名，并将对应的所述至少两段子报文对应的键值分别赋值给所述至少两段子报文对应的键名，生成所述multipart类型的报文的JSON对象。7.根据权利要求5所述的方法，其中，所述根据所述第二头部信息获得第二正则表达式包括：检测所述multipart类型的报文的种类；若所述multipart类型的报文为multipart/form-data类型，则根据所述第二头部信息中的name字段构建第二正则表达式；若所述multipart类型的报文为multipart/byteranges类型，则根据第二头部信息中的bytes字段构建第二正则表达式。8.根据权利要求1所述的方法，其中，所述报文解析方法还包括：接收HTTP请求报文；根据所述HTTP请求报文的头部信息筛选出所述multipart类型的报文；检测所述报文的所述第一实体信息是否为字符类型，若所述实体信息不是字符类型，则将所述第一实体信息转换为字符类型。9.一种报文解析装置，包括：分割模块，用于根据multipart类型的报文的第一头部信息中的第一分割符，将所述multipart类型的报文的第一实体信息分割为至少两段子报文；键名键值模块，用于确定所述至少两段子报文分别对应的键名和键值；以及对象模块，用于根据所述键名和所述键值生成所述multipart类型的报文的JSON对象。10.一种电子设备，包括：一个或多个处理器；存储装置，用于存储一个或多个程序，其中，当所述一个或多个程序被所述一个或多个处理器执行时，使得所述一个或多个处理器执行根据权利要求1～8中任一项所述的方法。11.一种计算机可读存储介质，其上存储有可执行指令，该指令被处理器执行时使处理器执行根据权利要求1～8中任一项所述的方法。12.一种计算机程序产品，包括计算机程序，所述计算机程序被处理器执行时实现根据权利要求1～8中任一项所述的方法。
说明书desc
技术领域本公开涉及互联网技术领域，具体涉及HTTP报文，更具体地涉及一种报文解析方法、装置、设备及介质，可用于金融领域或其他领域的multipart类型报文的解析。背景技术互联网上Web都是建立在HTTP协议上通信的，HTTP协议用于客户端和服务器之间进行通信，协议规定请求从客服端发出，最后服务器响应该请求并返回。用于HTTP协议交互的信息被称为HTTP报文，请求端的HTTP报文叫做请求报文，响应端的叫做响应报文，HTTP报文由报文首部、空行以及报文主体组成。HTTP报文中采用MIME，允许处理文本、图片、视频等多个不同类型的数据，利用MIME可以描述标记数据类型，而在MIME扩展中会使用一种称为多部分对象集合的方法来容纳多份不同类型的数据，主要有multipart/form-data和multipart/byteranges。遗憾的是目前原生javascript的XMLHttpRequest和一些主流的ajax类库的缺点是只能解析响应MIME类型为application/json类型的报文而无法解析multipart类型的报文，限制了multipart类型的报文的应用。发明内容鉴于上述问题，本公开提供了一种报文解析方法、装置、设备、介质和程序产品。根据本公开的第一个方面，提供了一种报文解析方法，包括：根据multipart类型的报文的第一头部信息中的第一分割符，将multipart类型的报文的第一实体信息分割为至少两段子报文；确定至少两段子报文分别对应的键名和键值；根据键名和键值生成multipart类型的报文的JSON对象。根据本公开的实施例，确定至少两段子报文分别对应的键名和键值包括：根据子报文的第二头部信息确定键名，根据子报文的第二实体信息确定键值。根据本公开的实施例，根据multipart类型的报文的第一头部信息中的第一分割符，将multipart类型的报文的第一实体信息分割为至少两段子报文包括：根据第一分割符构建第一正则表达式，其中，第一分隔符至少包括boundary字段；根据第一正则表达式将第一实体信息分割为至少两段子报文。根据本公开的实施例，根据第一正则表达式将第一实体信息分割为至少两段子报文包括：根据第一正则表达式获得第一实体信息的至少两个占位符；根据至少两个占位符将报文分割成第一数组，第一数组包含至少两段子报文。根据本公开的实施例，根据子报文的第二头部信息确定键名，根据子报文的第二实体信息确定键值包括：根据子报文中的第二分隔符将子报文分割成第二头部信息和第二实体信息；根据第二头部信息获得第二正则表达式；利用第二正则表达式处理第二头部信息，得到键名；将第二实体信息利用分行分割符分隔为第二数组，第二数组的第一位为键值。根据本公开的实施例，根据键名和键值生成multipart类型的报文的JSON对象包括：创建空对象；在空对象中记录至少两段子报文对应的键名，并将对应的至少两段子报文对应的键值分别赋值给至少两段子报文对应的键名，生成multipart类型的报文的JSON对象。根据本公开的实施例，根据第二头部信息获得第二正则表达式包括：检测multipart类型的报文的种类；若multipart类型的报文为multipart/form-data类型，则根据第二头部信息中的name字段构建第二正则表达式；若multipart类型的报文为multipart/byteranges类型，则根据第二头部信息中的bytes字段构建第二正则表达式。根据本公开的实施例，报文解析方法还包括：接收HTTP请求报文；根据HTTP请求报文的头部信息筛选出multipart类型的报文；检测报文的第一实体信息是否为字符类型，若实体信息不是字符类型，则将第一实体信息转换为字符类型。本公开的第二方面提供了一种报文解析装置，包括：分割模块，用于根据multipart类型的报文的第一头部信息中的第一分割符，将multipart类型的报文的第一实体信息分割为至少两段子报文；键名键值模块，用于确定至少两段子报文分别对应的键名和键值；以及对象模块，用于根据键名和键值生成multipart类型的报文的JSON对象。本公开的第三方面提供了一种电子设备，包括：一个或多个处理器；存储器，用于存储一个或多个程序，其中，当所述一个或多个程序被所述一个或多个处理器执行时，使得一个或多个处理器执行上述报文解析方法。本公开的第四方面还提供了一种计算机可读存储介质，其上存储有可执行指令，该指令被处理器执行时使处理器执行上述报文解析方法。本公开的第五方面还提供了一种计算机程序产品，包括计算机程序，该计算机程序被处理器执行时实现上述报文解析方法。附图说明通过以下参照附图对本公开实施例的描述，本公开的上述内容以及其他目的、特征和优点将更为清楚，在附图中：图1示意性示出了根据本公开实施例的报文解析方法、装置、设备、介质和程序产品的应用场景图；图2示意性示出了根据本公开实施例的报文解析方法的流程图；图3示意性示出了根据本公开实施例的分割报文的方法的流程图；图4示意性示出了根据本公开实施例的创建第一数组的方法的流程图；图5示意性示出了根据本公开实施例的键名和键值的确定方法的流程图；图6示意性示出了根据本公开实施例的报文预处理方法的流程图；图7示意性示出了根据本公开实施例的报文解析装置的结构框图；以及图8示意性示出了根据本公开实施例的适于实现报文解析方法的电子设备的方框图。具体实施方式以下，将参照附图来描述本公开的实施例。但是应该理解，这些描述只是示例性的，而并非要限制本公开的范围。在下面的详细描述中，为便于解释，阐述了许多具体的细节以提供对本公开实施例的全面理解。然而，明显地，一个或多个实施例在没有这些具体细节的情况下也可以被实施。此外，在以下说明中，省略了对公知结构和技术的描述，以避免不必要地混淆本公开的概念。在此使用的术语仅仅是为了描述具体实施例，而并非意在限制本公开。在此使用的术语“包括”、“包含”等表明了所述特征、步骤、操作和/或部件的存在，但是并不排除存在或添加一个或多个其他特征、步骤、操作或部件。在此使用的所有术语具有本领域技术人员通常所理解的含义，除非另外定义。应注意，这里使用的术语应解释为具有与本说明书的上下文相一致的含义，而不应以理想化或过于刻板的方式来解释。在使用类似于“A、B和C等中至少一个”这样的表述的情况下，一般来说应该按照本领域技术人员通常理解该表述的含义来予以解释。本公开的实施例提供了一种报文解析方法，用于解决原生的JavaScript的XMLHttpRequest和一些主流的ajax类库无法处理解析HTTP请求多类型返回的响应数据的难题，即解析处理multipart类型的报文的方法。JavaScript是一种具有函数优先的轻量级，解释型或即时编译型的编程语言，常作为开发web页面的脚本语言。XMLHttpRequest是一组API函数集，可被JavaScript、JScript、VBScript以及其它web浏览器内嵌的脚本语言调用。Ajax即Asynchronous Javascript And XML，用来描述一种使用现有技术集合的新方法。使用ajax技术网页应用能够快速地将增量更新呈现在用户界面上，而不需要重载整网页。对于multipart类型的报文，用于HTTP协议交互的信息称为HTTP报文，HTTP报文由头部信息和实体信息组成，且HTTP报文采用MIME机制。MIME，又称媒体类型，是一种标准，规定了用于表示各种各样的数据类型的符号化方法，用来表示文档、文件、或字节流的性质和格式，通用结构type/subtype，比如"application/json"。因此，HTTP报文允许允许处理文本、图片、视频等多个不同类型的数据。在MIME扩展中会使用一种称为多部分对象集合的方法来容纳多份不同类型的数据，构成了multipart类型的报文，主要有multipart/form-data和multipart/byteranges。需要说明的是，本公开提供的报文解析方法和装置可用于金融领域在互联网利用HTTP协议传输的报文的解析，也可用于除金融领域之外的任意领域在互联网利用HTTP协议传输的报文的解析，本公开提供的报文解析方法和装置的应用领域不做限定。图1示意性示出了根据本公开实施例的报文解析方法、装置、设备、介质和程序产品的应用场景图。如图1所示，根据该实施例的应用场景100可以包括用户利用终端可以向服务器发请求，服务器能够接收客户端请求，并且把相关资源信息返回给客户端，客户端对返回的报文进行解析处理。网络102用以在终端设备101和服务器103之间提供通信链路的介质。网络102可以包括各种连接类型，例如有线、无线通信链路或者光纤电缆等等。用户可以使用终端设备101通过网络102与服务器103交互，以发送请求、接收报文等。终端设备101上可以安装有各种前端应用对报文进行解析。终端设备101可以是具有显示屏并且支持网页浏览的各种电子设备，包括但不限于智能手机、平板电脑、膝上型便携计算机和台式计算机等等。服务器103可以是提供各种服务的服务器，例如对用户利用终端设备101所发送的请求提供支持的后台管理服务器。后台管理服务器可以对接收到的用户请求等数据进行分析等处理，并将处理结果反馈给终端设备。需要说明的是，本公开实施例所提供的报文解析方法一般可以由终端设备101执行。相应地，本公开实施例所提供的报文解析装置一般可以设置于终端设备101中。本公开实施例所提供的报文解析方法还可以由服务器103执行。相应地，本公开实施例所提供的报文解析装置还可以设置于服务器103中。本公开实施例所提供的报文解析方法也可以由不同于服务器103且能够与终端设备101和/或服务器103通信的服务器或服务器集群执行。相应地，本公开实施例所提供的报文解析装置也可以设置于不同于服务器103且能够与终端设备101和/或服务器103通信的服务器或服务器集群中。应该理解，图1中的终端设备、网络和服务器的数目仅仅是示意性的。根据实现需要，可以具有任意数目的终端设备、网络和服务器。以下将基于图1描述的场景，通过图2～图6对公开实施例的报文解析方法进行详细描述。图2示意性示出了根据本公开实施例的报文解析方法的流程图。如图2所示，该实施例的报文解析方法包括操作S201～操作S203，该报文解析方法可以由位于客户端的前端执行。在操作S201，根据multipart类型的报文的第一头部信息中的第一分割符，将multipart类型的报文的第一实体信息分割为至少两段子报文。在操作S202，确定至少两段子报文分别对应的键名和键值。在操作S203，根据键名和键值生成multipart类型的报文的JSON对象。在本公开一具体的实施例中，用户利用网页的金融客户端向服务器发送包含交易信息、认证图像等2种类型的数据，包括有文本和图片，采用了HTML表单的形式将上述数据以multipart/form-data报文的形式发送给服务器，服务器对该报文进行解析。服务器根据该multipart/form-data报文的头部信息，即第一头部信息，获取其中的第一分割符，例如，该第一分割符可为“boundary＝---字符串”，利用该第一分割符，通过识别第一分割符的方式将主报文分割成2段子报文。其中，每一个子报文都包含一个的键名和键值，从2段子报文中分别确认对应的2个键名和2个键值，键名代表子报文的数据名称，键值代表子报文的数据值。JSON，一种轻量级的数据交换格式，是JavaScript编程语言中的对象的字符串表示法，格式{key1:value1,key2:value2,...}，包括JSON对象和JSON字符串，JSON对象和JSON字符串可相互转换，其中，JSON对象中可直接根据键名对键值进行调用。本公开在获得对应的2个键名和2个键值后，由该键名和键值生成multipart类型的报文的JSON对象。通过将multipart类型的报文解析成JSON对象，表示出了报文的数据结构，其在JavaScript中能直接作为对象处理调用，解决了本公开中所指的技术问题，同时JSON对象更为方便处理调用，有利于数据的处理与浏览。图3示意性示出了根据本公开实施例的分割报文的方法的流程图。如图3所示，该实施例的分割报文的方法包括操作S301～S302。在操作S301,根据第一分割符构建第一正则表达式，第一分隔符至少包括boundary字段。在操作S302，根据第一正则表达式将第一实体信息分割为至少两段子报文。使用multipart类型的报文时，需要在头部信息字段里加上Content-Type注明，包含MIME类型和多部分对象分割符号，例如Content-Type：multipart/form-data；boundary＝--分割字符串，multipart类型的报文由boundary-边界线划分为各类实体为不同的组成部分，每一部分有自己的实体信息以及头部信息。本公开根据包含boundary字段的第一分割符，构建第一正则表达式，例如："|)/)。正则表达式是一种文本模式，包括普通字符和特殊字符。正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。利用上述第一正则表达式，将主报文的第一实体信息分割成至少两段子报文，提高了分割处理的效率和准确性，增加了报文解析的速度。图4示意性示出了根据本公开实施例的创建第一数组的方法的流程图。如图4所示，该实施例的创建第一数组的方法包括操作S401～S402。在操作S401，根据第一正则表达式生成所述第一实体信息的至少两个占位符。在操作S402，根据至少两个占位符将报文分割成第一数组，第一数组包含至少两段子报文。本公开一可选的实施例中，第一正则表达式为"|)/)，占位符记为M，利用M＝contentType.match"|)/i)生成换第一分割符的占位符M。通过识别占位符M，将报文分割成一数组，称为第一数组，子报文为该数组的成员，该第一数组可用于后续解析处理对每一段子报文的处理，利用数组能更为方便的调用各段子报文，并表示子报文在multipart类型的报文中的顺序。在本公开一实施例中，操作S202，确定至少两段子报文分别对应的键名和键值，键名代表子报文的数据名称，键值代表子报文的数据值，通过对报文结构的解析，每段子报文都包含一个头部信息和实体信息，分别称为第二头部信息和第二实体信息。本公开提出了根据子报文的第二头部信息确定键名，根据所述子报文的第二实体信息确定键值，提取出包含子报文的数据名称和数据值的主要数据特征，方便表示数据结构的JSON对象。图5示意性示出了根据本公开实施例的键名和键值的确定方法的流程图。如图5所示，该实施例的键名和键值的确定方法包括操作S501～S504。在操作S501，根据子报文中的第二分隔符将子报文分割成第二头部信息和第二实体信息。在操作S502，根据第二头部信息获得第二正则表达式。在操作S503，利用第二正则表达式处理第二头部信息，得到键名。在操作S504，将第二实体信息利用分行分割符分隔为第二数组，第二数组的第一位为所述键值。本公开的子报文同样包含头部信息和实体信息，利用第二分隔符，例如换行符，将子报文分割成分别包含头部信息和实体信息的两种元素，分别称为第二头部信息和第二实体信息。根据第二头部信息获得第二正则表达式，例如根据第二头部信息中的name字段得到第二正则表达式"$/)，利用第二正则表达式处理第二头部信息得到键名。将第二实体信息利用分行分割符分隔为第二数组，该第二数组可为childArray数组，第二数组的第一位为所述键值，即键值＝childArray。在本公开又一实施例中，在操作S203中，根据键名和键值生成multipart类型的报文的JSON对象包括：创建空对象；在所述空对象中记录所述至少两段子报文对应的键名，并将对应的所述至少两段子报文对应的键值分别赋值给所述至少两段子报文对应的键名，生成所述multipart类型的报文的JSON对象。该JSON对象的格式{key1:value1,key2:value2,...}。例如一multipart类型的报文包含2段子报文，分别为子报文1、子报文2，其中，子报文l有键名1、键值1，子报文2有键名2、键值2，则将对应的所述至少两段子报文对应的键值分别赋值给所述至少两段子报文对应的键名为：，生成的JSON对象可表示为{键名1：键值1，键名2：键值2}，JSON对象表示出了multipart类型的报文的数据结构，其在JavaScript中能直接作为对象处理调用，实现了更为方便处理调用，有利于数据的处理与浏览。在本公开又一实施例中，操作S503分为两种情况，包括：检测multipart类型的报文的种类；若multipart类型的报文为multipart/form-data类型，则根据第二头部信息中的name字段构建第二正则表达式；若multipart类型的报文为multipart/byteranges类型，则根据第二头部信息中的bytes字段构建第二正则表达式。multipart/form-data类型报文能直接根据name字段得到第二正则表达式，通过第二正则表达式获得表示数据名称的键名。multipart/byteranges类型报文没有name字段来表示各个子报文部分的相关信息，可通过Content-Range字段下的bytes字段来做键名，用于生成multipart/byteranges类型报文的第二正则表达式。图6示意性示出了根据本公开实施例的报文预处理方法的流程图。如图6所示，该实施例的报文解析方法还包括报文预处理方法，包括操作S601～S603。在操作S601，接收HTTP请求报文。在操作S602，根据HTTP请求报文的头部信息筛选出multipart类型的报文。在操作S603，检测报文的第一实体信息是否为字符类型，若实体信息不是字符类型，则将第一实体信息转换为字符类型。在本公开中，判断HTTP请求报文的头部信息中Content-Type字段是否是multipart/form-data字段，筛选出multipart类型的报文，如果是则继续处理，否则直接结束流程。判断报文第一实体信息是否是字符类型，如果是字符型则继续执行报文解析方法，否则需要将其转换为字符类型继续处理，以利于后续利用正则表达式进行匹配。在本发明一具体的实施例中，针对multipart/form-data类型报文使用该报文解析方法进行处理：S1、利用第一正则表达式"|)/)生成分割用的占位符M＝contentType.match"|)/i)，根据占位符M将报文分割成长度为N+1的第一数组A，表示有N个子报文。S2、循环处理第一数组A，得到每一项的键名和键值，并生成JSON对象，包括：S21、首先设置k＝1；定义空对象partsByName＝{}。S22、判断k是否小于N,如果是执行S23,否则执行S3。S23、利用第二分隔符分割第一数组A中的第k项A为数组subparts。将第二头部信息subparts用换行分隔符分隔为长度为H的数组headers。S24、循环处理数组headers。，包括：S241，设置j＝1；定义空对象headerFields＝{}。S242，判断j是否小于H,如果是则执行S243,否则执行S25。S243，利用第二正则表达式"$/)解析headers，赋值headerFields.name＝header.match"$/)。S244，判断headerFields.name是否非空，如果是则执行S245,否则执行S246。S245,fieldName赋值为headerFields.name。S246，将j的值增加1后执行S542。S25、将第二实体信息subparts利用分行分隔符分割为childArray数组。将键名赋值给键值，partsByName＝childArray；S26、将k的值增加1后执行S22。S3、输出JSON对象partsByName。基于上述报文解析方法，本公开还提供了一种报文解析装置。以下将结合图7对该装置进行详细描述。图7示意性示出了根据本公开实施例的报文解析装置的结构框图。如图7所示，该实施例的报文解析装置700包括分割模块701、键名键值模块702和对象模块703。分割模块701用于根据multipart类型的报文的第一头部信息中的第一分割符，将multipart类型的报文的第一实体信息分割为至少两段子报文。在一实施例中，分割模块701可以用于执行前文描述的操作S201，在此不再赘述。键名键值模块702用于确定至少两段子报文分别对应的键名和键值。在一实施例中，键名键值模块702可以用于执行前文描述的操作S202，在此不再赘述。对象模块703用于根据键名和键值生成multipart类型的报文的JSON对象。在一实施例中，对象模块703可以用于执行前文描述的操作S203，在此不再赘述。根据本公开的实施例，分割模块701、键名键值模块702和对象模块703中的任意多个模块可以合并在一个模块中实现，或者其中的任意一个模块可以被拆分成多个模块。或者，这些模块中的一个或多个模块的至少部分功能可以与其他模块的至少部分功能相结合，并在一个模块中实现。根据本公开的实施例，分割模块701、键名键值模块702和对象模块703中的至少一个可以至少被部分地实现为硬件电路，例如现场可编程门阵列、可编程逻辑阵列、片上系统、基板上的系统、封装上的系统、专用集成电路，或可以通过对电路进行集成或封装的任何其他的合理方式等硬件或固件来实现，或以软件、硬件以及固件三种实现方式中任意一种或以其中任意几种的适当组合来实现。或者，分割模块701、键名键值模块702和对象模块703中的至少一个可以至少被部分地实现为计算机程序模块，当该计算机程序模块被运行时，可以执行相应的功能。图8示意性示出了根据本公开实施例的适于实现报文解析方法的电子设备的方框图。如图8所示，根据本公开实施例的电子设备800包括处理器801，其可以根据存储在只读存储器802中的程序或者从存储部分808加载到随机访问存储器803中的程序而执行各种适当的动作和处理。处理器801例如可以包括通用微处理器、指令集处理器和/或相关芯片组和/或专用微处理器)等等。处理器801还可以包括用于缓存用途的板载存储器。处理器801可以包括用于执行根据本公开实施例的方法流程的不同动作的单一处理单元或者是多个处理单元。在RAM 803中，存储有电子设备800操作所需的各种程序和数据。处理器801、ROM802以及RAM 803通过总线804彼此相连。处理器801通过执行ROM 802和/或RAM 803中的程序来执行根据本公开实施例的方法流程的各种操作。需要注意，所述程序也可以存储在除ROM 802和RAM 803以外的一个或多个存储器中。处理器801也可以通过执行存储在所述一个或多个存储器中的程序来执行根据本公开实施例的方法流程的各种操作。根据本公开的实施例，电子设备800还可以包括输入/输出接口805，输入/输出接口805也连接至总线804。电子设备800还可以包括连接至I/O接口805的以下部件中的一项或多项：包括键盘、鼠标等的输入部分806；包括诸如阴极射线管、液晶显示器等以及扬声器等的输出部分807；包括硬盘等的存储部分808；以及包括诸如LAN卡、调制解调器等的网络接口卡的通信部分809。通信部分809经由诸如因特网的网络执行通信处理。驱动器810也根据需要连接至I/O接口805。可拆卸介质811，诸如磁盘、光盘、磁光盘、半导体存储器等等，根据需要安装在驱动器810上，以便于从其上读出的计算机程序根据需要被安装入存储部分808。本公开还提供了一种计算机可读存储介质，该计算机可读存储介质可以是上述实施例中描述的设备/装置/系统中所包含的；也可以是单独存在，而未装配入该设备/装置/系统中。上述计算机可读存储介质承载有一个或者多个程序，当上述一个或者多个程序被执行时，实现根据本公开实施例的方法。根据本公开的实施例，计算机可读存储介质可以是非易失性的计算机可读存储介质，例如可以包括但不限于：便携式计算机磁盘、硬盘、随机访问存储器、只读存储器、可擦式可编程只读存储器、便携式紧凑磁盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。在本公开中，计算机可读存储介质可以是任何包含或存储程序的有形介质，该程序可以被指令执行系统、装置或者器件使用或者与其结合使用。例如，根据本公开的实施例，计算机可读存储介质可以包括上文描述的ROM 802和/或RAM 803和/或ROM 802和RAM 803以外的一个或多个存储器。本公开的实施例还包括一种计算机程序产品，其包括计算机程序，该计算机程序包含用于执行流程图所示的方法的程序代码。当计算机程序产品在计算机系统中运行时，该程序代码用于使计算机系统实现本公开实施例所提供的报文解析方法。在该计算机程序被处理器801执行时执行本公开实施例的系统/装置中限定的上述功能。根据本公开的实施例，上文描述的系统、装置、模块、单元等可以通过计算机程序模块来实现。在一种实施例中，该计算机程序可以依托于光存储器件、磁存储器件等有形存储介质。在另一种实施例中，该计算机程序也可以在网络介质上以信号的形式进行传输、分发，并通过通信部分809被下载和安装，和/或从可拆卸介质811被安装。该计算机程序包含的程序代码可以用任何适当的网络介质传输，包括但不限于：无线、有线等等，或者上述的任意合适的组合。在这样的实施例中，该计算机程序可以通过通信部分809从网络上被下载和安装，和/或从可拆卸介质811被安装。在该计算机程序被处理器801执行时，执行本公开实施例的系统中限定的上述功能。根据本公开的实施例，上文描述的系统、设备、装置、模块、单元等可以通过计算机程序模块来实现。根据本公开的实施例，可以以一种或多种程序设计语言的任意组合来编写用于执行本公开实施例提供的计算机程序的程序代码，具体地，可以利用高级过程和/或面向对象的编程语言、和/或汇编/机器语言来实施这些计算程序。程序设计语言包括但不限于诸如Java，C++，python，“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算设备上执行、部分地在用户设备上执行、部分在远程计算设备上执行、或者完全在远程计算设备或服务器上执行。在涉及远程计算设备的情形中，远程计算设备可以通过任意种类的网络，包括局域网或广域网，连接到用户计算设备，或者，可以连接到外部计算设备。附图中的流程图和框图，图示了按照本公开各种实施例的系统、方法和计算机程序产品的可能实现的体系架构、功能和操作。在这点上，流程图或框图中的每个方框可以代表一个模块、程序段、或代码的一部分，上述模块、程序段、或代码的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。也应当注意，在有些作为替换的实现中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个接连地表示的方框实际上可以基本并行地执行，它们有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图或流程图中的每个方框、以及框图或流程图中的方框的组合，可以用执行规定的功能或操作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。本领域技术人员可以理解，本公开的各个实施例和/或权利要求中记载的特征可以进行多种组合或/或结合，即使这样的组合或结合没有明确记载于本公开中。特别地，在不脱离本公开精神和教导的情况下，本公开的各个实施例和/或权利要求中记载的特征可以进行多种组合和/或结合。所有这些组合和/或结合均落入本公开的范围。以上对本公开的实施例进行了描述。但是，这些实施例仅仅是为了说明的目的，而并非为了限制本公开的范围。尽管在以上分别描述了各实施例，但是这并不意味着各个实施例中的措施不能有利地结合使用。本公开的范围由所附权利要求及其等同物限定。不脱离本公开的范围，本领域技术人员可以做出多种替代和修改，这些替代和修改都应落在本公开的范围之内。
