标题title
一种AGV无线通信掉线重传及数据粘包处理方法
摘要abst
一种AGV无线通信掉线重传及数据粘包处理方法，其特征是包括以下步骤：步骤1：确定消息数据格式；步骤2：确定消息机制；步骤3：发送方建立消息发送队列，采用定时器定时发送信息；步骤4：接收方开辟子线程建立循环形缓冲区来预处理不定长数据包。本发明通过采用自定义一收一答通信机制有效的解决了掉线重连带来的数据重传问题，在针对AGV通信的高频率方面的需求，接收方通过在子线程建立环形缓冲区来接收并处理不定长数据包，高效的解决了因高频率通信可能导致的多条指令信息粘接在一起发送的问题。
权利要求书clms
1.一种AGV无线通信掉线重传及数据粘包处理方法，其特征是它包括以下步骤：步骤1：确定消息数据格式；格式为包首、包体和包尾，其中包首包括起始码、ID码、数据长度码，包体包括数据码、序列码、校验码，包尾包括结束码，结束码是特殊字符用来进行标记；起始码和结束码为固定码，每一个ID码代表一类操作指令；数据长度码表示的是数据码的长度，除数据码长度不定外，其他类型数据均为固定长度；步骤2：确定消息机制；通信采用“一收一答”的通信流程；发送方发出一条消息，接收方在接收到“完整的数据包”之后，将该条消息的接收情况反馈给发送方，若发送方一段时间内没有接收到来自接收方的反馈信息，会重新发送该条消息；反馈信息主要包含指令的序列码信息，保证了发送数据的某一时刻的唯一性；步骤3：发送方建立消息发送队列，采用定时器定时发送信息；发送方建立一个指令发送队列，将需要发送的消息按顺序入队，采用一个定时器定时发送，并结合一收一答机制判断接收方是否接收成功；步骤4：接收方开辟子线程建立循环形缓冲区来预处理不定长数据包。2.根据权利要求1所述的方法，其特征是所述的预处理不定长数据包包括以下步骤：步骤4.1：接收方创建一个子线程，在子线程中开辟一个环形缓冲区，用来接收数据包；步骤4.2：将接收到的指令放入环形缓冲区，并进行相应处理；为每一个连接动态分配一个缓冲区,同时把此缓冲区和SOCKET通过结构体关联，当接收到数据时首先把此段数据存放在缓冲区中；步骤4.3：判断缓存区中的数据长度是否够一个包首的长度，如不够，则不进行拆包操作，继续接收数据；步骤4.4：若缓存区中的数据长度够一个包首的长度，判断包首起始码是否正确；若正确，则根据指令数据结构解析出里面数据长度码，计算得到整条指令的长度，判断缓存区中的数据长度是否够一条完整指令的长度,如不够,则不进行拆包操作，继续等待接收数据；步骤4.5：若缓存区中的数据够一条指令长度，则根据包尾取出该指令，并把此数据包从缓存区中删除掉，子线程重新从步骤4.3开始，获取下一条指令信息。
说明书desc
技术领域本发明涉及AGV无线通信领域，尤其涉及一种在车间钢结构比较复杂或电磁干扰比较严重的环境下，由于无线网络的不稳定，会导致车载无线通信模块偶尔掉线。当指令发送时掉线会导致发送失败，重连后无法得知该指令是否需要重发的通信过程中数据处理方法以及解决掉线指令重传问题，具体地说是一种AGV无线通信掉线重传及数据粘包处理方法。背景技术在生产车间中，AGV是车间物流中的重要组成部分，AGV的核心技术之一是AGV调度系统。TCP是一种面向连接的、可靠的、基于字节流的传输层通信协议，由于建立了明确的连接，加上有超时重发、流量控制等功能，端与端之间进行数据传输稳定可靠，因此调度系统与AGV之间普遍采用TCPIP通信协议。采用TCP的AGV无线通信在车间钢结构比较复杂或电磁干扰比较严重的环境下，由于无线网络的不稳定，会导致车载无线通信模块偶尔掉线。当指令发送时掉线会导致发送失败，重连后我们无法得知该指令是否发送成功。此外，随着自动化生产车间的高速运转，AGV之间的通信变得越来越频繁，频率越来越高，因此采用TCP的AGV通信过程中很容易出现多条指令数据粘接到一起形成数据粘包的现象。现有的处理TCP通信数据粘包的方法一般分为三种。第一种是对于发送方引起的粘包现象，TCP提供了强制数据立即传送的操作指令PUSH，TCP软件收到该操作指令后，就立即将本段数据发送出去，而不必等待发送缓冲区满；第二种是对于接收方引起的粘包，通过优化程序设计、精简接收进程工作量、提高接收进程优先级等措施，使其及时接收数据，从而尽量避免出现粘包现象；第三种是将一包数据按结构字段，人为控制分多次接收，然后合并，通过这种手段来避免粘包。但第一种方法关闭了TCP的优化算法，影响应用程序性能；第二种只能降低粘包出现的可能性，当发送频率较高时，接收方还是可能会出现粘包问题；第三种方法虽然能够避免粘包，但处理效率很低，不能满足AGV的实时通信。以上解决方法都不适用于自动化生产车间通信频率较高的AGV之间进行通信。发明内容本发明的目的是针对采用TCP通信的AGV小车在钢结构比较复杂或电磁干扰比较严重的环境下，由于无线网络的不稳定，会导致车载无线通信模块偶尔掉线，当指令发送时掉线会导致发送失败，重连后无法得知该指令是否需要重发的问题，发明一种AGV无线通信掉线重传及数据粘包处理方法。它是一种改进的基于TCP的AGV无线通信方法，该方法有效地解决了掉线重连带来的数据重传问题以及效率较高的数据粘包处理方法。该方法自定义一收一答通信机制，建立一个发送队列，采用定时器定时发送信息，在掉线重连后由程序判断是否需要重新发送指令，解决掉线重连带来的数据重传问题；通过子线程建立环形缓冲区来接收并处理不定长数据包，能够高效的进行拆包处理，解决通信频率过高带来的粘包问题。本发明的技术方案是：一种AGV无线通信掉线重传及数据粘包处理方法；其特征是它包括以下步骤：步骤1：确定消息数据格式。格式为包首、包体和包尾，其中包首包括起始码、ID码、数据长度码，包体包括数据码、序列码、校验码，包尾为结束码，结束码是用特殊字符来标记。起始码和结束码为固定码；每一个ID码代表一种类型的操作指令，序列码是从1开始计数，每发送一条指令序列码就增1，保证了发送数据的某一时刻的唯一性，接收方返回指令的ID码和序列码来告知发送方指令已被接收；校验码采用BCC校验，将指令从起始码到序列码每个字节进行异或操作来生成校验码，用于接收方接收指令后判断指令的正确性。数据长度码表示的是数据码的长度，除数据码长度不定外，其他数据均为固定长度。只要从包首解析出数据长度码，即可获取整条数据的长度。步骤2：确定消息机制。AGV通信采用“一收一答”的通信流程。发送方发出一条消息，接收方在接收到“完整的数据包”之后，将该条消息的接收情况反馈给发送方，若发送方一段时间内没有接收到来自接收方的反馈信息，会重新发送该条消息。反馈信息主要包含指令的序列码信息，保证了发送数据的某一时刻的唯一性。例如，发送方发送一个数据包，发送序列码为09，接受方收到数据，并且回复的序列码也是09，证明对方成功收到发送方的数据，发送方完成一次正常的传输。一收一答通信机制能够有效处理丢包的情况，如果发送方未接收到相应指令的反馈信息，则发送方会重新发送该指令，避免AGV通信丢包无响应的情况出现。步骤3：发送方建立消息发送队列，采用定时器定时发送信息。发送方建立一个指令发送队列，将需要发送的消息按顺序入队，采用一个定时器定时发送，并结合一收一答机制判断接收方是否接收成功。采用定时器定时发送，如果某条指令因为掉线原因没有发送成功而继续保存在队列中，在连接后会重新执行发送操作，解决了掉线重连后数据重传的问题。步骤4：接收方开辟子线程建立循环缓冲区来预处理不定长数据包。数据包可能为一条完整的指令，这是正常通信的情况，直接解析即可。但也有可能是多条指令粘在一起发送，出现多包、断包的情况，这个时候就需要对数据进行处理。具体步骤如下：步骤4.1：接收方创建一个子线程，在子线程中开辟一个环形缓冲区，用来接收数据包。如果发送方同时发送数据过多不得不将某些指令拆分发送，通过将接受的数据放到环形缓冲区中，然后按照指令结构获取数据，就能够重新将该指令组装成完整指令。步骤4.2：将接收到的指令放入环形缓冲区，并进行相应处理。为每一个连接动态分配一个缓冲区,同时把此缓冲区和SOCKET通过结构体关联，当接收到数据时首先把此段数据存放在缓冲区中。步骤4.3：判断缓存区中的数据长度是否够一个包首的长度，如不够，则不进行拆包操作，继续接收数据。步骤4.4：若缓存区中的数据长度够一个包首的长度，判断包首起始码是否正确。如不正确，则为无法处理的断包，通过包尾将该指令拆分出来删除掉；若正确，则根据指令数据结构解析出里面数据长度码，计算得到整条指令的长度，判断缓存区中的数据长度是否够一条完整指令的长度,如不够,则不进行拆包操作，继续等待接收数据。步骤4.5：若缓存区中的数据够一条指令长度，则根据包尾取出该指令，并把此数据包从缓存区中删除掉，子线程重新从步骤4.3开始，获取下一条指令信息。本发明的有益效果是：本发明通过自定义一收一答通信机制，建立一个发送队列，采用定时器定时发送信息，有效的解决了掉线重连带来的数据重传问题。此外，在针对AGV通信的高频率方面的需求，接收方通过在子线程建立环形缓冲区来接收并处理不定长数据包，高效的解决了因高频率通信可能导致的多条指令信息粘接在一起发送的问题。附图说明图1是本发明的流程图。图2是本发明的指令格式图。图3是本发明的发送方定时器中指令发送流程图。图4是本发明子线程预处理一条指令流程图。具体实施方式为了使本发明的技术方案和实施步骤更加清晰明了，下面结合附图和实施例对本发明作进一步详细说明。本发明主要是针对采用TCP通信的AGV小车应用在自动车间物流的场景中可能出现的掉线重传和数据粘包等问题，提供了一种高效可行的处理方法。该方法自定义通信机制和数据格式，在子线程中建立环形缓冲区来接收信息，对不定长数据包进行预处理，能够高效的掉线重传和解决粘包等问题，从而为自动化生产车间提供一个可靠的AGV实时信息传输方法。如图1-4所示。一种AGV无线通信掉线重传及数据粘包处理方法，其流程图如图1所示，具体包括如下步骤：步骤1：确定消息数据格式。如图2所示，格式为包首、包体和包尾，其中包首包括起始码、ID码、数据长度码，包体包括数据码、序列码、校验码，包尾为结束码，结束码是用特殊字符来标记。起始码和结束码为固定码；每一个ID码代表一种类型的操作指令，序列码是从1开始计数，每发送一条指令序列码就增1，保证了发送数据的某一时刻的唯一性，接收方返回指令的ID码和序列码来告知发送方指令已被接收；校验码采用BCC校验，将指令从起始码到序列码每个字节进行异或操作来生成校验码，用于接收方接收指令后判断指令的正确性。数据长度码表示的是数据码的长度，除数据码长度不定外，其他数据均为固定长度。只要从包首解析出数据长度码，即可获取整条数据的长度。步骤2：确定消息机制。AGV通信采用一收一答的通信流程。发送方发出一条消息，接收方在接收到完整的数据包之后，将该条消息的接收情况反馈给发送方，若发送方一段时间内没有接收到来自接收方的反馈信息，会重新发送该条消息，同一条消息重复发送特定次数后依旧没有收到反馈信息，则判定通讯连接异常，自动停止消息发送，并启动故障报警流程，等待人为干预。反馈信息主要包含指令的序列码信息，保证了发送数据的某一时刻的唯一性。例如，发送方发送一个数据包，发送序列码为09，接受方收到数据，并且回复的序列码也是09，证明对方成功收到发送方的数据。发送方完成一次正常的传输。一收一答通信机制能够有效处理丢包的情况，如果发送方未接收到相应指令的反馈信息，则发送方会重新发送该指令，避免AGV发送出现丢包无响应的情况。步骤3：发送方建立消息发送队列，采用定时器定时发送信息。发送方建立一个指令发送队列，将需要发送的消息按顺序入队，采用一个定时器定时发送。定时器定时发送步骤如图3所示：步骤3.1：定时器中先判断连接状态是否处于连接中，若是则取出队首指令，发送该指令，否则无操作。步骤3.2：若收到确认收到该指令的反馈指令，则继续出队发送下一条指令；否则重复发送该指令到收到反馈指令，如果连续三次都未收到反馈，则进行故障报警，等待人工处理。步骤4：接收方开辟子线程建立循环缓冲区来预处理不定长数据包。数据包可能为一条完整的指令，这是正常通信的情况，直接解析即可。但也有可能是多条指令粘在一起发送，出现多包、断包的情况，这个时候就需要对数据进行处理。如图4，具体步骤如下：步骤4.1：接收方创建一个子线程，在子线程中开辟一个环形缓冲区用来接收数据包。为了防止发送出的数据接收方不能及时接收而出现粘包情况，在缓冲区中建立一个大小合适的循环队列来循环存储数据。同时定义两个指针,分别指向有效数据的头和尾，在存放数据和删除数据时只是进行头尾指针的移动。初始时，start和end指向同一位置；当接收到数据后，从start位置开始入队，同时end后移；当删除数据时，end位置不变，start位置后移。该方法能够高效的实现缓冲区数据的更新，提高通信的效率。如果发送方同时发送数据过多不得不将某些指令拆分发送，通过将接受的数据放到循环队列中，然后按照指令结构获取数据，就能够重新将该指令组装成完整指令。步骤4.2：将接收到的指令放入环形缓冲区，并进行相应处理。为每一个连接动态分配一个缓冲区,同时把此缓冲区和SOCKET通过结构体关联，当接收到数据时首先把此段数据存放在缓冲区中。步骤4.3：判断缓存区中的数据长度是否够一个包首的长度，如不够，则不进行拆包操作，继续接收数据。步骤4.4：若缓存区中的数据长度够一个包首的长度，判断包首起始码是否正确。如不正确，则为无法处理的断包，通过包尾将该指令拆分出来删除掉；若正确，则根据指令数据结构解析出里面数据长度码，计算得到整条指令的长度，判断缓存区中的数据长度是否够一条完整指令的长度,如不够,则不进行拆包操作，继续等待接收数据。步骤4.5：若缓存区中的数据够一条指令长度，则根据包尾取出该指令，并把此数据包从缓存区中删除掉，子线程重新从步骤4.3开始，获取下一条指令信息。本发明未涉及部分与现技术相同或可采用现有技术加以实现。
