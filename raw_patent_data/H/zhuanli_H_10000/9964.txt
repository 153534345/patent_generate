标题title
数据处理方法、设备、介质及计算机程序产品
摘要abst
本申请提供的数据处理方法、设备、介质及计算机程序产品，包括：第一控制器接收第一交换机发送的角色响应信息，根据角色响应信息更新本地存储的第一数据库。第一控制器将第一数据库的包括第一生存时间的第一摘要信息添加到第一内容摘要信息列表，并向其他控制器广播第一摘要信息。其他控制器中接收到第一摘要信息的时间早于第一生存时间的第二控制器向第一控制器发送第一数据库更新请求，第一控制器向第二控制器发送第一数据库的更新数据，以使第二控制器更新本地存储的第二数据库。本申请创建包含生存时间的摘要信息，避免所有控制器皆接收到摘要信息，将数据库同步压力分散于各个控制器，减小了第一控制器的数据库同步压力。
权利要求书clms
1.一种数据处理方法，其特征在于，所述方法应用于第一控制器，所述方法包括：接收第一交换机发送的角色响应信息，并根据所述角色响应信息更新本地存储的第一数据库；其中，所述角色响应信息是在所述第一交换机的主控制器发生变化时生成的；将所述第一数据库的第一摘要信息添加到第一内容摘要信息列表，并向其他控制器广播所述第一摘要信息；其中，所述第一摘要信息包括第一生存时间；接收第二控制器发送的第一数据库更新请求，其中，所述第二控制器是其他控制器中在第一生存时间内接收到所述第一摘要信息的控制器；向所述第二控制器发送所述第一数据库的更新数据，以使所述第二控制器根据所述第一数据库的更新数据更新本地存储的第二数据库。2.根据权利要求1所述的数据处理方法，其特征在于，在所述第一控制器接收第一交换机发送的角色响应信息之前，所述方法还包括：接收所述第一交换机发送的被控请求，获取所述第一数据库中的各个其他控制器的负载数量以及所述第一控制器的负载数量；当所述第一控制器的负载数量小于或者等于其他控制器中任意控制器的负载数量时，生成角色竞选请求；向所述第一交换机发送所述角色竞选请求，以使所述第一交换机根据接收到所述第一控制器发送的所述角色竞选请求的时间和接收到其他竞选请求的时间生成角色响应信息，其中，所述其他竞选请求是负载数量和所述第一控制器的负载数量相同的控制器发出的。3.根据权利要求2所述的数据处理方法，其特征在于，在所述第一控制器向所述第二控制器发送所述第一数据库的更新数据之后，所述方法还包括：获取所述第一数据库中的LLDP协议的邻居链路信息计算第二交换机到第三交换机之间的数据传输的第一最短路径；根据所述第一最短路径生成共识请求，并向其他控制器发送所述共识请求；接收其他控制器发送的认证信息，并在认证信息满足共识条件时将所述第一最短路径存储在区块链。4.根据权利要求3所述的数据处理方法，其特征在于，所述认证信息满足共识条件时，具体包括：所述第一最短路径小于参考路径集中所有路径，所述参考路径集中路径是其他控制器生成的所述第二交换机到所述第三交换机之间的数据传输的最短路径；或者所述第一最短路径等于所述参考路径集中最小的路径，以及所述第一控制器的计算时间小于参考时间集中所有计算时间，所述参考时间集中计算时间是所述参考路径集中最小的路径所对应的计算时间。5.一种数据处理方法，其特征在于，所述方法应用于第二控制器，所述方法包括：接收第一控制器广播的第一数据库的第一摘要信息；其中，所述第一摘要信息在所述第一控制器在根据角色响应信息更新本地存储的第一数据库后被添加在第一内容摘要信息列表，所述角色响应信息是在第一交换机的主控制器发生变化时生成的；在接收到所述第一摘要信息的时间早于第一生存时间时生成第一数据库更新请求；向所述第一控制器发送第一数据库更新请求，以使所述第一控制器在接收到所述第一数据库更新请求时向所述第二控制器发送所述第一数据库的更新数据；根据所述第一数据库的更新数据更新本地存储的第二数据库。6.根据权利要求5所述的数据处理方法，其特征在于，在所述第二控制器接收第一控制器广播的第一数据库的第一摘要信息之后，所述方法还包括：接收第三控制器发送的第二数据库更新请求，所述第三控制器是其他控制器中在第一生存时间内未接收到所述第一摘要信息，在第二生存时间内接收到第二摘要信息，且与所述第二控制器相近的控制器；向所述第三控制器发送所述第二数据库的更新数据，以使所述第三控制器根据所述第二数据库的更新数据更新本地存储的第三数据库。7.根据权利要求5或6中所述的数据处理方法，其特征在于，所述方法还包括：更新所述第一摘要信息，以获得所述第二摘要信息；其中，所述第一摘要信息的第一生存时间与所述第二摘要信息的第二生存时间不同；将所述第二摘要信息添加到第二内容摘要信息列表中，并广播所述第二摘要信息。8.一种电子设备，包括：处理器，以及与所述处理器通信连接的存储器；所述存储器存储计算机执行指令；所述处理器执行所述存储器存储的计算机执行指令，以实现如权利要求1至4中任意一项或者，5至7中任意一项所述的数据处理方法。9.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质中存储有计算机执行指令，所述计算机执行指令被处理器执行时用于实现如权利要求1至4中任意一项或者，5至7中任意一项所述的数据处理方法。10.一种计算机程序产品，包括计算机程序，该计算机程序被处理器执行时实现权利要求1至4中任意一项或者，5至7中任意一项所述的数据处理方法。
说明书desc
技术领域本申请涉及网络通信技术领域，尤其涉及一种数据处理方法、设备、介质及计算机程序产品。背景技术在软件定义网络中，其核心技术开放流将数据与控制相分离。在控制层，包括具有逻辑中心化和可编程的控制器，可掌握全局网络信息，方便用户管理配置网络和部署新协议。在数据层，包括转发数据的交换机，可以快速处理匹配的数据包。控制器通过标准接口向交换机下发统一标准规则，交换机按照规则执行相应的动作。为了提高SDN网络的普及率，需要保证SDN控制器的数据一致性。现有技术中，使用控制器冗余及负载均衡方案，当Openflow控制器在与Openflow交换机建立连接后，将控制器分为对等控制器、主控制器、从控制器三种角色，主控制器具对Openflow交换机进行完全操作的权限，从控制器只能对Openflow交换机只读，当主控制器宕机时，其它从控制器通过选举产生新的主控制器。其他控制器向新的主控制器同步数据。也就是说，当前使用的控制器冗余及负载均衡方案，所有控制器都向主控制器同步数据，会导致主控制器出现负荷过重的问题。发明内容本申请提供一种数据处理方法、设备、介质及计算机程序产品，用于解决所有控制器都向主控制器同步数据，会导致主控制器出现负荷过重的问题。第一方面，本申请提供一种数据处理方法，所述方法应用于第一控制器，所述方法包括：接收第一交换机发送的角色响应信息，并根据所述角色响应信息更新本地存储的第一数据库；其中，所述角色响应信息是在所述第一交换机的主控制器发生变化时生成的；将所述第一数据库的第一摘要信息添加到第一内容摘要信息列表，并向其他控制器广播所述第一摘要信息；其中，所述第一摘要信息包括第一生存时间；接收第二控制器发送的第一数据库更新请求，其中，所述第二控制器是其他控制器中在第一生存时间内接收到所述第一摘要信息的控制器；向所述第二控制器发送所述第一数据库的更新数据，以使所述第二控制器根据所述第一数据库的更新数据更新本地存储的第二数据库。在一种具体实施方式中，在所述第一控制器接收第一交换机发送的角色响应信息之前，所述方法还包括：接收所述第一交换机发送的被控请求，获取所述第一数据库中的各个其他控制器的负载数量以及所述第一控制器的负载数量；当所述第一控制器的负载数量小于或者等于其他控制器中任意控制器的负载数量时，生成角色竞选请求；向所述第一交换机发送所述角色竞选请求，以使所述第一交换机根据接收到所述第一控制器发送的所述角色竞选请求的时间和接收到其他竞选请求的时间生成角色响应信息，其中，所述其他竞选请求是负载数量和所述第一控制器的负载数量相同的控制器发出的。在一种具体实施方式中，在所述第一控制器向所述第二控制器发送所述第一数据库的更新数据之后，所述方法还包括：获取所述第一数据库中的LLDP协议的邻居链路信息计算第二交换机到第三交换机之间的数据传输的第一最短路径；根据所述第一最短路径生成共识请求，并向其他控制器发送所述共识请求；接收其他控制器发送的认证信息，并在认证信息满足共识条件时将所述第一最短路径存储在区块链。在一种具体实施方式中，所述认证信息满足共识条件时，具体包括：所述第一最短路径小于参考路径集中所有路径，所述参考路径集中路径是其他控制器生成的所述第二交换机到所述第三交换机之间的数据传输的最短路径；或者所述第一最短路径等于所述参考路径集中最小的路径，以及所述第一控制器的计算时间小于参考时间集中所有计算时间，所述参考时间集中计算时间是所述参考路径集中最小的路径所对应的计算时间。第二方面，本申请提供一种数据处理方法，所述方法应用于第二控制器，所述方法包括：接收第一控制器广播的第一数据库的第一摘要信息；其中，所述第一摘要信息在所述第一控制器在根据角色响应信息更新本地存储的第一数据库后被添加在第一内容摘要信息列表，所述角色响应信息是在第一交换机的主控制器发生变化时生成的；在接收到所述第一摘要信息的时间早于第一生存时间时生成第一数据库更新请求；向所述第一控制器发送第一数据库更新请求，以使所述第一控制器在接收到所述第一数据库更新请求时向所述第二控制器发送所述第一数据库的更新数据；根据所述第一数据库的更新数据更新本地存储的第二数据库。在一种具体实施方式中，在所述第二控制器接收第一控制器广播的第一数据库的第一摘要信息之后，所述方法还包括：接收第三控制器发送的第二数据库更新请求，所述第三控制器是其他控制器中在第一生存时间内未接收到所述第一摘要信息，在第二生存时间内接收到第二摘要信息，且与所述第二控制器相近的控制器；向所述第三控制器发送所述第二数据库的更新数据，以使所述第三控制器根据所述第二数据库的更新数据更新本地存储的第三数据库。在一种具体实施方式中，所述方法还包括：更新所述第一摘要信息，以获得所述第二摘要信息；其中，所述第一摘要信息的第一生存时间与所述第二摘要信息的第二生存时间不同；将所述第二摘要信息添加到第二内容摘要信息列表中，并广播所述第二摘要信息。第三方面，本申请提供一种数据处理装置，包括：接收模块，用于接收第一交换机发送的角色响应信息；处理模块，用于根据所述角色响应信息更新本地存储的第一数据库；其中，所述角色响应信息是在所述第一交换机的主控制器发生变化时生成的；所述处理模块，还用于将所述第一数据库的第一摘要信息添加到第一内容摘要信息列表；发送模块，用于向其他控制器广播所述第一摘要信息；其中，所述第一摘要信息包括第一生存时间；所述接收模块，还用于接收第二控制器发送的第一数据库更新请求，其中，所述第二控制器是其他控制器中在第一生存时间内接收到所述第一摘要信息的控制器；所述发送模块，还用于向所述第二控制器发送所述第一数据库的更新数据，以使所述第二控制器根据所述第一数据库的更新数据更新本地存储的第二数据库。第四方面，本申请提供一种数据处理装置，包括：接收模块，用于接收第一控制器广播的第一数据库的第一摘要信息；其中，所述第一摘要信息在所述第一控制器在根据角色响应信息更新本地存储的第一数据库后被添加在第一内容摘要信息列表，所述角色响应信息是在第一交换机的主控制器发生变化时生成的；处理模块，用于在接收到所述第一摘要信息的时间早于第一生存时间时生成第一数据库更新请求；发送模块，用于向所述第一控制器发送第一数据库更新请求，以使所述第一控制器在接收到所述第一数据库更新请求时向所述第二控制器发送所述第一数据库的更新数据；处理模块，用于根据所述第一数据库的更新数据更新本地存储的第二数据库。第五方面，本申请提供一种电子设备，包括：处理器，以及与所述处理器通信连接的存储器；所述存储器存储计算机执行指令；所述处理器执行所述存储器存储的计算机执行指令，以实现第一方面或者第二方面任意一项所述的数据处理方法。第四方面，本申请提供一种计算机可读存储介质，所述计算机可读存储介质中存储有计算机执行指令，所述计算机执行指令被处理器执行时用于实现第一方面或者第二方面任意一项所述的数据处理方法。第五方面，本申请提供一种计算机程序产品，包括计算机程序，该计算机程序被处理器执行时实现第一方面或者第二方面任意一项所述的数据处理方法。本申请提供一种数据处理方法、设备、介质及计算机程序产品。相较于现有技术，本申请中第一交换机在第一交换机的主控制器发生变化时生成角色响应信息，第一控制器接收第一交换机发送的角色响应信息，并根据角色响应信息更新本地存储的第一数据库。第一控制器将第一数据库的包括第一生存时间的第一摘要信息添加到第一内容摘要信息列表，并向其他控制器广播第一摘要信息。在第一生存时间内接收到第一摘要信息的控制器，如第二控制器，向第一控制器发送第一数据库更新请求。第一控制器向第二控制器发送第一数据库的更新数据，第二控制器根据第一数据库的更新数据更新本地存储的第二数据库。本申请创建摘要信息，将数据库同步压力分散于各个控制器，减轻了数据同步对网络带宽的消耗，减小了第一控制器的数据库同步压力，避免所有控制器都向第一控制器同步数据，会导致第一控制器出现负荷过重的问题。附图说明为了更清楚地说明本申请实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作一简单地介绍，显而易见地，下面描述中的附图是本申请的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动性的前提下，还可以根据这些附图获得其他的附图。图1为本申请提供的数据处理方法的应用场景示意图；图2为本申请提供的数据处理方法实施例一的交互示意图；图3为本申请提供的数据处理方法实施例二的流程示意图；图4为本申请提供的数据处理方法的示意图；图5为本申请提供的数据处理方法的示意图；图6为本申请提供的数据处理方法的示意图；图7为本申请提供的数据处理方法的示意图；图8为本申请提供的数据处理方法的示意图；图9为本申请提供的数据处理方法的示意图；图10为本申请提供的数据处理装置实施例一的结构示意图；图11为本申请提供的数据处理装置实施例二的结构示意图；图12为本申请提供的一种电子设备的结构示意图。具体实施方式为使本申请实施例的目的、技术方案和优点更加清楚，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本申请一部分实施例，而不是全部的实施例。基于本申请中的实施例，本领域普通技术人员在根据本实施例的启示下作出的所有其他实施例，都属于本申请保护的范围。本申请的说明书和权利要求书及上述附图中的术语“第一”、“第二”、“第三”“第四”等是用于区别类似的对象，而不必用于描述特定的顺序或先后次序。应该理解这样使用的数据在适当情况下可以互换，以便这里描述的本申请的实施例能够以除了在这里图示或描述的那些以外的顺序实施。此外，术语“包括”和“具有”以及他们的任何变形，意图在于覆盖不排他的包含，例如，包含了一系列步骤或单元的过程、方法、系统、产品或设备不必限于清楚地列出的那些步骤或单元，而是可包括没有清楚地列出的或对于这些过程、方法、产品或设备固有的其它步骤或单元。首先对本申请所涉及的名词进行解释：软件定义网络：一种新型网络创新架构，是网络虚拟化的一种实现方式。其核心技术开放流利用分层的思想将数据与控制相分离，从而实现了网络流量的灵活控制，使网络作为管道变得更加智能，为核心网络及应用的创新提供了良好的平台。在控制平面，包括具有逻辑中心化和可编程的控制器，可掌握全局网络信息，方便用户管理配置网络和部署新协议。在数据平面，包括转发数据的交换机，可以快速处理匹配的数据包。SDN中的接口具有开放性，以控制器为逻辑中心，南向接口——控制数据平面接口负责与数据平面进行通信，北向接口负责与应用平面进行通信，东西向接口负责多控制器之间的通信。最主流的南向接口CDPI采用的是OpenFlow协议。OpenFlow最基本的特点是基于流的概念来匹配转发规则，每一个交换机都维护一个流表，依据流表中的转发规则进行转发，而流表的建立、维护和下发都是由控制器完成的。针对北向接口，应用程序通过北向接口编程来调用所需的各种网络资源，实现对网络的快速配置和部署。东西向接口使控制器具有可扩展性，为负载均衡和性能提升提供了技术保障。开放流：一种网络通信协议，属于数据链路层，能够控制网上交换器或路由器的转发平面，借此改变网络数据包所走的网络路径。OpenFlow网络由交换机、网络虚拟化层和控制器三部分组成。交换机进行数据层的转发；网络虚拟化层对网络进行虚拟化；控制器对网络进行集中控制，实现控制层的功能。控制器：负责流量控制以确保智能网络。OpenFlow控制器决定了所有数据包在网络中传输路径。交换机：是整个OpenFlow网络的核心部件，主要管理数据层的转发。OpenFlow交换机由流表、安全通道和协议三部分组成。流表：由很多个流表项组成，每个流表项就是一个转发规则。进入交换机的数据包通过查询流表来获得转发的目的端口。流表项由头域、计数器和操作组成；其中头域是个十元组，是流表项的标识；计数器用来计算流表项的统计数据；操作标明了与该流表项匹配的数据包应该执行的操作。安全通道：安全通道是连接OpenFlow交换机到控制器的接口。控制器通过这个接口控制和管理交换机，同时控制器接收来自交换机的事件并向交换机发送数据包。交换机和控制器通过安全通道进行通信，而且所有的信息必须按照OpenFlow协议规定的格式来执行。对等计算：是一类允许一组用户互相连接并直接从用户硬盘上获取文件的网络。Peer-to-peer网络是一个运行于个人电脑上的应用，通过网络在用户间分享文件。P2P网络通过连接个人电脑分享文件而不是通过中央服务器。P2P是一种分布式网络，网络的参与者共享他们所拥有的一部分硬件资源，这些共享资源需要由网络提供服务和内容，能被其它对等节点直接访问而无需经过中间实体。在此网络中的参与者既是资源提供者，又是资源获取者。P2P的特点：无中央服务器；用户之间互联并分享文件。工作量证明机制：用工作量结果来证明贡献大小，根据贡献大小确定记账权和奖励。链路层发现协议：是一种数据链路层协议。网络设备可以通过在本地网络中发送数据链路层协议单元来通告其他设备自身的状态。是一种能够使网络中的设备互相发现并通告状态、交互信息的协议。为了提高SDN网络的普及率，需要保证SDN控制器的数据一致性。现有技术中，使用控制器的冗余及负载均衡方案，当控制器在与交换机建立连接后，将控制器分为对等控制器、主控制器、从控制器三种角色。主控制器具对交换机进行完全操作的权限，从控制器只能对交换机只读，当主控制器宕机时，其它从控制器通过选举产生新的主控制器。其他控制器都需要向新的主控制器同步数据，主控制器会出现负荷过重现象。针对现有技术中存在的问题，发明人在对SDN控制器集群体系进行研究的过程中发现，如果将区块链网络的全分布式且可容忍单点故障的P2P协议引入到SDN控制器集群体系中，SDN控制器利用区块链网络的P2P协议同步SDN控制器的数据库，创建摘要信息，主控制器将具有生存时间的摘要信息发送至其他控制器，其他控制器中在摘要信息的生存时间内接收到摘要信息的控制器，会主动向主控制器同步数据库的具体信息。由于摘要信息在发出时，会自动计时，在计时的时间达到生存时间时，摘要信息自动删除，所以在其他控制器中会有一些控制器没有接收到摘要信息，没有收到摘要信息的控制器不会主动向主控制器同步数据库的具体信息，而是会向已经更新数据库的控制器同步数据库，将数据库同步压力分散于各个控制器，减轻了数据同步对网络带宽的消耗，减小了主控制器的数据库同步压力。基于上述发明构思，设计了本申请中的数据处理方案。下面对本申请的数据处理方案进行详细的说明。图1为本申请提供的数据处理方法的应用场景示意图，如图1所示，该应用场景可以包括：第一控制器101、第二控制器102、第三控制器103、第四控制器104和至少一个交换机。示例性的，在图1所示的应用场景中，第一交换机105处于无主控制器的状态，第一交换机105在收到第一控制器101和第四控制器的角色竞选请求时，第一交换机105根据接收到第一控制器101发送的角色竞选请求的时间和接收到第四控制器104发送的角色竞选请求的时间生成角色响应信息，第一交换机105向第一交换机105的新主控制器第一控制器101和第一交换机的从控制器第四控制器104发送角色响应信息。第一控制器101接收第一交换机105发送的角色响应信息，并根据角色响应信息更新本地存储的第一数据库。第一控制器101将第一数据库的包括第一生存时间的第一摘要信息添加到第一内容摘要信息列表，并向其他控制器第二控制器102、第三控制器103和第四控制器104广播第一摘要信息。进而在第一控制器101接收第二控制器102发送的第一数据库更新请求后，向第二控制器发送第一数据库的更新数据。其他控制器中在第一摘要信息的第一生存时间内接收到第一摘要信息的控制器第二控制器102向第一控制器101发送第一数据库更新请求，在接收到第一控制器101发送的第一数据库的更新数据后，第二控制器102根据第一数据库的更新数据更新本地存储的第二数据库。第二控制器102将第二数据库的第二摘要信息添加到第二内容摘要信息列表，并向其他控制器广播第二摘要信息。进而在第二控制器102接收第三控制器103发送的第二数据库更新请求后，向第三控制器发送第二数据库的更新数据。第三控制器103在第一摘要信息的第一生存时间内未接收到第一控制器101发送的第一摘要信息，在第二摘要信息的第二生存时间内收到第二控制器102发送的第二摘要信息，第三控制器103向第二控制器102发送第二数据库更新请求，在接收到第二控制器102发送的第二数据库的更新数据后，第三控制器103根据第二数据库的更新数据更新本地存储的第三数据库。第三控制器103将第三数据库的第三摘要信息添加到第三内容摘要信息列表，并向其他控制器广播第三摘要信息。进而在第三控制器103接收第四控制器104发送的第三数据库更新请求后，向第四控制器发送第三数据库的更新数据。第四控制器104在第一摘要信息的第一生存时间内未接收到第一控制器101发送的第一摘要信息，在第二摘要信息的第二生存时间内未收到第二控制器102发送的第二摘要信息，在第三摘要信息的第三生存时间内收到第三控制器103发送的第三摘要信息。第四控制器104向第三控制器103发送第三数据库更新请求，在接收到第三控制器103发送的第三数据库的更新数据后，第四控制器104根据第三数据库的更新数据更新本地存储的第四数据库。基于上述过程，第一交换机在第一交换机的主控制器发生变化时生成角色响应信息，第一控制器接收第一交换机发送的角色响应信息，并根据角色响应信息更新本地存储的第一数据库。第一控制器将第一数据库的包括第一生存时间的第一摘要信息添加到第一内容摘要信息列表，并向其他控制器广播第一摘要信息。其他控制器中在第一摘要信息的第一生存时间内接收到第一摘要信息的第二控制器向第一控制器发送第一数据库更新请求，第一控制器向第二控制器发送第一数据库的更新数据，第二控制器根据第一数据库的更新数据更新本地存储的第二数据库。本申请创建摘要信息，将数据库同步压力分散于各个控制器，减轻了数据同步对网络带宽的消耗，减小了第一控制器的数据库同步压力，避免了所有控制器都向第一控制器同步数据，会导致第一控制器出现负荷过重的问题。需要说明的是，图1仅是本申请实施例提供的一种应用场景的示意图，本申请实施例不对图1中包括的各种设备的实际形态进行限定，也不对图1中设备之间的交互方式进行限定，在方案的具体应用中，可以根据实际需求设定。下面，通过具体实施例对本申请的技术方案进行详细说明。需要说明的是，下面这几个具体的实施例可以相互结合，对于相同或相似的概念或过程可能在某些实施例中不再赘述。图2为本申请提供的数据处理方法实施例一的交互示意图。如图2所示，该数据处理方法具体包括以下步骤：步骤S201：第一交换机向第一控制器发送角色响应信息。其中，角色响应信息是在第一交换机的主控制器发生变化时生成的。在同一个openflow交换机网络里面，第一交换机的主控制器发生宕机，该主控制器控制的第一交换机处在无主控制器制的状态，当有数据包到达第一交换机后，第一交换机向主控制器寻求处理数据包的方法，由于第一交换机的主控制器宕机，第一交换机向openflow交换机网络中的其他控制器发送被控请求。第一控制器接收第一交换机发送的被控请求，获取第一数据库中的各个其他控制器的负载数量以及第一控制器的负载数量；当第一控制器的负载数量小于或者等于其他控制器中任意控制器的负载数量时，第一控制器生成角色竞选请求；第一控制器向第一交换机发送角色竞选请求，以使第一交换机根据接收到第一控制器发送的角色竞选请求的时间和接收到其他竞选请求的时间生成角色响应信息，其中，其他竞选请求是负载数量和第一控制器的负载数量相同的控制器发出的，本实施例中第四控制器的负载数量和第一控制器的负载数量相同，第一交换机接收到第一控制器和第四控制器发送的角色竞选请求，第一交换机根据接收到第一控制器发送的角色竞选请求的时间和接收到第四控制器发送的角色竞选请求的时间生成角色响应信息，第一交换机向第一控制器和第四控制器发送角色响应信息。具体地，每个控制器都会收到第一交换机发送的被控请求，这里举例有四个控制器，第一、第二、第三和第四控制器，第一控制器接收第一交换机发送的被控请求，获取第一数据库中的各个其他控制器的负载数量以及第一控制器的负载数量，确定第一控制器的负载数量小于或者等于其他控制器中任意控制器的负载数量；第四控制器接收第一交换机发送的被控请求，获取第四控制器的第四数据库中的各个其他控制器的负载数量以及第四控制器的负载数量，确定第四控制器的负载数量和第一控制器的负载数量相同，即第四控制器的负载数量小于或者等于其他控制器中任意控制器的负载数量。示例性地，如图1所示，第一控制器是一台交换机的主控制器，第二控制器是两台交换机的主控制器，第三控制器是两台交换机的控制器，第四控制器是一台交换机的主控制器，即第一控制器和第四控制器的负载数量小于第二控制器和第三控制器的负载数量，所以第一控制器和第四控制器生成角色竞选请求，OFPT_ROLE_REQUEST。图4为本申请提供的数据处理方法的示意图，如图4所示，第一控制器和第四控制器向第一交换机发送角色竞选请求OFPT_ROLE_REQUEST。第一交换机接收到第一控制器发送的角色竞选请求的时间早于接收到第四控制器发送的角色竞选请求的时间，第一交换机根据接收到第一控制器发送的角色竞选请求的时间和接收到第四控制器发送的角色竞选请求的时间生成角色响应信息。第一交换机向第一控制器和第四控制器返回角色响应信息OFPT_ROLE_REPLY，其中ROLE字段表明了控制器当前的角色。示例性地，第一交换机向第一控制器返回的角色响应信息OFPT_ROLE_REPLY表示第一控制器为第一交换机的主控制器，第一交换机向第四控制器返回的角色响应信息OFPT_ROLE_REPLY表示第四控制器为第一交换机的从控制器。图5为本申请提供的数据处理方法的示意图，如图5所示，第一控制器501为第一交换机505的主控制器，第二控制器502、第三控制器503和第四控制器504为第一交换机的从控制器。步骤S202：第一控制器根据接收到的角色响应信息更新本地存储的第一数据库。第一控制器接收第一交换机发送的角色响应信息，该角色响应信息OFPT_ROLE_REPLY表示第一控制器为第一交换机的主控制器。第一控制器根据第一交换机发送的角色响应信息更新第一控制器本地存储的第一数据库中第一交换机相关的数据。具体地，本地数据库中保存关于全网交换机基本信息的数据库；全网交换机的流表、组表、计量表数据库；全网的LLDP交换机邻居链路信息数据库；全网交换机ECMP数据库；全网交换机端口映射数据库等。步骤S203：第一控制器将第一数据库的第一摘要信息添加到第一内容摘要信息列表。第一控制器根据角色响应信息更新本地存储的第一数据库后，第一控制器根据第一数据库的变化生成第一摘要信息，第一控制器将第一数据库的第一摘要信息添加到第一内容摘要信息列表。其中，第一摘要信息包括第一生存时间。步骤S204：第一控制器向第二控制器发送第一数据库的第一摘要信息。在区块链的P2P网络中，任意两台控制器能直接进行数据传输和通信。第一控制器向其他控制器广播第一摘要信息，其中，第一控制器向第二控制器发送第一摘要信息。第一摘要信息是一个很小的数据包，其中，第一摘要信息包含第一生存时间，第一生存时间是第一摘要信息在网络上存在的最长时间，超出这个时间第一摘要信息将被丢弃。第一摘要信息还可以包括第一数据库更新的时间。步骤S205：第二控制器在接收到第一摘要信息的时间早于第一生存时间时生成第一数据库更新请求。第一控制器向其他控制器广播第一摘要信息后，第二控制器接收第一控制器广播的第一数据库的第一摘要信息，第二控制器接收到第一摘要信息的时间早于第一摘要信息的第一生存时间。摘要信息会计时，在计时的时间达到生存时间时，摘要信息自动删除，其他控制器在第一摘要信息自动删除之前未接收到第一摘要信息，在第一摘要信息自动删除之后不能接收到第一摘要信息。第二控制器接收第一控制器发送的第一数据库的第一摘要信息后，根据第一摘要信息确定第一控制器的第一数据库发生变化，第二控制器根据接收的第一控制器发送的第一数据库的第一摘要信息，生成第一数据库更新请求。步骤S206：第二控制器向第一控制器发送第一数据库更新请求。第二控制器生成第一数据库更新请求后，向第一控制器发送第一数据库更新请求以根据第一数据库数据更新的具体信息更新第二控制器本地存储的第二数据库。步骤S207：第一控制器向第二控制器发送第一数据库的更新数据。第一控制器接收第二控制器发送的第一数据库更新请求后，向第二控制器发送第一数据库的更新数据。步骤S208：第二控制器根据第一数据库的更新数据更新本地存储的第二数据库。第二控制器接收第一控制器发送的第一数据库的更新数据，根据第一数据库的更新数据更新本地存储的第二数据库。第二控制器更新本地存储的第二数据库后，第二控制器更新第一摘要信息，以获得第二摘要信息；其中，第二摘要信息的第二生存时间与第一摘要信息的第一生存时间不同；可选地，第二摘要信息还可以包括第二数据库的更新时间。第二控制器将第二摘要信息添加到第二内容摘要信息列表中，并广播第二摘要信息。第二控制器向其他控制器广播第二摘要信息后，第三控制器接收第二控制器广播的第二数据库的第二摘要信息，第三控制器接收到第二摘要信息的时间早于第二摘要信息的第二生存时间。第三控制器根据接收的第二控制器广播的第二数据库的第二摘要信息，生成第二数据库更新请求。第三控制器向第二控制器发送第二数据库更新请求。其中，第三控制器是其他控制器中在第一摘要信息的第一生存时间内未接收到第一摘要信息，在第二摘要信息的第二生存时间接收到第二摘要信息，且与第二控制器相近的控制器。第二控制器接收第三控制器发送的第二数据库更新请求，第二控制器向第三控制器发送第二数据库的更新数据，以使第三控制器根据第二数据库的更新数据更新本地存储的第三数据库。第三控制器根据第二数据库的更新数据更新本地存储的第三数据库后，第三控制器更新第二摘要信息，以获得第三摘要信息；其中，第三摘要信息的第三生存时间与第二摘要信息的第二生存时间不同；可选地，第三摘要信息还可以包括第三数据库的更新时间。第三控制器将第三摘要信息添加到第三内容摘要信息列表中，并广播第三摘要信息。第四控制器接收第三控制器广播的第三数据库的第三摘要信息。第四控制器根据接收的第三控制器广播的第三数据库的第三摘要信息，生成第三数据库更新请求。第四控制器向第三控制器发送第三数据库更新请求。其中，第四控制器是其他控制器中在第一摘要信息的第一生存时间内未接收到第一摘要信息，在第二摘要信息的第二生存时间未接收到第二摘要信息，在第三摘要信息的第三生存时间接收到第三摘要信息，且与第三控制器相近的控制器。本实施例提供的数据处理方法，通过如下步骤执行，第一交换机向第一控制器发送角色响应信息。第一控制器根据接收到的角色响应信息更新本地存储的第一数据库，第一控制器将第一数据库的第一摘要信息添加到第一内容摘要信息列表，第一控制器向第二控制器发送第一数据库的第一摘要信息。第二控制器在接收到第一摘要信息的时间早于第一生存时间时生成第一数据库更新请求，第二控制器向第一控制器发送第一数据库更新请求。第一控制器向第二控制器发送第一数据库的更新数据。第二控制器根据第一数据库的更新数据更新本地存储的第二数据库。本申请创建摘要信息，设置摘要信息的生存时间，使摘要信息到达生存时间后自动删除，避免所有控制器都接收到摘要信息，将控制器区分为在摘要信息的生存时间内接收到摘要信息的控制器和在摘要信息的生存时间内未接收到摘要信息的控制器。在摘要信息的生存时间内接收到摘要信息的控制器向该发送摘要信息的控制器同步数据库，在摘要信息的生存时间内未接收到摘要信息的控制器向其他接收到摘要信息且已经同步数据库的控制器同步数据库。本申请将数据库同步压力分散于各个控制器，减轻了数据同步对网络带宽的消耗，减轻了第一控制器同步数据的压力。图3为本申请提供的数据处理方法实施例二的流程示意图。如图3所示，在步骤S207“第一控制器向第二控制器发送第一数据库的更新数据”后，该数据处理方法还包括以下步骤：步骤S301：第一控制器获取第一数据库中的LLDP协议的邻居链路信息，计算第二交换机到第三交换机之间的数据传输的第一最短路径。图6为本申请提供的数据处理方法的示意图，如图6所示，当openflow网络中仅存在一个控制器，该控制器控制整个网络的交换机，当要计算最短路径时，该控制器计算出最短路径，协调网络中的交换机生成最短路径的流表，使数据包按最短路径进行转发。当网络中存在多个控制器同时负载均衡工作时，各个控制器就各自为政，如图7所示，图7为本申请提供的数据处理方法的示意图，第一控制器701控制第二交换机705，第二控制器702控制第七交换机706和第四交换机709，第三控制器703控制第五交换机707和第六交换机710，第四控制器704控制第三交换机708。当需要计算第二交换机到第三交换机的最短路径时，需要协调第一控制器、第二控制器、第三控制器和第四控制器。第一控制器获取第一数据库中的LLDP协议的邻居链路信息，计算第二交换机到第三交换机之间的数据传输的第一最短路径。具体地，第一控制器接收第二交换机通过LLDP协议收集的邻近的网络拓扑链路信息，将LLDP邻居链路信息存储至第一数据库，通过实施例一的控制器的数据库同步过程，第一控制器存储全网的LLDP网络链路信息，第一控制器根据第一数据库中的LLDP协议的邻居链路信息，计算第二交换机到第三交换机之间的数据传输的第一最短路径。图8为本申请提供的数据处理方法的示意图，如图8所示，同样的，其他控制器计算第二交换机到第三交换机之间的数据传输的最短路径。具体地，控制器接收该控制器控制的交换机通过LLDP协议收集的邻近的网络拓扑链路信息，将LLDP邻居链路信息存储至本地数据库，通过实施例一的控制器的数据库同步过程，该控制器存储全网的LLDP网络链路信息，该控制器根据本地数据库中的LLDP协议的邻居链路信息，计算第二交换机到第三交换机之间的数据传输的最短路径。可选地，应用程序通过北向接口向网络中所有控制器下达最短路径需求，最短路径需求用于请求控制器计算第二交换机到第三交换机的最短路径。可选地，数据包到达第二交换机后，第二交换机向第二交换机的主控制器第一控制器发送数据包处理请求，第一控制器决定数据包的目的地址是第三交换机，第一控制器向其他控制器发送最短路径需求。步骤S302：第一控制器根据第一最短路径生成共识请求，并向其他控制器发送共识请求。第一控制器计算第二交换机到第三交换机之间的数据传输的第一最短路径后，确定第一控制器计算第一最短路径的计算时间和第一路径的cost值。第一控制器根据第一最短路径生成共识请求，并向其他控制器发送共识请求，其中，共识请求中包括第一最短路径的计算时间和第一路径的cost值。第二控制器也计算第二交换机到第三交换机之间的数据传输的第二最短路径，并确定第二控制器计算第二最短路径的计算时间和最短路径的cost值。第二控制器根据第二最短路径生成共识请求，并向其他控制器发送共识请求，同样的，第三控制器和第四控制器也执行和第二控制器相同的步骤以生成共识请求，此处不再赘述。步骤S303：第一控制器接收其他控制器发送的认证信息，并在认证信息满足共识条件时将第一最短路径存储在区块链。第一控制器接收其他控制器发送的共识请求，通过工作量证明机制，以路径cost值和计算时间为工作量证明，比较每个控制器提交的路径的cost值和计算时间，确定认证信息，并向其他控制器发送认证信息。第一控制器接收其他控制器发送的认证信息，在认证信息满足共识条件时，第一控制器取得区块链记账的权力，第一控制器将第一最短路径写入区块链。控制器通过读取区块链上的数据获得第一最短路径，协调相关交换机生成特定相关的流表，使数据包在最短路径上转发。认证信息满足共识条件，具体包括：第一最短路径小于参考路径集中所有路径，参考路径集中路径是其他控制器生成的第二交换机到第三交换机之间的数据传输的最短路径；或者第一最短路径等于参考路径集中最小的路径，以及第一控制器的计算时间小于参考时间集中所有计算时间，参考时间集中计算时间是参考路径集中最小的路径所对应的计算时间。可选地，区块链可以为一个关于最优路径变化驱动的状态机，它在某个状态下接受路径变化更新后，会确定的转移到一个新的状态，而且这个状态是可以按时间顺序进行排列的。从第一个创世块开始，控制器每次计算出新的最短路径生成一个新块，一系列新的区块构成区块链。图9为本申请提供的数据处理方法的示意图，如图9所示，区块由区块头和区块体组成。区块头中包含如下信息：父块的哈希值：用于连接前面的区块、索引自父区块哈希值的数据；时间戳：块产生的时间戳，用于块排序，也便于控制器选择最新的最短路径；最短路径的哈希值：区块体的哈希值，用于验证数据正确完整性。区块体中包含如下信息：最短路径：最短路径的完整信息；cost值：最短路径的cost值；计算时间：最短路径的计算时间。可选地，控制器可以将新的最短路径写入区块链。本实施例提供的数据处理方法，通过如下步骤执行，第一控制器获取第一数据库中的LLDP协议的邻居链路信息，计算第二交换机到第三交换机之间的数据传输的第一最短路径。第一控制器根据第一最短路径生成共识请求，并向其他控制器发送共识请求。第一控制器接收其他控制器发送的认证信息，并在认证信息满足共识条件时将第一最短路径存储在区块链。本申请中各个控制器通过共识机制确定最短路径，有效解决控制器路径统筹协调计算、同步问题，将路径策略写入区块链，保证了数据的不可伪造和不可篡改。图10为本申请提供的数据处理装置实施例一的结构示意图；如图10所示，该数据处理装置10包括：接收模块11，用于接收第一交换机发送的角色响应信息；处理模块12，用于根据角色响应信息更新本地存储的第一数据库；其中，角色响应信息是在第一交换机的主控制器发生变化时生成的；处理模块12，还用于将第一数据库的第一摘要信息添加到第一内容摘要信息列表；发送模块13，用于向其他控制器广播第一摘要信息；其中，第一摘要信息包括第一生存时间；接收模块11，还用于接收第二控制器发送的第一数据库更新请求，其中，第二控制器是其他控制器中在第一生存时间内接收到第一摘要信息的控制器；发送模块13，还用于向第二控制器发送第一数据库的更新数据，以使第二控制器根据第一数据库的更新数据更新本地存储的第二数据库。进一步地，接收模块11，还用于接收第一交换机发送的被控请求；进一步地，处理模块13还用于获取第一数据库中的各个其他控制器的负载数量以及第一控制器的负载数量；当第一控制器的负载数量小于或者等于其他控制器中任意控制器的负载数量时，生成角色竞选请求。进一步地，发送模块13，还用于向第一交换机发送角色竞选请求，以使第一交换机根据接收到第一控制器发送的角色竞选请求的时间和接收到其他竞选请求的时间生成角色响应信息，其中，其他竞选请求是负载数量和第一控制器的负载数量相同的控制器发出的。进一步地，处理模块12，还用于，在第一控制器向第二控制器发送第一数据库的更新数据之后，获取第一数据库中的LLDP协议的邻居链路信息计算第二交换机到第三交换机之间的数据传输的第一最短路径；根据第一最短路径生成共识请求。进一步地，发送模块13，还用于，向其他控制器发送共识请求；进一步地，接收模块11，还用于接收其他控制器发送的认证信息，并在认证信息满足共识条件时将第一最短路径存储在区块链。进一步地，认证信息满足共识条件时，具体包括：第一最短路径小于参考路径集中所有路径，参考路径集中路径是其他控制器生成的第二交换机到第三交换机之间的数据传输的最短路径；或者第一最短路径等于参考路径集中最小的路径，以及第一控制器的计算时间小于参考时间集中所有计算时间，参考时间集中计算时间是参考路径集中最小的路径所对应的计算时间。本实施例提供的数据处理装置，用于执行前述任一方法实施例中第一控制器的技术方案，其实现原理和技术效果类似，在此不再赘述。图11为本申请提供的数据处理装置实施例二的结构示意图；如图11所示，该装置20包括：接收模块21，用于接收第一控制器广播的第一数据库的第一摘要信息；其中，第一摘要信息在第一控制器在根据角色响应信息更新本地存储的第一数据库后被添加在第一内容摘要信息列表，角色响应信息是在第一交换机的主控制器发生变化时生成的；处理模块22，用于在接收到第一摘要信息的时间早于第一生存时间时生成第一数据库更新请求；发送模块23，用于向第一控制器发送第一数据库更新请求，以使第一控制器在接收到第一数据库更新请求时向第二控制器发送第一数据库的更新数据；处理模块22，用于根据第一数据库的更新数据更新本地存储的第二数据库。进一步地，接收模块21，还用于，在第二控制器接收第一控制器广播的第一数据库的第一摘要信息之后，接收第三控制器发送的第二数据库更新请求，第三控制器是其他控制器中在第一生存时间内未接收到第一摘要信息，在第二生存时间内接收到第二摘要信息，且与第二控制器相近的控制器。进一步地，发送模块23，还用于向第三控制器发送第二数据库的更新数据，以使第三控制器根据第二数据库的更新数据更新本地存储的第三数据库。进一步地，处理模块22还用于，更新第一摘要信息，以获得第二摘要信息；其中，第一摘要信息的第一生存时间与第二摘要信息的第二生存时间不同；将第二摘要信息添加到第二内容摘要信息列表中，并广播第二摘要信息。本实施例提供的数据处理装置，用于执行前述任一方法实施例中第二控制器的技术方案，其实现原理和技术效果类似，在此不再赘述。图12为本申请提供的一种电子设备的结构示意图。如图12所示，该电子设备30包括存储器31和处理器32。其中，存储器31用于存储处理器可执行的计算机指令；处理器32在执行计算机指令时实现上述实施例中方法中的各个步骤。具体可以参见前述方法实施例中的相关描述。可选地，上述存储器31既可以是独立的，也可以跟处理器32集成在一起。当存储器31独立设置时，该控制器还包括总线，用于连接存储器31和处理器32。该电子设备用于执行前述任一方法实施例中的技术方案，其实现原理和技术效果类似，在此不再赘述。本申请实施例还提供一种计算机可读存储介质，计算机可读存储介质中存储有计算机执行指令，计算机执行指令被处理器执行时用于实现上述实施例中方法中的各个步骤。本申请实施例还提供一种计算机程序产品，包括计算机程序，该计算机程序被处理器执行时实现上述实施例中方法中的各个步骤。本领域普通技术人员可以理解：实现上述各方法实施例的全部或部分步骤可以通过程序指令相关的硬件来完成。前述的程序可以存储于一计算机可读取存储介质中。该程序在执行时，执行包括上述各方法实施例的步骤；而前述的存储介质包括：ROM、RAM、磁碟或者光盘等各种可以存储程序代码的介质。最后应说明的是：以上各实施例仅用以说明本申请的技术方案，而非对其限制；尽管参照前述各实施例对本申请进行了详细的说明，本领域的普通技术人员应当理解：其依然可以对前述各实施例所记载的技术方案进行修改，或对其中部分或全部技术特征进行等同替换；而这些修改或替换，并不使相应技术方案的本质脱离本申请各实施例技术方案的范围。
