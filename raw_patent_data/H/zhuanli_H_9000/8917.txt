标题title
一种基于日志分析和在线仿真的云服务故障检测系统及方法
摘要abst
本发明公开了一种基于日志分析和在线仿真的云服务故障检测系统及方法。解决现有技术中故障检测需要对历史故障的日志或注入各种故障产生日志进行学习、挖掘，存在步骤负载、使用不便，难以广泛使用的问题。系统包括服务端集群，包括多个服务端；客户端；仿真客户端，包括日志处理单元，进行日志异常检测，收敛故障范围到服务端故障子集；仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，与分类集进行匹配，根据匹配成功的分类集定位故障发生位置。本发明通过将日志分析与仿真测试相结合，避免了日志分析的故障检测方法的繁琐机器学习过程，通过日志分析缩小仿真测试的测试范围，大大提高了故障测试效率。
权利要求书clms
1.一种基于日志分析和在线仿真的云服务故障检测方法，其特征在于：包括，S1.获取服务端的运行日志，根据不同划分条件生成多种分类集；S2.以时间窗口为单元收集日志，集成各时间窗口内异常日志；S3.根据检测到的异常日志收敛故障范围获取服务端故障子集；S4.由仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，仿真测试故障集与分类集进行匹配，根据匹配成功的分类集定位故障发生位置。2.根据权利要求1所述的一种基于日志分析和在线仿真的云服务故障检测方法，其特征是所述的根据不同划分条件生成多种分类集，包括：将服务端分布在同一宿主机、同一机架或同一网络交换机为条件进行划分，获得若干子集，子集共同构成宿主机分类集、机架分类集或网络交换机分类集。3.根据权利要求1所述的一种基于日志分析和在线仿真的云服务故障检测方法，其特征是步骤S2具体包括：确定时间窗口；收集时间窗口内的日志，将日志与日志模板进行匹配，提取日志信息，并将日志信息转换成统一日志格式，统一日志格式包括主机名、日志模板类型、日志级别信息；将同一服务端的同一日志模板的日志级别为错误的日志集成在一起作为一条异常日志，获得异常日志集。4.根据权利要求3所述的一种基于日志分析和在线仿真的云服务故障检测方法，其特征是步骤S3具体包括：记录每个时间窗口中包含异常日志的服务端，获取所有时间窗口包括异常日志的服务端数据；将服务端数据转换为布尔型事务数据，采用频繁项集挖掘算法对布尔型事务数据进行挖掘计算，输出最大频繁项集；将最大频繁项集中所有服务端生成服务端故障子集。5.根据权利要求3所述的一种基于日志分析和在线仿真的云服务故障检测方法，其特征是步骤S3具体包括：以每个日志模板为一个维度，以每个日志模板集成后的异常日志次数为坐标值，生成多维向量空间；每个服务端对应的异常日志对应多维向量空间的一个点，获取服务端对应向量；计算所有服务端对应向量在多维向量空间中的质心向量；计算每个服务端对应向量到质心的距离；设定阈值，将服务端对应向量到质心的距离小于阈值的服务端生成服务端故障子集。6.根据权利要求1或2或3所述的一种基于日志分析和在线仿真的云服务故障检测方法，其特征是所述的由仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，包括：将服务端故障子集发送给仿真客户端；仿真客户端向服务端故障子集中所有服务端发送业务请求，接受服务端返回的业务响应信息，根据业务响应信息判断仿真测试是否成功；计算每个服务端仿真测试失败次数与测试总数比值，并与设定的阈值比较，比值大于阈值则判断测试结果为服务端故障，获取大于阈值的服务端生成仿真测试故障集。7.根据权利要求6所述的一种基于日志分析和在线仿真的云服务故障检测方法，其特征是所述的定位故障发生位置，包括：将仿真测试集与多种分类集中子集进行比较，判断仿真测试集与子集是否相同或仿真测试集是否全部包含于子集，若是比较成功，若否比较失败；比较成功的所有子集中选取包括元素最少的子集，将该子集按分类集划分条件所对应的设备定位为故障发生位置。8.一种基于日志分析和在线仿真的云服务故障检测系统，采用权利要求1-7任一项中的方法，其特征在于，包括：服务端集群，包括部署在云中的多个服务端，每个服务端用于接收客户端的业务请求和返回业务响应，服务端生成日志并通过IP网络与其他节点进行通信；客户端，用于向服务端发送业务请求，接收服务端返回的业务响应，客户端通过IP网络与其他节点进行通信；仿真客户端，包括日志处理单元，日志处理单元接收服务端日志，以时间窗口为单元收集日志，集成各时间窗口内异常日志，根据检测到的异常日志收敛故障范围获取服务端故障子集，仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，仿真测试故障集与分类集进行匹配，根据匹配成功的分类集定位故障发生位置。9.根据权利要求8所述的一种基于日志分析和在线仿真的云服务故障检测系统，其特征是：日志处理单元确定时间窗口，收集时间窗口内的日志，将日志与日志模板进行匹配，提取日志信息，并将日志信息转换成统一日志格式，统一日志格式包括主机名、日志模板类型、日志级别信息，将同一服务端的同一日志模板的日志级别为错误的日志集成在一起作为一条异常日志，获得异常日志集；日志处理单元记录每个时间窗口中包含异常日志的服务端，获取所有时间窗口包括异常日志的服务端数据；将服务端数据转换为布尔型事务数据，采用频繁项集挖掘算法对布尔型事务数据进行挖掘计算，输出最大频繁项集；将最大频繁项集中所有服务端生成服务端故障子集；或日志处理单元以每个日志模板为一个维度，以每个日志模板集成后的异常日志次数为坐标值，生成多维向量空间；每个服务端对应的异常日志对应多维向量空间的一个点，获取服务端对应向量；计算所有服务端对应向量在多维向量空间中的质心向量；计算每个服务端对应向量到质心的距离；设定阈值，将服务端对应向量到质心的距离小于阈值的服务端生成服务端故障子集。10.根据权利要求9所述的一种基于日志分析和在线仿真的云服务故障检测系统，其特征是仿真客户端根据不同划分条件生成多种分类集，将仿真测试集与多种分类集中子集进行比较，判断仿真测试集与子集是否相同或仿真测试集是否全部包含于子集，在比较成功的所有子集中选取包括元素最少的子集，将该子集按分类集划分条件所对应的设备定位为故障发生位置。
说明书desc
技术领域本发明涉及通信网络故障分析技术领域，尤其是涉及一种基于日志分析和在线仿真的云服务故障检测系统及方法。背景技术云计算已经广泛应用在生产、服务等多个方面，诸如通信、互联网等大量应用服务已经在计算云中提供。由于计算云及其提供的服务系统的大规模和并行性，使系统变得极为复杂性，运行中产生故障会相互影响，使故障定位非常困难。针对异常检测的日志分析方法是计算云及其提供的服务运行故障分析的重要方法。现有针对异常检测的日志分析方法包括两大步骤：第一步，解析日志提取特征：收集发生故障时的日志，通过对所收集故障日志进行数据挖掘得到故障判断规则；第二步，对运行产生的日志进行进行异常检测，即与第一步得到的规则进行匹配，匹配成功的则检测到规则对应的故障。由于上述第一步骤需要历史故障的日志或者注入各种故障产生日志，而对于实际生产中出现的故障千变万花，很难在事先就收集多种故障关联的日志供规则挖掘，致使现有的日志分析方法很难广泛使用。现有基于日志解析和特征提取的异常检测日志分析方法存在步骤复杂、在实际生产中使用不便等缺点。发明内容本发明主要是解决现有技术中故障检测需要对历史故障的日志或注入各种故障产生日志进行学习、挖掘，存在步骤复杂、使用不便，难以广泛使用的问题，提供了一种基于日志分析和在线仿真的云服务故障检测系统及方法。本发明的上述技术问题主要是通过下述技术方案得以解决的：一种基于日志分析和在线仿真的云服务故障检测方法，包括，S1.获取服务端的运行日志，根据不同划分条件生成多种分类集；S2.以时间窗口为单元收集日志，集成各时间窗口内异常日志；S3.根据检测到的异常日志收敛故障范围获取服务端故障子集；S4.由仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，仿真测试故障集与分类集进行匹配，根据匹配成功的分类集定位故障发生位置。本发明通过将日志分析与仿真测试相结合，避免了日志分析的故障检测方法的繁琐机器学习过程，通过日志分析缩小仿真测试的测试范围，大大提高了故障测试效率。作为一种优选方案，所述的根据不同划分条件生成多种分类集，包括：将服务端分布在同一宿主机、同一机架或同一网络交换机为条件进行划分，获得若干子集，子集共同构成宿主机分类集、机架分类集或网络交换机分类集。作为一种优选方案，步骤S2具体包括：确定时间窗口；收集时间窗口内的日志，将日志与日志模板进行匹配，提取日志信息，并将日志信息转换成统一日志格式，统一日志格式包括主机名、日志模板类型、日志级别信息；统一日志格式具体包括时间戳、主机名、日志模板类型、日志级别信息；每种服务端由于其总在程序的有限个地方输出日志，因此只能产生有限种格式的日志，每种格式对应一种日志模板，对接收到的日志与模板日志进行匹配，匹配后提取日志信息。将同一服务端的同一日志模板的日志级别为错误的日志集成在一起作为一条异常日志，获得异常日志集。由于实际在线运营的系统中，发生故障一般能得到及时处理，因此，时间窗口内的日志对应同一故障，把同一服务端同一日志模板日志级别为错误的日志集成在一起作为一条异常日志。作为一种优选方案，步骤S3具体包括：记录每个时间窗口中包含异常日志的服务端，获取所有时间窗口包括异常日志的服务端数据；将服务端数据转换为布尔型事务数据，采用频繁项集挖掘算法对布尔型事务数据进行挖掘计算，输出最大频繁项集；将最大频繁项集中所有服务端生成服务端故障子集。本方案中根据服务器端出现频繁度对故障范围进行缩小，以更精确定位故障位置。作为一种优选方案，步骤S3具体包括：以每个日志模板为一个维度，以每个日志模板集成后的异常日志次数为坐标值，生成多维向量空间；每个服务端对应的异常日志对应多维向量空间的一个点，获取服务端对应向量；计算所有服务端对应向量在多维向量空间中的质心向量；计算每个服务端对应向量到质心的距离；设定阈值，将服务端对应向量到质心的距离小于阈值的服务端生成服务端故障子集。作为一种优选方案，所述的由仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，包括：将服务端故障子集发送给仿真客户端；仿真客户端向服务端故障子集中所有服务端发送业务请求，接受服务端返回的业务响应信息，根据业务响应信息判断仿真测试是否成功；计算每个服务端仿真测试失败次数与测试总数比值，并与设定的阈值比较，比值大于阈值则判断测试结果为服务端故障，获取大于阈值的服务端生成仿真测试故障集。作为一种优选方案，所述的定位故障发生位置，包括：将仿真测试集与多种分类集中子集进行比较，判断仿真测试集与子集是否相同或仿真测试集是否全部包含于子集，若是比较成功，若否比较失败；比较成功的所有子集中选取包括元素最少的子集，将该子集按分类集划分条件所对应的设备定位为故障发生位置。一种基于日志分析和在线仿真的云服务故障检测系统，包括：服务端集群，包括部署在云中的多个服务端，每个服务端用于接收客户端的业务请求和返回业务响应，服务端生成日志并通过IP网络与其他节点进行通信；客户端，用于向服务端发送业务请求，接收服务端返回的业务响应，客户端通过IP网络与其他节点进行通信；仿真客户端，包括日志处理单元，日志处理单元接收服务端日志，以时间窗口为单元收集日志，集成各时间窗口内异常日志，根据检测到的异常日志收敛故障范围获取服务端故障子集，仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，仿真测试故障集与分类集进行匹配，根据匹配成功的分类集定位故障发生位置。作为一种优选方案，日志处理单元确定时间窗口，收集时间窗口内的日志，将日志与日志模板进行匹配，提取日志信息，并将日志信息转换成统一日志格式，统一日志格式包括主机名、日志模板类型、日志级别信息，将同一服务端的同一日志模板的日志级别为错误的日志集成在一起作为一条异常日志，获得异常日志集；日志处理单元记录每个时间窗口中包含异常日志的服务端，获取所有时间窗口包括异常日志的服务端数据；将服务端数据转换为布尔型事务数据，采用频繁项集挖掘算法对布尔型事务数据进行挖掘计算，输出最大频繁项集；将最大频繁项集中所有服务端生成服务端故障子集；或日志处理单元以每个日志模板为一个维度，以每个日志模板集成后的异常日志次数为坐标值，生成多维向量空间；每个服务端对应的异常日志对应多维向量空间的一个点，获取服务端对应向量；计算所有服务端对应向量在多维向量空间中的质心向量；计算每个服务端对应向量到质心的距离；设定阈值，将服务端对应向量到质心的距离小于阈值的服务端生成服务端故障子集。作为一种优选方案，仿真客户端根据不同划分条件生成多种分类集，将仿真测试集与多种分类集中子集进行比较，判断仿真测试集与子集是否相同或仿真测试集是否全部包含于子集，在比较成功的所有子集中选取包括元素最少的子集，将该子集按分类集划分条件所对应的设备定位为故障发生位置。因此，本发明的优点是：通过将日志分析与仿真测试相结合，避免了日志分析的故障检测方法的繁琐机器学习过程，通过日志分析缩小仿真测试的测试范围，大大提高了故障测试效率。附图说明图1是本发明方法的一种流程示意图；图2是本发明系统的一种结构框示图；图3是本发明实施例中举例说明的系统的一种结构框示图。1-服务端 2-客户端 3-仿真客户端 4-日志分析单元。具体实施方式下面通过实施例，并结合附图，对本发明的技术方案作进一步具体的说明。实施例1：本实施一种基于日志分析和在线仿真的云服务故障检测系统，如图2所示，包括由多个服务端1组成的服务端集群、客户端2和仿真客户端3。服务端1，用于接收客户端的业务请求和返回业务响应，服务端生成日志并通过IP网络与其他节点进行通信；客户端2，用于向服务端发送业务请求，接收服务端返回的业务响应，客户端通过IP网络与其他节点进行通信；仿真客户端3，包括日志处理单元，日志处理单元接收服务端日志，以时间窗口为单元收集日志，集成各时间窗口内异常日志，根据检测到的异常日志收敛故障范围获取服务端故障子集，仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，仿真测试故障集与分类集进行匹配，根据匹配成功的分类集定位故障发生位置。具体的，服务端可以是5GC网络的各种网络服务；或者4G的EPC网络各种网元；或者HTTP网络服务的服务端。例如，服务端为4G的EPC网络的MME，则客户端为eNodeB，仿真客户端包括仿真eNodeB及日志处理单元；服务端为5GC网络的AMF，客户端为gNodeB，仿真客户端包括仿真gNodeB及日志处理单元；服务端为IP网络的HTTP server端，则客户端为HTTP client，仿真客户端包括仿真HTTP client及日志处理单元。日志处理单元进行日志异常检测，根据检测结果收敛故障范围到服务端故障子集，具体过程为，确定时间窗口，收集时间窗口内的日志，将日志与日志模板进行匹配，提取日志信息，并将日志信息转换成统一日志格式，统一日志格式包括主机名、日志模板类型、日志级别信息，将同一服务端的同一日志模板的日志级别为错误的日志集成在一起作为一条异常日志，获得异常日志集；根据检测到的异常日志收敛故障范围获取服务端故障子集。这里包括两种方式来获取服务端故障子集。第一种方式包括，日志处理单元记录每个时间窗口中包含异常日志的服务端，获取所有时间窗口包括异常日志的服务端数据；将服务端数据转换为布尔型事务数据，采用频繁项集挖掘算法对布尔型事务数据进行挖掘计算，输出最大频繁项集；将最大频繁项集中所有服务端生成服务端故障子集；第二种方式包括，日志处理单元以每个日志模板为一个维度，以每个日志模板集成后的异常日志次数为坐标值，生成多维向量空间；每个服务端对应的异常日志对应多维向量空间的一个点，获取服务端对应向量；计算所有服务端对应向量在多维向量空间中的质心向量；计算每个服务端对应向量到质心的距离；设定阈值，将服务端对应向量到质心的距离小于阈值的服务端生成服务端故障子集。仿真客户端的具体过程为：首先将获取的服务端运行日志根据不同划分条件生成多种分类集。仿真客户端对故障子集对应的服务端进行业务仿真测试，根据测试结果获取仿真测试故障集，将仿真测试集与多种分类集中子集进行比较，判断仿真测试集与子集是否相同或仿真测试集是否全部包含于子集，在比较成功的所有子集中选取包括元素最少的子集，将该子集按分类集划分条件所对应的设备定位为故障发生位置。实施例2：本实施例一种基于日志分析和在线仿真的云服务故障检测方法，专用于实施例1中的系统上，如图1所示，包括以下步骤：S1.获取服务端的运行日志，根据不同划分条件生成多种分类集；具体的，包括：S11.启动服务端集群的服务端，启动客户端，建立通信；分析测试在线运行系统的故障，因此服务端在线运行并提供服务。S12.仿真客户端的日志处理单元接收服务端或客户端生成的运行日志；S13.将服务端分布在同一宿主机、同一机架或同一网络交换机为条件进行划分，获得若干子集，子集共同构成宿主机分类集、机架分类集或网络交换机分类集。如图3所述，以图中系统结构为例进行说明，包括8台宿主机M1、M2、M3、M4、M5、M6、M7、M8，分别接入同一网络交换机，M1、M2部署在1号机架，M3、M4部署在2号机架，M5、M6、M7、M8部署在3号机架，在每台宿主机上安装并启动一种类型的AMF网络服务：S1、S2、S3、S4、S5、S6、S7、S8。则AMF网络服务按宿主机分类集：{{S1},{S2},{S3},{S4},{S5},{S6},{S7},{S8}}共8个子集，每个子集有1个元素；按机架分类集：{{S1,S2},{S3,S4},{S5,S6,S7,S8}}共3个子集；按交换机分类集：{{S1，S2，S3，S4，S5，S6，S7，S8}}共1个子集，每个子集有8个元素。S2.以时间窗口为单元收集日志，集成各时间窗口内异常日志；具体过程包括：S21.日志处理单元对日志进行清洗，消除与日志挖掘无关的数据；S22.确定时间窗口；对于在线运行系统的日志以日志流的方式不断输出，因此，分析处理需要确定合适的时间窗口，确定时间窗口的大小需要考虑故障发现及时性及数据分析准确性所需要的日志数量。S23.收集时间窗口内的日志，将日志与日志模板进行匹配，提取日志信息，并将日志信息转换成统一日志格式，统一日志格式包括主机名、日志模板类型、日志级别信息；其中统一日志格式完整包括时间戳、主机名、日志模板类型、日志级别信息；每种服务端由于其总在程序的有限个地方输出日志，因此只能产生有限种格式的日志，每种格式对应一种日志模板，对接收到的日志与模板日志进行匹配，匹配后提取日志信息。本实例中把时间窗口内收集到的日志统一转换成以下格式：＜时间戳＞＜主机名或IP地址＞＜日志级别＞＜日志模板名或ID＞；S24.将同一服务端的同一日志模板的日志级别为错误的日志集成在一起作为一条异常日志，获得异常日志集。由于实际在线运营的系统中，发生故障一般能得到及时处理，因此，时间窗口内的日志对应同一故障，把同一服务端同一日志模板日志级别为错误的日志集成在一起作为一条异常日志，不同模板的日志不能集成，必须分别记录，进一步处理后获得异常日志集，如下表所示：日志格式次数＜时间戳＞＜主机名或IP地址＞＜ERROR级别＞＜日志模板1＞5＜时间戳＞＜主机名或IP地址＞＜ERROR级别＞＜日志模板2＞5......将所有服务端在时间窗口内日志分别都转换成上市格式并集成。S3.根据检测到的异常日志收敛故障范围获取服务端故障子集；具体包括：S31.记录每个时间窗口中包含异常日志的服务端，获取所有时间窗口包括异常日志的服务端数据；将时间窗口内包含异常日志的服务端生成下列格式数据：＜序号＞＜异常服务端1＞＜异常服务端2＞....＜异常服务端N＞所有时间窗口包含异常日志的服务端数据为：＜1＞＜S5＞＜S6＞＜S7＞＜S8＞＜2＞＜S3＞＜S5＞＜S6＞＜S7＞＜3＞＜S4＞＜S5＞＜S6＞＜S7＞＜4＞＜S5＞＜S6＞＜S8＞＜5＞＜S5＞＜S6＞＜S8＞＜6＞＜S1＞＜S2＞＜S3＞＜S4＞＜S5＞＜S7＞＜7＞＜S4＞＜S5＞＜S6＞＜8＞＜S1＞＜S3＞＜S6＞＜S7＞＜S8＞＜9＞＜S5＞＜S6＞＜S8＞其中Si为AMF网络服务。S32.将服务端数据转换为布尔型事务数据，序号S1S2S3S4S5S6S7S8100001111200101110300011110400001101500001101611111010700011100810100111900001101采用频繁项集挖掘算法对布尔型事务数据进行挖掘计算，输出最大频繁项集；本实例中采用Apriori挖掘算法，上述布尔型事务数据的频繁项集为:频繁k2-项集为：{{S5，S6}，{S5，S7}}；频繁k3-项集为：{{S5，S6，S7}，{S5，S6，S8},{S5，S7，S8}}；频繁k4-项集为：{{S5，S6，S7，S8}}；输出最大繁项集为{{S5，S6，S7，S8}}；S33.将最大频繁项集中所有服务端生成服务端故障子集。生成的服务端故障子集为{S5，S6，S7，S8}，表示宿主机M5中的S5、M6中的S6、M7中的S7、M8中的S8。S4.由仿真客户端对故障子集对应的服务端进行业务仿真测试，获取仿真测试故障集，仿真测试故障集与分类集进行匹配，根据匹配成功的分类集定位故障发生位置。包括：S41.将服务端故障子集发送给仿真客户端；S42.仿真客户端向服务端故障子集中所有服务端发送业务请求，接受服务端返回的业务响应信息，根据业务响应信息判断仿真测试是否成功；本实例中以服务端为5GC网络的AMF，客户端为gNodeB，仿真客户端包括仿真gNodeB及日志处理单元为例；仿真gNodeB通过用户终端注册流程测试AMF，仿真客户端发送注册请求至AMF，AMF对用户进行身份验证，如验证通过，则AMF向用户终端回复注册接受，仿真客户端收到回复并判断仿真测试成功；如AMF向用户终端回复注册拒绝或者无响应，则仿真客户端判断仿真测试失败；S43.计算每个服务端仿真测试失败次数与测试总数比值，并与设定的阈值比较，比值大于阈值则判断测试结果为服务端故障，获取大于阈值的服务端生成仿真测试故障集。本实例中，经仿真测试服务端测试失败次数与测试总数比值大于阈值服务端为S6、S7、S8,则仿真测试故障集为：{S6、S7、S8}。S44.将仿真测试集与多种分类集中子集进行比较，判断仿真测试集与子集是否相同或仿真测试集是否全部包含于子集，若是比较成功，若否比较失败；本实例中，因此，比较成功的分类集共2个，为按网络交换机划分的子集和按机架划分的机架3对应的子集。S45.比较成功的所有子集中选取包括元素最少的子集，将该子集按分类集划分条件所对应的设备定位为故障发生位置。比较成功的且元素最少的成员集为{S5，S6，S7，S8}，为按机架划分对应机架3，定位故障发生位置为机架3。实施例3：本实施例一种基于日志分析和在线仿真的云服务故障检测方法，给出了与实施例2不同的方案，其不同点在于步骤S3.根据检测到的异常日志收敛故障范围获取服务端故障子集；具体步骤包括：S31.以每个日志模板为一个维度，以每个日志模板集成后的异常日志次数为坐标值，生成N维向量空间，N与日志模板种类相等；S32.每个服务端对应的异常日志对应N维向量空间的一个点，获取服务端对应向量；本实施例中，上述日志格式的主机名或IP地址对应一个服务端，则其对应的N维向量为：；S33.计算所有服务端对应向量在多维向量空间中的质心向量；在N维向量空间中，两点x、y之间的距离为：按上述距离定义，可计算所有所有服务端对应向量的质心，本实施例中就是S1、S2、S3、S4、S5、S6、S7、S8的质心向量S；S34.计算每个服务端对应向量到质心的距离；按向量空间距离定义，本实施例中就是S1、S2、S3、S4、S5、S6、S7、S8到质心S的距离，记为d；S35.设定阈值，将服务端对应向量到质心的距离小于阈值的服务端生成服务端故障子集。将d、d、…、d，按小到大排列，并取排序第4的距离为阈值，则S6、S7、S8到质心S的距离小于阈值，生成的服务端故障子集为：{S6、S7、S8}。本实施例中其他步骤与实施例2中步骤相同。本文中所描述的具体实施例仅仅是对本发明精神作举例说明。本发明所属技术领域的技术人员可以对所描述的具体实施例做各种各样的修改或补充或采用类似的方式替代，但并不会偏离本发明的精神或者超越所附权利要求书所定义的范围。尽管本文较多地使用了服务端、客户端、仿真客户端、日志分析单元等术语，但并不排除使用其它术语的可能性。使用这些术语仅仅是为了更方便地描述和解释本发明的本质；把它们解释成任何一种附加的限制都是与本发明精神相违背的。
