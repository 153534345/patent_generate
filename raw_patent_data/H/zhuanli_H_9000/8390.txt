标题title
变换与系数信令的方法和装置
摘要abst
一种电子装置执行编码和解码视频数据的方法。该方法包括：接收编码变换块的比特流，其中变换块包括非零区域和置零区域；检查置零区域内是否存在任何非零系数；根据确定变换块的置零区域内不存在非零系数：确定变换块的最后一个非零系数沿扫描方向的扫描顺序索引；根据最后一个非零系数的扫描顺序索引大于预定义阈值的确定：从比特流接收多变换选择索引的值；根据MTS索引的值，在水平方向和垂直方向上对变换块的变换系数应用相应的变换。
权利要求书clms
1.一种视频编码的方法，所述方法包括：确定位于置零区域内的变换块的任何编码组是否具有非零系数，其中，所述变换块包括非零区域和所述置零区域；以及根据位于所述置零区域内的所述变换块中没有编码组具有非零系数的确定：在水平方向和垂直方向二者上对所述变换块的变换系数应用相应的逆变换；以及将指定所述相应的逆变换的多重变换选择MTS索引的值编码到比特流中。2.根据权利要求1所述的方法，还包括：根据位于所述置零区域内的所述变换块的编码组具有非零系数的确定：在所述水平方向和所述垂直方向二者上对所述变换块的所述变换系数应用预定义的默认逆变换。3.根据权利要求2所述的方法，其中，所述预定义的默认逆变换是逆DCT-2变换，并且所述相应的逆变换包括逆DST-7变换和逆DCT-8变换。4.根据权利要求1所述的方法，其中，所述变换块的色度残差是以色度残差联合编码JCCR模式进行编码的，并且为对应的色度变换块启用变换跳过模式。5.根据权利要求1所述的方法，其中，所述非零区域是所述变换块的左上角16×16区域。6.根据权利要求1所述的方法，其中，所述变换块的所述系数的扫描顺序是对角线扫描顺序。7.一种电子装置，包括：一个或更多个处理单元；耦合到所述一个或更多个处理单元的存储器；以及存储在所述存储器中的多个程序，当由所述一个或更多个处理单元执行时，所述多个程序使得所述电子装置执行根据权利要求1-6中任一项所述的方法。8.一种非暂时性计算机可读存储介质，存储供具有一个或更多个处理单元的电子装置执行的多个程序，其中，所述多个程序在由所述一个或更多个处理单元执行时，使得所述电子装置执行根据权利要求1-6中任一项所述的方法并且发送所述比特流。9.一种计算机程序产品，包括能够由具有一个或更多个处理单元的电子设备执行的一个或更多个程序，其中，当所述一个或更多个处理单元执行所述一个或更多个程序时，所述一个或更多个程序使所述电子设备执行根据权利要求1-6中任一项所述的方法并且发送所述比特流。
说明书desc
本申请是申请号为“202080094011.4”，申请日为“2020年11月23日”，发明名称为“变换与系数信令的方法和装置”的申请的分案申请。相关申请的交叉引用本申请基于并且要求于2019年11月21日提交的美国临时申请No.62/938,890发明名称为“变换与系数信令的方法和装置”以及于2020年1月10日提交的美国临时申请No.62/959,325发明名称为“变换与系数信令的方法和装置”的优先权，这些申请的全部内容通过引用完整地并入本文。技术领域本申请总体上涉及视频编解码和压缩。更具体地，本申请涉及对通用视频编解码标准中的变换与系数编解码方法的现有设计进行改进和简化的方法和装置。背景技术各种电子设备支持数字视频，诸如数字电视、膝上型或台式计算机、平板计算机、数码相机、数字记录设备、数字媒体播放器、视频游戏控制台、智能电话、视频电话会议设备、视频流设备等。电子设备通过实施由MPEG-4、ITU-TH.263、ITU-TH.264/MPEG-4第10部分、高级视频编解码、高效视频编解码和通用视频编解码标准定义的视频压缩/解压缩标准，来传输、接收、编码、解码、和/或存储数字视频数据。视频压缩通常包括执行空间预测和/或时间预测以减少或去除视频数据中固有的冗余。对于基于块的视频编解码，视频帧被分割为一个或多个条带，每个条带具有多个视频块，视频块也可以称为编解码树单元。每个CTU可以包含一个编解码单元或递归地拆分成更小的CU，直到达到预定义的最小CU大小。每个CU包含一个或多个变换单元，并且每个CU还包含一个或多个预测单元。每个CU可以采用帧内模式、帧间模式或IBC模式被编解码。视频帧的帧内编解码条带中的视频块使用空间预测被编码，空间预测是相对于同一视频帧内的相邻块中的参考样本的。视频帧的帧间编解码条带中的视频块可以使用空间预测或时间预测，空间预测是相对于同一视频帧内相邻块中的参考样本的，时间预测是相对于其他先前和/或未来参考视频帧中的参考样本的。基于先前已经被编码的参考块的空间预测或时间预测产生了针对要编解码的当前视频块的预测块。寻找参考块的过程可以通过块匹配算法来完成。表示要编解码的当前块和预测块之间的像素差异的残差数据被称为残差块或预测误差。帧间编解码块根据运动向量和残差块被编码，运动向量指向形成预测块的参考帧中的参考块。确定运动向量的过程通常称为运动估计。帧内编解码块根据帧内预测模式和残差块被编码。为了进一步压缩，将残差块从像素域变换到变换域，例如频域，而产生残差变换系数，残差变换系数然后可以被量化。最初以二维阵列排列的量化变换系数可以被扫描以产生变换系数的一维向量，并且然后被熵编码到视频比特流中以实现甚至更多的压缩。编码的视频比特流然后被保存在计算机可读存储介质中，以被具有数字视频能力的另一电子设备访问，或者直接以有线或无线的方式传输到电子设备。电子设备然后通过以下方式来执行视频解压缩：例如，解析编码视频比特流以从比特流获得语法元素，并且至少部分地基于从比特流获得的语法元素从编码视频比特流将数字视频数据重建为其原始格式，并且电子设备将重建的数字视频数据呈现在电子设备的显示器上。随着数字视频质量从高清变为4K×2K或者甚至8K×4K，要编码/解码的视频数据量呈指数增长。如何在保持解码视频数据的图像质量的同时更有效率地编码/解码视频数据是一个持续的挑战。发明内容本申请描述了与视频数据编码和解码相关的实现，更具体地，描述了改进和简化变换和系数编码方法的现有设计的方法和装置。根据本申请的第一方面，一种解码视频数据的方法包括：接收对变换块进行编码的比特流，其中，该变换块包括非零区域和置零区域；检查该置零区域内是否存在任何非零系数；根据在该变换块的该置零区域内不存在非零系数的确定：确定该变换块沿扫描方向的最后一个非零系数的扫描顺序索引；根据该最后一个非零系数的扫描顺序索引大于预定义阈值的确定：从该比特流接收多重变换选择索引的值；以及基于该MTS索引的值，在水平方向和垂直方向上对该变换块的变换系数应用相应的变换。根据本申请的第二方面，一种电子装置包括：一个或更多个处理单元、存储器以及存储在存储器中的多个程序。当由一个或更多个处理单元执行时，这些程序使得电子装置执行如上文描述的解码视频数据的方法。根据本申请的第三方面，一种非暂时性计算机可读存储介质，存储供具有一个或更多个处理单元的电子装置执行的多个程序。这些程序在由一个或更多个处理单元执行时，使得电子装置执行如上文描述的解码视频数据的方法。附图说明被并入说明书中并且构成说明书的一部分的附图示出了根据本申请的示例，并且与本描述一起用于解释本申请的原理。类似的附图标记表示对应的部分。图1是示出了根据本申请的一些实施方式的用于对视频块进行编码和解码的示例性系统的框图。图2是示出了根据本申请的一些实施方式的示例性视频编码器的框图。图3是示出了根据本申请的一些实施方式的示例性视频解码器的框图。图4A至图4E是示出了根据本申请的一些实施方式的如何将帧递归地分割为不同尺寸和形状的多个视频块的框图。图5是示出了根据本申请的一些实施方式的用于变换帧间和帧内编码块的残差的示例性多重变换选择方案的表格。图6是示出了根据本申请的一些实施方式的具有非零变换系数的示例性变换块的框图。图7是示出了根据本发明的一些实施方式的视频编码器使用多重变换选择方案来实现对块残差进行编解码的技术的示例性过程的流程图。图8是示出了根据本申请的一些实施方式的上下文自适应二进制算术编码引擎的示例的框图。具体实施方式现在将详细参考具体实施方式，其示例在附图中示出。在下面的详细描述中，阐述了许多非限制性的具体细节以帮助理解在此呈现的主题。但是对于本领域的普通技术人员来说将显而易见的是，在不脱离权利要求的范围的情况下可以使用各种替代方案，并且可以在没有这些具体细节的情况下实践主题。例如，对于本领域的普通技术人员来说将显而易见的是，本文呈现的主题可以在具有数字视频能力的许多种类型的电子设备上实现。图1是示出了根据本申请的一些实施方式的用于并行编码和解码视频块的示例性系统10的框图。如图1所示，系统10包括源设备12，其生成并编码随后由目标设备14解码的视频数据。源设备12和目标设备14可以包括各种各样电子设备中的任何电子设备，包括台式计算机或膝上型计算机、平板计算机、智能电话、机顶盒、数字电视、摄像机、显示设备、数字媒体播放器、视频游戏控制台、视频流设备，等等。在一些实施方式中，源设备12和目标设备14配备有无线通信能力。在一些实施方式中，目标设备14可以经由链路16接收要解码的编码视频数据。链路16可以包括能够将编码视频数据从源设备12移动到目标设备14的任何类型的通信介质或设备。在一个示例中，链路16可以包括通信介质以使得源设备12能够将编码视频数据实时地直接传输到目标设备14。编码视频数据可以根据诸如无线通信协议之类的通信标准被调制，并且被传输到目标设备14。通信介质可以包括任何无线或有线通信介质，诸如射频频谱或者一个或多个物理传输线路。通信介质可以形成基于分组的网络的一部分，基于分组的网络诸如局域网、广域网或全球网，诸如因特网。通信介质可以包括路由器、交换机、基站、或可能有助于促进从源设备12到目标设备14的通信的任何其他装备。在一些其他实施方式中，编码视频数据可以从输出接口22被传输到存储设备32。随后，存储设备32中的编码视频数据可以由目标设备14经由输入接口28访问。存储设备32可以包括各种分布式或本地访问的数据存储介质中的任何数据存储介质，诸如硬盘驱动器、蓝光光盘、DVD、CD-ROM、闪存、易失性或非易失性存储器、或任何其他适当的用于存储编码视频数据的数字存储介质。在进一步的示例中，存储设备32可以对应于文件服务器或可以保存由源设备12生成的编码视频数据的另一种中间存储设备。目标设备14可以经由流传输或下载来访问来自存储设备32的存储的视频数据。文件服务器可以是能够存储编码视频数据并将编码视频数据传输到目标设备14的任何类型的计算机。示例性文件服务器包括web服务器、FTP服务器、网络附接存储设备、或本地磁盘驱动器。目标设备14可以通过任何标准数据连接来访问编码视频数据，标准数据连接包括适用于访问存储在文件服务器上的编码视频数据的无线信道、有线连接，或二者的组合。来自存储设备32的编码视频数据的传输可以是流传输、下载传输、或二者的组合。如图1所示，源设备12包括视频源18、视频编码器20和输出接口22。视频源18可以包括诸如视频捕获设备之类的源，例如摄像机、包含先前捕获的视频的视频档案、用于从视频内容提供者接收视频的视频馈送接口、和/或用于生成计算机图形数据作为源视频的计算机图形系统、或此类源的组合。作为一个示例，如果视频源18是安全监控系统的摄像机，则源设备12和目标设备14可以形成照相电话或视频电话。然而，本申请中描述的实施方式通常可以适用于视频编解码，并且可以被应用到无线应用和/或有线应用。捕获的、预先捕获的或计算机生成的视频可以由视频编码器20编码。编码视频数据可以经由源设备12的输出接口22直接传输到目标设备14。编码视频数据也可以被存储到存储设备32上以随后由目标设备14或其他设备访问，以进行解码和/或回放。输出接口22还可以包括调制解调器和/或发射器。目标设备14包括输入接口28、视频解码器30和显示设备34。输入接口28可以包括接收器和/或调制解调器，并且通过链路16接收编码视频数据。通过链路16传送的或在存储设备32上提供的编码视频数据可以包括各种语法元素，这些语法元素由视频编码器20生成以供视频解码器30在对视频数据进行解码时使用。这样的语法元素可以被包括于在通信介质上传输、在存储介质上存储、或在文件服务器上存储的编码视频数据内。在一些实施方式中，目标设备14可以包括显示设备34，显示设备34可以是集成的显示设备和被配置为与目标设备14进行通信的外部显示设备。显示设备34向用户显示解码视频数据，并且可以包括各种显示设备中的任何显示设备，诸如液晶显示器、等离子显示器、有机发光二极管显示器、或另一种类型的显示设备。视频编码器20和视频解码器30可以根据专有标准或行业标准进行操作，诸如VVC、HEVC、MPEG-4第10部分、高级视频编解码、或此类标准的延伸。应当理解，本申请不限于特定的视频编解码/解码标准，并且可以适用于其他视频编解码/解码标准。通常设想到，源设备12的视频编码器20可以被配置为根据这些当前或未来的标准中的任何标准来编码视频数据。类似地，通常还设想到，目标设备14的视频解码器30可以被配置为根据这些当前或未来的标准中的任何标准来解码视频数据。视频编码器20和视频解码器30均可以实现为各种适当的编码器电路系统中的任何电路系统，诸如一个或多个微处理器、数字信号处理器、专用集成电路、现场可编程门阵列、离散逻辑、软件、硬件、固件或其任何组合。当部分以软件实现时，电子设备可以将用于软件的指令存储在适当的非暂时性计算机可读介质中，并且使用一个或多个处理器在硬件中执行这些指令来执行本申请中公开的视频编解码/解码操作。视频编码器20和视频解码器30中的每一个可以被包括在一个或多个编码器或解码器中，其中的任一者可以被集成为相应设备中的组合式编码器/解码器的一部分。图2是示出了根据本申请中描述的一些实施方式的示例性视频编码器20的框图。视频编码器20可以执行视频帧内的视频块的帧内和帧间预测编解码。帧内预测编解码依赖于空间预测，来减少或去除给定视频帧或图片内视频数据中的空间冗余。帧间预测编解码依赖于时间预测，来减少或去除视频序列的邻近视频帧或图片内的视频数据中的时间冗余。如图2所示，视频编码器20包括视频数据存储器40、预测处理单元41、解码图片缓冲器64、加法器50、变换处理单元52、量化单元54和熵编码单元56。预测处理单元41还包括运动估计单元42、运动补偿单元44、分割单元45、帧内预测处理单元46和帧内块复制单元48。在一些实施方式中，视频编码器20还包括用于视频块重建的逆量化单元58、逆变换处理单元60和加法器62。去块滤波器可以位于加法器62与DPB 64之间以对块边界进行滤波，从而从重建的视频中去除块状伪影。除了去块滤波器之外，还可以使用环路滤波器来对加法器62的输出进行滤波。视频编码器20可以采用固定或可编程硬件单元的形式，或者可以被划分在示出的一个或多个固定或可编程硬件单元之中。视频数据存储器40可以存储将由视频编码器20的组件编码的视频数据。视频数据存储器40中的视频数据可以例如从视频源18获得。DPB 64是缓冲器，其存储供视频编码器20在编码视频数据时使用的参考视频数据。视频数据存储器40和DPB 64可以由各种存储器设备中的任何存储器设备形成。在各种示例中，视频数据存储器40可以与视频编码器20的其他组件在芯片上，或者相对于这些组件在芯片外。如图2所示，在接收视频数据之后，预测处理单元41内的分割单元45将视频数据分割成视频块。该分割还可以包括根据与视频数据相关联的预定义的拆分结构将视频帧分割为条带、瓦片、或其他更大的编解码单元。视频帧可以被划分为多个视频块。预测处理单元41可以基于误差结果为当前的视频块选择多个可能的预测编解码模式之一，诸如多个帧内预测编解码模式之一或多个帧间预测编解码模式之一。预测处理单元41可以将得到的帧内或帧间预测编解码块提供给加法器50以生成残差块，并且提供给加法器62以重建编码块以随后用作参考帧的一部分。预测处理单元41还向熵编码单元56提供语法元素，诸如运动向量、帧内模式指示符、分割信息和其他此类语法信息。为了针对当前视频块选择适当的帧内预测编解码模式，预测处理单元41内的帧内预测处理单元46可以相对于与要被编解码的当前块在同一帧中的一个或多个相邻块来执行当前视频块的帧内预测编解码，以提供空间预测。预测处理单元41内的运动估计单元42和运动补偿单元44相对于一个或多个参考帧中的一个或多个预测块来执行当前视频块的帧间预测编解码，以提供时间预测。视频编码器20可以执行多个编解码遍次，例如，来为每个视频数据块选择适当的编解码模式。在一些实施方式中，运动估计单元42根据视频帧序列内的预定型式通过生成运动向量来为当前视频帧确定帧间预测模式，运动向量指示当前视频帧内的视频块的预测单元相对于参考视频帧内的预测块的位移。由运动估计单元42执行的运动估计是生成运动向量的过程，其估计针对视频块的运动。运动向量，例如，可以指示当前视频帧或图片内的视频块的PU相对于参考帧内的预测块的位移，预测块是相对于在当前帧内正被编解码的当前块的。预定型式可以将序列中的视频帧指定为P帧或B帧。帧内BC单元48可以以类似于由运动估计单元42为帧间预测确定运动向量的方式确定用于帧内BC编解码的向量，例如块向量，或者可以利用运动估计单元42来确定块向量。预测块是参考帧的块，它被认为在像素差方面与待编解码视频块的PU紧密匹配，像素差可以由绝对差之和、平方差之和、或其他差异度量确定。在一些实施方式中，视频编码器20可以计算针对DPB 64中存储的参考帧的亚整数像素位置的值。例如，视频编码器20可以内插参考帧的四分之一像素位置、八分之一像素位置、或其他分数像素位置的值。因此，运动估计单元42可以相对于全像素位置和分数像素位置执行运动搜索，并输出具有分数像素精度的运动向量。运动估计单元42通过以下方式来计算针对帧间预测编解码帧中视频块的PU的运动向量：将该PU的位置与从第一参考帧列表或第二参考帧列表中选择的参考帧的预测块的位置进行比较，第一参考帧列表和第二参考帧列表中的每一个参考帧列表标识存储在DPB 64中的一个或多个参考帧。运动估计单元42将计算的运动向量发送到运动补偿单元44，并且然后发送到熵编码单元56。由运动补偿单元44执行的运动补偿可以涉及基于由运动估计单元42确定的运动向量来获取或生成预测块。一经接收到针对当前视频块的PU的运动向量，运动补偿单元44可以在参考帧列表之一中定位运动向量所指向的预测块，从DPB 64取回预测块，并将预测块转发到加法器50。加法器50然后通过从正在被编解码的当前视频块的像素值中减去由运动补偿单元44提供的预测块的像素值，来形成像素差值的残差视频块。形成残差视频块的这些像素差值可以包括亮度差分量或色度差分量或包括两者。运动补偿单元44还可以生成与视频帧的视频块相关联的语法元素，以供视频解码器30在对视频帧的视频块进行解码时使用。这些语法元素可以包括，例如，定义用于识别预测块的运动向量的语法元素、指示预测模式的任何标志、或本文描述的任何其他语法信息。注意，运动估计单元42和运动补偿单元44可以高度集成，但出于概念目的而分别地图示。在一些实施方式中，帧内BC单元48可以用与上文结合运动估计单元42和运动补偿单元44描述的方式类似的方式生成向量并获取预测块，但这些预测块与正在被编解码的当前块位于同一帧内，并且这些向量被称为块向量而不是运动向量。具体而言，帧内BC单元48可以确定用于对当前块进行编码的帧内预测模式。在一些示例中，帧内BC单元48可以例如在多个单独的编码遍次期间使用各种帧内预测模式来编码当前块，并且通过率失真分析测试它们的性能。接下来，帧内BC单元48可以在各种经过测试的帧内预测模式中选择适当的帧内预测模式来使用，并相应地生成帧内模式指示符。例如，帧内BC单元48可以使用针对各种经过测试的帧内预测模式的率失真分析来计算率失真值，并且在经过测试的模式中选择具有最佳率失真特性的帧内预测模式作为适当的帧内预测模式来使用。率失真分析通常确定编码块与被编码以产生该编码块的原始未编码块之间的失真量、以及用于产生编码块的比特率。帧内BC单元48可以从用于各种编码块的失真和速率来计算比率，以确定哪种帧内预测模式展示出针对块的最佳率失真值。在其他示例中，帧内BC单元48可以全部或部分地使用运动估计单元42和运动补偿单元44，根据本文描述的实施方式来执行用于帧内BC预测的此类功能。在任一情况下，对于帧内块复制，预测块可以是被认为在像素差方面与待编解码块紧密匹配的块，像素差可以由绝对差之和、平方差之和、或其他差异度量来确定，并且预测块的识别可以包括针对亚整数像素位置的值的计算。无论预测块是根据帧内预测来自同一帧，还是根据帧间预测来自不同帧，视频编码器20都可以通过以下方式来形成残差视频块：从正在被编解码的当前视频块的像素值中减去预测块的像素值，从而形成像素差值。形成残差视频块的这些像素差值可以包括亮度分量差和色度分量差两者。作为上文描述的由运动估计单元42和运动补偿单元44执行的帧间预测、或由帧内BC单元48执行的帧内块复制预测的替代方案，帧内预测处理单元46可以对当前视频块进行帧内预测。具体而言，帧内预测处理单元46可以确定用于对当前块进行编码的帧内预测模式。为此，帧内预测处理单元46可以例如在多个单独的编码遍次期间使用各种帧内预测模式对当前块进行编码，并且帧内预测处理单元46可以从经过测试的帧内预测模式中选择适当的帧内预测模式来使用。帧内预测处理单元46可以向熵编码单元56提供指示用于块的所选择的帧内预测模式的信息。熵编码单元56可以将指示所选择的帧内预测模式的信息编码在比特流中。在预测处理单元41经由帧间预测或帧内预测确定针对当前视频块的预测块之后，加法器50通过从当前视频块中减去预测块来形成残差视频块。残差块中的残差视频数据可以被包括在一个或多个变换单元中并且被提供给变换处理单元52。变换处理单元52使用变换，诸如离散余弦变换或概念上类似的变换，来将残差视频数据变换为残差变换系数。变换处理单元52可以将所得到的变换系数发送到量化单元54。量化单元54将这些变换系数量化以进一步降低比特率。量化过程还可以减少与一些或所有系数相关联的比特深度。量化程度可以通过调整量化参数而被修改。在一些示例中，量化单元54然后可以执行对包括经过量化的变换系数的矩阵的扫描。可替代地，熵编码单元56可以执行扫描。在量化之后，熵编码单元56使用例如上下文自适应可变长度编解码、上下文自适应二进制算术编解码、基于语法的上下文自适应二进制算术编解码、概率区间分割熵编解码、或另外的熵编码方法或技术，将量化的变换系数熵编码成视频比特流。编码后的比特流然后可以被传送到视频解码器30，或者被存档在存储设备32中以供以后传送到视频解码器30或由视频解码器30取回。熵编码单元56还可以对用于正在被编解码的当前视频帧的运动向量和其他语法元素进行熵编码。逆量化单元58和逆变换处理单元60分别应用逆量化和逆变换以重建像素域中的残差视频块，以生成用于预测其他视频块的参考块。如上文指出的，运动补偿单元44可以从DPB 64中存储的帧的一个或多个参考块来生成运动补偿后的预测块。运动补偿单元44还可以将一个或多个内插滤波器应用于预测块，以计算用于在运动估计时使用的亚整数像素值。加法器62将重建的残差块加到由运动补偿单元44产生的运动补偿后的预测块，以产生参考块用于存储在DPB 64中。参考块然后可以由帧内BC单元48、运动估计单元42、以及运动补偿单元44用作预测块，以对后续视频帧中的另一个视频块进行帧间预测。图3是示出了根据本申请的一些实施方式的示例性视频解码器30的框图。视频解码器30包括视频数据存储器79、熵解码单元80、预测处理单元81、逆量化单元86、逆变换处理单元88、加法器90和DPB 92。预测处理单元81进一步包括运动补偿单元82、帧内预测处理单元84和帧内BC单元85。视频解码器30可以执行解码过程，解码过程大体上与上文结合图2关于视频编码器20所描述的编码过程互反。例如，运动补偿单元82可以基于从熵解码单元80接收的运动向量来生成预测数据，而帧内预测单元84可以基于从熵解码单元80接收的帧内预测模式指示符来生成预测数据。在一些示例中，视频解码器30的单元可以被分配任务以执行本申请的实施方式。此外，在一些示例中，本申请的实施方式可以在视频解码器30的一个或多个单元之间划分。例如，帧内BC单元85可以单独地或与视频解码器30的其他单元组合起来执行本申请的实施方式。在一些示例中，视频解码器30可以不包括帧内BC单元85，并且帧内BC单元85的功能可以由预测处理单元81的其他组件执行。视频数据存储器79可以存储待由视频解码器30的其他组件解码的视频数据，诸如编码的视频比特流。存储在视频数据存储器79中的视频数据可以例如从存储设备32获得，从本地视频源中获得，经由视频数据的有线或无线网络通信获得，或者通过访问物理数据存储介质来获得。视频数据存储器79可以包括编解码图片缓冲器，编解码图片缓冲器存储来自编码视频比特流的编码视频数据。视频解码器30的已解码图片缓冲器92存储参考视频数据，以在视频解码器30解码视频数据时使用。视频数据存储器79和DPB 92可以由各种存储器设备中的任何存储器设备形成，诸如动态随机存取存储器，包括同步DRAM、磁阻RAM、电阻RAM，或其他类型的存储器设备。出于说明的目的，在图3中将视频数据存储器79和DPB 92描绘为视频解码器30的两个不同组件。但是对于本领域的技术人员显而易见的是，视频数据存储器79和DPB 92可以由同一存储器设备或分离的存储器设备提供。在一些示例中，视频数据存储器79可以与视频解码器30的其他组件在芯片上，或者相对于这些组件在芯片外。在解码过程期间，视频解码器30接收编码的视频比特流，其表示编码视频帧的视频块和相关联的语法元素。视频解码器30可以在视频帧级别和/或视频块级别接收语法元素。视频解码器30的熵解码单元80对比特流进行熵解码，以生成量化的系数、运动向量或帧内预测模式指示符、以及其他语法元素。熵解码单元80然后将运动向量和其他语法元素转发到预测处理单元81。当视频帧被编解码为帧内预测编解码帧，或者用于其他类型帧中的帧内编解码预测块时，预测处理单元81的帧内预测处理单元84可以基于通过信号发送的帧内预测模式和来自当前帧的先前解码块的参考数据，来为当前视频帧的视频块生成预测数据。当视频帧被编解码为帧间预测编解码帧时，预测处理单元81的运动补偿单元82基于从熵解码单元80接收的运动向量和其他语法元素，为当前视频帧的视频块产生一个或多个预测块。预测块中的每一个预测块可以从参考帧列表之一内的参考帧产生。视频解码器30可以基于存储在DPB 92中的参考帧，使用默认的构建技术来构建参考帧列表，即列表0和列表1。在一些示例中，在视频块根据本文所描述的帧内BC模式被编解码时，预测处理单元81的帧内BC单元85基于从熵解码单元80接收的块向量和其他语法元素，为当前的视频块产生预测块。预测块可以在与视频编码器20定义的当前视频块相同的图片的重建区域内。运动补偿单元82和/或帧内BC单元85通过对运动向量和其他语法元素进行解析来确定用于当前视频帧的视频块的预测信息，并且然后使用预测信息来为正在解码的当前视频块产生预测块。例如，运动补偿单元82使用所接收的语法元素中的一些语法元素来确定用于对视频帧的视频块进行编解码的预测模式、帧间预测帧类型、针对用于帧的一个或多个参考帧列表的构建信息、针对帧的每个帧间预测编码的视频块的运动向量、针对帧的每个帧间预测编解码的视频块的帧间预测状态、以及用于解码当前视频帧中的视频块的其他信息。类似地，帧内BC单元85可以使用接收到的语法元素中的一些语法元素，例如标志，来确定当前视频块是使用帧内BC模式被预测的、帧的哪些视频块的构建信息在重建区域内并且应当被存储在DPB 92中、用于帧的每个帧内BC预测的视频块的块向量、用于帧的每个帧内BC预测的视频块的帧内BC预测状态、以及用于解码当前视频帧中的视频块的其他信息。运动补偿单元82还可以使用由视频编码器20在视频块的编码期间使用的内插滤波器来执行内插，以计算用于参考块的亚整数像素的内插值。在这种情况下，运动补偿单元82可以从所接收的语法元素来确定由视频编码器20使用的内插滤波器，并且使用这些内插滤波器来产生预测块。逆量化单元86使用由视频编码器20为视频帧中的每个视频块计算以确定量化程度的相同量化参数，对比特流中提供的并由熵解码单元80熵解码的量化变换系数进行逆量化。逆变换处理单元88将逆变换应用于变换系数，以重建像素域中的残差块。在运动补偿单元82或帧内BC单元85基于向量和其他语法元素生成用于当前视频块的预测块之后，加法器90通过将来自逆变换处理单元88的残差块和由运动补偿单元82和帧内BC单元85生成的相应预测块相加，来重建用于当前视频块的编码视频块。环内滤波器可以位于加法器90与DPB 92之间，以进一步处理解码视频块。给定帧中的解码视频块然后被存储在DPB 92中，DPB 92存储用于接下来的视频块的后续运动补偿的参考帧。DPB 92，或与DPB 92分离的存储器设备，也可以存储已解码的视频以供稍后在显示设备上呈现。在典型的视频编解码过程中，视频序列通常包括帧或图片的有序集合。每个帧可以包括三个样本阵列，表示为SL、SCb和SCr。SL是亮度样本的二维阵列。SCb是Cb色度样本的二维阵列。SCr是Cr色度样本的二维阵列。在其他情况下，帧可以是单色的，并且因此仅包括亮度样本的一个二维阵列。如图4A所示，视频编码器20通过首先将帧分割为一组编解码树单元来生成帧的编码表示。视频帧可以包括按从左到右和从上到下的光栅扫描顺序连续排序的整数个CTU。每个CTU是最大的逻辑编解码单元，并且CTU的宽度和高度由视频编码器20在序列参数集中用信号通知，以使视频序列中的所有CTU具有相同的大小，即128×128、64×64、32×32和16×16之一。但是应当指出，本申请并不一定限于特定的尺寸。如图4B所示，每个CTU可以包括亮度样本的一个编解码树块、色度样本的两个对应编解码树块、以及用于对编解码树块的样本进行编解码的语法元素。语法元素描述被编解码的像素块的不同类型的单元的性质以及视频序列如何可以在视频解码器30处被重建，包括帧间或帧内预测、帧内预测模式、运动向量、以及其他参数。在单色图片或具有三个单独颜色平面的图片中，CTU可以包括单个编解码树块和用于对编解码树块的样本进行编解码的语法元素。编解码树块可以是N×N的样本块。为了实现更好的性能，视频编码器20可以对CTU的编解码树块递归地执行树分割，诸如二叉树分割、三叉树分割、四叉树分割或任意二者的组合，并且将CTU划分成更小的编解码单元。如图4C中描绘的，64×64的CTU 400首先被划分成四个更小的CU，每个更小的CU具有32×32的块尺寸。在这四个更小的CU中，CU 410和CU 420均按块大小被划分成四个16×16的CU。两个16×16的CU 430和440均按块大小进一步被划分为四个8×8的CU。图4D描绘了一种四叉树数据结构，示出了如图4C中描绘的CTU 400的分割过程的最终结果，四叉树的每个叶节点对应于范围从32×32到8×8的相应尺寸的一个CU。如图4B中所描绘的CTU那样，每个CU可以包括相同大小的帧的亮度样本的编解码块和色度样本的两个对应编解码块、以及用于对编解码块的样本进行编解码的语法元素。在单色图片或具有三个单独色彩平面的图片中，CU可以包括单个编解码块和用于对编解码块的样本进行编解码的语法结构。应当指出，在图4C和图4D中描绘的四叉树分割仅用于说明的目的，并且一个CTU可以基于四叉/三叉/二叉树分割被拆分为CU以适应不同的局部特性。在多类型树结构中，一个CTU被四叉树结构分割，并且每个四叉树叶子CU可以进一步被二叉树和三叉树结构分割。如图4E所示，有五种分割类型，即四叉分割、水平二叉分割、垂直二叉分割、水平三叉分割和垂直三叉分割。在一些实施方式中，视频编码器20可以进一步将CU的编解码块分割成一个或多个M×N的预测块。预测块是矩形样本块，在其上应用相同的预测。CU的预测单元可以包括亮度样本的预测块、色度样本的两个对应预测块、以及用于对预测块进行预测的语法元素。在单色图片或具有三个单独色彩平面的图片中，PU可以包括单个预测块和用于对预测块进行预测的语法结构。视频编码器20可以为CU的每个PU的亮度预测块、Cb预测块和Cr预测块生成预测亮度块、预测Cb块和预测Cr块。视频编码器20可以使用帧内预测或帧间预测来生成用于PU的预测块。如果视频编码器20使用帧内预测来生成PU的预测块，则视频编码器20可以基于与PU相关联的帧的已解码样本来生成PU的预测块。如果视频编码器20使用帧间预测来生成PU的预测块，则视频编码器20可以基于除了与PU相关联的帧之外的一个或多个帧的已解码样本来生成PU的预测块。在视频编码器20为CU的一个或多个PU生成预测亮度块、预测Cb块和预测Cr块之后，视频编码器20可以通过将CU的预测亮度块从其原始亮度编解码块中减去来生成用于CU的亮度残差块，以使CU的亮度残差块中的每个样本指示CU的预测亮度块之一中的亮度样本与CU的原始亮度编解码块中的对应样本之间的差异。类似地，视频编码器20可以分别为CU生成Cb残差块和Cr残差块，以使CU的Cb残差块中的每个样本指示CU的预测Cb块之一中的Cb样本与CU的原始Cb编解码块中的对应样本之间的差异，并且CU的Cr残差块中的每个样本可以指示CU的预测Cr块之一中的Cr样本与CU的原始Cr编解码块中的对应样本之间的差异。此外，如图4C所示，视频编码器20可以使用四叉树分割将CU的亮度残差块、Cb残差块和Cr残差块分解为一个或多个亮度变换块、Cb变换块和Cr变换块。变换块是对其应用相同变换的矩形样本块。CU的变换单元可以包括亮度样本的变换块、色度样本的两个对应变换块、以及用于对变换块样本进行变换的语法元素。因此，CU的每个TU可以与亮度变换块、Cb变换块和Cr变换块相关联。在一些示例中，与TU相关联的亮度变换块可以是CU的亮度残差块的子块。Cb变换块可以是CU的Cb残差块的子块。Cr变换块可以是CU的Cr残差块的子块。在单色图片或具有三个单独颜色平面的图片中，TU可以包括单个变换块和用于对变换块的样本进行变换的语法结构。视频编码器20可以将一个或多个变换应用于TU的亮度变换块，以生成针对TU的亮度系数块。系数块可以是变换系数的二维阵列。变换系数可以是标量。视频编码器20可以将一个或多个变换应用于TU的Cb变换块，以生成针对TU的Cb系数块。视频编码器20可以将一个或多个变换应用于TU的Cr变换块，以生成针对TU的Cr系数块。在生成系数块之后，视频编码器20可以将系数块量化。量化通常是指这样的过程，在该过程中，变换系数被量化以可能减少用于表示变换系数的数据量，从而提供进一步的压缩。在视频编码器20将系数块量化之后，视频编码器20可以对指示量化后的变换系数的语法元素进行熵编码。例如，视频编码器20可以对指示量化后的变换系数的语法元素执行上下文自适应二进制算术编解码。最后，视频编码器20可以输出包括比特序列的比特流，该比特序列形成已编解码帧和相关联数据的表示，比特流被保存在存储设备32中或传输到目标设备14。在接收到由视频编码器20生成的比特流之后，视频解码器30可以解析比特流以从比特流获得语法元素。视频解码器30可以至少部分地基于从比特流获得的语法元素来重建视频数据的帧。重建视频数据的过程通常与视频编码器20执行的编码过程是互反的。例如，视频解码器30可以对与当前CU的TU相关联的系数块执行逆变换，以重建与当前CU的TU相关联的残差块。视频解码器30还通过将用于当前CU的PU的预测块的样本加到当前CU的TU的变换块的对应样本，来重建当前CU的编解码块。在重建用于帧的每个CU的编解码块之后，视频解码器30可以重建帧。如上文指出的，视频编解码主要使用两种模式实现视频压缩，即帧内预测和帧间预测。基于调色板的编解码是已经被许多视频编解码标准采用的另一种编解码方案。在可能特别适用于屏幕生成内容编解码的基于调色板的编解码中，视频编解码器形成颜色的调色板表，其表示给定块的视频数据。调色板表包括给定块中最主导的像素值。在给定块的视频数据中不频繁表示的像素值不被包括在调色板表中，或者作为逃逸颜色被包括在调色板表中。调色板表中的每个条目包括用于调色板表中的对应像素值的索引。用于块中的样本的调色板索引可以被编解码，以指示来自调色板表中的哪个条目将被用于预测或重建哪个样本。该调色板模式开始于为图片、条带、图块、或其他此类视频块分组的第一块生成调色板预测值的过程。如下文将解释的，用于后续视频块的调色板预测值通常通过更新先前使用的调色板预测值来生成。为了说明的目的，假设调色板预测值在图片级别被定义。换言之，图片可以包括多个编解码块，每个编解码块都有自己的调色板表，但针对整个图片只有一个调色板预测值。为了减少用信号发送视频比特流中的调色板条目所需的比特，视频解码器可以利用调色板预测值来确定用于重建视频块的调色板表中的新调色板条目。例如，调色板预测值可以包括来自先前使用的调色板表的调色板条目，或者甚至通过包括最近使用的调色板表的所有条目而用最近使用的调色板表被初始化。在一些实施方式中，调色板预测值可以包括少于来自最近使用的调色板表的所有条目，并且然后并入来自其他先前使用的调色板表的一些条目。调色板预测值可以具有与用于对不同块进行编解码的调色板表相同的大小，或者可以大于或小于用于对不同块进行编解码的调色板表。在一个示例中，调色板预测值被实现为包括64个调色板条目的先进先出表。为了从调色板预测值生成用于视频数据的块的调色板表，视频解码器可以从编码的视频比特流接收用于调色板预测值的每个条目的一位标志。该一位标志可以具有第一值或第二值，第一值指示调色板预测值的相关联条目将被包括在调色板表中，第二值指示调色板预测值的相关联条目将不被包括在调色板表中。如果调色板预测值的大小大于用于视频数据块的调色板表，则一旦达到针对调色板表的最大大小，视频解码器就可以停止接收更多标志。在一些实施方式中，调色板表中的一些条目可以在编码的视频比特流中直接通过信号发送，而不是使用调色板预测值来确定。对于这样的条目，视频解码器可以从编码的视频比特流接收三个单独的m比特值，这些比特值指示用于与条目相关联的亮度分量和两个色度分量的像素值，其中m表示视频数据的比特深度。与直接通过信号发送的调色板条目所需的多个m位值相比，从调色板预测值导出的那些调色板条目只需要一位标志。因此，使用调色板预测值通过信号发送一些或所有调色板条目可以显著减少通过信号发送新调色板表的条目所需的比特数，从而提高调色板模式编解码的整体编解码效率。在许多情况下，用于一个块的调色板预测值是基于用于对一个或多个先前编解码的块进行编解码的调色板表来确定的。但是在对图片、条带或图块中的第一编解码树单元进行编解码时，先前编解码的块的调色板表可能不可用。因此，调色板预测值不能使用先前使用的调色板表的条目来生成。在这种情况下，调色板预测值初始值的序列可以在序列参数集和/或图片参数集中通过信号被发送，这些初始值是在先前使用的调色板表不可用时用于生成调色板预测值的值。SPS通常是指语法元素的一种语法结构，这些语法元素应用于称为编解码视频序列的一系列连续编解码的视频图片，其由在PPS中找到的语法元素的内容确定，在PPS中找到的语法元素由在每个条带段头中找到的语法元素引用。PPS通常是指应用于CVS内的一个或多个单独图片的语法元素的语法结构，该一个或多个单独图片由在每个条带段头中找到的语法元素确定。因此，SPS通常被认为是比PPS更高级别的语法结构，这意味着与PPS中包括的语法元素相比，SPS中包括的语法元素通常更不频繁地改变并且应用于视频数据的更大部分。图5是示出了根据本申请的一些实施方式的用于变换帧间和帧内编码块的残差的示例性多重变换选择方案的表格。例如，在编码期间，视频编码器20通过图2的变换处理单元52执行MTS。在解码期间，视频解码器30通过图3的逆变换处理单元88使用对应的逆变换方法执行逆变换。当前的VVC规范采用MTS方案来对帧间和帧内编码块中的残差进行变换。如果使用MTS，则在编码期间，视频编码器选择多种变换方法中的一种来应用于编码块的残差。例如，视频编码器可以将DCT2变换、DCT8变换或DST7变换应用于编码块的残差。一组语法元素用于表示用于编码块的特定变换方法。在一些实施例中，以序列级别指定两个语法元素中)，以分别为帧内和帧间模式使能MTS。当以序列级别使能MTS时，通过信号发送另一个CU级别语法元素以指示MTS是否应用于特定CU。在一些实施例中，只有当与编码块的特征相关的多个标准被满足时，MTS才会被使用，包括：1)编码块的宽度和高度均小于或等于预定义值；2)编码块是亮度编码块；3)最后一个非零系数的水平和垂直坐标均小于预定义值。如果不满足上述任一条件，则视频编码器不应用MTS，而是采用DCT2变换等默认变换方法对块残差进行变换，并设置相应的语法元素以指示使用默认变换。表500说明了在MTS中使用的语法元素值和对应的变换方法。如果使用DCT2变换来对块残差进行变换，则将MTS_CU_flag设置为0，并且不通过信号发送MTS_Hor_flag和MTS_Ver_flag。如果将MTS_CU_flag设置为1，则另外通过信号发送其他两个语法元素以分别指示水平方向和垂直方向的变换类型。当MTS_Hor_flag＝1或MTS_Ver_flag＝1时，使用DST7方法对相应的水平或垂直分量进行变换。当MTS_Hor_flag＝0或MTS_Ver_flag＝0时，使用DCT8方法对相应的水平或垂直分量进行变换。在一些实施例中，所有MTS变换系数都以6位精度编码，这与DCT2核心变换相同。鉴于VVC支持HEVC中使用的所有变换大小，所以HEVC中使用的所有变换核与VVC中使用的变换核保持相同，包括4点、8点、16点和32点DCT2变换和4点DST7变换。同时，VVC变换设计还支持其他变换核，包括64点DCT2、4点DCT8、8点、16点、32点DST7和DCT8。此外，为了降低大尺寸DST7或DCT8变换的计算复杂度，当块的宽度或高度等于32时，对于DST7和DCT8变换块，将位于低频区域之外的变换系数)设置为零。在一些实施例中，使用非重叠系数组来对变换块的变换系数进行编解码。基于变换块的大小确定CG大小。基于一个预定义的扫描顺序对变换块内的CG和每个CG内的变换系数进行编解码。图6是示出了根据本申请的一些实施方式的具有非零变换系数的示例性变换块的框图。变换块600包括对应于变换块600的左上网格部分的第一区域602以及由变换块600的虚线部分表示的第二区域604。第一区域602具有预定义的大小并且包括一个或多个非零变换系数。第二区域604是第一区域602之外的区域，其可以包括或不包括一个或多个非零变换系数。如图5所示，视频编码器/解码器可以使用MTS以帧内和帧间模式对残差进行变换。此外，视频编码器/解码器仅在满足以下准则时才使用MTS：编码块的宽度和高度均小于或等于预定义值；编码块是亮度编码块；最后一个非零系数的水平和垂直坐标均小于预定值，即在第一区域602内。在一些实施例中，当满足上面列出的三个准则时，即使在变换块的预定义的左上角区域中只有一个非零变换系数也可以使能MTS。在其他实施例中，由于MTS编码增益来自于对一个非DCT2变换的正确选择，该非DCT2变换导致比DCT2变换更好的能量压缩，因此，MTS工具仅在变换块中有足够数量的非零变换系数时才有效。在这种情况下，一个附加准则被用于通过信号发送MTS语法元素。在一些实施例中，该附加准则包括在变换块中至少存在最小数量的非零变换系数。在解码期间，视频解码器仅在非零变换系数的数量超过预定义阈值时接收并解析MTS语法元素。如果不存在最小数量的非零变换系数，则视频解码器将MTS_CU_flag设置为0，并对变换块应用DCT2逆变换。例如，在变换块600中，假设用于使能MTS的非零变换系数的最小数量为两个，由于存在三个非零系数，因此，可以为变换块600使能MTS。在一些实施例中，基于变换块中最后一个非零变换系数的扫描顺序索引，有条件地通过信号发送该MTS语法元素。例如，在图6中，最后一个非零变换系数的扫描顺序索引是N。因此，视频编码器或解码器不必计算所有非零变换系数来确定变换块中非零系数的数量是否超过了预定义阈值。具体来说，仅当最后一个非零系数的扫描顺序索引超过预定义阈值时，才将MTS用于变换块。如果最后一个非零变换系数的扫描顺序索引大于预定义阈值，则通过信号发送MTS_CU_flag以指示所使用的具体变换。另一方面，如果最后一个非零变换系数的索引位置不大于该预定义阈值，则不通过信号发送MTS_CU_flag并将其推断为零。通过这种方法，在解析MTS语法元素之前，每个变换块只进行一次检查。下面的表1说明了当该方法应用于条件MTS信令时用于编码单元和变换单元的语法表，相关变化被标注下划线。在表1中，布尔变量MtsLastSigCoeffPosMetThresholdFlag用于表示最后一个非零系数的索引位置是否大于该预定义阈值，从而允许为给定的变换块通过信号发送MTS_CU_flag。表1：用于MTS信令的编码单元和变换单元的修改的语法表/＞/＞如在与图5相关的描述中提到的那样，在MTS下，变换块中预定义的左上角区域之外的变换系数在变换块的宽度或高度大于预定义值时被迫零。例如，在图6中，第二区域604可以是置零区域，第一区域602可以是非零区域。仅在最后一个非零系数的水平和垂直坐标都小于该预定义值时通过信号发送MTS_CU_flag，表明最后一个非零系数在非零区域内。然而，由于这些变换系数是基于对角线扫描顺序进行扫描的，这种MTS信令条件不能保证所有非零变换系数总是位于预定义的左上角区域内。因此，需要额外的检查以确保所有非零系数都在非零区域内。在一些实施例中，附加检查的示例包括比特流一致性约束，以使当MTS置零区域内存在任何非零系数时，MTS索引的值，即mts_idx，必须为零。在一些实施例中，根据是否存在位于左上角区域×min)之外的非零系数来确定是否通过信号发送该MTS索引。如果是，则不通过信号发送该MTS索引并始终将其推断为0；否则，将该MTS索引通过信号发送到比特流中，以指示使用了哪些变换。可通过以编码组级别检查CBF来做出关于在置零区域中是否存在任何非零系数的决定，而不是检查每个扫描位置。具体地，如果当前TB的位于置零区域内的任何CG具有等于1的CBF值，则省略该MTS索引的信令。下面的表2说明了在应用上述MTS信令约束时的变换单元的修改的语法表，其中与提出的约束MTS信令相关的更改被标注下划线。表2：针对MTS信令提出的变换单元语法表/＞在一些实施例中，可通过在比特流中用信号发送三个变换跳过标志，将变换跳过模式独立地应用于亮度和色度分量，每个分量一个。然而，在当前设计中，在采用JCCR模式对当前TU的色度残差进行编码时，禁止将变换跳过模式应用于色度分量。由于在重建色度残差时在不同阶段应用了变换跳过和JCCR，因此可以同时启用这两种编码工具。因此，在本申请的另一实施例中，提出了在一个TU中的色度残差通过JCCR模式进行编码时，启用色度变换跳过模式。图7是示出了根据本发明的一些实施方式的视频编解码器使用多重变换选择方案来实现对块残差进行编解码的技术的示例性过程的流程图。为了描述方便，过程700被描述为由视频解码器执行，例如，图3中的视频解码器30。在过程700期间，MTS的信令取决于最后一个非零系数的位置以及变换块的不同区域中非零系数的存在。作为第一步，视频解码器30接收对变换块进行编码的比特流，其中，该变换块包括非零区域和置零区域。接下来，视频解码器30检查在该置零区域内是否存在任何非零系数。根据在变换块的置零区域内不存在非零系数的确定，视频解码器30确定变换块的沿扫描方向的最后一个非零系数的扫描顺序索引。例如，在图6中，变换块的最后一个非零系数的扫描顺序索引为3。根据最后一个非零系数的扫描顺序索引大于预定义阈值的确定，视频解码器30从比特流接收多重变换选择索引的值。例如，对于图6中的变换块600，如果预定义阈值是2，则由于最后一个非零系数3大于预定义阈值2，视频解码器30将接收MTS索引的值。最后，视频解码器30基于MTS索引的值，在水平方向和垂直方向上对变换块的变换系数应用相应的变换。例如，如图5所示和相关描述，如果MTS_CU_flag的值为0，则视频解码器对变换块应用逆DCT2变换。如果MTS_CU_flag的值为1，则视频解码器进一步接收附加语法元素并选择性地将逆DST7或DCT8应用于变换块。在一些实施例中，根据最后一个非零系数的扫描顺序索引不大于预定义阈值的确定，视频解码器30将默认变换应用于变换块。在一些实施例中，通过以下方式，视频解码器30基于MTS索引的值将相应的变换应用于变换块：根据MTS索引具有第一值的确定，从比特流中接收MTS水平标志的值和MTS垂直标志的值，基于MTS水平标志的值，在水平方向上对变换块的系数应用水平变换；并且，水平变换之后，基于MTS垂直标志的值，在垂直方向上对变换块的系数应用垂直变换；以及根据MTS索引具有第二值的确定，在水平方向和垂直方向上使用默认变换对变换块进行变换。在一些实施例中，视频解码器30通过检查在置零区域内的亮度系数组的编码块标志并且只有当置零区域内所有亮度系数组的CBF都为零时才确定在置零区域内不存在非零系数的方式来检查在置零区域内是否存在任何非零系数。例如，如果置零区域内的一个亮度系数组的CBF为1，则在置零区域内至少存在一个非零系数并且不通过信号发送MTS索引。在一些实施例中，视频解码器30通过检查最后一个非零系数的横坐标和纵坐标并且当最后一个非零系数的横坐标或纵坐标在置零区域内时，确定在置零区域内存在至少一个非零系数的方式来检查置零区域内是否存在任何非零系数。例如，如果最后一个非零系数的横坐标或纵坐标在置零区域内，则在置零区域内存在至少一个非零系数。在一些实施例中，该变换块的色度残差是以色度残差联合编码模式进行编码的，并且为该变换块启用色度变换跳过模式。在一些实施例中，该非零区域是该变换块的左上角16×16区域。在一些实施例中，该扫描顺序是对角线扫描顺序。如上所述，使用MTS的动机是使用DCT/DST变换中的其他核心变换来实现残差样本的更好的能量压缩。不同预测模式产生的残差可能呈现不同的特征。在一些实施例中，将MTS用于所有预测模式可能不是有益的。例如，时域中的样本之间的相关性通常比空间域中的样本之间的相关性多，因此帧间预测样本通常比帧内预测样本具有更好的预测效率。换言之，帧间预测块的残差幅度通常小于帧内预测块的残差幅度。在这种情况下，可以为帧间编码块禁用MTS模式。具体地，在当前编码块被帧内编解码时，对语法mts_idx进行解析以确定是否将非DCT2变换应用于当前编码块；否则，在当前编码块被帧间编码时，语法mts_idx不被解析，但总是被推断为0，即只能应用DCT2变换。与建议的方法对应的语法表详述如下。表3：针对MTS信令附加提出的变换单元语法表图8是示出了根据本申请的一些实施方式的示例上下文自适应二进制算术编码引擎的框图。上下文自适应二进制算术编解码是一种在许多视频编解码标准中使用的熵编解码形式，例如H.264/MPEG-4AVC、高效视频编解码以及VVC。CABAC基于算术编解码，具有一些创新和变化以使其适应视频编解码标准的需要。例如，CABAC对二进制符号进行编解码，这保持低复杂度并且允许针对任何符号的更频繁使用的位进行概率建模。概率模型是基于局部上下文自适应地被选择的，从而允许对概率更好地建模，因为编解码模式通常在局部良好地相关。最后，CABAC通过使用量化的概率范围和概率状态而使用无乘法范围划分。CABAC具有用于不同上下文的多个概率模式。它首先将所有非二进制符号转换成二进制。然后，对于每个二元位，编解码器选择使用哪个概率模型，然后使用来自附近元素的信息对概率估计进行优化。算术编解码最终被应用来压缩数据。上下文建模提供了编解码符号的条件概率的估计。利用适当的上下文模型，通过依照要编码的当前符号的邻域中的已经编解码的符号而在不同概率模型之间切换，给定的符号间冗余可以被利用。对数据符号进行编解码涉及以下阶段。二值化：CABAC使用二进制算术编解码，其意味着只有二进制决策被编码。非二进制值的符号在算术编解码之前被“二值化”或者转换成二进制代码。这个过程类似于将数据符号转换成可变长度代码的过程，但是二进制代码在传输之前被进一步编码。针对二值化符号的每个二元位重复各阶段。上下文模型选择：“上下文模型”是一种用于二值化符号的一个或多个二元位的概率模型。该模型可以取决于最近编解码的数据符号的统计从可用模型选择中被选取。上下文模型存储每个二元位为“1”或“0”的概率。算术编码：算术编解码器依照所选择的概率模型对每个二元位编码。注意，对于每个二元位只有两个子范围。概率更新：所选择的上下文模型基于实际编解码的值而被更新。通过将每个非二进制语法元素值分解为二元位序列，CABAC中每个二元位值的进一步处理取决于相关联的编解码模式决策，其可以被选择为常规模式或旁路模式。后者被选择用于这样的二元位，这些二元位被假定为均匀分布，并且因此，针对它们，整个常规二进制算术编码过程被简单地旁路。在常规编解码模式下，通过使用常规二进制算术编解码引擎，每个二元位值被编码，其中相关联的概率模型基于语法元素的类型以及语法元素的二值化表示中的二元位位置或二元位索引通过固定选择被确定，或者取决于相关侧信息从两个或更多概率模型中自适应地被选择。对概率模型的选择被称为上下文建模。作为一项重要的设计决策，后一种情况通常仅被应用于最频繁观察到的二元位，而其他的通常较不频繁观察到的二元位，将使用联合的通常为零阶的概率模型而被处理。以这种方式，CABAC在子符号级别上使得选择性自适应概率建模成为可能，并且因此以显著降低的总体建模或学习成本，而提供了一种高效的工具来利用符号间冗余。注意，对于固定情况和自适应情况这两者，原则上，从一个概率模型到另一个概率模型的切换可以发生在任何两个连续的规则编解码的二元位之间。总体上，CABAC中上下文模型的设计反映了如下目标：在避免不必要的建模成本开销与在很大程度上利用统计依赖性的冲突目标之间找到良好折衷。CABAC中概率模型的参数是自适应的，这意味着在编码器和解码器两者中，模型概率对二元位源的统计变化的自适应是以向后自适应和同步的方式在逐二元位的基础上被执行的；这个过程被称为概率估计。为了该目的，CABAC中的每个概率模型可以从126个不同的状态中选取一个，相关联的模型概率值p的范围在区间内。每个概率模型的两个参数作为7比特条目被存储在上下文存储器中：6个比特用于63个概率状态中的每一个概率状态，其表示最不可能符号的模型概率pLPS，并且1比特用于nMPS，即最可能符号的值。在一个或多个示例中，所描述的功能可以在硬件、软件、固件或其任何组合中实现。如果在软件中实现，则这些功能可以作为一个或多个指令或代码存储在计算机可读介质上或通过计算机可读介质传输，并由基于硬件的处理单元执行。计算机可读介质可以包括计算机可读存储介质或通信介质，计算机可读存储介质对应于诸如数据存储介质之类的有形介质，通信介质包括促进将计算机程序从一个地方转移到另一个地方的任何介质。在这种方式中，计算机可读介质通常可以对应于非暂时性的有形计算机可读存储介质或诸如信号或载波的通信介质。数据存储介质可以是任何可用介质，其可以由一个或多个计算机或者一个或多个处理器访问以取回指令、代码和/或数据结构以实现本申请中描述的实施方式。计算机程序产品可以包括计算机可读介质。在本文的实施方式的描述中使用的术语仅用于描述特定实施方式的目的，并且不旨在限制权利要求的范围。如在实施方式的描述和所附权利要求中使用的单数形式“一个”、“一种”和“该/所述”也旨在包括复数形式，除非上下文另有明确指示。还将理解，如本文所使用的术语“和/或”是指并且涵盖一个或多个相关联的所列项目的任何和所有可能的组合。将会进一步理解，当在本说明书中使用时，术语“包括”和/或“包括有”指定所陈述的特征、元件和/或组件的存在，但不排除一个或多个其他特征、元件、组件和/或它们的组的存在或添加。还将理解，虽然术语第一、第二等在本文中可以用于描述各种元件，但这些元件不应当受限于这些术语。这些术语仅用于区分一个元件与另一个元件。例如，在不脱离实施方式的范围的情况下，第一电极可以被称为第二电极，并且类似地，第二电极可以被称为第一电极。第一电极和第二电极两者都是电极，但它们不是同一个电极。本申请的描述已经被呈现用于说明和描述的目的，并且不旨在穷举或限于以所公开形式的发明。受益于前述描述和相关联附图中呈现的教导，许多修改、变化和替代实施方式对本领域的普通技术人员将是明显的。实施例被选择和描述是为了最好地解释本发明的原理、实际应用，并使本领域的其他技术人员能够理解本发明的各种实现方式，并最好地利用基本原理和适用于预期特定用途的具有各种修改的各种实现方式。因此，将理解，权利要求的范围不限于所公开的实施方式的具体示例，并且修改和其他实施方式旨在被包括在所附权利要求的范围内。
