标题title
webservice接口的配置、调用方法、计算机设备及存储程序
摘要abst
本发明涉及一种webservice接口的配置、调用方法、计算机设备及存储程序，包括获取webservice原始接口地址；对webservice原始接口地址进行数据重新配置，得到webservice接口地址；对webservice接口地址进行解析，得到接口方法及对应的请求报文；判断是否需要将请求报文中的参数信息转换为地址参数，如果需要，则解析请求报文，并将参数信息配置到请求参数列表中；其中，参数信息用于接口文档的生成；对webservice接口进行测试，当测试成功时得到webservice原始接口响应的接口报文；解析接口报文，获取字段信息；完成配置，进行服务发布。本发明能够一体化解决webservice使用复杂性问题、安全问题、接口文档管理问题，支持get，post方法的调用，任何支持调用http协议的get,post方法的工具，都可以调用代理后的接口。
权利要求书clms
1.一种webservice接口的配置方法，其特征在于，包括：获取webservice原始接口地址；对所述webservice原始接口地址进行数据重新配置，得到webservice接口地址；对所述webservice接口地址进行解析，得到接口方法及对应的请求报文；判断是否需要将所述请求报文中的参数信息转换为地址参数，如果需要，则解析所述请求报文，并将所述参数信息配置到请求参数列表中；其中，所述参数信息用于接口文档的生成；对webservice接口进行测试，当测试成功时得到webservice原始接口响应的接口报文；解析所述接口报文，获取字段信息；完成配置，进行服务发布；其中，服务包括接口文档和权限信息。2.根据权利要求1所述的webservice接口的配置方法，其特征在于，还包括：判断所述webservice接口地址是否为webservice接口；确定为webservice接口后，对所述webservice接口地址进行解析。3.根据权利要求2所述的webservice接口的配置方法，其特征在于，所述判断所述webservice接口地址是否为webservice接口，包括：判断所述webservice接口地址的结尾是否为wsdl；如果是，则确定所述webservice接口地址为webservice接口。4.根据权利要求1所述的webservice接口的配置方法，其特征在于，还包括：对所述接口文档和权限信息进行维护。5.根据权利要求1所述的方法，其特征在于，所述参数信息既支持原生报文的post调用，也支持带地址参数GET方式调用。6.根据权利要求1所述的方法，其特征在于，配置后得到的webservice接口为基于http协议的接口。7.一种webservice接口的调用方法，其特征在于，包括：在浏览器地址中输入代理后的webservice接口地址，已经响应的业务参数、平台参数；其中，所述业务参数通过请求报文转换后的地址参数，平台参数用于用户接口鉴权；校验平台参数，校验通过则进行下一步骤，否则返回错误信息到调用端；校验接口方法权限，校验通过则进行下一步骤，否则返回错误信息到调用端；校验是否为地址参数，如果不是，则需要则要验证报文信息，如果当前是get请求，不存在报文信息，确定为地址参数，否则报错；通过请求参数校验地址参数是否完善，通过走下一步骤，否则返回错误信息到调用端；将地址参数替换配置中的请求报文中参数，封装好原始的webservice需要的请求报文，调用webservice原始接口地址，请求报文为刚封装好的请求报文；调用后，获取到响应报文；根据配置情况，对字段权限进行处理，根据不同的使用者角色返回不同的数据；返回数据到调用端。8.一种计算机设备，其特征在于，包括：存储器和处理器，所述存储器存储有计算机程序，所述计算机程序被所述处理器执行时，使得所述处理器执行如权利要求1至6中任一项所述的webservice接口的配置方法，或实现7所述的webservice接口的调用方法。9.一种计算机存储介质，其特征在于，存储有计算机程序，所述计算机程序被处理器执行时，使得所述处理器执行如权利要求1至6中任一项所述的webservice接口的配置方法，或实现7所述的webservice接口的调用方法。
说明书desc
技术领域本发明属于数据通信技术领域，具体涉及一种webservice接口的配置、调用方法、计算机设备及存储程序。背景技术目前数据通信大部分使用的是restful，而webservice接口使用的较少，但是在金融行业、政务行业等依然有一定层度的webservice接口存在和使用。webservice接口的常规使用依然比较繁琐，必须通过一定的步骤才能正常对接使用。另外，在数据安全方面，国家对数据安全的重视程序越来越高，对于在老系统中不满足安全条件的webservice接口改造是一个很难推动的工作。综上所述，webservice接口存在使用复杂，无法满足安全条件的问题。发明内容有鉴于此，本发明的目的在于克服现有技术的不足，提供一种webservice接口的配置、调用方法、计算机设备及存储程序，以解决现有技术中webservice接口存在使用复杂，无法满足安全条件的问题。为实现以上目的，本发明采用如下技术方案：一种webservice接口的配置方法，包括：获取webservice原始接口地址；对所述webservice原始接口地址进行数据重新配置，得到webservice接口地址；对所述webservice接口地址进行解析，得到接口方法及对应的请求报文；判断是否需要将所述请求报文中的参数信息转换为地址参数，如果需要，则解析所述请求报文，并将所述参数信息配置到请求参数列表中；其中，所述参数信息用于接口文档的生成；对webservice接口进行测试，当测试成功时得到webservice原始接口响应的接口报文；解析所述接口报文，获取字段信息；完成配置，进行服务发布；其中，服务包括接口文档和权限信息。进一步的，还包括：判断所述webservice接口地址是否为webservice接口；确定为webservice接口后，对所述webservice接口地址进行解析。进一步的，所述判断所述webservice接口地址是否为webservice接口，包括：判断所述webservice接口地址的结尾是否为wsdl；如果是，则确定所述webservice接口地址为webservice接口。进一步的，还包括：对所述接口文档和权限信息进行维护。进一步的，所述参数信息既支持原生报文的post调用，也支持带地址参数GET方式调用。进一步的，配置后得到的webservice接口为基于http协议的接口。本申请实施例提供一种webservice接口的调用方法，包括：在浏览器地址中输入代理后的webservice接口地址，已经响应的业务参数、平台参数；其中，所述业务参数通过请求报文转换后的地址参数，平台参数用于用户接口鉴权；校验平台参数，校验通过则进行下一步骤，否则返回错误信息到调用端；校验接口方法权限，校验通过则进行下一步骤，否则返回错误信息到调用端；校验是否为地址参数，如果不是，则需要则要验证报文信息，如果当前是get请求，不存在报文信息，确定为地址参数，否则报错；通过请求参数校验地址参数是否完善，通过走下一步骤，否则返回错误信息到调用端；将地址参数替换配置中的请求报文中参数，封装好原始的webservice需要的请求报文，调用webservice原始接口地址，请求报文为刚封装好的请求报文；调用后，获取到响应报文；根据配置情况，对字段权限进行处理，根据不同的使用者角色返回不同的数据；返回数据到调用端。本申请实施例提供一种计算机设备，包括：存储器和处理器，所述存储器存储有计算机程序，所述计算机程序被所述处理器执行时，使得所述处理器执行上述任一项webservice接口的配置方法的步骤或任一项webservice接口的调用方法的步骤。本申请实施例还提供一种计算机存储介质，存储有计算机程序，所述计算机程序被处理器执行时，使得所述处理器执行上述任一项webservice接口的配置方法的步骤或任一项webservice接口的调用方法的步骤。本发明采用以上技术方案，能够达到的有益效果包括：本发明提供一种webservice接口的配置、调用方法、计算机设备及存储程序，能够一体化解决webservice使用复杂性问题、安全问题、接口文档管理问题，其中，复杂性问题包含原始webservice接口需要生成客户端代码或者需要借助第三方工具生成接口报文；通过转为地址参数形式，方便接口的调用。安全问题包含接口调用安全、接口方法安全以及响应报文字段安全，细粒度包含数据安全。数据服务平台可以根据配置的基本信息、参数信息、报文信息、权限信息生成完善的接口文档，方便接口使用人员查看和使用。附图说明为了更清楚地说明本发明实施例或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图仅仅是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本发明webservice接口的配置方法的步骤示意图；图2为本发明webservice接口的调用方法的流程示意图；图3为本发明webservice接口的配置方法涉及的硬件运行环境的计算机设备的结构示意图；图4为本发明webservice接口的调用方法涉及的硬件运行环境的计算机设备的结构示意图。具体实施方式为使本发明的目的、技术方案和优点更加清楚，下面将对本发明的技术方案进行详细的描述。显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动的前提下所得到的所有其它实施方式，都属于本发明所保护的范围。相关技术中，webservice接口使用时存在以下缺点：通过webservice代码生成工具生成客户端代码。通过生成的代码，把代码嵌入到现有系统中，再继续开发对接口的使用。存在对于熟悉webservice使用的人来说，通过工具生成客户段代码还是比较容易的；对于不熟悉webservice使用的人来说，需要一定的学习成本。通过webservice报文生成工具生成请求报文，需要再以报文作为http的请求体，请求webservice接口获取数据。很多时候，webservice接口的提供方，提供的资料仅有webservice的wsdl地址，对于接口方法、参数以及如何使用是没有太多的资料介绍，使得在webservice的使用上，增加了一定难度。http的请求方法中，包含有get、post等，相对来说get的调用更方面，所有浏览器都支持这个功能，但是post的调用，就比较复杂了，需要借助工具或者浏览器插件才能完成。对于webservice接口的调用，都是用的post方法，相对而言就不是那么方便，不能直接在浏览器的地址中调用。webservice接口文档的管理，一般情况下是线下管理，不方便维护与共享。webservice接口还存在以下安全方面缺点：部分接口存在没有鉴权的情况。由于是老的webservice接口，如果要对接口增加鉴权能力，老系统改造比较困难。一般情况下，一个webservice接口后面可能包含多个接口方法。如果要对部分接口方法做权限限制，部分接口方法能调用部分接口方法不能调用，现有系统是很难改造处理的。数据安全层面，如果要对返回的数据中，对部分数据有安全问题，那么久需要对部分数据对应的字段做处理，也涉及到老系统代码改造问题，依然比较困难。同样是数据安全层面，如果要配置、调用不同的人员或者角色调用同一个webservice接口方法，返回不同的安全级别的数据，现有系统依然是很难改造处理的。下面结合附图介绍本申请实施例中提供的一个具体的webservice接口的配置、调用方法、计算机设备及存储程序。如图1所示，本申请实施例中提供的webservice接口的配置方法，包括：S101，获取webservice原始接口地址；S102，对所述webservice原始接口地址进行数据重新配置，得到webservice接口地址；一些实施例中，还包括：判断所述webservice接口地址是否为webservice接口；确定为webservice接口后，对所述webservice接口地址进行解析。一些实施例中，所述判断所述webservice接口地址是否为webservice接口，包括：判断所述webservice接口地址的结尾是否为wsdl；如果是，则确定所述webservice接口地址为webservice接口。因为是webservice的代理功能，所有配置里面很重要的一个步骤就是，重新配置接口地址。另外一个重要步骤是把webservice接口地址配置到系统中，一般情况下，webservice接口地址是以wsdl结尾的，数据服务平台会根据wsdl结尾信息判断是否为webservice接口。如果是，则可以进行webservice接口地址解析。S103，对所述webservice接口地址进行解析，得到接口方法及对应的请求报文；具体的，本申请中通过后端程序解析，返回接口方法以及对应的请求报文。可以勾选需要代理的接口方法，用于是否在代理接口中暴露此方法接口，接口方法鉴权依据。S104，判断是否需要将所述请求报文中的参数信息转换为地址参数，如果需要，则解析所述请求报文，并将所述参数信息配置到请求参数列表中；其中，所述参数信息用于接口文档的生成；可以理解的是，地址参数可用于后面的接口文档生成。转换为地址参数接口既支持原生报文的post调用，也支持带地址参数GET方式调用。S105，对webservice接口进行测试，当测试成功时得到webservice原始接口响应的接口报文；S106，解析所述接口报文，获取字段信息；具体可以根据实际情况，进一步对获取的字段进行权限级别的设置。S107，完成配置，进行服务发布；其中，服务包括接口文档和权限信息。在完成配置后，可以进行服务的发布，具体为在服务平台的门户页面即可看到发布的服务，以及产生的接口文档、权限信息等。一些实施例中，还包括：S108，对所述接口文档和权限信息进行维护。通过上述配置后，利用上述配置后的webservice接口，能够解决使用以及安全方面的缺点。在服务平台中，输入的webservice接口地址，服务平台会自动解析webservice的以下信息：webservice接口存在的接口方法；webservice接口中每个接口方法的接口报文；webservice接口每个接口报文中的参数信息。本申请提供的webservice接口还具有测试功能，解析测试返回的数据获得接口的响应字段别。根据解析的信息可以生成接口文档，包含在服务平台重新定义的接口地址、接口描述信息、输入参数信息、响应字典信息等。并提供完善的接口文档管理维护功能。本申请提供的webservice接口还设置安全配置，包含webservice接口权限，webservice接口方法权限，字段设置不同的安全级别等。已经被代理出来的webservice接口，是基于http协议的接口，支持get,post方法的调用，任何支持调用http协议的get,post方法的工具，都可以调用代理后的接口。下面通过浏览器地址调用代理接口方式介绍的webservice接口的调用。如图2所示，本申请实施例提供一种webservice接口的调用方法，包括：S201，在浏览器地址中输入代理后的webservice接口地址，已经响应的业务参数、平台参数；其中，所述业务参数通过请求报文转换后的地址参数，平台参数用于用户接口鉴权；S202，校验平台参数，校验通过则进行下一步骤，否则返回错误信息到调用端；S203，校验接口方法权限，校验通过则进行下一步骤，否则返回错误信息到调用端；S204，校验是否为地址参数，如果不是，则需要则要验证报文信息，如果当前是get请求，不存在报文信息，确定为地址参数，否则报错；S205，通过请求参数校验地址参数是否完善，通过走下一步骤，否则返回错误信息到调用端；S206，将地址参数替换配置中的请求报文中参数，封装好原始的webservice需要的请求报文，调用webservice原始接口地址，请求报文为刚封装好的请求报文；S207，调用后，获取到响应报文；S208，根据配置情况，对字段权限进行处理，根据不同的使用者角色返回不同的数据；S209，返回数据到调用端。通过以上webservice代理的配置以及代理后接口的调用，解决了传统webservice使用时的复杂性问题和安全问题。复杂性问题即①需要生成客户端代理②或者需要借助第三方工具生成请求报文问题③接口文档管理问题，安全问题即①接口权限问题②接口方法权限问题③字段权限问题。本申请提供一种计算机设备，包括：存储器和处理器，还可以包括网络接口，所述存储器存储有计算机程序，存储器可以包括计算机可读介质中的非永久性存储器，随机存取存储器和/或非易失性内存等形式，如只读存储器或闪存。该计算机设备存储有操作系统，存储器是计算机可读介质的示例。所述计算机程序被所述处理器执行时，使得所述处理器执行webservice接口的配置方法或webservice接口的调用方法，图3或图4中示出的结构，仅仅是与本申请方案相关的部分结构的框图，并不构成对本申请方案所应用于其上的计算机设备的限定，具体的计算机设备可以包括比图中所示更多或更少的部件，或者组合某些部件，或者具有不同的部件布置。在一个实施例中，本申请提供的webservice接口的配置方法可以实现为一种计算机程序的形式，计算机程序可在如图3所示的计算机设备上运行。一些实施例中，所述计算机程序被所述处理器执行时，使得所述处理器执行以下步骤：获取webservice原始接口地址；对所述webservice原始接口地址进行数据重新配置，得到webservice接口地址；对所述webservice接口地址进行解析，得到接口方法及对应的请求报文；判断是否需要将所述请求报文中的参数信息转换为地址参数，如果需要，则解析所述请求报文，并将所述参数信息配置到请求参数列表中；其中，所述参数信息用于接口文档的生成；对webservice接口进行测试，当测试成功时得到webservice原始接口响应的接口报文；解析所述接口报文，获取字段信息；完成配置，进行服务发布；其中，服务包括接口文档和权限信息。在一个实施例中，本申请提供的webservice接口的调用方法可以实现为一种计算机程序的形式，计算机程序可在如图4所示的计算机设备上运行。一些实施例中，所述计算机程序被所述处理器执行时，使得所述处理器执行以下步骤：在浏览器地址中输入代理后的webservice接口地址，已经响应的业务参数、平台参数；其中，所述业务参数通过请求报文转换后的地址参数，平台参数用于用户接口鉴权；校验平台参数，校验通过则进行下一步骤，否则返回错误信息到调用端；校验接口方法权限，校验通过则进行下一步骤，否则返回错误信息到调用端；校验是否为地址参数，如果不是，则需要则要验证报文信息，如果当前是get请求，不存在报文信息，确定为地址参数，否则报错；通过请求参数校验地址参数是否完善，通过走下一步骤，否则返回错误信息到调用端；将地址参数替换配置中的请求报文中参数，封装好原始的webservice需要的请求报文，调用webservice原始接口地址，请求报文为刚封装好的请求报文；调用后，获取到响应报文；根据配置情况，对字段权限进行处理，根据不同的使用者角色返回不同的数据；返回数据到调用端。本申请还提供一种计算机存储介质，计算机的存储介质的例子包括，但不限于相变内存、静态随机存取存储器、动态随机存取存储器、其他类型的随机存取存储器、只读存储器、电可擦除可编程只读存储器、快闪记忆体或其他内存技术、只读光盘只读存储器、数字多功能光光盘或其他光学存储、磁盒式磁带存储或其他磁性存储设备或任何其他非传输介质，可用于存储可以被计算设备访问的信息。一些实施例中，本发明还提出了一种计算机可读存储介质，存储有计算机程序，所述计算机程序被处理器执行时，获取webservice原始接口地址；对所述webservice原始接口地址进行数据重新配置，得到webservice接口地址；对所述webservice接口地址进行解析，得到接口方法及对应的请求报文；判断是否需要将所述请求报文中的参数信息转换为地址参数，如果需要，则解析所述请求报文，并将所述参数信息配置到请求参数列表中；其中，所述参数信息用于接口文档的生成；对webservice接口进行测试，当测试成功时得到webservice原始接口响应的接口报文；解析所述接口报文，获取字段信息；完成配置，进行服务发布；其中，服务包括接口文档和权限信息。一些实施例中，本发明还提出了一种计算机可读存储介质，存储有计算机程序，所述计算机程序被处理器执行时，使得所述处理器执行如下步骤：在浏览器地址中输入代理后的webservice接口地址，已经响应的业务参数、平台参数；其中，所述业务参数通过请求报文转换后的地址参数，平台参数用于用户接口鉴权；校验平台参数，校验通过则进行下一步骤，否则返回错误信息到调用端；校验接口方法权限，校验通过则进行下一步骤，否则返回错误信息到调用端；校验是否为地址参数，如果不是，则需要则要验证报文信息，如果当前是get请求，不存在报文信息，确定为地址参数，否则报错；通过请求参数校验地址参数是否完善，通过走下一步骤，否则返回错误信息到调用端；将地址参数替换配置中的请求报文中参数，封装好原始的webservice需要的请求报文，调用webservice原始接口地址，请求报文为刚封装好的请求报文；调用后，获取到响应报文；根据配置情况，对字段权限进行处理，根据不同的使用者角色返回不同的数据；返回数据到调用端。综上所述，本发明提供一种webservice接口的配置、调用方法、计算机设备及存储程序，通过本申请提供的技术方案能够通过数据服务平台一体化解决webservice使用复杂性问题、安全问题、接口文档管理问题。复杂性问题包含原始webservice接口需要生成客户端代码或者需要借助第三方工具生成接口报文；通过转为地址参数形式，方便接口的调用。安全问题包含接口调用安全、接口方法安全以及响应报文字段安全，细粒度包含数据安全。数据服务平台可以根据配置的基本信息、参数信息、报文信息、权限信息生成完善的接口文档，方便接口使用人员查看和使用。可以理解的是，上述提供的方法实施例与上述的装置实施例对应，相应的具体内容可以相互参考，在此不再赘述。本领域内的技术人员应明白，本申请的实施例可提供为方法、系统、或计算机程序产品。因此，本申请可采用完全硬件实施例、完全软件实施例、或结合软件和硬件方面的实施例的形式。而且，本申请可采用在一个或多个其中包含有计算机可用程序代码的计算机可用存储介质上实施的计算机程序产品的形式。本申请是参照根据本申请实施例的方法、设备、和计算机程序产品的流程图和／或方框图来描述的。应理解可由计算机程序指令实现流程图和／或方框图中的每一流程和／或方框、以及流程图和／或方框图中的流程和／或方框的结合。可提供这些计算机程序指令到通用计算机、专用计算机、嵌入式处理机或其他可编程数据处理设备的处理器以产生一个机器，使得通过计算机或其他可编程数据处理设备的处理器执行的指令产生用于实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能的装置。这些计算机程序指令也可存储在能引导计算机或其他可编程数据处理设备以特定方式工作的计算机可读存储器中，使得存储在该计算机可读存储器中的指令产生包括指令方法的制造品，该指令方法实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能。这些计算机程序指令也可装载到计算机或其他可编程数据处理设备上，使得在计算机或其他可编程设备上执行一系列操作步骤以产生计算机实现的处理，从而在计算机或其他可编程设备上执行的指令提供用于实现在流程图一个流程或多个流程和／或方框图一个方框或多个方框中指定的功能的步骤。以上所述，仅为本发明的具体实施方式，但本发明的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本发明揭露的技术范围内，可轻易想到变化或替换，都应涵盖在本发明的保护范围之内。因此，本发明的保护范围应以所述权利要求的保护范围为准。
