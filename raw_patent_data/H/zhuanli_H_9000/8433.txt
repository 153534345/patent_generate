标题title
利用五元组在同一隧道中进行多路径业务应用的方法
摘要abst
本申请涉及利用五元组在同一隧道中进行多路径业务应用的方法，通过设定若干不同路径的五元组信息；根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU；对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径；启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输。能够在隧道中建立若干应用业务的传输路径，在一个隧道中开启了多条路径，分别用于走不同应用的业务流量，不同的APP的加解密计算量可绑定在不同的CPU核上，增加了并行计算能力；增加或减少路径，不会影响现有路径上的APP绑定关系，无需对协议本身作改造，无需对APP进行改造。
权利要求书clms
1.利用五元组在同一隧道中进行多路径业务应用的方法，其特征在于，包括如下步骤：设定若干不同路径的五元组信息；根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU；对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径；启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输。2.根据权利要求1所述的利用五元组在同一隧道中进行多路径业务应用的方法，其特征在于，设定若干不同路径的五元组信息，包括：获取在隧道中预建立的路径数量；根据所述路径数量，设置若干不同路径的五元组信息；其中，在若干路径的五元组信息中，保持每条所述路径的协议、源地址和目的地址相同，源端口和目的端口不同。3.根据权利要求1所述的利用五元组在同一隧道中进行多路径业务应用的方法，其特征在于，根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU，包括：获取不同路径的五元组信息并进行解析；根据解析内容，在隧道中建立若干与每条路径的五元组信息相对应的路径并保存；根据隧道中所建立的路径数量，在隧道两端配置若干与所述路径数量相对应的CPU；其中，所述隧道两端的CPU用于处理应用在所述路径上的业务的加解密计算。4.根据权利要求3所述的利用五元组在同一隧道中进行多路径业务应用的方法，其特征在于，根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU，还包括：获取业务需求条件和/或网络环境的质量参数；根据业务需求条件和/或网络环境的质量参数，在隧道中建立对应的路径数量。5.根据权利要求1所述的利用五元组在同一隧道中进行多路径业务应用的方法，其特征在于，对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径，包括：获取不同应用的五元组信息；对每个应用的五元组信息进行一致性哈希算法计算，得到每个应用的哈希计算结果；根据每个应用的哈希计算结果，将每个应用与在隧道中所建立的路径进行匹配，为每个应用匹配对应的路径，并将所述应用与所匹配的路径进行绑定。6.根据权利要求5所述的利用五元组在同一隧道中进行多路径业务应用的方法，其特征在于，在为所述应用分配并绑定路径之后，还包括：在隧道两端为绑定的应用分别配置处理设备；隧道两端的所述处理设备分别对路径的五元组信息进行一致性哈希算法计算，以绑定与所述处理设备相对应的CPU。7.根据权利要求5所述的利用五元组在同一隧道中进行多路径业务应用的方法，其特征在于，在为所述应用分配并绑定路径时，所述应用与所述路径之间的绑定方式采用伪随机方式。8.根据权利要求1所述的利用五元组在同一隧道中进行多路径业务应用的方法，其特征在于，启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输，包括：启动所述应用，经一致性哈希计算，得到对应的哈希计算结果；根据所述应用的哈希计算结果，采用伪随机方式为所述应用绑定路径，作为所述应用的业务流量传输路径；根据所绑定的路径，选择该路径两端的CPU对所述应用的业务数据进行加解密运算，进行业务传输应用。9.实现权利要求1-8中任一项所述的利用五元组在同一隧道中进行多路径业务应用的方法的装置，其特征在于，包括：路径五元组信息设定模块，用于设定若干不同路径的五元组信息；隧道路径构建模块，用于根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU；路径绑定模块，用于对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径；业务应用模块，用于启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输。10.控制系统，其特征在于，包括：处理器；用于存储处理器可执行指令的存储器；其中，所述处理器被配置为执行所述可执行指令时实现权利要求1-8中任一项所述的利用五元组在同一隧道中进行多路径业务应用的方法。
说明书desc
技术领域本公开涉及SD-WAN隧道通信系统技术领域，尤其涉及一种利用五元组在同一隧道中进行多路径业务应用的方法、装置和控制系统。背景技术隧道技术，是SD-WAN系统的灵魂，通过将流量封装在隧道之中，实现不同内网之间的打通。而加密解密，是保护隧道安全性的关键技术，其开销主要是CPU的算力。在不使用隧道技术时，不同的APP具有不同的五元组，可以很容易被识别并区分；而使用隧道时，不同的APP都被混进同一条路径。然而由于隧道的存在，如附图1所示，其中所有业务都会被封装进一个路径并被识别成同一个业务流，操作系统会将同一个业务流的加解密任务交由同一个CPU 核去处理，无法发挥多核CPU的性能优势。发明内容为了解决上述问题，本申请提出一种利用五元组在同一隧道中进行多路径业务应用的方法、装置和控制系统。本申请一方面，提出一种利用五元组在同一隧道中进行多路径业务应用的方法，包括如下步骤：设定若干不同路径的五元组信息；根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU；对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径；启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输。作为本申请的一种可选实施方案，可选地，设定若干不同路径的五元组信息，包括：获取在隧道中预建立的路径数量；根据所述路径数量，设置若干不同路径的五元组信息；其中，在若干路径的五元组信息中，保持每条所述路径的协议、源地址和目的地址相同，源端口和目的端口不同。作为本申请的一种可选实施方案，可选地，根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU，包括：获取不同路径的五元组信息并进行解析；根据解析内容，在隧道中建立若干与每条路径的五元组信息相对应的路径并保存；根据隧道中所建立的路径数量，在隧道两端配置若干与所述路径数量相对应的CPU；其中，所述隧道两端的CPU用于处理应用在所述路径上的业务的加解密计算。作为本申请的一种可选实施方案，可选地，根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU，还包括：获取业务需求条件和/或网络环境的质量参数；根据业务需求条件和/或网络环境的质量参数，在隧道中建立对应的路径数量。作为本申请的一种可选实施方案，可选地，对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径，包括：获取不同应用的五元组信息；对每个应用的五元组信息进行一致性哈希算法计算，得到每个应用的哈希计算结果；根据每个应用的哈希计算结果，将每个应用与在隧道中所建立的路径进行匹配，为每个应用匹配对应的路径，并将所述应用与所匹配的路径进行绑定。作为本申请的一种可选实施方案，可选地，在为所述应用分配并绑定路径之后，还包括：在隧道两端为绑定的应用分别配置处理设备；隧道两端的所述处理设备分别对路径的五元组信息进行一致性哈希算法计算，以绑定与所述处理设备相对应的CPU。作为本申请的一种可选实施方案，可选地，在为所述应用分配并绑定路径时，所述应用与所述路径之间的绑定方式采用伪随机方式。作为本申请的一种可选实施方案，可选地，启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输，包括：启动所述应用，经一致性哈希计算，得到对应的哈希计算结果；根据所述应用的哈希计算结果，采用伪随机方式为所述应用绑定路径，作为所述应用的业务流量传输路径；根据所绑定的路径，选择该路径两端的CPU对所述应用的业务数据进行加解密运算，进行业务传输应用。本申请另一方面，还提供一种实现所述的利用五元组在同一隧道中进行多路径业务应用的方法的装置，包括：路径五元组信息设定模块，用于设定若干不同路径的五元组信息；隧道路径构建模块，用于根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU；路径绑定模块，用于对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径；业务应用模块，用于启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输。本申请另一方面，还提供一种控制系统，包括：处理器；用于存储处理器可执行指令的存储器；其中，所述处理器被配置为执行所述可执行指令时实现所述的利用五元组在同一隧道中进行多路径业务应用的方法。本发明的技术效果：本申请通过设定若干不同路径的五元组信息；根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU；对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径；启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输。能够在隧道中建立若干应用业务的传输路径，在一个隧道中开启了多条路径，分别用于走不同应用的业务流量，不同的APP的加解密计算量可绑定在不同的CPU核上，增加了并行计算能力；增加或减少路径，不会影响现有路径上的APP绑定关系，无需对协议本身作改造，无需对APP进行改造。根据下面参考附图对示例性实施例的详细说明，本公开的其它特征及方面将变得清楚。附图说明包含在说明书中并且构成说明书的一部分的附图与说明书一起示出了本公开的示例性实施例、特征和方面，并且用于解释本公开的原理。图1示出为隧道中仅一条路径的应用业务传输示意图；图2示出为本发明利用五元组在同一隧道中进行多路径业务应用的方法的实施流程示意图；图3示出为本发明在隧道中构建多条路径的示意图；图4示出为本发明利用五元组信息在隧道中构建多条路径的示意图；图5示出为本发明在隧道两端配置CPU进行业务加解密的隧道示意图。具体实施方式以下将参考附图详细说明本公开的各种示例性实施例、特征和方面。附图中相同的附图标记表示功能相同或相似的元件。尽管在附图中示出了实施例的各种方面，但是除非特别指出，不必按比例绘制附图。在这里专用的词“示例性”意为“用作例子、实施例或说明性”。这里作为“示例性”所说明的任何实施例不必解释为优于或好于其它实施例。另外，为了更好的说明本公开，在下文的具体实施方式中给出了众多的具体细节。本领域技术人员应当理解，没有某些具体细节，本公开同样可以实施。在一些实例中，对于本领域技术人员熟知的方法、手段、元件和电路未作详细描述，以便于凸显本公开的主旨。本申请通过在一条隧道中构建多条路径，路径数量可随时更改，利用对应用的五元组信息作一致性哈希算法以绑定路径，隧道两端的设备分别对路径的五元组信息作一致性哈希算法以绑定设备的CPU核，不同应用的加解密计算量可绑定在不同的CPU核上，增加了并行计算能力。本实施例的应用不仅仅限于APP业务流量，也可以是其他应用。本实施例以APP为例。实施例1如图2所示，本申请一方面，提出一种利用五元组在同一隧道中进行多路径业务应用的方法，包括如下步骤：S1、设定若干不同路径的五元组信息；本申请通过采用五元组的信息建立隧道路径的方式，在一条隧道中构建并存在多条路径，路径数量可随时更改。如图3所示，在一个隧道中开启了多条路径，分别用于走不同APP的流量。不同APP的五元组信息将采用哈希一致匹配的方式与不同的路径进行配对。建立不同路径，需要隧道两端的路径构建信息，路径在隧道一侧需要源地址和源端口信息，在另一侧炫耀对应的目的地址和目的端口，并基于五元组中的数据传输/通信协议构建一条路径。因此，首先需要配置若干不同路径的五元组信息，一条路径将按照该路径的五元组信息在隧道中进行创建。作为本申请的一种可选实施方案，可选地，设定若干不同路径的五元组信息，包括：获取在隧道中预建立的路径数量；根据所述路径数量，设置若干不同路径的五元组信息；其中，在若干路径的五元组信息中，保持每条所述路径的协议、源地址和目的地址相同，源端口和目的端口不同。在隧道中预建立的路径数量，将根据业务需求以及网络质量等条件进行设定，因此具体数量由上述因素或者用户自行决定。如图4所示，本实施例以三条路径为例，需要三个不同路径的五元组信息，其中，多条路径的协议、源/目的地址相同，但源/目的端口必须不同，所以五元组不同。S2、根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU；当每条路径的五元组信息配置完毕，可以利用每条路径五元组信息的协议、源地址和目的地址，源端口和目的端，在隧道两端建立一条对应的业务路径。如图4所示，该路径的一端为源地址和源端口，位于隧道的另一端为与源地址和源端口相对应的目的地址和目的端口，源端口和目的端口之间基于该路径的通信协议进行数据通信/传输。作为本申请的一种可选实施方案，可选地，根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU，包括：获取不同路径的五元组信息并进行解析；路径的五元组信息得到后，进行解析，得到各个路径的五元组信息的目的地址和目的端口，源端口和目的端口以及基于该路径的通信协议；根据解析内容，在隧道中建立若干与每条路径的五元组信息相对应的路径并保存；有多少路径，则按照各个路径的五元组信息构建对应数量的聚灵即可；根据隧道中所建立的路径数量，在隧道两端配置若干与所述路径数量相对应的CPU；应用的业务流量通信路径建立后，需要在隧道两端配置业务运算的CPU，进行业务加解密处理；其中，所述隧道两端的CPU用于处理应用在所述路径上的业务的加解密计算。如图5所示，本实施例隧道默认有三个路径，源/目IP地址及端口都如图5所示，隧道两端分别用三个CPU核处理三条路径的加解密。当APP应用选择其中一条路径进行业务应用时，隧道两端的CPU将对源端口和目的端口的设备数据分别进行业务数据运算。因此，在隧道两端的设备分别对路径的五元组信息作一致性哈希算法以绑定设备的CPU核。作为本申请的一种可选实施方案，可选地，根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU，还包括：获取业务需求条件和/或网络环境的质量参数；根据业务需求条件和/或网络环境的质量参数，在隧道中建立对应的路径数量。业务需求条件，即业务应用APP的数量，可以根据APP的数量构建对应的路径。网络环境的质量参数，可以是网络环境的质量指标比如MTP、比特率或者带宽等，若是网络质量差，则配置少量路径，但是不能为一条。具体路径的数量由用户根据业务需求或者网络环境的质量参数确定即可。S3、对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径；当隧道中的各个路径根据五元组信息构建完毕，此时应用APP即可同样利用APP的五元组信息进行路径匹配，为各个APP分配路径进行业务数据流量的传输。作为本申请的一种可选实施方案，可选地，对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径，包括：获取不同应用的五元组信息；对每个应用的五元组信息进行一致性哈希算法计算，得到每个应用的哈希计算结果；根据每个应用的哈希计算结果，将每个应用与在隧道中所建立的路径进行匹配，为每个应用匹配对应的路径，并将所述应用与所匹配的路径进行绑定。应用的五元组信息，直接通过应用配置获取即可。采用同样的哈希算法，计算应用的五元组信息的哈希值，将其和路径的哈希值进行一致比对，通过APP和路径的哈希一致算法计算，可以为APP计算并匹配合适的路径。需要注意的是，本处APP的编号与路径的编号并没有必然联系，绑定关系是伪随机的，但是绑定后不会再变化。APP与路径的绑定关系，使用APP五元组的“一致性哈希”算法实现，一般不可能让APP和路径达成完美的一比一，但当APP足够多时，会无限趋向均匀的状态即可，两者之间的哈希一致算法同在一个范围/区间即可进行配对。对APP的五元组信息作一致性哈希算法以绑定路径，为每个应用APP绑定一条路径。作为本申请的一种可选实施方案，可选地，在为所述应用分配并绑定路径之后，还包括：在隧道两端为绑定的应用分别配置处理设备；隧道两端的所述处理设备分别对路径的五元组信息进行一致性哈希算法计算，以绑定与所述处理设备相对应的CPU。APP绑定路径后，APP应用在隧道的两端需要对应配置处理该应用APP业务数据的处理设备。因此在隧道两端配置处理设备，隧道两端的设备分别对路径的五元组信息作一致性哈希算法以绑定设备的CPU核，设备和CPU之间的一致哈希运算具体参见上述描述。作为本申请的一种可选实施方案，可选地，在为所述应用分配并绑定路径时，所述应用与所述路径之间的绑定方式采用伪随机方式。APP的编号与路径的编号并没有必然联系，绑定关系是伪随机的，但是绑定后不会再变化。S4、启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输。对APP的五元组信息作一致性哈希算法以绑定路径后，可以开始APP应用数据传输，进行业务处理。作为本申请的一种可选实施方案，可选地，启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输，包括：启动所述应用，经一致性哈希计算，得到对应的哈希计算结果；根据所述应用的哈希计算结果，采用伪随机方式为所述应用绑定路径，作为所述应用的业务流量传输路径；根据所绑定的路径，选择该路径两端的CPU对所述应用的业务数据进行加解密运算，进行业务传输应用。如图5所示，其APP具体应用方案为：APP 1 启动，经一致性哈希计算，选择第1条路径，两端CPU都采用1号CPU核进行加解密运算；APP 2 启动，经一致性哈希计算，选择第2条路径，两端CPU都采用2号CPU核进行加解密运算；APP 3 启动，经一致性哈希计算，选择第3条路径，两端CPU都采用3号CPU核进行加解密运算。加入增加新的应用APP4：APP4 启动，经一致性哈希计算，选择第2条路径，两端CPU都采用2号CPU核进行加解密运算，要注意的是APP的编号与路径的编号并没有必然联系，绑定关系是伪随机的，但是绑定后不会再变化；新增一条路径，编号路径4，之后新的APP会在路径1-4中伪随机分配；删除路径2，之后新的APP会在路径1、3、4中伪随机分配。因此，本申请使得不同的APP的加解密计算量可绑定在不同的CPU核上，增加了并行计算能力；增加或减少路径，不会影响现有路径上的APP绑定关系；无需对协议本身作改造，无需对APP进行改造。需要说明的是，尽管以3条路径作为示例介绍了如上隧道通信，但本领域技术人员能够理解，本公开应不限于此。事实上，用户完全可根据实际应用场景灵活设定路径数量，只要可以按照上述技术方法实现本申请的技术功能即可。显然，本领域的技术人员应该明白，实现上述实施例方法中的全部或部分流程，是可以通过计算机程序来指令相关的硬件来完成的，程序可存储于一计算机可读取存储介质中，该程序在执行时，可包括如上述各控制方法的实施例的流程。本领域技术人员可以理解，实现上述实施例方法中的全部或部分流程，是可以通过计算机程序来指令相关的硬件来完成的，程序可存储于一计算机可读取存储介质中，该程序在执行时，可包括如上述各控制方法的实施例的流程。其中，存储介质可为磁碟、光盘、只读存储记忆体、随机存储记忆体、快闪存储器、硬盘或固态硬盘（Solid-StateDrive，SSD)等；存储介质还可以包括上述种类的存储器的组合。实施例2基于实施例1的实施原理，本申请另一方面，还提供一种实现所述的利用五元组在同一隧道中进行多路径业务应用的方法的装置，包括：路径五元组信息设定模块，用于设定若干不同路径的五元组信息；隧道路径构建模块，用于根据不同路径的五元组信息，在隧道中建立若干与每条路径的五元组信息相对应的路径，并在隧道两端配置若干相对应的CPU；路径绑定模块，用于对应用的五元组信息作一致性哈希算法匹配计算，为所述应用分配并绑定路径；业务应用模块，用于启动所述应用，经一致性哈希计算，通过所绑定的路径进行业务流量传输。上述各个模块的功能以及交互原理具体参见实施例1的描述。上述的本发明的各模块或各步骤可以用通用的计算装置来实现，它们可以集中在单个的计算装置上，或者分布在多个计算装置所组成的网络上，可选地，它们可以用计算装置可执行的程序代码来实现，从而，可以将它们存储在存储装置中由计算装置来执行，或者将它们分别制作成各个集成电路模块，或者将它们中的多个模块或步骤制作成单个集成电路模块来实现。这样，本发明不限制于任何特定的硬件和软件结合。实施例3更进一步地，本申请另一方面，还提供一种控制系统，包括：处理器；用于存储处理器可执行指令的存储器；其中，所述处理器被配置为执行所述可执行指令时实现所述的利用五元组在同一隧道中进行多路径业务应用的方法。本公开实施例来控制系统包括处理器以及用于存储处理器可执行指令的存储器。其中，处理器被配置为执行可执行指令时实现前面任一所述的利用五元组在同一隧道中进行多路径业务应用的方法。此处，应当指出的是，处理器的个数可以为一个或多个。同时，在本公开实施例的控制系统中，还可以包括输入装置和输出装置。其中，处理器、存储器、输入装置和输出装置之间可以通过总线连接，也可以通过其他方式连接，此处不进行具体限定。存储器作为一计算机可读存储介质，可用于存储软件程序、计算机可执行程序和各种模块，如：本公开实施例的利用五元组在同一隧道中进行多路径业务应用的方法所对应的程序或模块。处理器通过运行存储在存储器中的软件程序或模块，从而执行控制系统的各种功能应用及数据处理。输入装置可用于接收输入的数字或信号。其中，信号可以为产生与设备/终端/服务器的用户设置以及功能控制有关的键信号。输出装置可以包括显示屏等显示设备。以上已经描述了本公开的各实施例，上述说明是示例性的，并非穷尽性的，并且也不限于所披露的各实施例。在不偏离所说明的各实施例的范围和精神的情况下，对于本技术领域的普通技术人员来说许多修改和变更都是显而易见的。本文中所用术语的选择，旨在最好地解释各实施例的原理、实际应用或对市场中的技术的技术改进，或者使本技术领域的其它普通技术人员能理解本文披露的各实施例。
