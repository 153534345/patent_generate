标题title
一种固件漏洞检测及数据安全治理方法和系统
摘要abst
一种固件漏洞检测及数据安全治理方法和系统，属于数据安全的技术领域。包括：将待检测的物联网设备固件进行：固件解压、提取可执行文件以及提取可执行文件的相关数据；将可执行文件通过函数漏洞库、Hash计算、反汇编机制以获取可疑漏洞函数；通过检测固件中的可疑漏洞函数是否为已知漏洞函数的同源函数，以此判断，该检测固件中是否包含相应的漏洞。发明使用自然语言处理模型提取二进制函数的语义信息，不依赖专家知识；能够进行跨架构物联网固件漏洞检测；基于已知CVE漏洞，并对CVE漏洞数据库进行管理，定时更新；对于已经检测过的固件，随着CVE漏洞数据的变化，也会再次进行检测，保证固件漏洞检测的实时性。
权利要求书clms
1.一种固件漏洞检测及数据安全治理方法，其特征在于，包括：固件解析：将待检测的物联网设备固件进行：固件解压、提取可执行文件以及提取可执行文件的相关数据；函数预筛选：将可执行文件通过函数漏洞库、Hash计算、反汇编机制以获取可疑漏洞函数；函数相似度匹配：通过检测固件中的可疑漏洞函数是否为已知漏洞函数的同源函数，以此判断，该检测固件中是否包含相应的漏洞。2.根据权利要求1所述一种固件漏洞检测及数据安全治理方法，其特征在于，所述方法的步骤固件解析的具体方法包括：利用逆向工具binwalk对所述物联网设备固件进行解压得到系统文件；在所述系统文件中，对所有文件使用file命令提取可执行文件；提取所述可执行文件的相关数据，包括：名字、架构以及版本号。3.根据权利要求1所述一种固件漏洞检测及数据安全治理方法，其特征在于，所述方法的步骤函数预筛选中，所述函数漏洞库为函数级CVE漏洞数据库；所述函数漏洞库记录漏洞函数的元数据，所述元数据包括：函数名、架构、所在文件以及CVE漏洞的基本信息；所述Hash计算用于计算可执行文件的hash值；所述反汇编机制用于获取可执行文件的函数；所述函数预筛选的具体方法包括：按照可执行文件的相关数据在所述函数漏洞库中检索文件记录，将所述可执行文件的hash值和所述文件记录中的hash值进行比较：如果hash值比较结果相同，则可执行文件包含文件记录中的漏洞函数，结束对当前函数的预筛选工作；否则，执行步骤;利用二进制代码分析工具对可执行文件进行反汇编机制，以获取可执行文件对应的函数集合：若所述函数集合中包含所述文件记录的漏洞函数，则将所述函数集合中的对应函数标记为可疑漏洞函数；否则，执行步骤；将所述可疑漏洞函数作为函数相似度匹配的输入。4.根据权利要求1所述一种固件漏洞检测及数据安全治理方法，其特征在于，在步骤中，还包括对函数漏洞库的治理方法，包括：采集公开的漏洞固件或者开源代码；对所述开源代码，利用编译工具将开源代码编译成可执行文件；对所述漏洞固件，利用逆向工具对漏洞固件进行解压，得到文件系统；然后从文件系统中找到漏洞所在的可执行文件；函数造成的；另一部分是第三方开源组件公布的漏洞，例如OpenSSl的OBJ_obj2txt函数，该漏洞函数可能会造成堆栈泄露；所述治理方法包括：采集公开的漏洞固件或者开源代码；对所述开源代码，利用编译工具将开源代码编译成可执行文件；对所述漏洞固件，利用逆向工具对漏洞固件进行解压，得到文件系统；然后从文件系统中找到漏洞所在的可执行文件；，最终输出句子中各个字词融合了全文语义信息后的向量表示；因此，所述SBFS模型能够充分提取二进制函数的语义信息；本发明使用编译器GCCv5.4针对多种架构编译了开源软件源码，并用反汇编机制提取其二进制函数，并通过上述提到的汇编代码预处理将二进制函数转换成自然语言文本，即函数文本，其数据如图7所示；对所述SBFS模型进行训练：选用MIPS架构下的二进制函数代码作为训练集和评估集，其他架构的数据作为测试集来验证所述SBFS模型跨架构的性能；所述其他架构是指x86,arm等，如图7所示；给定一个二进制函数文本，采用BERT的语言掩码模型MLM，在训练过程中，以15%的概率将二进制函数文本的VEX IR指令替换成，以迫使BERT自然语言模型依赖上下文信息去预测VEX IR指令，使VEX IR指令的嵌入向量更加准确地表达被替换成的指令的语义信息；然后将BERT自然语言模型输出的函数文本中的所有VEX IR指令的嵌入式向量的平均值作为二进制函数文本的嵌入向量。一种实现上述方法的系统，其特征在于，包括：固件解析模块、函数预筛选模块、函数相似度匹配模块和数据治理模块；所述固件解析模块加载有步骤所述的方法步骤；所述函数预筛选模块加载有步骤所述的方法步骤；所述函数相似度匹配模块加载有步骤所述的方法步骤；所述数据治理模块加载有步骤中对所述函数漏洞库的治理方法。本发明还公开一种固件漏洞检测及数据安全治理系统的使用方法，其特征在于，包括：用户登陆所述系统，通过权限分别行使管理员和普通用户功能；通过管理员权限实现对固件漏洞数据管理；通过普通用户权限实现对物联网设备固件漏洞检测、对物联网设备固件漏洞信息查询。本发明的优势在于：1）发明使用自然语言处理模型提取二进制函数的语义信息，不依赖专家知识；其次，本发明能够进行跨架构物联网固件漏洞检测。2）本发明在二进制函数预处理过程中使用VEX IR，使本模型具有跨架构的通用性，不再局限于特定的架构对。3）本发明设计一套物联网固件漏洞检测系统以及固件漏洞数据治理系统，基于已知CVE漏洞，并对CVE漏洞数据库进行管理，定时更新；对于已经检测过的固件，随着CVE漏洞数据的变化，也会再次进行检测，保证固件漏洞检测的实时性。4）本发明公布检测到的固件漏洞信息、公布各种物联网设备漏洞的相关信息，以供用户使用。附图说明图1：是本发明固件漏洞检测的模块流程示意图；图2：是本发明固件漏洞检测流程示意图；图3：是本发明固件漏洞数据安全治理的示意图；图4：是本发明是二进制函数的嵌入向量的形成过程示意图；图5：是本发明相同源码被编译成不同架构下的汇编代码以及VEX IR的示意图；图6：是本发明VEX IR抽象规则及案例示意图；图7：是本发明SBFS模型的数据集的示意图；图8：是本发明BERT自然语言模型语义嵌入；图9：是本发明固件漏洞数据安全治理系统的使用示意图。具体实施方式下面结合实施例和说明书附图对本发明做详细的说明，但不限于此。实施例 1如图1、2所示，一种固件漏洞检测及数据安全治理方法，包括：固件解析：将待检测的物联网设备固件进行：固件解压、提取可执行文件以及提取可执行文件的相关数据；函数预筛选：将可执行文件通过函数漏洞库、Hash计算、反汇编机制以获取可疑漏洞函数；函数相似度匹配：通过检测固件中的可疑漏洞函数是否为已知漏洞函数的同源函数，以此判断，该检测固件中是否包含相应的漏洞。所述方法的步骤固件解析的具体方法包括：利用逆向工具binwalk对所述物联网设备固件进行解压得到系统文件；在所述系统文件中，对所有文件使用file命令提取可执行文件；提取所述可执行文件的相关数据，包括：名字、架构以及版本号。所述方法的步骤函数预筛选中，所述函数漏洞库为函数级CVE漏洞数据库；所述函数漏洞库记录漏洞函数的元数据，所述元数据包括：函数名、架构、所在文件以及CVE漏洞的基本信息；所述Hash计算用于计算可执行文件的hash值；所述反汇编机制用于获取可执行文件的函数；所述函数预筛选的具体方法包括：按照可执行文件的相关数据在所述函数漏洞库中检索文件记录，所述可执行文件的相关数据是指元数据，将所述可执行文件的hash值和所述文件记录中的hash值进行比较：如果hash值比较结果相同，则可执行文件包含文件记录中的漏洞函数，结束对当前函数的预筛选工作，但是固件中有很多二进制文件，结束对当前二进制文件的函数的预筛选工作后，再开始对下一个二进制文件进行检测；否则，执行步骤;利用二进制代码分析工具对可执行文件进行反汇编机制，以获取可执行文件对应的函数集合：若所述函数集合中包含所述文件记录的漏洞函数，则将所述函数集合中的对应函数标记为可疑漏洞函数；否则，执行步骤；所述二进制代码分析工具为angr分析工具；将所述可疑漏洞函数作为函数相似度匹配的输入。在步骤中，还包括对所述函数漏洞库的治理方法，包括：在上述函数预筛选中提到的函数级CVE漏洞数据库，其治理过程如图3所示，发明将公开的漏洞来源分成固件或者开源软件两部分，一部分是各个厂家公布的固件漏洞，例如D-Link路由器厂家公布多个设备出现相同的缓冲区漏洞，该漏洞是由htdocs/cgibin中的main函数造成的；另一部分是第三方开源组件公布的漏洞，例如OpenSSl的OBJ_obj2txt函数，该漏洞函数可能会造成堆栈泄露；所述治理方法包括：采集公开的漏洞固件或者开源代码；对所述开源代码，利用编译工具将开源代码编译成可执行文件；对所述漏洞固件，利用逆向工具对漏洞固件进行解压，得到文件系统；然后从文件系统中找到漏洞所在的可执行文件；，最终输出句子中各个字词融合了全文语义信息后的向量表示；因此，所述SBFS模型能够充分提取二进制函数的语义信息；本发明使用编译器GCCv5.4针对多种架构编译了开源软件源码，并用反汇编机制提取其二进制函数，并通过上述提到的汇编代码预处理将二进制函数转换成自然语言文本，即函数文本，其数据如图7所示，其中表1二进制函数数量统计表：表1是二进制函数数量统计表二进制文件函数openssl135514binutils135024findutils65842对所述SBFS模型进行训练：选用MIPS架构下的二进制函数代码作为训练集和评估集，其他架构的数据作为测试集来验证所述SBFS模型跨架构的性能；所述其他架构是指x86,arm等，如图7所示；给定一个二进制函数文本，采用BERT的语言掩码模型MLM，在训练过程中，以15%的概率将二进制函数文本的VEX IR指令替换成，以迫使BERT自然语言模型依赖上下文信息去预测VEX IR指令，使VEX IR指令的嵌入向量更加准确地表达被替换成的指令的语义信息；然后将BERT自然语言模型输出的函数文本中的所有VEX IR指令的嵌入式向量的平均值作为二进制函数文本的嵌入向量。针对实施例1所述一种固件漏洞检测及数据安全治理方法进行评估：对360P3-V2.0.7.54243设备中是否存在openSSL中的4个函数漏洞分别为CVE-2015-0292 、CVE-2015-1789、CVE-2014-1959、CVE-2014-3508进行了检测：首先，对360P3-V2.0.7.54243固件使用binwalk进行解压，解压命令为“binwalk -Me 360P3-V2.0.7.54243.bin ”,得到文件系统 squashfs-root；在文件系统中查找openssl所在的可执行文件，并对可执行文件进行反汇编获取函数集合；在函数集合中查找上述openSSL中的4个函数，在360P3-V2.0.7.54243固件中，本实施例1的方法成功查找到。其次，对4个函数进行上述的汇编代码预处理操作，对函数中的基本块进行了DFS重排序以及将基本块汇编代码用VEX IR表示，生成函数文本。然后，将函数文本输入到SBFS模型生成嵌入向量，本实施例1通过计算两个嵌入向量间的余弦相似度来判断360P3-V2.0.7.54243固件中是否含有上述四个漏洞：比如，本发明将360P3-V2.0.7.54243固件提取到的c2i_ASN1_OBJECT函数转换成c2_test.txt文本和数据库中已经转换好的c2i_ASN1_OBJECT函数文本分别输入到SBFS模型得到两个嵌入向量,计算c2_test_emb 和c2_bug_emb 的余弦得分为0.942。通过实验获得同源函数的相似度阈值为0.742，两个函数的余弦得分大于0.742，因此判断360P3-V2.0.7.54243中含有CVE-2014-3508漏洞。通过以上评估方法，利用实施例1所述的方法成功检测到了360P3-V2.0.7.54243固件中包含openssl的四个漏洞。实施例2一种实现如实施例1所述方法的系统，包括：固件解析模块、函数预筛选模块、函数相似度匹配模块和数据治理模块；所述固件解析模块加载有步骤所述的方法步骤；所述函数预筛选模块加载有步骤所述的方法步骤；所述函数相似度匹配模块加载有步骤所述的方法步骤；所述数据治理模块加载有步骤中对所述函数漏洞库的治理方法。实施例3如图9所示，针对实施例2所述固件漏洞检测及数据安全治理系统的使用方法，包括：用户登陆所述系统，通过权限分别行使管理员和普通用户功能；通过管理员权限实现对固件漏洞数据管理；通过普通用户权限实现对物联网设备固件漏洞检测、对物联网设备固件漏洞信息查询。具体使用步骤如下：当用户登录治理系统时，会对其身份进行认定，赋予不同的操作权限，本系统赋予admin用户最大的使用权限，即管理员权限，进而对固件漏洞数据进行管理：本发明中建立固件漏洞数据库的目的是记录各种物联网设备固件的漏洞数据，并将其展示在系统中以供用户查询使用。随着攻击手段的增加，每年CVE官方网站都会公布新的CVE漏洞，这就导致本发明也需要紧跟时事，定时检测CVE漏洞的变化。当监测到CVE漏洞数据发生变化，本发明首先会更新函数级CVE漏洞数据库，然后重新检测固件漏洞数据库中的固件，更新固件漏洞数据库。对于普通用户，本系统赋予其固件漏洞检测以及固件漏洞数据查询的权限，普通用户权限是查询各种物联网设备固件的漏洞信息，了解物联网设备的安全性能。如果普通用户想要检测自己设备的安全性能，那么便需要上传自己的固件，其次，本系统也会保留固件信息以及检测出来的固件漏洞信息，将其添加到固件漏洞数据库，使本发明的固件漏洞数据库越发庞大健全，相应的数据价值也会随之增加。
