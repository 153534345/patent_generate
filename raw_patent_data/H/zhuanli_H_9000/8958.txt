标题title
一种终端软件在线升级方法及装置
摘要abst
本发明公开了一种终端软件在线升级方法及装置，在服务端根据自身负载性能动态更新服务端并行度，在终端根据设置自身负载性能允许的终端并行度，终端在发现需要升级时，向服务端发起服务端并行度请求，获取服务端返回的服务端并行度，选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度，以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级。本发明将服务端、终端负载性能动态关联，充分利用了服务端的负载性能，提高了下载效率和稳定性。
权利要求书clms
1.一种终端软件在线升级方法，其特征在于，所述终端软件在线升级方法，应用于终端，包括：在发现需要升级时，向服务端发起服务端并行度请求，获取服务端返回的服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度；以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级。2.如权利要求1所述的终端软件在线升级方法，其特征在于，所述以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级，包括：调用服务端接口获取软件升级包配置文件，所述软件升级包配置文件包括软件升级包中各文件的文件名和大小；根据所述文件下载并行度建立每个线程对应的任务，将软件升级包中大文件进行分块、小文件进行合并，平均分配给每个任务；向服务端发起并行文件下载请求，每个线程对应的文件下载请求包括文件名、以及文件块的开始和结束索引位置，从服务端下载软件升级包完成软件升级。3.一种终端软件在线升级方法，其特征在于，所述终端软件在线升级方法，应用于服务端，包括：接收终端发起的服务端并行度请求，向所述终端返回服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，所述终端选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度，所述终端发起的并行文件下载请求以所述文件下载并行度作为并行下载的线程数。4.如权利要求3所述的终端软件在线升级方法，其特征在于，所述服务端并行度由服务端根据自身负载性能动态更新，包括：服务端维护时间区间、负载性能与服务端并行度的对应关系；服务端定时采集自身负载性能，增加或减少服务端并行度，使得更新服务端并行度后负载性能处于上限阈值的预设范围内。5.如权利要求3所述的终端软件在线升级方法，其特征在于，所述接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，包括：根据终端的调用，向终端发送软件升级包配置文件，所述软件升级包配置文件包括软件升级包中各文件的文件名和大小，以使终端根据所述文件下载并行度建立每个线程对应的任务，将软件升级包中大文件进行分块、小文件进行合并，平均分配给每个任务；接收终端发起的并行文件下载请求，根据所述文件下载请求中携带的文件名、以及文件块的开始和结束索引位置，向终端下发文件完成终端软件升级。6.如权利要求3所述的终端软件在线升级方法，其特征在于，所述接收终端发起的并行文件下载请求之后，还包括：查询缓存中是否存在文件下载请求对应的文件，如果存在，则增加所述文件的优先级，更新请求时间为当前时间，否则将所述文件写入缓存，并将所述文件的优先级置为初始值，更新请求时间为当前时间；所述向终端下发文件完成终端软件升级，包括：将缓存中文件下载请求对应的文件下发给终端完成终端软件升级。7.如权利要求6所述的终端软件在线升级方法，其特征在于，所述终端软件在线升级方法，还包括：服务端定时监控文件版本发布信息，如果存在新发布的文件，则检查缓存中是否存在所述文件的历史版本，如果存在，则采用新发布的文件替换缓存中的历史版本，并继承文件的优先级。8.如权利要求6所述的终端软件在线升级方法，其特征在于，所述终端软件在线升级方法，还包括：服务端定时监控缓存中文件对应的请求时间，若请求时间距离当前监控时间的长度大于时间阈值，则降低所述文件的优先级；获取缓存可用容量，在缓存可用容量小于容量阈值时，将优先级小于优先级阈值的文件从缓存中删除。9.一种终端软件在线升级装置，应用于终端，其特征在于，所述终端软件在线升级装置，包括：服务端并行度请求模块，用于在发现需要升级时，向服务端发起服务端并行度请求，获取服务端返回的服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；比较模块，用于选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度；升级请求模块，用于以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级。10.一种终端软件在线升级装置，应用于服务端，其特征在于，所述终端软件在线升级装置，包括：并行度反馈模块，用于接收终端发起的服务端并行度请求，向所述终端返回服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；升级响应模块，用于接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，所述终端选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度，所述终端发起的并行文件下载请求以所述文件下载并行度作为并行下载的线程数。
说明书desc
技术领域本申请属于电子设备软件升级技术领域，尤其涉及一种终端软件在线升级方法及装置。背景技术电子产品生产制造过程中需要采用测试终端对产品进行测试，测试终端在使用的过程中如果有新的软件版本时，需要从当前任意版本升级到新的版本，从而达到测试终端软件适配新产品、新功能以及缺陷修复的目的。目前测试终端软件升级方案主要是基于C/S架构，采用完整升级或部分升级等方式实现软件升级。目前软件升级的效率取决于升级包的下载时间，大多数都是通过多线程技术并行下载文件提升升级效率。然而，目前的软件升级方案在软件升级过程中文件下载并行度大多是静态定义的，未与服务端负载实时联动，存在服务端过载导致升级稳定性差或者服务性能利用率低的问题。升级效率取决于升级包中最大的文件下载线程消耗的时间，由于文件大小不一，未达到最佳效率；多线程并行下载会导致服务端负载利用率过低或过高，相应的升级效率或软件升级稳定性、可靠性无法保障。发明内容本申请的目的是提供一种终端软件在线升级方法及装置，以避免现有技术中升级效率、可靠性无法保障的问题。为了实现上述目的，本申请技术方案如下：一种终端软件在线升级方法，应用于终端，包括：在发现需要升级时，向服务端发起服务端并行度请求，获取服务端返回的服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度；以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级。进一步的，所述以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级，包括：调用服务端接口获取软件升级包配置文件，所述软件升级包配置文件包括软件升级包中各文件的文件名和大小；根据所述文件下载并行度建立每个线程对应的任务，将软件升级包中大文件进行分块、小文件进行合并，平均分配给每个任务；向服务端发起并行文件下载请求，每个线程对应的文件下载请求包括文件名、以及文件块的开始和结束索引位置，从服务端下载软件升级包完成软件升级。本申请还提出了一种终端软件在线升级方法，应用于服务端，包括：接收终端发起的服务端并行度请求，向所述终端返回服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，所述终端选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度，所述终端发起的并行文件下载请求以所述文件下载并行度作为并行下载的线程数。进一步的，所述服务端并行度由服务端根据自身负载性能动态更新，包括：服务端维护时间区间、负载性能与服务端并行度的对应关系；服务端定时采集自身负载性能，增加或减少服务端并行度，使得更新服务端并行度后负载性能处于上限阈值的预设范围内。进一步的，所述接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，包括：根据终端的调用，向终端发送软件升级包配置文件，所述软件升级包配置文件包括软件升级包中各文件的文件名和大小，以使终端根据所述文件下载并行度建立每个线程对应的任务，将软件升级包中大文件进行分块、小文件进行合并，平均分配给每个任务；接收终端发起的并行文件下载请求，根据所述文件下载请求中携带的文件名、以及文件块的开始和结束索引位置，向终端下发文件完成终端软件升级。进一步的，所述接收终端发起的并行文件下载请求之后，还包括：查询缓存中是否存在文件下载请求对应的文件，如果存在，则增加所述文件的优先级，更新请求时间为当前时间，否则将所述文件写入缓存，并将所述文件的优先级置为初始值，更新请求时间为当前时间；所述向终端下发文件完成终端软件升级，包括：将缓存中文件下载请求对应的文件下发给终端完成终端软件升级。进一步的，所述终端软件在线升级方法，还包括：服务端定时监控文件版本发布信息，如果存在新发布的文件，则检查缓存中是否存在所述文件的历史版本，如果存在，则采用新发布的文件替换缓存中的历史版本，并继承文件的优先级。进一步的，所述终端软件在线升级方法，还包括：服务端定时监控缓存中文件对应的请求时间，若请求时间距离当前监控时间的长度大于时间阈值，则降低所述文件的优先级；获取缓存可用容量，在缓存可用容量小于容量阈值时，将优先级小于优先级阈值的文件从缓存中删除。本申请还提出了一种终端软件在线升级装置，应用于终端，所述终端软件在线升级装置，包括：服务端并行度请求模块，用于在发现需要升级时，向服务端发起服务端并行度请求，获取服务端返回的服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；比较模块，用于选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度；升级请求模块，用于以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级。本申请还提出了一种终端软件在线升级装置，应用于服务端，所述终端软件在线升级装置，包括：并行度反馈模块，用于接收终端发起的服务端并行度请求，向所述终端返回服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；升级响应模块，用于接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，所述终端选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度，所述终端发起的并行文件下载请求以所述文件下载并行度作为并行下载的线程数。本申请提出的一种终端软件在线升级方法及装置，在服务端根据自身负载性能动态更新服务端并行度，在终端根据设置自身负载性能允许的终端并行度，终端选择两者之中的较小者作为文件下载并行度，向服务端发起并行文件下载请求，完成软件升级。本发明将服务端、终端负载性能动态关联，充分利用了服务端的负载性能，提高了下载效率和稳定性。附图说明图1为本申请一种实施例终端软件在线升级方法流程图；图2为本申请另一种实施例终端软件在线升级方法流程图；图3为本申请一种实施例终端软件在线升级装置结构示意图；图4为本申请另一种实施例终端软件在线升级装置结构示意图。具体实施方式为了使本申请的目的、技术方案及优点更加清楚明白，以下结合附图及实施例，对本申请进行进一步详细说明。应当理解，此处描述的具体实施例仅用以解释本申请，并不用于限定本申请。目前电子产品的生产过程中，需要采用测试终端对生产的产品进行测试。由于产品的更新换代，相应的测试终端软件也需要经常的升级。测试终端软件升级，通常需要设置一个服务端，测试终端与服务端进行连接，来下载软件升级包，实现测试终端的软件升级。然而，目前的软件升级方案在软件升级过程中文件下载并行度大多是静态定义的，未与服务端负载实时联动，并且升级效率取决升级包中最大的文件下载线程消耗的时间，未达到最佳效率，从而导致多线程并行下载会导致服务端负载利用率过低或过高，相应的升级效率或软件升级稳定性、可靠性无法保障。本申请提供的一种终端软件在线升级方法及装置，将终端负载与服务端负载联动，最大化并行下载的线程数量。并且为每个下载线程平均分配下载的文件大小，提高下载的效率。在一个实施例中，如图1所示，提供了一种终端软件在线升级方法，应用于终端，包括：步骤S110、在发现需要升级时，向服务端发起服务端并行度请求，获取服务端返回的服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新。本申请终端软件在线升级方法，以电子产品的生产过程的测试终端软件升级为例进行说明，对于任何终端与服务端进行软件升级的方式均适用，以下不再赘述。当有测试终端软件新版本发布，测试终端操作人员可以主动发起软件升级。也可以由测试终端启动后，主动向服务端查询是否有新版本需要升级。在确定需要进行软件升级时，测试终端先向服务端发送请求，请求获取服务端负载性能能够支持的服务端并行度，也即服务端负载性能能够支持的最大并行下载请求数。从而从服务端获取到服务端并行度。需要说明的是，服务端并行度由服务端根据自身负载性能动态更新，关于服务端对服务端并行度进行动态更新，将在下文中进行详细的阐述。步骤S120、选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度。本实施例中，测试终端也设置有终端并行度，该终端并行度的数值由测试终端的负载性能决定，负载性能可以是测试终端CPU/处理器的处理速度，或者是CPU/处理器的占用率，其决定了测试终端可以并行发起多少线程来进行文件下载。在设置终端并行度时，根据以往的升级经验或经过试验测试，就可以确定所需要设置的终端并行度，这里不再赘述。在测试终端获知服务端并行度后，与终端并行度进行比较，以两者之中较小者作为文件下载并行度。这样即可以充分利用测试终端自身的性能，又可以充分利用服务端设备的性能，实现了测试终端与服务端负载联动，克服了现有技术中静态定义文件下载并行度的弊端。步骤S130、以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级。本实施例测试终端开启文件下载并行度对应数量的线程，例如文件下载并行度为6，则开启6线程，并行向服务端发起文件下载请求，一线程对应一个文件下载请求，同时发起6路文件下载请求。服务端在接收到文件下载请求后，下发文件。测试终端接收到下发的文件后，进行软件升级，完成软件升级的过程。在上述实施例的基础上，进行进一步的拓展。其中，所述以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级，包括：调用服务端接口获取软件升级包配置文件，所述软件升级包配置文件包括软件升级包中各文件的文件名和大小；根据所述文件下载并行度建立每个线程对应的任务，将软件升级包中大文件进行分块、小文件进行合并，平均分配给每个任务；向服务端发起并行文件下载请求，每个线程对应的文件下载请求包括文件名、以及文件块的开始和结束索引位置，从服务端下载软件升级包完成软件升级。具体的，服务端配置有软件升级包对应的配置文件，该配置文件包括软件升级包中各文件的文件名和大小。测试终端可以调用服务端接口获取软件升级包配置文件，从而得知软件升级包中各文件的文件名和大小。设置一个文件大小阈值，将大于该阈值的文件成为大文件，否则称为小文件。对大文件进行分块处理，得到多个文件块，对小文件进行合并处理，使得几个文件块的大小与小文件合并后的文件大小相同，或者相差在设定的范围内。从而可以将文件块或小文件合并后的文件，平均分配给每个线程对应的任务。本实施例这样分配可以使得每个下载线程下载的文件大小差不多，从而在差不多的时间内同时完成各个线程的文件下载，不会因为某个文件太大导致整体下载时间过长，提高了下载效率。关于大文件的分块处理，可以将一个大文件按照其大小分为几个文件块，每个文件块的开始和结束索引位置由分块的数量决定。假设一个大文件的长度是30，将其分为三个文件块，则第一个文件块的开始索引位置为0，结束索引位置为10；第二个文件块的开始索引位置为11，结束索引位置为20；第三个文件块的开始索引位置为21，结束索引位置为30。每个线程对应的文件下载请求中携带需要下载的文件名以及文件块的开始和结束索引位置，从而使得服务端可以根据文件下载请求，下发对应的文件，这里不再赘述。在另一个实施例中，如图2所示，提供了一种终端软件在线升级方法，应用于服务端，包括：步骤S210、接收终端发起的服务端并行度请求，向所述终端返回服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新。本实施例中，作为服务端，其接收测试终端发起的服务端并行度请求，将服务端并行度返回给测试终端。在一个优选的示例中，所述服务端并行度由服务端根据自身负载性能动态更新，包括：服务端维护时间区间、负载性能与服务端并行度的对应关系；服务端定时采集自身负载性能，增加或减少服务端并行度，使得更新服务端并行度后负载性能处于上限阈值的预设范围内。具体的，服务端负载性能决定了服务端并行度的大小，负载性能可以以CPU/处理器的处理速度，或者是CPU/处理器的占用率来衡量。在长期的生产过程中，建立时间区间、负载性能与服务端并行度的对应关系，并长期维护，如下表所示：时间区间负载性能服务端并行度8：00-9：0060％1009：00-10：0070％80………表1服务端定时采集自身负载性能，以CPU占用率为例，当CPU占用率过高时，例如超过CPU占用率上限阈值5％，则降低服务端并行度，否则增加服务端并行度。经过这样的调整，会使得时间区间、负载性能与服务端并行度的对应关系维持在一个最能充分发挥服务端负载性能的区间，保证了在并行下载时，不超过服务端的负载性能，又达到了最大的并行下载数。由于测试终端软件升级动作存在一定的规律，例如时间上比较集中，本申请维护时间区间、负载性能与服务端并行度的对应关系，可以为每个时间区间都设置好最佳的服务端并行度，提高下载效率。本实施例是本申请测试终端软件在线升级方法在服务端的具体应用，在服务端根据自身负载性能动态更新服务端并行度，在测试终端根据设置自身负载性能允许的终端并行度，测试终端选择两者之中的较小者作为文件下载并行度，实现将服务端、测试终端负载性能动态关联，充分利用了服务端的负载性能，避免在客户端并行访问大幅增加、其他应用消耗CPU负载增大，存在服务端过载的可能，提高了下载效率和稳定性。步骤S220、接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，所述终端选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度，所述终端发起的并行文件下载请求以所述文件下载并行度作为并行下载的线程数。本实施例测试终端开启文件下载并行度对应数量的线程，例如文件下载并行度为6，则开启6线程，并行向服务端发起文件下载请求，一线程对应一个文件下载请求，同时发起6路文件下载请求。同样的，测试终端也设置有终端并行度，该终端并行度的数值由测试终端的负载性能决定，负载性能可以是测试终端CPU/处理器的处理速度，或者是CPU/处理器的占用率，其决定了测试终端可以并行发起多少线程来进行文件下载。在设置终端并行度时，根据以往的升级经验或经过试验测试，就可以确定所需要设置的终端并行度，这里不再赘述。在测试终端获知服务端并行度后，与终端并行度进行比较，以两者之中较小者作为文件下载并行度。这样即可以充分利用测试终端自身的性能，又可以充分利用服务端设备的性能，实现了测试终端与服务端负载联动，克服了现有技术中静态定义文件下载并行度的弊端。服务端在接收到文件下载请求后，下发文件。测试终端接收到下发的文件后，进行软件升级，完成软件升级的过程。在一个具体的示例中，所述接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，包括：根据终端的调用，向终端发送软件升级包配置文件，所述软件升级包配置文件包括软件升级包中各文件的文件名和大小，以使终端根据所述文件下载并行度建立每个线程对应的任务，将软件升级包中大文件进行分块、小文件进行合并，平均分配给每个任务；接收终端发起的并行文件下载请求，根据所述文件下载请求中携带的文件名、以及文件块的开始和结束索引位置，向终端下发文件完成终端软件升级。关于终端平均分配文件给每个任务，在前面的实施例中已经进行详细的阐述，这里不再赘述。本实施例平均分配每个线程对应的下载文件，可以使得每个下载线程下载的文件大小差不多，从而在差不多的时间内同时完成各个线程的文件下载，不会因为某个文件太大导致整体下载时间过长，提高了下载效率。在实际的生产过程中，同类型生产线期望的软件版本基本一致，因此服务端将经常被下载的软件设置为高优先级，并放入缓存，在测试终端请求下载时，直接从缓存中下发文件，达到缓存的高效、可靠利用，加快了下载速度。在一个具体的示例中，所述接收终端发起的并行文件下载请求之后，还包括：查询缓存中是否存在文件下载请求对应的文件，如果存在，则增加所述文件的优先级，更新请求时间为当前时间，否则将所述文件写入缓存，并将所述文件的优先级置为初始值，更新请求时间为当前时间；所述向终端下发文件完成终端软件升级，包括：将缓存中文件下载请求对应的文件下发给终端完成终端软件升级。本示例中，每次接收到测试终端的文件下载请求，服务端就先在缓存中查询是否已经存在对应的文件，如果已经在缓存中，则增加该文件对应的优先级。例如将优先级的数值加一，或提高优先级的等级。并更新该文件的请求时间为当前时间。如果缓存中没有该文件，则将该文件写入缓存中，将该文件的优先级置为初始值，将请求时间设置为当前时间。然后将缓存中文件下载请求对应的文件下发给测试终端完成测试终端软件升级。通过本示例，更新了缓存中的文件，以及文件的优先级和请求时间，使得常用的文件优先级较高并处于缓存中，便于测试终端的下载，加快服务端的响应时间。在另一个示例中，所述终端软件在线升级方法，还包括：服务端定时监控文件版本发布信息，如果存在新发布的文件，则检查缓存中是否存在所述文件的历史版本，如果存在，则采用新发布的文件替换缓存中的历史版本，并继承文件的优先级。在本示例中，如果文件新版本发布，则检查缓存中是否存在所述文件的历史版本，如果存在，则采用新发布的文件替换缓存中的历史版本，并继承文件的优先级。新版本文件放入缓存后，其优先级与历史版本的文件的优先级一致。从而确保新版本文件发布后，如果缓存中存在该文件的历史版本，则进行替换，并继承优先级，便于后续的文件下载。在另一个示例中，所述终端软件在线升级方法，还包括：服务端定时监控缓存中文件对应的请求时间，若请求时间距离当前监控时间的长度大于时间阈值，则降低所述文件的优先级；获取缓存可用容量，在缓存可用容量小于容量阈值时，将优先级小于优先级阈值的文件从缓存中删除。在本示例中，通过监控文件对应的请求时间，如果该文件请求时间距离当前监控时间的长度大于时间阈值，则认为该文件已经好久未被请求下载，从而降低其优先级。进一步的，监控缓存可用容量，当缓存中可用容量较小时，则将较低优先级的文件从缓存中删除，释放缓存。此时，认为较低优先级的文件不常被请求下载，将其删除以释放缓存。从而确保缓存的容量，并保留高优先级的文件继续在缓存中。通过本示例的方法，提高了缓存的利用价值，也保证了高优先级的文件仍然便于请求下载。本申请的另一个实施例，如图3所示，还提供了一种终端软件在线升级装置，应用于终端，包括：服务端并行度请求模块，用于在发现需要升级时，向服务端发起服务端并行度请求，获取服务端返回的服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；比较模块，用于选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度；升级请求模块，用于以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级。在一个具体的示例中，所述升级请求模块以所述文件下载并行度作为并行下载的线程数，启动线程向服务端发起并行文件下载请求，完成软件升级，执行如下操作：调用服务端接口获取软件升级包配置文件，所述软件升级包配置文件包括软件升级包中各文件的文件名和大小；根据所述文件下载并行度建立每个线程对应的任务，将软件升级包中大文件进行分块、小文件进行合并，平均分配给每个任务；向服务端发起并行文件下载请求，每个线程对应的文件下载请求包括文件名、以及文件块的开始和结束索引位置，从服务端下载软件升级包完成软件升级。本申请的另一个实施例，如图4所示，还提供了一种终端软件在线升级装置，应用于服务端，包括：并行度反馈模块，用于接收终端发起的服务端并行度请求，向所述终端返回服务端并行度，所述服务端并行度由服务端根据自身负载性能动态更新；升级响应模块，用于接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，所述终端选择终端自身负载性能允许的终端并行度与所述服务端并行度之中较小者，作为文件下载并行度，所述终端发起的并行文件下载请求以所述文件下载并行度作为并行下载的线程数。在一个具体的示例中，所述并行度反馈模块根据自身负载性能动态更新服务端并行度，执行如下操作：维护时间区间、负载性能与服务端并行度的对应关系；定时采集自身负载性能，增加或减少服务端并行度，使得更新服务端并行度后负载性能处于上限阈值的预设范围内。在一个具体的示例中，所述升级响应模块接收终端发起的并行文件下载请求，向终端下发文件完成终端软件升级，执行如下操作：根据终端的调用，向终端发送软件升级包配置文件，所述软件升级包配置文件包括软件升级包中各文件的文件名和大小，以使终端根据所述文件下载并行度建立每个线程对应的任务，将软件升级包中大文件进行分块、小文件进行合并，平均分配给每个任务；接收终端发起的并行文件下载请求，根据所述文件下载请求中携带的文件名、以及文件块的开始和结束索引位置，向终端下发文件完成终端软件升级。在一个具体的示例中，所述升级响应模块在接收终端发起的并行文件下载请求之后，还执行如下操作：查询缓存中是否存在文件下载请求对应的文件，如果存在，则增加所述文件的优先级，更新请求时间为当前时间，否则将所述文件写入缓存，并将所述文件的优先级置为初始值，更新请求时间为当前时间；所述向终端下发文件完成终端软件升级，包括：将缓存中文件下载请求对应的文件下发给终端完成终端软件升级。在一个具体的示例中，所述升级响应模块还执行如下操作：定时监控缓存中文件对应的请求时间，若请求时间距离当前监控时间的长度大于时间阈值，则降低所述文件的优先级；获取缓存可用容量，在缓存可用容量小于容量阈值时，将优先级小于优先级阈值的文件从缓存中删除。关于本申请一种终端软件在线升级装置的具体限定可以参见上文中对于一种终端软件在线升级方法的限定，在此不再赘述。上述终端软件在线升级装置中的各个模块可全部或部分通过软件、硬件及其组合来实现。上述各模块可以硬件形式内嵌于或独立于计算机设备中的处理器中，也可以以软件形式存储于计算机设备中的存储器中，以便于处理器调用执行以上各个模块对应的操作。存储器和处理器之间直接或间接地电性连接，以实现数据的传输或交互。例如，这些元件互相之间可以通过一条或多条通讯总线或信号线实现电性连接。存储器中存储有可在处理器上运行的计算机程序，所述处理器通过运行存储在存储器内的计算机程序，从而实现本发明实施例中的网络拓扑布局方法。其中，所述存储器可以是，但不限于，随机存取存储器，只读存储器，可编程只读存储器，可擦除只读存储器，电可擦除只读存储器等。其中，存储器用于存储程序，所述处理器在接收到执行指令后，执行所述程序。所述处理器可能是一种集成电路芯片，具有数据的处理能力。上述的处理器可以是通用处理器，包括中央处理器、网络处理器等。可以实现或者执行本发明实施例中公开的各方法、步骤及逻辑框图。通用处理器可以是微处理器或者该处理器也可以是任何常规的处理器等。以上所述实施例仅表达了本申请的几种实施方式，其描述较为具体和详细，但并不能因此而理解为对发明专利范围的限制。应当指出的是，对于本领域的普通技术人员来说，在不脱离本申请构思的前提下，还可以做出若干变形和改进，这些都属于本申请的保护范围。因此，本申请专利的保护范围应以所附权利要求为准。
