标题title
业务加速方法、装置、设备及介质
摘要abst
本发明提供一种业务加速方法、装置、设备及介质，涉及信息处理技术领域，包括在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。
权利要求书clms
1.一种业务加速方法，其特征在于，包括：在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发给外部接口的业务流量。2.根据权利要求1所述的业务加速方法，其特征在于，根据所述业务的业务类型设置对应的加速标志位，包括：在所述业务为无Target挂载到会话的业务，或所述业务为会话创建之前就开始处理的业务的情况下，在所述会话建立之前的业务流程中，通过新增接口函数Fpga_SetPkbFlag，对所述业务中的单个PKB报文设置FPGA加速标志位。3.根据权利要求2所述的业务加速方法，其特征在于，所述方法还包括：在关闭或者删除所述业务的情况下，通过第一清空标志位接口函数对已经调用过Fpga_SetPkbFlag的所有业务，按照业务ID循环进行清空。4.根据权利要求1所述的业务加速方法，其特征在于，根据所述业务的业务类型设置对应的加速标志位，包括：在所述业务为有Target挂载到会话的业务的情况下，在建立会话时，在所述业务的会话数据结构体中增加ullTargetBitFlag作为所述业务的加速标志位。5.根据权利要求4所述的业务加速方法，其特征在于，所述方法还包括：在释放所述会话的情况下，调用第二清空标志位接口函数对所述会话数据结构体中的所述加速标志位进行清除。6.一种业务加速装置，其特征在于，包括：设置模块，在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；下发模块，在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。7.一种电子设备，包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，其特征在于，所述处理器执行所述程序时实现如权利要求1至5任一项所述业务加速方法。8.一种非暂态计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序被处理器执行时实现如权利要求1至5任一项所述业务加速方法。
说明书desc
技术领域本发明涉及信息处理技术领域，尤其涉及一种业务加速方法、装置、设备及介质。背景技术当前，传统防火墙的网络硬件设备的CPU及网卡处理性能有限，尤其是在复杂业务处理能力上显得捉襟见肘，时常因为性能低出现丢包，导致网络拥塞或卡顿的情况，大大影响用户体验。因此，如何解决防火墙常出现的网络阻塞或延迟的缺陷是当前业界亟待解决的问题。发明内容本发明提供一种业务加速方法、装置、设备及介质，用以解决现有技术中，防火墙处理复杂业务时性能低的缺陷，实现对不同业务进行加速，提高性能。本发明提供一种业务加速方法，包括：在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。根据所述的业务加速方法，根据所述业务的业务类型设置对应的加速标志位，包括：在所述业务为无Target挂载到会话的业务，或所述业务为会话创建之前就开始处理的业务的情况下，在所述会话建立之前的业务流程中，通过新增接口函数Fpga_SetPkbFlag，对所述业务中的单个PKB报文设置FPGA加速标志位。根据所述的业务加速方法，所述方法还包括：在关闭或者删除所述业务的情况下，通过第一清空标志位接口函数对已经调用过Fpga_SetPkbFlag的所有业务，按照业务ID循环进行清空。根据所述的业务加速方法，根据所述业务的业务类型设置对应的加速标志位，包括：在所述业务为有Target挂载到会话的业务的情况下，在建立会话时，在所述业务的会话数据结构体中增加ullTargetBitFlag作为所述业务的加速标志位。根据所述的业务加速方法，所述方法还包括：在释放所述会话的情况下，调用第二清空标志位接口函数对所述会话数据结构体中的所述加速标志位进行清除。本发明还提供一种业务加速装置，包括：设置模块，在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；下发模块，在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。本发明还提供一种电子设备，包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，所述处理器执行所述程序时实现如上述任一种所述业务加速方法。本发明还提供一种非暂态计算机可读存储介质，其上存储有计算机程序，所述计算机程序被处理器执行时实现如上述任一种所述业务加速方法。本发明还提供一种计算机程序产品，包括计算机程序，所述计算机程序被处理器执行时实现如上述任一种所述业务加速方法。本发明提供的业务加速方法、装置、设备及介质，通过对不同的业务类型设置对应加速标志位，并根据对应的加速标志位判断是否下发FPGA加速流表，以FPGA流表报文的形势下发到FPGA的DDR3内存中，并更新保存在DDR3内存中的FPGA加速流表；FPGA接收到对应会话的流量，抽取其中的五元组信息，查询FPGA的DDR3内存中的流表并命中，被FPGA截断，不走常规的转发流程，而是直接转发到FPGA外部接口，避免了传统防火墙的硬件局限性，打破了原有的性能瓶颈，有效地提高了转发速度，提升了防火墙的转发性能，改善了现有技术中防火墙因性能低导致的网络阻塞或延迟等问题，大大提高了用户体验。附图说明为了更清楚地说明本发明或现有技术中的技术方案，下面将对实施例或现有技术描述中所需要使用的附图作一简单地介绍，显而易见地，下面描述中的附图是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本申请实施例描述的FPGA结构示意图；图2为本申请实施例描述的业务加速方法流程图；图3为本申请实施例提供的业务加速装置结构示意图；图4是本发明提供的电子设备的结构示意图。具体实施方式为使本发明的目的、技术方案和优点更加清楚，下面将结合本发明中的附图，对本发明中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有作出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。本申请实施例中，为了提升网络设备的转发性能，引入FPGA器件，这是专用集成电路中的一种半定制电路，是可编程的逻辑列阵，可以配合传统网卡使用，配合专门的定制程序，实现多种业务并存下整个流量加速转发功能。图1是本申请实施例的FPGA结构示意图，如图1所示，FPGA包括多个外部接口和多个内部接口，外部接口为网络设备面板物理接口，可以是10Gbps光口，其中，FPGA可以对应4个外部接口；内部接口为XL710等网卡驱动注册接口，可以是10Gbps内部接口，其中，FPGA可以对应4个内部接口，每个内部接口分别连接一个网卡。而FLASH用于保存FPGA定制逻辑程序，FPGA程序与网卡内部接口软件通过自定义特殊协议报文进行通信，该内部接口软件可以安装在终端的操作系统上。DDR3内存用于保存流表、FPGA加速流表及流量匹配结果。FPGA与网卡集成的设备，例如PCIE3.0，插入到插槽中。图2为本申请实施例描述的业务加速方法流程图，如图2所示，包括：步骤210，在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；在本申请实施例中，业务可以是指防火墙进行的安全业务，例如，建立阻塞点的业务，可以监视、过滤和检查所有进入和出去的信息；记录网络活动业务，可以提供警报功能；限制网络暴露业务，可以在内部网络周围创建保护的边界，对外网或公网隐藏内部网络的信息等。具体地，可以根据不同的业务类型，分为不可以加速的业务和可以加速的业务。具体地，不可以加速的业务为每个报文都需要检测的特殊安全业务。具体地，可以加速的业务为无任何业务功能，或不需要每个报文都检测的业务。并且，可以加速的业务还分为全流量都可以加速的业务，和部分流量可以加速的业务。具体地，全流量都可以加速的业务是指，首包安全检测完成，后续流量无需再上送到内部软件处理的业务。其中，首包指的是一个业务中防火墙第一个接收到的报文。而部分流量可以加速的业务是指，前几个或一部分报文需要上送内部软件处理，后续流量无需再上送软件处理的业务。具体地，上送到内部软件处理是指，报文经由网卡的内部接口上送到内部接口软件中的过程。在本申请实施例中，业务类型可以分为：在会话创建之前就开始处理的业务、无Target挂载到会话的业务和有Target挂载到会话的业务。具体地，会话在以下的情况中建立：FPGA通过外部接口收到报文后，根据该报文五元组信息得到流表地址，与FPGA的DDR3内存中保存的流表中的信息匹配，如果匹配成功，则可以认为查表命中由FPGA直接截断转发；如果匹配不成功，则将该报文认定为首包，将首包或前几个报文经由网卡上送到软件处理，执行常规的转发流程。上送报文经过在会话创建之前就开始处理的业务流程、无Target挂载到会话的业务流程时，通过所述封装的接口函数Fpga_SetPkbFlag，先对所述业务中的单个PKB报文设置FPGA加速标志位，然后再建立对应的会话；上送报文经过有Target挂载到会话的业务流程时，先建立对应的会话，再通过所述封装的接口函数按比特位设置在所述业务的会话数据结构体中增加ullTargetBitFlag加速标志位。其中，PKB是报文缓冲区数据结构，包括报文数据指针、报文头信息及业务处理所必须的自定义成员等。在三种业务类型常规的转发流程执行完成后，都会建立对应的会话，并且在会话确认函数中，根据PKB报文设置的FPGA加速标志位，以及会话中设置的TargetBitFlag加速标志位，来判断是否需要下发流表，需要下发流表的业务则将该会话的信息以FPGA流表报文的形势，同步到FPGA的DDR3内存保存的流表中，保存的内容包括对应的流量地址和转发地址信息。其中，转发地址信息可以包括：MAC、NAT、PASS、五元组等封装报文信息。在本申请实施例中，根据所述业务的业务类型设置对应的加速标志位，对于会话创建之前就开始处理的业务，需要在会话创建之前的业务流程里对每个PKB报文设置加速标志位；而对于无Target挂载到会话的业务，同样需要在会话创建之前的业务流程里对每个PKB报文设置加速标志位；对于有Target挂载到会话的业务，需要在建立会话时，对会话设置加速标志位，该加速标志位值为业务ID值。而对于每个报文都做检测的特殊安全业务，则不设置加速标志位。具体地，对于首包安全检测完成，后续流量无需再上送到内部软件处理的业务，在首包就可以设置加速标志位；对于前几个或一部分报文需要上送内部软件处理，后续流量无需再上送软件处理的业务，则可以累加统计延后设置加速标志位。在本申请实施例中，加速标志位是对可以加速的业务添加的标志位，检测到加速标志位时就可以进行加速流量下发。步骤220，在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。本申请实施例中，FPGA程序根据不同的业务读取对应的加速标志位。对于会话创建之前就开始处理的业务，读取单个PKB报文的加速标志位；而对于无Target挂载到会话的业务，同样读取单个PKB报文的加速标志位；对于有Target挂载到会话的业务，读取会话的加速标志位。具体地，读取到加速标志位不为0时，下发对应业务的FPGA加速流表，加速标志位为0时则不下发FPGA加速流表。具体地，如果在首包就读取到加速标志位的话，则在首包就可以下发加速流表；如果在前几个或一部分报文才读取到加速标志位的话，则在读取到加速标志位后才下发加速流表；对于一些特殊安全业务不设置加速标志位的，不下发加速流表。在本申请实施例中，在创建业务对应的会话时，读取到对应非零的加速标志位后，将读取到加速标志位的业务的会话信息，封装为FPGA流表报文，下发到FPGA的DDR3内存中，同时更新保存在DDR3内存中的FPGA加速流表，FPGA加速流表包括目标业务的流量地址，以及对应的封装转发报文的信息。其中，流表地址是FPGA的DDR3内存写入流表内容的地址，是根据报文的五元组信息通过算法得到的，所述算法可以是Hash算法，也可以是异或算法等。其中，所述流表内容是封装转发报文的信息内容。具体地，在会话确认点读取到设置有加速标志位的报文后，将会话报文头信息以FPGA流表报文的形势下发到FPGA的DDR3内存中，更新保存在DDR3内存中的FPGA加速流表，以对应会话的业务的后续流量为目标业务流量信息，FPGA接收到该会话的流量，抽取其中的五元组信息，查询FPGA的DDR3内存中的流表并命中，不需要再经过常规的转发流程，而是被FPGA截断直接转发给外部接口，提高转发速度。本申请实施例中，通过对不同的业务类型设置对应加速标志位，并根据对应的加速标志位判断是否下发FPGA加速流表，以FPGA流表报文的形势下发到FPGA的DDR3内存中，并更新保存在DDR3内存中的FPGA加速流表；FPGA接收到对应会话的流量，抽取其中的五元组信息，查询FPGA的DDR3内存中的流表并命中，被FPGA截断，不走常规的转发流程，而是直接转发到FPGA外部接口，避免了传统防火墙的硬件局限性，打破了原有的性能瓶颈，有效地提高了转发速度，提升了防火墙的转发性能，改善了现有技术中防火墙因性能低导致的网络阻塞或延迟等问题，大大提高了用户体验。可选地，根据所述的业务加速方法，根据所述业务的业务类型设置对应的加速标志位，包括：在所述业务为无Target挂载到会话的业务，或所述业务为会话创建之前就开始处理的业务的情况下，在所述会话建立之前的业务流程中，通过新增接口函数Fpga_SetPkbFlag，对所述业务中的单个PKB报文设置FPGA加速标志位。在本申请实施例中，对业务中的单个PKB报文设置FPGA加速标志位的做法是，在设置PKB加速标志位对应的两种不同业务的处理流程中，新增接口函数Fpga_SetPkbFlag，以业务ID值为数组下标，对单个PKB报文设置FPGA加速流表标志位，并同步保存到全局变量数组g_ulFpgaFuncTypePkbFlag 中。具体地，全局变量数组g_ulFpgaFuncTypePkbFlag 的默认值为0，用于查询开启业务使用，并且该全局变量数组是PKB业务枚举结构体SOP_FUNCID_MAX的最大值声明变量数组。具体地，PKB业务枚举结构体SOP_FUNCID_MAX记录了需要设置PKB加速标志位的所有业务。具体地，SOP是指业务模块，SOP_XXX_ID对应的就是业务模块的ID。本申请实施例中，通过对无Target挂载到会话的业务，以及会话创建之前就开始处理的业务，这两类业务中的每个PKB报文都设置FPGA加速标志位，方便后续根据对应的加速标志位，下发FPGA加速流表，有效提高转发效率。可选地，根据所述的业务加速方法，所述方法还包括：在关闭或者删除所述业务的情况下，通过第一清空标志位接口函数对已经调用过Fpga_SetPkbFlag的所有业务，按照业务ID循环进行清空。在本申请实施例中，第一清空标志位接口函数是指封装的清空标志位接口函数Fpga_ClearPkbFlag，该函数可以将PKB报文的加速标志位清空。在本申请实施例中，在关闭或者删除所述业务的情况下，对已经调用过Fpga_SetPkbFlag的业务，也就是PKB报文中已经设置过FPGA加速标志位的业务，调用封装的清空标志位接口函数Fpga_ClearPkbFlag，按关闭或删除的业务ID循环清空g_ulFpgaFuncTypePkbFlag全局变量的值，使该全局变量的值变为默认值0。具体地，清空业务中的加速标志位的同时，同步清空该业务创建的会话及下发到FPGA内的加速流表，让FPGA重新上送软件处理该类报文。本申请实施例中，通过第一清空标志位接口函数，将需要关闭或者删除的业务中的加速标志位清空，同时将同步清空该业务创建的会话及下发到FPGA内的加速流表，让FPGA重新上送软件处理该类报文，有效保证该业务中不再含有加速标志位，从而不影响后续业务进行。可选地，根据所述的业务加速方法，根据所述业务的业务类型设置对应的加速标志位，包括：在所述业务为有Target挂载到会话的业务的情况下，在建立会话时，在所述业务的会话数据结构体中增加ullTargetBitFlag作为所述业务的加速标志位。在本申请实施例中，对于有Target挂载到会话的业务，在建立会话时，通过SSP_SetBit函数，设置ullTargetBitFlag作为加速标志位。其中，SOP_TARGET_ID对应的是SOP业务模块中，会话挂载有Target的业务ID。本申请实施例中，通过在建立会话时，对有Target挂载到会话的业务，对其会话数据结构体中增加ullTargetBitFlag作为该业务的加速标志位，有效地对该业务的会话设置FPGA加速标志位，方便后续根据对应的加速标志位，下发FPGA加速流表，有效提高转发效率。可选地，根据所述的业务加速方法，所述方法还包括：在释放所述会话的情况下，调用第二清空标志位接口函数对所述会话数据结构体中的所述加速标志位进行清除。本申请实施例中，释放会话是指对应业务关闭时，需要将该业务的会话释放掉。本申请实施例中，第二清空标志位接口函数是指SSP_ClearBit函数，该函数可以将会话的加速标志位清空。具体地，当业务关闭，将该业务的会话释放时，调用SSP_ClearBit函数，清空该会话的加速标志位ullTargetBitFlag。具体地，将会话中的加速标志位清空地同时，清空该业务会话对应下发到FPGA内的加速流表，让FPGA重新上送软件处理该类报文。本申请实施例中，通过第二清空标志位接口函数，将需要关闭的业务的会话释放掉时，将该会话中的加速标志位清空，同时清空该业务会话对应下发到FPGA内的加速流表，让FPGA重新上送软件处理该类报文，有效保证该业务中不再含有加速标志位，从而不影响后续业务进行。可选地，本申请实施例对上述业务加速方法的查询函数进行封装。具体地，对于PKB报文，封装获取PKB报文业务加速标志接口函数Fpga_GetPkbFlag，通过Fpga_GetPkbFlag优先判断u8FpgaSyncFlag业务功能是否开启置位，如果存在PKB报文的加速标志位未设置的，则循环遍历全局变量数组g_ulFpgaFuncTypePkbFlag判断有无PKB业务开启。具体地，对于会话，封装获取会话开启Target业务加速标志位接口函数SSP_TestBit，通过SSP_TestBit循环遍历Session的ullTargetBitFlag确认挂载Target的业务功能开启置位。具体地，封装清理FPGA单个加速流表及清空所有加速流表的接口函数，是在删除业务时，需要清理会话及对应加速流表时使用。其中，全清流表函数可以在各业务第一次下发流表，或需要变更流表信息时调用，该全清加速流表函数可以让对应业务的所有流量上送内部接口软件处理一次。而对于业务的流量需要加速的，可以只清空FPGA加速流表，不清理会话。并且，清理流表期间允许收发报文，并做时钟判断，阀值时间内重复调用不再重复下发清理流表动作。可选地，本申请实施例可以打印上述业务加速方法中，已开启业务相关的值。具体地，对于已开启的业务，可以打印全局变量g_ulFpgaPkbFlag保存的PKB的加速业务对应枚举值，以及可以遍历会话的ullTargetBitFlag值，确定对应开启的加速业务ID，用于查看判断需要功能加速时FPGA流表未下发而导致的无法加速情况。图3是本申请实施例提供的业务加速装置结构示意图，包括：设置模块310，在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；下发模块320，在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。本申请实施例中，通过对不同的业务类型设置对应加速标志位，并根据对应的加速标志位判断是否下发FPGA加速流表，以FPGA流表报文的形势下发到FPGA的DDR3内存中，更新保存在DDR3内存中的FPGA加速流表，FPGA接收到该会话流量，通过抽取五元组信息查询FPGA的DDR3内存中的流表命中，被FPGA截断，不走常规的转发流程，而是直接转发到FPGA外部接口，避免了传统防火墙的硬件局限性，打破了原有的性能瓶颈，有效地提高了转发速度，提升了防火墙的转发性能，改善了现有技术中防火墙因性能低导致的网络阻塞或延迟等问题，大大提高了用户体验。图4是本发明提供的电子设备的结构示意图，如图4所示，该电子设备可以包括：处理器410、通信接口420、存储器430和通信总线440，其中，处理器410，通信接口420，存储器430通过通信总线440完成相互间的通信。处理器410可以调用存储器430中的逻辑指令，以执行业务加速方法，该方法包括：在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。此外，上述的存储器430中的逻辑指令可以通过软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读取存储介质中。基于这样的理解，本发明的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台计算机设备执行本发明各个实施例所述方法的全部或部分步骤。而前述的存储介质包括：U盘、移动硬盘、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。另一方面，本发明还提供一种计算机程序产品，所述计算机程序产品包括计算机程序，计算机程序可存储在非暂态计算机可读存储介质上，所述计算机程序被处理器执行时，计算机能够执行上述各方法所提供的业务加速方法，该方法包括：在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。又一方面，本发明还提供一种非暂态计算机可读存储介质，其上存储有计算机程序，该计算机程序被处理器执行时实现以执行上述各方法提供的业务加速方法，该方法包括：在开启不同业务的时候，根据所述业务的业务类型设置对应的加速标志位；在创建所述业务对应的会话时，根据所述业务对应的加速标志位控制所述业务的FPGA加速流表下发，其中，所述FPGA加速流表包括目标业务流量信息，所述目标业务流量信息是会被FPGA截断直接转发实现业务功能加速的业务流量。以上所描述的装置实施例仅仅是示意性的，其中所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部模块来实现本实施例方案的目的。本领域普通技术人员在不付出创造性的劳动的情况下，即可以理解并实施。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到各实施方式可借助软件加必需的通用硬件平台的方式来实现，当然也可以通过硬件。基于这样的理解，上述技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品可以存储在计算机可读存储介质中，如ROM/RAM、磁碟、光盘等，包括若干指令用以使得一台计算机设备执行各个实施例或者实施例的某些部分所述的方法。最后应说明的是：以上实施例仅用以说明本发明的技术方案，而非对其限制；尽管参照前述实施例对本发明进行了详细的说明，本领域的普通技术人员应当理解：其依然可以对前述各实施例所记载的技术方案进行修改，或者对其中部分技术特征进行等同替换；而这些修改或者替换，并不使相应技术方案的本质脱离本发明各实施例技术方案的精神和范围。
