标题title
一种用于改善高性能计算应用的数据收集方法
摘要abst
本发明公开了一种用于改善高性能计算应用的数据收集方法，涉及高性能计算领域，本发明先通过设置执行环境，通过拓扑感知的执行环境服务，用于在高性能计算中快速和敏捷的应用程序部署，通过生成树状结构，且区分代理节点与从属节点，建立高性能计算的函数性能模型，再通过遍历函数性能真实数据集，进行分段建模，实现了在高性能计算中的全覆盖建模，建立了各函数准确的性能模型，全面且精细地刻画了程序的计算行为，有效提高了模型的准确度，且提高模型准确度也提高了高性能计算的数据收集效率和准确度，配合执行环境，改善了数据收集速度慢以及收集混乱的缺点。
权利要求书clms
1.一种用于改善高性能计算应用的数据收集方法，其特征在于：该方法包括以下步骤：S1：设置执行环境；用一个分层的文件系统和进程隔离来为用户创建一个私有的执行环境，在用户登录时为其启动执行环境，当用户运行应用程序时将自动部署执行环境，执行环境包括登录节点、计算节点、共享存储器、文件系统以及拓扑感知P2P；S2：部署计算节点；执行环境设置上层和下层文件系统，上层为程序所需的文件，下层为其他文件，首先，传输当前应用程序所需的文件，然后启动应用程序，最后，传输剩余的文件，并根据文件所使用的计算节点的数量设置阈值，当文件所使用的计算节点的数量小于阈值时，通过共享存储器将应用程序及其执行环境直接部署到计算节点上；当文件所使用的计算节点的数量大于阈值时，将使用拓扑感知P2P传输将执行环境部署到计算节点；S3：部署执行环境；为每个用户创建一个孤立的进程树，当用户退出时，只需要杀死进程树的根进程，使用一个只有两个层的覆盖文件系统，节点目录用作覆盖文件系统的下层，一个空目录作为每个用户的上层叠加，在实现执行环境的自动部署时，将用户的上层同步到相应的计算节点；S3.1：点对点；设置一个代理节点的列表和每个代理节点的一个从属节点的列表，当用户运行应用程序时，将分析用户应用程序使用的节点列表，以生成拓扑感知P2P传输的树状结构，用户登录节点为树的根节点；S3.2、节点；代理节点位于树的顶部，若应用程序使用的代理节点位于某个从属节点的节点列表中，则此从属节点为此代理节点的子节点，若代理节点不在应用程序节点列表，节点处于空闲状态，此时计算从属节点的利用率，并设置利用率阈值，阈值为50%，若利用率大于50%，将此空闲的代理节点添加到P2P树中，并将所述代理节点临时设置为已分配的状态，其节点列表中的从属节点也被添加为树中此代理节点的子节点，若代理节点不是空闲的，将这些从节点调为孤立节点，最后在树的最后一层孤立节点；S3.3：传递：在登录节点上创建树结构之后，在传输文件的同时将树结构传递给下一层代理节点，然后，每个代理节点根据树状结构找到其子节点继续传输，并等待传输完成的信号；当所述代理节点接收到所有子节点的传输完成信号后，所述代理节点生成传输完成信号，并将其返回给其父节点；最后，在登录节点接收到来自第一层代理节点的确认信号后，即整个传输过程已经完成，将临时占用的代理节点设置为空闲状态；S4：快速响应；S4.1、提前启动；若应用程序的依赖的文件出现在上层，则将这些文件添加到用户的上层文件系统的紧急部分；用户的上层文件系统其余的文件的为滞后部分；当紧急部分传输完成后，直接在相应的计算节点上启动执行环境来启动应用程序；S4.2：滞后传输：传输滞后部分的文件，建立高性能计算的函数性能模型；S5：自动性能建模；S5.1：分段建模；通过遍历函数性能真实数据集C=，其中Ci=，n为数据点对的数量，以Ci作为分段点，使用信赖域反射最小二乘法分别对以及进行拟合建模，通过计算分段后的均方误差，若n-2个分段中选出的两段模型均方误差均小于阈值且均方误差最小，则此分段点作为最优分段点，以所述分段点建立的分段性能模型作为所述函数的性能模型，并将函数的性能模型应用到每个计算节点中；S5.2：循环；若n-2个分段中选出的两段模型均方误差均大于阈值，则重复进行S5.1；若n-2个分段中选出的两段模型均方误差任一段小于阈值，则进行S6；S6：数据收集：利用应用了性能模型的各个计算节点进行数据收集。2.根据权利要求1所述的一种用于改善高性能计算应用的数据收集方法，其特征在于：所述S3中，根据每个计算节点的性能来设置树宽。3.根据权利要求2所述的一种用于改善高性能计算应用的数据收集方法，其特征在于：所述用户能够自定义执行环境，同时，每个代理节点运行一个守护进程，所述守护进程只负责启动、停止和删除执行环境以及执行拓扑感知P2P传输。4.根据权利要求3所述的一种用于改善高性能计算应用的数据收集方法，其特征在于：所述P2P传输在工作时，若某节点发生故障，则在拓扑感知P2P传输树中将阻止传输；超时后，将把网络故障的传输路径报告给根节点。5.根据权利要求1所述的一种用于改善高性能计算应用的数据收集方法，其特征在于：所述S6.1中均方误差由预测值和真实值作差后，求平方和的均值得到，其计算公式如下：MSE=E2；其中，MSE为均方误差，E为求平均符号。6.根据权利要求5所述的一种用于改善高性能计算应用的数据收集方法，其特征在于：所述拓扑感知P2P包括由多个多端口的路由器构建的多层树状结构，每隔一层上的多个路由器的交换芯片端口直连；具有多个端口直连的路由器交换芯片所在层的上层具有一个路由器构成的第一路由器，其余每一层的路由器组具有n+2的路由器数，其中n为层数。7.根据权利要求1所述的一种用于改善高性能计算应用的数据收集方法，其特征在于：所述S4.2中，当需要读写文件时，首先确定文件的存在，若存在，则直接进入自然系统调用；若不存在，则文件仍在滞后部分中传输，待到传输完成后调用。8.根据权利要求1所述的一种用于改善高性能计算应用的数据收集方法，其特征在于：所述S3.2中，若利用率小于50%，则将此空闲的代理节点添加到P2P树中，并将该代理节点临时设置为未分配的状态，供随时取用。
说明书desc
技术领域本发明涉及一种用于改善高性能计算应用的数据收集方法，属于高性能计算技术领域。背景技术高性能计算指通常使用很多处理器或者某一集群中组织的几台计算机的计算系统和环境，有许多类型的HPC系统，其范围从标准计算机的大型集群，到高度专用的硬件。高性能计算系统拥有越来越多的计算资源。其服务范围逐渐扩大，用户群体日益复杂，用户需求多样化的趋势越来越突出。在中国专利申请中公开的一种用于改善高性能计算应用的性能数据收集的方法与设备，该专利中包括：源节点的性能数据比较器，用于以轮询频率从主机结构接口收集源节点的应用的性能数据；接口，用于将写回指令传送至主机结构接口，写回指令用于使得数据被写入源节点的存储器地址位置以触发唤醒模式；和频率选择器，该频率选择器用于：将轮询频率启动为针对睡眠模式的第一轮询频率；并且响应于存储器地址位置中的、标识唤醒模式的数据将轮询频率增加到第二轮询频率。该专利中涉及的高性能计算在进行文件传输的过程中，由于计算节点的不断增多，环境配置较为困难，导致部署速度慢，应用程序的启动速度慢，启动延迟较高，而且在数据收集的过程中，数据收集的效率和准确度较低。发明内容本发明要解决的技术问题是：提供一种用于改善高性能计算应用的数据收集方法，解决由于计算节点的不断增多，环境配置较为困难，导致部署速度慢，应用程序的启动速度慢，启动延迟较高，而且在数据收集的过程中，数据收集的效率和准确度较低的问题。本发明采取的技术方案为：一种用于改善高性能计算应用的数据收集方法，该方法包括以下步骤：S1：设置执行环境；用一个分层的文件系统和进程隔离来为用户创建一个私有的执行环境，在用户登录时为其启动执行环境，当用户运行应用程序时将自动部署执行环境，执行环境包括登录节点、计算节点、共享存储器、文件系统以及拓扑感知P2P；S2：部署计算节点；执行环境设置上层和下层文件系统，上层为程序所需的文件，下层为其他文件，首先，传输当前应用程序所需的文件，然后启动应用程序，最后，传输剩余的文件，并根据文件所使用的计算节点的数量设置阈值，当文件所使用的计算节点的数量小于阈值时，通过共享存储器将应用程序及其执行环境直接部署到计算节点上；当文件所使用的计算节点的数量大于阈值时，将针对特定拓扑感知P2P传输进行优化；其中，通过设置上层和下层的文件系统，实现了一个比容器更轻量级的执行环境，仅使用了两个覆盖的文件系统层来避免容器映像的空间开销，这种轻量级的设计还减少了与环境部署相关的网络传输压力；而且，通过据文件所使用的计算节点的数量设置阈值，当文件所使用的计算节点的数量小于阈值时，通过共享存储器将应用程序及其执行环境直接部署到计算节点上；当文件所使用的计算节点的数量大于阈值时，将使用拓扑感知P2P传输将执行环境部署到计算节点，合理地结合了不同尺度下不同文件传输模式的优势，提高了网络传输的效率；S3：部署执行环境；为每个用户创建一个孤立的进程树，当用户退出时，只需要杀死进程树的根进程，使用了一个只有两个层的覆盖文件系统，节点目录用作覆盖文件系统的下层，一个空目录作为每个用户的上层叠加，在实现执行环境的自动部署时，将用户的上层同步到相应的计算节点；其中，通过为每个用户创建一个孤立的进程树，并能够自动部署，少了用户在计算节点上手动配置执行环境的负担，同时实现了用户的隐私保护；当计算节点数增加时，应用程序使用的容量很小，使用共享存储有明显的优势；但是，当计算节点的数量较大时，即使传输的文件较小，也很容易导致流量拥塞，因此，共享存储具有明显的优势；S3.1：点对点；设置一个代理节点的列表和每个代理节点的一个从属节点的列表，当用户运行应用程序时，将分析用户应用程序使用的节点列表，以生成P2P传输的树状结构，用户登录节点为树的根节点；其中，计算节点分为代理节点与从属节点。S3.2、节点；代理节点位于树的顶部，若应用程序使用的代理节点位于某个从属节点的节点列表中，则此从属节点为此代理节点的子节点，若代理节点不在应用程序节点列表，节点处于空闲状态，此时计算从属节点的利用率，并设置利用率阈值，阈值为50％，若利用率大于50％，将此空闲的代理节点添加到P2P树中，并将所述代理节点临时设置为已分配的状态，其节点列表中的从属节点也被添加为树中此代理节点的子节点，若代理节点不是空闲的，将这些从节点调为孤立节点，最后在树的最后一层孤立节点；S3.3：传递：在登录节点上创建了树结构之后，在传输文件的同时将树结构传递给下一层代理节点，然后，每个代理节点根据树状结构找到其子节点继续传输，并等待传输完成的信号；当所述代理节点接收到所有子节点的传输完成信号后，所述代理节点生成传输完成信号，并将其返回给其父节点；最后，在登录代理节点接收到来自第一层代理节点的确认信号后，即整个传输过程已经完成，将临时占用的代理节点设置为空闲状态；S4：快速响应；S4.1、提前启动；若应用程序的依赖的文件出现在上层，则将这些文件添加到紧急部分；用户的上层文件系统其余的文件的为滞后部分；当紧急部分传输完成后，直接在相应的计算节点上启动执行环境来启动应用程序；S4.2：滞后传输：传输滞后部分的文件，建立高性能计算的函数性能模型；其中，通过拓扑感知的执行环境服务，用于在高性能计算中快速和敏捷的应用程序部署，通过生成树状结构，且区分代理节点与从属节点，并且为高性能计算系统中的每个用户提供了一个私有的执行环境，并实现了应用程序的快速自动部署及其执行过程；而且设计了一种基于拓扑感知的P2P方法，以减少部署时间，在本方法中，还有一个分步传输和提前启动的机制，以减少应用程序的启动延迟，与传统的基于容器的应用程序部署相比，速度更快，并能有效地降低网络负载；S5：自动性能建模；S5.1：分段建模；通过遍历函数性能真实数据集C＝，其中Ci＝，n为数据点对的数量，以Ci作为分段点，使用信赖域反射最小二乘法分别对以及进行拟合建模，通过计算分段后的均方差误，若n-2个分段中选出的两段模型均方误差均小于阈值且均方误差最小，则此分段点作为最优分段点，以所述分段点建立的分段性能模型作为所述函数的性能模型，并将函数的性能模型应用到每个计算节点中；其中，先通过设置执行环境，通过拓扑感知的执行环境服务，用于在高性能计算中快速和敏捷的应用程序部署，通过生成树状结构，且区分代理节点与从属节点，建立高性能计算的函数性能模型，再通过遍历函数性能真实数据集，进行分段建模，实现了在高性能计算中的全覆盖建模，建立了各函数准确的性能模型，全面且精细地刻画了程序的计算行为，有效提高了模型的准确度，且提高模型准确度也提高了高性能计算的数据收集效率和准确度，配合执行环境，改善了数据收集速度慢以及收集混乱的缺点；S5.2：循环；若n-2个分段中选出的两段模型均方误差均大于阈值，则重复进行S5.1；若n-2个分段中选出的两段模型均方误差任一段小于阈值，则进行S6；S6：数据收集：利用应用了性能模型的各个计算节点进行数据收集。优选地，上述S3中，根据每个计算节点的性能来设置树宽。优选地，上述用户有权自定义自己的执行环境，同时，每个节点运行一个守护进程，守护进程只负责启动、停止和删除执行环境以及执行P2P传输；其中，通过用户自定义自己的执行环境，并且设置守护进程，提高了执行环境的可靠性。优选地，上述P2P传输在工作时，若某些节点发生故障，则在P2P传输树中将阻止传输；超时后，将把网络故障的传输路径报告给根节点；其中，通过P2P传输工作，P2P传输也可以作为网络状态监测的辅助工具。优选地，上述S6.1中均方误差由预测值和真实值作差后，求平方和的均值得到，其计算公式如下：MSE＝E2；其中，MSE为均方误差，E为求平均符号；均方误差可以较好地反映预测值和真实值之间的偏差。优选地，上述拓扑感知P2P包括由多个多端口的路由器构建的多层树状结构，每隔一层上的多个路由器的交换芯片端口直连；具有多个端口直连的路由器交换芯片所在层的上层具有一个路由器构成的第一路由器，其余每一层的路由器组具有n+2的路由器数，其中n为层数；其中，通过设置第一路由器组以及多个路由器组，通过设置比层数多两个路由器的其余路由器组，更好地实现了减少在传输文件时的拓扑感知P2P的部署时间，减少应用程序的启动延迟。优选地，上述S4.2中，当需要读写文件时，首先确定文件的存在，若存在，则直接进入自然系统调用；若不存在，则文件仍在滞后部分中传输，待到传输完成后调用。优选地，上述S3.2中，若利用率小于50％，则将此空闲的代理节点添加到P2P树中，并将该代理节点临时设置为未分配的状态，供随时取用。本发明的有益效果：与现有技术相比，本发明的效果如下：1)本发明先通过设置执行环境，通过拓扑感知的执行环境服务，用于在高性能计算中快速和敏捷的应用程序部署，通过生成树状结构，且区分代理节点与从属节点，建立高性能计算的函数性能模型，再通过遍历函数性能真实数据集，进行分段建模，实现了在高性能计算中的全覆盖建模，建立了各函数准确的性能模型，全面且精细地刻画了程序的计算行为，有效提高了模型的准确度，且提高模型准确度也提高了高性能计算的数据收集效率和准确度，配合执行环境，改善了数据收集速度慢以及收集混乱的缺点；2)本发明通过设置上层和下层的文件系统，实现了一个比容器更轻量级的执行环境，仅使用了两个覆盖的文件系统层来避免容器映像的空间开销，这种轻量级的设计还减少了与环境部署相关的网络传输压力；而且，通过据文件所使用的计算节点的数量设置阈值，当文件所使用的计算节点的数量小于阈值时，通过共享存储器将应用程序及其执行环境直接部署到计算节点上；当文件所使用的计算节点的数量大于阈值时，将针对特定拓扑感知P2P传输进行优化，合理地结合了不同尺度下不同文件传输模式的优势，提高了网络传输的效率；3)本发明通过拓扑感知的执行环境服务，用于在高性能计算中快速和敏捷的应用程序部署，通过生成树状结构，且区分代理节点与从属节点，并且为高性能计算系统中的每个用户提供了一个私有的执行环境，并实现了应用程序的快速自动部署及其执行过程；而且设计了一种基于拓扑感知的P2P方法，以减少部署时间，在本方法中，还有一个分步传输和提前启动的机制，以减少应用程序的启动延迟，与传统的基于容器的应用程序部署相比，速度更快，并能有效地降低网络负载。附图说明图1为本发明用于改善高性能计算应用的数据收集方法的流程图；图2为本发明用于改善高性能计算应用的数据收集方法的执行环境框架图；图3为本发明用于改善高性能计算应用的数据收集方法的拓扑感知P2P的树状结构图；图4为本发明的执行环境传输18mb文件大小部署时间实验结果图；图5为本发明的执行环境传输336mb文件大小部署时间实验结果图；图6为本发明用于改善高性能计算应用的数据收集方法的传输方式网络负载状态。具体实施方式下面结合附图及具体的实施例对本发明进行进一步介绍。实施例1：如图1-6所示，本实施列用于改善高性能计算应用的数据收集方法，包括以下步骤；S1：设置执行环境；用一个分层的文件系统和进程隔离来为用户创建一个私有的执行环境，在用户登录时为其启动执行环境，当用户运行应用程序时将自动部署执行环境，执行环境包括登录节点、计算节点、共享存储器、文件系统以及拓扑感知P2P；S2：部署计算节点；执行环境设置上层和下层文件系统，上层为程序所需的文件，下层为其他文件，首先，传输当前应用程序所需的文件，然后启动应用程序，最后，传输剩余的文件，并根据文件所使用的计算节点的数量设置阈值，当文件所使用的计算节点的数量小于阈值时，通过共享存储器将应用程序及其执行环境直接部署到计算节点上；当文件所使用的计算节点的数量大于阈值时，将使用拓扑感知P2P传输将执行环境部署到计算节点；其中，通过设置上层和下层的文件系统，实现了一个比容器更轻量级的执行环境，仅使用了两个覆盖的文件系统层来避免容器映像的空间开销，这种轻量级的设计还减少了与环境部署相关的网络传输压力；而且，通过据文件所使用的计算节点的数量设置阈值，当文件所使用的计算节点的数量小于阈值时，通过共享存储器将应用程序及其执行环境直接部署到计算节点上；当文件所使用的计算节点的数量大于阈值时，将针对特定拓扑感知P2P传输进行优化，合理地结合了不同尺度下不同文件传输模式的优势，提高了网络传输的效率；本实施例中，进行实验，除了sbcast之外，添加了一种不知道拓扑的P2P传输方法：随机-P2P，随机P2P和具有拓扑感知能力的P2P的树形形状预计将完全相同，随机P2P和拓扑感知P2P的唯一区别是，随机P2P在树结构中的代理节点和从节点的位置是随机的；本实施例中，选择了15、120、1080、8760以及17560作为测试的集群大小，分别传输18mb以及336mb的文件；一对一、共享存储、sbcast、拓扑感知P2P、随机P2P以及本发明的方法的部署时间如下表1以及表2：表1表2其中，表1是传输18mb文件大小的传输方法所需要的部署时间，表2是传输336mb文件大小的传输方法所需要的部署时间；将上表数据制成折线图，从图4-5中看出，一对一的方法的部署时间随着计算节点数量的增加而呈线性增加，效率较低；当计算数的计算节点数超过1080个，基于共享存储的方法在计算节点数量较小时，具有较强的活力，还取决于文件的大小；但是，当计算节点的数量较小时，基于共享存储的方法比其他任何方法都更有效。对于这三种P2P方法，具有拓扑感知功能的P2P总是具有最短的部署时间，特别是随着计算节点数量的增加，具有拓扑感知的P2P方法的优势越来越明显。在TEES应用程序部署方面，当计算节点数量达到17560时，拓扑感知P2P比随机P2P快65％，比sbcast快63％。对于基于容器的部署，具有拓扑感知能力的P2P比随机化的P2P快21％，比sbcast快25％。当传输的文件大小较小时，具有拓扑感知的P2P具有更好的加速度，具有拓扑感知的P2P减少了建立连接的时间；因此，在小尺寸文件的情况下，拓扑感知的P2P具有更好的加速效果。本实施例中，对各个传输方法的网络负荷状况进行实验，即对流量进行监控，实验结果如下表3。表3从上表得知，一对一的方法和基于共享存储的方法具有相似的网络负载；这两者的区别在于，在一对一的方法中，登录节点经历了很大的网络压力；在基于共享存储的方法中，这种网络压力被转移到共享存储中。与这两种方法相比，拓扑感知的P2P方法在大规模节点情况下减少了75％的网络负载。图4中，饼状图的各个数据的顺序，分别安装下方的节点数量的顺序排列的。随机P2P和sbcast的网络负载是相似的，与这两种方法相比，拓扑感知的P2P减少了超过85％的网络负载。S3：部署执行环境；为每个用户创建一个孤立的进程树，当用户退出时，只需要杀死进程树的根进程，使用了一个只有两个层的覆盖文件系统，节点目录用作覆盖文件系统的下层，一个空目录作为每个用户的上层叠加，在实现执行环境的自动部署时，将用户的上层同步到相应的计算节点；其中，通过为每个用户创建一个孤立的进程树，并能够自动部署，少了用户在计算节点上手动配置执行环境的负担，同时实现了用户的隐私保护。当计算节点数增加时，应用程序使用的容量很小，使用共享存储有明显的优势；但是，当计算节点的数量较大时，即使传输的文件较小，也很容易导致流量拥塞，因此，共享存储具有明显的优势。S3.1：点对点；设置一个代理节点的列表和每个代理节点的一个从属节点的列表，当用户运行应用程序时，将分析用户应用程序使用的节点列表，以生成P2P传输的树状结构，用户登录节点为树的根节点；其中，计算节点分为代理节点与从属节点。S3.2、节点；代理节点位于树的顶部，若应用程序使用的代理节点位于某个从属节点的节点列表中，则此从属节点为此代理节点的子节点，若代理节点不在应用程序节点列表，节点处于空闲状态，此时计算从属节点的利用率，并设置利用率阈值，阈值为50％，若利用率大于50％，将此空闲的代理节点添加到P2P树中，并将代理节点临时设置为已分配的状态，其节点列表中的从属节点也被添加为树中此代理节点的子节点，若代理节点不是空闲的，将这些从节点调为孤立节点，最后在树的最后一层孤立节点；本实施例中，首先，将多个计算节点集成到一个节点组中。在我们的天河平台中，有8个计算节点被集成到一个节点组中。然而，8个节点中只有一个节点拥有高速网卡，并直接连接到中间拓扑结构。因此，该节点具有更好的网络性能，其他7个节点和中间拓扑之间的交互需要通过该代理节点。考虑到这种特殊的群内拓扑结构，我们设计了具有拓扑感知能力的P2P。我们维护一个代理节点的列表和一个每个代理节点的从节点的列表。当用户提交作业时，将分析用户应用程序使用的节点列表，以生成P2P传输的树状结构。用户的登录节点被视为树的根节点。S3.3：传递：在登录节点上创建了树结构之后，在传输文件的同时将树结构传递给下一层代理节点，然后，每个代理节点根据树状结构找到其子节点继续传输，并等待传输完成的信号；当代理节点接收到所有子节点的传输完成信号后，代理节点生成传输完成信号，并将其返回给其父节点；最后，在登录代理节点接收到来自第一层代理节点的确认信号后，即整个传输过程已经完成，将临时占用的代理节点设置为空闲状态；S4：快速响应；S4.1、提前启动；若应用程序的依赖的文件出现在上层，则将这些文件添加到紧急部分；用户的上层文件系统其余的文件的为滞后部分；当紧急部分传输完成后，直接在相应的计算节点上启动执行环境来启动应用程序；S4.2：滞后传输：传输滞后部分的文件，建立高性能计算的函数性能模型；其中，通过拓扑感知的执行环境服务，用于在高性能计算中快速和敏捷的应用程序部署，通过生成树状结构，且区分代理节点与从属节点，并且为高性能计算系统中的每个用户提供了一个私有的执行环境，并实现了应用程序的快速自动部署及其执行过程；而且设计了一种基于拓扑感知的P2P方法，以减少部署时间，在本方法中，还有一个分步传输和提前启动的机制，以减少应用程序的启动延迟，与传统的基于容器的应用程序部署相比，速度更快，并能有效地降低网络负载。本实施例中，当用户登录到登录节点时，登录节点上的TEES守护进程将为该用户启动一个执行环境。用户将登录到此私人执行环境中。在这种执行环境中，用户可以直接使用标准的系统环境。同时，用户有权进行任何自定义。用户可以自由地开发和调试应用程序，并配置环境。所有这些都发生在上层文件系统中。用户所做的更改不会影响真实的系统环境。当用户通过将应用程序提交到资源管理系统来运行该应用程序时，如SLURM和PBS，则为登录节点上的守护进程将执行以下功能：分析计算节点列表，选择传输方法，如果使用基于拓扑感知的P2P方法，则生成树状结构。同时，守护进程将对用户应用程序执行依赖性分析，并将上层划分为紧急部分和滞回部分。然后，紧急部分将立即部署在计算节点上。在每个节点上启动执行环境，并运行应用程序。最后，传递滞后部分。在登录节点上只需要应用程序开发和环境配置；然后，应用程序可以通过资源管理系统直接在计算节点上运行；整个部署和启动过程非常快，可以产生良好的用户体验。本实施例中，对执行环境的启动延迟时间进行检测，检测结果如下表4：表4上表中，本发明的方法为结合拓扑感知P2P和共享存储，本发明的传输方法在3秒内在17560个计算节点上实现了一个典型应用程序的部署和启动。基于容器的方法使用sbcast部署方法，其应用程序启动延迟约为30秒，比本发明方法慢20倍；在基于容器的方法中使用的具有拓扑感知的P2P方法可以减少大约25％的启动延迟。S5：自动性能建模；S5.1：分段建模；通过遍历函数性能真实数据集C＝，其中Ci＝，n为数据点对的数量，以Ci作为分段点，使用信赖域反射最小二乘法分别对以及进行拟合建模，通过计算分段后的均方差误，若n-2个分段中选出的两段模型均方误差均小于阈值且均方误差最小，则此分段点作为最优分段点，以分段点建立的分段性能模型作为函数的性能模型，并将函数的性能模型应用到每个计算节点中；其中，先通过设置执行环境，通过拓扑感知的执行环境服务，用于在高性能计算中快速和敏捷的应用程序部署，通过生成树状结构，且区分代理节点与从属节点，建立高性能计算的函数性能模型，再通过遍历函数性能真实数据集，进行分段建模，实现了在高性能计算中的全覆盖建模，建立了各函数准确的性能模型，全面且精细地刻画了程序的计算行为，有效提高了模型的准确度，且提高模型准确度也提高了高性能计算的数据收集效率和准确度，配合执行环境，改善了数据收集速度慢以及收集混乱的缺点。S5.2：循环；若n-2个分段中选出的两段模型均方误差均大于阈值，则重复进行S5.1；若n-2个分段中选出的两段模型均方误差任一段小于阈值，则进行S6；S6：数据收集：利用应用了性能模型的各个计算节点进行数据收集。优选地，S3中，根据每个计算节点的性能来设置树宽。优选地，用户有权自定义自己的执行环境，同时，每个节点运行一个守护进程，守护进程只负责启动、停止和删除执行环境以及执行P2P传输；其中，通过用户自定义自己的执行环境，并且设置守护进程，提高了执行环境的可靠性。优选地，P2P传输在工作时，若某些节点发生故障，则在P2P传输树中将阻止传输；超时后，将把网络故障的传输路径报告给根节点；其中，通过P2P传输工作，P2P传输也可以作为网络状态监测的辅助工具。优选地，S6.1中均方误差由预测值和真实值作差后，求平方和的均值得到，其计算公式如下：MSE＝E2；其中，MSE为均方误差，E为求平均符号；均方误差可以较好地反映预测值和真实值之间的偏差。优选地，拓扑感知P2P包括由多个多端口的路由器构建的多层树状结构，每隔一层上的多个路由器的交换芯片端口直连；具有多个端口直连的路由器交换芯片所在层的上层具有一个路由器构成的第一路由器，其余每一层的路由器组具有n+2的路由器数，其中n为层数；其中，通过设置第一路由器组以及多个路由器组，通过设置比层数多两个路由器的其余路由器组，更好地实现了减少在传输文件时的拓扑感知P2P的部署时间，减少应用程序的启动延迟。优选地，S4.2中，当需要读写文件时，首先确定文件的存在，若存在，则直接进入自然系统调用；若不存在，则文件仍在滞后部分中传输，待到传输完成后调用。优选地，S3.2中，若利用率小于50％，则将此空闲的代理节点添加到P2P树中，并将该代理节点临时设置为未分配的状态，供随时取用。以上所述，仅为本发明的具体实施方式，但本发明的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本发明揭露的技术范围内，可轻易想到变化或替换，都应涵盖在本发明的保护范围之内，因此，本发明的保护范围应以所述权利要求的保护范围为准。
