标题title
基于行为树的路由协议表征体系、方法、介质及通信方法
摘要abst
本发明公开了一种基于行为树的路由协议表征体系、方法、介质及通信方法，将现有路由协议内各个状态间的有限状态机转换为层次化树形结构。由于行为树具备模块化和可扩展性，随着通信协议的不断发展，当在原有协议中增添或删除状态时，相较于有限状态机，行为树改造后的协议扩展性得到增强，便于增加或删改行为子树或单个动作节点。
权利要求书clms
1.一种基于行为树的路由协议表征体系，其特征在于，路由协议内部逻辑分离解耦为控制逻辑和执行逻辑；所述控制逻辑包含协议状态单元、触发消息单元、行为树扩展单元和控制编程接口单元；所述执行逻辑包含状态机转行为树模板单元、基于模板的行为树构建单元和自上而下行为树执行单元；所述协议状态单元为协议运行过程中的不同逻辑状态的集合，其所要执行的动作作为行为树的执行动作，以实现将有限状态机的逻辑转换为基于行为树的逻辑；所述触发消息单元为逻辑状态跳转的触发消息所构成的集合，其提供行为树表征与构建过程中，动作节点被执行的触发条件；所述行为树扩展单元为对需要进行行为树表征的路由协议功能进行扩展后的功能单元，以应对在不同触发条件下路由协议的动作执行；所述控制编程接口单元用于对行为树中各个动作节点进行开发设计，以实现对行为树的路由协议表征；所述状态机转行为树模板单元为有限状态机转换行为树的模板集合，用于根据有限状态机之间跳转的不同的情况，选择与之情境匹配的模板，以实现路由协议的行为树表征；所述基于模板的行为树构建单元基于状态机转行为树模板单元中的几种不同情境，实现路由协议从有限状态机到行为树的实施构建；所述自上而下行为树执行单元用于自上而下执行构建的行为树。2.根据权利要求1所述基于行为树的路由协议表征体系，其特征在于，根据节点作用，所述行为树包括叶子节点和控制节点，所述叶子节点包括动作节点和条件节点，所述控制节点包括顺序节点、选择节点及同步节点；根据架构，所述行为树包括根节点、子节点以及叶子节点，其中子节点是除根节点之外，自身下面还连接有节点的节点；叶子节点是自身下面不再连接有节点的节点，即末端节点；所述子节点为动作节点、条件节点、顺序节点、选择节点及同步节点中的一种或几种的组合，所述行为树允许递归定义；当一棵行为树开始被执行时，其根节点以设定的频率向其子节点发送使能信号，并通过逻辑关系逐一传递给条件节点和动作节点，子节点执行完毕后向根节点反馈执行结果，分别为：SUCCESS状态，是对满足条件或者动作已经被成功执行，返回的状态；FAILURE状态，是对不满足条件或者动作执行失败，返回的状态；RUNNING状态，是对在运行中的节点动作还没有执行完毕，后续需要继续被调用使行为执行完成所返回的状态。3.根据权利要求1所述基于行为树的路由协议表征体系，其特征在于，所述动作节点用于执行某种动作行为；所述条件节点用于对节点的条件进行判断，如果条件满足，则返回真，如果条件不满足，则返回假；所述顺序节点依次从左往右或者从上往下执行根节点的所有子节点或者子树；所述选择节点从左往右或者从上往下选择一个满足条件的子节点执行，并且只有当子节点执行的返回结果成功时才会停止；所述同步节点指同时执行所有子节点，并根据返回的成功和失败的数量比确定返回成功还是失败。4.一种基于行为树的路由协议表征方法，其特征在于，包括如下步骤：S101：梳理需要进行行为树表征的路由协议内部流程，划分路由协议的控制逻辑和执行逻辑；S102：提取路由协议内部的有限状态机，明确路由协议内部的状态、触发消息的内容及类型；S103：将路由协议中的有限状态机转换为行为树，所述行为树为层次化树形结构，并利用有限状态机转行为树的模板实现基于模板的行为树构建。5.根据权利要求4所述基于行为树的路由协议表征方法，其特征在于，所述S101包括：S1011：明确需要进行行为树表征的路由协议的适用范围以及网络场景；S1012：确认路由协议内部的信息交互过程以及状态触发条件；S1013：根据路由协议内部的流程运行逻辑，将路由协议内部的状态以及触发消息类型进行控制逻辑和执行逻辑的划分；S1014：检查确认所划分协议状态单元和触发消息单元内部不存在冲突。6.根据权利要求5所述基于行为树的路由协议表征方法，其特征在于，所述适用范围以及网络场景包括要求数据信息即时性的数据传输场景以及要求安全性和实时性的视频、语音或文本交互场景；所述S1013，根据内容属性划分控制逻辑和执行逻辑，所述控制逻辑包含协议状态单元、触发消息单元、行为树扩展单元和控制编程接口单元；所述执行逻辑包含状态机转行为树模板单元、基于模板的行为树构建单元和自上而下行为树执行单元；所述S1014，当在协议状态单元和触发消息单元内部处于同一个维度，具有一定的逻辑顺序，在协议运行过程中不存在争议时，确认所划分协议状态单元和触发消息单元内部不存在冲突。7.根据权利要求4所述基于行为树的路由协议表征方法，其特征在于，所述S102包括：S1021：基于S101中梳理得到的路由协议内部的状态、触发消息的内容及类型，明确各个状态之间跳转运行顺序及流程；S1022：将协议状态单元和触发消息单元分别存储在数据库中，将路由协议内部状态流转关系用有限状态机的逻辑关系图表示；所述S103包括：S1031：根据协议的触发条件，在协议状态单元中选择根节点；S1032：考虑在不同触发条件执行不同状态的情况以及触发后状态循环执行的情况，建立有限状态机到行为树的转换模板；S1033：根据路由协议运行过程和不同阶段的触发条件，从根节点出发，结合有限状态机转行为树的模板，进行整个行为树的构建；S1034：为了适应网络场景的变化，对路由协议的内部功能进行增删或扩展，将需要扩展的协议状态以及触发消息分别添加到相应的协议状态单元数据库和触发消息单元数据库，并调用转换模板进行行为树表征构建。8.根据权利要求7所述基于行为树的路由协议表征方法，其特征在于，所述S1032，根据不同的状态机跳转情况，选择以下几种模式进行有限状态机跳转行为树：模式1：满足条件立即跳转，即无论当前节点处在任何状态中，一旦满足某动作的触发条件，立即跳转到特定的状态；模式2：同一跳转条件，不同状态间，实现不同跳转；模式3：不同条件触发不同状态跳转，对于自跳转情况，维持当前的状态；模式4：环路跳转，即始终将当前运行的节点作为最低优先级节点来处理，总是先处理除当前节点以外的其他节点。9.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质存储有计算机程序，所述计算机程序包括程序指令，所述程序指令当被处理器执行时使所述处理器执行如权利要求4-9任一项所述的方法。10.一种通信方法，利用权利要求1所述基于行为树的路由协议表征体系，其特征在于，对于一个端到端传输信号，在终端接入网络时加入加密验证，在进入到核心网之后，行为树中的节点根据路由协议传输机制，扩展服务功能，对路由路径传输的节点内容进行验证，并扩展网元节点的数据缓存能力，当传输过程中出现节点摧毁或链路中断的情况，不再从源端重新传输，而是接续传输直到数据包传输至目的端。
说明书desc
技术领域本发明属于通信路由领域，特别涉及一种基于行为树的路由协议表征体系、方法、介质及通信方法。背景技术传统协议内部状态间跳转采用有限状态机是因为在过去，协议内部的状态数量较少，有限状态机足以满足协议内部跳转的需要；但是，随着网络规模和功能的不断扩充，用户需求的增加，路由协议内部新功能、新状态的增添是势在必行。现有的路由协议内部事件状态之间的状态跳转是采用有限状态机来实现。有限状态机是最基本的计算数学模型之一，其在任意时刻都处于有限状态集合中的某一状态。当给定一个状态机，同时给定它当前状态以及输入，那么输出状态是可以明确的运算出来的。FSM中的状态转换，是单向控制转移。分层状态机的提出是为了解决在状态很多时，FSM状态间跳转不易维护的问题所提出的。在机器人复杂行为生成过程，有限状态机及其分层变体可以有效地实现。决策树是一种控制结构，其中控制器位于树的叶子处，树的每个叶子代表要执行的特定的决策、预测、结论或动作。通过对资料的调研，对行为树、有限状态机、分层状态机和决策树之间的关系有了进一步了解，下表可以清晰对比出上述四者之间的关系。随着技术的不断发展，为了从根本上解决有限状态机带来的弊端和不足，行为树技术应运而生。所有的行为树可能都可以用有限状态机来表述，但在模块化，可读性和可重用性方面，行为树均表现出更大的优势。综合以上现有技术，其主要存在的缺点如下：现有的路由协议中状态之间的状态跳转采用有限状态机来实现，有限状态机是对协议内各个状态之间的关联性和排序性有一定的要求。这种协议设计方式存在一系列的弊端与不足：首先是协议的扩展能力差，在需要对路由协议进行调整时，需要重新对路由协议中的控制状态进行设计，无法支持同一路由框架下的路由协议的控制逻辑进行重构；其次是模块化程度弱，在路由协议状态需要变化时，需要重新设计和开发软件代码，无法满足路由协议可灵活编程的需求。发明内容为了克服上述现有技术的缺点，本发明的目的在于提供一种基于行为树的路由协议表征体系、方法、介质及通信方法，以至少解决如下问题之一：1)传统路由协议功能有限，难以实现安全可靠的数据包传输的问题；2)传统路由协议无法支持新的功能或技术模块灵活扩展的问题；3)传统路由协议中有限状态机难以合理高效的转换成行为树的问题。为了实现上述目的，本发明采用的技术方案是：一种基于行为树的路由协议表征体系，路由协议内部逻辑分离解耦为控制逻辑和执行逻辑；所述控制逻辑包含协议状态单元、触发消息单元、行为树扩展单元和控制编程接口单元；所述执行逻辑包含状态机转行为树模板单元、基于模板的行为树构建单元和自上而下行为树执行单元；所述协议状态单元为协议运行过程中的不同逻辑状态的集合，其所要执行的动作作为行为树的执行动作，以实现将有限状态机的逻辑转换为基于行为树的逻辑；所述触发消息单元为逻辑状态跳转的触发消息所构成的集合，其提供行为树表征与构建过程中，动作节点被执行的触发条件；所述行为树扩展单元为对需要进行行为树表征的路由协议功能进行扩展后的功能单元，以应对在不同触发条件下路由协议的动作执行；所述控制编程接口单元用于对行为树中各个动作节点进行开发设计，以实现对行为树的路由协议表征；所述状态机转行为树模板单元为有限状态机转换行为树的模板集合，用于根据有限状态机之间跳转的不同的情况，选择与之情境匹配的模板，以实现路由协议的行为树表征所述基于模板的行为树构建单元基于状态机转行为树模板单元中的几种不同情境，实现路由协议从有限状态机到行为树的实施构建；所述自上而下行为树执行单元用于自上而下执行构建的行为树。在一个实施例中，根据节点作用，所述行为树包括叶子节点和控制节点，所述叶子节点包括动作节点和条件节点，所述控制节点包括顺序节点、选择节点及同步节点；根据架构，所述行为树包括根节点、子节点以及叶子节点，其中子节点是除根节点之外，自身下面还连接有节点的节点；叶子节点是自身下面不再连接有节点的节点，即末端节点；所述子节点为动作节点、条件节点、顺序节点、选择节点及同步节点中的一种或几种的组合，所述行为树允许递归定义；当一棵行为树开始被执行时，其根节点以设定的频率向其子节点发送使能信号，并通过逻辑关系逐一传递给条件节点和动作节点，子节点执行完毕后向根节点反馈执行结果，分别为：SUCCESS状态，是对满足条件或者行为已经被成功执行，返回的状态；FAILURE状态，是对不满足条件或者动作执行失败，返回的状态；RUNNING状态，是对在运行中的节点行为还没有执行完毕，后续需要继续被调用使行为执行完成所返回的状态。在一个实施例中，所述动作节点用于执行某种动作行为；所述条件节点用于对节点的条件进行判断，如果条件满足，则返回真，如果条件不满足，则返回假；所述顺序节点依次从左往右或者从上往下执行根节点所有子节点或者子树；所述选择节点从左往右或者从上往下选择一个满足条件的子节点执行，并且只有当子节点执行的返回结果成功时才会停止；所述同步节点指同时执行所有子节点，并根据返回的成功和失败的数量比确定返回成功还是失败。本发明还提供了一种基于行为树的路由协议表征方法，包括如下步骤：S101：梳理需要进行行为树表征的路由协议内部流程，划分路由协议的控制逻辑和执行逻辑；S102：提取路由协议内部的有限状态机，明确路由协议内部的状态、触发消息的内容及类型；S103：将路由协议中的有限状态机转换为行为树，所述行为树为层次化树形结构，并利用有限状态机转行为树的模板实现基于模板的行为树构建。在一个实施例中，所述S101包括：S1011：明确需要进行行为树表征的路由协议的适用范围以及网络场景；S1012：确认路由协议内部的信息交互过程以及状态触发条件；S1013：根据路由协议内部的流程运行逻辑，将路由协议内部的状态以及触发消息类型进行控制逻辑和执行逻辑的划分；S1014：检查确认所划分协议状态单元和触发消息单元内部不存在冲突。在一个实施例中，所述适用范围以及网络场景包括要求数据信息即时性的数据传输场景以及要求安全性和实时性的视频、语音或文本交互场景；所述S1013，根据内容属性划分控制逻辑和执行逻辑，所述控制逻辑包含协议状态单元、触发消息单元、行为树扩展单元和控制编程接口单元；所述执行逻辑包含状态机转行为树模板单元、基于模板的行为树构建单元和自上而下行为树执行单元；所述S1014，当在协议状态单元和触发消息单元内部处于同一个维度，具有一定的逻辑顺序，在协议运行过程中不存在争议时，确认所划分协议状态单元和触发消息单元内部不存在冲突。在一个实施例中，所述S102包括：S1021：基于S101中梳理得到的路由协议内部的状态、触发消息的内容及类型，明确各个状态之间跳转运行顺序及流程；S1022：将协议状态单元和触发消息单元分别存储在数据库中，将路由协议内部状态流转关系用有限状态机的逻辑关系图表示。在一个实施例中，所述S103包括：S1031：根据协议的触发条件，在协议状态单元中选择根节点；S1032：考虑在不同触发条件执行不同状态的情况以及触发后状态循环执行的情况，建立有限状态机到行为树的转换模板；S1033：根据路由协议运行过程和不同阶段的触发条件，从根节点出发，结合有限状态机转行为树的模板，进行整个行为树的构建；S1034：为了适应网络场景的变化，对路由协议的内部功能进行增删或扩展，将需要扩展的协议状态以及触发消息分别添加到相应的协议状态单元数据库和触发消息单元数据库，并调用转换模板进行行为树表征构建。在一个实施例中，所述S1032，根据不同的状态机跳转情况，选择以下几种模式进行有限状态机跳转行为树：模式1：满足条件立即跳转，即无论当前节点处在任何状态中，一旦满足某动作的触发条件，立即跳转到特定的状态；模式2：同一跳转条件，不同状态间，实现不同跳转；模式3：不同条件触发不同状态跳转，对于自跳转情况，维持当前的状态；模式4：环路跳转，即始终将当前运行的节点作为最低优先级节点来处理，总是先处理除当前节点以外的其他节点。本发明进一步提供了一种计算机可读存储介质，所述计算机可读存储介质存储有计算机程序，所述计算机程序包括程序指令，所述程序指令当被处理器执行时使所述处理器执行本发明基于行为树的路由协议表征方法。本发明还提供了一种通信方法，利用所述基于行为树的路由协议表征体系，对于一个端到端传输信号，在终端接入网络时加入加密验证，在进入到核心网之后，行为树中的节点根据路由协议传输机制，扩展服务功能，对路由路径传输的节点内容进行验证，并扩展网元节点的数据缓存能力，当传输过程中出现节点摧毁或链路中断的情况，不再从源端重新传输，而是接续传输直到数据包传输至目的端。与现有技术相比，本发明的有益效果是：由于行为树具备可扩展性，随着通信协议的不断发展，当在原有协议中增添或删除状态时，相较于有限状态机，行为树改造后的协议扩展性得到增强，便于增加或删改行为子树或单个动作节点。行为树具有模块性和可复用性，其中，最大的优势在于模块性，每个子模块都具有完整的执行语义，可以与其他模块任意组合，实现复用。同时，行为树支持增加或删改行为子树或单个动作节点，对于新增或删改知识或规则十分适用。附图说明图1是本发明基于行为树的路由协议表征体系及方法的流程框图。图2是本发明实施例的路由协议内部逻辑图。图3是本发明实施例中行为树的基本元素图。图4是本发明实施例中模式1的状态机到行为树转换模板。图5是本发明实施例中模式2的状态机到行为树转换模板。图6是本发明实施例中模式3的状态机到行为树转换模板。图7是本发明实施例中模式4的状态机到行为树转换模板。图8是本发明实施例中状态机与新增状态操作对比图。图9是本发明实施例中状态机转变为形式化树形结构图。图10是本发明实施例中行为树构建路由协议图。图11是本发明实施例中行为树合法性检验分支图。图12是本发明实施例中行为树更新子树分支图。图13是本发明实施例中行为树决策子树分支图。具体实施方式下面结合附图和实施例详细说明本发明的实施方式。本发明前述三个技术问题可具体分析如下：1)传统路由协议功能有限，难以实现安全可靠的数据包传输的问题。该问题的详细内容可描述为：在传统路由管理中，采用Best-Effort服务逻辑进行执行，在网络中出现链路带宽不足、节点的故障等情况时，会导致数据包无法安全可靠的到达目的节点。为了增加数据包传输的安全可靠性，需要对原有路由协议体系进行重新设计，为数据包的安全可靠传输提供保障。2)传统路由协议无法支持新的功能或技术模块灵活扩展的问题。该问题的详细内容可描述为：传统路由协议在通信网络中的主要功能是实现对数据包的打包、路由路径计算以及路由转发等功能；传统协议内部状态间跳转采用有限状态机，然而随着网络规模和功能的不断扩充，用户需求的增加，路由协议内部新功能、新状态的增添是势在必行。在原有路由协议中的有限状态机的传输方式是单向的控制转移，当系统状态较多情况时，状态之间转换混乱易出错，难以安全可靠的实现对新功能或技术扩展。3)传统路由协议中有限状态机难以合理高效的转换成行为树的问题。该问题的详细内容可描述为：在对传统路由协议中的有限状态机进行行为树改造时，首先要明确现有协议中具体的流程，以及梳理明确协议处理过程中所包含的有限状态机；通常有限状态机中的状态跳转包含多种不同的情况，例如：自循环状态跳转、一个触发条件引起不同状态间跳转、不同触发条件导致不同状态间跳转等。面对多种不同情况的有限状态机以及为了保证原有协议功能时效性的前提下，考虑采用基于转换模板的方式来实现有限状态机到行为树合理高效的转换。总体来看，传统路由协议功能有限，难以实现安全可靠的数据包传输。为此，本发明考虑在传统路由协议中引入新的功能模块，但原有协议体系并不支持，如果要重新增加，需要改写协议原有逻辑。由于行为树具有模块化、代码可读性和可重用性好的特性，所以引入行为树来进行改写，其优点是易于增添新的功能模块，且行为树的双向传输机制，可以快速反馈当前网元节点中各个功能模块的运行结果。如图1所示，本发明第一方面提供了一种基于行为树的路由协议表征方法，包括如下步骤：S101：详细梳理剖析需要进行行为树表征的路由协议的内部流程，将路由协议的控制逻辑和执行逻辑进行划分。S102：提取路由协议内部的有限状态机，明确路由协议内部的状态、触发消息的内容及类型。S103：将路由协议中的有限状态机转换为行为树，所述行为树为层次化树形结构，并利用有限状态机转行为树的模板实现基于模板的行为树构建。在本发明的实施例中，所述S101，其具体步骤为：S1011：明确需要进行行为树表征的路由协议的适用范围以及网络场景。其中，适用范围以及网络场景指在对路由协议进行行为树表征的过程中，具体分析在什么场景，例如：互联网数据传输场景、视频、语音或文本交互场景等，针对不同的场景和应用范围，在对路由协议进行表征过程中，针对场景所需的属性要求，在对行为树改造过程中着重分析设计，以满足场景及应用需求。S1012：确认路由协议内部的信息交互过程以及状态触发条件。其中，信息交互过程是路由协议在运行过程中通过传递消息来传输数据包需要的信息，例如：在中间系统到中系统路由协议中节点之间建立邻接关系的过程，通过发送hello协议数据单元，对端节点和发送端节点都从initialized到达up的状态的过程称为信息交互过程。状态触发条件是指节点从initialized到达up状态的消息触发条件。S1013：根据路由协议内部的流程运行逻辑，将路由协议内部的状态以及触发消息类型进行控制逻辑和执行逻辑的划分。示例地，本步骤根据控制逻辑和执行逻辑具体的内容属性来划分控制逻辑和执行逻辑，其中控制逻辑是执行逻辑运行的基础，执行逻辑是控制逻辑具体的实现。控制逻辑是从具体路由协议的控制面出发进行分析；执行逻辑是从路由协议的数据转发面出发进行分析。本发明从路由协议的具体内容出发，将路由协议中的控制逻辑与执行逻辑进行分离解耦，参考图2，其中，控制逻辑主要包含协议状态单元、触发消息单元、行为树扩展单元、控制编程接口单元；将执行逻辑部分分为状态机转行为树模板单元、基于模板的行为树构建单元、行为树执行单元。S1014：检查确认所划分协议状态单元和触发消息单元内部不存在冲突。示例地，不存在冲突的标准是指，在协议状态单元和触发消息单元内部处于同一个维度，具有一定的逻辑顺序，在协议运行过程中不存在争议的情况。在路由协议内部逻辑中：协议状态单元：通过调研，现有的路由协议内部逻辑之间的跳转很大一部分都是基于有限状态机来实现的。因此，将协议运行过程中的不同逻辑状态的集合定义为不同的协议状态单元。协议状态单元的功能是为了能够从原有的协议内部有限状态机的逻辑转换为基于行为树的逻辑，其内部状态单元所要执行的动作可以作为行为树的动作来执行。触发消息单元：路由协议在执行过程中，逻辑状态之间的跳转需要在一定条件下进行，将所有触发逻辑状态跳转的条件，即通常由不同的消息来触发，将这一系列触发消息所构成的集合定义为触发消息单元。触发消息单元的功能主要是为了触发在行为树对协议表征与构建过程中，动作节点被执行的触发条件。行为树扩展单元：对需要进行行为树表征的路由协议功能进行扩展，即对原有路由协议功能提升与完善，以更好地应对在不同触发条件下路由协议的动作执行，将扩展的路由协议的功能单元定义为行为树扩展单元。行为树扩展单元的功能主要是为了提高路由协议在使用过程中的灵活性，便于应对在不同应用环境中协议功能的增添改查。控制编程接口单元：为了实现对行为树路由协议表征，便于对行为树中各个动作节点进行开发设计所设置的控制编程接口单元。控制编程接口单元的功能主要是便于路由协议行为树设计中节点功能的表征与修改完善。状态机转行为树模板单元：考虑四种模式下的有限状态机转行为树，将四种状态机转换行为树的模板集合定义为状态机转行为树模板单元。状态机转行为树模板单元的功能主要是为了面对在路由协议的有限状态机中，状态之间跳转的不同的情况，可以灵活选择与之情境匹配的状态机转换行为树的模板以实现路由协议的行为树表征。基于模板的行为树构建单元：基于状态机转行为树模板单元中的几种不同情境，对路由协议从有限状态机到行为树的改造表征。基于模板的行为树构建单元的功能主要是实现路由协议逻辑有限状态机到行为树的具体实施构建。自上而下行为树执行单元：对基于模板的行为树构建单元所构建好的行为树进行具体执行的过程。自上而下行为树执行单元的功能主要是能够层次化、清晰明确路由协议在运行过程中执行顺序与逻辑。在本发明的实施例中，所述S102，首先清晰明确路由协议的具体内容及流转关系，进而提取出协议内部的状态、触发消息的内容及类型，根据控制逻辑和执行逻辑进行划分，协议内部状态作为有限状态机的状态，触发消息单元存储触发协议消息内容。其具体步骤为：S1021：基于S101中梳理得到的路由协议内部的状态、触发消息的内容及类型，明确各个状态之间跳转运行顺序及流程。其中，跳转的触发条件是指触发消息的内容及类型；各个状态之间流转到达的状态即路由协议内部的状态。S1022：将协议状态单元和触发消息单元分别存储在数据库中，将路由协议内部状态流转关系用有限状态机的逻辑关系图表示。路由协议的有限状态机为闭环状态，在本发明的实施例中，所述S103，其具体步骤为：S1031：根据协议的触发条件，在协议状态单元中选择根节点。S1032：考虑在不同触发条件执行不同状态的情况以及触发后状态循环执行的情况，建立有限状态机到行为树的转换模板。行为树采用树型层次化结构描述交互模型的控制流程，能有效降低系统建模复杂度和路径计算方式选择的复杂度。具体地，参考图3，根据节点作用，行为树主要包括叶子节点和控制节点，所述主要叶子节点包括动作节点和条件节点，所述控制节点为非叶子节点，主要包括顺序节点、选择节点及同步节点；根据架构，所述行为树包括根节点、子节点以及叶子节点，图形中的文字为节点名称，完整的行为树由它们组合而成。其中子节点是除根节点之外，自身下面还连接有节点的节点；叶子节点是自身下面不再连接有节点的节点，即末端节点；所述子节点为动作节点、条件节点、顺序节点、选择节点及同步节点中的一种或几种的组合，所述行为树允许递归定义。当一棵行为树开始被执行时，其根节点以设定的频率向其子节点发送使能信号，并通过逻辑关系逐一传递给条件节点和动作节点，子节点执行完毕后向根节点反馈执行结果，分别为：SUCCESS状态，是对满足条件或者行为已经被成功执行，返回的状态；FAILURE状态，是对不满足条件或者动作执行失败，返回的状态；RUNNING状态，是对在运行中的节点行为还没有执行完毕，后续需要继续被调用使行为执行完成所返回的状态。行为树中的五种节点类型是为了对路由协议中的有限状态机进行行为树改造提供逻辑关系，是实现路由协议有限状态机转行为树的基础条件。特别是对路由协议内部逻辑的执行逻辑中的基于模板的行为树构建单元，提供了基本的逻辑构建元素。对上述的各种节点的定义或功能描述如下：动作节点：用于执行某种动作行为。条件节点：用于对节点的条件进行判断，如果条件满足，则返回真，如果条件不满足，则返回假。顺序节点：依次从左往右或者从上往下执行根节点的所有子节点或者子树。在行为树的运行过程中，如果子节点返回失败或者错误，行为树就会停止执行。在行为树的发展和应用过程中，会出现一些带有优先级、权重和记忆的节点，带优先级和权重的节点优先运行，即优先运行较为重要的子节点或子树，带有记忆的节点，则是下一次再运行到该顺序节点时，直接进入返回运行中的子节点。选择节点：通常会从左往右或者从上往下选择一个满足条件的子节点执行，并且只有当其子节点执行的返回结果成功时才会停止。有时也会给选择节点设置优先级或者权重，即优先执行优先级高的子节点执行，或者选择权重大的子节点执行，直到子节点返回成功。同步节点：同时执行当前节点下的所有子节点，并根据返回的成功和失败的数量比确定返回成功还是失败。一棵行为树可以有多个子节点、行为子树或者执行子树。子节点包括了路由协议中具体的执行动作、动作触发的条件、动作执行的顺序等信息。对于不同的路由协议，执行动作、触发条件、动作执行顺序等都不同。行为子树通常是针对路由协议中某一过程，这里可以包含路由协议对数据包的接收和转发、以及数据包的更新决策、合法性检验等，比如：决策子树，根据LSDB的变化重新计算最短路由，并更新路由表。执行子树是针对路由协议经过行为树改造之后，将路由协议原有的有限状态机逻辑改造形成层次化树形结构。针对行为树中的部分子树分支，根据构成行为树的五种基本节点类型，按照每种节点的执行逻辑进行执行。这里执行子树是对路由协议的行为子树进行具体的运行过程。基于行为树的路由协议表征是协议内部新功能的扩展增加的基础。为了便于行为树的表征，本发明设计了有限状态机转成行为树的转换模板。首先，考虑有限状态机本质上是对一张图进行维护，图中的每一个节点代表不同的状态，各个节点间的连线代表了状态之间跳转的触发规则。对于单个节点而言，其内部状态逻辑可以描述为：如果满足条件1，则触发跳转到状态a；如果满足条件2，则触发跳转到状态b；……；否则，不做任何跳转，维持当前状态。针对行为树转换模板，考虑以下几种模式进行状态机跳转行为树：模式1：满足条件立即跳转。无论当前节点处在任何状态中，一旦满足某动作的触发条件，立即跳转到特定的状态。示例地，参考图4，a状态在触发条件1时跳转到c状态，b状态在触发条件2时跳转到c状态。在经过转换之后，无论当前节点处于a状态或b状态，一旦出发某一个条件，则跳转到c状态。模式2：同一跳转条件，不同状态间，实现不同跳转。示例地，参考图5，a状态在触发条件1时，跳转到c状态；b状态在触发条件2时，跳转到d状态。经过转换之后，根据顺序节点执行逻辑，当前一个节点运行完成后，会执行下一个节点，利用此特性，在a状态中，当满足条件1的时候，则返回“完成”，那行为树就会自动跳转到c状态中。模式3：不同条件触发不同状态跳转。特别对于自跳转情况，维持当前的状态。示例地，参考图6，a状态在触发条件1时，跳转到b状态；在触发条件2时，跳转到c状态；在触发条件3时，跳转到d状态；a状态也可以自己跳转到自己。经过转换之后，在a状态结束的时候，日志中记录其结束的原因，以便于后续选择节点来选择。第二层选择节点，它每次都会从上一次所能运行的节点来运行，而不是每次都从头开始选择。与模式2类似，可以不用顺序节点，用选择节点替代，作为默认状态的a状态就需要处在选择节点的最后一个，因为仅当所有跳转条件都不满足的时候，才会维持在当前的状态。模式4：环路跳转。行为树是一种树形层次化结构，而带环状态机是一种类似图结构，针对该种情况，始终将当前运行的节点作为最低优先级节点来处理，总是先处理除当前节点以外的其他节点。示例地，参考图7，在a状态中，根据某条件1，会跳转到b状态中，而在b状态的时候，又会根据某条件2，跳转到a状态，产生了这样一个跳转的“环”，对于这种情况，引入一种选择节点，目的是始终将当前运行的节点作为最低优先级的节点来处理。S1033：根据路由协议运行过程和不同阶段的触发条件，从根节点出发，结合有限状态机转行为树的模板，进行整个行为树的构建。S1034：为了适应网络场景的变化，对路由协议的内部功能进行增删或扩展，将需要扩展的协议状态以及触发消息分别添加到相应的协议状态单元数据库和触发消息单元数据库，并调用转换模板进行行为树表征构建。综上，本发明将现有路由协议内各个状态间的有限状态机转换为行为树这种层次化树形结构。其中，对现有路由协议内部的有限状态机进行合理的提取抽象出来是实现行为树表征的基础。在对路由协议的状态机进行提取时，需要考虑所要构建行为树的深度，从而确定提取状态机时的抽象程度和数量；具体地，当行为树上的动作节点都是的原子级，那么，这些动作节点的上一层节点，就要求对情况细分的比较细；同理，如果节点的抽象程度较高，则需要进行较多层次的细分，直到细分到原子级的动作节点。因此，行为树的深度越深，对提取状态机时的抽象程度要求越高，抽象出来的状态数量会越少。在状态机进行行为树表征过程中，制定规则或模板来实现状态机到行为树的快速表征与构建。本发明将路由协议表征为行为树形式之后，既能够实现协议原有的计算、转发、存储功能，同时行为树模块化、易扩展的特性，便于增强协议原有的功能。对于数据信息的传递，由传统的尽力而为的服务机制，通过扩展协议在数据传输过程新的能力机制，从而能够达到确保数据包安全可靠传输的效果。打破了传统路由协议原有逻辑机制，能够基于不同场景的需求实现定制化的协议服务功能设计。例如：对于一个要求端到端安全可靠高效传输信号，若采用传统路由协议best-effort的传输机制，当网络中带宽等资源不足，链路中断或节点被攻击摧毁时，消息指令则无法传输到目的地；若将路由协议有限状态机跳转的控制逻辑进行行为树改造，在终端接入网络时加入身份、标识等加密验证，在进入到核心网之后，基于传统协议的传输机制，扩展添加新的服务功能，可以对路由路径传输的节点内容进行验证，也可以扩展网元节点的数据缓存能力，当传输过程中出现节点摧毁或链路中断的情况，无需从源端重新传输，而是可以接续传输直到数据包传输至目的端。借助行为树灵活扩展，可以增强路由传输的安全可靠能力，减少对网络中资源的浪费，为其他服务的应用实施提供更多的资源支撑，有效提高全网资源的利用率。为了验证本发明带来的效果。采用中间系统到中间系统路由协议中的链路状态部分的有限状态机作为实施例1。在图8中，展示了ISIS协议中链路状态C_STATE_CONF、C_STATE_UP、C_STATE_INIT和C_STATE_NA四种状态之间的有限状态机；以及在有限状态机中增添新的状态C_STATE_DOWN之后，需要设计的新的消息触发条件IF_DOWN、IF_UP、ISIS_UNDOWN和ISIS_DOWN，并重新设计开发与C_STATE_NA、C_STATE_INIT两个状态之间的接口。将图8中的状态机利用行为树转换模板，进行行为树转换，形成的行为树如图9所示。从图9中将循环状态的状态机利用状态机转换模板，进行层次化树形结构改造；在链路增添新的状态C_STATE_DOWN之后，利用行为树模块化、代码可读性好、可重用性好的优势，可以方便快捷地实现对新状态的添加及旧状态的删除。与有限状态机相比，可以得出行为树对于节点的增删修改及新功能的扩展更为容易。图10为根据本发明实施例的基于行为树来描述ISIS协议的示意图，如图10所示，通过对ISIS路由协议进行行为树建模，首先，将ISIS协议的主要分为四个种状态，即接收，转发，更新，决策。其中，1)接收，主要负责IIH报文、链路状态报文LSP和序列号报文SNP报文的接收并把数据包储存在数据库中。该模块首先检查报文内容是否合法,若报文合法则根据报文类型送往相应模块进行处理；2)更新，主要负责接收、生成和传播LSP。在获得新的LSP信息后，通过解析获得最新的网络结构并更新自己的链路状态数据库，然后将自己的LSP泛洪出去；3)决策，通过对度量的计算，形成路由表，从而形成全网链路状态数据库，根据数据库内容，使用最短路径算法计算最短路由；4)转发，通过匹配路由表，将接收到的数据包转发到正确的主机地址中。接收模块依据收到的数据包类型不同，采取不同动作进行处理。转发模块则主要负责路由表查询以及根据查询结果进行数据包的转发。针对IIH数据包，行为树按照顺序节点的流程开始执行建立过程，首先通过合法性检验子树如图11所示，检验hello包是否处于同一网段，是否存在共同区域TLV，以及链路兼容性，当不满足时需要丢弃该数据包，随后判断是否添加认证，如果添加了认证则需要检验认证是否通过，如果未通过则需要丢弃，当校验完毕之后，可以协商最大传输单元MTU字段长度，保障传输单元大小。最后通过三次握手完成邻居关系建立。针对LSP链路状态信息数据包时，会执行更新子树如图12所示，更新子树的主要功能是解析LSP报文信息，然后根据不同条件，执行相应动作，完成对链路状态信息数据库的更新。当更新完毕之后，会执行决策子树如图13所示，决策子树根据LSDB的变化重新计算最短路由，并更新路由表。ISIS路由协议BT描述对每个状态间的关联性和序列性不做强制限定，在扩展或删减状态时，只需要调整状态和动作，通过行为树构建算法自动生成ISIS协议的行为树。以上行为树中的符号描述为：“？”表示选择节点，即在该运行逻辑下的节点选择执行，并遵循左侧优先原则；“→”表示顺序执行节点，即在该运行逻辑下的节点顺序执行，并遵循左侧优先执行，行为树的叶子节点可以是对状态的判断也可以是动作的执行；“XXX？”表示条件节点，即在满足该条件下返回SUCCESS，否则返回FAILURE；“XXX”表示动作节点，它将执行一系列自定义的动作，是整个行为树执行的最终环节。在上述实施例中，可以全部或部分地通过软件、硬件、固件或者其任意组合来实现。当使用全部或部分地以计算机程序产品的形式实现，所述计算机程序产品包括一个或多个计算机指令。在计算机上加载或执行所述计算机程序指令时，全部或部分地产生按照本发明实施例所述的流程或功能。所述计算机可以是通用计算机、专用计算机、计算机网络、或者其他可编程装置。所述计算机指令可以存储在计算机可读存储介质中，或者从一个计算机可读存储介质向另一个计算机可读存储介质传输，例如，所述计算机指令可以从一个网站站点、计算机、服务器或数据中心通过有线或无线方式向另一个网站站点、计算机、服务器或数据中心进行传输)。所述计算机可读取存储介质可以是计算机能够存取的任何可用介质或者是包含一个或多个可用介质集成的服务器、数据中心等数据存储设备。所述可用介质可以是磁性介质、光介质、或者半导体介质)等。以上所述，仅为本发明的具体实施方式，但本发明的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本发明揭露的技术范围内，凡在本发明的精神和原则之内所作的任何修改、等同替换和改进等，都应涵盖在本发明的保护范围之内。
