标题title
负载均衡方法和装置、电子设备
摘要abst
本申请提出一种负载均衡方法和装置、电子设备及非瞬时性计算机可读存储介质，所述负载均衡方法用于负载均衡器，所述负载均衡器预设有每个服务节点的服务权重值，所述负载均衡器通过所述服务权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系，所述负载均衡方法包括响应于用户的接入请求，判断当前的用户请求数量是否大于预设的请求阈值；若当前的用户请求数量大于预设的请求阈值，计算服务节点的状态评分；利用所述状态评分更新所述服务权重值；利用更新后的所述服务权重值更新所述映射关系。根据本申请的实施例，在不增加成本及带内资源的情况下，提升了云计算的服务性能。
权利要求书clms
1.一种负载均衡方法，其特征在于，所述负载均衡方法用于负载均衡器，所述负载均衡器预设有每个服务节点的服务权重值，所述负载均衡器通过所述服务权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系，所述负载均衡方法包括：响应于用户的接入请求，判断当前的用户请求数量是否大于预设的请求阈值；若当前的用户请求数量大于预设的请求阈值，计算服务节点的状态评分；利用所述状态评分更新所述服务权重值；利用更新后的所述服务权重值更新所述映射关系。2.根据权利要求1所述的负载均衡方法，其特征在于，所述负载均衡器通过所述服务权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系，包括：根据所述预设的服务权重值确定所述虚拟节点数量；利用所述预设的权重值和预设的虚拟节点基数确定每个服务节点对应的虚拟节点数量；利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系。3.根据权利要求1所述的负载均衡方法，其特征在于，所述服务节点包括多个服务，所述利用所述状态评分更新所述服务权重值，包括：计算服务节点上每个服务的资源占用百分比；利用所述每个服务的资源占用百分比计算所述服务节点的状态评分。4.根据权利要求3所述的负载均衡方法，其特征在于，所述资源占用百分比包括CPU资源占用百分比和/或带宽占用百分比。5.根据权利要求4所述的负载均衡方法，其特征在于，所述状态评分为服务节点的空闲资源占比。6.根据权利要求1所述的负载均衡方法，其特征在于，利用所述状态评分更新所述服务权重值包括：判断所述负载均衡器是否包括临时服务权重值；响应于所述负载均衡器包括所述临时服务权重值，利用所述临时服务权重值更新所述服务权重值；响应于所述负载均衡器不包括所述临时服务权重值，利用所述状态评分更新所述服务权重值。7.根据权利要求2-5任一所述的负载均衡方法，其特征在于，更新后的每个服务节点的服务权重小于更新前的对应的服务权重值。8.一种负载均衡装置，其特征在于，所述负载均衡装置用于负载均衡器，所述负载均衡器预设有每个服务节点的服务权重值，所述负载均衡器通过所述服务权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系，所述负载均衡装置包括：请求阈值判断单元，用于响应于用户的接入请求，判断当前的用户请求数量是否大于预设的请求阈值；状态评分计算单元，用于响应于当前的用户请求数量大于预设的请求阈值，计算服务节点的状态评分；服务权重值更新单元，用于利用所述状态评分更新所述服务权重值；映射关系更新单元，用于利用更新后的所述服务权重值更新所述映射关系。9.一种电子设备，包括：处理单元；以及存储单元，存储有计算机程序，当所述计算机程序被所述处理单元执行时，使得所述处理单元执行如权利要求1-7中任一项所述的负载均衡方法。10.一种非瞬时性计算机可读存储介质，其上存储有计算机可读指令，当所述指令被处理器执行时，使得所述处理器执行如权利要求1-7中任一项所述的负载均衡方法。
说明书desc
技术领域本申请涉及直播领域，具体而言，涉及一种负载均衡方法和装置、电子设备及非瞬时性计算机可读存储介质。背景技术在一般的直播应用场景中，当用户请求创建或进入房间时，客户端通过调度服务请求媒体资源服务，客户端利用分配的媒体资源服务进行创建房间、推流直播等后续操作。目前，通常采用轮询法，按顺序逐一将媒体资源封装为Token提供给客户端使用。这种策略保证了互动直播的媒体资源服务在正常请求的情况下的均匀负载，但是当服务动态伸缩扩容、服务器承载能力不同、或者房间资源占用不同的媒体资源服务时，各服务器间则会出现负载差异。发明内容本申请提出一种负载均衡方法和装置、电子设备及非瞬时性计算机可读存储介质，以解决无法保证媒体资源服务的均衡负载问题。根据本申请的一方面，提出一种负载均衡方法，所述负载均衡方法用于负载均衡器，所述负载均衡器预设有每个服务节点的服务权重值，所述负载均衡器通过所述服务权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系，所述负载均衡方法包括：响应于用户的接入请求，判断当前的用户请求数量是否大于预设的请求阈值；若当前的用户请求数量大于预设的请求阈值，计算服务节点的状态评分；利用所述状态评分更新所述服务权重值；利用更新后的所述服务权重值更新所述映射关系。根据一些实施例，所述负载均衡器通过所述服务权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系，包括根据所述预设的服务权重值确定所述虚拟节点数量；利用所述预设的权重值和预设的虚拟节点基数确定每个服务节点对应的虚拟节点数量；利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系。根据一些实施例，所述服务节点包括多个服务，所述利用所述状态评分更新所述服务权重值，包括计算服务节点上每个服务的资源占用百分比；利用所述每个服务的资源占用百分比计算所述服务节点的状态评分。根据一些实施例，所述资源占用百分比包括CPU资源占用百分比和/或带宽占用百分比。根据一些实施例，所述状态评分为服务节点的空闲资源占比。根据一些实施例，利用所述状态评分更新所述服务权重值包括判断所述负载均衡器是否包括临时服务权重值；响应于所述负载均衡器包括所述临时服务权重值，利用所述临时服务权重值更新所述服务权重值；响应于所述负载均衡器不包括所述临时服务权重值，利用所述状态评分更新所述服务权重值。根据一些实施例，更新后的每个服务节点的服务权重小于更新前的对应的服务权重值。根据本申请的一方面，提出一种负载均衡装置，所述负载均衡装置用于负载均衡器，所述负载均衡器预设有每个服务节点的服务权重值，所述负载均衡器通过所述服务权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系，所述负载均衡装置包括请求阈值判断单元，用于响应于用户的接入请求，判断当前的用户请求数量是否大于预设的请求阈值；状态评分计算单元，用于响应于当前的用户请求数量大于预设的请求阈值，计算服务节点的状态评分；服务权重值更新单元，用于利用所述状态评分更新所述服务权重值；映射关系更新单元，用于利用更新后的所述服务权重值更新所述映射关系。根据本申请的一方面，提出一种电子设备，包括处理单元；以及存储单元，存储有计算机程序，当所述计算机程序被所述处理单元执行时，使得所述处理单元执行如前任一实施例所述的负载均衡方法。根据本申请的一方面，提出一种非瞬时性计算机可读存储介质，其上存储有计算机可读指令，当所述指令被处理器执行时，使得所述处理器执行如前任一实施例所述的负载均衡方法。根据本申请的一些实施例，根据用户的接入请求，对各服务节点进行状态平台，以判断各服务节点的负载情况，并根据服务节点的负载情况动态调整服务节点对应的哈希环上的虚拟节点，实现了依据媒体资源的实时状态的负载平衡。应当理解的是，以上的一般描述和后文的细节描述仅是示例性的，并不能限制本申请。附图说明为了更清楚地说明本申请实施例中的技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍。图1a示出根据本申请示例实施例的一种负载均衡架构图。图1b示出了根据本申请示例实施例的一种一致性哈希环示意图。图2示出根据本申请示例实施例的一种负载均衡方法流程图。图3示出根据本申请示例实施例的一种负载均衡装置框图。图4示出根据本申请示例性实施例的一种电子设备。具体实施方式现在将参考附图更全面地描述示例实施例。然而，示例实施例能够以多种形式实施，且不应被理解为限于在此阐述的实施例；相反，提供这些实施例使得本申请将全面和完整，并将示例实施例的构思全面地传达给本领域的技术人员。在图中相同的附图标记表示相同或类似的部分，因而将省略对它们的重复描述。所描述的特征、结构或特性可以以任何合适的方式结合在一个或更多实施例中。在下面的描述中，提供许多具体细节从而给出对本公开的实施例的充分理解。然而，本领域技术人员将意识到，可以实践本公开的技术方案而没有这些特定细节中的一个或更多，或者可以采用其它的方式、组元、材料、装置或操作等。在这些情况下，将不详细示出或描述公知结构、方法、装置、实现、材料或者操作。附图中所示的流程图仅是示例性说明，不是必须包括所有的内容和操作/步骤，也不是必须按所描述的顺序执行。例如，有的操作/步骤还可以分解，而有的操作/步骤可以合并或部分合并，因此实际执行的顺序有可能根据实际情况改变。本申请的说明书和权利要求书及上述附图中的术语“第一”、“第二”等是用于区别不同对象，而不是用于描述特定顺序。此外，术语“包括”和“具有”以及它们任何变形，意图在于覆盖不排他的包含。例如包含了一系列步骤或单元的过程、方法、系统、产品或设备没有限定于已列出的步骤或单元，而是可选地还包括没有列出的步骤或单元，或可选地还包括对于这些过程、方法、产品或设备固有的其他步骤或单元。在互动直播的过程中，每个客户端利用调度服务分配的媒体资源服务进行创建房子以及推流直播等操作。由于每个直播房间使用的媒体资源服务不同，例如，单人直播房间和多人的直播房间，目前按照轮询法或随机法为每个媒体资源服务分配直播房间数量的方式，使得媒体资源服务存在负载不平衡的问题，导致承载能力较低的媒体资源服务首先不堪负重。当媒体资源服务进行动态扩容时，新增加的服务资源无法及时有效地缓解承载能力较低的媒体资源服务。当遇到个别特殊情况时，常需要人工介入解决媒体资源服务负载差异较大的问题。因此，现在负载均衡策略已无法满足需求。为了解决媒体资源服务的负载不均衡问题，根据本申请的实施例，根据用户的接入请求，对各服务节点进行状态平台，以判断各服务节点的负载情况，并根据服务节点的负载情况动态调整服务节点对应的哈希环上的虚拟节点，实现了依据媒体资源的实时状态的负载平衡。下面结合附图，对根据本申请的具体实施例进行详细说明。图1a示出根据本申请示例实施例的一种负载均衡架构图，如图1a所示，客户端向负载均衡器请求媒体资源，例如Token请求。负载均衡器根据客户端的媒体资源请求为客户端分配媒体资源，并将媒体资源对应的服务节点发送给客户端。客户端根据获得服务节点信息访问服务节点媒体资源。图1b示出了根据本申请示例实施例的一种一致性哈希环示意图，下面以图1b为例，对根据本申请示例实施例的一种负载均衡方法进行说明。由于每个服务节点的机器配置以及网络资源不同，例如，机器配置、CPU、内存和带宽，每个服务节点可提供一种或多种媒体资源服务。为了实现负载均衡，如图1b所示，根据每个业务组中各服务节点的承载能力，将一致性哈希环上的虚拟节点映射给每个服务节点。例如，如图1b所示，根据每个服务节点的承载能力，将虚拟节点1-5给服务节点1，虚拟节点6-8分配给服务节点2，将虚拟节点9-10分配给服务节点3。在直播过程中，根据本申请的实施例，根据每个服务节点的运行状态，动态调整每个服务节点对应的虚拟节点个数，以缓解负载较大的服务节点的承载压力，实现负载均衡。例如，在直播过程，根据每个服务节点的状态信息，发现服务节点2的负载较大，服务节点3的业务空闲。则将服务节点对应的虚拟节点9-10映射到服务节点2中。又例如，在直播过程，根据每个服务节点的状态信息，发现服务节点2的负载较大，服务节点3的业务空闲。则根据每个服务节点的运行状态，动态调整每个服务节点对应的虚拟节点个数，将虚拟节点1-5分配给服务节点1，虚拟节点6-9分配给服务节点2，将虚拟节点10分配给服务节点3。图2示出根据本申请示例实施例的一种负载均衡方法流程图，下面以图2为例，对根据本申请示例实施例的一种负载均衡方法进行详细说明。根据本申请的实施例，图2所示的负载均衡方法用于负载均衡器，其中，负载均衡器预设有每个服务节点的服务权重值，负载均衡器通过预设的每个服务节点的权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系。在直播业务中，根据提供的业务内容，包括多种业务组。例如，rtc业务组，为普通互动连麦组，负责互动连麦业务，对房间人数有限制，默认房间人数不超过100人。又例如，live业务组，为超大互动房间业务组。该业务模式能够满足大并发观众的房间直播，支持无延迟直播业务，且对观众并发无数量限制。由于不同业务组需要提供不同的媒体资源服务类型和数量，根据本申请的实施例，图2所示的负载均衡针对同一种业务组，建立哈希环上虚拟节点和服务节点的映射关系。由于每个服务节点的机器配置以及网络资源不同，例如，机器配置、CPU、内存和带宽，每个服务节点提供的媒体资源服务的类型和数量不同，因此，每个服务节点的承载能力不同，根据本申请的实施例，根据每个服务节点的承载能力，确定每个服务节点的权重值，并根据每个服务节点的权重值，确定一致性哈希环上，每个服务节点对应的虚拟节点数量。根据一些实施例，通过如下步骤建立服务节点和虚拟节点的对应关系：首先，根据预设的服务权重值确定虚拟节点数量。例如，利用预设的服务权重值和与虚拟节点基数的乘积确定虚拟节点数量。其中，虚拟节点基数为每个权重值对应的虚拟节点数量。根据一些实施例，虚拟节点基数为128。在此需要说明的是，虚拟节点基数为128仅是一种示例，也可以选择其他的虚拟节点基数，在此不做限制。然后，利用预设的权重值和预设的虚拟节点基数确定每个服务节点对应的虚拟节点数量。例如，rtc业务组有15台计算机，并分配给服务节点a1和a2，其中，为服务节点a1分配10台计算机，为服务节点a2分配5台计算机，则服务节点a1和a2的服务权重比值为10:5=2:1。因此，最终确定的虚拟节点数量为*128=384，其中，128个虚拟节点对应服务节点a2，256个虚拟节点对应服务节点a1。最后，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系。在步骤S201，响应于用户的接入请求，判断当前的用户请求数量是否大于预设的请求阈值。根据本申请的实施例，需要根据每个服务节点对应的虚拟节点数量，确定每个服务节点对应的一致性哈希环上的虚拟节点，也即，需要利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系，以使得客户端能够根据哈希环上的虚拟节点得到对应的服务节点。根据一些实施例，请求阈值预设为100。在此需要说明的是，请求阈值可根据直播系统的服务集群的承载能力来确定，在此不做限定。当前的用户请求数量大于预设的请求阈值后，每个业务组读取机器负载信息，执行步骤S103，计算出每个业务组下每个链接节点集群的资源状态，得到每个链接节点集群的资源占用情况。在具体的实施例中，由于服务节点的负载能力不是一成不变，例如，服务节点有可能发生异常，或者业务退潮，也即直播业务结束。因此，需要根据服务节点的负载动态调整和虚拟节点的对应关系。因此，执行步骤S203，若当前的用户请求数量大于预设的请求阈值，计算服务节点的状态评分。根据本申请的实施例，服务节点的状态通过CPU的使用率和带宽的占用率进行表征。根据一些实施例，通过如下步骤计算服务节点的状态评分：首先，计算CPU的使用率和带宽占用率，如公式和所示。CPU的使用率 c % = 实际CPU占用/总CPU资源 x 100% 带宽的占用率b% = 实际带宽/总出口带宽资源 *100%，然后，利用公式计算服务节点的状态评分。服务节点的状态评分core =/2在步骤S205，利用状态评分更新服务权重值。根据一些实施例，假设计算的服务节点A、B和C的状态评分分别为coreA、coreB和coreC，可通过公式计算各服务节点的评估权重。：： 根据本申请的实施例，步骤S105计算的权重值不超过预设的服务权重值，以防止步骤S105计算的服务节点的权重值无限提升，从而导致负载低的服务节点得不到充分利用，造成负载不均衡的问题。因此，当步骤S105计算的权重值超过预设的服务权重值后，需要根据根据服务节点的状态，根据服务节点的负载状态，重新计算服务节点的评估权重。在步骤S207，利用更新后的服务权重值更新映射关系。在步骤S207中，利用更新后的服务权重值重新和虚拟节点基数重新计算一致性哈希环上包括的虚拟节点数量。并按照公式确定的各服务节点对应的服务权重值，为每个服务节点分配对应权重的虚拟节点。根据图1所示的实施例，根据用户的接入请求，对各服务节点进行状态平台，以判断各服务节点的负载情况，并根据服务节点的负载情况动态调整服务节点对应的哈希环上的虚拟节点，实现了依据媒体资源的实时状态的负载平衡。根据本申请的另一些实施例，在一些特殊极端情况下，如遇到服务大面积瘫痪，可为服务节点设置临时服务权重值，并根据临时服务权重值更新服务权重。根据一些实施例，临时权重的优先级大于利用服务节点的状态评分得到的评估权重，且该评估权重的优先级大于预设的初始服务权重。通过临时权重，可用于解决图1所示的自动调整权重在发生特殊情况时，无法调整服务节点负载的问题。因此，在步骤S205中，需要判断负载均衡器是否包括临时服务权重值；若包括临时服务权重值，则利用临时服务权重值更新服务权重值。若不包括临时服务权重值，则利用状态评分更新服务权重值。根据一些实施例，当服务节点的临时权重调整为0时，则表示该服务节点暂时不接收新的请求，待该服务节点负载缓解后可重置临时权重值或采用服务节点的状态评分更新服务权重值。根据一些实施例，临时权重不易设置过大，以免造成哈希环上虚拟节点的数量过大，影响系统性能。下面描述本申请的装置实施例。对于本申请装置实施例中未说明的细节，可参照本申请方法实施例。图3示出根据本申请示例实施例的一种负载均衡装置框图，如图3所示的负载均衡装置用于负载均衡器，负载均衡器预设有每个服务节点的服务权重值，负载均衡器通过服务权重值，利用一致性哈希算法建立哈希环上虚拟节点和服务节点的映射关系。根据本申请的实施例，图3所示的负载均衡装置包括请求阈值判断单元301、状态评分计算单元303、服务权重值更新单元305和映射关系更新单元307，其中，请求阈值判断单元301用于响应于用户的接入请求，判断当前的用户请求数量是否大于预设的请求阈值；状态评分计算单元303用于响应于当前的用户请求数量大于预设的请求阈值，计算服务节点的状态评分；服务权重值更新单元305用于利用所述状态评分更新所述服务权重值；映射关系更新单元307，用于利用更新后的服务权重值更新所述映射关系。图4示出根据本申请示例性实施例的一种电子设备。下面参照图4来描述根据本申请的这种实施方式的电子设备200。图4显示的电子设备200仅仅是一个示例，不应对本申请实施例的功能和使用范围带来任何限制。如图4所示，电子设备200以通用计算设备的形式表现。电子设备200的组件可以包括但不限于：至少一个处理单元210、至少一个存储单元220、连接不同系统组件的总线230、显示单元240等。其中，存储单元存储有程序代码，程序代码可以被处理单元210执行，使得处理单元210执行本说明书描述的根据本申请各种示例性实施方式的方法。例如，处理单元210可以执行如图1中所示的方法。存储单元220可以包括易失性存储单元形式的可读介质，例如随机存取存储单元2201和/或高速缓存存储单元2202，还可以进一步包括只读存储单元2203。存储单元220还可以包括具有一组程序模块2205的程序/实用工具2204，这样的程序模块2205包括但不限于：操作系统、一个或者多个应用程序、其它程序模块以及程序数据，这些示例中的每一个或某种组合中可能包括网络环境的实现。总线230可以为表示几类总线结构中的一种或多种，包括存储单元总线或者存储单元控制器、外围总线、图形加速端口、处理单元或者使用多种总线结构中的任意总线结构的局域总线。电子设备200也可以与一个或多个外部设备300通信，还可与一个或者多个使得用户能与该电子设备200交互的设备通信，和/或与使得该电子设备200能与一个或多个其它计算设备进行通信的任何设备通信。这种通信可以通过输入/输出接口250进行。并且，电子设备200还可以通过网络适配器260与一个或者多个网络，广域网和/或公共网络，例如因特网）通信。网络适配器260可以通过总线230与电子设备200的其它模块通信。应当明白，尽管图中未示出，可以结合电子设备200使用其它硬件和/或软件模块，包括但不限于：微代码、设备驱动器、冗余处理单元、外部磁盘驱动阵列、RAID系统、磁带驱动器以及数据备份存储系统等。通过以上的实施方式的描述，本领域的技术人员易于理解，这里描述的示例实施方式可以通过软件实现，也可以通过软件结合必要的硬件的方式来实现。根据本申请实施方式的技术方案可以以软件产品的形式体现出来，该软件产品可以存储在一个非易失性存储介质中或网络上，包括若干指令以使得一台计算设备执行根据本申请实施方式的上述方法。软件产品可以采用一个或多个可读介质的任意组合。可读介质可以是可读信号介质或者可读存储介质。可读存储介质例如可以为但不限于电、磁、光、电磁、红外线、或半导体的系统、装置或器件，或者任意以上的组合。可读存储介质的更具体的例子包括：具有一个或多个导线的电连接、便携式盘、硬盘、随机存取存储器、只读存储器、可擦式可编程只读存储器、光纤、便携式紧凑盘只读存储器、光存储器件、磁存储器件、或者上述的任意合适的组合。计算机可读存储介质可以包括在基带中或者作为载波一部分传播的数据信号，其中承载了可读程序代码。这种传播的数据信号可以采用多种形式，包括但不限于电磁信号、光信号或上述的任意合适的组合。可读存储介质还可以是可读存储介质以外的任何可读介质，该可读介质可以发送、传播或者传输用于由指令执行系统、装置或者器件使用或者与其结合使用的程序。可读存储介质上包含的程序代码可以用任何适当的介质传输，包括但不限于无线、有线、光缆、RF等等，或者上述的任意合适的组合。可以以一种或多种程序设计语言的任意组合来编写用于执行本申请操作的程序代码，程序设计语言包括面向对象的程序设计语言—诸如Java、C++等，还包括常规的过程式程序设计语言—诸如“C”语言或类似的程序设计语言。程序代码可以完全地在用户计算设备上执行、部分地在用户设备上执行、作为一个独立的软件包执行、部分在用户计算设备上部分在远程计算设备上执行、或者完全在远程计算设备或服务器上执行。在涉及远程计算设备的情形中，远程计算设备可以通过任意种类的网络，包括局域网或广域网，连接到用户计算设备，或者，可以连接到外部计算设备。上述计算机可读介质承载有一个或者多个程序，当上述一个或者多个程序被一个该设备执行时，使得该计算机可读介质实现前述功能。本领域技术人员可以理解上述各模块可以按照实施例的描述分布于装置中，也可以进行相应变化唯一不同于本实施例的一个或多个装置中。上述实施例的模块可以合并为一个模块，也可以进一步拆分成多个子模块。根据本申请的实施例，提出一种计算机程序，包括计算机程序或指令，该计算机程序或指令被处理器执行时，可以执行以上描述的方法。以上对本申请实施例进行了详细介绍，本文中应用了具体个例对本申请的原理及实施方式进行了阐述，以上实施例的说明仅用于帮助理解本申请的方法及其核心思想。同时，本领域技术人员依据本申请的思想，基于本申请的具体实施方式及应用范围上做出的改变或变形之处，都属于本申请保护的范围。综上所述，本说明书内容不应理解为对本申请的限制。
