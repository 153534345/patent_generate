标题title
基于容器云平台的多子网统一分配IP地址的方法和系统
摘要abst
本申请涉及容器云平台技术领域，提供一种基于容器云平台的多子网统一分配IP地址的方法和系统。该方法包括：建立目标应用与多个IP地址池之间的绑定关系；其中，容器云平台中包含多个子网，子网包含至少一个IP地址池中的所有IP地址，每个子网与容器云平台中的至少一个节点相对应，IP地址池与容器云平台中的至少一个节点相绑定；响应于接收到为目标应用的目标应用实例分配IP地址的请求，基于用于部署目标应用实例的目标节点的标识信息，确定与目标节点绑定的目标IP地址池；从目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将目标IP地址分配给目标应用实例。由此，实现了多子网场景下通过IP地址分配将目标应用实例划归指定子网。
权利要求书clms
1.一种基于容器云平台的多子网统一分配IP地址的方法，其特征在于，包括：建立所述目标应用与多个IP地址池之间的绑定关系；其中，每个所述IP地址池包含至少一个IP地址，所述容器云平台中包含多个子网，所述子网包含至少一个所述IP地址池中的所有IP地址，每个所述子网与所述容器云平台中的至少一个节点相对应，所述IP地址池与所述容器云平台中的至少一个节点相绑定；响应于接收到为所述目标应用的目标应用实例分配IP地址的请求，基于用于部署所述目标应用实例的目标节点的标识信息，确定与所述目标节点绑定的目标IP地址池；从所述目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将所述目标IP地址分配给所述目标应用实例，以实现将所述目标应用实例划归所述目标IP地址池对应的子网。2.根据权利要求1所述的基于容器云平台的多子网统一分配IP地址的方法，其特征在于，所述建立所述目标应用与多个IP地址池之间的绑定关系，具体为：在所述目标应用的资源文件中设置地址池标签字段，并将多个所述IP地址池的标识信息写入所述地址池标签字段中。3.根据权利要求1所述的基于容器云平台的多子网统一分配IP地址的方法，其特征在于，所述IP地址池与所述容器云平台中的节点通过以下方式进行绑定：在每个所述IP地址池的资源文件中设置节点亲和性字段；在所述节点亲和性字段中写入至少一个所述容器云平台中的节点的标识信息，以将所述IP地址池与所述容器云平台中的至少一个节点进行绑定。4.根据权利要求3所述的基于容器云平台的多子网统一分配IP地址的方法，其特征在于，所述容器云平台包含第一子网和第二子网，所述目标IP地址池属于所述第一子网，在将所述目标IP地址池与所述目标节点进行绑定之后，所述方法还包括：将所述目标IP地址池的资源文件中的节点亲和性字段中的所述目标节点的标识信息移除，以解除所述目标节点与所述第一子网的对应关系；在所述第二子网对应的IP地址池的资源文件中的节点亲和性字段中写入所述目标节点的标识信息，以建立所述目标节点与所述第二子网的对应关系。5.根据权利要求3所述的基于容器云平台的多子网统一分配IP地址的方法，其特征在于，所述节点的标识信息具体为：节点标签；所述在所述节点亲和性字段中写入至少一个所述容器云平台中的节点的标识信息，以将所述IP地址池与所述容器云平台中的至少一个节点进行绑定，具体为：在所述容器云平台中的至少一个节点的资源文件中设置所述节点标签，以将设置有相同所述节点标签的所述至少一个节点作为节点组；将至少一个所述节点标签写入所述IP地址池的节点亲和性字段中，以将所述IP地址池与至少一个所述节点组进行绑定。6.根据权利要求3所述的基于容器云平台的多子网统一分配IP地址的方法，其特征在于，所述响应于接收到为所述目标应用的目标应用实例分配IP地址的请求，基于用于部署所述目标应用实例的目标节点的标识信息，确定与所述目标节点绑定的目标IP地址池，具体为：响应于接收到为所述目标应用的目标应用实例分配IP地址的请求，解析所述目标节点的资源文件以获取所述目标节点的标识信息；基于所述目标节点的标识信息确定与所述目标节点绑定的IP地址池；将与所述目标节点绑定的IP地址池作为所述目标IP地址池。7.根据权利要求1-6中任一项所述的基于容器云平台的多子网统一分配IP地址的方法，其特征在于，在确定与所述目标节点绑定的目标IP地址池之后，还包括：响应于所述目标IP地址池不包含未分配的IP地址，检测所述子网中是否存在可用IP地址；响应于所述子网中存在至少一个所述可用IP地址，从至少一个所述可用IP地址中选出所述目标IP地址，并划入所述目标IP地址池。8.一种基于容器云平台的多子网统一分配IP地址的系统，其特征在于，包括：绑定单元，配置为建立所述目标应用与多个IP地址池之间的绑定关系；其中，每个所述IP地址池包含至少一个IP地址，所述容器云平台中包含多个子网，所述子网包含至少一个所述IP地址池中的所有IP地址，每个所述子网与所述容器云平台中的至少一个节点相对应，所述IP地址池与所述容器云平台中的至少一个节点相绑定；确定单元，配置为响应于接收到为所述目标应用的目标应用实例分配IP地址的请求，基于用于部署所述目标应用实例的目标节点的标识信息，确定与所述目标节点绑定的目标IP地址池；分配单元，配置为从所述目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将所述目标IP地址分配给所述目标应用实例，以实现将所述目标应用实例划归所述目标IP地址池对应的子网。9.一种计算机可读存储介质，其上存储有计算机程序，其特征在于，所述计算机程序为如权利要求1-7任一所述的基于容器云平台的多子网统一分配IP地址的方法。10.一种电子设备，其特征在于，包括：存储器、处理器、以及存储在所述存储器中并可在所述处理器上运行的程序，所述处理器执行所述程序时实现如权利要求1-7任一所述的基于容器云平台的多子网统一分配IP地址的方法。
说明书desc
技术领域本申请涉及容器云平台技术领域，特别涉及一种基于容器云平台的多子网统一分配IP地址的方法、系统、计算机可读存储介质和电子设备。背景技术容器云平台中，一个应用通常包含多个应用实例，各应用实例运行在容器组中。为了实现应用实例之间相互通信，需要为每个应用实例所在的容器组分配一个IP地址。传统应用场景下，通常将同一个集群中不同节点的IP地址设置在同一网络中，使得同一集群中的不同应用实例之间可以直接发送通信数据包进行通信。随着容器技术的快速发展，容器云平台中的业务系统越来越复杂，其对应的网络环境也随之变得多样化，生产实践的一些使用场景中，出现了同一集群不同节点属于不同网络的情况，此时，容器云平台管理员通常将不同网络划分一个或多个子网，部署应用时，需要根据应用实例所在的节点，为应用实例手动分配指定子网的IP地址。以Kubernetes系统为例，应用实例部署过程中，容器组的IP地址通常由CNI插件进行分配，默认情况下，CNI插件在所有IP地址中随机选取某个未分配的IP地址分配给新建的容器组，也就是说，CNI插件也无法根据应用实例所部署的节点为应用实例分配指定子网的IP地址，无法实现多子网场景下的IP地址统一分配，虽然相关技术允许容器云平台管理员手动为应用实例分配指定子网的IP地址，但是该分配方式操作繁琐，效率低下，且容易出错。因此，需要提供一种针对上述现有技术不足的改进技术方案。发明内容本申请的目的在于提供一种基于容器云平台的多子网统一分配IP地址的方法、系统、计算机可读存储介质和电子设备，以解决或缓解上述现有技术中存在的问题。为了实现上述目的，本申请提供如下技术方案：本申请提供了一种基于容器云平台的多子网统一分配IP地址的方法，包括：建立所述目标应用与多个IP地址池之间的绑定关系；其中，每个所述IP地址池包含至少一个IP地址，所述容器云平台中包含多个子网，所述子网包含至少一个所述IP地址池中的所有IP地址，每个所述子网与所述容器云平台中的至少一个节点相对应，所述IP地址池与所述容器云平台中的至少一个节点相绑定；响应于接收到为所述目标应用的目标应用实例分配IP地址的请求，基于用于部署所述目标应用实例的目标节点的标识信息，确定与所述目标节点绑定的目标IP地址池；从所述目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将所述目标IP地址分配给所述目标应用实例，以实现将所述目标应用实例划归所述目标IP地址池对应的子网。本实施例中，容器云平台中包含多个子网，由于每个子网与容器云平台中至少一个节点相对应，IP地址池与至少一个节点相绑定，当目标应用实例部署到容器云平台的目标节点时，就可以基于目标节点的标识信息找到与目标节点绑定的目标IP地址池，并从目标IP地址池中选出目标IP地址分配给目标应用实例，这样，无需容器云平台管理员手动操作，即可将目标应用的应用实例划归指定子网，实现多子网场景下的IP地址统一分配。上述技术方案中，所述建立所述目标应用与多个IP地址池之间的绑定关系，具体为：在所述目标应用的资源文件中设置地址池标签字段，并将多个所述IP地址池的标识信息写入所述地址池标签字段中。本实施例中，采用在应用的Deployment文件中设置地址池标签字段，并将IP地址池的标识信息写入地址池标签字段，以建立目标应用与多个IP地址池之间的绑定关系，由于Deployment文件通常由应用管理员在部署目标应用时进行配置，在Deployment文件设置annotation字段作为与IP地址池的绑定字段，使得建立绑定关系的方式符合应用管理员的操作习惯，简单便捷，易于实现。上述技术方案中，所述IP地址池与所述容器云平台中的节点通过以下方式进行绑定：在每个所述IP地址池的资源文件中设置节点亲和性字段；在所述节点亲和性字段中写入至少一个所述容器云平台中的节点的标识信息，以将所述IP地址池与所述容器云平台中的至少一个节点进行绑定。本实施例中，通过在IP地址池的资源文件中设置节点亲和性字段，并基于节点亲和性字段预先建立和存储IP地址池与节点之间的绑定关系，以便为目标应用实例分配IP地址时，能够通过用于部署目标应用实例的目标节点查找并确定目标IP地址池。上述技术方案中，所述容器云平台包含第一子网和第二子网，所述目标IP地址池属于所述第一子网，在将所述目标IP地址池与所述目标节点进行绑定之后，所述方法还包括：将所述目标IP地址池的资源文件中的节点亲和性字段中的所述目标节点的标识信息移除，以解除所述目标节点与所述第一子网的对应关系；在所述第二子网对应的IP地址池的资源文件中的节点亲和性字段中写入所述目标节点的标识信息，以建立所述目标节点与所述第二子网的对应关系。本实施例中，应用实例部署后，可以根据业务需要改变IP地址池的YAML文件中的节点亲和性字段的值，以实现原部署在不同子网中应用实例的动态划归到一个子网中，或者将原部署在同一子网中的应用实例动态划归到不同子网，使得多子网场景下IP地址管理更加灵活，符合业务需求。上述技术方案中，所述节点的标识信息具体为：节点标签；所述在所述节点亲和性字段中写入至少一个所述容器云平台中的节点的标识信息，以将所述IP地址池与所述容器云平台中的至少一个节点进行绑定，具体为：在所述容器云平台中的至少一个节点的资源文件中设置所述节点标签，以将设置有相同所述节点标签的所述至少一个节点作为节点组；将至少一个所述节点标签写入所述IP地址池的节点亲和性字段中，以将所述IP地址池与至少一个所述节点组进行绑定。本实施例中，通过节点标签将多个节点划分为一个节点组，并标签节点写入IP地址池的节点亲和性字段，能够快速将IP地址池与容器云平台中的一组节点进行绑定，提高了IP地址管理的效率。上述技术方案中，所述响应于接收到为所述目标应用的目标应用实例分配IP地址的请求，基于用于部署所述目标应用实例的目标节点的标识信息，确定与所述目标节点绑定的目标IP地址池，具体为：响应于接收到为所述目标应用的目标应用实例分配IP地址的请求，解析所述目标节点的资源文件以获取所述目标节点的标识信息；基于所述目标节点的标识信息确定与所述目标节点绑定的IP地址池；将与所述目标节点绑定的IP地址池作为所述目标IP地址池。本实施例中，当接收到为目标应用实例分配IP地址的请求，通过解析目标节点的资源文件获取其标识信息，并根据目标应用所绑定的IP地址池中记录的节点亲和关系，确定目标IP地址池，从而保证目标应用实例能够分配到目标IP地址池中的IP地址，也就是为目标应用实例分配指定子网的IP地址，使得多子网场景下的IP地址分配过程与单个子网下IP地址的分配过程相互统一，提高了IP地址管理的效率。上述技术方案中，在确定与所述目标节点绑定的目标IP地址池之后，还包括：响应于所述目标IP地址池不包含未分配的IP地址，检测所述子网中是否存在可用IP地址；响应于所述子网中存在至少一个所述可用IP地址，从至少一个所述可用IP地址中选出所述目标IP地址，并划入所述目标IP地址池。本实施例中，在目标IP地址池中没有可用IP地址并不会立刻导致目标应用实例的IP地址分配失败，只要子网还存在可用IP地址，则可以从可用IP地址中选出目标IP地址分配给目标应用实例，以保证业务应用在负载较高时能够顺利扩容。本申请实施例提供一种基于容器云平台的多子网统一分配IP地址的系统，包括：绑定单元，配置为建立所述目标应用与多个IP地址池之间的绑定关系；其中，每个所述IP地址池包含至少一个IP地址，所述容器云平台中包含多个子网，所述子网包含至少一个所述IP地址池中的所有IP地址，每个所述子网与所述容器云平台中的至少一个节点相对应，所述IP地址池与所述容器云平台中的至少一个节点相绑定；确定单元，配置为响应于接收到为所述目标应用的目标应用实例分配IP地址的请求，基于用于部署所述目标应用实例的目标节点的标识信息，确定与所述目标节点绑定的目标IP地址池；分配单元，配置为从所述目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将所述目标IP地址分配给所述目标应用实例，以实现将所述目标应用实例划归所述目标IP地址池对应的子网。本申请实施例还提供一种计算机可读存储介质，其上存储有计算机程序，所述计算机程序为如上任一所述的基于容器云平台的多子网统一分配IP地址的方法。本申请实施例还提供一种电子设备，包括：存储器、处理器、以及存储在所述存储器中并可在所述处理器上运行的程序，所述处理器执行所述程序时实现如上任一所述的基于容器云平台的多子网统一分配IP地址的方法。有益效果：本申请的技术方案中，容器云平台中包含多个子网，每个子网与容器云平台中的至少一个节点相对应，子网包含至少一个IP地址池中的所有IP地址，IP地址池与容器云平台中的至少一个节点相绑定；通过建立目标应用与多个IP地址池之间的绑定关系；当接收到为目标应用的目标应用实例分配IP地址的请求，基于用于部署目标应用实例的目标节点的标识信息，确定与目标节点绑定的目标IP地址池，并从目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将目标IP地址分配给目标应用实例，以实现将目标应用实例划归目标IP地址池对应的子网。由于每个子网与容器云平台中至少一个节点相对应，IP地址池与至少一个节点相绑定，当目标应用实例部署到容器云平台的目标节点时，就可以基于目标节点的标识信息找到与目标节点绑定的目标IP地址池，并从目标IP地址池中选出目标IP地址分配给目标应用实例，这样，无需容器云平台管理员手动操作，即可实现多子网场景下的IP地址统一分配，并通过IP地址分配将目标应用的应用实例划归指定子网。附图说明构成本申请的一部分的说明书附图用来提供对本申请的进一步理解，本申请的示意性实施例及其说明用于解释本申请，并不构成对本申请的不当限定。其中：图1为部署在Kubernetes集群中的应用实例相互通信的示意图；图2为相关技术中为应用实例分配IP地址过程的逻辑示意图；图3为本申请的一些实施例提供的基于容器云平台的多子网统一分配IP地址的逻辑示意图；图4为本申请的一些实施例提供的基于容器云平台的多子网统一分配IP地址的系统架构示意图；图5为本申请的一些实施例提供的基于容器云平台的多子网统一分配IP地址的流程示意图；图6为本申请的一些实施例提供的基于容器云平台的多子网统一分配IP地址的系统结构示意图；图7为根据本申请的一些实施例提供的电子设备的结构示意图；图8为根据本申请的一些实施例提供的电子设备的硬件结构图。具体实施方式下面将参考附图并结合实施例来详细说明本申请。在以下描述中，所涉及的术语“第一/第二/第三”仅仅是区别类似的对象，不代表对对象的特定排序，可以理解地，“第一/第二/第三”在允许的情况下可以互换特定的顺序或先后次序，以使这里描述的本申请实施例能够以除了在这里图示或描述的以外的顺序实施。除另有定义，本文所使用的所有的技术和科学术语与属于本公开的技术领域的技术人员通常理解的含义相同。本文中所使用的术语只是为了描述本公开实施例的目的，不是旨在限制本公开。为了便于理解本申请的技术方案，下面对相关技术进行解释说明。本申请所述容器云平台，是依靠容器技术、结合云原生技术，采用容器、容器编排、服务网格、微服务等技术构建的一种轻量化云平台，Kubernetes集群是应用最广的容器云平台之一。其中，Kubernetes系统是Google开源的容器编排引擎，用于管理容器云平台中多个主机上容器化应用实例。Kubernetes集群是部署有Kubernetes系统的集群，包括多个节点。从集群管理角度，Kubernetes系统将集群中的主机划分为控制节点和工作节点，在控制节点上运行着集群管理相关的一组程序，用于自动完成整个集群的资源管理、容器组调度、弹性伸缩、安全控制、系统监控和纠错等管理能力，工作节点用于部署业务系统对应的应用实例。容器网络接口CNI规范，是一组用于配置Linux容器网络接口的规范和库，其包括网络资源分配接口和网络资源释放接口。CNI插件是一组实现CNI规范的程序，用于在容器组创建时为其分配IP地址等网络资源，以及在容器组被删除时释放其占用的IP地址等网络资源。相关技术中，容器云平台基于扁平网络模型对服务器节点进行统一管理，在扁平网络模型中，容器组处于一个统一的网络中，部署在不同节点的容器组之间无需网络地址转换即可直接通信，可以理解地，运行在容器组中的应用实例也无需网络地址转换就可以直接通信。图1为部署在Kubernetes集群中的应用实例相互通信的示意图。如图1所示，容器云平台通常管理着多个节点，比如节点A和节点B。节点A和节点B分别部署有若干个Pod，每个Pod中运行有至少一个应用实例。由于容器云平台的网络模型为扁平网络模型，节点A和节点B中的所有应用实例均位于同一个网络中，不同应用实例之间可以直接发送通信数据包进行通信，无需经由网关跳转或者网络地址转换。在生产实践中，为了满足某些特殊场景下的使用需求，容器云平台管理员通常将容器云平台的网络划分为多个子网，不同子网之间的通信需要网关跳转，不能相互直接通信，以实现网络逻辑隔离。比如，将属于不同业务系统的应用实例划归不同子网，使得属于不同业务系统的应用实例之间无法直接通信，以保障业务系统内部的网络通信安全。再比如，出于应用开发的需求，需要在集群内部划分为生产环境和测试环境，二者分别属于不同的子网，使得生产环境和测试环境中的所有应用实例之间相互隔离。在多个业务系统的场景下，为了将属于不同业务系统的应用实例划归不同子网，需要在为属于不同业务系统的应用实例分配IP地址时，将子网1的IP地址分配给业务系统A的应用实例，将子网2的IP地址分配给业务系统B的应用实例。在同一集群内划分测试环境和生产环境的场景下，为了将集群内部划分为测试环境和生产环境，需要将每个应用的应用实例1和应用实例2分别部署在测试环境和生产环境中，将子网1的IP地址分配给应用实例1，将子网2的IP地址分配给应用实例2。然而在上述两种场景下，CNI插件在为应用实例分配IP地址时，无法根据实际需求为应用实例分配指定子网的IP地址。具体地，图2为相关技术中为应用实例分配IP地址过程的逻辑示意图。如图2所示，Kubernetes集群中部署有API-Server组件、Scheduler组件、Kubelet组件、CNI插件和IP地址池。IP地址池中包含有至少一个IP地址，为了能够将应用的多个应用实例划归不同子网，可以让IP地址池包含有多个子网的IP地址，IP地址池与CNI插件相对应。在将某一应用部署至Kubernetes集群时，Scheduler组件将根据相关筛选条件和评分，从集群的多个节点中选出合适的节点作为调度目标节点，并将该应用的应用实例调度至该目标节点上。Kubernetes集群的每个节点上均部署有Kubelet组件，各个节点的Kubelet组件通过API-Server组件对应用的调度进行监听，在确定该应用将要被调度至自身后，由目标节点的Kubelet组件创建新的Pod用于部署该应用，并在创建Pod的过程中，通过Kubelet组件向CNI插件发送IP地址分配的请求，用于指示CNI插件为所创建的Pod分配IP地址。CNI插件接收到IP地址分配的请求，从对应的IP地址池中选出一个未分配的IP地址分配给Pod。然而，现有的CNI插件为Pod分配IP地址时，是从对应的IP地址池的全体IP地址中随机选取某个未分配的IP地址分配给Pod。也就是说，即便对应的IP地址池中包含有多个子网的IP地址，现有的CNI插件也无法为应用实例分配指定子网的IP地址，也就无法实现多子网场景下的IP地址统一分配。目前，相关技术允许容器云平台管理员手动为特定应用实例设置属于某个子网的IP地址，从而将同一集群中同一应用的应用实例划归指定的不同子网，但是该分配方式操作繁琐，效率低下，且容易出错。为此，本申请实施例提供一种基于容器云平台的多子网统一分配IP地址的方法、系统、计算机可读存储介质和电子设备。在该技术方案中，容器云平台中包含多个子网，每个子网与容器云平台中的至少一个节点相对应，通过为每个子网建立对应的IP地址池，并建立目标应用与多个IP地址池之间的绑定关系，当接收到为目标应用的目标应用实例分配IP地址的请求时，基于用于部署目标应用实例的目标节点的标识信息，查找并确定与目标节点对应的子网，并结合子网与IP地址池之间的关系，确定与目标节点绑定的目标IP地址池，然后从目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将目标IP地址分配给目标应用实例，从而实现将目标应用实例划归对应的子网。示例性方法本申请实施例提供一种基于容器云平台的多子网统一分配IP地址的方法，如图3、图4、图5所示，该方法包括：步骤S101、建立目标应用与多个IP地址池之间的绑定关系。其中，每个IP地址池包含至少一个IP地址，容器云平台中包含多个子网，子网包含至少一个IP地址池中的所有IP地址，每个子网与容器云平台中的至少一个节点相对应，IP地址池与容器云平台中的至少一个节点相绑定。本申请实施例中，容器云平台管理着多个服务节点，以Kubernetes集群为例，在图3所示的场景中，按照所起作用不同，集群中的节点包括两种：控制节点和工作节点，控制节点上部署有管理整个集群的控制面组件，如API-Server组件、Scheduler组件；工作节点用于运行工作负载，主要用于部署应用实例。生产实践中，为了方便统一管理，集群管理员先对节点和网络资源进行分组，比如将同一集群中的若干个节点作为一个分组，将网络资源划分为多个子网；然后建立子网与节点或者由若干个节点组成的节点组之间的对应关系。换而言之，通过建立子网与节点或者节点组之间的对应关系，集群管理员将同一集群中的若干个节点划归同一子网，相应地，部署在这些节点中的应用实例也应当划归同一子网。在多个业务系统的场景下，为了将属于不同业务系统的应用实例划归不同子网，可以先从集群中选取若干个节点来部署业务系统A的应用实例，然后将子网1中的IP地址分配给业务系统A的应用实例；再从剩余节点中选取若干个节点来部署业务系统B的应用实例，然后将子网2中的IP地址分配给业务系统B的应用实例。在同一集群内划分测试环境和生产环境的场景下，为了满足将集群内部划分为测试环境和生产环境的需求，可以先从集群中选取若干个节点作为测试环境，用于部署每个应用的应用实例，并将子网1的IP地址分配给这些应用实例；再从剩余节点中选取若干个节点作为生产环境，用于部署每个应用的另一些应用实例，并将子网2的IP地址分配给这些应用实例。可以理解，在基于划分完毕的子网还可以为每个子网建立对应的IP地址池，每个IP地址池包含至少一个IP地址，并且IP地址池与容器云平台中的至少一个节点相绑定。由于IP地址池是基于子网创建，与IP地址池对应的子网中应当包含至少一个IP地址池中的所有IP地址。应用部署时，只需将应用与IP地址池绑定，即可将所绑定的IP地址池下的IP地址分配给应用实例。应当理解，虽然相关技术中也使用了IP地址池，但相关技术中所使用的IP地址池是由容器云平台管理员手动指定的一个或多个IP地址组成的集合，其管理和维护工作由容器云平台管理员负责。而本申请提供的IP地址池是容器云平台的自定义资源，其对应的资源文件称为地址池CRD。为此，容器云平台中还部署有地址池控制器，用于根据地址池CRD中的配置信息对IP地址池进行自动管理和维护。具体地，以Kubernetes为例，地址池CRD可以是YAML格式文件，也可以是JSON格式文件。为每个子网创建对应的IP地址池，也就是在地址池CRD文件中定义至少一个IP地址池，地址池CRD文件中记载有每个IP地址池所包含的IP地址，上述为每个子网创建的对应的IP地址池中的IP地址属于不同子网。例如，参照图3，在该Kubernetes集群中，可以YAML文件的形式为Node1对应的子网1建立IP地址池1、为Node2对应的子网2建立IP地址池2、为Node3对应的子网3建立IP地址池3。YAML文件中记载有每个IP地址池对应的网段，每个网段包括至少一个IP地址。比如，在一个示例中，IP地址池1、IP地址池2、IP地址池3的YAML文件内容如下：/＞根据上述内容，集群管理员将子网1对应的IP地址网段作为IP地址池1，将子网2对应的IP地址网段作为IP地址池2，将子网3对应的IP地址网段作为IP地址池3。若要将IP地址池分配给应用，需要在应用部署时将应用与IP地址池绑定。比如要将IP地址池1、IP地址池2、IP地址池3中的IP地址分配给目标应用，就需要在目标应用与上述3个IP地址池之间建立绑定关系，也就是建立目标应用与多个IP地址池之间的绑定关系。应当理解，在不同的应用场景中，与目标应用绑定的多个IP地址池中的各IP地址池可以属于相同的子网，也可以属于不同的子网。以图3所示场景为例，将业务系统A与属于相同的子网的IP地址池1绑定，业务系统A的应用实例就可以分配到子网1的IP地址；将业务系统B与IP地址池2建立绑定关系，业务系统B的应用实例可以分配到子网2的IP地址。由于IP地址池1属于子网1，IP地址池2属于子网2，它们分别与业务系统A、业务系统B绑定后，业务系统A内部能够直接通信、业务系统B内部也能够直接通信；IP地址池1与IP地址池2所属于子网不同，业务系统A与业务系统B之间不能直接通信。这样就实现了业务系统A、业务系统B内部正常通信，同时将业务系统A与业务系统B网络隔离。又比如，假设需要将目标应用分别部署到测试环境和生产环境，Node1、Node2为测试环境，Node3为生产环境，只需将目标应用与Node1的IP地址池1、Node2的IP地址池2、Node3的IP地址池3均建立绑定关系，即实现部署在Node1上的应用实例自动获得子网1的IP地址，部署在Node2上的应用实例自动获得子网2的IP地址，部署在Node3上的应用实例自动获得子网2的IP地址，且部署在测试环境Node1、Node2上的应用实例与部署在生产环境Node3上的应用实例相互隔离。也就是说，对于目标应用，不管其绑定的多个IP地址池是属于同一子网，还是属于不同子网，本申请实施例均能够在统一的逻辑下为其对应的应用实例分配IP地址，无需容器云平台管理员进行手动设置IP地址，从而实现多子网环境下的IP地址统一分配。在一些实施例中，建立目标应用与多个IP地址池之间的绑定关系，具体为：在目标应用的资源文件中设置地址池标签字段，并将多个IP地址池的标识信息写入地址池标签字段中。具体地，在目标应用的资源文件中新增地址池标签字段，用于设置IP地址池的标识信息，并将多个IP地址池的标识信息写入地址池标签字段中，以建立目标应用与多个IP地址池之间的绑定关系。示例性地，以将目标应用分别部署到测试环境和生产环境为例，参见图3，可以在目标应用的Deployment文件设置annotation字段，并在annotation字段写入IP地址池1、IP地址池2、IP地址池3的标识信息，即可建立起目标应用与IP地址池1、IP地址池2、IP地址池3之间的绑定关系。其中，IP地址池的标识信息可以是IP地址池的名称，或者IP地址池创建时自动分配的唯一标识符UUID。作为一个示例，目标应用的Deployment文件内容如下：由此，应用管理员在部署目标应用时，只需在目标应用的资源文件的IP地址池标签字段中设置目标IP地址池的标识信息，即可建立起目标应用与多个IP地址池之间的绑定关系，简单便捷，易于操作。为了将部署在容器云平台中不同节点中的应用实例划归对应的子网，需要将归属于对应子网的IP地址池与相应的节点绑定，为此，本申请实施例中，IP地址池与容器云平台中的节点通过以下方式进行绑定：在每个IP地址池的资源文件中设置节点亲和性字段；在节点亲和性字段中写入至少一个容器云平台中的节点的标识信息，以将IP地址池与容器云平台中的至少一个节点进行绑定。本申请实施例中，IP地址池的资源文件也称为地址池CRD文件，在每个地址池CRD文件中新增nodeAffinity字段，作为节点亲和性字段，在nodeAffinity字段下写入节点的标识信息，即可在该节点和IP地址池之间建立对应关系。CNI插件在为目标应用的应用实例分配IP地址时，根据该应用实例部署的节点，基于上述对应关系，从对应的IP地址池中选择未分配的IP地址进行分配，从而将该应用实例划归对应的子网。应当理解，本申请实施例中，地址池CRD的节点亲和性字段中可以写入一个节点的标识信息，也可以写入多个节点的标识信息，以建立IP地址池与一个或者多个节点之间的对应关系。当IP地址池与多个节点存在对应关系时，多个节点上部署的应用实例均可以从IP地址池中获取未分配的IP地址进行分配。仍以图3中的Kubernetes集群为例，通过在IP地址池1对应的地址池CRD文件中设置nodeAffinity字段，集群管理员只需在nodeAffinity字段下设置与IP地址池1具有亲和关系的节点的标识信息，即可在Node1和IP地址池1之间建立起对应关系。这样，当目标应用的应用实例被调度到Node1时，基于该对应关系即可根据Node1的标识信息查找到对应的IP地址池1，并从IP地址池1中选出未分配的IP地址进行分配。需要说明的是，在节点与IP地址池建立对应关系时，写入节点亲和性字段的节点的标识信息可以是节点名称、节点ID或者节点标签。优选地，节点的标识信息具体为：节点标签；在节点亲和性字段中写入至少一个容器云平台中的节点的标识信息，以将IP地址池与容器云平台中的至少一个节点进行绑定，具体为：在容器云平台中的至少一个节点的资源文件中设置节点标签，以将设置有相同节点标签的至少一个节点作为节点组；将至少一个节点标签写入IP地址池的节点亲和性字段中，以将IP地址池与至少一个节点组进行绑定。需要说明的是，节点标签是附加到节点的资源文件中的键值对，用于对节点进行组织和管理。本申请实施例中，节点标签用于与选择算符配合使用，从容器云平台的所有节点中选择出具有相同节点标签的节点子集作为节点组，并通过将节点标签写入IP地址池的节点亲和性字段中，实现将节点组与IP地址池绑定。具体地，在容器云平台的多个节点对应的YAML文件中相同的键值对，使它们具有相同的节点标签，以将多个节点作为节点组统一进行IP地址池的管理。同时，在IP地址池对应的地址池CRD文件中的nodeAffinity字段写入该节点标签，即可将多个节点划归同一个子网。可以理解，可以将一个或多个节点标签写入IP地址池的节点亲和性字段，当节点亲和性字段写入多个节点标签时，能够将该多个节点标签对应的多组节点划归同一个子网，大大提高了IP地址池的管理效率。在一个示例中，容器云平台中包括节点1～6，其中，节点1、2、3使用同一个节点标签zone1，节点4、5、6使用同一个节点标签zone2，要将节点1、2、3划归子网1，节点4、5、6划归子网2，只需在子网1对应的IP地址池1的CRD中的nodeAffinity字段下设置节点标签zone1，在子网2对应的IP地址池2的CRD中的nodeAffinity字段下设置节点标签zone2即可；要将子网2中的节点4、5、6统一划归子网1，只需要将子网2对应的IP地址池2的CRD中的nodeAffinity字段下的节点标签zone2删除，并在子网1对应的IP地址池1的CRD中的nodeAffinity字段下同时设置节点标签zone1和zone2即可；要将子网1中的节点4、5、6从子网1中移出，划归子网3，只需将子网1对应的IP地址池1的CRD中的nodeAffinity字段下的节点标签zone2删除，并在子网3对应的IP地址池3的CRD中的nodeAffinity字段下设置节点标签zone2即可。步骤S102、响应于接收到为目标应用的目标应用实例分配IP地址的请求，基于用于部署目标应用实例的目标节点的标识信息，确定与目标节点绑定的目标IP地址池。本申请实施例中，容器云平台将目标应用实例调度至目标节点，由于目标应用与多个IP地址池绑定，每个IP地址池又与容器云平台中至少一个节点绑定，当接收到为目标应用的目标应用实例分配IP地址的请求时，就能够根据目标节点的标识信息，在与目标应用绑定的多个IP地址池中确定目标IP地址池。进一步地，响应于接收到为目标应用的目标应用实例分配IP地址的请求，基于用于部署目标应用实例的目标节点的标识信息，确定与目标节点绑定的目标IP地址池，具体为：响应于接收到为目标应用的目标应用实例分配IP地址的请求，解析目标节点的资源文件以获取目标节点的标识信息；基于目标节点的标识信息确定与目标节点绑定的IP地址池；将与目标节点绑定的IP地址池作为目标IP地址池。示例性地，参见图3，在将目标应用部署至Kubernetes集群中时，Scheduler组件根据相关筛选条件和评分，确定要将目标应用调度至目标节点，如Node1。Node1上的Kubelet组件在确定目标应用实例被调度至自身所在节点后，创建用于部署目标应用实例的Pod，并在创建Pod的过程中向CNI插件发送分配IP地址的请求。CNI插件接收到分配IP地址的请求后，根据Node1的资源文件中设置的节点标签，确定Node1对应的目标IP地址池，即IP地址池1。在一些实施方式中，可以通过设置节点亲和性字段改变容器云平台中任意节点所对应的子网，具体地，容器云平台包含第一子网和第二子网，目标IP地址池属于第一子网，在将目标IP地址池与目标节点进行绑定之后，该方法还包括：将目标IP地址池的资源文件中的节点亲和性字段中的目标节点的标识信息移除，以解除目标节点与第一子网的对应关系；在第二子网对应的IP地址池的资源文件中的节点亲和性字段中写入目标节点的标识信息，以建立目标节点与第二子网的对应关系。基于前述说明可知，容器云平台包含多个子网。本申请实施例中，与目标节点绑定的目标IP地址池属于第一子网，第二子网为第一子网以外的任一子网。在目标IP地址池的YAML文件中的节点亲和性字段中将目标节点的标识信息移除，从而解除目标IP地址池与目标节点之间的对应关系，也就是解除了目标节点与第一子网之间的对应关系，使得部署在目标节点上的应用实例不再划归第一子网。然后，在第二子网对应的IP地址池的YAML文件的节点亲和性字段中写入目标节点的标识信息，从而动态将目标节点上部署的应用实例划入第二子网。也就是说，应用实例部署后，可以根据业务需要改变IP地址池的YAML文件中的节点亲和性字段，以实现原部署在不同子网中应用实例的动态划归到一个子网中，或者将原部署在同一子网中的应用实例动态划归到不同子网。示例性地，在图3所示场景中，目标应用分别部署到测试环境和生产环境，其中，Node1、Node2为测试环境，对应子网1和子网2，Node3为生产环境，对应子网3。当完成测试，且子网1的应用实例全部符合业务要求时，只需要先将Node1的标识信息从IP地址池1中的nodeAffinity字段删除，以解除Node1与子网1的对应关系，然后在IP地址池3的YAML文件的nodeAffinity字段中写入Node1的标识信息，即可建立Node1与子网3的对应关系，从而将Node1上所部署的应用实例整体划归子网3，即从测试环境划归生产环境。在一些实施例中，在确定与目标节点绑定的目标IP地址池之后，还包括：响应于目标IP地址池不包含未分配的IP地址，检测子网中是否存在可用IP地址；响应于子网中存在至少一个可用IP地址，从至少一个可用IP地址中选出目标IP地址，并划入目标IP地址池。其中，可用IP地址是指该IP地址既没有划归任一IP地址池，也没有被任一应用实例占用。具体地，在容器云平台中，由CNI插件维护所有IP地址池中记录的IP地址分配数据，在确定与目标节点绑定的目标IP地址池之后，通过CNI插件查询目标IP地址池的IP地址分配数据，就可以目标IP地址池是否还有未分配的IP地址。若目标IP地址池没有未分配的IP地址，说明目标IP地址池中已无可分配IP地址，为了保证新建的Pod能够成功分配到IP地址，本申请实施例中，在目标IP地址池中已无可分配IP地址的情况下，则检测目标IP地址池所在子网中是否存在可用IP地址，若检测到子网中存在至少一个可用IP地址，在这些可用IP地址中选出目标IP地址分配给新建的Pod，并将该目标IP地址划入目标IP地址池。步骤S103、从目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将目标IP地址分配给目标应用实例，以实现将目标应用实例划归目标IP地址池对应的子网。本申请实施例中，在确定与目标节点绑定的目标IP地址池之后，CNI插件根据目标IP地址池对应的地址池CRD中记载的IP地址分配数据，选取某个未分配的IP地址，将该IP地址与该Pod进行绑定，也就是将IP地址与该应用实例进行绑定，并在IP地址分配数据中将该IP地址标记为已分配状态，以实现将目标应用实例划归目标IP地址池对应的子网。需要说明的是，CNI插件可以分为三类，分别是：main插件、IPAM插件和meta插件。其中，main插件主要用来创建具体的网络设备的二进制文件；IPAM插件主要负责为Kubernetes集群中的Pod分配IP地址；meta插件为扩展插件，需要结合main插件和IPAM插件实现。基于上述三类CNI插件的作用，Kubelet组件调用CNI插件为Pod分配IP地址的具体过程为：Kubelet组件调用main插件，再由main插件调用IPAM插件来为Pod分配IP地址。为了实现多子网统一分配IP地址，本申请实施例中，采用地址池控制器组件、地址池代理、地址池CRD替代原有CNI插件中的IPAM插件为目标应用的目标应用实例分配IP地址。具体地，参见图4，地址池控制器组件以Deployment的形式部署在控制节点上，用于管理本申请实施例提供的自定义资源，即管理地址池CRD，也就是基于地址池CRD的内容自动创建、更新和维护IP地址池的状态。地址池代理以Daemonset的形式部署在Kubernetes集群的所有工作节点中。当目标应用的目标应用实例被调度到Kubernetes集群的某个工作节点，该工作节点上的Kubelet组件创建用于部署应用实例的Pod，并向CNI插件发送为Pod分配IP地址的请求，地址池代理接收CNI插件中的IPAM插件转发的分配IP地址的请求，并从目标IP地址池中选出未分配的IP地址分配给Pod，以实现将目标应用实例划归目标IP地址池对应的子网。综上所述，本申请的技术方案中，容器云平台中包含多个子网，每个子网与容器云平台中的至少一个节点相对应，子网包含至少一个IP地址池中的所有IP地址，IP地址池与容器云平台中的至少一个节点相绑定；通过建立目标应用与多个IP地址池之间的绑定关系；当接收到为目标应用的目标应用实例分配IP地址的请求，基于用于部署目标应用实例的目标节点的标识信息，确定与目标节点绑定的目标IP地址池，并从目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将目标IP地址分配给目标应用实例，以实现将目标应用实例划归目标IP地址池对应的子网。由于每个子网与容器云平台中至少一个节点相对应，IP地址池与至少一个节点相绑定，当目标应用实例部署到容器云平台的目标节点时，就可以基于目标节点的标识信息找到与目标节点绑定的目标IP地址池，并从目标IP地址池中选出目标IP地址分配给目标应用实例，这样，无需容器云平台管理员手动操作，即可实现多子网场景下的IP地址统一分配，并通过IP地址分配将目标应用的应用实例划归指定子网。示例性系统本申请实施例提供一种基于容器云平台的多子网统一分配IP地址的系统，如图6所示，该系统包括：绑定单元601、确定单元602和分配单元603。其中：绑定单元601，配置为建立目标应用与多个IP地址池之间的绑定关系；其中，每个IP地址池包含至少一个IP地址，容器云平台中包含多个子网，子网包含至少一个IP地址池中的所有IP地址，每个子网与容器云平台中的至少一个节点相对应，IP地址池与容器云平台中的至少一个节点相绑定。确定单元602，配置为响应于接收到为目标应用的目标应用实例分配IP地址的请求，基于用于部署目标应用实例的目标节点的标识信息，确定与目标节点绑定的目标IP地址池。分配单元603，配置为从目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将目标IP地址分配给目标应用实例，以实现将目标应用实例划归目标IP地址池对应的子网。本申请实施例提供的基于容器云平台的多子网统一分配IP地址的系统，能够实现上述任一实施例的基于容器云平台的多子网统一分配IP地址的方法的流程、步骤，并达到相同的技术效果，在此不再一一赘述。示例性设备图7为根据本申请的一些实施例提供的电子设备的结构示意图；如图7所示，该电子设备包括：一个或多个处理器701；计算机可读介质，可以配置为存储一个或多个程序702，一个或多个处理器701执行一个或多个程序702时，实现如下步骤：建立目标应用与多个IP地址池之间的绑定关系；其中，每个IP地址池包含至少一个IP地址，容器云平台中包含多个子网，子网包含至少一个IP地址池中的所有IP地址，每个子网与容器云平台中的至少一个节点相对应，IP地址池与容器云平台中的至少一个节点相绑定；响应于接收到为目标应用的目标应用实例分配IP地址的请求，基于用于部署目标应用实例的目标节点的标识信息，确定与目标节点绑定的目标IP地址池；从目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将目标IP地址分配给目标应用实例，以实现将目标应用实例划归目标IP地址池对应的子网。图8为根据本申请的一些实施例提供的电子设备的硬件结构；如图8所示，该电子设备的硬件结构可以包括：处理器801、通信接口802、计算机可读介质803和通信总线804。其中，处理器801、通信接口802、计算机可读存储介质803通过通信总线804完成相互间的通信。可选地，通信接口802可以为通信模块的接口，如GSM模块的接口。其中，处理器801具体可以配置为：建立目标应用与多个IP地址池之间的绑定关系；其中，每个IP地址池包含至少一个IP地址，容器云平台中包含多个子网，子网包含至少一个IP地址池中的所有IP地址，每个子网与容器云平台中的至少一个节点相对应，IP地址池与容器云平台中的至少一个节点相绑定；响应于接收到为目标应用的目标应用实例分配IP地址的请求，基于用于部署目标应用实例的目标节点的标识信息，确定与目标节点绑定的目标IP地址池；从目标IP地址池包含的至少一个未分配的IP地址中选出目标IP地址，并将目标IP地址分配给目标应用实例，以实现将目标应用实例划归目标IP地址池对应的子网。处理器801可以是通用处理器，包括中央处理器、网络处理器等，还可以是数字信号处理器、专用集成电路、现成可编程门阵列或者其他可编程逻辑器件、分立门或者晶体管逻辑器件、分立硬件组件。可以实现或者执行本申请实施例中的公开的各方法、步骤及逻辑框图。通用处理器可以是微处理器或者该处理器也可以是任何常规的处理器等。本申请实施例的电子设备以多种形式存在，包括但不限于：移动通信设备：这类设备的特点是具备移动通信功能，并且以提供话音、数据通信为主要目标。这类终端包括：智能手机、多媒体手机、功能性手机，以及低端手机等。超移动个人计算机设备：这类设备属于个人计算机的范畴，有计算和处理功能，一般也具备移动上网特性。这类终端包括：PDA、MID和UMPC设备等，例如iPad。便携式娱乐设备：这类设备可以显示和播放多媒体内容。该类设备包括：音频、视频播放器，掌上游戏机，电子书，以及智能玩具和便携式车载导航设备。服务器：提供计算服务的设备，服务器的构成包括处理器、硬盘、内存、系统总线等，服务器和通用的计算机架构类似，但是由于需要提供高可靠的服务，因此在处理能力、稳定性、可靠性、安全性、可扩展性、可管理性等方面要求较高。其他具有数据交互功能的电子装置。需要指出，根据实施的需要，可将本申请实施例中描述的各个部件/步骤拆分为更多部件/步骤，也可以将两个或多个部件/步骤或者部件/步骤的部分操作组合成新的部件/步骤，以实现本申请实施例的目的。上述根据本申请实施例的方法可在硬件、固件中实现，或者被实现为可存储在记录介质中的软件或计算机代码，或者被实现通过网络下载的原始存储在远程记录介质或非暂时机器存储介质中并将被存储在本地记录介质中的计算机代码，从而在此描述的方法可被存储在使用通用计算机、专用处理器或者可编程或专用硬件的记录介质上的这样的软件处理。可以理解，计算机、处理器、微处理器控制器或可编程硬件包括可存储或接收软件或计算机代码的存储组件，当软件或计算机代码被计算机、处理器或硬件访问且执行时，实现在此描述的基于容器云平台的多子网统一分配IP地址的方法。此外，当通用计算机访问用于实现在此示出的方法的代码时，代码的执行将通用计算机转换为用于执行在此示出的方法的专用计算机。本领域普通技术人员可以意识到，结合本文中所公开的实施例描述的各示例的单元及方法步骤，能够以电子硬件、或者计算机软件和电子硬件的结合来实现。这些功能究竟以硬件还是软件方式来执行，取决于技术方案的特定应用和涉及约束条件。专业技术人员可以对每个特定的应用来使用不同方法来实现所描述的功能，但是这种实现不应认为超出本申请实施例的范围。需要说明的是，本说明书中的各个实施例均采用递进的方式描述，各个实施例之间相同相似的部分互相参见即可，每个实施例重点说明的都是与其他实施例的不同之处。尤其，对于设备及系统实施例而言，由于其基本相似于方法实施例，所以描述得比较简单，相关之处参见方法实施例的部分说明即可。以上所描述的设备及系统实施例仅仅是示意性的，其中作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元提示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部模块来实现本实施例方案的目的。本领域普通技术人员在不付出创造性劳动的情况下，即可以理解并实施。以上所述仅为本申请的优选实施例，并不用于限制本申请，对于本领域的技术人员来说，本申请可以有各种更改和变化。凡在本申请的精神和原则之内，所作的任何修改、等同替换、改进等，均应包含在本申请的保护范围之内。
