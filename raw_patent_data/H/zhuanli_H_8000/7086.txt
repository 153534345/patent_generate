标题title
一种ARM64架构下基于jailhouse隔离PCIe网卡的方法
摘要abst
本发明提供一种ARM64架构下基于jailhouse隔离PCIe网卡的方法，删除主机使用的设备树文件中的gic‑its节点和PCIe节点；将gic‑its节点和PCIe节点添加至jailhouse non root cell的设备树文件中；通过设备树文件中的inteerupt‑controller节点中的reg属性，获取gic redistributor的内存地址和内存大小；将gic redistributor的内存地址和内存大小添加到root cell和non root cell的配置文件中；运行jailhouse，non root cell中的guest os正常使用PCIe网卡。
权利要求书clms
1.一种ARM64架构下基于jailhouse隔离PCIe网卡的方法，其特征在于，包括以下步骤：S1、删除主机使用的设备树文件中的gic-its节点和PCIe节点；S2、将S1中的gic-its节点和PCIe节点添加至jailhouse non root cell的设备树文件中；S3、通过主机使用的设备树文件中的inteerupt-controller节点中的reg属性，获取gic redistributor的内存地址和内存大小；S4、将gic redistributor的内存地址和内存大小添加到root cell和non root cell的配置文件中；S5、运行jailhouse，non root cell中的guest os正常使用PCIe网卡。2.基于权利要求1所述的一种ARM64架构下基于jailhouse隔离PCIe网卡的方法，其特征在于，所述S1具体为：删除主机使用的设备树文件ft2004-devboard.dts中的gic-its节点和PCIe节点，从而将中断翻译服务和PCIe网卡设备从主机中移除。3.基于权利要求1所述的一种ARM64架构下基于jailhouse隔离PCIe网卡的方法，其特征在于：所述S3具体为：通过主机使用的设备树ft2004-devboard.dts，获取interrupt-controller节点中的reg属性，从而获取reg属性中的第六个元素的值0x29980000，第八个元素的值0x80000，其分别表示gic redistributor的内存地址和内存大小。4.基于权利要求1所述的一种ARM64架构下基于jailhouse隔离PCIe网卡的方法，其特征在于：所述步骤S4具体为：修改root cell的配置文件main.c，在mem_regions数组中添加如下内容，使得jailhouse root cell对gic redistributor的地址可进行读写：{ .phys_start=0x29980000,.virt_start=0x29980000,.size=0x80000,.flags=JAILHOUSE_MEM_READ|JAILHOUSE_MEM_WRITE|JAILHOUSE_MEM_IO}；修改non root cell的配置文件inmate.c，在mem_regions数组中添加如下内容，使得jailhouse non root cell对gic redistributor的地址可进行读写：{.phys_start=0x29980000,.virt_start=0x29980000,.size=0x80000, .flags=JAILHOUSE_MEM_READ|JAILHOUSE_MEM_WRITE|JAILHOUSE_MEM_IO|JAILHOUSE_MEM_ROOTSHARED }。
说明书desc
技术领域本发明涉及一种计算机PCIe网卡隔离，尤其涉及一种ARM64架构下基于jailhouse隔离PCIe网卡的方法。背景技术Jailhouse是一个针对创建工业级应用程序的小型Hypervisor，Jailhouse在现有Linux之上启用非对称多处理方式，并将系统拆分成称为cell的独立分区。主机首先运行的是root cell，加载host os，新的cell为non root cell，加载的是guest os，每个 cell 运行一个OS 并拥有一组完全控制的分配资源。但是当前开源的jailhouse程序在ARM64架构的机器上还没有实现物理PCIe设备的隔离，例如无法将一个PCIe网卡隔离给guest os使用。因此如何提供一种在ARM64架构下将物理PCIe网卡隔离给guest os的方法是本领域技术人员亟需解决的问题。发明内容针对上述问题，本发明提供一种ARM64架构下基于jailhouse隔离PCIe网卡的方法；通过修改主机的设备树，去掉设备树中的gic-its节点、PCIe节点，并将这两个节点添加到jailhouse的non root cell的设备树文件中，则non root cell中的guest os可以拥有完整的gic-its设备和PCIe主桥设备，从而PCIe网卡也被隔离到guest os中；然后将gicredistributor的内存地址和内存大小分别添加到root cell和non root cell的配置文件中，则non root cell运行的guest os可以访问gic中的redistributor硬件，这样non rootcell中的guest os可以正确配置PCIe网卡的IP地址，正常上网。为实现上述目的，本发明公开了一种ARM64架构下基于jailhouse隔离PCIe网卡的方法，包括以下步骤：S1、删除主机使用的设备树文件中的gic-its节点和PCIe节点；S2、将S1中的gic-its节点和PCIe节点添加至jailhouse non root cell的设备树文件中；S3、通过主机使用的设备树文件中的inteerupt-controller节点中的reg属性，获取gic redistributor的内存地址和内存大小；S4、将gic redistributor的内存地址和内存大小添加到root cell和non rootcell的配置文件中；S5、运行jailhouse，non root cell中的guest os正常使用PCIe网卡。进一步的，所述S1具体为：删除主机使用的设备树文件ft2004-devboard.dts中的gic-its节点和PCIe节点，从而将中断翻译服务和PCIe网卡设备从主机中移除。进一步的，所述S3具体为：通过主机使用的设备树ft2004-devboard.dts，获取interrupt-controller节点中的reg属性，从而获取reg属性中的第六个元素的值0x29980000，第八个元素的值0x80000，其分别表示gic redistributor的内存地址和内存大小。进一步的，所述步骤S4具体为：修改root cell的配置文件main.c，在mem_regions数组中添加如下内容，使得jailhouse root cell对gic redistributor的地址可进行读写：{.phys_start=0x29980000,.virt_start=0x29980000,.size=0x80000,.flags=JAILHOUSE_MEM_READ|JAILHOUSE_MEM_WRITE|JAILHOUSE_MEM_IO}；修改non root cell的配置文件inmate.c，在mem_regions数组中添加如下内容，使得jailhouse non root cell对gic redistributor的地址可进行读写：{.phys_start=0x29980000,.virt_start=0x29980000,.size=0x80000,.flags=JAILHOUSE_MEM_READ|JAILHOUSE_MEM_WRITE|JAILHOUSE_MEM_IO|JAILHOUSE_MEM_ROOTSHARED}。本发明的一种ARM64架构下基于jailhouse隔离PCIe网卡的方法的有益效果为：gic redistributor的内存地址和内存大小分别添加到root cell和non root cell的配置文件中，则non root cell运行的guest os可以访问gic中的redistributor硬件，这样nonroot cell中的guest os可以正确配置PCIe网卡的IP地址，正常上网，从而实现一种在ARM64架构下将物理PCIe网卡隔离给guest os。附图说明下面结合附图和具体实施方式对本发明作进一步详细的说明。图1是本发明的隔离PCIe网卡的整体流程示意图。具体实施方式下面结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述。在下面的描述中阐述了很多具体细节以便于充分理解本发明，但是本发明还可以采用其他不同于在此描述的其它方式来实施，本领域技术人员可以在不违背本发明内涵的情况下做类似推广，因此本发明不受下面公开的具体实施例的限制。本申请的实施例公开了一种ARM64架构下基于jailhouse隔离PCIe网卡的方法，包括以下步骤：S1、删除主机使用的设备树文件中的gic-its节点和PCIe节点；S2、将S1中的gic-its节点和PCIe节点添加至jailhouse non root cell的设备树文件中；S3、通过主机使用的设备树文件中的inteerupt-controller节点中的reg属性，获取gic redistributor的内存地址和内存大小；S4、将gic redistributor的内存地址和内存大小添加到root cell和non rootcell的配置文件中；S5、运行jailhouse，non root cell中的guest os正常使用PCIe网卡。为进一步优化上述技术方案，S1具体为：删除主机使用的设备树文件ft2004-devboard.dts中的gic-its节点和PCIe节点，从而将中断翻译服务和PCIe网卡设备从主机中移除。为进一步优化上述技术方案，S3具体为：通过主机使用的设备树ft2004-devboard.dts，获取interrupt-controller节点中的reg属性，从而获取reg属性中的第六个元素的值0x29980000，第八个元素的值0x80000，其分别表示gic redistributor的内存地址和内存大小。为进一步优化上述技术方案，步骤S4具体为：修改root cell的配置文件main.c，在mem_regions数组中添加如下内容，使得jailhouse root cell对gic redistributor的地址可进行读写：{.phys_start=0x29980000,.virt_start=0x29980000,.size=0x80000,.flags=JAILHOUSE_MEM_READ|JAILHOUSE_MEM_WRITE|JAILHOUSE_MEM_IO}；修改non root cell的配置文件inmate.c，在mem_regions数组中添加如下内容，使得jailhouse non root cell对gic redistributor的地址可进行读写：{.phys_start=0x29980000,.virt_start=0x29980000,.size=0x80000,.flags=JAILHOUSE_MEM_READ|JAILHOUSE_MEM_WRITE|JAILHOUSE_MEM_IO|JAILHOUSE_MEM_ROOTSHARED}。准备一台ft2004开发板，安装CentOS8.1系统，安装Jailhosue代码，并准备开发板主机启动时所用的设备树文件ft2004-devboard.dts，测试jailhouse时启动root cell的配置文件main.c, 启动non root cell所需的配置文件inmate.c，设备树文件inmate-ama.dts，文件系统文件rootfs.cpio，内核镜像文件Image。图1所示为本申请的隔离PCIe网卡的整体流程示意图，包括：a.修改开发板主机和jailhouse启动non root cell时的设备树文件a1.在开发板主机启动时所用的设备树文件ft2004-devboard.dts中删掉gic-its节点、PCIe节点内容，从而将中断翻译服务从主机中移除，以供jailhouse的non root cel使用，并使得PCIe设备在主机中移除，以供jailhouse的non root cell使用。a2.将a1步骤中gic-its节点、PCIe节点内容添加到non root cell的设备树文件inmate-ama.dts中，则jailhouse的non root cell含有its硬件，及PCIe网卡设备可用。b.修改jailhouse的配置文件，添加jailhouse对中断控制器的访问b1.查看开发板主机启动时所用的设备树文件ft2004-devboard.dts，找到interrupt-controller节点中的reg属性，查看该属性中的第六个元素的值为0x29980000，第八个元素的值为0x80000，其分别表示gic redistributor的内存地址和内存大小。b2.修改root cell的配置文件main.c，在mem_regions数组中添加下面内容，使得jailhouse root cell对gic redistributor的地址可进行读写：{.phys_start=0x29980000,.virt_start=0x29980000,.size=0x80000,.flags=JAILHOUSE_MEM_READ|JAILHOUSE_MEM_WRITE|JAILHOUSE_MEM_IO}；b3.修改non root cell的配置文件inmate.c，在mem_regions数组中添加下面内容，使得jailhouse non root cell对gic redistributor的地址可进行读写：{.phys_start=0x29980000,.virt_start=0x29980000,.size=0x80000,.flags=JAILHOUSE_MEM_READ|JAILHOUSE_MEM_WRITE|JAILHOUSE_MEM_IO|JAILHOUSE_MEM_ROOTSHARED}；编译安装代码，加载驱动之后，验证方法如下：a.启动hypervisor及root cell：jailhouse enable main.cell串口最后输出下面信息，表示hypervisor正常启动：Activating hypervisorb.使用以下命令启动non root cell：jailhouse cell inmate.cell Image -d inmate-ama.dtb -i rootfs.cpio -c"earlycon=PL011,0x28000000 console=ttyAMA0,115200 root=/dev/ram0 ramdisk_size=0x1000000"c.进入guest os，在命令终端中输入ip a命令，发现PCIe网卡，并且配置名字为eth0，eth0: ＜BROADCAST,MULTICAST,UP,LOWER_UP＞ mtu 1500 qdisc mq state UPgroup default qlen 1000link/ether 98:0e:24:3a:30:4e brd ff:ff:ff:ff:ff:ff配置ip地址，设置网络：ifconfig eth0 172.17.8.114 netmask 255.255.254.0route add default gateway 172.17.8.253d.使用下面命令测试是否可以正常访问网络：ping www.baidu.com打印出类似下面结果，表明PCIe网卡成功隔离给了jailhouse的non root cell正在 Ping www.a.shifen.com 具有32字节的数据：来自 220.181.38.149 的回复：字节=32 时间=25ms TTL=52来自 220.181.38.149 的回复：字节=32 时间=6ms TTL=52来自 220.181.38.149 的回复：字节=32 时间=9ms TTL=52来自 220.181.38.149 的回复：字节=32 时间=10ms TTL=52220.181.38.149 的 Ping 统计信息:数据包:已发送=4，已接收=4，丢失=0，往返行程的估计时间:最短 =6ms，最长=25ms，平均=12ms因此，本发明通过修改主机的设备树、jailhouse non root cell的设备树，及jailhouse的配置文件，实现了在ARM64架构下，将物理PCIe网卡隔离给guest os的目的。显然，所描述的实施例仅仅是本发明的一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。
