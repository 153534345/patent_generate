标题title
视频转码系统、方法、GPU以及电子设备和存储介质
摘要abst
本公开涉及一种视频转码系统、方法、GPU以及电子设备和存储介质，所述系统包括：多个GPU，其中，所述多个GPU之间通过视频转码互连总线连接，所述多个GPU中包括一个主控GPU；所述主控GPU，用于在所述多个GPU之间进行视频转码任务的分配；所述多个GPU之间基于所述视频转码互连总线，对所述视频转码任务对应的转码处理数据进行传输。本公开实施例可以基于视频转码互连总线，实现各个GPU之间对视频转码任务对应的转码处理数据进行高速传输。
权利要求书clms
1.一种视频转码系统，其特征在于，所述系统包括：多个图形处理器GPU，其中，所述多个GPU之间通过视频转码互连总线连接，所述多个GPU中包括一个主控GPU；所述主控GPU，用于在所述多个GPU之间进行视频转码任务的分配；所述多个GPU之间基于所述视频转码互连总线，对所述视频转码任务对应的转码处理数据进行传输。2.根据权利要求1所述的系统，其特征在于，所述主控GPU中包括：配置模块；所述配置模块，用于对所述多个GPU中执行所述视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。3.根据权利要求2所述的系统，其特征在于，针对任意一个GPU，基于所述配置模块配置的内存地址信息，利用所述视频转码互连总线从其它GPU的DDR内存中读取需要进行转码的转码处理数据。4.根据权利要求1至3中任意一项所述的系统，其特征在于，所述主控GPU，还用于在所述多个GPU中的第一GPU的运行负载超过预设阈值的情况下，将所述第一GPU对应的处于未处理状态的视频转码任务，分配至所述多个GPU中的第二GPU，其中，所述第二GPU的运行负载未超过所述预设阈值。5.根据权利要求1至4中任意一项所述的系统，其特征在于，所述视频转码任务包括下述至少一种：解码任务、渲染任务、视频处理任务、编码任务。6.根据权利要求1至5中任意一项所述的系统，其特征在于，所述多个GPU位于一个电路板；或，所述多个GPU位于多个电路板。7.一种GPU，其特征在于，所述GPU包括主控GPU，所述主控GPU通过视频转码互连总线与从属GPU连接，所述主控GPU包括：任务分配模块，用于在所述主控GPU以及所述从属GPU之间进行视频转码任务的分配；配置模块，用于对所述主控GPU以及所述从属GPU执行所述视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。8.根据权利要求7所述的GPU，其特征在于，所述GPU还包括：转码模块，用于执行所述视频转码任务，以及将得到的转码处理数据存储在所述GPU的DDR内存中；所述主控GPU，还用于基于所述配置模块配置的内存地址信息以及视频帧级别的同步，通过所述视频转码互连总线，从每个所述GPU的DDR内存中读取对应的转码处理数据进行转码处理后，得到转码结果；数据传输模块，用于通过PCIE总线或以太网，输出所述转码结果。9.根据权利要求7所述的GPU，其特征在于，所述GPU还包括：转码模块，用于执行所述视频转码任务，以及将得到的转码处理数据存储在所述GPU的DDR内存中；每个所述GPU，分别对所述任务分配模块分配的所述视频转码任务处理完毕后，得到对应的转码结果；数据传输模块，用于通过PCIE总线或以太网，输出每个所述GPU对应的所述转码结果。10.一种视频转码方法，其特征在于，所述方法应用于GPU，所述GPU包括主控GPU，所述主控GPU通过视频转码互连总线与从属GPU连接，所述方法包括：基于所述主控GPU，在所述主控GPU以及所述从属GPU之间进行视频转码任务的分配；基于所述主控GPU，对所述主控GPU以及所述从属GPU执行所述视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。11.根据权利要求10所述的方法，其特征在于，所述方法还包括：执行所述视频转码任务，以及将得到的转码处理数据存储在所述GPU的DDR内存中；基于配置的内存地址信息以及视频帧级别的同步，通过所述视频转码互连总线，从每个所述GPU的DDR内存中读取对应的转码处理数据进行转码处理后，得到转码结果；通过PCIE总线或以太网，输出所述转码结果。12.根据权利要求10所述的方法，其特征在于，所述方法还包括：执行所述视频转码任务，以及将得到的转码处理数据存储在所述GPU的DDR内存中；每个所述GPU，分别对分配的所述视频转码任务处理完毕后，得到对应的转码结果；通过PCIE总线或以太网，输出每个所述GPU对应的所述转码结果。13.一种电子设备，其特征在于，包括：处理器；用于存储处理器可执行指令的存储器；其中，所述处理器被配置为调用所述存储器存储的指令，以运行权利要求1至6中任意一项所述的系统、或者运行权利要求7至9中任意一项所述的GPU、或者执行权利要求10至12中任意一项所述的方法。14.一种计算机可读存储介质，其上存储有计算机程序指令，其特征在于，所述计算机程序指令被处理器执行时运行权利要求1至6中任意一项所述的系统、或者运行权利要求7至9中任意一项所述的GPU、或者实现权利要求10至12中任意一项所述的方法。
说明书desc
技术领域本公开涉及计算机技术领域，尤其涉及一种视频转码系统、方法、GPU以及电子设备和存储介质。背景技术传统方法使用中央处理器进行视频转码处理，会占用较多的CPU资源，特别是在图形类视频处理或者云游戏场景下，会影响计算性能。使用图形处理器芯片中专用的视频转码计算单元进行视频转码处理，会相对节省计算资源，提高整体计算性能。因此越来越多的场景下使用GPU芯片中专用的视频转码计算单元进行大量的视频转码服务。相关技术中，利用CPU调度、高速串行计算机扩展总线标准控制数据传输的方法实现多个GPU芯片上的视频转码任务，控制过程复杂、转码效率较低，无法充分发挥多个GPU芯片的视频转码能力。发明内容本公开提出了一种视频转码系统、方法、GPU以及电子设备和存储介质的技术方案。根据本公开的一方面，提供了一种视频转码系统，所述系统包括：多个GPU，其中，所述多个GPU之间通过视频转码互连总线连接，所述多个GPU中包括一个主控GPU；所述主控GPU，用于在所述多个GPU之间进行视频转码任务的分配；所述多个GPU之间基于所述视频转码互连总线，对所述视频转码任务对应的转码处理数据进行传输。在一种可能的实现方式中，所述主控GPU中包括：配置模块；所述配置模块，用于对所述多个GPU中执行所述视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。在一种可能的实现方式中，针对任意一个GPU，基于所述配置模块配置的内存地址信息，利用所述视频转码互连总线从其它GPU的DDR内存中读取需要进行转码的转码处理数据。在一种可能的实现方式中，所述主控GPU，还用于在所述多个GPU中的第一GPU的运行负载超过预设阈值的情况下，将所述第一GPU对应的处于未处理状态的视频转码任务，分配至所述多个GPU中的第二GPU，其中，所述第二GPU的运行负载未超过所述预设阈值。在一种可能的实现方式中，所述视频转码任务包括下述至少一种：解码任务、渲染任务、视频处理任务、编码任务。在一种可能的实现方式中，所述多个GPU位于一个电路板；或，所述多个GPU位于多个电路板。根据本公开的一方面，提供了一种GPU，所述GPU包括主控GPU，所述主控GPU通过视频转码互连总线与从属GPU连接，所述主控GPU包括：任务分配模块，用于在所述主控GPU以及所述从属GPU之间进行视频转码任务的分配；配置模块，用于对所述主控GPU以及所述从属GPU执行所述视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。在一种可能的实现方式中，所述GPU还包括：转码模块，用于执行所述视频转码任务，以及将得到的转码处理数据存储在所述GPU的DDR内存中；所述主控GPU，还用于基于所述配置模块配置的内存地址信息以及视频帧级别的同步，通过所述视频转码互连总线，从每个所述GPU的DDR内存中读取对应的转码处理数据进行转码处理后，得到转码结果；数据传输模块，用于通过PCIE总线或以太网，输出所述转码结果。在一种可能的实现方式中，所述GPU还包括：转码模块，用于执行所述视频转码任务，以及将得到的转码处理数据存储在所述GPU的DDR内存中；每个所述GPU，分别对所述任务分配模块分配的所述视频转码任务处理完毕后，得到对应的转码结果；数据传输模块，用于通过PCIE总线或以太网，输出每个所述GPU对应的所述转码结果。根据本公开的一方面，提供了一种视频转码方法，所述方法应用于GPU，所述GPU包括主控GPU，所述主控GPU通过视频转码互连总线与从属GPU连接，所述方法包括：基于所述主控GPU，在所述主控GPU以及所述从属GPU之间进行视频转码任务的分配；基于所述主控GPU，对所述主控GPU以及所述从属GPU执行所述视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。在一种可能的实现方式中，所述方法还包括：执行所述视频转码任务，以及将得到的转码处理数据存储在所述GPU的DDR内存中；基于配置的内存地址信息以及视频帧级别的同步，通过所述视频转码互连总线，从每个所述GPU的DDR内存中读取对应的转码处理数据进行转码处理后，得到转码结果；通过PCIE总线或以太网，输出所述转码结果。在一种可能的实现方式中，所述方法还包括：执行所述视频转码任务，以及将得到的转码处理数据存储在所述GPU的DDR内存中；每个所述GPU，分别对分配的所述视频转码任务处理完毕后，得到对应的转码结果；通过PCIE总线或以太网，输出每个所述GPU对应的所述转码结果。根据本公开的一方面，提供了一种电子设备，包括：处理器；用于存储处理器可执行指令的存储器；其中，所述处理器被配置为调用所述存储器存储的指令，以运行上述系统、或者运行上述GPU、或者执行上述方法。根据本公开的一方面，提供了一种计算机可读存储介质，其上存储有计算机程序指令，所述计算机程序指令被处理器执行时运行上述系统、或者运行上述GPU、或者实现上述方法。在本公开实施例中，视频转码系统包括多个GPU，多个GPU之间通过视频转码互连总线连接，通过多个GPU中的主控GPU，在多个GPU之间进行视频转码任务的分配，充分利用不同GPU的视频转码能力，各个GPU之间基于视频转码互连总线，对视频转码任务对应的转码处理数据进行高速传输，无需通过PCIE总线进行不同GPU之间的数据传输，有效提高了数据传输速度，进而提高了视频转码系统的转码效率。应当理解的是，以上的一般描述和后文的细节描述仅是示例性和解释性的，而非限制本公开。根据下面参考附图对示例性实施例的详细说明，本公开的其它特征及方面将变得清楚。附图说明此处的附图被并入说明书中并构成本说明书的一部分，这些附图示出了符合本公开的实施例，并与说明书一起用于说明本公开的技术方案。图1示出相关技术中的视频转码系统的示意图；图2示出根据本公开实施例的视频转码系统的示意图；图3示出根据本公开实施例的主控GPU的示意图；图4示出根据本公开实施例的从属GPU的示意图；图5示出根据本公开实施例的一种视频转码方法的流程图；图6示出根据本公开实施例的一种电子设备的框图；图7示出根据本公开实施例的一种电子设备的框图。具体实施方式以下将参考附图详细说明本公开的各种示例性实施例、特征和方面。附图中相同的附图标记表示功能相同或相似的元件。尽管在附图中示出了实施例的各种方面，但是除非特别指出，不必按比例绘制附图。在这里专用的词“示例性”意为“用作例子、实施例或说明性”。这里作为“示例性”所说明的任何实施例不必解释为优于或好于其它实施例。本文中术语“和/或”，仅仅是一种描述关联对象的关联关系，表示可以存在三种关系，例如，A和/或B，可以表示：单独存在A，同时存在A和B，单独存在B这三种情况。另外，本文中术语“至少一种”表示多种中的任意一种或多种中的至少两种的任意组合，例如，包括A、B、C中的至少一种，可以表示包括从A、B和C构成的集合中选择的任意一个或多个元素。另外，为了更好地说明本公开，在下文的具体实施方式中给出了众多的具体细节。本领域技术人员应当理解，没有某些具体细节，本公开同样可以实施。在一些实例中，对于本领域技术人员熟知的方法、手段、元件和电路未作详细描述，以便于凸显本公开的主旨。随着网络服务器端对视频转码需求的爆发式增长，GPU芯片中的视频转码计算能力越来越至关重要。特别是在多路视频同时进行转码服务的情况：例如一路原始视频码流经过解码处理后，再使用GPU进行分辨率缩放处理，最后编码成不同标准、不同分辨率的多个编码码流以适应服务器上的多用户需求，在此情况下解码与编码的计算比例为1：n；多路原始视频码流经过多路解码通道解码后，将多路数据合成一路进行编码的情况，解码与编码的计算比例为m：1；多路原始视频码流进行解码后，再编码成不同视频分辨率、不同视频格式的多路编码码流再传输到用户端的情况，解码与编码的计算比例为m：n。由于GPU芯片的资源和面积的限制，只能在GPU芯片上设置固定算力的视频编解码计算单元。针对上述存在大量视频编解码任务的情况，相关技术中需要CPU进行复杂的任务调度分配和内存管理。单个GPU芯片进行视频编解码处理计算的控制流程相对简单，但处理能力和数据带宽无法满足大量视频编解码任务实时处理的要求。多个GPU芯片并行进行视频编解码处理计算时，相关技术中，需要CPU控制PCIE总线，实现不同GPU芯片之间转码处理数据的传输和同步。但是，由于PCIE受版本因素的影响，需要兼容更早版本的协议，导致在数据传输过程中需要路由、奇偶校验相关等较多负载信息，使得视频转码过程中传输转码处理数据的有效率较低。图1示出相关技术中的视频转码系统的示意图。如图1所示，4个GPU芯片之间通过PCIE总线实现互相通信和数据传输。但是，在PCIE总线传输转码处理数据时，需要把转码处理数据从一个GPU芯片的DDR内存传输到另一个GPU芯片的DDR内存之后，该芯片才可以对自身DDR内存中的转码处理数据进行转码处理，导致视频转码系统需要额外的数据存储空间，且占用总线带宽较大。当视频转码任务是复杂的编解码任务时，相关技术中采用PCIE总线进行数据传输的方式无法高效完成多种编解码任务的处理。为了在复杂视频转码场景下，高效完成多种视频编解码任务，本公开实施例提供了一种视频转码系统。下面对本公开实施例提供的视频转码系统进行详细描述。图2示出根据本公开实施例的视频转码系统的示意图。图2所示，视频转码系统包括：多个GPU，其中，多个GPU之间通过视频转码互连总线连接，多个GPU中包括一个主控GPU；主控GPU，用于在多个GPU之间进行视频转码任务的分配；多个GPU之间基于视频转码互连总线，对视频转码任务对应的转码处理数据进行传输。这里的视频转码互连总线是一种快速的串行传输的总线通信协议，具有高带宽、低延迟、低功耗的数据传输特性。基于视频转码互连总线，可以有效实现不同GPU芯片之间的数据互连，从而有效提高视频转码系统在复杂视频转码场景下的数据传输效率、视频转码效率。根据本公开的实施例，视频转码系统包括多个GPU，多个GPU之间通过视频转码互连总线连接，通过多个GPU中的主控GPU，在多个GPU之间进行视频转码任务的分配，充分利用不同GPU的视频转码能力，各个GPU之间基于视频转码互连总线，对视频转码任务对应的转码处理数据进行高速传输，无需通过PCIE总线进行不同GPU之间的数据传输，有效提高了数据传输速度，进而提高了视频转码系统的转码效率。在一种可能的实现方式中，视频转码系统还包括：CPU；CPU，用于在多个GPU中配置主控GPU。以上述图2为例，如图2所示，视频转码系统中包括：4个GPU：GPU_0、GPU_1、GPU_2、GPU_3，以及1个CPU。其中，CPU可以配置GPU_0为主控GPU，即GPU_0_main。主控GPU以外的其它GPU均为从属GPU。GPU_0可以在4个GPU之间进行视频转码任务的分配。4个GPU之间基于视频转码互连总线a、b、c、d、e、f连接。基于视频转码互连总线a、b、c、d、e、f，可以实现4个GPU之间对视频转码任务对应的转码处理数据的互连和传输。在一种可能的实现方式中，主控GPU中包括：配置模块；配置模块，用于对多个GPU中执行视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。图3示出根据本公开实施例的主控GPU的示意图。如图3所示，主控GPU中包括：负责视频编码的视频转码单元A1)、负责视频解码的视频转码单元A2)、负责计算的GPU计算单元A3)、负责数据存的DDR内存单元A5、以及配置模块A4。在图3所示的主控GPU为图2所示的主控GPU_0的情况下，基于主控GPU_0中的配置模块A4，可以对图2所示的4个GPU：GPU_0、GPU_1、GPU_2、GPU_3中执行视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。在一种可能的实现方式中，针对任意一个GPU，基于配置模块配置的内存地址信息，利用视频转码互连总线从其它GPU的DDR内存中读取需要进行转码的转码处理数据。主控GPU可以基于配置模块，将需要进行转码的转码处理数据的内存地址信息，配置给执行视频转码任务的从属GPU，以使得从属GPU可以获得该内存地址信息，并根据该内存地址信息直接从其它GPU的DDR内存中读取该转码处理数据，而无需先将该转码处理数据传输至自身的DDR内存中，从而有效实现了不同GPU之间DDR内存资源共享，充分利用了不同GPU上的内存资源，提高了内存资源的灵活应用，减少了系统带宽的压力。其中，内存地址信息可以包括首地址信息和地址长度信息，或者，内存地址信息还可以根据实际情况设置为其它格式，本公开对此不作具体限定。图4示出根据本公开实施例的从属GPU的示意图。如图4所示，从属GPU中包括：负责视频编码的视频转码单元B1)、负责视频解码的视频转码单元B2)、负责计算的GPU计算单元B3)、负责数据存的DDR内存单元B4。图2所示从属GPU_1、从属GPU_2、从属GPU_3均可以具有图4所示的结构，此处不作赘述。以上述图2为例，需要进行转码的转码处理数据存储在从属GPU_1的DDR内存中，主控GPU_0将从属GPU_1中存储该转码处理数据的内存地址信息，配置给需要执行视频转码任务的从属GPU_2，以使得从属GPU_2可以基于从属GPU_2与从属GPU_1之间的视频转码互连总线f，直接访问从属GPU_1的DDR内存中读取该转码处理数据进行处理。在一种可能的实现方式中，视频转码任务包括：解码任务、渲染任务、视频处理任务、编码任务。在复杂视频转码场景下，视频转码任务可以包括：解码任务、渲染任务、视频处理任务、编码任务。视频处理任务可以包括缩放、边缘增强、背景模糊、对比度调整、色彩增强等处理等，本公开对此不作具体限定。视频转码任务除了上述任务以外，还可以包括其它图形处理任务，本公开对此不作具体限定。在一种可能的实现方式中，主控GPU，还用于在多个GPU中的第一GPU的运行负载超过预设阈值的情况下，将第一GPU对应的处于未处理状态的视频转码任务，分配至多个GPU中的第二GPU，其中，第二GPU的运行负载未超过预设阈值。利用硬件调度的方式，可以充分利用不同GPU的转码计算能力，避免一个GPU上运行负载过大，其它GPU处于空载的情况，从而避免计算资源的浪费，提高了系统的转码效率。其中，预设阈值的具体取值可以根据实际情况确定，本公开对此不作具体限定。在一种可能的实现方式中，多个GPU位于一个电路板；或，多个GPU位于多个电路板。下面对利用本公开提供的视频转码系统，在多种不同的视频转码场景下的具体转码过程进行详细描述。第一种视频转码场景：对多路原始视频码流进行解码，并根据用户需求对解码后数据进行GPU计算处理后，再合成一路数据进行编码的场景。首先，视频转码系统的CPU配置多个GPU中的主控GPU和从属GPU。以上述图2为例，CPU配置GPU_0为主控GPU，即GPU_0_main。GPU_1、GPU_2、GPU_3均为从属GPU。第二步，主控GPU执行对输入的原始视频码流进行解码处理，以及将解码后数据以视频帧为单位存储到自身的DDR内存中。从属GPU也执行对输入的原始视频码流进行解码处理，以及将解码后数据以视频帧为单位存储到自身的DDR内存中。第三步，根据用户需求，主控GPU对解码后数据进行渲染和/或缩放等GPU计算处理。从属GPU也根据用户需求对相应的解码后数据进行渲染和/或缩放等GPU计算处理。第四步，由于不同的GPU视频解码、渲染和/或缩放计算的速度不同，因此，主控GPU对所有GPU中的转码处理数据进行内存地址信息的配置以及视频帧级别的同步。以上述图2为例，主控GPU：GPU_0_main对从属GPU：GPU_1、GPU_2、GPU_3进行内存地址信息的配置以及视频帧级别的同步。例如，主控GPU把需要进行转码的转码处理数据的内存地址信息，配置给执行转码处理的从属GPU。其中，内存地址信息包括首地址信息和地址长度信息等。基于主控GPU的配置，不同GPU可以互相访问，以获取到需要的转码处理数据。第五步，所有GPU会同时进行视频帧级别的视频解码、渲染和/或缩放等GPU计算处理，并把转码结果以视频帧为单位，存储到自身的DDR内存中。第六步，通过视频转码互联总线把存储在不同GPU的DDR内存中的转码处理数据传输给主控GPU，完成最后的合成编码。以上述图2为例，4个GPU完成同步转码计算之后，从属GPU：GPU_1、GPU_2、GPU_3，通过与主控GPU：GPU_0_main之间的视频转码互连总线a、e、d，将各自DDR内存中的转码处理数据传输到主控GPU：GPU_0_main。主控GPU：GPU_0_main对汇总后的转码处理数据进行编码处理，得到最终的转码结果。第七步，视频转码完成后，通过PCIE总线把最终的转码结果传输给用户。以上述图2为例，主控GPU：GPU_0_main将最终的转码结果，基于PCIE总线g，传输到用户端。视频转码完成后，还可以通过以太网把最终的转码结果传输给用户，本公开对此不作具体限定。第二种视频转码场景：对一路原始视频码流进行解码，并根据用户需求对解码后数据进行GPU计算处理后，再编码为多种视频格式、不同分辨率的码流的场景。首先，视频转码系统的CPU配置多个GPU中的主控GPU和从属GPU。以上述图2为例，CPU配置GPU_0为主控GPU，即GPU_0_main。GPU_1、GPU_2、GPU_3均为从属GPU。第二步，主控GPU执行对输入的原始视频码流进行解码处理，以及将解码后数据以视频帧为单位存储到自身的DDR内存中。以上述图2为例，主控GPU：GPU_0_main对原始视频码流进行解码处理，以及将解码后数据存储到GPU_0_main的DDR内存中。第三步，由于不同的GPU视频解码、渲染和/或缩放计算的速度不同，因此，主控GPU对所有GPU中的转码处理数据进行内存地址信息的配置以及视频帧级别的同步。以上述图2为例，主控GPU：GPU_0_main对从属GPU：GPU_1、GPU_2、GPU_3进行内存地址信息的配置以及视频帧级别的同步。例如，主控GPU把需要进行转码的转码处理数据的内存地址信息，配置给执行转码处理的从属GPU。其中，内存地址信息包括首地址信息和地址长度信息等。基于主控GPU的配置，不同GPU可以互相访问，以获取到需要的转码处理数据。第四步，主控GPU通过视频转码互联总线把解码数据传输给从属GPU，同时根据用户需求，主控GPU对解码后数据进行渲染或者缩放等GPU计算处理，从属GPU也对视频转码互联总线传输过来的视频数据进行渲染或者缩放等GPU计算处理。第五步，所有执行转码任务的GPU分别对经过渲染或者缩放等GPU计算处理后的计算结果进行编码处理，根据不同用户的需求，编码成不同分辨率、视频格式的码流，得到各自的转码结果，最后通过PCIE总线分别把转码结果传输给用户。以上述图2为例，根据用户需求，主控GPU：GPU_0_main从GPU_0_main的DDR内存中读取解码后数据进行渲染和/或缩放等GPU计算，以及将计算结果存储到GPU_0_main的DDR空间中，然后再从GPU_0_main的DDR内存中读取计算结果进行视频编码。由于主控GPU：GPU_0_main对从属GPU：GPU_1、GPU_2、GPU_3进行了内存地址信息的配置以及视频帧级别的同步，以使得GPU_1、GPU_2、GPU_3可以从GPU_0_main的DDR内存中获取到正确的转码处理数据。GPU_0_main通过与GPU_1、GPU_2、GPU_3之间的视频转码互联总线a、e、d，完成与GPU_1、GPU_2、GPU_3的数据传输。根据用户需求，GPU_1、GPU_2、GPU_3对获取到的转码处理数据进行渲染、缩放变换等GPU计算，以及将计算结果存储到各自的DDR内存中。根据用户需求以及与GPU_0_main之间的视频帧级别的同步信息，GPU_1、GPU_2、GPU_3分别从各自的DDR内存中读取计算结果进行视频编码。最后，GPU_0_main、GPU_1、GPU_2、GPU_3分别通过PCIE总线g、h、i、j，传输到用户端。视频转码完成后，还可以通过以太网把最终的转码结果传输给用户，本公开对此不作具体限定。第三种视频转码场景：对多路原始视频码流进行解码，并根据用户需求对解码后数据进行GPU计算处理后，再编码为多种视频格式、不同分辨率的码流的场景。首先，视频转码系统的CPU配置多个GPU中的主控GPU和从属GPU。以上述图2为例，CPU配置GPU_0为主控GPU，即GPU_0_main。GPU_1、GPU_2、GPU_3均为从属GPU。第二步，主控GPU执行对输入的原始视频码流进行解码处理，以及将解码后数据以视频帧为单位存储到自身的DDR内存中。从属GPU也执行对输入的原始视频码流进行解码处理，以及将解码后数据以视频帧为单位存储到到自身的DDR内存中。第三步，根据用户需求，主控GPU对解码后数据进行渲染或者缩放等GPU计算处理。从属GPU也根据用户需求对相应的解码后数据进行渲染或者缩放等GPU计算处理。第四步，由于不同的GPU视频解码、渲染和/或缩放计算的速度不同，因此，主控GPU对所有GPU中的转码处理数据进行内存地址信息的配置以及视频帧级别的同步。以上述图2为例，主控GPU：GPU_0_main对从属GPU：GPU_1、GPU_2、GPU_3进行内存地址信息的配置以及视频帧级别的同步。例如，主控GPU把需要进行转码的转码处理数据的内存地址信息，配置给执行转码处理的从属GPU。其中，内存地址信息包括首地址信息和地址长度信息等。基于主控GPU的配置，不同GPU可以互相访问，以获取到需要的转码处理数据。第五步，当所有GPU完成一帧视频数据的视频解码、渲染或者缩放等GPU渲染计算后，把计算结果以视频帧为单位存储到各自的DDR内存中。第六步，所有执行转码任务的GPU分别对经过渲染或者缩放等GPU计算处理的计算结果进行编码处理，根据不同用户的需求，编码成不同分辨率、视频格式的码流。第七步，当有GPU处于视频转码任务空闲的状态，主控GPU会配置视频转码任务多的GPU通过视频转码互联总线传输转码处理数据给转码任务空闲的GPU。在一示例中，主控GPU可以根据各GPU的运行负载，以及视频转码任务的当前状态，确定GPU是否处于转码任务空闲，以及是否处于负载较大，从而基于各GPU的实际负载情况，进行视频转码任务的调度。以上述图2为例，在调度过程中，GPU_0_main、GPU_1、GPU_2、GPU_3，通过视频转码互连总线a、b、c、d、e、f传输视频转码任务对应的转码处理数据。第七步，所有GPU完成视频转码后，通过PCIE总线把最终的转码结果传输给用户。以上述图2为例，GPU_0_main、GPU_1、GPU_2、GPU_3分别通过PCIE总线g、h、i、j，传输到用户端。视频转码完成后，还可以通过以太网把最终的转码结果传输给用户，本公开对此不作具体限定。本公开实施例提供的视频转码系统，使用视频转码互连总线，对不同GPU间的转码处理数据进行高效的传输，无需通过PCIE总线进行芯片间数据传输，大大提高了视频转码系统的转码计算能力，也使得视频转码系统的实时性得到了提高。本公开实施例提供的视频转码系统，通过主控GPU对所有从属GPU进行内存地址信息的配置以及视频帧级别的同步，通过主控GPU对从属GPU这种灵活的配置方式，可以实现不同GPU之间的DDR内存资源共享。此外，也可以实现需要进行转码处理的GPU可以互相访问对方的DDR内存，充分利用不同GPU上的内存资源，提高了视频转码系统内存的灵活应用，减少了系统带宽的压力。本公开实施例还提供了一种GPU，GPU包括主控GPU，主控GPU通过视频转码互连总线与从属GPU连接，主控GPU包括：任务分配模块，用于在主控GPU以及从属GPU之间进行视频转码任务的分配；配置模块，用于对主控GPU以及从属GPU执行视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。主控GPU以及从属GPU的具体结构，以及相互之间的连接关系可以参照上述相关描述，此处不作赘述。在一种可能的实现方式中，GPU还包括：转码模块，用于执行视频转码任务，以及将得到的转码处理数据存储在GPU的DDR内存中；主控GPU，还用于基于配置模块配置的内存地址信息以及视频帧级别的同步，通过视频转码互连总线，从每个GPU的DDR内存中读取对应的转码处理数据进行转码处理后，得到转码结果；数据传输模块，用于通过PCIE总线或以太网，输出转码结果。GPU执行上述转码任务的过程可以参照上述第一种视频转码场景的详细描述，此处不作赘述。在一种可能的实现方式中，GPU还包括：转码模块，用于执行视频转码任务，以及将得到的转码处理数据存储在GPU的DDR内存中；每个GPU，分别对任务分配模块分配的视频转码任务处理完毕后，得到对应的转码结果；数据传输模块，用于通过PCIE总线或以太网，输出每个GPU对应的转码结果。GPU执行上述转码任务的过程可以参照上述第二、三种视频转码场景的详细描述，此处不作赘述。图5示出根据本公开实施例的一种视频转码方法的流程图。该视频转码方法应用于GPU，GPU包括主控GPU，主控GPU通过视频转码互连总线与从属GPU连接。主控GPU以及从属GPU的具体结构，以及相互之间的连接关系可以参照上述相关描述，此处不作赘述。如图5所示，该视频转码方法包括：在步骤S51中，基于主控GPU，在主控GPU以及从属GPU之间进行视频转码任务的分配；在步骤S52中，基于主控GPU，对主控GPU以及从属GPU执行视频转码任务对应的转码处理数据，进行内存地址信息的配置以及视频帧级别的同步。根据本公开实施例，基于主控GPU，在主控GPU以及与主控GPU通过视频转码互连总线连接的从属GPU之间进行视频转码任务的分配，充分利用不同GPU的视频转码能力，各个GPU之间基于视频转码互连总线，对视频转码任务对应的转码处理数据进行高速传输，无需通过PCIE总线进行不同GPU之间的数据传输，有效提高了数据传输速度，进而提高了视频转码效率。在一种可能的实现方式中，该视频转码方法还包括：执行视频转码任务，以及将得到的转码处理数据存储在GPU的DDR内存中；基于配置的内存地址信息以及视频帧级别的同步，通过视频转码互连总线，从每个GPU的DDR内存中读取对应的转码处理数据进行转码处理后，得到转码结果；通过PCIE总线或以太网，输出转码结果。GPU执行上述转码任务的过程可以参照上述第一种视频转码场景的详细描述，此处不作赘述。在一种可能的实现方式中，该视频转码方法还包括：执行视频转码任务，以及将得到的转码处理数据存储在GPU的DDR内存中；每个GPU，分别对分配的视频转码任务处理完毕后，得到对应的转码结果；通过PCIE总线或以太网，输出每个GPU对应的转码结果。GPU执行上述转码任务的过程可以参照上述第二、三种视频转码场景的详细描述，此处不作赘述。可以理解，本公开提及的上述各个方法实施例，在不违背原理逻辑的情况下，均可以彼此相互结合形成结合后的实施例，限于篇幅，本公开不再赘述。本领域技术人员可以理解，在具体实施方式的上述方法中，各步骤的具体执行顺序应当以其功能和可能的内在逻辑确定。此外，本公开还提供了电子设备、计算机可读存储介质、程序，上述均可用来实现本公开提供的任一种视频转码系统、方法以及GPU，相应技术方案和描述和参见方法部分的相应记载，不再赘述。该方法与计算机系统的内部结构存在特定技术关联，且能够解决如何提升硬件运算效率或执行效果的技术问题，从而获得符合自然规律的计算机系统内部性能改进的技术效果。在一些实施例中，本公开实施例提供的装置具有的功能或包含的模块可以用于执行上文方法实施例描述的方法，其具体实现可以参照上文方法实施例的描述，为了简洁，这里不再赘述。本公开实施例还提出一种计算机可读存储介质，其上存储有计算机程序指令，所述计算机程序指令被处理器执行时运行上述的系统、或者运行上述的GPU、或者实现上述方法。计算机可读存储介质可以是易失性或非易失性计算机可读存储介质。本公开实施例还提出一种电子设备，包括：处理器；用于存储处理器可执行指令的存储器；其中，所述处理器被配置为调用所述存储器存储的指令，以运行上述的系统、或者运行上述的GPU、或者执行上述方法。本公开实施例还提供了一种计算机程序产品，包括计算机可读代码，或者承载有计算机可读代码的非易失性计算机可读存储介质，当所述计算机可读代码在电子设备的处理器中运行时，所述电子设备中的处理器执行上述方法。电子设备可以被提供为终端、服务器或其它形态的设备。图6示出根据本公开实施例的一种电子设备的框图。参照图6，电子设备800可以是用户设备、移动设备、用户终端、终端、蜂窝电话、无绳电话、个人数字处理、手持设备、计算设备、车载设备、可穿戴设备等终端设备。参照图6，电子设备800可以包括以下一个或多个组件：处理组件802，存储器804，电源组件806，多媒体组件808，音频组件810，输入/输出接口812，传感器组件814，以及通信组件816。处理组件802通常控制电子设备800的整体操作，诸如与显示，电话呼叫，数据通信，相机操作和记录操作相关联的操作。处理组件802可以包括一个或多个处理器820来执行指令，以完成上述的方法的全部或部分步骤。此外，处理组件802可以包括一个或多个模块，便于处理组件802和其他组件之间的交互。例如，处理组件802可以包括多媒体模块，以方便多媒体组件808和处理组件802之间的交互。存储器804被配置为存储各种类型的数据以支持在电子设备800的操作。这些数据的示例包括用于在电子设备800上操作的任何应用程序或方法的指令，联系人数据，电话簿数据，消息，图片，视频等。存储器804可以由任何类型的易失性或非易失性存储设备或者它们的组合实现，如静态随机存取存储器，电可擦除可编程只读存储器，可擦除可编程只读存储器，可编程只读存储器，只读存储器，磁存储器，快闪存储器，磁盘或光盘。电源组件806为电子设备800的各种组件提供电力。电源组件806可以包括电源管理系统，一个或多个电源，及其他与为电子设备800生成、管理和分配电力相关联的组件。多媒体组件808包括在所述电子设备800和用户之间的提供一个输出接口的屏幕。在一些实施例中，屏幕可以包括液晶显示器和触摸面板。如果屏幕包括触摸面板，屏幕可以被实现为触摸屏，以接收来自用户的输入信号。触摸面板包括一个或多个触摸传感器以感测触摸、滑动和触摸面板上的手势。所述触摸传感器可以不仅感测触摸或滑动动作的边界，而且还检测与所述触摸或滑动操作相关的持续时间和压力。在一些实施例中，多媒体组件808包括一个前置摄像头和/或后置摄像头。当电子设备800处于操作模式，如拍摄模式或视频模式时，前置摄像头和/或后置摄像头可以接收外部的多媒体数据。每个前置摄像头和后置摄像头可以是一个固定的光学透镜系统或具有焦距和光学变焦能力。音频组件810被配置为输出和/或输入音频信号。例如，音频组件810包括一个麦克风，当电子设备800处于操作模式，如呼叫模式、记录模式和语音识别模式时，麦克风被配置为接收外部音频信号。所接收的音频信号可以被进一步存储在存储器804或经由通信组件816发送。在一些实施例中，音频组件810还包括一个扬声器，用于输出音频信号。I/O接口812为处理组件802和外围接口模块之间提供接口，上述外围接口模块可以是键盘，点击轮，按钮等。这些按钮可包括但不限于：主页按钮、音量按钮、启动按钮和锁定按钮。传感器组件814包括一个或多个传感器，用于为电子设备800提供各个方面的状态评估。例如，传感器组件814可以检测到电子设备800的打开/关闭状态，组件的相对定位，例如所述组件为电子设备800的显示器和小键盘，传感器组件814还可以检测电子设备800或电子设备800一个组件的位置改变，用户与电子设备800接触的存在或不存在，电子设备800方位或加速/减速和电子设备800的温度变化。传感器组件814可以包括接近传感器，被配置用来在没有任何的物理接触时检测附近物体的存在。传感器组件814还可以包括光传感器，如互补金属氧化物半导体或电荷耦合装置图像传感器，用于在成像应用中使用。在一些实施例中，该传感器组件814还可以包括加速度传感器，陀螺仪传感器，磁传感器，压力传感器或温度传感器。通信组件816被配置为便于电子设备800和其他设备之间有线或无线方式的通信。电子设备800可以接入基于通信标准的无线网络，如无线网络、第二代移动通信技术、第三代移动通信技术、第四代移动通信技术、通用移动通信技术的长期演进、第五代移动通信技术或它们的组合。在一个示例性实施例中，通信组件816经由广播信道接收来自外部广播管理系统的广播信号或广播相关信息。在一个示例性实施例中，所述通信组件816还包括近场通信模块，以促进短程通信。例如，在NFC模块可基于射频识别技术，红外数据协会技术，超宽带技术，蓝牙技术和其他技术来实现。在示例性实施例中，电子设备800可以被一个或多个应用专用集成电路、数字信号处理器、数字信号处理设备、可编程逻辑器件、现场可编程门阵列、控制器、微控制器、微处理器或其他电子元件实现，用于执行上述方法。在示例性实施例中，还提供了一种非易失性计算机可读存储介质，例如包括计算机程序指令的存储器804，上述计算机程序指令可由电子设备800的处理器820执行以完成上述方法。本公开涉及增强现实领域，通过获取现实环境中的目标对象的图像信息，进而借助各类视觉相关算法实现对目标对象的相关特征、状态及属性进行检测或识别处理，从而得到与具体应用匹配的虚拟与现实相结合的AR效果。示例性的，目标对象可涉及与人体相关的脸部、肢体、手势、动作等，或者与物体相关的标识物、标志物，或者与场馆或场所相关的沙盘、展示区域或展示物品等。视觉相关算法可涉及视觉定位、SLAM、三维重建、图像注册、背景分割、对象的关键点提取及跟踪、对象的位姿或深度检测等。具体应用不仅可以涉及跟真实场景或物品相关的导览、导航、讲解、重建、虚拟效果叠加展示等交互场景，还可以涉及与人相关的特效处理，比如妆容美化、肢体美化、特效展示、虚拟模型展示等交互场景。可通过卷积神经网络，实现对目标对象的相关特征、状态及属性进行检测或识别处理。上述卷积神经网络是基于深度学习框架进行模型训练而得到的网络模型。图7示出根据本公开实施例的一种电子设备的框图。参照图7，电子设备1900可以被提供为一服务器或终端设备。参照图7，电子设备1900包括处理组件1922，其进一步包括一个或多个处理器，以及由存储器1932所代表的存储器资源，用于存储可由处理组件1922的执行的指令，例如应用程序。存储器1932中存储的应用程序可以包括一个或一个以上的每一个对应于一组指令的模块。此外，处理组件1922被配置为执行指令，以执行上述方法。电子设备1900还可以包括一个电源组件1926被配置为执行电子设备1900的电源管理，一个有线或无线网络接口1950被配置为将电子设备1900连接到网络，和一个输入输出接口1958。电子设备1900可以操作基于存储在存储器1932的操作系统，例如微软服务器操作系统，苹果公司推出的基于图形用户界面操作系统，多用户多进程的计算机操作系统,自由和开放原代码的类Unix操作系统，开放原代码的类Unix操作系统或类似。在示例性实施例中，还提供了一种非易失性计算机可读存储介质，例如包括计算机程序指令的存储器1932，上述计算机程序指令可由电子设备1900的处理组件1922执行以完成上述方法。本公开可以是系统、方法和/或计算机程序产品。计算机程序产品可以包括计算机可读存储介质，其上载有用于使处理器实现本公开的各个方面的计算机可读程序指令。计算机可读存储介质可以是可以保持和存储由指令执行设备使用的指令的有形设备。计算机可读存储介质例如可以是电存储设备、磁存储设备、光存储设备、电磁存储设备、半导体存储设备或者上述的任意合适的组合。计算机可读存储介质的更具体的例子包括：便携式计算机盘、硬盘、随机存取存储器、只读存储器、可擦式可编程只读存储器、静态随机存取存储器、便携式压缩盘只读存储器、数字多功能盘、记忆棒、软盘、机械编码设备、例如其上存储有指令的打孔卡或凹槽内凸起结构、以及上述的任意合适的组合。这里所使用的计算机可读存储介质不被解释为瞬时信号本身，诸如无线电波或者其他自由传播的电磁波、通过波导或其他传输媒介传播的电磁波、或者通过电线传输的电信号。这里所描述的计算机可读程序指令可以从计算机可读存储介质下载到各个计算/处理设备，或者通过网络、例如因特网、局域网、广域网和/或无线网下载到外部计算机或外部存储设备。网络可以包括铜传输电缆、光纤传输、无线传输、路由器、防火墙、交换机、网关计算机和/或边缘服务器。每个计算/处理设备中的网络适配卡或者网络接口从网络接收计算机可读程序指令，并转发该计算机可读程序指令，以供存储在各个计算/处理设备中的计算机可读存储介质中。用于执行本公开操作的计算机程序指令可以是汇编指令、指令集架构指令、机器指令、机器相关指令、微代码、固件指令、状态设置数据、或者以一种或多种编程语言的任意组合编写的源代码或目标代码，所述编程语言包括面向对象的编程语言—诸如Smalltalk、C++等，以及常规的过程式编程语言—诸如“C”语言或类似的编程语言。计算机可读程序指令可以完全地在用户计算机上执行、部分地在用户计算机上执行、作为一个独立的软件包执行、部分在用户计算机上部分在远程计算机上执行、或者完全在远程计算机或服务器上执行。在涉及远程计算机的情形中，远程计算机可以通过任意种类的网络—包括局域网或广域网—连接到用户计算机，或者，可以连接到外部计算机。在一些实施例中，通过利用计算机可读程序指令的状态信息来个性化定制电子电路，例如可编程逻辑电路、现场可编程门阵列或可编程逻辑阵列，该电子电路可以执行计算机可读程序指令，从而实现本公开的各个方面。这里参照根据本公开实施例的方法、装置和计算机程序产品的流程图和/或框图描述了本公开的各个方面。应当理解，流程图和/或框图的每个方框以及流程图和/或框图中各方框的组合，都可以由计算机可读程序指令实现。这些计算机可读程序指令可以提供给通用计算机、专用计算机或其它可编程数据处理装置的处理器，从而生产出一种机器，使得这些指令在通过计算机或其它可编程数据处理装置的处理器执行时，产生了实现流程图和/或框图中的一个或多个方框中规定的功能/动作的装置。也可以把这些计算机可读程序指令存储在计算机可读存储介质中，这些指令使得计算机、可编程数据处理装置和/或其他设备以特定方式工作，从而，存储有指令的计算机可读介质则包括一个制造品，其包括实现流程图和/或框图中的一个或多个方框中规定的功能/动作的各个方面的指令。也可以把计算机可读程序指令加载到计算机、其它可编程数据处理装置、或其它设备上，使得在计算机、其它可编程数据处理装置或其它设备上执行一系列操作步骤，以产生计算机实现的过程，从而使得在计算机、其它可编程数据处理装置、或其它设备上执行的指令实现流程图和/或框图中的一个或多个方框中规定的功能/动作。附图中的流程图和框图显示了根据本公开的多个实施例的系统、方法和计算机程序产品的可能实现的体系架构、功能和操作。在这点上，流程图或框图中的每个方框可以代表一个模块、程序段或指令的一部分，所述模块、程序段或指令的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。在有些作为替换的实现中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个连续的方框实际上可以基本并行地执行，它们有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图和/或流程图中的每个方框、以及框图和/或流程图中的方框的组合，可以用执行规定的功能或动作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。该计算机程序产品可以具体通过硬件、软件或其结合的方式实现。在一个可选实施例中，所述计算机程序产品具体体现为计算机存储介质，在另一个可选实施例中，计算机程序产品具体体现为软件产品，例如软件开发包等等。上文对各个实施例的描述倾向于强调各个实施例之间的不同之处，其相同或相似之处可以互相参考，为了简洁，本文不再赘述。本领域技术人员可以理解，在具体实施方式的上述方法中，各步骤的撰写顺序并不意味着严格的执行顺序而对实施过程构成任何限定，各步骤的具体执行顺序应当以其功能和可能的内在逻辑确定。若本申请技术方案涉及个人信息，应用本申请技术方案的产品在处理个人信息前，已明确告知个人信息处理规则，并取得个人自主同意。若本申请技术方案涉及敏感个人信息，应用本申请技术方案的产品在处理敏感个人信息前，已取得个人单独同意，并且同时满足“明示同意”的要求。例如，在摄像头等个人信息采集装置处，设置明确显著的标识告知已进入个人信息采集范围，将会对个人信息进行采集，若个人自愿进入采集范围即视为同意对其个人信息进行采集；或者在个人信息处理的装置上，利用明显的标识/信息告知个人信息处理规则的情况下，通过弹窗信息或请个人自行上传其个人信息等方式获得个人授权；其中，个人信息处理规则可包括个人信息处理者、个人信息处理目的、处理方式以及处理的个人信息种类等信息。以上已经描述了本公开的各实施例，上述说明是示例性的，并非穷尽性的，并且也不限于所披露的各实施例。在不偏离所说明的各实施例的范围和精神的情况下，对于本技术领域的普通技术人员来说许多修改和变更都是显而易见的。本文中所用术语的选择，旨在最好地解释各实施例的原理、实际应用或对市场中的技术的改进，或者使本技术领域的其它普通技术人员能理解本文披露的各实施例。
