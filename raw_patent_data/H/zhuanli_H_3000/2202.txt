标题title
一种基于动态规则实现多租户服务RPC隔离的调用方法
摘要abst
本发明公开了一种基于动态规则实现多租户服务RPC隔离的调用方法，解决现有统一注册中心无法实现不同租户间流量隔离调用。所述调用方法包括以下步骤：配置各租户对应的租户规则；在每个机房的服务部署脚本注入该机房标识，发起服务部署；在注册中心完成各服务的自动注册，并且生成每个服务的服务列表；自动加载租户规则，并存储至本地；租户流量请求服务调用，根据该租户的租户规则和要调用的下游服务的服务列表，发起RPC调用下游服务。本发明适用于业界SAAS化服务共享/独享主机资源、存储资源的业务场景，需要根据租户规则实现RPC调用隔离的场景，最终实现租户流量隔离和数据隔离，具有通用性。
权利要求书clms
1.一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，包括以下步骤：步骤S1、配置租户规则，所述租户规则包括租户的名称、该租户需要调用的机房、以及该租户所需的服务；步骤S2、在每个机房的服务部署脚本注入该机房标识，发起服务部署；在注册中心完成各服务的自动注册，并且生成每个服务的服务列表；步骤S3、自动加载租户规则，并存储至本地；步骤S4、租户流量请求服务调用，根据该租户的租户规则和要调用的下游服务的服务列表，发起RPC调用下游服务。2.根据权利要求1所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，一个服务部署于多个机房内。3.根据权利要求2所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，部署同一服务的机房数量与调用该服务的租户数量一致。4.根据权利要求1所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，租户规则支持在线修改和实时更新。5.根据权利要求1所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，所述步骤S4包括：步骤S41、基于租户流量请求，从注册中心获取要调用的下游服务的服务列表；步骤S42、循环遍历该服务列表，找出与租户规则相匹配的机房，获取该机房中与调用的下游服务相同的服务；步骤S43、发起RPC调用，流量请求到该机房对应的服务上。6.根据权利要求5所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，所述步骤S42包括：步骤S421、遍历每个要调用的下游服务的服务列表中的服务名称、以及部署该服务的机房信息；步骤S422、如果当前服务列表中的机房信息和租户规则配置的机房匹配，则标识当前机房部署的服务为要调用的服务；步骤S423、重复步骤S421和步骤S422，直至遍历完成最后一个要调用的下游服务的服务列表，标识与租户规则配置相匹配的所有要调用的服务。7.根据权利要求6所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，在所述步骤S43中，利用dubbo负载均衡策略发起RPC调用，所述RPC调用包括：方法一、从步骤S423标识的所有要调用的服务中，随机选择一个服务发起调用；方法二、从步骤S423标识的所有要调用的服务中，依次调用每个服务，最后一个服务调用结束后又从第一个服务开始轮询调用；方法三、记录从步骤S423标识的所有要调用的服务的调用时长，优先选择调用时长少的一个或多个服务进行调用；方法四、相同调用参数的RPC请求会根据hash算法调用到同一个机房的下游服务上。8.根据权利要求6所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，利用dubbo提供的参数设置功能，由服务部署脚本注入的机房标识生成服务部署的机房信息。9.根据权利要求1所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，利用dubbo的服务注册发现机制获取要调用的下游服务的服务列表。10.根据权利要求1所述的一种基于动态规则实现多租户服务RPC隔离的调用方法，其特征在于，在所述步骤S1中，租户规则配置于数据库中。
说明书desc
技术领域本发明属于计算机技术领域，具体涉及一种基于动态规则实现多租户服务RPC隔离的调用方法。背景技术随着公司的发展和行业SAAS化进程的推进，需要支持租户间的隔离调用，以此实现租户数据的安全性、正确性。由于现有公司业务的多样性以及公司的SAAS服务采用多机房部署，服务间的RPC调用采用共用统一的服务注册中心，无法做到不同租户间流量隔离调用。而现在业界通用的做法都是独立的服务注册中心实现机房隔离调用，无法解决统一注册中心服务间RPC隔离调用问题。发明内容本发明要解决的技术问题是：提供一种基于动态规则实现多租户服务RPC隔离的调用方法，以至少解决上述技术问题。为实现上述目的，本发明采用的技术方案如下：一种基于动态规则实现多租户服务RPC隔离的调用方法，包括以下步骤：步骤S1、配置租户规则，所述租户规则包括租户的名称、该租户需要调用的机房、以及该租户所需的服务；步骤S2、在每个机房的服务部署脚本注入该机房标识，发起服务部署；在注册中心完成各服务的自动注册，并且生成每个服务的服务列表；步骤S3、自动加载租户规则，并存储至本地；步骤S4、租户流量请求服务调用，根据该租户的租户规则和要调用的下游服务的服务列表，发起RPC调用下游服务。进一步地，一个服务部署于多个机房内。进一步地，部署同一服务的机房数量与调用该服务的租户数量一致。进一步地，租户规则支持在线修改和实时更新。进一步地，所述步骤S4包括：步骤S41、基于租户流量请求，从注册中心获取要调用的下游服务的服务列表；步骤S42、循环遍历该服务列表，找出与租户规则相匹配的机房，获取该机房中与调用的下游服务相同的服务；步骤S43、发起RPC调用，流量请求到该机房对应的服务上。进一步地，所述步骤S42包括：步骤S421、遍历每个要调用的下游服务的服务列表中的服务名称、以及部署该服务的机房信息；步骤S422、如果当前服务列表中的机房信息和租户规则配置的机房匹配，则标识当前机房部署的服务为要调用的服务；步骤S423、重复步骤S421和步骤S422，直至遍历完成最后一个要调用的下游服务的服务列表，标识与租户规则配置相匹配的所有要调用的服务。进一步地，在所述步骤S43中，利用dubbo负载均衡策略发起RPC调用，所述RPC调用包括：方法一、从步骤S423标识的所有要调用的服务中，随机选择一个服务发起调用；方法二、从步骤S423标识的所有要调用的服务中，依次调用每个服务，最后一个服务调用结束后又从第一个服务开始轮询调用；方法三、记录从步骤S423标识的所有要调用的服务的调用时长，优先选择调用时长少的一个或多个服务进行调用；方法四、相同调用参数的RPC请求会根据hash算法调用到同一个机房的下游服务上。进一步地，利用dubbo提供的参数设置功能，由服务部署脚本注入的机房标识生成服务部署的机房信息。进一步地，利用dubbo的服务注册发现机制获取要调用的下游服务的服务列表。进一步地，在所述步骤S1中，租户规则配置于数据库中。与现有技术相比，本发明具有以下有益效果：本发明提供的一种基于动态规则实现多租户服务RPC隔离的调用方法，适用于业界SAAS化服务共享/独享主机资源、存储资源的业务场景，需要根据租户规则实现RPC调用隔离的场景，最终实现租户流量隔离和数据隔离，具有通用性。附图说明图1为本发明的方法流程图。图2为具体实施例的调用逻辑图。具体实施方式为了使本发明的目的、技术方案及优点更加清楚明白，以下结合附图1，对本发明进一步详细说明。显然，所描述的实施例仅仅是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。本发明提供的一种基于动态规则实现多租户服务RPC隔离的调用方法，包括以下步骤：步骤S1、配置租户规则，所述租户规则包括租户的名称、该租户需要调用的机房、以及该租户所需的服务；步骤S2、在每个机房的服务部署脚本注入该机房标识，发起服务部署；在注册中心完成各服务的自动注册，并且生成每个服务的服务列表；步骤S3、自动加载租户规则，并存储至本地；步骤S4、租户流量请求服务调用，根据该租户的租户规则和要调用的下游服务的服务列表，发起RPC调用下游服务。在所述步骤S1中，租户规则主要存储在数据库，每添加一个租户，均会配置该租户的配置规则。同时租户规则支持在线修改和实时更新，更新后的租户规则在Dubbo发起调用下游服务路由前会从数据库查询出对应的租户规则，取出租户要调用的机房，最终路由该机房的服务。在所述步骤S2中，通过在每个机房的服务部署脚本都注入该机房的机房标识，以此保证每个机房部署的服务信息有部署机房的机房标识，便于后续服务调用。然后通过注册中心完成服务自动注册，比如选择nacos注册中心，dubbo组件在服务部署时会通过TCP网络连接从nacos提取要调用的下游服务；同时dubbo组件也会在服务部署时通过TCP网络连接将当前要部署的服务，将服务注册到nacos注册中心。一个服务部署于多个机房内，作为优选，部署同一服务的多个机房的数量与该服务对应租户的数量一致。所述步骤S4包括：步骤S41、基于租户流量请求，从注册中心获取要调用的下游服务的服务列表；步骤S42、循环遍历该服务列表，找出与租户规则相匹配的机房，获取该机房中与调用的下游服务相同的服务；步骤S43、发起RPC调用，流量请求到该机房对应的服务上。其中，下游服务的服务列表在步骤S2生成，通过dubbo组件服务注册机制发布到注册中心nacos的服务，得到每个服务的服务列表。在服务调用时TCP连接nacos注册中心获取下游服务的服务列表。进一步地，所述步骤S42包括：步骤S421、遍历每个要调用的下游服务的服务列表中的服务名称、以及部署该服务的机房信息，其中机房信息是利用dubbo提供的参数设置功能，由服务部署脚本注入的机房标识生成的；步骤S422、如果当前服务列表中的机房信息和租户规则配置的机房匹配，则标识当前机房部署的服务为要调用的服务；步骤S423、重复步骤S421和步骤S422，直至遍历完成最后一个要调用的下游服务的服务列表，标识与租户规则配置相匹配的所有要调用的服务。最后利用dubbo负载均衡策略发起RPC调用，所述RPC调用包括：方法一、从步骤S423标识的所有要调用的服务中，随机选择一个服务发起调用；方法二、从步骤S423标识的所有要调用的服务中，依次调用每个服务，最后一个服务调用结束后又从第一个服务开始轮询调用，例如所有要调用的服务有三个，第一次选择一个服务调用，当第二次调用时选择第二个服务调用，第三次发起调用时选择第三个服务，第四次时又从第一个开始轮询调用；方法三、记录从步骤S423标识的所有要调用的服务的调用时长，优先选择调用时长少的一个或多个服务进行调用，例如三个服务的调用时间分别为3ms、10ms、50ms，这时在调用时会优先选择第一个、第二个服务调用，第三个服务可能影响整个服务的性能；方法四、相同调用参数的RPC请求会根据hash算法调用到同一个机房的下游服务上。优先配置用于路由的租户规则：T:代表租户， S:代表RPC服务，R：代表机房T1 -＞ S1 -＞ R1 T2 -＞ S1 -＞ R2 T1 -＞ S2 -＞ R3 T2 -＞ S2 -＞ R4 。需要说明的是本申请不限制两个租户。同理租户T1、租户T2的下游RPC服务规则、以及其他租户与RPC服务和机房的关系按照上面配置。如图2所示：当租户T1请求进入机房S0，基于租户规则RPC调用机房R1的S1服务；之后租户T1发起RPC调用S2服务，基于租户规则RPC调用机房R3的S2服务，下游各服务顺序调用同样也基于配置的租户规则实现；当租户T1请求进入机房S0，租户T1发起RPC调用S2服务，基于租户规则RPC调用机房R3的S2服务，下游各服务的非顺序调用同样也基于配置的租户规则实现。当租户T2请求进入机房S0，基于租户规则RPC调用机房R2的S1服务；之后租户T2发起RPC调用S2服务，基于租户规则RPC调用机房R4的S2服务，下游各服务顺序调用同样也基于配置的租户规则实现；当租户T2请求进入机房S0，租户T2发起RPC调用S2服务，基于租户规则RPC调用机房R4的S2服务，下游各服务的非顺序调用同样也基于配置的租户规则实现。在本实施例中，部署同一服务的多个机房的数量与该服务对应租户的数量一致，当不同租户同时发起相同服务调用时，可根据自身设定的租户规则，选择对应的机房进行服务调用，最终实现租户流量隔离和数据隔离。最后应说明的是：以上各实施例仅仅为本发明的较优实施例用以说明本发明的技术方案，而非对其限制，当然更不是限制本发明的专利范围；尽管参照前述各实施例对本发明进行了详细的说明，本领域的普通技术人员应当理解：其依然可以对前述各实施例所记载的技术方案进行修改，或者对其中部分或者全部技术特征进行等同替换；而这些修改或者替换，并不使相应技术方案的本质脱离本发明各实施例技术方案的范围；也就是说，但凡在本发明的主体设计思想和精神上作出的毫无实质意义的改动或润色，其所解决的技术问题仍然与本发明一致的，均应当包含在本发明的保护范围之内；另外，将本发明的技术方案直接或间接的运用在其他相关的技术领域，均同理包括在本发明的专利保护范围内。
