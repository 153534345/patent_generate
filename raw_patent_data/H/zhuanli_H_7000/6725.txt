标题title
基于流畅度提升的三维场景流数据播放控制方法和设备
摘要abst
本发明提供了一种基于流畅度提升的三维场景流数据播放控制方法和设备，包括：分析数据并且以设备唯一标识符为主键，内存建立由数据时间戳排序的线性表映射关系；数据处理函数用于对预定数据进行处理，附加预定业务逻辑；初始化数据处理线程后由主线程管理其生命周期；使用预设起始播放时间戳传入实例化后的数据处理线程对象，将实例化后的数据处理线程对象标记并将所有锁标记为异步状态后执行创建，启动数据处理线程；在数据处理线程中对数据加锁后进入数据处理流程，并进行单个信息或设备的计算，计算完成后对数据解锁，在主线程的每一帧中与计算线程进行同步。本发明解决了传统数字孪生系统中对历史数据信息展示不完整的问题。
权利要求书clms
1.一种基于流畅度提升的三维场景流数据播放控制方法，其特征在于，包括：将数据读入内存，分析数据并且以设备唯一标识符为主键，内存建立由数据时间戳排序的线性表映射关系；引入数据处理函数，数据处理函数用于在不破坏控制器主体逻辑且不更改控制器代码的基础上对预定数据进行处理，附加预定业务逻辑；创建并使用部分原始数据初始化数据处理线程，由主线程管理初始化后的数据处理线程的生命周期；使用预设起始播放时间戳传入实例化后的数据处理线程对象，将实例化后的数据处理线程对象标记为第0次同步，将所有锁标记为异步状态后执行创建，启动数据处理线程；在数据处理线程中对数据加锁，如果成功加锁，则进入数据处理流程，并进行单个信息或设备的计算；在单个信息或设备的计算完成后对数据解锁，在主线程的每一帧中与计算线程进行同步。2.根据权利要求1所述的基于流畅度提升的三维场景流数据播放控制方法，其特征在于，在所述内存建立由数据时间戳排序的线性表映射关系之后，还包括：若在运行初期缺乏原始数据，则使用空数据nullptr初始化数据处理线程并在之后的线程同步中对数据进行增补。3.根据权利要求2所述的基于流畅度提升的三维场景流数据播放控制方法，其特征在于，所述数据处理函数用于在不破坏控制器主体逻辑且不更改控制器代码的基础上对预定数据进行处理，附加预定业务逻辑，包括：在数据处理前执行函数ShouldDoCalculate，如果返回false则不进行本次数据处理；在索引阶段，如果当前时间比经过排序的第一个时间戳还早，则执行函数DataTimestampTooNew，如果返回false则不进行本次数据处理；在索引阶段，如果当前时间比经过排序的最后一个时间戳还晚，则执行函数DataTimestampTooOld，如果返回false则不进行本次数据处理；在计算结束后执行函数OnCalculationCompleted。4.根据权利要求3所述的基于流畅度提升的三维场景流数据播放控制方法，其特征在于，所述初始化后的数据处理线程的生命周期为数字孪生可视化系统实例构造后到数字孪生可视化系统实例析构前。5.根据权利要求4所述的基于流畅度提升的三维场景流数据播放控制方法，其特征在于，在所述启动数据处理线程之后，还包括：数据处理线程进入线程循环，开始根据由时间戳排序的数据线性表处理数据。6.根据权利要求5所述的基于流畅度提升的三维场景流数据播放控制方法，其特征在于，所述并进行单个信息或设备的计算，包括：在单个信息或设备的计算的过程中，计算插值使用的Alpha值：Alpha=/其中，D为第i个数据点位，D为第i+1个数据点位，T为当前使用的时间戳；D.timestamp为第i个数据点位的时间戳；D.timestamp为第i+1个数据点位的时间戳；采用得到的Alpha/其中，D为第i个数据点位，D为第i+1个数据点位，T为当前使用的时间戳；D.timestamp为第i个数据点位的时间戳；D.timestamp为第i+1个数据点位的时间戳；采用得到的Alpha/其中，D为第i个数据点位，D为第i+1个数据点位，T为当前使用的时间戳；D.timestamp为第i个数据点位的时间戳；D.timestamp为第i+1个数据点位的时间戳；采用得到的Alpha/其中，D为第i个数据点位，D为第i+1个数据点位，T为当前使用的时间戳；D.timestamp为第i个数据点位的时间戳；D.timestamp为第i+1个数据点位的时间戳；采用得到的Alpha、通信接口、至少一个存储器和通信总线，其中，至少一个处理器，通信接口，至少一个存储器通过通信总线完成相互间的通信。至少一个处理器可以调用至少一个存储器中的逻辑指令，以执行前述各个方法实施例提供的方法的全部或部分步骤。此外，上述的至少一个存储器中的逻辑指令可以通过软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读取存储介质中。基于这样的理解，本发明的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台计算机设备执行本发明各个方法实施例所述方法的全部或部分步骤。而前述的存储介质包括：U盘、移动硬盘、只读存储器、随机存取存储器、磁碟或者光盘等各种可以存储程序代码的介质。以上所描述的装置实施例仅仅是示意性的，其中所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部模块来实现本实施例方案的目的。本领域普通技术人员在不付出创造性的劳动的情况下，即可以理解并实施。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到各实施方式可借助软件加必需的通用硬件平台的方式来实现，当然也可以通过硬件实现。基于这样的理解，上述技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体现出来，该计算机软件产品可以存储在计算机可读存储介质中，如ROM/RAM、磁碟、光盘等，包括若干指令用以使得一台计算机设备执行各个实施例或者实施例的一些部分所述的方法。附图中的流程图和框图显示了根据本发明的多个实施例的系统、方法和计算机程序产品的可能实现的体系架构、功能和操作。基于这种认识，流程图或框图中的每个方框可以代表一个模块、程序段或代码的一部分，所述模块、程序段或代码的一部分包含一个或多个用于实现规定的逻辑功能的可执行指令。也应当注意，在有些作为替换的实现方式中，方框中所标注的功能也可以以不同于附图中所标注的顺序发生。例如，两个连续的方框实际上可以基本并行地执行，有时也可以按相反的顺序执行，这依所涉及的功能而定。也要注意的是，框图和/或流程图中的每个方框、以及框图和/或流程图中的方框的组合，可以用执行规定的功能或动作的专用的基于硬件的系统来实现，或者可以用专用硬件与计算机指令的组合来实现。需要说明的是，术语“包括”、“包含”或者其任何其它变体意在涵盖非排它性的包含，从而使得包括一系列要素的过程、方法、物品或者设备不仅包括那些要素，而且还包括没有明确列出的其它要素，或者是还包括为这种过程、方法、物品或者设备所固有的要素。在没有更多限制的情况下，由语句“包括……”限定的要素，并不排除在包括所述要素的过程、方法、物品或者设备中还存在另外的相同要素。最后应说明的是：以上实施例仅用以说明本发明的技术方案，而非对其限制；尽管参照前述实施例对本发明进行了详细的说明，本领域的普通技术人员应当理解：其依然可以对前述各实施例所记载的技术方案进行修改，或者对其中部分技术特征进行等同替换；而这些修改或者替换，并不使相应技术方案的本质脱离本发明各实施例技术方案的精神和范围。
