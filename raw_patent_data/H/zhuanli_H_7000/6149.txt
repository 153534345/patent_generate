标题title
一种基于WebRTC的服务器远程维护方法、系统及设备
摘要abst
本发明公开了一种基于WebRTC的服务器远程维护方法、系统及设备，涉及远程运维领域；本方法包括通过权限验证服务器建立基于WebRTC的加密通信，获取请求端的视频和音频文件，进行多因素验证并生成唯一校验码，并在请求端开启屏幕录制，将所述屏幕录制生成的文件和校验码配对存储；本发明能实现对远程控制的高安全性验证和高追溯性，解决在远程运维中的身份安全问题和对远程运维内容难以详细追溯的问题。
权利要求书clms
1.一种基于WebRTC的服务器远程维护方法，其特征在于，所述方法包括：步骤101：请求端向权限验证服务器发送身份校验请求和验证文件；所述验证文件包括音频文件和视频文件；步骤102：权限验证服务器按照以下顺序进行操作：接收音频文件和视频文件、进行第一安全验证、解码音频文件和保存验证文件，基于所述权限验证服务器的语音验证库对音频文件进行第一安全验证，基于所述权限验证服务器的人脸验证库对视频文件进行第二安全验证，并基于第一安全验证和第二安全验证的验证结果生成唯一校验码；所述第一安全验证和所述第二安全验证用于对请求方进行身份校验，所述校验码还储存本次身份校验请求的信息；步骤103：所述身份校验请求通过后，权限验证服务器基于WebRTC向目标服务器和请求端建立加密数据通信或为目标服务器和请求端之间建立点对点的加密数据通信，并将校验码和控制请求发送至目标服务器，将画面录制请求响应至请求端；步骤104：目标服务器响应控制请求并接受远程控制，目标服务器解析校验码中的信息，结合所述校验码中的信息对本次远程控制的操作进行日志记录；步骤105：请求端接受画面录制请求并进入远程控制状态，所述远程控制状态允许请求端对目标服务器进行远程操作，所述请求端处于远程控制状态时将对请求端的画面进行录制并将录制画面传送至权限验证服务器；步骤106：权限验证服务器接收所述录制画面并将所述校验码与所述录制画面进行配对存储。2.根据权利要求1所述的一种基于WebRTC的服务器远程维护方法，其特征在于，所述校验码中的信息包括：是否校验成功、请求端发起时间、请求端设备号、验证文件存储路径和验证文件的文件名。3.根据权利要求1所述的一种基于WebRTC的服务器远程维护方法，其特征在于，所述第一安全验证采用语音验证的方式进行验证，具体包括：建立语音验证库，语音验证库包括至少一个口令文本，所述第一安全验证使用语音转文字程序将所述音频文件转化为文字口令，并将所述文字口令和所述多个口令文本中的内容进行比对，生成语音内容验证结果，所述语音内容验证结果用于识别请求端的权限。4.根据权利要求1所述的一种基于WebRTC的服务器远程维护方法，其特征在于，所述第一安全验证采用声纹验证的方式进行验证，具体包括：建立声纹图谱库，声纹图谱库包括至少一个声纹图谱，所述第一安全验证使用声纹识别将所述音频文件转化为用户声纹图谱，并将用户声纹图谱和所述声纹图谱库中的声纹图谱进行比对，生成声纹验证结果，所述声纹验证结果用于识别请求端的权限。5.根据权利要求1所述的一种基于WebRTC的服务器远程维护方法，其特征在于，所述第二安全验证采用人像视频的方式进行验证，具体包括建立人脸验证库，人脸验证库包括至少一个人脸验证对象，所述第二安全验证对视频文件进行截取，生成有正面人像的视频，并基于人脸验证库对所述有正面人像的视频进行安全验证，生成人像视频验证结果，所述人像视频验证结果用于识别请求端的权限。6.根据权利要求1所述的一种基于WebRTC的服务器远程维护方法，其特征在于，所述第二安全验证采用人脸图片的方式进行验证，具体包括建立人脸验证库，人脸验证库包括至少一个人脸图片信息，所述第二安全验证对视频文件进行截取，生成具有人脸的图片，并基于人脸验证库对所述具有人脸的图片进行安全验证，生成人脸验证结果，所述人脸验证结果用于识别请求端的权限。7.根据权利要求1所述的一种基于WebRTC的服务器远程维护方法，其特征在于，所述请求端为移动端设备，所述移动端设备上包括应急处置模块，所述目标服务器上存储有紧急处置脚本，所述应急处置模块允许移动端执行所述紧急处置脚本和获取紧急处置脚本运行结果；所述紧急处置脚本为一组用于对目标服务器做故障排查和故障处置的自动化脚本。8.根据权利要求1所述的一种基于WebRTC的服务器远程维护方法，其特征在于，所述方法还包括创建关键帧画面截取系统，所述关键帧画面截取系统包括：录屏模块、检测模块、关键帧画面截取模块、图像加工模块和数据发送模块；所述录屏模块用于请求端处于远程控制状态时对请求端录屏；所述检测模块用于记录请求端在录屏开启后发生操作的时间间隔以及操作内容，以及将所述时间间隔传递给关键帧画面截取模块，将所述操作内容传递给图像加工模块；关键帧画面截取模块用于根据时间间隔和录屏截取操作发生时的屏幕图像；所述图像加工模块将根据所述操作内容对所述屏幕图像进行标记处理生成标记图像并发送给存储发送模块，所述标记处理为在所述屏幕图像上记录操作内容；所述数据发送模块用于存储所述标记图像并在接收到所述标记图像后将所述标记图像发送到权限验证服务器。9.根据权利要求1所述的一种基于WebRTC的服务器远程维护方法，其特征在于，所述方法还包括创建第三安全验证模块；所述第三安全验证模块用于收到第一个项目文件夹访问操作时，以所述项目文件夹的文件夹名为根节点，在根节点下查找子目录并记录其子目录名，当所述查找执行至少一次后，将所述子目录名以符合原存储结构的树形结构发送至请求端；请求端将所述树形结构通过用户界面进行展示并获取请求端的输入结果，请求端将所述输入结果发送到第三安全验证模块；所述第三安全验证模块基于上述至少一次的查找，再执行至少一次查找并获取下一级全部用于验证的子目录名，并将所述输入结果在所述用于验证的子目录名中进行遍历比对，若存在有子目录名和输入结果比对一致则第三安全验证通过。10.一种基于WebRTC的服务器远程维护系统，其特征在于，所述系统包括：远程控制单元，用于在请求端发送验证文件、远程控制目标服务器和接受录制请求并录制本设备画面传送至身份校验单元，所述验证文件包括视频文件和音频文件；身份校验单元，用于对所述音频文件进行第一安全验证，对所述视频文件进行第二安全验证，基于第一安全验证和第二安全验证的验证结果和请求信息生成校验码；根据所述验证结果，选择是否基于WebRTC向目标服务器和远程控制单元建立加密数据通信，或者为目标服务器和请求端之间建立点对点的加密数据通信，并利用所述通信向目标服务器发送控制请求、校验码，以及向远程控制单元发送屏幕录制请求；基于屏幕录制请求的响应结果，选择是否建立对目标服务器的远程控制，接收远程控制单元的屏幕录制文件，并将所述录制文件和所述校验码配对存储；接受控制单元，用于在目标服务器上接受校验码和控制请求，解析校验码信息，并将本次远程控制的操作进行日志记录。11.根据权利要求10所述的一种基于WebRTC的服务器远程维护系统，其特征在于，所述远程控制单元应用于移动端，所述远程控制单元包括应急处置模块，所述接受控制单元包括紧急处置脚本，移动端通过所述应急处置模块执行所述紧急处置脚本和获取紧急处置脚本运行结果；所述紧急处置脚本为一组用于对目标服务器做故障排查和故障处置的自动化脚本。12.一种基于WebRTC的服务器远程维护设备，包括存储器、处理器和存储在存储器上并可在处理器上运行的计算机程序，其特征在于，处理器执行所述程序时实现如权利要求1至9中任一项所述的基于WebRTC的服务器远程维护方法。
说明书desc
技术领域本发明涉及服务器运维领域，具体地，涉及一种基于WebRTC的服务器远程维护方法、系统及设备。背景技术随着数字化和网络化程度的提高，远程运维的技术需求正逐渐增加。分布式架构和云计算：许多组织和企业采用分布式架构和云计算模型来管理和部署其IT基础设施。这意味着服务器和设备分散在不同的地理位置，远程运维的技术成为必要的手段。远程运维的技术能够提供高效、实时的远程访问和控制，以便对分布式系统进行监控、管理和故障排除。跨地域和跨国企业：全球化和跨地域企业的增加使得远程运维的技术成为必要的工具。远程运维的技术可以帮助企业在不同地理位置的服务器和设备之间进行远程访问和维护，减少物理出差和维护成本，提高效率和响应能力。物联网和工业自动化：随着物联网和工业自动化的快速发展，大量的设备和传感器被连接到网络上，需要进行远程监控和管理。远程运维的技术能够实现对分布式设备的远程访问、配置和故障排除，确保设备的正常运行和可靠性。然而，随着远程运维的技术需求增加，关于远程运维中出现的一些问题也逐渐暴露并得到重视。其一，身份验证和访问控制不完善：远程运维中涉及对敏感数据和关键系统的远程访问和控制，因此身份验证问题需要得到特别关注；现有技术在身份验证上多采用密码、公钥加密、数字证书等方式对访问者进行验证，其中密码为最常见的方式，但存在着较大风险，例如弱密码、遗忘密码、泄露密码、暴力破解、多账号同密码等问题，而安全性较高的双因素认证手段较为缺乏。其二，数据传输安全性不足：一些远程控制技术在数据传输过程中缺乏足够的加密和安全保护措施。这可能导致数据在传输过程中被窃听、篡改或泄露。缺乏端到端加密的技术可能使敏感信息容易受到攻击。其三，安全审计和日志记录不全面：一些远程控制技术在安全审计和日志记录方面不够全面和细致。可能缺乏对用户操作的详细日志记录，或者日志记录不包括足够的上下文信息，难以进行准确的安全审计和事件调查，对远程运维的过程和结果缺乏可追溯性。其四，第三方依赖和供应链风险：远程控制技术通常依赖于第三方软件库、组件或服务。但这些依赖关系可能存在供应链攻击的风险，即攻击者通过操纵或篡改第三方组件来获得对远程控制系统的非法访问。其五，延迟和带宽限制：传统远程运维的技术如SSH或远程桌面协议通常存在一定的延迟，尤其是在网络连接较慢或带宽有限的情况下。这可能导致操作的响应时间延长，并降低远程控制的实时性和效率。其六，中心化架构的风险：很多远程运维的技术采用中心化架构，即所有的远程连接都需要通过中间服务器进行中转。这种架构可能导致单点故障问题，一旦中间服务器发生故障或遭受攻击，所有的远程连接都可能中断或受到影响。其七，平台限制：很多远程运维的技术可能受到平台限制，只能在特定的操作系统或设备上使用。这可能导致灵活性和扩展性上的局限，特别是当需要远程管理多种不同类型的服务器或设备时。发明内容本发明提供了一种基于WebRTC的服务器远程维护方法、系统及设备，解决了服务器远程运维中，安全性不足、运维的过程可追溯性不强的问题。具体方案为：一种基于WebRTC的服务器远程维护方法，所述方法包括：步骤101：请求端向权限验证服务器发送身份校验请求和验证文件；所述验证文件包括音频文件和音频文件；步骤102：权限验证服务器按照以下顺序进行操作：接收音频文件、进行第一安全验证、解码音频文件和保存验证文件，基于所述权限验证服务器的语音验证库对音频文件进行第一安全验证，基于所述权限验证服务器的人脸验证库对视频文件进行第二安全验证，并基于第一安全验证和第二安全验证的验证结果生成唯一校验码；所述第一安全验证和所述第二安全验证用于对请求方进行身份校验，所述校验码用于储存本次身份校验请求的信息；步骤103：所述身份校验请求通过后，权限验证服务器基于WebRTC向目标服务器和请求端建立加密数据通信，或为目标服务器和请求端之间建立点对点的加密数据通信，并将校验码和控制请求发送至目标服务器，将画面录制请求响应至请求端；步骤104：目标服务器响应控制请求并接受远程控制，目标服务器解析校验码中的信息，结合所述校验码中的信息对本次远程控制的操作进行日志记录；步骤105：请求端接受画面录制请求并进入远程控制状态，所述远程控制状态允许请求端对目标服务器进行远程操作，所述请求端处于远程控制状态时将对请求端的画面进行录制并将录制画面传送至权限验证服务器；步骤106：权限验证服务器接收所述录制画面并将所述校验码与所述录制画面进行配对存储。本方案基于WebRTC建立点对点加密通信，在远程控制中，无需第三方服务的中转，减少了延迟，提高了响应速度，提供了更好的实时性；采用双因素生物信息验证，提高了身份识别的安全性；增加了对运维过程的录屏和校验码的配对存储，极大提高了对运维内容的追溯性；本方案可自行编写代码实现，减少了第三方依赖和供应链风险；采用TLS进行点对点通信加密，减少第三方窃取信息的风险，提高了传输安全性；一旦通过验证，建立点对点加密通信后，则无需担心中间架构出问题导致的大片远程控制受影响，减少了单点故障问题的影响；WebRTC采用了标准化的协议和API并得到大多数主流浏览器的支持，具有很好的跨平台特性，允许本方案在远程控制中涉及不同系统和设备。方案的原理为：基于WebRTC可以点对点加密通信和音视频传输的特性，在对远程设备控制前，采用权限验证服务器和请求端进行音视频文件加密通信，获取音视频文件后，采用语音和脸部识别的多因素验证来确保访问的安全性，并采用唯一校验码储存设备号在内的关键信息，校验通过后，利用权限验证服务器在需要维护的目标服务器和请求端之间建立加密信道，提供安全和稳定的远程控制能力。作为优选方案，所述校验码中的信息包括：是否校验成功、请求端发起时间、请求端设备号、验证文件存储路径和验证文件的文件名。校验码中的信息之一是一个标识，用于指示校验是否成功。通过该标识，可以判断请求端的验证是否成功，从而决定是否授予相应的权限。校验码中包含了请求端发起验证的时间信息，记录了验证请求的时间戳。这个时间戳可以用于后续的验证记录和溯源。帮助系统进行日志记录和安全审计。校验码中还包含了请求端设备的唯一标识号，用于标识发起验证的具体设备。这可以帮助进行设备的识别和追踪。这对于设备管理和风险控制非常重要，可以帮助系统判断请求的合法性和可信度。校验码中还包含了验证文件的存储路径和文件名。这些信息可以指示系统在哪里存储验证文件以及验证文件的具体名称。通过这些信息，系统可以准确地定位和检索验证文件，以便进行进一步的处理或存档。作为优选方案，所述第一安全验证采用语音验证的方式进行验证，具体包括：建立语音验证库，语音验证库包括至少一个口令文本，所述第一安全验证使用语音转文字程序将所述音频文件转化为文字口令，并将所述文字口令和所述多个口令文本中的内容进行比对，生成语音内容验证结果，所述语音内容验证结果用于识别请求端的权限。获取到的语音实际可以为自然语言，通过语音转文字，可以获得其中的信息，再通过权限分配人员提前设置的文本，将语音转文字的结果和文本中的内容比对，可以判断是否具有权限或者具有什么层次的权限，有利于在分发权限中，快速切换、注销和更改权限，有利于在远程运维中，快速获取多个设备的控制权限，提高了灵活性和可拓展性。作为优选方案，所述第一安全验证采用声纹验证的方式进行验证，具体包括：建立声纹图谱库，声纹图谱库包括至少一个声纹图谱，所述第一安全验证使用声纹识别将所述音频文件转化为用户声纹图谱，并将用户声纹图谱和所述声纹图谱库中的声纹图谱进行比对，生成声纹验证结果，所述声纹验证结果用于识别请求端的权限。所述方案采用声纹验证，利用个体声音的特征进行身份验证，具有较高的安全性。每个人的声音特征是独一无二的，难以伪造和冒充，从而提高了身份验证的可靠性。声纹验证可以实时地对音频文件进行处理和比对，提供快速的验证响应时间。这意味着请求端可以即时进行声纹验证，提高了验证的实时性和准确性。声纹图谱库可以容纳多个声纹图谱，因此可以灵活地管理和更新验证库中的声纹信息。这样，可以方便地添加新的授权用户或删除不再需要的用户，提高了可拓展性。作为优选方案，所述第二安全验证采用人像视频的方式进行验证，具体包括建立人脸验证库，人脸验证库包括至少一个人脸验证对象，所述第二安全验证对视频文件进行截取，生成有正面人像的视频，并基于人脸验证库对所述有正面人像的视频进行安全验证，生成人像视频验证结果，所述人像视频验证结果用于识别请求端的权限。采用人像视频进行安全验证可以提供较高的安全性。人脸包含丰富的生物特征信息，通过对人像视频进行验证，可以更全面地判断请求端的身份真实性，降低身份冒充的风险，提高了安全性。建立人脸验证库可以容纳多个人脸验证对象的信息，因此可以灵活地管理和更新验证库中的人脸信息。这样，可以方便地添加新的授权用户或删除不再需要的用户，提高了可扩展性。与传统的密码或指纹验证相比，人像视频验证对用户来说更加方便和友好。用户只需提供自己的人像视频，无需记住复杂的密码或进行特定的操作，从而提高了用户体验，提高了用户友好性。作为优选方案，所述第二安全验证采用人脸图片的方式进行验证，具体包括建立人脸验证库，人脸验证库包括至少一个人脸图片信息，所述第二安全验证对视频文件进行截取，生成具有人脸的图片，并基于人脸验证库对所述具有人脸的图片进行安全验证，生成人脸验证结果，所述人脸验证结果用于识别请求端的权限。在人脸验证中，由于视频包含多个帧，还受姿态、表情和光照等因素影响，图片的比对效率远高于视频比对效率，因此，本方案采取截取人脸图片，再用图片进行人脸识别的方式进行验证，提高了安全验证的效率和系统的性能。作为优选方案，所述请求端为移动端设备，所述移动端设备上包括应急处置模块，所述目标服务器上存储有紧急处置脚本，所述应急处置模块允许移动端执行所述紧急处置脚本和获取紧急处置脚本运行结果；所述紧急处置脚本为一组用于对目标服务器做故障排查和故障处置的自动化脚本。所述方案通过在移动端设备上添加应急处置模块，在服务器内添加紧急处置脚本，管理员可以即时对目标服务器上的故障进行诊断和处置。这可以大大缩短故障响应时间，减少故障对业务的影响；从而提供了快速响应和处置的能力。移动端应急处置模块使管理员可以随时随地执行紧急处置脚本，无需依赖特定的终端设备或位置，这提供了更大的灵活性和便捷性，特别是在紧急情况下。紧急处置脚本的自动化执行使得故障排查和处置过程更高效、准确。管理员可以通过执行脚本来自动完成一系列故障处理任务，而无需手动操作，从而实现了自动化故障处理的效果。通过在移动端设备上执行紧急处置脚本并获取结果，可以减少对服务器直接操作的需求，从而降低了潜在的安全风险。管理员可以通过移动设备安全地执行故障排查和处置任务，提高了运维的安全性。作为优选方案，所述方法还包括创建关键帧画面截取系统，所述关键帧画面截取系统包括：录屏模块、检测模块、关键帧画面截取模块、图像加工模块和数据发送模块；所述录屏模块用于请求端处于远程控制状态时对请求端录屏；所述检测模块用于记录请求端在录屏开启后发生操作的时间间隔以及操作内容，以及将所述时间间隔传递给关键帧画面截取模块，将所述操作内容传递给图像加工模块；关键帧画面截取模块用于根据时间间隔和录屏截取操作发生时的屏幕图像；所述图像加工模块将根据所述操作内容对所述屏幕图像进行标记处理生成标记图像并发送给存储发送模块，所述标记处理为在所述屏幕图像上记录操作内容；所述数据发送模块用于存储所述标记图像并在接收到所述标记图像后将所述标记图像发送到权限验证服务器。由于远程运维需要足够的网络资源，因此在后台实时传输屏幕录制文件对远程运维会造成一定的影响，在网络条件不充足时尤为明显，如果在远程运维结束后进行传输，则面临人为中断网络等恶意破坏传输行为的可能，造成一定的风险性。录屏功能可以实时捕捉请求端的屏幕图像，提供了对远程控制过程的可视化监控。关键帧画面截取模块能够根据时间间隔和操作发生时的屏幕图像，截取关键帧，从而减少图像数据的传输量。图像加工模块对关键帧图像进行标记处理，可以记录操作内容，提供了对远程控制过程中操作的可视化描述。数据发送模块将标记图像发送到权限验证服务器，用于存储和分析远程控制过程中的操作内容，从而提供后续审查和分析的依据。因此本方案占用网络资源小，提供了对远程控制过程的实时监控和操作内容的记录，增强了远程维护的可视化和审计能力。作为优选方案，所述方法还包括创建第三安全验证模块；所述第三安全验证模块用于收到第一个项目文件夹访问操作时，以所述项目文件夹的文件夹名为根节点，在根节点下查找子目录并记录其子目录名，当所述查找执行至少一次后，将所述子目录名以符合原存储结构的树形结构发送至请求端；请求端将所述树形结构通过用户界面进行展示并获取请求端的输入结果，请求端将所述输入结果发送到第三安全验证模块；所述第三安全验证模块基于上述至少一次的查找，再执行至少一次查找并获取下一级全部用于验证的子目录名，并将所述输入结果在所述用于验证的子目录名中进行遍历比对，若存在有子目录名和输入结果比对一致则第三安全验证通过。由于运维人员往往对服务器的文件结构有较高熟悉度，尤其是自己负责中的项目。本方案还提供一个第三安全验证模块，第三安全验证模块提供了额外的验证层，增强了对请求端的身份认证和权限控制。通过验证请求端对项目文件夹的访问路径，可以确保只有经过身份验证的用户能够访问敏感的文件夹和资源，提高了访问的安全性。另外还通过树形结构展示子目录名，并要求请求端提供输入结果进行比对，可以防止恶意攻击者通过推测或猜测路径来获取敏感信息。只有在输入结果与验证子目录名一致时，第三安全验证才会通过，确保了访问的合法性，避免了信息泄露，提高了抵御恶意访问和攻击的能力。本发明的目的还在于提供一种基于WebRTC的服务器远程维护系统。具体方案为：所述系统包括：远程控制单元，用于在请求端发送验证文件、远程控制目标服务器和接受录制请求并录制本设备画面传送至身份校验单元，所述验证文件包括视频文件和音频文件；身份校验单元，用于对所述音频文件进行第一安全验证，对所述视频文件进行第二安全验证，基于第一安全验证和第二安全验证的验证结果和请求信息生成校验码；根据所述验证结果，选择是否基于WebRTC向目标服务器和远程控制单元建立加密数据通信，或者为目标服务器和请求端之间建立点对点的加密数据通信，并利用所述通信向目标服务器发送控制请求、校验码，以及向远程控制单元发送屏幕录制请求；基于屏幕录制请求的响应结果，选择是否建立对目标服务器的远程控制，接收远程控制单元的屏幕录制文件，并将所述录制文件和所述校验码配对存储；接受控制单元，用于在目标服务器上接受校验码和控制请求，解析校验码信息，并将本次远程控制的操作进行日志记录。作为优选方案，所述远程控制单元应用于移动端，所述远程控制单元包括应急处置模块，所述接受控制单元包括紧急处置脚本，移动端通过所述应急处置模块执行所述紧急处置脚本和获取紧急处置脚本运行结果；所述紧急处置脚本为一组用于对目标服务器做故障排查和故障处置的自动化脚本。通过远程控制单元，移动端用户可以远程控制和管理其他设备，如目标服务器。这可以提供灵活性和便利性，使用户能够在任何时间和地点对设备进行操作和管理。紧急处置脚本为移动端提供了紧急情况下的故障排查和故障处置能力。用户可以执行这些脚本来快速诊断和解决问题，减少故障修复时间，提高系统的可用性和稳定性。自动化脚本的使用可以提高故障排查和故障处置的效率。通过在移动端执行脚本，用户可以快速进行故障定位和解决，减少人工操作和响应时间，提高故障处理的效率和准确性。本发明的目的还在于提供一种基于WebRTC的服务器远程维护设备。具体方案为：包括存储器、处理器和存储在存储器上并可在处理器上运行的计算机程序，处理器执行所述程序时实现基于WebRTC的服务器远程维护方法。有益效果为：可以理解的，当前的远程运维的方法中，安全验证较弱，对服务器的远程运维的过程往往依赖第三方服务器，需要额外的网络开销，延迟高，安全性不足，可追溯性不足。本发明基于以上缺点，采用了基于WebRTC的多因素验证方案，在远程控制和管理中提高了安全性，可追溯性并基于WebRTC，可以适用于跨平台，多系统的情况。进一步的，基于本发明的优选方案和原理，本发明对第三方服务器或服务提供方依赖小，提供了应急功能，提高了项目文件的安全性，提高了安全验证的效率和可扩展性。附图说明此处所说明的附图用来提供对本发明实施例的进一步理解，构成本发明的一部分，并不构成对本发明实施例的限定；图1是实施例1中提供的一种基于WebRTC的服务器远程维护方法的流程示意图；图2是实施例2中提供的一种第二安全验证的方法示意图；图3是实施例3中提供的一种应急处置模块的系统架构示意图；图4是实施例3中提供的一种关键帧画面截取系统的程序流程图。具体实施方式为了能够更清楚地理解本发明的上述目的、特征和优点，下面结合附图和具体实施方式对本发明进行进一步的详细描述。需要说明的是，在相互不冲突的情况下，本发明的实施例及实施例中的特征可以相互组合。在下面的描述中阐述了很多具体细节以便于充分理解本发明，但是，本发明还可以采用其他不同于在此描述范围内的其他方式来实施，因此，本发明的保护范围并不受下面公开的具体实施例的限制。实施例1图 1为本发明实施例1中提供的一种基于WebRTC的服务器远程维护方法的流程示意图，如图 1和图2所示，本实施例的基于WebRTC的服务器远程维护方法可以包括以下步骤：步骤 101：请求端向权限验证服务器发送身份校验请求和验证文件；所述验证文件包括音频文件和音频文件；其中的请求端包括但不限于是电脑、手机和平板，权限验证服务器包括但不限于是自研的具有相应功能的服务器或者第三方服务器。其中的发送身份校验请求可以是通过内置软件、系统和网页端应用；本例采用windows系统的电脑作为请求端，自研的具有相应功能的服务器作为权限验证服务器。具体的，运维人员打开windows系统的个人电脑中的内置应用，点击请求控制按钮，并授权应用访问摄像头和麦克风，应用使用WebRTC API创建一个RTC连接对象，并使用摄像头捕获视频流，通过RTC连接对象将视频流发送到权限验证服务器；使用麦克风录制声音，并通过RTC连接对象将音频流发送到权限验证服务器。可以理解的，根据WebRTC来开发一个内置应用可以通过信令交换、ICE候选者的收集和选择、传输协议的选择等方式，具体采用取决于取决于WebRTC库和服务器端技术栈。步骤102：权限验证服务器按照以下顺序进行操作：接收音频文件、进行第一安全验证、解码音频文件和保存验证文件，基于所述权限验证服务器的语音验证库对音频文件进行第一安全验证，基于所述权限验证服务器的人脸验证库对视频文件进行第二安全验证，并基于第一安全验证和第二安全验证的验证结果生成唯一校验码；所述语音验证模块和人脸验证模块用于对请求方进行身份校验，所述校验码还储存本次身份校验请求的信息；其中的语音验证库包括但不限于是预置的声纹图谱和对接收到的音频文件进行分析和处理的音频处理库Librosa或声纹识别库Kaldi，所述分析和处理包括但不限于是提取声纹特征和计算音频指纹等。其中第一安全验证包括但不限于是使用语音验证算法GMM-UBM或i-vector对音频文件进行第一安全验证。其中的人脸验证库包括但不限于是预置的人脸数据和对接收到的视频文件进行分析和处理的视频处理库OpenCV或视频处理库FFmpeg；所述分析和处理包括但不限于提取人脸特征、进行人脸检测和识别等。其中第二安全验证包括但不限于是使用人脸验证算法如人脸识别模型、人脸关键点检测对视频文件进行第二安全验证。其中校验码包括但不限于是JWT、MD5和SHA-256等。其中本次身份校验请求的信息包括但不限于是否校验成功、请求端发起时间、请求端设备号、验证文件存储路径和证文件的文件名等。具体的，权限验证服务器接受请求、音频文件和视频文件，基于声纹识别库Kaldi对所述音频文件进行声纹提取，并通过i-vector将其和预置的声纹图谱进行比对，生成声纹验证结果。基于视频处理库OpenCV对接接收到的视频文件进行面部特征提取，并通过人脸识别模型将其和预置的人脸数据进行对比，生成人脸验证结果。权限验证服务器将声纹验证结果、人脸验证结果、是否校验成功、请求端发起时间、请求端设备号、验证文件存储路径和证文件的文件名通过单向哈希函数SHA-256生成一组对应的哈希值。进一步的，所述语音验证库还可以包括预置的口令文本，文本中记录了权限验证所需的文字内容如：Access granted,所述第一安全验证采用语音转文字的程序，例如Google Cloud Speech-to-Text API或其他语音识别技术，将客户端发送的音频文件转化为文字口令，并将转化得到的文字口令与语音验证库中的口令文本进行比对，在本例中，将转化得到的文字口令与 "Access granted" 进行比对。如果转化得到的文字口令与任何一个口令文本匹配，生成验证结果为 "Access granted"，表示验证通过。如果转化得到的文字口令与口令文本不匹配，生成验证结果为 "Access denied"，表示验证失败。该优选方案使用WebRTC技术作为基础，结合语音验证和转文字技术，实现了基于语音的第一次安全验证。通过建立语音验证库，并将客户端发送的音频文件转化为文字口令，与口令文本进行比对，可以验证请求端的权限。这种方案可以增强服务器远程维护的安全性，防止未授权的访问，以及便于更改、注销权限等行为，提高了权限管理的灵活性。进一步的，所述第二安全验证还包括建立人脸验证库：权限验证服务器的管理员事先收集并注册至少一个人脸验证对象的面部信息，包括图片或视频片段。这些面部信息将用于后续的人脸验证过程。请求端通过摄像头采集视频，并将其传输到权限验证服务器。服务器对接收到的视频文件进行处理，截取其中包含正面人像的视频片段。使用人脸识别算法对截取的正面人像视频片段进行人脸验证。该算法将与人脸验证库中的面部信息进行比对，以确定是否存在匹配。该优选方案采用截取有效人脸视频的方式，提供了更稳定的身份验证增强了远程控制操作的安全性和稳定性。步骤103：所述身份校验请求通过后，权限验证服务器基于WebRTC向目标服务器和请求端建立加密数据通信，或为目标服务器和请求端之间建立点对点的加密数据通信，并将校验码和控制请求发送至目标服务器，将画面录制请求响应至请求端；其中加密数据通信包括但不限于是DTLS、SRTP和SDES等。目标服务器包括但不限于是windows、Unix、Linux和Netware等。具体的，权限验证服务器将哈希值和控制请求发送至Linux服务器，使用DTLS在Linux服务器和请求端之间建立点对点的加密数据通信，并将屏幕录制请求发送至请求端。步骤104：目标服务器响应控制请求并接受远程控制，目标服务器解析校验码中的信息，结合所述校验码中的信息对本次远程控制的操作进行日志记录；其中日志记录包括但不限于是时间戳、操作类型、操作者信息、目标资源、操作结果、错误信息、操作详情、安全认证信息、日志级别等等。具体的，Linux服务器接收控制请求并接受运维人员的个人电脑的远程控制，通过对比哈希值和服务器预置的哈希值，解析出相关信息，在记录本次日志如下：时间戳:2023-11-02 15:30:45，操作类型: 文件上传，操作者信息: 用户名 - JohnDoe, IP地址：192.168.0.1，目标资源: 文件名: report.pdf，操作结果: 成功，操作详情: 上传文件大小：2.5 MB，安全认证信息: 令牌：ABC123XYZ，日志级别: 信息。可以理解的,日志操作发生在每次运维人员的操作之后。步骤105：请求端接受画面录制请求并进入远程控制状态，所述远程控制状态允许请求端对目标服务器进行远程操作，所述请求端处于远程控制状态时将对请求端的画面进行录制并将录制画面传送至权限验证服务器；具体的，运维人员的个人电脑收到屏幕录制请求后，运维人员选择同意，所述个人电脑开启屏幕录制并进入远程控制状态；所述个人电脑还将实时传送屏幕录制的内容到权限验证服务器。步骤106：权限验证服务器接收所述录制画面并将所述校验码与所述录制画面进行配对存储。其中配对存储包括但不限于是数据库关联存储、文件系统存储和分布式存储系统。具体的，权限验证服务器将会在文件系统中创建一个映射表，将上述的哈希值作为键，将对应的屏幕录制文件名或文件路径作为值进行存储。将映射表存储为一个文件，例如JSON或CSV格式的文件。本实施例中，基于WebRTC的服务器远程维护方法通过身份验证、加密通信、日志记录和录制存储等手段提高了服务器远程维护的安全性和管理灵活性。它可以防止未授权访问，确保只有经过身份验证的请求端可以进行远程控制操作，并提供了审计和追踪的功能。实施例2基于实施例1中的一种基于WebRTC的服务器远程维护方法，本实施例2中第二安全验证还提供了一种验证方法，如图2所示，包括：所述第二安全验证采用人像视频的方式进行验证，具体包括建立人脸验证库，人脸验证库包括至少一个人脸验证对象，所述第二安全验证对视频文件进行截取，生成有正面人像的视频，并基于人脸验证库对所述有正面人像的视频进行安全验证，生成人像视频验证结果，所述人像视频验证结果用于识别请求端的权限。具体的，权限服务器的管理员收集并注册了三个人脸验证对象的面部信息，包括张三、李四和王五的正面照片，请求端通过摄像头采集了一段视频，并将其传输到权限验证服务器，权限验证服务器对接收到的视频文件进行处理，使用人脸检测算法检测出视频中的人脸，并从中截取出具有人脸的图片。权限验证服务器使用人脸验证算法将截取的图片与人脸验证库中的人脸图片进行比对。算法采用人脸特征提取和匹配算法，对比截取的人脸图片与人脸验证库中的人脸图片。基于人脸验证的结果，生成人脸验证结果。如果验证成功，结果将表明请求端的权限被确认为合法。本实施例中，权限验证服务器采用截取图片进行验证可以避免对整个视频进行处理和存储，减少了数据量和处理复杂度。实施例3基于实施例1中的一种基于WebRTC的服务器远程维护方法，本实施例3中还提供了一项应急处置模块，如图3所示，包括：所述请求端为移动端设备，所述移动端设备上包括应急处置模块，所述应急处置模块可以是应急处置程序或应急处置软件，所述目标服务器上存储有紧急处置脚本，所述应急处置模块允许移动端执行所述紧急处置脚本和获取紧急处置脚本运行结果；所述紧急处置脚本为一组用于对目标服务器做故障排查和故障处置的自动化脚本。其中紧急处置脚本包括但不限于是日志分析脚本、网络连接测试脚本、配置修改脚本和自动化故障排查脚本等。具体的，请求端为一台安卓系统的手机，该手机上有一个应急处置软件，所述应急处置软件向Linux服务器直接建立加密通信，并发送一个紧急请求，所述紧急请求中包含脚本的标识符log_analysis；Linux服务器接收到请求后，根据请求中指定的脚本标识符，调用log_analysis.sh用于分析目标服务器的日志文件，检测异常事件和错误信息。本方案通过移动端设备触发或调用位于服务器上的紧急处置脚本，提高了故障响应效率、实现了远程自动化故障处理，并具有灵活性、便捷性、减少人工错误、远程管理和监控，以及提高系统稳定性和可用性的优点。通过远程调用脚本，移动端设备可以快速响应故障情况并自动执行相应任务，减少了人工操作和人为错误的风险，提高了系统的稳定性和可用性。同时，移动端设备可以随时管理和监控远程服务器，为故障处理提供实时支持。实施例4基于实施例1中的一种基于WebRTC的服务器远程维护方法，本实施例4中还提供了一个关键帧画面截取系统，如图4所示包括：创建关键帧画面截取系统，所述关键帧画面截取系统包括：录屏模块、检测模块、关键帧画面截取模块、图像加工模块和数据发送模块；所述录屏模块用于请求端处于远程控制状态时对请求端录屏；所述检测模块用于记录请求端在录屏开启后发生操作的时间间隔以及操作内容，以及将所述时间间隔传递给关键帧画面截取模块，将所述操作内容传递给图像加工模块；关键帧画面截取模块用于根据时间间隔和录屏截取操作发生时的屏幕图像；所述图像加工模块将根据所述操作内容对所述屏幕图像进行标记处理生成标记图像并发送给存储发送模块，所述操作内容包括但不限于鼠标点击和键盘输入；所述标记处理为在所述屏幕图像上记录操作内容；所述数据发送模块用于存储所述标记图像并在接收到所述标记图像后将所述标记图像发送到权限验证服务器。其中，录屏模块包括但不限于是内置的录屏组件和第三方的录屏软件等；检测模块包括但不限于是一个后台运行的程序或服务；关键帧画面截取模块包括但不限于是一个图像处理算法或函数；图像加工模块包括但不限于是一个图像处理库或算法；所述标记处理包括但不限于是绘制、文字添加、区域高亮等；数据发送模块包括但不限于是网络通信模块、消息队列模块和api接口。具体的，录屏模块以一个后台运行的软件程序的形式存在于请求端的操作系统上，开启录屏，录屏开始时间为17:50:00。检测模块作为一个后台运行的服务，与录屏模块交互，监听到用户的鼠标点击，并记录当前时间为17:50:36，时间间隔为36s，具体操作内容为鼠标点击。关键帧画面截取模块是一个图像处理算法，接收录屏模块和检测模块传递的数据。根据记录的时间间隔36s，从录制的屏幕图像中选择第36s时的画面关键帧，并提取关键帧的图像数据。图像加工模块以一个图像处理库或算法的形式存在，接收关键帧图像和操作内容。使用绘制、添加文字，对关键帧图像进行标记处理，具体为在关键帧图像上绘制一个红色的圆圈来标记鼠标点击的位置，并在图像的某个区域添加文字描述特定的操作为鼠标点击。数据发送模块以一个网络通信模块的形式存在，负责将标记图像保存为文件，并根据需要通过网络进行传输。具体为将标记图像保存为PNG格式的文件，并将其存储在本地磁盘中。此外，数据发送模块还将标记图像传输至权限验证服务器以实现对本次远程控制的复查。本方案通过实时录制、关键帧提取和标记处理，为远程控制操作提供了可视化的记录和复查功能以便后续的分析、分享或存档，具有实时性、高效性和安全性等优点。实施例5基于实施例1中的一种基于WebRTC的服务器远程维护方法，本实施例5中还提供了一个第三安全验证模块。包括：所述第三安全验证模块用于收到第一个项目文件夹访问操作时，以所述项目文件夹的文件夹名为根节点，在根节点下查找子目录并记录其子目录名，当所述查找执行至少一次后，将所述子目录名以符合原存储结构的树形结构发送至请求端；请求端将所述树形结构通过用户界面进行展示并获取请求端的输入结果，请求端将所述输入结果发送到第三安全验证模块；所述第三安全验证模块基于上述至少一次的查找，再执行至少一次查找并获取下一级全部用于验证的子目录名，并将所述输入结果在所述用于验证的子目录名中进行遍历比对，若存在有子目录名和输入结果比对一致则第三安全验证通过。其中第三安全验证模块包括但不限于是一个服务器端的组件或独立的网络服务。具体的，有一个项目文件夹，其文件夹名为"Project"，里面包含了多个子目录，有一个服务端的组件等待来自请求端的验证请求。用户在请求端点击远程控制按钮想要访问"Project"文件夹下的内容，服务端的组件收到请求，服务端的组件以"Project"文件夹名为根节点开始第一次查找，并记录根节点下的子目录名："Subfolder1"、"Subfolder2"、"Subfolder3"。服务端的组件随机选择一个子目录例如选择"Subfolder2"，将该子目录的路径如"Project/Subfolder2"发送回请求端。请求端接收到路径并展示给用户，用户在用户界面中输入"Log"。请求端将用户输入的"Log"发送到服务端的组件，服务端的组件开始查找，按照"Project/Subfolder2"查找对应的子目录，获取下一级全部的文件名或文件夹名并和用户输入的"Log"进行对比，并在"Project/Subfolder2"的子目录下成功找到和用户输入的"Log"一样的文件夹，匹配成功，证明用户对此项目结构较为熟悉，应当是本项目的维护人员，进一步的，可以开放远程访问权限。 本方案通过随机路径展示的方式增加了安全性，使每次验证都具有独特性，防止了恶意用户通过破解固定路径的方式绕过验证。通过引入用户参与，该方案提供了一种有效的身份验证手段，仅允许经过授权的用户访问敏感或重要的文件夹，从而保护了敏感数据和信息的安全。实施例6本实施例的基于WebRTC的服务器远程维护系统可以包括以下单元：远程控制单元，身份校验单元，接受控制单元，上述本发明实施例1中请求端、权限验证服务器、linux服务器的功能均可以由本发明实施例提供的HTTP请求处理系统实现。具体的，运维人员通过包含控制单元的电脑进行视频录制和音频录制，在远程控制单元中电脑通过WebRTC协议发送包含验证文件的请求到包含身份校验单元的安全校验服务器，所述验证文件包括视频文件和音频文件。身份校验单元接收并对音频文件进行第一安全验证和视频文件进行第二安全验证。所述第一安全验证可以是声纹比对，音频内容比对等方式，所述视频安全验证可以是人脸识别算法或人脸大模型识别，本例为了更高的速度，采用声纹识别和人脸识别算法。根据验证结果和请求信息，身份校验单元生成校验码。这里可以使用哈希算法，如MD5或SHA-256，将验证结果转换为唯一的校验码。根据校验结果，身份校验单元选择建立加密数据通信或点对点加密数据通信。加密数据通信通过WebRTC与目标服务器和远程控制单元建立连接，并使用TLS/SSL协议来确保通信的机密性和完整性，身份校验单元还将发送屏幕录制请求到控制单元。在接受控制单元中，接收服务器上的校验码和控制请求。接受控制单元解析校验码信息，将相关信息和远程控制操作记录在日志中。控制单元同意屏幕录制请求开始录制屏幕，并控制目标服务器执行相应的操作，如远程日志维护任务，并将屏幕录制文件发送给身份校验单元。这里可以使用远程桌面协议如RDP、VNC或WebRTC技术来实现屏幕录制和远程控制功能。接受控制单元将录制文件与相应的校验码配对存储。远程控制单元接收目标服务器的屏幕录制文件，并进行相应的处理。这里可以使用音视频编解码技术如H.264、AAC来解码和播放录制文件，以及图像处理技术如图像增强、压缩来优化显示效果。整个过程中，系统保持加密数据通信的安全性和点对点的高效性，并记录所有操作的日志信息包括录屏等，以确保远程维护的安全性和可追溯性。本方案利用WebRTC技术实现了高效的远程维护功能，使得用户能够通过验证和加密通信实现对目标服务器的远程控制和屏幕录制。同时，采用了多种安全技术和措施，确保了系统的安全性和可靠性。进一步的，控制单元还可以集成在移动端设备上，例如安卓手机，接受控制单元中还包括紧急处置脚本，例如日志分析脚本和网络连接测试脚本。当突发紧急事故时，控制单元可以通过WebRTC和目标服务器例如linux服务器建立点对点加密通信，并启动受控制单元中的自动化故障排查脚本troubleshoot.sh, 对目标服务器进行故障排查，识别并解决常见的故障情况。实施例7本发明还提供的一种基于WebRTC的服务器远程维护设备，所述设备包括：存储器、处理器和存储在存储器上并可在处理器上运行的计算机程序，其中，上述本发明实施例1中方法、本发明实施例6的系统均可以由本发明实施例7中提供的基于WebRTC的服务器远程维护设备实现。尽管已描述了本发明的优选实施例，但本领域内的技术人员一旦得知了基本创造性概念，则可对这些实施例作出另外的变更和修改。所以，所附权利要求意欲解释为包括优选实施例以及落入本发明范围的所有变更和修改。显然，本领域的技术人员可以对本发明进行各种改动和变型而不脱离本发明的精神和范围。这样，倘若本发明的这些修改和变型属于本发明权利要求及其等同技术的范围之内，则本发明也意图包括这些改动和变型在内。
