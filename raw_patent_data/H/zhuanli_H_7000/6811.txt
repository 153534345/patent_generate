标题title
一种FFT内部memory复用方法及装置
摘要abst
本申请提供了一种FFT内部memory复用方法及装置，该方法包括：获取时域信号，将时域信号中的第一个符号作为第一输入信号，并对第一输入信号进行运算处理，得到第一输出信号，以及在对第一输入信号的运算处理结束后，将时域信号中的第二个符号作为第二输入信号，对第一输出信号进行频域处理，以及对第二输入信号进行运算处理，得到第二输出信号，并且在将第一输出信号进行频域处理的处理结果输出之前，停止对第二输出信号进行频域处理，直至处理结果开始输出。本申请能够通过FFT内部memory暂存一个符号的数据，同时禁止FFT输出，能够降低面积，同时减小延迟。
权利要求书clms
1.一种FFT内部memory复用方法，其特征在于，包括以下步骤：获取时域信号，其中，所述时域信号包括至少一个符号；将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，以及在对所述第一输出信号进行频域处理时，将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理；对所述第一输出信号进行频域处理，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出。2.根据权利要求1所述的方法，其特征在于，所述FFT包括时域存储模块，所述时域存储模块用于提供时域存储功能以及完成时域信号处理。3.根据权利要求1所述的方法，其特征在于，所述FFT包括信号输入模块，将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，包括：通过所述信号输入模块将第一输入信号输入FFT的运算模块；通过所述运算模块对第一输入信号进行运算并得到第一输出信号。4.根据权利要求3所述的方法，其特征在于，所述将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理，包括：通过所述信号输入模块读取所述时域信号中的第二个符号；通过所述运算模块对所述第二输入信号进行运算处理。5.根据权利要求4所述的方法，其特征在于，所述FFT包括频域处理模块，所述对所述第一输出信号进行频域处理，包括：通过所述频域处理模块对所述第一输出信号进行频域处理。6.根据权利要求5所述的方法，其特征在于，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出，包括：若所述频域处理模块在对所述第一输出信号进行频域处理时，所述运算模块对所述第二输入信号进行运算处理得到了第二输出信号，则所述频域处理模块暂停对所述第二输出信号进行频域处理，当所述频域处理模块对所述第一输出信号的频域处理结束并得到所述处理结果之后，对所述处理结果进行输出，并通过所述频域处理模块对所述第二输出信号进行频域处理。7.一种FFT内部memory复用装置，其特征在于，所述装置包括：时域存储模块，用于获取时域信号，其中，所述时域信号包括至少一个符号；运算模块，用于将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，以及在对所述第一输出信号进行频域处理时，将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理；频域处理模块，用于对所述第一输出信号进行频域处理，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出。8.一种电子设备，其特征在于，包括：处理器、存储介质和总线，所述存储介质存储有所述处理器可执行的机器可读指令，当电子设备运行时，所述处理器与所述存储介质之间通过总线通信，所述处理器执行所述机器可读指令，以执行如权利要求1至6任一项所述的FFT内部memory复用方法。9.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质上存储有计算机程序，所述计算机程序被处理器运行时执行如权利要求1至6任一项所述的FFT内部memory复用方法。
说明书desc
技术领域本申请涉及信号处理技术领域，尤其涉及一种FFT内部memory复用方法及装置。背景技术在OFDM无线通信基带芯片中，由于无线信道的复杂性，干扰多，因此物理层接收机算法复杂度往往非常高，导致芯片实现的难度和成本高。为了成本和性能考虑，一般实现都是通过专用集成电路实现。在满足物理层性能的同时，芯片的大小决定了产品的竞争力。OFDM 物理层接收机算法流程一般包括降采样，时域同步，FFT开窗和FFT，信道估计，频域均衡和解调，解码。其中时域同步用帧中的训练序列来完成帧检测和找到帧开头，以及做频偏和DC估计。其中时域同步需要存储器存储数据，主要来源是两个时域算法本身以及频域实现延迟。FFT是完成时域信号到频域信号的转换，实现OFDM解调，其算法特征是需要全部数据输入完成后，才能输出第一个数据，然后再输入下一个数据，输出下一个数据，如何高效利用FFT内部memory能够很好的降低芯片面积，从而降低成本，现有技术中缺少相应的技术手段。发明内容有鉴于此，本申请实施例提供了一种FFT内部memory复用方法、装置、电子设备及存储介质，能够通过FFT内部memory暂存一个符号的数据，同时禁止FFT输出，能够降低面积，同时减小延迟。本申请实施例的技术方案是这样实现的：第一方面，本申请实施例提供一种FFT内部memory复用方法，包括以下步骤：获取时域信号，其中，所述时域信号包括至少一个符号；将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，以及在对所述第一输出信号进行频域处理时，将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理；对所述第一输出信号进行频域处理，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出。在一种可能的实施方式中，所述FFT包括时域存储模块，所述时域存储模块用于提供时域存储功能以及完成时域信号处理。在一种可能的实施方式中，所述FFT包括信号输入模块，将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，包括：通过所述信号输入模块将第一输入信号输入FFT的运算模块；通过所述运算模块对第一输入信号进行运算并得到第一输出信号。在一种可能的实施方式中，所述将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理，包括：通过所述信号输入模块读取所述时域信号中的第二个符号；通过所述运算模块对所述第二输入信号进行运算处理。在一种可能的实施方式中，所述FFT包括频域处理模块，所述对所述第一输出信号进行频域处理，包括：通过所述频域处理模块对所述第一输出信号进行频域处理。在一种可能的实施方式中，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出，包括：若所述频域处理模块在对所述第一输出信号进行频域处理时，所述运算模块对所述第二输入信号进行运算处理得到了第二输出信号，则所述频域处理模块暂停对所述第二输出信号进行频域处理，当所述频域处理模块对所述第一输出信号的频域处理结束并得到所述处理结果之后，对所述处理结果进行输出，并通过所述频域处理模块对所述第二输出信号进行频域处理。第二方面，本申请实施例还提供一种FFT内部memory复用装置，所述装置包括：时域存储模块，用于获取时域信号，其中，所述时域信号包括至少一个符号；运算模块，用于将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，以及在对所述第一输出信号进行频域处理时，将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理；频域处理模块，用于对所述第一输出信号进行频域处理，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出。第三方面，本申请实施例还提供一种电子设备，包括：处理器、存储介质和总线，所述存储介质存储有所述处理器可执行的机器可读指令，当电子设备运行时，所述处理器与所述存储介质之间通过总线通信，所述处理器执行所述机器可读指令，以执行第一方面任一项所述的FFT内部memory复用方法。第四方面，本申请实施例还提供一种计算机可读存储介质，所述计算机可读存储介质上存储有计算机程序，所述计算机程序被处理器运行时执行第一方面任一项所述的FFT内部memory复用方法。本申请实施例具有以下有益效果：本发明提出一种不依赖于FFT内部存储实现方式，但是能把FFT能够提前先把1个OFDM符号的时域数据送给FFT的运算模块，等把数送完之后，hold住FFT内部流水线不让FFT输出的方法，来处理频域未处理完上一个符号，但是时域可以把其内部memory的数据读给FFT。这样好处有两个，一是无需等待频域处理模块处理完毕，时域处理模块才将下一个符号给FFT，能够把FFT输入时间和频域处理时间重叠，减少延迟，第二是能够利用FFT内部零散的memory来存储一个符号，减少时域处理模块的memory存储。附图说明为了更清楚地说明本申请实施例的技术方案，下面将对实施例中所需要使用的附图作简单地介绍，应当理解，以下附图仅示出了本申请的某些实施例，因此不应被看作是对范围的限定，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他相关的附图。图1是本申请实施例提供的步骤S101-S103的流程示意图；图2是本申请实施例提供的现有技术原理图；图3是本申请实施例提供的本申请原理图；图4是本申请实施例提供的FFT内部memory复用装置的结构示意图；图5是本申请实施例提供的电子设备的组成结构示意图。具体实施方式为使本申请实施例的目的、技术方案和优点更加清楚，下面将结合本申请实施例中的附图，对本申请实施例中的技术方案进行清楚、完整地描述，应当理解，本申请中附图仅起到说明和描述的目的，并不用于限定本申请的保护范围。另外，应当理解，示意性的附图并未按实物比例绘制。本申请中使用的流程图示出了根据本申请的一些实施例实现的操作。应该理解，流程图的操作可以不按顺序实现，没有逻辑的上下文关系的步骤可以反转顺序或者同时实施。此外，本领域技术人员在本申请内容的指引下，可以向流程图添加一个或多个其他操作，也可以从流程图中移除一个或多个操作。在以下的描述中，涉及到“一些实施例”，其描述了所有可能实施例的子集，但是可以理解，“一些实施例”可以是所有可能实施例的相同子集或不同子集，并且可以在不冲突的情况下相互结合。另外，所描述的实施例仅仅是本申请一部分实施例，而不是全部的实施例。通常在此处附图中描述和示出的本申请实施例的组件可以以各种不同的配置来布置和设计。因此，以下对在附图中提供的本申请的实施例的详细描述并非旨在限制要求保护的本申请的范围，而是仅仅表示本申请的选定实施例。基于本申请的实施例，本领域技术人员在没有做出创造性劳动的前提下所获得的所有其他实施例，都属于本申请保护的范围。在以下的描述中，所涉及的术语“第一第二第三”仅仅是区别类似的对象，不代表针对对象的特定排序，可以理解地，“第一第二第三”在允许的情况下可以互换特定的顺序或先后次序，以使这里描述的本申请实施例能够以除了在这里图示或描述的以外的顺序实施。需要说明的是，本申请实施例中将会用到术语“包括”，用于指出其后所声明的特征的存在，但并不排除增加其它的特征。除非另有定义，本文所使用的所有的技术和科学术语与属于本申请的技术领域的技术人员通常理解的含义相同。本文中所使用的术语是为了描述本申请实施例的目的，不是在限制本申请。参见图1，图1是本申请实施例提供的FFT内部memory复用方法步骤S101-S103的流程示意图，将结合图1示出的步骤S101-S103进行说明。获取时域信号，其中，所述时域信号包括至少一个符号；将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，以及在对所述第一输出信号进行频域处理时，将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理；对所述第一输出信号进行频域处理，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出。上述FFT内部memory复用方法，提出一种不依赖于FFT内部存储实现方式，但是能把FFT能够提前先把1个OFDM符号的时域数据送给FFT的运算模块，等把数送完之后，hold住FFT内部流水线不让FFT输出的方法，来处理频域未处理完上一个符号，但是时域可以把其内部memory的数据读给FFT。这样好处有两个，一是无需等待频域处理模块处理完毕，时域处理模块才将下一个符号给FFT，能够把FFT输入时间和频域处理时间重叠，减少延迟，第二是能够利用FFT内部零散的memory来存储一个符号，减少时域处理模块的memory存储。下面分别对本申请实施例的上述示例性的各步骤进行说明。在步骤S101中，获取时域信号，其中，所述时域信号包括至少一个符号。在一些实施例中，所述FFT包括时域存储模块，所述时域存储模块用于提供时域存储功能以及完成时域信号处理。在步骤S102中，将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，以及在对所述第一输出信号进行频域处理时，将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理。在一些实施例中，所述FFT包括信号输入模块，将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，包括：通过所述信号输入模块将第一输入信号输入FFT的运算模块；通过所述运算模块对第一输入信号进行运算并得到第一输出信号。在一些实施例中，所述将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理，包括：通过所述信号输入模块读取所述时域信号中的第二个符号；通过所述运算模块对所述第二输入信号进行运算处理。在步骤S103中，对所述第一输出信号进行频域处理，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出。在一些实施例中，所述FFT包括频域处理模块，所述对所述第一输出信号进行频域处理，包括：通过所述频域处理模块对所述第一输出信号进行频域处理。在一些实施例中，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出，包括：若所述频域处理模块在对所述第一输出信号进行频域处理时，所述运算模块对所述第二输入信号进行运算处理得到了第二输出信号，则所述频域处理模块暂停对所述第二输出信号进行频域处理，当所述频域处理模块对所述第一输出信号的频域处理结束并得到所述处理结果之后，对所述处理结果进行输出，并通过所述频域处理模块对所述第二输出信号进行频域处理。需要说明的是，在本申请实施例中，FFT指的是802.11OFDM系统中的物理层芯片设计中的FFT。参见图2，Symbol0、Symbol1、Symbol2表示一段时间等分后的一个符号，在现有技术中，第一输入信号Sym0_fft_in经时域存储模块处理后由输入模块FFT_IN输入至FFT内部的运算模块进行运算，得到第一输出信号Sym0_fft_out，此时，由于FFT内部本身的运算机制，第二个符号，也即第二输入信号Sym1_fft_in需要等待第一输出信号Sym0_fft_out进行频域处理后的处理结果输出以后，才能进入进行运算，因此，这段时间存储了第二输入信号Sym1_fft_in并进行等待，等待输出模块FFT_OUT将第一输出信号Sym0_fft_out输入给频域处理模块进行Sym0频域处理，当处理完毕得到处理结果后，输出该处理结果，这里第二输入信号Sym1_fft_in才进入参与运算，然后得到第二输出信号Sym1_fft_out，后续的处理过程均为流水线作业，重复上述过程。作为对比，参见图3，第一输入信号Sym0_fft_in经时域存储模块处理后由输入模块FFT_IN输入至FFT内部的运算模块进行运算，得到第一输出信号Sym0_fft_out，这时，输出模块FFT_OUT将第一输出信号Sym0_fft_out作为频域处理模块的输入，输入给频域处理模块进行Sym0频域处理，并且在这一过程中，由于FFT的运算模块闲置，直接将第二输入信号Sym1_fft_in通过输入模块FFT_IN输入至FFT的运算模块并参与运算，然后再运算模块对第二输入信号Sym1_fft_in进行运算的过程中，频域处理模块也在对第一输出信号Sym0_fft_out进行Sym0频域处理，所以这一过程是同步进行的。通常情况下频域处理的时间要大于运算模块的运算时间，也就是第二输入信号Sym1_fft_in也运算完毕后，Sym0频域处理仍在进行，此时，需要停止输出模块将运算得到的第二输出信号Sym1_fft_out的输出，也即hold住第二输出信号Sym1_fft_out，从图中看，虚线框的时域存储的时间大大减小，而在得到处理结果后，对处理结果进行输出，并且此时由于第二输出信号Sym1_fft_out已经被计算出来，因此，直接由输出模块FFT_OUT将第二输出信号Sym1_fft_out作为频域处理模块的输入，输入进频域处理模块进行频域处理即可。在实际应用中，802.11ax中HE SU PPDU pre-HE的帧结构为STF1、STF2、l-lTF1、l-lTF2、l-SIG、RLSIG、HE-SIGA1、HE-SIGA2、HE-STF依次排列，其中，STF1、STF2、l-lTF1、l-lTF2、l-SIG、RLSIG、HE-SIGA1、HE-SIGA2、HE-STF均可以视为一个符号，信令SIG中的频域处理如模式检测延迟都会比较大，无法接收新的频域数据，此时需要时域存储一部分数据，可以把这些SIG符号的数据先输入到FFT里面，同时Hold住FFT的输出，能够节省memory。802.11ax中HE SU PPDU HE部分的帧结构为HE-LTF和Data，通常时域会用HE-LTF做一些运算，然后信道也会用HE-LTF做运算，延迟很长，时域往往需要memory存储HE-LTF还有Data符号的数据，存储量很大。此时频域又不能接收新的数据，也可以把时域数据先输出到FFT内部的memory中，同时Hold住FFT的输出，能够节省memory。综上所述，通过本申请实施例具有以下有益效果：能把FFT能够提前先把1个OFDM符号的时域数据送给FFT模块，等把数送完之后，hold住FFT内部流水线不让FFT输出的方法，来处理频域未处理完上一个符号，但是时域可以把其内部memory的数据读给FFT。这样好处有两个，一是无需等待频域处理模块处理完毕，时域处理模块才将下一个符号给FFT，能够把FFT输入时间和频域处理时间重叠，减少延迟，第二是能够利用FFT内部零散的memory来存储一个符号，减少时域处理模块的memory存储。基于同一发明构思，本申请实施例中还提供了与第一实施例中FFT内部memory复用方法对应的FFT内部memory复用装置，由于本申请实施例中的装置解决问题的原理与上述FFT内部memory复用方法相似，因此装置的实施可以参见方法的实施，重复之处不再赘述。如图4所示，图4是本申请实施例提供的FFT内部memory复用装置400的结构示意图。FFT内部memory复用装置400包括：时域存储模块401，用于获取时域信号，其中，所述时域信号包括至少一个符号；运算模块402，用于将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，以及在对所述第一输出信号进行频域处理时，将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理；频域处理模块403，用于对所述第一输出信号进行频域处理，若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出。本领域技术人员应当理解，图4所示的FFT内部memory复用装置400中的各单元的实现功能可参照前述FFT内部memory复用方法的相关描述而理解。图4所示的FFT内部memory复用装置400中的各单元的功能可通过运行于处理器上的程序而实现，也可通过具体的逻辑电路而实现。在一种可能的实施方式中，时域存储模块401用于提供时域存储功能以及完成时域信号处理。在一种可能的实施方式中，运算模块402将所述时域信号中的第一个符号作为第一输入信号，对所述第一输入信号进行运算处理，得到第一输出信号，包括：通过所述信号输入模块将第一输入信号输入FFT的运算模块；通过所述运算模块对第一输入信号进行运算并得到第一输出信号。在一种可能的实施方式中，运算模块402将所述时域信号中的第二个符号作为第二输入信号，对所述第二输入信号进行运算处理，包括：通过所述信号输入模块读取所述时域信号中的第二个符号；通过所述运算模块对所述第二输入信号进行运算处理。在一种可能的实施方式中，频域处理模块403对所述第一输出信号进行频域处理，包括：通过所述频域处理模块对所述第一输出信号进行频域处理。在一种可能的实施方式中，频域处理模块403若在对所述第一输出信号进行频域处理时，对所述第二输入信号的运算处理结束并得到了第二输出信号，暂停对所述第二输出信号进行频域处理，直至所述第一输出信号进行频域处理的处理结果开始输出，包括：若所述频域处理模块在对所述第一输出信号进行频域处理时，所述运算模块对所述第二输入信号进行运算处理得到了第二输出信号，则所述频域处理模块暂停对所述第二输出信号进行频域处理，当所述频域处理模块对所述第一输出信号的频域处理结束并得到所述处理结果之后，对所述处理结果进行输出，并通过所述频域处理模块对所述第二输出信号进行频域处理。上述FFT内部memory复用装置能把FFT能够提前先把1个OFDM符号的时域数据送给FFT的运算模块，等把数送完之后，hold住FFT内部流水线不让FFT输出的方法，来处理频域未处理完上一个符号，但是时域可以把其内部memory的数据读给FFT。这样好处有两个，一是无需等待频域处理模块处理完毕，时域处理模块才将下一个符号给FFT，能够把FFT输入时间和频域处理时间重叠，减少延迟，第二是能够利用FFT内部零散的memory来存储一个符号，减少时域处理模块的memory存储。如图5所示，图5为本申请实施例提供的电子设备500的组成结构示意图，所述电子设备500，包括：处理器501、存储介质502和总线503，所述存储介质502存储有所述处理器501可执行的机器可读指令，当电子设备500运行时，所述处理器501与所述存储介质502之间通过总线503通信，所述处理器501执行所述机器可读指令，以执行本申请实施例所述的FFT内部memory复用方法的步骤。实际应用时，所述电子设备500中的各个组件通过总线503耦合在一起。可理解，总线503用于实现这些组件之间的连接通信。总线503除包括数据总线之外，还包括电源总线、控制总线和状态信号总线。但是为了清楚说明起见，在图5中将各种总线都标为总线503。上述电子设备能把FFT能够提前先把1个OFDM符号的时域数据送给FFT的运算模块，等把数送完之后，hold住FFT内部流水线不让FFT输出的方法，来处理频域未处理完上一个符号，但是时域可以把其内部memory的数据读给FFT。这样好处有两个，一是无需等待频域处理模块处理完毕，时域处理模块才将下一个符号给FFT，能够把FFT输入时间和频域处理时间重叠，减少延迟，第二是能够利用FFT内部零散的memory来存储一个符号，减少时域处理模块的memory存储。本申请实施例还提供了一种计算机可读存储介质，所述存储介质存储有可执行指令，当所述可执行指令被至少一个处理器501执行时，实现本申请实施例所述的FFT内部memory复用方法。在一些实施例中，存储介质可以是磁性随机存取存储器、只读存储器、可编程只读存储器、可擦除可编程只读存储器、电可擦除可编程只读存储器、快闪存储器、磁表面存储器、光盘、或只读光盘等存储器；也可以是包括上述存储器之一或任意组合的各种设备。在一些实施例中，可执行指令可以采用程序、软件、软件模块、脚本或代码的形式，按任意形式的编程语言来编写，并且其可按任意形式部署，包括被部署为独立的程序或者被部署为模块、组件、子例程或者适合在计算环境中使用的其它单元。作为示例，可执行指令可以但不一定对应于文件系统中的文件，可以被存储在保存其它程序或数据的文件的一部分，例如，存储在超文本标记语言文档中的一个或多个脚本中，存储在专用于所讨论的程序的单个文件中，或者，存储在多个协同文件中。作为示例，可执行指令可被部署为在一个计算设备上执行，或者在位于一个地点的多个计算设备上执行，又或者，在分布在多个地点且通过通信网络互连的多个计算设备上执行。上述计算机可读存储介质能把FFT能够提前先把1个OFDM符号的时域数据送给FFT的运算模块，等把数送完之后，hold住FFT内部流水线不让FFT输出的方法，来处理频域未处理完上一个符号，但是时域可以把其内部memory的数据读给FFT。这样好处有两个，一是无需等待频域处理模块处理完毕，时域处理模块才将下一个符号给FFT，能够把FFT输入时间和频域处理时间重叠，减少延迟，第二是能够利用FFT内部零散的memory来存储一个符号，减少时域处理模块的memory存储。在本申请所提供的几个实施例中，应该理解到，所揭露的方法和电子设备，可以通过其它的方式实现。以上所描述的设备实施例仅仅是示意性的，例如，所述单元的划分，仅仅为一种逻辑功能划分，实际实现时可以有另外的划分方式，如：多个单元或组件可以结合，或可以集成到另一个系统，或一些特征可以忽略，或不执行。另外，所显示或讨论的各组成部分相互之间的耦合、或直接耦合、或通信连接可以是通过一些接口，设备或单元的间接耦合或通信连接，可以是电性的、机械的或其它形式的。所述作为分离部件说明的模块可以是或者也可以不是物理上分开的，作为模块显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本实施例方案的目的。另外，在本申请各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以两个或两个以上单元集成在一个单元中。所述功能如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个处理器可执行的非易失的计算机可读取存储介质中。基于这样的理解，本申请的技术方案本质上或者说对现有技术做出贡献的部分或者该技术方案的部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台计算机设备执行本申请各个实施例所述方法的全部或部分步骤。而前述的存储介质包括：U盘、移动硬盘、ROM、RAM、磁碟或者光盘等各种可以存储程序代码的介质。以上仅为本申请的具体实施方式，但本申请的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本申请揭露的技术范围内，可轻易想到变化或替换，都应涵盖在本申请的保护范围之内。因此，本申请的保护范围应以权利要求的保护范围为准。
