标题title
一种用于工业现场的适配器
摘要abst
本发明公开了一种用于工业现场的适配器，属于工业控制技术领域，所述适配器与CAN主站连接，所述适配器挂载有一个或多个IO模块，所述适配器连接工程师站，所述工程师站部署有组态软件；所述适配器在运行过程中，创建多个不同优先级的任务，所述多个不同优先级的任务包括：IO通信任务、主站通信任务、USB通信任务、数据存储任务；所述IO通信任务用于处理适配器与IO模块之间的数据交互业务；所述主站通信任务用于处理适配器与CAN主站之间的数据交互业务；所述USB通信任务用于处理组态软件对适配器的固件升级和组态配置业务；所述数据存储任务用于处理IO模块配置参数的保存业务。本申请解决了IO模块调试和维护麻烦的问题。
权利要求书clms
1.一种用于工业现场的适配器，其特征在于，所述适配器与CAN主站连接，所述适配器挂载有一个或多个IO模块；所述适配器在运行过程中，创建多个不同优先级的任务，所述多个不同优先级的任务包括：IO通信任务、主站通信任务；所述IO通信任务用于处理适配器与IO模块之间的数据交互业务；所述主站通信任务用于处理适配器与CAN主站之间的数据交互业务。2.根据权利要求1所述的用于工业现场的适配器，其特征在于：所述适配器还包括初始化过程；所述初始化过程包括外设初始化、应用初始化和主站通信任务初始化；所述外设初始化用于初始化适配器底层配置；所述应用初始化用于配置IO模块的通信参数和配置参数；所述主站通信任务初始化用于在适配器内对各IO模块分配PDO地址；所述通信参数包括通信地址和波特率。3.根据权利要求2所述的用于工业现场的适配器，其特征在于：所述应用初始化的流程，具体包括：适配器扫描所挂载的IO模块，获取所挂载的IO模块的数量；适配器向各IO模块发送ID分配请求命令，并当适配器接收到各IO模块发送的ID分配响应时，则适配器确定对IO模块的ID分配成功并标记各IO模块的ID信息；适配器通过与各IO模块通信，加载得到各IO模块的基本信息；适配器基于各IO模块的基本信息、ID信息以及预先存储的模块数据库，配置各IO模块的通信参数和配置参数。4.根据权利要求3所述的用于工业现场的适配器，其特征在于：所述主站通信任务初始化的流程，具体包括：适配器基于IO模块的基本信息，确定各IO模块的类型；适配器根据所述IO模块的类型，对所述IO模块分配PDO地址，并标记各IO模块对应的PDO映射参数。5.根据权利要求1所述的用于工业现场的适配器，其特征在于，所述IO通信任务的流程，具体包括：适配器扫描IO模块，并基于IO模块向自身发送的数据帧判断适配器与IO模块之间的通信状态；适配器基于适配器与IO模块之间的通信状态，通过解析接收到的数据帧得到IO模块运行信息。6.根据权利要求5所述的用于工业现场的适配器，其特征在于，所述主站通信任务的流程，具体包括：适配器检查系统通信状态；所述系统通信状态包括适配器与CAN主站之间的通信状态、适配器与IO模块之间的通信状态；适配器基于所述系统通信状态、IO模块运行信息和CAN主站的控制指令更新输出过程数据和输入过程数据；所述输入过程数据表征适配器向CAN主站发送的IO模块运行信息；所述输出过程数据表征适配器向IO模块发送的CAN主站的控制指令。7.根据权利要求1所述的用于工业现场的适配器，其特征在于：所述多个不同优先级的任务还包括状态诊断任务；所述状态诊断任务用于处理运行指示灯、故障指示灯和系统指示灯的诊断业务。8.根据权利要求1所述的用于工业现场的适配器，其特征在于，所述适配器连接工程师站，所述工程师站部署有组态软件；所述多个不同优先级的任务还包括USB通信任务，所述USB通信任务用于处理组态软件对适配器的固件升级和组态配置业务；所述USB通信任务的流程，具体包括：适配器基于组态软件发送的固件升级命令，对所述固件升级命令解析并执行对应的固件升级操作，实现对适配器的固件升级；适配器基于组态软件发送的组态配置命令，对所述组态配置命令解析并执行对应的组态配置操作，实现对适配器的组态配置。9.根据权利要求8所述的用于工业现场的适配器，其特征在于：所述多个不同优先级的任务还包括数据存储任务；所述数据存储任务用于处理IO模块配置参数的保存业务；所述数据存储任务的流程，具体包括：适配器接收组态软件和/或CAN主站发送的保存指令；适配器根据所述保存指令，检测IO模块的配置参数是否发生变化，若发生变化，则适配器在内部IO数据存储区更新所述IO模块的配置参数。10.根据权利要求9所述的用于工业现场的适配器，其特征在于：IO通信任务的优先级＞主站通信任务的优先级＞USB通信任务的优先级＞状态诊断任务的优先级＞数据存储任务的优先级。
说明书desc
技术领域本发明涉及工业控制技术领域，尤其是涉及一种用于工业现场的适配器。背景技术在工业现场的控制系统中，模块式控制器越来越流行，但是通常模块式控制器自带的IO模块数量较少，因此工业现场常采用总线协议使CAN主站外挂多个IO模块，以适应实际的需求。但是对于集成的控制器而言，当CAN主站外挂多个IO模块时，一方面，由于每个IO模块都有各自的通信地址、通信波特率和配置参数等，因此在调试过程中，需要逐个对IO模块进行设置，调试较麻烦；另一方面，在检修IO模块或更换不同型号的IO模块时，需要拆除相应连接线并重新配置IO模块的通信地址、通信波特率和配置参数等，维护过程也比较麻烦。发明内容为了解决多个IO模块调试和维护较麻烦的问题，本申请提供一种用于工业现场的适配器。本申请提供一种用于工业现场的适配器，采用如下的技术方案：所述适配器与CAN主站连接，所述适配器挂载有一个或多个IO模块；所述适配器在运行过程中，创建多个不同优先级的任务，所述多个不同优先级的任务包括：IO通信任务、主站通信任务；所述IO通信任务用于处理适配器与IO模块之间的数据交互业务；所述主站通信任务用于处理适配器与CAN主站之间的数据交互业务。通过采用上述技术方案，采用适配器作为中间介质，使适配器分别与IO模块和CAN主站通信并实现数据交互，适配器可以汇总并整理IO模块的信息至内部缓存，再将IO模块的信息输出至CAN主站，实现CAN主站对IO模块的间接访问；由适配器整合各个IO模块，实现对各个IO模块的统一配置和管理，使得IO模块调试更加方便，且检修或更换不同型号的IO模块时，只需更换相应的IO模块即可，适配器可以自动识别并和IO模块通信，无需在CAN主站端重新配置通信地址、通信波特率和配置参数，检修更加方便，IO模块更容易维护。在一个具体的可实施方案中，所述适配器还包括初始化过程；所述初始化过程包括外设初始化、应用初始化和主站通信任务初始化；所述外设初始化用于初始化适配器底层配置；所述应用初始化用于配置IO模块的通信参数和配置参数；所述主站通信任务初始化用于在适配器内对各IO模块分配PDO地址；所述通信参数包括通信地址和波特率。通过采用上述技术方案，适配器通过初始化过程对所有IO模块的通信地址、波特率和配置参数进行设置，无需对IO模块逐台设置，调试和维护更加方便，通过在适配器的内部存储对IO模块分配PDO地址，便于记录和存储IO模块的信息。在一个具体的可实施方案中，所述应用初始化的流程，具体包括：适配器扫描所挂载的IO模块，获取所挂载的IO模块的数量；适配器向各IO模块发送ID分配请求命令，并当适配器接收到各IO模块发送的ID分配响应时，则适配器确定对IO模块的ID分配成功并标记各IO模块的ID信息；适配器通过与各IO模块通信，加载得到各IO模块的基本信息；适配器基于各IO模块的基本信息、ID信息以及预先存储的模块数据库，配置各IO模块的通信参数和配置参数。通过采用上述技术方案，适配器通过扫描IO模块并向各IO模块分配ID、加载IO模块的基本信息，实现对IO模块通信参数和配置参数的配置。在一个具体的可实施方案中，所述主站通信任务初始化的流程，具体包括：适配器基于IO模块的基本信息，确定各IO模块的类型；适配器根据所述IO模块的类型，对所述IO模块分配PDO地址，并标记各IO模块对应的PDO映射参数。通过采用上述技术方案，适配器通过对IO模块分配PDO地址并对应标记，便于将IO模块的信息记录和存储至对应位置。在一个具体的可实施方案中，所述IO通信任务的流程，具体包括：适配器扫描IO模块，并基于IO模块向自身发送的数据帧判断适配器与IO模块之间的通信状态；适配器基于适配器与IO模块之间的通信状态，通过解析接收到的数据帧得到IO模块运行信息。通过采用上述技术方案，适配器通过IO模块发送的数据帧判断相互之间的通信状态，当通信状态正常时通过解析数据帧获得IO模块的运行信息，保证适配器与IO模块在通信正常的情况下进行数据传输，提高了数据传输的质量。在一个具体的可实施方案中，所述主站通信任务的流程，具体包括：适配器检查系统通信状态；所述系统通信状态包括适配器与CAN主站之间的通信状态、适配器与IO模块之间的通信状态；适配器基于所述系统通信状态、IO模块运行信息和CAN主站的控制指令更新输出过程数据和输入过程数据；所述输入过程数据表征适配器向CAN主站发送的IO模块运行信息；所述输出过程数据表征适配器向IO模块发送的CAN主站的控制指令。通过采用上述技术方案，适配器通过检查整个系统的通信状态，当整个系统的通信状态均正常时，则适配器将IO模块的运行信息传输至CAN主站，实现CAN主站对工业现场情况的掌握，适配器还将CAN主站的控制指令传输至IO模块，实现CAN主站对工业现场情况的控制。在一个具体的可实施方案中，所述多个不同优先级的任务还包括状态诊断任务；所述状态诊断任务用于处理运行指示灯、故障指示灯和系统指示灯的诊断业务。通过采用上述技术方案，适配器通过指示灯实时显示系统运行情况。在一个具体的可实施方案中，所述适配器连接工程师站，所述工程师站部署有组态软件；所述多个不同优先级的任务还包括USB通信任务，所述USB通信任务用于处理组态软件对适配器的固件升级和组态配置业务；所述USB通信任务的流程，具体包括：适配器基于组态软件发送的固件升级命令，对所述固件升级命令解析并执行对应的固件升级操作，实现对适配器的固件升级；适配器基于组态软件发送的组态配置命令，对所述组态配置命令解析并执行对应的组态配置操作，实现对适配器的组态配置。通过采用上述技术方案，通过将适配器连接工程师站，通过工程师站的组态软件实现对适配器的固件升级和组态配置，提高适配器的性能和功能。在一个具体的可实施方案中，所述多个不同优先级的任务还包括数据存储任务；所述数据存储任务用于处理IO模块配置参数的保存业务；所述数据存储任务的流程，具体包括：适配器接收组态软件和/或CAN主站发送的保存指令；适配器根据所述保存指令，检测IO模块的配置参数是否发生变化，若发生变化，则适配器在内部IO数据存储区更新所述IO模块的配置参数。通过采用上述技术方案，适配器根据组态软件发送的保存命令，或根据CAN主站发送的保存命令，或同时根据组态软件和CAN主站发送的保存命令，检测IO模块的配置参数，并当IO模块的配置参数发生变化时，在内部存储实时更新。在一个具体的可实施方案中，IO通信任务的优先级＞主站通信任务的优先级＞USB通信任务的优先级＞状态诊断任务的优先级＞数据存储任务的优先级。综上所述，本申请的技术方案至少包括以下有益技术效果：1、采用适配器作为中间介质，使适配器分别与IO模块和CAN主站通信并实现数据交互，适配器可以汇总并整理IO模块的信息至内部缓存，再将IO模块的信息输出至CAN主站，实现CAN主站对IO模块的间接访问；由适配器整合各个IO模块，实现对各个IO模块的统一配置和管理，使得IO模块调试更加方便，且检修或更换不同型号的IO模块时，只需更换相应的IO模块即可，适配器可以自动识别并和IO模块通信，无需在CAN主站端重新配置通信地址、通信波特率和配置参数，检修更加方便，IO模块更容易维护；2、适配器通过检查整个系统的通信状态，当整个系统的通信状态均正常时，则适配器将IO模块的运行信息传输至CAN主站，实现CAN主站对工业现场情况的掌握，适配器还将CAN主站的控制指令传输至IO模块，实现CAN主站对工业现场情况的控制；3、过将适配器连接工程师站，通过工程师站的组态软件实现对适配器的固件升级和组态配置，提高适配器的性能和功能。附图说明图1是本申请实施例中适配器分别与CAN主站、IO模块和组态软件的连接关系示意图；图2是本申请实施例中各个任务之间的数据交互示意图。具体实施方式为使本申请的目的、技术方案和优点更加清楚，下面将结合附图对本申请实施方式作进一步地详细说明。本申请公开一种用于工业现场的适配器，参照图1，所述适配器与CAN主站连接，具体地，所述适配器通过CAN控制器与CAN主站连接；所述适配器挂载有一个或多个IO模块，所述适配器可以通过RS485总线与各IO模块进行数据交互；具体地，适配器可以同时挂载多个不同类型的IO模块，不同类型的IO模块包括：数字量输入类型，即DI类型；模拟量输入类型，即AI类型；数字量输出类型，即DO类型；模拟量输出类型，即AO类型。其中，所述适配器通过CAN总线与CAN主站连接，适配器与CAN主站之间通过CANopen协议进行数据交互，适配器通过发送队列向CAN主站发送数据，并通过接收队列接收CAN主站发送的数据和命令；具体地，适配器通过发送队列向CAN主站发送PDO数据，适配器通过接收队列接收CAN主站发送的PDO数据，PDO表示过程数据对象。所述适配器在运行过程中，创建多个不同优先级的任务，所述多个不同优先级的任务包括：IO通信任务、主站通信任务；具体地，所述IO通信任务用于处理适配器与IO模块之间的数据交互业务；所述主站通信任务用于处理适配器与CAN主站之间的数据交互业务。因此，采用适配器作为中间介质，使适配器分别与IO模块和CAN主站通信并实现数据交互，适配器可以汇总并整理IO模块的信息至内部缓存，再将IO模块的信息输出至CAN主站，实现CAN主站对IO模块的间接访问；由适配器整合各个IO模块，实现对各个IO模块的统一配置和管理，使得IO模块调试更加方便，且检修或更换不同型号的IO模块时，只需更换相应的IO模块即可，适配器可以自动识别并和IO模块通信，无需在CAN主站端重新配置通信地址、通信波特率和配置参数，检修更加方便，IO模块更容易维护。进一步地，所述适配器采用卡片式结构，可以大大减小所占的空间。由于传统的直接采用CAN主站外挂IO模块的方式中，一个IO设备需要外接电源线、公共信号线，多个IO设备所需的电源线、信号线成倍增加，接线繁琐；而本申请中适配器与IO模块之间通过背板进行电源以及信号的连接，适配器只需要两组电源、一路通信线，使得接线也更加方便。进一步地，所述适配器还包括初始化过程，所述初始化过程包括外设初始化、应用初始化、主站通信任务初始化；所述外设初始化用于初始化适配器底层配置，所述应用初始化用于配置IO模块的通信参数和配置参数；其中，所述通信参数包括通信地址和波特率，所述配置参数包括滤波时间的滤波等级；所述主站通信任务初始化用于在适配器内对各IO模块分配PDO地址。特别地，适配器可以在执行多个不同优先级的任务之前执行初始化过程。因此，适配器通过初始化过程对所有IO模块的通信地址、波特率和配置参数进行设置，无需对IO模块逐台设置，调试和维护更加方便，通过在适配器的内部存储对IO模块分配PDO地址，便于记录和存储IO模块的信息。为了确保适配器先运行，所述适配器上电后，等待第一预设时间后执行初始化过程；优选的，第一预设时间为3s。其中，所述外设初始化的流程，具体包括：适配器对自身底层配置进行初始化。所述应用初始化的流程，具体包括：适配器扫描所挂载的IO模块，获取所挂载的IO模块的数量；适配器向各IO模块发送ID分配请求命令，并当适配器接收到各IO模块发送的ID分配响应时，则适配器确定对IO模块的ID分配成功并标记各IO模块的ID信息；具体地，所述ID分配响应表征各IO模块基于所述ID分配请求命令执行对应的响应动作；适配器通过与各IO模块通信，加载得到各IO模块的基本信息；适配器基于各IO模块的基本信息、ID信息以及预先存储的模块数据库，配置各IO模块的通信参数和配置参数。其中，所述IO模块的基本信息包括型号、类型、版本号、输入输出字节数；所述IO模块的配置参数包括滤波时间、滤波等级。适配器配置各IO模块的配置参数时，同时对所述配置参数的大小和地址进行配置。其中，适配器内预先存储的模块数据库包括多个不同型号的参考IO模块及各参考IO模块对应的参考配置参数，适配器通过扫描得到IO模块的基本信息，从模块数据库中选取与所述IO模块基本信息一致的参考IO模块，并将其标记为第一IO模块；适配器基于所述第一IO模块的参考配置参数，对所述IO模块的配置参数更新，实现对IO模块配置参数的配置。另外，适配器还可以根据人工操作配置IO模块的配置参数，使得IO模块的滤波时间和滤波等级更加适应现场实际情况，通过人工手动操作提高IO模块的性能。特别地，适配器扫描所挂载的IO模块时，若适配器判断所挂载的IO模块的数量超出预设的挂载数量阈值，则适配器判断扫描失败，并生成对应的IO模块挂载数量过多的提醒；适配器接收各IO模块发送的ID分配响应时，若IO模块向适配器发送的ID分配响应超时，则适配器判断所述IO模块ID分配失败，并生成对应的ID分配响应超时的提醒。因此，适配器通过扫描IO模块并向各IO模块分配ID、加载IO模块的基本信息，实现对IO模块通信参数和配置参数的配置。其中，所述主站通信任务初始化的流程，具体包括：适配器基于IO模块的基本信息，确定各IO模块的类型；适配器根据所述IO模块的类型，对所述IO模块分配PDO地址，并标记各IO模块对应的PDO映射参数；具体地，适配器采用对象字典格式标记各IO模块对应的PDO映射参数。其中，所述IO模块的类型包括数字量输入类型、模拟量输入类型、数字量输出类型、模拟量输出类型。为了提高适配器数据处理效率，适配器对IO模块分配PDO地址时，首先汇总所有IO模块的类型信息，再依次对数字量输入类型的IO模块、数字量输出类型的IO模块、模拟量输入类型的IO模块、模拟量输出类型的IO模块分配PDO地址，且不同类型的IO模块所分配的PDO地址不同。示例性地，针对数字量输入类型的IO模块，分配的字典地址为0x6000；针对数字量输出类型的IO模块，分配的字典地址为0x6200；针对模拟量输入类型的IO模块，分配的字典地址为0x6401；针对模拟量输出类型的IO模块，分配的字典地址为0x6411。因此，适配器通过对IO模块分配PDO地址并对应标记，便于将IO模块的信息记录和存储至对应位置。进一步地，适配器可以在创建任务之前进行系统时钟初始化，任务创建完成后执行对应的任务调度。进一步地，所述IO通信任务用于处理适配器与IO模块之间的数据交互业务，还用于处理适配器对IO模块在线状态的检查业务，所述IO通信任务的流程，具体包括：适配器扫描IO模块，并基于IO模块向自身发送的数据帧判断适配器与IO模块之间的通信状态；具体地，若IO模块向自身发送的数据帧为空，则适配器确定所述IO模块断线，即适配器与IO模块之间通信状态异常；若IO模块向自身发送的数据帧不为空，则适配器确定所述IO模块在线，即适配器与IO模块之间通信状态正常；适配器基于适配器与IO模块之间的通信状态，通过解析接收到的数据帧得到IO模块的运行信息，实现适配器与IO模块之间的数据交互；IO模块的运行信息表征IO模块运行过程中的信息，例如，数字量输入类型的IO模块，运行信息包括IO模块的输入高低电平信号，模拟量输入类型的IO模块，运行信息包括IO模块的输入模拟量信号。因此，适配器通过IO模块发送的数据帧判断相互之间的通信状态，当通信状态正常时通过解析数据帧获得IO模块的运行信息，保证适配器与IO模块在通信正常的情况下进行数据传输，提高了数据传输的质量。特别的，适配器在解析接收到的数据帧得到IO模块的运行信息之前，还可以通过解析接收到的数据帧，更新适配器与IO模块之间的通信状态，实现适配器对IO模块在线状态的检查；具体地，若适配器通过解析得到IO模块发送的数据帧格式或内容错误，则适配器判断自身与所述IO模块之间的通信状态异常，并将所述IO模块的状态置为断线；若适配器通过解析得到IO模块发送的数据帧格式和内容均正确，则适配器判断自身与所述IO模块之间的通信状态正常，并将所述IO模块的状态置为在线。进一步地，所述适配器还通过解析IO模块发送的数据帧，确定IO模块是否存在告警信息，并更新所述IO模块的告警状况；具体地，若所述IO模块存在告警信息，则适配器获取所述告警信息，并生成对应的告警提醒；若所述IO模块不存在告警信息，且适配器判断内部标记所述IO模块的告警信息未清除，则适配器清除所述告警信息。进一步地，所述适配器扫描IO模块时，若在第二预设时间内，适配器接收到的数据帧均为空，则适配器确定IO模块扫描完成，并计算扫描所有IO模块的时间；优选地，所述第二预设时间为2ms。进一步地，主站通信任务用于处理适配器与CAN主站之间的数据交互业务，还用于处理系统通信状态的检查业务；所述主站通信任务的流程，具体包括：适配器检查系统通信状态；所述系统通信状态包括适配器与CAN主站之间的通信状态、适配器与IO模块之间的通信状态；具体地，适配器在向CAN主站发送数据时，适配器首先通过CAN发送队列将数据发送至CAN控制器，再由CAN控制器将接收到的数据进行转换并通过CAN总线传递至CAN主站；则适配器在检查自身与CAN主站之间的通信状态时，适配器可以通过检查CAN发送队列的运行状态判断适配器与CAN主站之间的通信状态；适配器基于系统通信状态、IO模块运行信息和CAN主站的控制指令更新输出过程数据和输入过程数据；所述输入过程数据表征适配器向CAN主站发送的IO模块运行信息；所述输出过程数据表征适配器向IO模块发送的CAN主站的控制指令；具体地，CAN主站的控制指令可以为CAN主站基于所述IO模块运行信息确定工业现场的运行状况，并基于工业现场的运行状况生成对应的控制指令，也可以为人工操作控制CAN主站发出的控制指令。因此，适配器通过检查整个系统的通信状态，当整个系统的通信状态均正常时，则适配器将IO模块的运行信息传输至CAN主站，实现CAN主站对工业现场情况的掌握，适配器还将CAN主站的控制指令传输至IO模块，实现CAN主站对工业现场情况的控制。适配器在保证自身与CAN主站和IO模块通信均正常的情况下进行数据传输，进一步提高了数据传输的质量。进一步地，适配器将获取到的IO模块运行信息存储至内部IO数据缓冲区，并基于所述IO模块运行信息实时更新所述IO数据缓冲区内的数据；具体地，所述适配器更新输入过程数据时，首先基于所述IO模块运行信息执行筛选，若IO模块运行信息与所述IO数据缓冲区内相应的数据相比未发生变化，则适配器不更新所述输入过程数据，在输入过程数据发送前，通过对数据进行优化，避免冗余的信息传递，延长了CAN主站和适配器使用寿命。进一步地，所述适配器连接工程师站，所述工程师站部署有组态软件；适配器创建的多个不同优先级的任务还包括USB通信任务，所述USB通信任务用于处理组态软件对适配器的固件升级和组态配置业务；所述USB通信任务的流程，具体包括：适配器基于组态软件发送的固件升级命令，对所述固件升级命令解析并执行对应的固件升级操作，实现对适配器的固件升级；适配器基于组态软件发送的组态配置命令，对所述组态配置命令解析并执行对应的组态配置操作，实现对适配器的组态配置。因此，通过将适配器连接工程师站，通过工程师站的组态软件实现对适配器的固件升级和组态配置，提高适配器的性能和功能。具体地，所述适配器可以采用USB通信方式与工程师站通信，所述适配器用于根据工程师站中组态软件发送的固件升级命令和组态配置命令，实现自身固件升级和组态配置，所述USB通信方式使用HID协议，组态软件发送的固件升级命令可以采用自定义的通信协议，组态软件发送的组态配置命令可以采用Modbus协议，本领域技术人员也可以自行设置所采用的协议，本申请对此不做限制。示例性地，组态配置命令可以包括REGISTER_TABLE_1、REGISTER_TABLE_2、REGISTER_TABLE_3、REGISTER_TABLE_4、REGISTER_TABLE_5、REGISTER_TABLE_6、REGISTER_TABLE_7、REGISTER_TABLE_8、REGISTER_TABLE_9、REGISTER_TABLE_10中的一个或多个，当解析出的组态配置命令为REGISTER_TABLE_1，则执行MAC地址命令处理；当解析出的组态配置命令为REGISTER_TABLE_2，则执行SN序列号命令处理；当解析出的组态配置命令为REGISTER_TABLE_3，则执行适配器信息命令处理；当解析出的组态配置命令为REGISTER_TABLE_4，则执行IO模块信息命令处理；当解析出的组态配置命令为REGISTER_TABLE_5，则执行IO模块配置信息命令处理；当解析出的组态配置命令为REGISTER_TABLE_6，则执行输入过程数据命令处理；当解析出的组态配置命令为REGISTER_TABLE_7，则执行输出过程数据命令处理；当解析出的组态配置命令为REGISTER_TABLE_8，则执行下载配置完成命令处理；当解析出的组态配置命令为REGISTER_TABLE_9，则执行主站通信配置命令处理；当解析出的组态配置命令为REGISTER_TABLE_10，则执行主站通用配置信息命令处理；即根据解析出的组态配置命令，执行对应的组态配置操作。进一步地，适配器执行对应的组态配置操作的过程，具体包括：适配器对所述组态配置命令解析，根据解析的结果依次同步耦合器信息数据、模块组态信息、过程数据、配置数据；当适配器执行组态配置操作完成后，适配器基于组态软件发送的保存指令，保存组态配置的结果。示例性地，固件升级命令可以包括LAP_CMD_INFO、LAP_CMD_SET、LAP_CMD_IDLE、LAP_CMD_START、LAP_CMD_SPIFLASH_GET、LAP_CMD_SPIFLASH_ADDR、LAP_CMD_SPIFLASH_DATA、LAP_CMD_ADDR、LAP_CMD_DATA、LAP_CMD_FINISH、LAP_CMD_CRC、LAP_CMD_SPIFLASH_CRC、LAP_CMD_JMP、LAP_CMD_GET中的一个或多个；当解析出的固件升级命令为LAP_CMD_INFO，则执行LAP_CMD_INFO命令处理；当解析出的固件升级命令为LAP_CMD_SET，则执行LAP_CMD_SET命令处理；当解析出的固件升级命令为LAP_CMD_IDLE，则执行LAP_CMD_IDLE命令处理；当解析出的固件升级命令为LAP_CMD_START，则执行LAP_CMD_START命令处理……其它固件升级命令的解析和执行采用同样的方式，在此不再赘述。进一步地，适配器创建的多个不同优先级的任务还包括状态诊断任务；所述状态诊断任务用于处理运行指示灯、故障指示灯和系统指示灯的诊断业务；所述状态诊断任务包括运行指示灯诊断任务、故障指示灯诊断任务和系统指示灯任务；所述运行指示灯诊断任务用于处理当适配器处于第一运行状态下运行指示灯的诊断业务，所述第一运行状态包括运行状态、停止状态、预操作状态、适配器与工程师站连接状态、固件升级状态中的一个或多个；所述故障指示灯诊断任务用于处理当适配器处于第二运行状态下故障指示灯的诊断业务，所述第二运行状态包括运行正常状态、离线状态、配置参数无效状态、强制模式、异常警告状态、守护节点丢失状态中的一个或多个；其中，当适配器处于强制模式时，可以通过适配器对IO模块的输出状态进行手动设置；守护节点丢失状态表示适配器在设定的时间内，未收到CAN主站的心跳数据。所述系统指示灯诊断任务用于处理当适配器处于第三运行状况下系统指示灯的诊断业务，所述第三运行状况包括IO模块ID诊断状况、IO模块站号分配状况、IO模块参数配置状况、背板总线状况中的一个或多个。其中，IO模块参数配置状况包括IO模块的通信参数和配置参数的配置状况。参照表1，示例出几种运行指示灯、故障指示灯、系统指示灯的颜色，以及处于不同运行状况时对应的显示情况，同时，表1还示出了系统电源指示灯、IO电源指示灯、通讯接口指示灯的设置，指示灯的亮灭显示可以便于用户观察适配器和系统的运行状态，对于指示灯显示状况的具体情况，本领域技术人员可以自行设置，本申请对此不做限制。表1 部分指示灯状态说明进一步地，适配器创建的多个不同优先级的任务还包括数据存储任务；所述数据存储任务用于处理IO模块配置参数的保存业务，数据存储任务的流程，具体包括：适配器接收组态软件和/或CAN主站发送的保存指令；适配器根据所述保存指令，检测IO模块的配置参数是否发生变化，若发生变化，则适配器在内部IO数据存储区更新所述IO模块的配置参数；进一步地，适配器还根据所述保存指令，检测IO模块的运行信息是否发生变化，若发生变化，则适配器在内部IO数据存储区更新所述IO模块运行信息；所述IO数据存储区为适配器内部用于存储IO模块配置参数的区域，所述IO数据存储区也为适配器内部用于存储IO模块运行信息的区域。所述数据存储任务还用于处理USB连接状态的检查业务，数据存储任务的流程具体还包括：所述适配器检查并更新自身与工程师站的连接状态，具体地，若适配器判断自身与工程师站的连接状态发生改变，则适配器更新自身与工程师站的连接状态，即更新USB连接状态。因此，适配器根据组态软件发送的保存命令，或根据CAN主站发送的保存命令，或同时根据组态软件和CAN主站发送的保存命令，检测IO模块的配置参数，并当IO模块的配置参数发生变化时，在内部存储实时更新。进一步地，参照图2，为各个任务之间的数据交互示意图，且各个任务之间的优先级关系可以设置如下：IO通信任务的优先级＞主站通信任务的优先级＞USB通信任务的优先级＞状态诊断任务的优先级＞数据存储任务的优先级。以上均为本申请的较佳实施例，并非依此限制本申请的保护范围，故：凡依本申请的结构、形状、原理所做的等效变化，均应涵盖于本申请的保护范围之内。
