标题title
票务系统防刷票的多重加密方法、系统、设备和介质
摘要abst
本发明公开了票务系统防刷票的多重加密方法、系统、设备及介质，方法包括：客户端登录服务端；在客户端构建虚拟机；客户端基于虚拟机，向服务端发送密钥协商请求，服务端基于异或密钥交换算法，将第一DH算法参数在服务端与客户端间进行加密交换，以将第一DH算法参数从服务端发送到客户端；客户端根据第一DH算法参数在本地生成第二DH算法参数以及AES密钥和初始向量，并基于异或密钥交换算法，将第二DH算法参数在客户端与服务端间进行加密交换，以将第二DH算法参数从客户端发送到服务端；服务端根据第二DH算法参数生成与客户端相同的密钥和向量；服务端向客户端返回协商完成消息。本发明通过多重加密的配合，防止非法用户刷票。
权利要求书clms
1.一种票务系统防刷票的多重加密方法，其特征在于，所述方法包括：客户端通过登录校验登录服务端；所述客户端请求所述服务端获取JavaScript虚拟机解释器文件和opcode文件，并在所述客户端构建JavaScript虚拟机环境，以对所述客户端进行本地加密；所述客户端基于JavaScript虚拟机环境，向所述服务端发送密钥协商请求，以获取第一DH算法参数；所述服务端响应于所述客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将所述第一DH算法参数在所述服务端与所述客户端之间进行加密交换，以将所述第一DH算法参数从所述服务端安全发送到所述客户端；所述客户端根据所述第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将所述第二DH算法参数在所述客户端与所述服务端之间进行加密交换，以将所述第二DH算法参数从所述客户端安全发送到所述服务端；所述服务端根据所述第二DH算法参数计算生成与所述客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，所述对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间；所述服务端生成用于加密通信的所述对称加密AES密钥和初始向量后，完成密钥协商，并向所述客户端返回密钥协商完成的消息。2.根据权利要求1所述的方法，其特征在于，所述客户端通过登录校验登录服务端，包括：所述客户端向所述服务端发出登录请求，以使得所述服务端对所述登录请求进行验证；所述客户端若接收到所述服务端发送的验证通过通知，则登录所述服务端。3.根据权利要求2所述的方法，其特征在于，在所述客户端若接收到所述服务端发送的验证通过通知之后，所述方法还包括：所述服务端对用户信息进行黑名单校验，若所述用户信息经黑名单校验是黑名单人员，则不能登录所述服务端，若所述用户信息经黑名单校验不是黑名单人员，则登录所述服务端，其中，所述黑名单包括自定义设置的受限用户名单、异常操作名单。4.根据权利要求1所述的方法，其特征在于，所述基于异或密钥交换算法，将所述第一DH算法参数在所述服务端与所述客户端之间进行加密交换，以将所述第一DH算法参数从所述服务端安全发送到所述客户端，包括：所述服务端获取所述客户端发送的密钥协商请求，将所述第一DH算法参数按预设的字符串拼接规则，组合成第一字符串；所述服务端随机生成第一XOR私钥，并对所述第一字符串和所述第一XOR私钥进行异或运算，得到第一参数；所述服务端将所述第一参数返回给所述客户端；所述客户端随机生成第二XOR私钥，并对所述第一参数和所述第二XOR私钥进行异或运算，得到第二参数；所述客户端将所述第二参数发送到所述服务端；所述服务端获取所述第二参数，并通过所述第一XOR私钥对所述第二参数进行异或解密运算，得到第三参数；所述服务端将所述第三参数返回给所述客户端；所述客户端获取所述第三参数，并通过所述第二XOR私钥对所述第三参数进行异或解密运算，得到所述第一字符串；所述客户端根据所述预设的字符串拼接规则，对所述第一字符串进行反向拆分，得到所述第一DH算法参数。5.根据权利要求1所述的方法，其特征在于，所述服务端根据所述第二DH算法参数计算生成与所述客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，包括：所述服务端获取所述第二DH算法参数，并根据所述第二DH算法参数和所述第一DH算法参数中的大素数、随机数进行参数计算，得到对称加密AES密钥和初始向量。6.根据权利要求1所述的方法，其特征在于，在所述服务端向所述客户端返回密钥协商完成的消息之后，所述方法包括：所述客户端基于生成的对称加密AES密钥和初始向量，采用AES加密算法对订票信息进行加密，生成数字签名，并向所述服务端发出订票请求；所述服务端获取订票请求，对请求时间戳进行时效校验，并对所述数字签名进行校验；通过校验后，服务端执行订票操作，并通过所述对称加密AES密钥和初始向量对订票结果进行加密，返回到所述客户端。7.根据权利要求6所述的方法，其特征在于，所述在所述服务端对请求时间戳进行时效校验之前，所述方法还包括：所述客户端向所述服务端请求获取服务器时间，并读取客户端本地时间；根据所述服务器时间和所述客户端本地时间，计算得到所述服务器时间与所述客户端本地时间之间的时间差；当所述客户端向所述服务端发出请求，并传递请求时间戳时，通过所述时间差修正所述服务端与所述客户端间的时间差异，以确保所述客户端与所述服务端处于同一时间点。8.一种票务系统防刷票的多重加密系统，其特征在于，所述系统包括客户端和服务端，所述客户端，通过登录校验登录所述服务端，并请求所述服务端获取JavaScript虚拟机解释器文件和opcode文件后，在所述客户端构建JavaScript虚拟机环境，以对所述客户端进行本地加密；所述客户端，基于JavaScript虚拟机环境，向所述服务端发送密钥协商请求，以获取第一DH算法参数；所述服务端，响应于所述客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将所述第一DH算法参数在所述服务端与所述客户端之间进行加密交换，以将所述第一DH算法参数从所述服务端安全发送到所述客户端；所述客户端，根据所述第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将所述第二DH算法参数在所述客户端与所述服务端之间进行加密交换，以将所述第二DH算法参数从所述客户端安全发送到所述服务端；所述服务端，根据所述第二DH算法参数计算生成与所述客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，所述对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间；所述服务端生成用于加密通信的所述对称加密AES密钥和初始向量后，完成密钥协商，并向所述客户端返回密钥协商完成的消息。9.一种计算机设备，包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，其特征在于，所述处理器执行所述计算机程序时实现如权利要求1至7中任一项所述的方法。10.一种计算机可读存储介质，其特征在于，所述计算机可读存储介质存储有计算机程序，当所述计算机程序被处理器执行时实现如权利要求1至7任一项所述的方法。
说明书desc
技术领域本发明涉及信息安全技术领域，尤其涉及票务系统防刷票的多重加密方法、系统、设备和介质。背景技术现有的票务系统存在如下问题，一、基于浏览器构建的客户端，代码逻辑开源，因此容易被获取、破解。而不基于浏览器的客户端，跨平台能力差，而且需要单独安装客户端软件，用户体验感差。二、客户端和服务器在通信传输中进行AES密钥配对时，密钥需要事先生成和分配，导致其难以动态更新，安全性低；或就算密钥能动态更新，但动态生成的密钥在传输中容易被拦截和破解。因此，针对现有技术中票务系统的购票安全性较低，容易出现刷票行为的问题，尚未提出有效的解决方案。发明内容本发明实施例提供了一种票务系统防刷票的多重加密方法、系统、设备及介质，旨在解决现有技术方法中票务系统的购票安全性较低，容易出现刷票行为的问题。第一方面，本发明实施例提供了一种票务系统防刷票的多重加密方法，所述方法包括：客户端通过登录校验登录服务端；所述客户端请求所述服务端获取JavaScript虚拟机解释器文件和opcode文件，并在所述客户端构建JavaScript虚拟机环境，以对所述客户端进行本地加密；所述客户端基于JavaScript虚拟机环境，向所述服务端发送密钥协商请求，以获取第一DH算法参数；所述服务端响应于所述客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将所述第一DH算法参数在所述服务端与所述客户端之间进行加密交换，以将所述第一DH算法参数从所述服务端安全发送到所述客户端；所述客户端根据所述第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将所述第二DH算法参数在所述客户端与所述服务端之间进行加密交换，以将所述第二DH算法参数从所述客户端安全发送到所述服务端；所述服务端根据所述第二DH算法参数计算生成与所述客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，所述对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间；所述服务端生成用于加密通信的所述对称加密AES密钥和初始向量后，完成密钥协商，并向所述客户端返回密钥协商完成的消息。第二方面，本发明实施例提供了一种票务系统防刷票的多重加密系统，所述系统包括客户端和服务端，所述客户端，通过登录校验登录所述服务端，并请求所述服务端获取JavaScript虚拟机解释器文件和opcode文件后，在所述客户端构建JavaScript虚拟机环境，以对所述客户端进行本地加密；所述客户端，基于JavaScript虚拟机环境，向所述服务端发送密钥协商请求，以获取第一DH算法参数；所述服务端，响应于所述客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将所述第一DH算法参数在所述服务端与所述客户端之间进行加密交换，以将所述第一DH算法参数从所述服务端安全发送到所述客户端；所述客户端，根据所述第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将所述第二DH算法参数在所述客户端与所述服务端之间进行加密交换，以将所述第二DH算法参数从所述客户端安全发送到所述服务端；所述服务端，根据所述第二DH算法参数计算生成与所述客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，所述对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间；所述服务端生成用于加密通信的所述对称加密AES密钥和初始向量后，完成密钥协商，并向所述客户端返回密钥协商完成的消息。第三方面，本发明实施例又提供了一种计算机设备，其包括存储器、处理器及存储在所述存储器上并可在所述处理器上运行的计算机程序，所述处理器执行所述计算机程序时实现上述第一方面所述的方法。第四方面，本发明实施例还提供了一种计算机可读存储介质，其中所述计算机可读存储介质存储有计算机程序，所述计算机程序当被处理器执行时使所述处理器执行上述第一方面所述的方法。本发明实施例提供了一种票务系统防刷票的多重加密方法及系统。客户端通过登录校验登录服务端；客户端请求服务端获取JavaScript虚拟机解释器文件和opcode文件，并在客户端构建JavaScript虚拟机环境，以对客户端进行本地加密；客户端基于JavaScript虚拟机环境，向服务端发送密钥协商请求，以获取第一DH算法参数；服务端响应于客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端；客户端根据第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端；服务端根据第二DH算法参数计算生成与客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间；服务端生成用于加密通信的对称加密AES密钥和初始向量后，完成密钥协商，并向客户端返回密钥协商完成的消息。上述方法中，首先通过在客户端构建虚拟机，实现客户端本地计算代码、计算逻辑和计算参数的加密，解决浏览器客户端代码逻辑易获取的问题；然后在JavaScript虚拟机环境下，利用异或密钥交换算法和DH密钥协商算法，实现客户端与服务端的通信密钥一对一动态协商；通过上述多重加密的配合应用，环环相扣，从而防止刷票行为。附图说明为了更清楚地说明本发明实施例技术方案，下面将对实施例描述中所需要使用的附图作简单地介绍，显而易见地，下面描述中的附图是本发明的一些实施例，对于本领域普通技术人员来讲，在不付出创造性劳动的前提下，还可以根据这些附图获得其他的附图。图1为本发明实施例提供的票务系统防刷票的多重加密方法的流程示意图；图2为本发明实施例提供的密钥协商的流程示意图；图3为本发明实施例提供的计算机设备的示意性框图。具体实施方式下面将结合本发明实施例中的附图，对本发明实施例中的技术方案进行清楚、完整地描述，显然，所描述的实施例是本发明一部分实施例，而不是全部的实施例。基于本发明中的实施例，本领域普通技术人员在没有做出创造性劳动前提下所获得的所有其他实施例，都属于本发明保护的范围。应当理解，当在本说明书和所附权利要求书中使用时，术语“包括”和 “包含”指示所描述特征、整体、步骤、操作、元素和/或组件的存在，但并不排除一个或多个其它特征、整体、步骤、操作、元素、组件和/或其集合的存在或添加。还应当理解，在此本发明说明书中所使用的术语仅仅是出于描述特定实施例的目的而并不意在限制本发明。如在本发明说明书和所附权利要求书中所使用的那样，除非上下文清楚地指明其它情况，否则单数形式的“一”、“一个”及“该”意在包括复数形式。还应当进一步理解，在本发明说明书和所附权利要求书中使用的术语“和/ 或”是指相关联列出的项中的一个或多个的任何组合以及所有可能组合，并且包括这些组合。本实施例提供了一种票务系统防刷票的多重加密方法，图1为本发明实施例提供的票务系统防刷票的多重加密方法的流程示意图，如图1所示，该方法包括步骤S110~S170。S110、客户端通过登录校验登录服务端。优选的，本实施例中用户通过浏览器客户端向服务端发出登录请求，以使得服务端对登录请求进行验证；客户端若接收到服务端发送的验证通过通知，则登录服务端。或者，服务端向客户端发出询问请求，以确认客户端是否需要登录服务端，若是，则服务端对用户的登录信息进行校验，客户端若接收到服务端发送的验证通过通知，则登录服务端。需要说明的是，上述校验的用户登录信息包括：用户名、用户密码等。在一实施例中，服务端除了对用户的登录信息进行常规登录校验外，还包括对用户进行黑名单校验。在客户端若接收到服务端发送的验证通过通知之后，服务端对用户信息进行黑名单校验，若用户信息经黑名单校验是黑名单人员，则不能登录服务端，若用户信息经黑名单校验不是黑名单人员，则登录服务端，其中，黑名单包括自定义设置的受限用户名单、异常操作名单。此外，进行黑名单校验时，会结合注册用户信息、设备指纹、异常行为采集和甄别等信息进行校验。经过上述步骤后，如果常规的登录校验未通过，或者登录校验通过但是该用户未通过黑名单校验，则无法登录。而如果登录校验和黑名单校验都通过，则登录服务端，可进行后续的购票等操作。S120、客户端请求服务端获取JavaScript虚拟机解释器文件和opcode文件，并在客户端构建JavaScript虚拟机环境，以对客户端进行本地加密。客户端通过登录校验登录服务端后，客户端请求服务端获取JavaScript虚拟机解释器文件和opcode文件，并在客户端构建JavaScript虚拟机环境，以对客户端进行本地加密，解决客户端本地代码逻辑易被获取解密的问题。S130、客户端基于JavaScript虚拟机环境，向服务端发送密钥协商请求，以获取第一DH算法参数。图2为本发明实施例提供的密钥协商的流程示意图，如图2所示，客户端基于步骤S120中构建的JavaScript虚拟机环境，向服务端发送密钥协商请求，以获取第一DH算法参数，其中，第一DH算法参数包括大素数p、原根g和服务端计算值A。S140、服务端响应于客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端。服务端响应于客户端的密钥协商请求，生成大素数p、原根g和私钥随机数a，并根据大素数p、原根g和私钥随机数a，计算得到公钥，即服务端计算值A。接着，服务端基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端。在一实施例中，服务端基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端的具体步骤如下：S141、服务端获取客户端发送的密钥协商请求，将第一DH算法参数按预设的字符串拼接规则，组合成第一字符串tServer。S142、服务端随机生成第一XOR私钥k1，并对第一字符串tServer和第一XOR私钥k1进行异或运算，得到第一参数s1。S143、服务端将第一参数s1返回给客户端。S144、客户端获取第一参数s1后，随机生成第二XOR私钥k2，并对第一参数s1和第二XOR私钥k2进行异或运算，得到第二参数s2。S145、客户端将第二参数s2发送到服务端。S146、服务端获取第二参数s2，并通过第一XOR私钥k1对第二参数s2进行异或解密运算，得到第三参数s3。S147、服务端将第三参数s3返回给客户端。S148、客户端获取第三参数s3，并通过第二XOR私钥k2对第三参数s3进行异或解密运算，得到第一字符串tServer。S149、客户端根据之前预设的字符串拼接规则，对第一字符串tServer进行反向拆分，得到第一DH算法参数。本实施例中，采用了异或密钥交换算法来进行DH算法参数的加密交换，能进一步增强防护。S150、客户端根据第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端。如图2所示，客户端获取第一DH算法参数后，随机生成私钥随机数b，并根据第一DH算法参数和私钥随机数b在本地计算生成第二DH算法参数，即计算值B，以及通过DH算法，基于第一DH算法参数和私钥随机数b生成对称加密AES密钥和初始向量。本实施例中在客户端生成与服务端相同的对称加密AES密钥和初始向量能降低密钥本身传输过程可能带来的安全性问题。然后，客户端基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端。其中，客户端基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端的具体步骤同理如上述步骤S141-S149所示。S160、服务端根据第二DH算法参数计算生成与客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间。如图2所示，服务端根据第二DH算法参数和第一DH算法参数中的大素数p、服务端私钥随机数a，计算生成与客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量。本实施例中在服务端生成与客户端相同的对称加密AES密钥和初始向量能降低密钥本身传输过程可能带来的安全性问题。且该密钥和初始向量是客户端和服务端一对一专享的，与现有技术中采用的对称加密密钥多个客户端共享的情况不同，采用本方案可有效提高密钥的安全性。需要说明的是，为了提高系统安全等级，每一对AES密钥和初始向量的有效期仅限于当前登录请求期间，当会话结束，则密钥和初始向量也跟着失效。在下一次请求时，对称加密AES密钥和初始向量会重新进行协商确定。S170、服务端生成用于加密通信的对称加密AES密钥和初始向量后，完成密钥协商，并向客户端返回密钥协商完成的消息。通过上述步骤生成对称加密AES密钥和初始向量之后，完成密钥协商，服务端向客户端返回密钥协商完成的消息。通过生成的对称加密AES密钥和初始向量可实现后续购票、查票等业务的通信加密。在一实施例中，在服务端向客户端返回密钥协商完成的消息之后，还包括步骤S1701-S1703。S1701、客户端基于生成的对称加密AES密钥和初始向量，采用AES加密算法对订票信息进行加密，生成数字签名，并向服务端发出订票请求。S1702、服务端获取订票请求，对请求时间戳进行时效校验，并对数字签名进行校验。其中，请求时间的校验范围可根据实际情况进行设置，若时效校验时，请求时间超过设置的校验范围，则不予订票操作。S1703、通过校验后，服务端执行订票操作，并通过对称加密AES密钥和初始向量对订票结果进行加密，返回到客户端。在一实施例中，为了进一步提高时效校验的精确度，从而更精准的防止通信信息被拦截和伪造，在服务端对请求时间戳进行时效校验之前，还包括如下步骤：S1、客户端向服务端请求获取服务器时间timeS，并读取客户端本地时间timeC；S2、根据服务器时间timeS和客户端本地时间timeC，计算得到服务器时间和客户端本地时间之间的时间差timeDiff；S3、当客户端向服务端发出查询、购票等请求，并传递请求时间戳时，通过时间差timeDiff修正服务端与客户端间的时间差异，以确保客户端与服务端处于同一时间点，从而保证服务端对请求时间戳进行时效校验的精准度。在上述S130-S170密钥协商通信步骤中，通过DH密钥协商算法和异或密钥交换算法，使得客户端和服务端之间对称加密的密钥和初始向量无需进行传输的情况下，协商出一对相互一致的密钥和初始向量，解决了现有技术中AES密钥和初始向量需要事先生成和分配，难以动态更新，或者动态生成后需要在客户端和服务端之间传输而容易被拦截的问题，此外，本实施例通过密钥协商的方式，可解决现有技术中采用非对称加密方式传输对称密钥所带来的性能低下问题。在本发明实施例所提供的票务系统防刷票的多重加密方法中，客户端通过登录校验登录服务端；客户端请求服务端获取JavaScript虚拟机解释器文件和opcode文件，并在客户端构建JavaScript虚拟机环境，以对客户端进行本地加密；客户端基于JavaScript虚拟机环境，向服务端发送密钥协商请求，以获取第一DH算法参数；服务端响应于客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端；客户端根据第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端；服务端根据第二DH算法参数计算生成与客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间；服务端生成用于加密通信的对称加密AES密钥和初始向量后，完成密钥协商，并向客户端返回密钥协商完成的消息。上述方法中，首先通过在客户端构建虚拟机，实现客户端本地计算代码、计算逻辑和计算参数的加密，解决浏览器客户端代码逻辑易获取的问题；然后在JavaScript虚拟机环境下，利用异或密钥交换算法和DH密钥协商算法，实现客户端与服务端的通信密钥一对一动态协商；通过上述多重加密的配合应用，环环相扣，从而防止刷票行为。下面以浏览器客户端进行订票操作为例，具体说明上述一种票务系统防刷票的多重加密方法的实际应用过程：S1、用户在浏览器客户端通过登录校验登录服务端后，下单订票。S2、客户端请求服务端获取JavaScript虚拟机解释器文件和opcode文件，并在客户端构建JavaScript虚拟机沙盒环境。S3、客户端在JavaScript虚拟机环境下，按跟服务端约定的规则和摘要算法，对需要发送的报文进行摘要计算，得到特征值signBlock，其中，报文包括订票的关键参数，如：游玩日期、游玩时段、票型名称、票型编码、订票人信息、时间戳等。S4、根据本申请实施例中步骤S130-S160的密钥协商过程中生成的对称加密AES密钥和初始向量，采用AES加密算法对摘要特征值signBlock进行加密，生成数字签名，并以加密的方式向服务端发出订票请求。S5、服务端获取订票请求，对请求时间戳进行时效校验，其中，请求时间的校验范围可根据实际情况进行设置，若时效校验时，请求时间超过设置的校验范围，则不予订票操作。S6、服务端对数字签名进行校验，具体校验包括：按与客户端约定的规则，对报文进行摘要计算，得到特征值signBlock1；然后根据密钥协商过程中生成的对称加密AES密钥和初始向量对数字签名进行解密，得到signBlock；将signBlock和signBlock1进行比对，若一致，则数字签名验证通过。S7、通过上述两个校验后，服务端执行订票操作，并通过对称加密AES密钥和初始向量对订票结果进行加密，以加密的方式返回到虚拟机客户端中。S8、在虚拟机中对订票结果进行解密，并将解密后的订票信息发送到浏览器客户端，从而在浏览器页面展示订票结果。本发明实施例还提供一种票务系统防刷票的多重加密系统，该系统包括客户端和服务端。客户端，通过登录校验登录服务端。优选的，本实施例中用户通过浏览器客户端向服务端发出登录请求，以使得服务端对登录请求进行验证；客户端若接收到服务端发送的验证通过通知，则登录服务端。或者，服务端向客户端发出询问请求，以确认客户端是否需要登录服务端，若是，则服务端对用户的登录信息进行校验，客户端若接收到服务端发送的验证通过通知，则登录服务端。需要说明的是，上述校验的用户登录信息包括：用户名、用户密码等。在一实施例中，服务端除了对用户的登录信息进行常规登录校验外，还包括对用户进行黑名单校验。在客户端若接收到服务端发送的验证通过通知之后，服务端对用户信息进行黑名单校验，若用户信息经黑名单校验是黑名单人员，则不能登录服务端，若用户信息经黑名单校验不是黑名单人员，则登录服务端，其中，黑名单包括自定义设置的受限用户名单、异常操作名单。此外，进行黑名单校验时，会结合注册用户信息、设备指纹、异常行为采集和甄别等信息进行校验。经过上述步骤后，如果常规的登录校验未通过，或者登录校验通过但是该用户未通过黑名单校验，则无法登录。而如果登录校验和黑名单校验都通过，则登录服务端，可进行后续的购票等操作。进一步，客户端，请求服务端获取JavaScript虚拟机解释器文件和opcode文件，并在客户端构建JavaScript虚拟机沙盒环境，以对客户端进行本地加密。具体的，客户端通过登录校验登录服务端后，客户端请求服务端获取JavaScript虚拟机解释器文件和opcode文件，并在客户端构建JavaScript虚拟机环境，以对客户端进行本地加密，解决客户端本地代码逻辑易被获取解密的问题。再进一步，客户端，基于JavaScript虚拟机环境，向服务端发送密钥协商请求，以获取第一DH算法参数。图2为本发明实施例提供的密钥协商的流程示意图，如图2所示，客户端基于构建的JavaScript虚拟机环境，向服务端发送密钥协商请求，以获取第一DH算法参数，其中，第一DH算法参数包括大素数p、原根g和服务端计算值A。接着，服务端响应于客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端。具体的，服务端响应于客户端的密钥协商请求，生成大素数p、原根g和私钥随机数a，并根据大素数p、原根g和私钥随机数a，计算得到公钥，即服务端计算值A。接着，服务端基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端。在一实施例中，服务端基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端的具体步骤如下：S141、服务端获取客户端发送的密钥协商请求，将第一DH算法参数按预设的字符串拼接规则，组合成第一字符串tServer。S142、服务端随机生成第一XOR私钥k1，并对第一字符串tServer和第一XOR私钥k1进行异或运算，得到第一参数s1。S143、服务端将第一参数s1返回给客户端。S144、客户端获取第一参数s1后，随机生成第二XOR私钥k2，并对第一参数s1和第二XOR私钥k2进行异或运算，得到第二参数s2。S145、客户端将第二参数s2发送到服务端。S146、服务端获取第二参数s2，并通过第一XOR私钥k1对第二参数s2进行异或解密运算，得到第三参数s3。S147、服务端将第三参数s3返回给客户端。S148、客户端获取第三参数s3，并通过第二XOR私钥k2对第三参数s3进行异或解密运算，得到第一字符串tServer。S149、客户端根据之前预设的字符串拼接规则，对第一字符串tServer进行反向拆分，得到第一DH算法参数。上述采用了异或密钥交换算法来进行DH算法参数的加密交换，能进一步增强防护。紧接着，客户端根据第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端，服务端根据第二DH算法参数计算生成与客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间。具体的，如图2所示，客户端获取第一DH算法参数后，随机生成私钥随机数b，并根据第一DH算法参数和私钥随机数b在本地计算生成第二DH算法参数，即计算值B，以及通过DH算法，基于第一DH算法参数和私钥随机数b生成对称加密AES密钥和初始向量。本实施例中在客户端生成与服务端相同的对称加密AES密钥和初始向量能降低密钥本身传输过程可能带来的安全性问题。然后，客户端基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端。其中，客户端基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端的具体步骤同理如上述步骤S141-S149所示。服务端安全获取第二DH算法参数后，根据第二DH算法参数和第一DH算法参数中的大素数p、服务端私钥随机数a，计算生成与客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量。本实施例中在服务端生成与客户端相同的对称加密AES密钥和初始向量能降低密钥本身传输过程可能带来的安全性问题。且该密钥和初始向量是客户端和服务端一对一专享的，与现有技术中采用的对称加密密钥多个客户端共享的情况不同，采用本方案可有效提高密钥的安全性。需要说明的是，为了提高系统安全等级，每一对AES密钥和初始向量的有效期仅限于当前登录请求期间，当会话结束，则密钥和初始向量也跟着失效。在下一次请求时，对称加密AES密钥和初始向量会重新进行协商确定。最后，服务端生成用于加密通信的对称加密AES密钥和初始向量后，完成密钥协商，并向客户端返回密钥协商完成的消息。具体的，通过上述步骤生成对称加密AES密钥和初始向量之后，完成密钥协商，服务端向客户端返回密钥协商完成的消息。通过生成的对称加密AES密钥和初始向量可实现后续购票、查票等业务的通信加密。在一实施例中，在服务端向客户端返回密钥协商完成的消息之后，还包括步骤S1701-S1703。S1701、客户端基于生成的对称加密AES密钥和初始向量，采用AES加密算法对订票信息进行加密，生成数字签名，并向服务端发出订票请求。S1702、服务端获取订票请求，对请求时间戳进行时效校验，并对数字签名进行校验。其中，请求时间的校验范围可根据实际情况进行设置，若时效校验时，请求时间超过设置的校验范围，则不予订票操作。S1703、通过校验后，服务端执行订票操作，并通过对称加密AES密钥和初始向量对订票结果进行加密，返回到客户端。在一实施例中，为了进一步提高时效校验的精确度，从而更精准的防止通信信息被拦截和伪造，在服务端对请求时间戳进行时效校验之前，还包括如下步骤：S1、客户端向服务端请求获取服务器时间timeS，并读取客户端本地时间timeC；S2、根据服务器时间timeS和客户端本地时间timeC，计算得到服务器时间和客户端本地时间之间的时间差timeDiff；S3、当客户端向服务端发出查询、购票等请求，并传递请求时间戳时，通过时间差timeDiff修正服务端与客户端间的时间差异，以确保客户端与服务端处于同一时间点，从而保证服务端对请求时间戳进行时效校验的精准度。在上述密钥协商通信步骤中，通过DH密钥协商算法和异或密钥交换算法，使得客户端和服务端之间对称加密的密钥和初始向量无需进行传输的情况下，协商出一对相互一致的密钥和初始向量，解决了现有技术中AES密钥和初始向量需要事先生成和分配，难以动态更新，或者动态生成后需要在客户端和服务端之间传输而容易被拦截的问题，此外，本实施例通过密钥协商的方式，可解决现有技术中采用非对称加密方式传输对称密钥所带来的性能低下问题。在本发明实施例所提供的票务系统防刷票的多重加密系统应用于上述票务系统防刷票的多重加密方法中，客户端通过登录校验登录服务端；客户端请求服务端获取JavaScript虚拟机解释器文件和opcode文件，并在客户端构建JavaScript虚拟机环境，以对客户端进行本地加密；客户端基于JavaScript虚拟机环境，向服务端发送密钥协商请求，以获取第一DH算法参数；服务端响应于客户端的密钥协商请求，生成第一DH算法参数，并基于异或密钥交换算法，将第一DH算法参数在服务端与客户端之间进行加密交换，以将第一DH算法参数从服务端安全发送到客户端；客户端根据第一DH算法参数在本地计算生成第二DH算法参数以及对称加密AES密钥和初始向量，并基于异或密钥交换算法，将第二DH算法参数在客户端与服务端之间进行加密交换，以将第二DH算法参数从客户端安全发送到服务端；服务端根据第二DH算法参数计算生成与客户端生成的对称加密AES密钥和初始向量相同的对称加密AES密钥和初始向量，以用于加密通信，其中，对称加密AES密钥和初始向量的有效期仅限于当前登录请求期间；服务端生成用于加密通信的对称加密AES密钥和初始向量后，完成密钥协商，并向客户端返回密钥协商完成的消息。上述方法中，首先通过在客户端构建虚拟机，实现客户端本地计算代码、计算逻辑和计算参数的加密，解决浏览器客户端代码逻辑易获取的问题；然后在JavaScript虚拟机环境下，利用异或密钥交换算法和DH密钥协商算法，实现客户端与服务端的通信密钥一对一动态协商；通过上述多重加密的配合应用，环环相扣，从而防止刷票行为。上述票务系统防刷票的多重加密方法可以实现为计算机程序的形式，该计算机程序可以在如图3所示的计算机设备上运行。请参阅图3，图3是本发明实施例提供的计算机设备的示意性框图。该计算机设备可以是用于执行票务系统防刷票的多重加密方法。参阅图3，该计算机设备500包括通过系统总线501连接的处理器502、存储器和网络接口505，其中，存储器可以包括存储介质503和内存储器504。该存储介质503可存储操作系统5031和计算机程序5032。该计算机程序5032被执行时，可使得处理器502执行票务系统防刷票的多重加密方法，其中，存储介质503可以为易失性的存储介质或非易失性的存储介质。该处理器502用于提供计算和控制能力，支撑整个计算机设备500的运行。该内存储器504为存储介质503中的计算机程序5032的运行提供环境，该计算机程序5032被处理器502执行时，可使得处理器502执行票务系统防刷票的多重加密方法。该网络接口505用于进行网络通信，如提供数据信息的传输等。本领域技术人员可以理解，图3中示出的结构，仅仅是与本发明方案相关的部分结构的框图，并不构成对本发明方案所应用于其上的计算机设备500的限定，具体的计算机设备500可以包括比图中所示更多或更少的部件，或者组合某些部件，或者具有不同的部件布置。其中，所述处理器502用于运行存储在存储器中的计算机程序5032，以实现上述的票务系统防刷票的多重加密方法中对应的功能。本领域技术人员可以理解，图3中示出的计算机设备的实施例并不构成对计算机设备具体构成的限定，在其他实施例中，计算机设备可以包括比图示更多或更少的部件，或者组合某些部件，或者不同的部件布置。例如，在一些实施例中，计算机设备可以仅包括存储器及处理器，在这样的实施例中，存储器及处理器的结构及功能与图3所示实施例一致，在此不再赘述。应当理解，在本发明实施例中，处理器502可以是中央处理单元 ，该处理器502还可以是其他通用处理器、数字信号处理器、专用集成电路 、现成可编程门阵列  或者其他可编程逻辑器件、分立门或者晶体管逻辑器件、分立硬件组件等。其中，通用处理器可以是微处理器或者该处理器也可以是任何常规的处理器等。在本发明的另一实施例中提供计算机可读存储介质。该计算机可读存储介质可以为易失性或非易失性的计算机可读存储介质。该计算机可读存储介质存储有计算机程序，其中计算机程序被处理器执行时实现上述的票务系统防刷票的多重加密方法中所包含的步骤。所属领域的技术人员可以清楚地了解到，为了描述的方便和简洁，上述描述的设备、装置和单元的具体工作过程，可以参考前述方法实施例中的对应过程，在此不再赘述。本领域普通技术人员可以意识到，结合本文中所公开的实施例描述的各示例的单元及算法步骤，能够以电子硬件、计算机软件或者二者的结合来实现，为了清楚地说明硬件和软件的可互换性，在上述说明中已经按照功能一般性地描述了各示例的组成及步骤。这些功能究竟以硬件还是软件方式来执行取决于技术方案的特定应用和设计约束条件。专业技术人员可以对每个特定的应用来使用不同方法来实现所描述的功能，但是这种实现不应认为超出本发明的范围。在本发明所提供的几个实施例中，应该理解到，所揭露的设备、装置和方法，可以通过其它的方式实现。例如，以上所描述的装置实施例仅仅是示意性的，例如，所述单元的划分，仅仅为逻辑功能划分，实际实现时可以有另外的划分方式，也可以将具有相同功能的单元集合成一个单元，例如多个单元或组件可以结合或者可以集成到另一个系统，或一些特征可以忽略，或不执行。另外，所显示或讨论的相互之间的耦合或直接耦合或通信连接可以是通过一些接口、装置或单元的间接耦合或通信连接，也可以是电的，机械的或其它的形式连接。所述作为分离部件说明的单元可以是或者也可以不是物理上分开的，作为单元显示的部件可以是或者也可以不是物理单元，即可以位于一个地方，或者也可以分布到多个网络单元上。可以根据实际的需要选择其中的部分或者全部单元来实现本发明实施例方案的目的。另外，在本发明各个实施例中的各功能单元可以集成在一个处理单元中，也可以是各个单元单独物理存在，也可以是两个或两个以上单元集成在一个单元中。上述集成的单元既可以采用硬件的形式实现，也可以采用软件功能单元的形式实现。所述集成的单元如果以软件功能单元的形式实现并作为独立的产品销售或使用时，可以存储在一个计算机可读存储介质中。基于这样的理解，本发明的技术方案本质上或者说对现有技术做出贡献的部分，或者该技术方案的全部或部分可以以软件产品的形式体现出来，该计算机软件产品存储在一个计算机可读存储介质中，包括若干指令用以使得一台计算机设备  执行本发明各个实施例所述方法的全部或部分步骤。而前述的计算机可读存储介质包括：U 盘、移动硬盘、只读存储器 、磁碟或者光盘等各种可以存储程序代码的介质。以上所述，仅为本发明的具体实施方式，但本发明的保护范围并不局限于此，任何熟悉本技术领域的技术人员在本发明揭露的技术范围内，可轻易想到各种等效的修改或替换，这些修改或替换都应涵盖在本发明的保护范围之内。因此，本发明的保护范围应以权利要求的保护范围为准。
