标题title
一种基于云边端协同的电力负荷智能识别系统、方法及设备
摘要abst
本发明涉及一种基于云边端协同的电力负荷智能识别系统、方法及设备，属于人工智能领域，包括云平台层、边缘层和终端层，云平台层包括云计算集群、数据库、云端文件存储系统以及MQTT服务器；边缘层是部署在配电侧的各种设备，包括边缘设备、边缘侧文件存储系统；终端层是具有数据采集功能的终端设备，用于将实时采集的电路上的电气数据通过无线网络传输到边缘层。本发明采用KubeEdge和EdgeX Foundry方法，实现一种基于云边端架构的电力负荷识别系统及方法，实现云边端设备信息交互与管理、边缘端与终端信息交互、云端电力负荷识别模型训练、镜像下发，为电力行业中电力负荷识别提供了一种高精度、易部署的系统及方法。
权利要求书clms
1.一种基于云边端协同的电力负荷智能识别系统，其特征在于，包括云平台层、边缘层和终端层；所述云平台层包括云计算集群、数据库、云端文件存储系统以及MQTT服务器，所述云计算集群用于电力负荷识别模型的训练；所述云端文件存储系统用于存储电力负荷识别模型、数据集、镜像文件、电力负荷实时推理程序；所述数据库用于存储边缘设备ID号、文件存储的寻址目录；所述MQTT服务器作为云端与边缘端的文件传输的媒介，提供数据信息中专功能；所述边缘层为部署在配电侧的各种设备，包括边缘设备和边缘侧文件存储系统，所述边缘设备包括电力负荷识别模型、电力负荷实时推理程序，边缘设备用于处理电力负荷识别场景中获取边缘侧文件存储系统中终端层上传的实时监控数据，并通过电力负荷实时推理程序对监控数据进行实时识别，将识别完成的电器用电数据推送至用户；所述边缘侧文件存储系统用于存储历史和最新版本的电力负荷识别模型、电力负荷实时推理程序、终端传回的电力负荷数据及边缘设备的分解结果；所述边缘侧文件存储系统用于云平台层和边缘设备进行信息交互、接收存储终端设备上传的实时监控数据；所述终端层为电力负荷识别场景中具有数据采集功能的终端设备，包括电力负荷采集设备，将实时采集电路总线上的电气数据并通过无线网络传输到边缘层，以待检测。2.根据权利要求1所述的基于云边端协同的电力负荷智能识别系统，其特征在于，所述云计算集群部署开源的Kubeedge管理平台，边缘侧文件存储系统部署EdgeX Foundry边缘计算开源平台。3.根据权利要求2所述的基于云边端协同的电力负荷智能识别系统，其特征在于，所述云计算集群、数据库与云端文件存储系统处于同一局域网内，边缘设备与边缘侧文件存储系统处于同一局域网内；优选的，所述边缘设备为Nvidia Xavier Nx集成设备。4.一种基于云边端协同的电力负荷智能识别方法，其特征在于，基于权利要求1所述的电力负荷智能识别系统实现，包括以下步骤：步骤1：云服务器连接边缘设备：云平台层通过安装部署Kubernetes和kubeedge生成边缘设备接入的token，边缘设备通过该token加入到云端；步骤2：终端设备连接边缘设备：在边缘设备上通过Yaml文件指定所属的终端设备，实现对终端设备数据的采集、挖掘以及对终端设备的控制；步骤3：电力负荷数据预处理和电力负荷识别模型训练；云计算集群对电力负荷数据预处理处理后，利用Seq2Point基于序列到点的神经网络对电力负荷识别模型进行训练，云计算集群将实时训练好的电力负荷识别模型和电力负荷实时推理程序存储到云端文件存储系统，将两者的路径存入数据库中对应表；步骤4：生成镜像并下发：云计算集群将训练完成的电力负荷识别模型及电力负荷实时推理程序生成镜像，发送至MQTT服务器，提供给边缘层进行订阅；步骤5：边缘层进行电力负荷实时识别：边缘设备对MQTT服务器中的镜像进行拉取并部署，电力负荷采集设备将实时识别的数据上传至边缘侧文件存储系统中，边缘侧文件存储系统通过EdgeX Foundry对数据进行接收并保存至时序型数据库InfluxDB中，边缘设备通过提取InfluxDB中的数据传入电力负荷实时推理程序中不间断的进行识别，识别结果保存至边缘侧文件存储系统，并推送至UI界面对用户及电力系统工作人员进行实时展示；步骤6：边缘层数据上传：将边缘侧文件存储系统中存储的电力负荷识别结果以及终端设备上传的电气数据发送至MQTT服务器，云服务器对MQTT服务器中的数据通过订阅来进行获取。5.根据权利要求4所述的基于云边端协同的电力负荷智能识别方法，其特征在于，步骤2中终端设备连接边缘设备的具体实现过程如下：在边缘设备中部署完成EdgeX Foundry后，终端设备以http的方式来实现发送产生的数据到设备服务，根据传输的内容包括时间戳、有功功率来定义yaml文件中数据格式信息，指定toml文件中的host为运行EdgeX服务的ip地址。6.根据权利要求4所述的基于云边端协同的电力负荷智能识别方法，其特征在于，步骤3中，电力负荷数据预处理和电力负荷识别模型训练，具体实现步骤如下：步骤3.1：数据预处理：云计算集群对电力负荷数据集中的数据进行预处理，流程包括：缺失值填充，实现对时间序列中空值、不完整数据进行补充；异常数据清洗，检查存在的异常数据；处理无效数据，分析各个参数数据的区间范围，对无效数据进行删除处理；步骤3.2：电力负荷识别模型训练：将数据集按照17：3的比例进行随机划分为训练集和测试集，训练集用于电力负荷识别模型的训练，测试集用于验证训练完成的模型，数据集在输入前进行归一化操作，即将原始数据映射到0到1范围内；然后输入到Seq2Point基于序列到点的神经网络对电力负荷识别模型进行训练，其中，训练模型的网络结构为四个卷积层、两个全连接层和两个随机失活层，最后根据测试集的分解结果与原始结果进行比对，输出模型的评估结果；步骤3.3：将训练生成的电力负荷识别模型存入云端的文件存储系统；优选的，步骤3.1中，电力负荷数据集的获取方式为：将电力负荷数据集从终端设备以http的方式发送至设备服务，边缘设备通过EdgeX Foundry进行接收之后，边缘设备将接收到的电力负荷数据进行归纳汇总，发送至MQTT服务器，等待云计算集群进行订阅和存储。7.根据权利要求6所述的基于云边端协同的电力负荷智能识别方法，其特征在于，步骤4中生成镜像并下发给边缘层，具体实现方式如下：步骤4.1：在云平台层训练得到一个分解精度高的模型后，将训练完成的电力负荷识别模型及电力负荷实时推理程序生成Docker镜像；步骤4.2：在云平台层通过yaml文件创建一个development，通过development来管理pod；云服务器将步骤4.1创建好的镜像文件进行封装，上传至MQTT服务器，边缘侧文件存储系统从MQTT服务器进行订阅，将镜像保存至本地，边缘设备从边缘侧文件存储系统拉取最新的镜像部署至本地；优选的，步骤5中边缘层不间断的进行识别，具体实现过程如下：步骤5.1：提取电气数据：所述电力负荷采集设备将每秒对电路总线上的电气数据进行获取，数据由时间戳和有功功率组成；步骤5.2：边缘设备实时推理：电气数据上传到边缘设备，通过滑动窗口的方式从InfluxDB中进行不间断的提取，其中，滑动窗口的长度固定，步长为1，传入到电力负荷实时推理程序中不间断的进行识别；步骤5.3：返回识别结果：识别结果将实时推送到UI界面进行展示，供用户或电力公司工作人员查看。8.根据权利要求6所述的基于云边端协同的电力负荷智能识别方法，其特征在于，步骤3.2中，采用低频采样数据，且选取功率这一属性值作为模型训练的输入，输入序列为含有噪声和其他负荷的总有功功率序列：x0,x1,x2,...,xT，输出序列为目标负荷序列：y0,y1,y2,...,yT；使用非线性函数f去回归目标负荷序列：y0,y1,y2,...,yT＝f采用MSE作为损失函数，它是预测值f与目标值yi之间差值平方和的均值，其计算公式为：公式中，n表示样本个数，f和yi分别表示第i个样本的真实值和预测值；采用Adam优化器和自适应矩估计优化器进行训练，训练过程为：将输入序列输入到连续的一维卷积层，得到功率数据的分布式特征，将提取好的分布式功率特征放入定长的全连接层进行保存，通过激活函数ReLU将整合到样本空间的功率数据的分布式特征输出，得到分解后的功率序列，之后根据测试集的分解结果计算分解方法的评价指标；评价指标采用平均绝对误差、准确率、召回率、F1分数以及总功率的正确分配率PTE来评价分解效果，总功率的正确分配率计算公式为：上述公式中，是t时刻第i个电器的实际输出功率，/＞是t时刻第i个电器的预测输出功率，/＞是t时刻的实际总负荷功率。9.一种边缘计算设备，包括存储器和处理器，其特征在于，存储器存储有计算机程序，处理器执行计算机程序时实现权利要求4-8任一所述的基于云边端协同的电力负荷智能识别方法。
说明书desc
技术领域本发明提供一种基于云边端协同的电力负荷智能识别系统、方法及设备，属于人工智能技术领域，具体属于以边缘计算为基础，对电力负荷进行人工智能分解和识别、云边端架构模型训练的交叉领域。具体涉及到基于人工智能模型，以云边端架构为基础的居民用电非侵入式电力负荷识别系统及方法。背景技术人工智能已经广泛应用于电力负荷识别领域，电力负荷识别系统长期存在资源分配不均、部署成本过高、识别系统构建繁琐等问题。随着人工智能技术不断进步，人工智能在电力负荷识别领域逐渐得到应用，有利于帮助电力公司制定更加合理科学的用电计划和实时电价，有意识的避开用电高峰期，实现削峰填谷的作用，提高电能的利用率以及保证电力系统安全可靠和经济运行，同时用户也可以实时观察家中电器的用电情况，实现科学用电。目前我国电力负荷识别系统面临着资源分布不均、传统方法部署繁杂、准确率低等难题。人工智能电力负荷识别系统可有效节省电力公司的人力、时间和经济成本，实现科学用电配电。目前已有一些电力负荷识别系统，但在进行部署和使用时存在着一些不足：第一，系统架构不稳定，对边缘侧负荷识别的终端设备进行统一管理比较困难，安装成本高，很难进行大规模部署。第二，由于现在家用电器的更新迭代速度比较快，其电器参数也随之变化，对于识别终端中的模型更新速度慢且复杂，电力负荷识别准确度可能随之下降。发明内容针对现有技术的不足，本发明提供了一种基于云边端协同的电力负荷智能识别系统，以Kubeedge管理平台和EdgeX Foundry边缘计算开源平台为基础，提供了一个稳定的云边端架构，云计算集群有效管理电网中的边缘设备，支持大规模部署和集中管理。本发明还提供了一种基于云边端协同的负荷智能识别方法、计算机设备。术语解释：1、Kubernetes，Kubernetes是一个用于管理云平台中多个主机上的容器化的开源应用。它提供了应用部署，规划，更新，维护的一种机制，对容器化应用的管理更加简单高效。在Kubernetes中，基本调度单元称为“pod”，通过该种抽象类别可以把更高级别的抽象内容增加到容器化组件，一个Pod可以承载一个或者多个相关的容器，容器集为分组容器增加了一个抽象层，通过内置的负载均衡策略对这些容器进行管理。2、Kubeedge是能够将容器化应用程序编排功能扩展到Edge的主机的开源系统，它基于kubernetes构建，并为网络应用程序提供基础架构支持。云和边缘之间的部署和元数据同步。3、EdgeX Foundry是Linux基金会支持的边缘计算开源平台，该平台以微服务的形式管理多种物联网终端设备。同时，EdgeX Foundry可以通过所管理的微服务采集、过滤、存储和挖掘多种物联网终端设备的数据，也可以通过所管理的微服务向多种物联网终端设备下发指令来对终端设备进行控制。4、InfluxDB是一个开源的、高性能的时序型数据库，其拥有高性能读写和对数据的实时操作等特性，可以大大加快对实时数据的即时处理。5、Seq2Point基于序列到点的卷积神经网络，可以在进行预测时选择性地关注输入序列的不同部分，用于根据输入值序列预测单个输出值，在给定一系列输入值的情况下预测一系列输出值。本发明采用如下技术方案：一种基于云边端协同的电力负荷智能识别系统，包括云平台层、边缘层和终端层；所述云平台层包括云计算集群、数据库、云端文件存储系统以及MQTT服务器，所述云计算集群用于电力负荷识别模型的训练；所述云端文件存储系统用于存储电力负荷识别模型、数据集、镜像文件、电力负荷实时推理程序；所述数据库用于存储边缘设备ID号、文件存储的寻址目录；所述MQTT服务器作为云端与边缘端的文件传输的媒介，提供数据信息中专功能；所述边缘层为部署在配电侧的各种设备，包括边缘设备和边缘侧文件存储系统，所述边缘设备包括电力负荷识别模型、电力负荷实时推理程序，边缘设备用于处理电力负荷识别场景中获取边缘侧文件存储系统中终端层上传的实时监控数据，并通过电力负荷实时推理程序对监控数据进行实时识别，将识别完成的电器用电数据推送至用户；所述边缘侧文件存储系统用于存储历史和最新版本的电力负荷识别模型、电力负荷实时推理程序、终端传回的电力负荷数据及边缘设备的分解结果；所述边缘侧文件存储系统用于云平台层和边缘设备进行信息交互、接收存储终端设备上传的实时监控数据；所述终端层为电力负荷识别场景中具有数据采集功能的终端设备，包括电力负荷采集设备，将实时采集电路总线上的电气数据并通过无线网络传输到边缘层，以待检测。优选的，所述云计算集群部署开源的Kubeedge管理平台，边缘侧文件存储系统部署EdgeX Foundry边缘计算开源平台。优选的，所述云计算集群、数据库与云端文件存储系统处于同一局域网内，边缘设备与边缘侧文件存储系统处于同一局域网内；优选的，所述边缘设备为Nvidia Xavier Nx集成设备。一种基于云边端协同的电力负荷智能识别方法，基于上述的电力负荷智能识别系统实现，包括以下步骤：步骤1：云服务器连接边缘设备：云平台层通过安装部署Kubernetes和kubeedge生成边缘设备接入的token，边缘设备通过该token加入到云端；步骤2：终端设备连接边缘设备：在边缘设备上通过Yaml文件指定所属的终端设备，实现对终端设备数据的采集、挖掘以及对终端设备的控制；步骤3：电力负荷数据预处理和电力负荷识别模型训练；云计算集群对电力负荷数据预处理处理后，利用Seq2Point基于序列到点的神经网络对电力负荷识别模型进行训练，训练完成后对电力负荷实时推理程序进行编写，云计算集群将实时训练好的电力负荷识别模型和电力负荷实时推理程序存储到云端文件存储系统，将两者的路径存入数据库中对应表；对电力负荷实时推理程序进行编写的过程为：通过滑动窗口的方式从InfluxDB中进行不间断的提取，其中，滑动窗口的长度固定，步长为1，针对训练产生的电器模型，每次提取到的数据传递给多个电器模型进行同时分解，模型分解后输出多个电器分解结果。步骤4：生成镜像并下发：云计算集群将训练完成的电力负荷识别模型及电力负荷实时推理程序生成镜像，发送至MQTT服务器，提供给边缘层进行订阅；步骤5：边缘层进行电力负荷实时识别：边缘设备对MQTT服务器中的镜像进行拉取并部署，电力负荷采集设备将实时识别的数据上传至边缘侧文件存储系统中，边缘侧文件存储系统通过EdgeX Foundry对数据进行接收并保存至时序型数据库InfluxDB中，边缘设备通过提取InfluxDB中的数据传入电力负荷实时推理程序中不间断的进行识别，识别结果保存至边缘侧文件存储系统，并推送至UI界面对用户及电力系统工作人员进行实时展示；步骤6：边缘层数据上传：将边缘侧文件存储系统中存储的电力负荷识别结果以及终端设备上传的电气数据发送至MQTT服务器，云服务器对MQTT服务器中的数据通过订阅来进行获取。优选的，步骤2中终端设备连接边缘设备的具体实现过程如下：在边缘设备中部署完成EdgeX Foundry后，终端设备以http的方式来实现发送产生的数据到设备服务，根据传输的内容包括时间戳、有功功率来定义yaml文件中数据格式等信息，指定toml文件中的host为运行EdgeX服务的ip地址。优选的，步骤3中，电力负荷数据预处理和电力负荷识别模型训练，具体实现步骤如下：步骤3.1：数据预处理：云计算集群对电力负荷数据集中的数据进行预处理，主要流程包括：缺失值填充，实现对时间序列中空值、不完整数据进行有效的补充；异常数据清洗，检查存在的异常数据，例如噪声、错误、软硬件故障等造成的异常数据，防止该类数据对分类诊断结果的干扰；处理无效数据，分析各个参数数据的区间范围，对无效数据进行删除处理；步骤3.2：电力负荷识别模型训练：将数据集按照17：3的比例进行随机划分为训练集和测试集，训练集用于电力负荷识别模型的训练，测试集用于验证训练完成的模型，数据集在输入前进行归一化操作，即将原始数据映射到0到1范围内；然后输入到Seq2Point基于序列到点的神经网络对电力负荷识别模型进行训练，其中，训练模型的网络结构为四个卷积层、两个全连接层和两个随机失活层，最后根据测试集的分解结果与原始结果进行比对，输出模型的评估结果；步骤3.3：将训练生成的电力负荷识别模型存入云端的文件存储系统；优选的，步骤3.1中，电力负荷数据集的获取方式为：将电力负荷数据集从终端设备以http的方式发送至设备服务，边缘设备通过EdgeX Foundry进行接收之后，边缘设备将接收到的电力负荷数据进行归纳汇总，发送至MQTT服务器，等待云计算集群进行订阅和存储；优选的，步骤4中生成镜像并下发给边缘层，具体实现方式如下：步骤4.1：在云平台层训练得到一个分解精度较高的模型后，将训练完成的电力负荷识别模型及电力负荷实时推理程序生成Docker镜像；步骤4.2：在云平台层通过yaml文件创建一个development，development是kubernetes最常用的控制器，主要是用于部署无状态应用，通过development来管理pod；云服务器将步骤4.1创建好的镜像文件进行封装，上传至MQTT服务器，边缘侧文件存储系统从MQTT服务器进行订阅，将镜像保存至本地，边缘设备从边缘侧文件存储系统拉取最新的镜像部署至本地；优选的，步骤5中边缘层不间断的进行识别，具体实现过程如下：步骤5.1：提取电气数据：所述电力负荷采集设备将每秒对电路总线上的电气数据进行获取，数据由时间戳和有功功率组成；步骤5.2：边缘设备实时推理：电气数据上传到边缘设备，通过滑动窗口的方式从InfluxDB中进行不间断的提取，其中，滑动窗口的长度固定，步长为1，传入到电力负荷实时推理程序中不间断的进行识别；步骤5.3：返回识别结果：识别结果将实时推送到小程序或网页等UI界面进行展示，可供用户或电力公司相关工作人员查看。优选的，步骤3.2中，采用低频采样数据，且选取功率这一属性值作为模型训练的输入，输入序列为含有噪声和其他负荷的总有功功率序列：x0,x1,x2,,xT，输出序列为目标负荷序列：y0,y1,y2,,yT；使用非线性函数f去回归目标负荷序列：y0,y1,y2,,yT＝f 采用MSE作为损失函数，它是预测值f与目标值yi之间差值平方和的均值，其计算公式为：公式中，n表示样本个数，f和yi分别表示第i个样本的真实值和预测值；采用Adam优化器和自适应矩估计优化器进行训练，训练过程为：将输入序列输入到连续的一维卷积层，得到功率数据的分布式特征，将提取好的分布式功率特征放入定长的全连接层进行保存，通过激活函数ReLU将整合到样本空间的功率数据的分布式特征输出，得到分解后的功率序列，之后根据测试集的分解结果计算分解方法的评价指标；评价指标采用平均绝对误差、准确率、召回率、F1分数以及总功率的正确分配率PTE来评价分解效果，总功率的正确分配率计算公式为：上述公式中，是t时刻第i个电器的实际输出功率，/＞是t时刻第i个电器的预测输出功率，/＞是t时刻的实际总负荷功率。一种边缘计算设备，包括存储器和处理器，存储器存储有计算机程序，处理器执行计算机程序时实现上述的基于云边端协同的电力负荷智能识别方法。本发明未详尽之处，均可参见现有技术。本发明的有益效果为：1、系统化：本发明采用了成熟的Kubeedge管理平台管理边缘侧以及利用EdgeXFoundry进行边缘侧与终端的交互，具有较高的稳定性与灵活性。2、轻量化：本发明采用开源易部署的边缘计算平台，将其集成与体积小、能耗小的边缘设备中，易于大规模部署。3、实时性：本边缘设备具备较强的GPU算例，可以将每次识别时间控制在200-300ms，能够满足数据的实时处理及推送。4、易更新：对于不断迭代更新的电器，可以根据电器数据及时更新电力负荷识别模型，保证模型的识别能力和推理能力。附图说明构成本申请的一部分的说明书附图用来提供对本申请的进一步理解，本申请的示意性实施例及其说明用于解释本申请，并不构成对本申请的不当限定。图1为本发明基于云边端协同的电力负荷智能识别系统示意图；图2为云边端架构示意图；图3为电力负荷识别模型训练示意图；图4为电力负荷实时推理程序识别功率与真实值对比图；图5为边端交互示意图。具体实施方式：为了使本技术领域的人员更好的理解本说明书中的技术方案，下面结合本说明书实施中的附图，对本发明书实施例中的技术方案进行清楚、完整的描述，但不仅限于此，本发明未详尽说明的，均按本领域常规技术。实施例1一种基于云边端协同的电力负荷智能识别系统，如图1-2所示，包括云平台层、边缘层和终端层；云平台层包括云计算集群、数据库、云端文件存储系统以及MQTT服务器，云计算集群用于电力负荷识别模型的训练；云端文件存储系统用于存储电力负荷识别模型、数据集、镜像文件、电力负荷实时推理程序；数据库用于存储边缘设备ID号、文件存储的寻址目录；MQTT服务器作为云端与边缘端的文件传输的媒介，提供数据信息中专功能；边缘层为部署在配电侧的各种设备，包括边缘设备和边缘侧文件存储系统，边缘设备包括电力负荷识别模型、电力负荷实时推理程序，边缘设备用于处理电力负荷识别场景中获取边缘侧文件存储系统中终端层上传的实时监控数据，并通过电力负荷实时推理程序对监控数据进行实时识别，将识别完成的电器用电数据推送至用户；边缘侧文件存储系统用于存储历史和最新版本的电力负荷识别模型、电力负荷实时推理程序、终端传回的电力负荷数据及边缘设备的分解结果；边缘侧文件存储系统用于云平台层和边缘设备进行信息交互、接收存储终端设备上传的实时监控数据；终端层为电力负荷识别场景中具有数据采集功能的终端设备，包括电力负荷采集设备，将实时采集电路总线上的电气数据并通过无线网络传输到边缘层，以待检测。云计算集群部署开源的Kubeedge管理平台，边缘侧文件存储系统部署EdgeXFoundry边缘计算开源平台。云计算集群、数据库与云端文件存储系统处于同一局域网内，边缘设备与边缘侧文件存储系统处于同一局域网内；边缘设备为Nvidia Xavier Nx集成设备。实施例2一种基于云边端协同的电力负荷智能识别方法，本实施例为电力负荷识别，以Kubeedge管理平台为云端，边缘侧文件存储系统部署EdgeX Foundry边缘计算开源平台，边缘设备为边缘层，电力负荷采集设备为终端设备，实现电力负荷识别模型的训练、镜像下发和实时电力负荷识别，如图1和图2所示，具体包括以下步骤：步骤1：云服务器连接边缘设备：云平台层通过安装部署Kubernetes和kubeedge生成边缘设备接入的token，边缘设备通过该token加入到云端；步骤2：终端设备连接边缘设备：在边缘设备上通过Yaml文件指定所属的终端设备，实现对终端设备数据的采集、挖掘以及对终端设备的控制；具体实现过程如下：在边缘设备中部署完成EdgeX Foundry后，终端设备以http的方式来实现发送产生的数据到设备服务，根据传输的内容包括时间戳、有功功率来定义yaml文件中数据格式等信息，指定toml文件中的host为运行EdgeX服务的ip地址。步骤3：电力负荷数据预处理和电力负荷识别模型训练；云计算集群对电力负荷数据预处理处理后，利用Seq2Point基于序列到点的神经网络对电力负荷识别模型将总功率与具体电器数据输入网络中进行训练，训练生成单个电器的模型，训练完成后对电力负荷实时推理程序进行编写，云计算集群将实时训练好的电力负荷识别模型和电力负荷实时推理程序存储到云端文件存储系统，将两者的路径存入数据库中对应表；具体步骤如下：步骤3.1：数据预处理：云计算集群对电力负荷数据集中的数据进行预处理，主要流程包括：缺失值填充，实现对时间序列中空值、不完整数据进行有效的补充；异常数据清洗，检查存在的异常数据，例如噪声、错误、软硬件故障等造成的异常数据，防止该类数据对分类诊断结果的干扰；处理无效数据，分析各个参数数据的区间范围，对无效数据进行删除处理；步骤3.2：电力负荷识别模型训练：将数据集按照17：3的比例进行随机划分为训练集和测试集，训练集用于电力负荷识别模型的训练，测试集用于验证训练完成的模型，数据集在输入前进行归一化操作，即将原始数据映射到0到1范围内；然后输入到Seq2Point基于序列到点的神经网络对电力负荷识别模型进行训练，其中，训练模型的网络结构为四个卷积层、两个全连接层和两个随机失活层，随机失活层是在前向传播时从网络中去掉一部分隐藏层的神经元以防止过拟合，最后根据测试集的分解结果与原始结果进行比对，输出模型的评估结果；对训练集的电力负荷数据输入训练网络中，其中包括4次一维卷积、两个全连接层和两个随机失活层。其中，本算法采用低频采样数据，且选取功率这一属性值作为模型训练的输入，输入序列为含有噪声和其他负荷的总有功功率序列：x0,x1,x2,…,xT，输出序列为目标负荷序列：y0,y1,y2,…,yT；使用非线性函数f去回归目标负荷序列：y0,y1,y2,…,yT＝f 采用MSE作为损失函数，它是预测值f与目标值yi之间差值平方和的均值，其计算公式为：公式中，n表示样本个数，f和yi分别表示第i个样本的真实值和预测值；采用Adam优化器和自适应矩估计优化器进行训练，训练过程如图3所示，具体为：将输入序列输入到连续的一维卷积层，得到功率数据的分布式特征，将提取好的分布式功率特征放入定长的全连接层进行保存，通过激活函数ReLU将整合到样本空间的功率数据的分布式特征输出，得到分解后的功率序列，之后根据测试集的分解结果计算分解方法的评价指标；评价指标采用平均绝对误差、准确率、召回率、F1分数以及总功率的正确分配率PTE来评价分解效果，总功率的正确分配率计算公式为：上述公式中，是t时刻第i个电器的实际输出功率，/＞是t时刻第i个电器的预测输出功率，/＞是t时刻的实际总负荷功率。以电器空调为例，电力负荷识别功率结果与实际功率如图4所示，y轴表示功率，x轴为时间点，可见能够较好的拟合出实际功率；步骤3.3：将训练生成的电力负荷识别模型存入云端的文件存储系统；步骤4：生成镜像并下发：云计算集群将训练完成的电力负荷识别模型及电力负荷实时推理程序生成镜像，发送至MQTT服务器，提供给边缘层进行订阅；生成镜像并下发给边缘层的具体实现过程为：步骤4.1：在云平台层训练得到一个分解精度较高的模型后，将训练完成的电力负荷识别模型及电力负荷实时推理程序生成Docker镜像；步骤4.2：在云平台层通过yaml文件创建一个development，development是kubernetes最常用的控制器，主要是用于部署无状态应用，通过development来管理pod；云服务器将步骤4.1创建好的镜像文件进行封装，上传至MQTT服务器，边缘侧文件存储系统从MQTT服务器进行订阅，将镜像保存至本地，边缘设备从边缘侧文件存储系统拉取最新的镜像部署至本地。步骤5：边缘层进行电力负荷实时识别：边缘设备对MQTT服务器中的镜像进行拉取并部署，电力负荷采集设备将实时识别的数据上传至边缘侧文件存储系统中，如图5所示，边缘侧文件存储系统通过EdgeX Foundry对数据进行接收并保存至时序型数据库InfluxDB中，边缘设备通过提取InfluxDB中的数据传入电力负荷实时推理程序中不间断的进行识别，识别结果保存至边缘侧文件存储系统，并推送至UI界面对用户及电力系统工作人员进行实时展示。具体实现过程如下：步骤5.1：提取电气数据：电力负荷采集设备将每秒对电路总线上的电气数据进行获取，数据由时间戳和有功功率组成；步骤5.2：边缘设备实时推理：电气数据上传到边缘设备，通过滑动窗口的方式从InfluxDB中进行不间断的提取，其中，滑动窗口的长度固定，步长为1，传入到电力负荷实时推理程序中不间断的进行识别；步骤5.3：返回识别结果：识别结果将实时推送到小程序或网页等UI界面进行展示，可供用户或电力公司相关工作人员查看。步骤6：边缘层数据上传：将边缘侧文件存储系统中存储的电力负荷识别结果以及终端设备上传的电气数据发送至MQTT服务器，云服务器对MQTT服务器中的数据通过订阅来进行获取。以上所述是本发明的优选实施方式，应当指出，对于本技术领域的普通技术人员来说，在不脱离本发明所述原理的前提下，还可以作出若干改进和润饰，这些改进和润饰也应视为本发明的保护范围。
