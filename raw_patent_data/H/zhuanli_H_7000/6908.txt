标题title
基于长度损失最小的矢量数据压缩方法
摘要abst
本发明提供一种基于长度损失最小的矢量数据压缩方法，涉及数据处理技术领域。本发明基于矢量数据压缩的需求，提供了一种新的基于长度损失最小的矢量数据压缩方法，解决了现有方法中的弊端。与间隔取点法相比，本方法压缩后的矢量数据长度变化更小，尽可能的保持了矢量数据的形态。与Douglas‑Peucker算法相比，本方法的压缩速度快，压缩效率大大提高。因此，本方法兼具长度损失小、压缩速度快的特点，适用于矢量数据的精准压缩。
权利要求书clms
1.一种基于长度损失最小的矢量数据压缩方法，其特征在于，按照以下步骤进行：S1、获取矢量数据和压缩率；S2、确定矢量数据中的节点个数；S3、根据节点个数和压缩率计算预计删除点数；S4、计算矢量数据中除两个端点之外各个节点的两条邻边长度之和与该节点相邻两点间距离的差值，形成距离差数组；S5、当节点个数大于二且预计删除点数大于零时，确定距离差数组中的最小差值；S6、获取最小差值对应的节点作为删除节点，将删除节点从矢量数据中删除，节点个数和预计删除点数分别减一，重新计算距离差数组后返回至S5，直至预计删除点数等于零或节点个数等于二，得到压缩矢量数据。2.根据权利要求1所述的基于长度损失最小的矢量数据压缩方法，其特征在于，S3中使用delnum函数计算预计删除点数。3.根据权利要求1所述的基于长度损失最小的矢量数据压缩方法，其特征在于，S6中重新计算距离差数组的具体步骤包括：重新计算最小差值以及与最小差值相邻的两个差值的数值。4.根据权利要求1所述的基于长度损失最小的矢量数据压缩方法，其特征在于，S4中的长度和距离均为欧式距离。
说明书desc
技术领域本发明涉及数据处理技术领域，尤其涉及一种基于长度损失最小的矢量数据压缩方法。背景技术矢量数据压缩在地理仿真、地图数据库建设及地理信息研究中都具有重要意义，是矢量数据处理的一种关键技术。目前存在多种矢量数据压缩方法，包括间隔取点法、离散余弦变换法、道格拉斯-普克算法等。其中，间隔取点法是以压缩率为标准，对于给定的压缩率，按照等间隔删除点，达到要求，该方法速度最快，但对矢量数据形态的影响大，目前使用较少。离散余弦变换法计算复杂，不直观，并且会改变原始矢量中数据点的位置，目前只用于研究，并未实用。Douglas-Peucker算法是一种经典的矢量数据压缩方法，并非直接以长度损失或压缩率为标准，而是以保持矢量数据形态变化最小为标准进行数据的压缩，在矢量数据压缩完成之前无法计算精确的压缩率，同时在计算中需要递归方法，以确定矢量数据中点的保留，效率较低。发明内容有鉴于此，本发明的目的在于提出一种基于长度损失最小的矢量数据压缩方法，以解决上述问题。基于上述目的，本发明提供了一种基于长度损失最小的矢量数据压缩方法，按照以下步骤进行：S1、获取矢量数据和压缩率；S2、确定矢量数据中的节点个数；S3、根据节点个数和压缩率计算预计删除点数；S4、计算矢量数据中除两个端点之外各个节点的两条邻边长度之和与该节点相邻两点间距离的差值，形成距离差数组；S5、当节点个数大于二且预计删除点数大于零时，确定距离差数组中的最小差值；S6、获取最小差值对应的节点作为删除节点，将删除节点从矢量数据中删除，节点个数和预计删除点数分别减一，重新计算距离差数组后返回至S5，直至预计删除点数等于零或节点个数等于二，得到压缩矢量数据。与现有技术相比，本发明的有益效果在于：本发明提供了一种新的基于长度损失最小的矢量数据压缩方法，解决了现有方法中的弊端。与间隔取点法相比，本方法压缩后的矢量数据长度变化更小，尽可能的保持了矢量数据的形态。与Douglas-Peucker算法相比，本方法的压缩速度快，压缩效率大大提高。因此，本方法兼具长度损失小、压缩速度快的特点，适用于大量数据的精准压缩。进一步地，S3中使用delnum函数计算预计删除点数。进一步地，S6中重新计算距离差数组的具体步骤包括：重新计算最小差值以及与最小差值相邻的两个差值的数值。进一步地，S4中的长度和距离均为欧式距离。附图说明图1为矢量数据示意图；图2为矢量数据压缩示意图；图3为删除节点对矢量数据长度的影响示意图；图4为本发明实施例提供的基于长度损失最小的矢量数据压缩方法的不同压缩方法效果局部放大对比图。具体实施方式为使本发明的目的、技术方案和优点更加清楚明白，以下结合具体实施例，对本发明进一步详细说明。如图1所示，矢量数据是由一串节点按序连接构成的，可以表示为：V=。其中，pi为构成矢量数据V的第i个节点，，n为构成矢量数据的节点数目，为了下文便于讨论，同时定义|V|=n。如图2所示，矢量数据的压缩就是从矢量数据V中，选出包括矢量数据V两端点的一个子序列V’,其中p1,pn，那么就是矢量数据V经过压缩的结果。对于矢量数据V的压缩，易知总共有种可能的压缩结果。对于压缩的程度可以使用压缩率进行表示，其定义为：，其中|V|表示矢量数据V的节点数，表示压缩结果的节点数。对于2n-2指数级的压缩结果数量来说，就需要按照一定的标准从中选择出较好的压缩结果，这是一种NP困难问题，通过遍历所有可能结果是不现实的。即使在给定的压缩率下，也有种压缩结果，其中，从中挑选出最优的压缩结果，也并是一件简单的事。对于矢量数据V，其长度是Len。已知两个事实：1、删除其中非端点的任意节点都会使V的长度缩短或不变，如图3所示；2、矢量数据上某一节点的张角越大，或者说越靠近相邻节点所构成的直线，则删除该节点对矢量数据长度缩减的影响就越小。假设矢量数据V=，现以节点C为例对第一个事实进行说明。当节点C与相邻节点B，D构成三角形时，有|BC|+|CD|＞|BD|，所以去除节点C后，得到新矢量数据，其长度小于原矢量数据V的长度。当B，C，D三个节点共线时，位于中间的C是冗余的，删除其不会改变矢量数据的长度。因此，删除矢量数据V中非端点的任意节点都会使V的长度缩短或不变。再以节点C和F为例对第二个事实进行说明，由于∠BCD＞∠EFG，通过余弦定理可以计算得到，|BC|+|CD|-|BD|＜|EF|+|FG|-|EG|，也就是说删除点C对矢量数据V的长度的影响较点F小，所以在删除二者之一时应删除节点C为宜。因此，矢量数据上某一节点的张角越大，或者说越靠近相邻节点所构成的直线，则删除该节点对矢量数据长度缩减的影响就越小。基于以上事实，本发明提出的一种基于长度损失最小的矢量数据压缩方法，按照以下步骤进行：S1、获取矢量数据V=和压缩率α，压缩率根据使用需求进行设定。S2、确定矢量数据中的节点个数，即n。S3、根据节点个数和压缩率，使用delnum函数计算预计删除点数，delnum=int。S4、计算矢量数据中除两个端点之外各个节点的两条邻边长度之和与该节点相邻两点间距离的差值，形成距离差数组。具体计算过程如下：初始化数组dlist，ilist，ddlist；dlist=，为两点间的欧式距离；ilist= ，为两点间的欧式距离；ddlist=+dlist-ilist,dlist+dlist-ilist,……,dlist+dlist-ilist,……,dlist+dlist-ilist]，ddlist即为距离差数组。S5、当节点个数大于二且预计删除点数大于零时，确定距离差数组中的最小差值。S6、获取最小差值对应的节点作为删除节点，将删除节点从矢量数据中删除，节点个数和预计删除点数分别减一。重新计算距离差数组后返回至S5，直至预计删除点数等于零或节点个数等于二，得到压缩矢量数据。对于S6中的重新计算距离差数组，一种方法是按照S4的步骤重新计算所有数据。另一种方法是重新计算最小差值以及与最小差值相邻的两个差值的数值，其余数据不变，该方法的运算速度更快，进一步提高了压缩速度。使用一台CoreM i5处理器，8G内存，windows10x64系统，使用开源的地理信息系统软件QGIS做为实验平台，使用嵌入软件内部的Python编程语言实现本方法，并对结果可视化。实验的数据采用了随机生成指定节点数量的矢量数据的方法。为了便于与其他矢量数据压缩方法比较，在相同的运行环境下，分别使用间隔取点法和Douglas-Peucker法进行数据压缩。表1 在压缩率α=25%时，不同方法的用时表1展示了在25%的压缩率下，三种方法在不同矢量数据规模下的运行速度。可以看出，间隔取点法运行时间最短，本发明提出的长度损失最小方法较Douglas-Peucker法压缩速度快，在矢量数据规模较大的情况下，节点数等于30000时仍然能够比Douglas-Peucker法快近40%。对于矢量数据压缩，要保证形态变化尽可能小的情况下，使用尽可能少的数据存储。实际上，对于矢量数据V，其长度在压缩前后长度的变化是度量其形态变化的重要指标，压缩前后长度变化越小则效果越好，因此选择矢量数据压缩前后长度变化量的大小作为评价压缩优劣的标准是合理的。这种保持矢量数据V形态变化最小的标准，可以用下面的公式进行表示：，其中，n为矢量数据V的节点数，为相邻两点间的欧式距离； ，Len表示矢量数据V的长度，d表示相邻节点i和i+1间的距离，Loss是压缩前后长度的缩短量。表2 在压缩率α=25%时，压缩后长度与原长度比率矢量数据节点数间隔取点法Douglas-Peucker法长度损失最小法500.7830.9750.9805000.7580.9780.98650000.7970.9760.984300000.7880.9770.984表2显示了在25%的压缩率下，压缩后的长度与压缩前的长度之比。其中，间隔取点法的长度减小最大，Douglas-Peucker法和本方法接近，但本方法仍然略优。综合表1和表2可以看出，本方法在压缩时间上和长度损失上均较其他两种方法具有优势。虽然间隔取点法速度快，但压缩前后变形较大，Douglas-Peucker虽然长度变化接近，但时计算较为耗时。表3 不同压缩率下，压缩后长度与原长度比率压缩率间隔取点法Douglas-Peucker法长度损失最小法10%0.9100.9990.99920%0.8330.9910.99230%0.7190.9740.97840%0.6360.9600.97250%0.5820.9070.926表3显示了矢量数据节点数在5000时，不同压缩率下，压缩后矢量数据的长度和原始数据长度的比率。可以看出，间隔取点法效果最差，压缩后的长度的减少量基本与压缩率成正比。Douglas-Peucker法与本方法相比在不同压缩率下结果接近，但略差于本文方法。并且由图4可知，间隔取点法压缩后的结果变形较大，多处数据与原始数据偏离较大。Douglas-Peucker法和本方法在压缩后形态接近，但是本方法在数据变化剧烈处保持较好。因此，本方法兼具长度损失小、压缩速度快的特点，适用于大量数据的精准压缩。本发明的实施例旨在涵盖落入所附权利要求的宽泛范围之内的所有这样的替换、修改和变型。因此，凡在本发明的精神和原则之内，所做的任何省略、修改、等同替换、改进等，均应包含在本发明的保护范围之内。
