标题title
基于物联网网闸的数据传输系统、方法、设备及存储介质
摘要abst
本发明公开了一种基于物联网网闸的数据传输系统、方法、设备及存储介质，系统包括：外网端接收物联网设备发送的原始数据包，并对原始数据包进行过滤处理，获得待处理数据包；外网端通过FPGA模块对待处理数据包进行解析，获得二元数据负载；外网端根据当前发包速率和发送队列状态确定网络状态；外网端基于网络状态对二元数据负载进行封装处理，获得私有协议数据包，并将网络状态标记至私有协议数据包；外网端将标记后的私有协议数据包存储至FPGA模块对应的发送队列中，按照数据发送规则将发送队列中标记后的私有协议数据包单向传输至内网端。本发明使用私有协议将处理后的数据从非密外网传输到涉密内网，保证了数据的安全性和保密性。
权利要求书clms
1.一种基于物联网网闸的数据传输系统，其特征在于，所述基于物联网网闸的数据传输系统包括外网端和内网端：所述外网端，用于接收物联网设备发送的原始数据包，并对所述原始数据包进行过滤处理，获得待处理数据包；所述外网端，还用于通过FPGA模块对所述待处理数据包进行解析，获得二元数据负载，所述二元数据负载包括状态负载和业务负载；所述外网端，还用于根据当前发包速率和发送队列状态确定网络状态，所述网络状态包括空闲状态、正常状态及拥塞状态；所述外网端，还用于基于所述网络状态对所述二元数据负载进行封装处理，获得私有协议数据包，并将所述网络状态标记至所述私有协议数据包；所述外网端，还用于将标记后的私有协议数据包存储至所述FPGA模块对应的发送队列中，按照数据发送规则将所述发送队列中所述标记后的私有协议数据包单向传输至所述内网端。2.如权利要求1所述的系统，其特征在于，所述外网端，还用于在当前发包速率小于预设空闲阈值，且发送队列状态为未满状态时，确定网络状态为空闲状态；所述外网端，还用于通过所述FPGA模块对所述二元数据负载进行私有协议封装，获得私有协议数据包。3.如权利要求1所述的系统，其特征在于，所述外网端，还用于在当前发包速率大于预设空闲阈值，且发送队列状态为未满状态时，确定网络状态为正常状态；所述外网端，还用于通过FPGA模块对所述二元数据负载进行编码处理，获得编码数据负载；所述外网端，还用于对所述编码数据负载进行私有协议封装，获得私有协议数据包。4.如权利要求1所述系统，其特征在于，所述外网端，还用于在当前发包速率大于预设拥塞阈值，且发送队列状态为已满状态时，确定网络状态为拥塞状态；所述外网端，还用于通过所述FPGA模块对所述二元数据负载进行编码处理，获得编码数据负载，并将所述编码数据负载冗余传输至所述内网端；所述外网端，还用于对所述编码数据负载进行私有协议封装，获得封装私有协议数据包。5.如权利要求1-4任一项所述的系统，其特征在于，所述内网端，用于对所述标记后的私有协议数据包进行解封处理，获得所述私有协议数据包和网络发送状态；所述内网端，还用于在所述网络发送状态为所述空闲状态时，从所述私有协议数据包中提取所述二元数据负载，并将所述二元数据负载重新解封装为设备状态信息和业务数据；所述内网端，还用于将所述设备状态信息发送至网络管理中心，以使所述网络管理中心根据所述设备状态信息对所述物联网设备进行监护；所述内网端，还用于通过TCP/IP协议栈对所述业务数据进行封装处理，获得TCP/IP协议数据，并将所述TCP/IP协议数据发送至目标终端。6.如权利要求5所述的系统，其特征在于，所述内网端，还用于在所述网络状态为所述正常状态时，通过所述FPGA模块根据所述私有协议数据包确定所述编码数据负载；所述内网端，还用于对所述编码数据负载进行译码处理，获得解交织数据负载；所述内网端，还用于通过RS并行译码器根据所述解交织数据负载确定译码负载；所述内网端，还用于将所述译码负载进行重新解封装，获得设备状态信息和业务数据。7.如权利要求6所述的系统，其特征在于，所述内网端，还用于在所述网络状态为所述拥塞状态时，获取序列号相同的冗余数据包，并分别计算所述冗余数据包对应的CRC校验和与所述私有协议数据包对应的CRC校验和；所述内网端，还用于判断所述冗余数据包对应的CRC校验和与所述私有协议数据包对应的CRC校验和是否与发端校验和一致；所述内网端，还用于若不一致，则通过所述FPGA模块根据所述私有协议数据包确定所述编码数据负载。8.一种基于物联网网闸的数据传输方法，其特征在于，所述基于物联网网闸的数据传输方法包括以下步骤：接收物联网设备发送的原始数据包，对所述原始数据包进行过滤处理，获得待处理数据包；通过FPGA模块对所述待处理数据包进行解析，获得二元数据负载，所述二元数据负载包括状态负载和业务负载；根据当前发包速率和发送队列状态确定网络状态，所述网络状态包括空闲状态、正常状态及拥塞状态；基于所述网络状态对所述二元数据负载进行封装处理，获得私有协议数据包，并将所述网络状态标记至所述私有协议数据包；将标记后的私有协议数据包存储至所述FPGA模块对应的发送队列中，按照数据发送规则将所述发送队列中所述标记后的私有协议数据包单向传输至内网端。9.一种基于物联网网闸的数据传输设备，其特征在于，所述设备包括：存储器、处理器及存储在所述存储器上并可在所述处理器上运行的基于物联网网闸的数据传输程序，所述基于物联网网闸的数据传输程序配置为实现如权利要求1至7中任一项所述的基于物联网网闸的数据传输方法的步骤。10.一种存储介质，其特征在于，所述存储介质上存储有基于物联网网闸的数据传输程序，所述基于物联网网闸的数据传输程序被处理器执行时实现如权利要求1至7任一项所述的基于物联网网闸的数据传输方法的步骤。
说明书desc
技术领域本发明涉及数据传输技术领域，尤其涉及一种基于物联网网闸的数据传输系统、方法、设备及存储介质。背景技术随着物联网技术和无线通信等技术的迅猛发展，各式各样的物联网设备如雨后春笋般涌现，这些智能设备被广泛应用于工业自动化，智慧农业，健康医疗，智能生活等领域。然而，随着物联网设备数量的快速增长，网络环境也日益复杂，木马、病毒程序伪装成物联网设备进行窃密，破坏等恶意活动，造成了严重的网络安全隐患，如何有效的识别和管理这些物联网设备成了物联网安全研究的重要内容。传统的网络安全防护措施如防火墙，虚拟专用网络，防病毒网关等虽然从某种程度上提高了网络安全防护能力，却不能完全杜绝网络威胁。这对有着高安全要求的企业或涉密单位来说是绝不允许的。在这样的环境下，物联网网闸扮演了重要的角色，它是一种基于单向传输技术的新型网络设备，既能支持将外网各种设备的工作，采集，运行状态等信息传递到涉密内网，又能防止内网涉密信息流向工业外网，同时基于流量分析技术，拦截恶意流量并识别设备编号，状态等信息，将信息单向传输至网络管理中心，实现对海量物联网设备的管理，在各种网络安全解决方案中得到了广泛的应用。虽然单向数据传输技术能够满足工业外网与涉密内网间设备安全通信，但却带来了新的问题。基于单向传输的特性，数据只能由非涉密的工业外网发送到涉密内网，数据的接收端无法发送反馈信息，发送端也就无法知道网络延时以及数据包的丢包情况。在这样的条件下，TCP协议以及滑动窗口协议都无法实现，通信双方都不知道对方的网络状态，当网络环境较差时，发送端发送的数据可能会出现错误甚至没有传输到接收端。接收端收到数据后得到的可能是完全错误的信息，却又无法通知发送方，极大地降低了通信效率。因此，如何实现单向数据传输的可靠性是一个亟需解决问题。上述内容仅用于辅助理解本发明的技术方案，并不代表承认上述内容是现有技术。发明内容本发明的主要目的在于提供了一种基于物联网网闸的数据传输系统、方法、设备及存储介质，旨在解决如何实现单向数据传输的可靠性的问题的技术问题。为实现上述目的，本发明提供了一种基于物联网网闸的数据传输系统，所述基于物联网网闸的数据传输系统包括外网端和内网端：所述外网端，用于接收物联网设备发送的原始数据包，并对所述原始数据包进行过滤处理，获得待处理数据包；所述外网端，还用于通过FPGA模块对所述待处理数据包进行解析，获得二元数据负载，所述二元数据负载包括状态负载和业务负载；所述外网端，还用于根据当前发包速率和发送队列状态确定网络状态，所述网络状态包括空闲状态、正常状态及拥塞状态；所述外网端，还用于基于所述网络状态对所述二元数据负载进行封装处理，获得私有协议数据包，并将所述网络状态标记至所述私有协议数据包；所述外网端，还用于将标记后的私有协议数据包存储至所述FPGA模块对应的发送队列中，按照数据发送规则将所述发送队列中所述标记后的私有协议数据包单向传输至所述内网端。可选地，所述外网端，还用于在当前发包速率小于预设空闲阈值，且发送队列状态为未满状态时，确定网络状态为空闲状态；所述外网端，还用于通过所述FPGA模块对所述二元数据负载进行私有协议封装，获得私有协议数据包。可选地，所述外网端，还用于在当前发包速率大于预设空闲阈值，且发送队列状态为未满状态时，确定网络状态为正常状态；所述外网端，还用于通过FPGA模块对所述二元数据负载进行编码处理，获得编码数据负载；所述外网端，还用于对所述编码数据负载进行私有协议封装，获得私有协议数据包。可选地，所述外网端，还用于在当前发包速率大于预设拥塞阈值，且发送队列状态为已满状态时，确定网络状态为拥塞状态；所述外网端，还用于通过所述FPGA模块对所述二元数据负载进行编码处理，获得编码数据负载，并将所述编码数据负载冗余传输至所述内网端；所述外网端，还用于对所述编码数据负载进行私有协议封装，获得封装私有协议数据包。可选地，所述内网端，用于对所述标记后的私有协议数据包进行解封处理，获得所述私有协议数据包和网络发送状态；所述内网端，还用于在所述网络发送状态为所述空闲状态时，从所述私有协议数据包中提取所述二元数据负载，并将所述二元数据负载重新解封装为设备状态信息和业务数据；所述内网端，还用于将所述设备状态信息发送至网络管理中心，以使所述网络管理中心根据所述设备状态信息对所述物联网设备进行监护；所述内网端，还用于通过TCP/IP协议栈对所述业务数据进行封装处理，获得TCP/IP协议数据，并将所述TCP/IP协议数据发送至目标终端。可选地，所述内网端，还用于在所述网络状态为所述正常状态时，通过所述FPGA模块根据所述私有协议数据包确定所述编码数据负载；所述内网端，还用于对所述编码数据负载进行译码处理，获得解交织数据负载；所述内网端，还用于通过RS并行译码器根据所述解交织数据负载确定译码负载；所述内网端，还用于将所述译码负载进行重新解封装，获得设备状态信息和业务数据。可选地，所述内网端，还用于在所述网络状态为所述拥塞状态时，获取序列号相同的冗余数据包，并分别计算所述冗余数据包对应的CRC校验和与所述私有协议数据包对应的CRC校验和；所述内网端，还用于判断所述冗余数据包对应的CRC校验和与所述私有协议数据包对应的CRC校验和是否与发端校验和一致；所述内网端，还用于若不一致，则通过所述FPGA模块根据所述私有协议数据包确定所述编码数据负载。此外，为实现上述目的，本发明还提出一种基于物联网网闸的数据传输方法，所述基于物联网网闸的数据传输方法包括以下步骤：接收物联网设备发送的原始数据包，对所述原始数据包进行过滤处理，获得待处理数据包；通过FPGA模块对所述待处理数据包进行解析，获得二元数据负载，所述二元数据负载包括状态负载和业务负载；根据当前发包速率和发送队列状态确定网络状态，所述网络状态包括空闲状态、正常状态及拥塞状态；基于所述网络状态对所述二元数据负载进行封装处理，获得私有协议数据包，并将所述网络状态标记至所述私有协议数据包；将标记后的私有协议数据包存储至所述FPGA模块对应的发送队列中，按照数据发送规则将所述发送队列中所述标记后的私有协议数据包单向传输至内网端。此外，为实现上述目的，本发明还提出一种基于物联网网闸的数据传输设备，所述设备包括：存储器、处理器及存储在所述存储器上并可在所述处理器上运行的基于物联网网闸的数据传输程序，所述基于物联网网闸的数据传输程序配置为实现如上文所述的基于物联网网闸的数据传输方法的步骤。此外，为实现上述目的，本发明还提出一种存储介质，所述存储介质上存储有基于物联网网闸的数据传输程序，所述基于物联网网闸的数据传输程序被处理器执行时实现如上文所述的基于物联网网闸的数据传输方法的步骤。本发明基于物联网网闸的数据传输系统包括外网端和内网端，首先外网端接收物联网设备发送的原始数据包，并对原始数据包进行过滤处理，获得待处理数据包，通过FPGA模块对待处理数据包进行解析，获得二元数据负载，二元数据负载包括状态负载和业务负载，外网端根据当前发包速率和发送队列状态确定网络状态，网络状态包括空闲状态、正常状态及拥塞状态，然后外网端基于网络状态对二元数据负载进行封装处理，获得私有协议数据包，并将网络状态标记至私有协议数据包，最后外网端将标记后的私有协议数据包存储至FPGA模块对应的发送队列中，按照数据发送规则将发送队列中标记后的私有协议数据包单向传输至内网端。相较于现有技术中单模或多模冗余、软件纠错码和控制发送速率等方法能够在一定程度上提高单向传输的可靠性，但或多或少都存在成本高、速度慢、通信效率低等弊端，而本发明基于工业物联网网闸结合FPGA硬件资源，给出了FPGA在不同发送速率和发送队列状态下的单向数据传输策略，使用私有协议将处理后的数据从非密外网传输到涉密内网，实现了单向数据传输的可靠性，保证了数据的安全性和保密性。附图说明图1是本发明实施例方案涉及的硬件运行环境的基于物联网网闸的数据传输设备的结构示意图；图2为本发明基于物联网网闸的数据传输系统第一实施例的结构框图；图3为本发明基于物联网网闸的数据传输系统第一实施例的单向数据传输系统图；图4为本发明基于物联网网闸的数据传输系统第一实施例的外网端流程图；图5为本发明基于物联网网闸的数据传输系统第一实施例的设备状态信息格式图；图6为本发明基于物联网网闸的数据传输系统第一实施例的RS并行编码器结构图；图7为本发明基于物联网网闸的数据传输系统第一实施例的编码流程示意图；图8为本发明基于物联网网闸的数据传输系统第一实施例的私有协议格式图；图9为本发明基于物联网网闸的数据传输系统第一实施例的内网端流程图；图10为本发明基于物联网网闸的数据传输系统第一实施例的译码流程示意图；图11为本发明基于物联网网闸的数据传输方法第一实施例的流程示意图。本发明目的的实现、功能特点及优点将结合实施例，参照附图做进一步说明。具体实施方式应当理解，此处所描述的具体实施例仅用以解释本发明，并不用于限定本发明。参照图1，图1为本发明实施例方案涉及的硬件运行环境的基于物联网网闸的数据传输设备结构示意图。如图1所示，该基于物联网网闸的数据传输设备可以包括：处理器1001，例如中央处理器，通信总线1002、用户接口1003，网络接口1004，存储器1005。其中，通信总线1002用于实现这些组件之间的连接通信。用户接口1003可以包括显示屏、输入单元比如键盘，可选用户接口1003还可以包括标准的有线接口、无线接口。网络接口1004可选的可以包括标准的有线接口、无线接口接口）。存储器1005可以是高速的随机存取存储器，也可以是稳定的非易失性存储器，例如磁盘存储器。存储器1005可选的还可以是独立于前述处理器1001的存储系统。本领域技术人员可以理解，图1中示出的结构并不构成对基于物联网网闸的数据传输设备的限定，可以包括比图示更多或更少的部件，或者组合某些部件，或者不同的部件布置。如图1所示，作为一种存储介质的存储器1005中可以包括操作系统、网络通信模块、用户接口模块以及基于物联网网闸的数据传输程序。在图1所示的基于物联网网闸的数据传输设备中，网络接口1004主要用于与网络服务器进行数据通信；用户接口1003主要用于与用户进行数据交互；本发明基于物联网网闸的数据传输设备中的处理器1001、存储器1005可以设置在基于物联网网闸的数据传输设备中，所述基于物联网网闸的数据传输设备通过处理器1001调用存储器1005中存储的基于物联网网闸的数据传输程序，并执行本发明实施例提供的基于物联网网闸的数据传输方法。本发明实施例提供了一种基于物联网网闸的数据传输方法，参照图2，图2为本发明基于物联网网闸的数据传输系统第一实施例的结构框图。本实施例中，所述基于物联网网闸的数据传输系统包括基于物联网网闸的数据传输系统包括外网端2001和内网端2002：需要说明的是，参考图3，图3为本发明基于物联网网闸的数据传输系统第一实施例的单向数据传输系统图，外网端收到外网设备数据后将进行过滤、处理，记录设备编号、运行状态信息，将过滤后的数据包发送给FPGA进行处理，FPGA计算发送端的发送速率并监控发送队列，基于发送速率和发送队列的状态将整个系统可能存在的网络状态划分为“空闲状态”，“正常状态”和“拥塞状态”。对存在于不同网络状态下的数据包进行标记并执行相应的策略。在空闲状态下，网络情况良好，基本不会出现误码的情况，默认不进行额外处理。在正常状态下，数据传输效率较高，可能会出现少量误码或丢包的情况，此时利用FPGA硬件资源对业务数据和设备信息进行“二元输入的交织编码和RS编码”。在拥塞状态下，误码和丢包的概率增大，不仅要对业务数据和设备信息进行“二元输入编码”，还需要对编码数据进行重复传输。接着对处理完后的数据进行私有协议封装，通过单向传输到内网端，内网FPGA收到数据后进行解封装，再执行相应的策略，最后根据五元组信息将数据传递给不同目的终端。整个单向数据传输系统策略灵活多变，在兼顾效率的同时又兼顾了传输的可靠性。所述外网端2001，用于接收物联网设备发送的原始数据包，并对所述原始数据包进行过滤处理，获得待处理数据包。还应理解的是，将网闸处理过的物联网设备数据划分为两类：业务数据和状态数据。其中，业务数据用于设备采集和识别的工作数据，包含了设备所需的实际操作信息。而状态数据则包含了设备编号、运行状态等信息，主要用于对设备进行管理和监控，并将其统称为二元数据。在本实施例中，参考图4，图4为本发明基于物联网网闸的数据传输系统第一实施例的外网端流程图，外网端收到物联网设备数据包后，先查询ACL访问控制列表对数据流进行过滤，除去非可信的网络流量，将过滤后的可信数据包作为待处理数据包。所述外网端2001，还用于通过FPGA模块对所述待处理数据包进行解析，获得二元数据负载，所述二元数据负载包括状态负载和业务负载。在具体实现中，将过滤后的数据包交由FPGA模块进行解析，记录数据包的序列号，长度，五元组等基本信息，剥离业务负载部分，再将设备编号，运行状态，设备事件等组装成状态负载，将状态负载和业务负载合并记为二元数据负载。还应理解的是，在过滤掉不符合要求的数据包后利用FPGA模块对成功通过的数据包进行协议解析，记录数据包长度，五元组等相关信息，提取业务数据负载，将设备编号，运行状态，设备事件等组装设备状态信息，参考图5，图5为本发明基于物联网网闸的数据传输系统第一实施例的设备状态信息格式图。还需要说明的是，FPGA模块对可信数据包进行协议剥离，提取设备编号，运行状态，活动事件等信息，并组装物联网设备状态负载，并与业务数据负载组装成二元数据负载，记录数据包的五元组，数据长度等信息。所述外网端2001，还用于根据当前发包速率和发送队列状态确定网络状态，所述网络状态包括空闲状态、正常状态及拥塞状态。进一步地，外网端在当前发包速率小于预设空闲阈值，且发送队列状态为未满状态时，确定网络状态为空闲状态；外网端在当前发包速率大于预设空闲阈值，且发送队列状态为未满状态时，确定网络状态为正常状态；外网端在当前发包速率大于预设拥塞阈值，且发送队列状态为已满状态时，确定网络状态为拥塞状态。设置FPGA模块发送队列，将发送队列的大小记为N。以同样硬件条件下双向数据传输的线速LV作为基准，定义两种速度传输阈值，分别为空闲阈值SV和拥塞阈值CV，0＜SV＜CV＜LV。“空闲状态”，“正常状态”，“拥塞状态”三种网络状态分别记为SP状态，NM状态和CG状态。所述外网端2001，还用于基于所述网络状态对所述二元数据负载进行封装处理，获得私有协议数据包，并将所述网络状态标记至所述私有协议数据包。需要说明的是，FPGA模块计算发送方的发送速率，查看发送队列的实时状态，根据发送速率的大小和发送队列的状态可将网络状态划分为“空闲状态”，“正常状态”和“拥塞状态”。在这三种网络状态下FPGA模块分别对二元数据负载执行“不进行处理”，“RS编码和交织编码”，“编码并冗余传输”三种策略。还需要说明的是，基于不同的发送速率和发送队列情况将网络状态划分为空闲状态，正常状态和拥塞状态。在不同的网络状态下分别执行不同的单向可靠传输策略，既兼顾了效率又兼顾了传输的可靠性，在各种网络环境中都有较好的表现。在具体实现中，发送速率小于空闲阈值且发送队列未满，网络为空闲状态，FPGA模块对数据负载不进行任何处理；发送速率大于空闲阈值且发送队列未满，网络为正常状态，FPGA模块对二元数据负载先进行RS编码再进行交织编码；发送速率大于拥塞速率或发送队列已满，网络为拥塞状态，FPGA模块先对二元数据负载进行RS编码和交织编码，再额外进行一次冗余传输。还应理解的是，整个单向数据传输系统基于FPGA模块实现，数据包的解析、处理工作，RS编/译码与交织编/译码，冗余传输，CRC校验和计算，私有协议的封装都是在FPGA模块上完成的。在本实施例中，在网络状态为空闲状态时，通过所述FPGA模块对二元数据负载进行私有协议封装，获得私有协议数据包。发送速率小于空闲阈值SV且发送队列未满，定义网络状态为空闲状态SP，此时默认对二元数据负载不进行任何处理。FPGA模块对策略执行后的数据负载进行私有协议封装。私有协议格式包括记录的数据包信息，填写序列号，五元组信息及网络状态等。还应理解的是，当发送速率小于SV且发送队列未满时，网络为SP状态，此时出现误码或丢包的概率较小，FPGA模块对二元数据负载不进行任何处理。FPGA模块对处理后的数据负载进行私有协议封装，采用magic头部标志数据的开始，填入五元组，编码长度，序列号等信息。在本实施例中，在网络状态为正常状态时，通过FPGA模块对二元数据负载进行编码处理，获得编码数据负载；对编码数据负载进行私有协议封装，获得私有协议数据包。发送速率大于空闲阈值SV且发送队列未满，定义网络状态为正常状态NM，FPGA模块对二元数据负载进行RS编码与交织编码。FPGA模块将待发送的状态负载和业务负载分成大小为k的若干数据块，长度不足k的部分补零。假设二元数据负载长度分别为L1和L2，数据块数量N=，/＞表示向上取整。将每个数据块送入RS并行编码器中，其中n为码字长度，k为信息长度，t=/2，t为纠错个数。得到长度为n的RS编码数据块后利用交织技术对其进行列排序，再以行顺序读取后得到最终的编码数据负载，交织深度为数据块的数量N，编码数据长度为/＞。参考图6和图7，图6为本发明基于物联网网闸的数据传输系统第一实施例的RS并行编码器结构图，图7为本发明基于物联网网闸的数据传输系统第一实施例的编码流程示意图。进一步地，FPGA对策略执行后的数据负载进行私有协议封装，私有协议格式包括记录的数据包信息，填写序列号，五元组信息，网络状态，编码数据长度和编码数据负载等。还需要说明的是，当发送速率大于SV时且发送队列未满时，网络为NM状态，此时可能出现少量的误码或丢包情况，FPGA模块先对二元数据负载进RS编码，再进行交织编码，记录编码后的数据长度。FPGA模块将二元数据负载中的状态负载和业务负载分别分为大小为k的数据块，长度不足k的部分补零，依次放入待编码队列中。在本实施例中，在网络状态为拥塞状态时，通过FPGA模块对二元数据负载进行编码处理，获得编码数据负载，并对编码数据负载进行冗余传输；对编码数据负载进行私有协议封装，获得封装私有协议数据包。发送速率大于拥塞阈值CV或发送队列已满，定义网络状态为拥塞状态CG，FPGA模块对二元数据负载进行RS编码与交织编码后，FPGA模块对二元数据负载进行RS编码与交织编码。FPGA模块将待发送的状态负载和业务负载分成大小为k的若干数据块，长度不足k的部分补零。假设二元数据负载长度分别为L1和L2，数据块数量N=，/＞表示向上取整。将每个数据块送入RS并行编码器中，其中n为码字长度，k为信息长度，t=/2，t为纠错个数。得到长度为n的RS编码数据块后利用交织技术对其进行列排序，再以行顺序读取后得到最终的编码数据负载，交织深度为数据块的数量N，编码数据长度为。再将编码后的数据负载重新拷贝一份进行冗余传输处理。FPGA模块对策略执行后的数据负载进行私有协议封装，私有协议格式如图8所示，图8为本发明基于物联网网闸的数据传输系统第一实施例的私有协议格式图。图中包括记录的数据包信息、填写序列号、五元组信息、网络状态、编码数据长度、编码数据负载及CRC校验和。在具体实现中，当发送速率大于CV或者发送队列已满时，网络为CG状态，此时网络情况可能较差，误码或丢包的概率增大，除了利用FPGA模块对二元数据进行RS编码和交织编码之外，还需要对编码后的数据包进行一次冗余传输，冗余传输的数据包使用相同的序列号信息。记录编码后的数据长度。进一步地，RS编码为特殊的循环码，所以可以根据循环编码的方式来生成：a)FPGA模块将二元数据负载中的状态负载和业务负载分别分为大小为k的数据块，长度不足k的部分补零，依次放入待编码队列中。b)确定RS,t=/2编码的生成多项式，监督多项式/＞，m为每块数据块生成的信息多项式，最高次为k-1。最终编码多项式/＞。c)①将FPGA模块的寄存器Reg0-Reg置0，将N块数据块的信息位m依次送入移位电路，每个时钟周期输入一位信号，移位寄存器移动一位；②移动k个周期后，得到所有的监督位r，此时信息位已全部输入完毕，停止输入；③再经过2t个时钟周期，移出所有的监督位r，添加在信息位的后面，得到编码后的n位数据。此时将FPGA模块寄存器清零，等待下一次数据块的编码操作。d)得到所有的编码数据块后，FPGA模块依次读取每个编码块的第一个字节，第二个字节到最后一个字节，将它们进行重组得到交织后的编码数据负载。还应理解的是，本实施例使用了二元输入的RS编码结合交织编码的纠错编码方式。相对于传统前向纠错编码，RS编码具有更强大的纠错能力，对随机错误，突发错误和连续错误都有较好的纠错性能。RS编码和交织编码还能根据不同应用场景进行调整，在纠错能力和延时之间得到平衡，可以满足不同场景的需求。相较于一元输入的RS编码，二元输入提供了更好的分离性，它将设备状态信息与业务数据分离开来，使不同数据间不会产生混淆。本实施例中还使用了可编程逻辑器件FPGA模块，FPGA模块具有强大的硬件计算资源，在数据处理时拥有非常低的时延。FPGA模块还具有高度并行的处理能力，能快速进行各种二进制计算，需要多次进行RS编码和交织编码以及译码，FPGA模块能够高效的完成这些工作。还需要说明的是，FPGA模块对处理后的数据负载进行私有协议封装，采用magic头部标志数据的开始，填入五元组，编码长度，序列号等信息。还应理解的是，利用FPGA模块的硬件资源计算CRC校验和，填入校验和字段。CRC校验和主要是用来检验在单向传输的过程中是否出现误差，并不影响纠错编码的流程。FPGA模块对策略执后的数据负载进行私有协议封装，私有协议包含序列号，网络状态，编码数据长度，五元组，CRC校验和等信息，方便单向传输的接收方执行相应的数据处理工作,省去了传统的TCP/IP协议头部，提高了单向传输效率。所述外网端2001，还用于将标记后的私有协议数据包存储至所述FPGA模块对应的发送队列中，按照数据发送规则将所述发送队列中所述标记后的私有协议数据包单向传输至所述内网端2002。外网FPGA模块将封装好的私有协议数据放入FPGA模块的发包队列中，按顺序依次单向传输到内网FPGA模块。还应理解的是，数据发送规则为按照顺序依次发送。进一步地，参考图9，图9为本发明基于物联网网闸的数据传输系统第一实施例的内网端流程图，内网端对标记后的私有协议数据包进行解封处理，获得网络发送状态；在网络发送状态为所述空闲状态时，从私有协议数据包中提取二元数据负载，并将二元数据负载重新解封装为设备状态信息和业务数据；将设备状态信息发送至网络管理中心，以使网络管理中心根据设备状态信息对物联网设备进行监护；通过TCP/IP协议栈对业务数据进行封装处理，获得TCP/IP协议数据，并将TCP/IP协议数据发送至目标终端。需要说明的是，内网端FPGA模块收到外网FPGA模块传送过来的数据包后，利用头部的magic字段找到数据的起始位置，对私有协议进行解封装，提取网络状态信息字段，对处于不同网络状态的数据包进行不同处理。网络状态为SP，此时数据未进行编码，FPGA模块不做处理，直接提取二元数据负载，内网端收到译码后的数据负载，按和/＞的长度将数据重新解封装为设备状态信息和业务数据，/＞为向上取整，将设备状态信息传递给网络管理控制中心，实现对设备的识别与监控，对异常设备及时下发指令进行管理，根据序列号，五元组，数据长度等信息基于TCP/IP协议栈重新对业务数据进行封装。利用五元组信息对TCP/IP协议数据进行分流，将数据包分发到不同的内网终端。进一步地，内网端在网络状态为所述正常状态时，通过FPGA模块根据私有协议数据包确定编码数据负载；对编码数据负载进行译码处理，获得解交织数据负载；通过RS并行译码器根据所述解交织数据负载确定译码负载；将译码负载进行重新解封装，获得设备状态信息和业务数据。将设备状态信息发送至网络管理中心，以使网络管理中心根据设备状态信息对物联网设备进行监护；通过TCP/IP协议栈对业务数据进行封装处理，获得TCP/IP协议数据，并将TCP/IP协议数据发送至目标终端。网络状态为NM， FPGA模块对编码数据负载进行RS译码和交织译码，记录译码后的原始二元数据长度。RS译码与交织译码参考图10，图10为本发明基于物联网网闸的数据传输系统第一实施例的译码流程示意图，FPGA模块按交织深度N重新将编码数据负载分成n个数据块，利用解交织技术对n个数据块进行行排序和列读取，得到交织译码后的数据，即RS编码后的原数据，再将其送入RS译码器，得到解码后的信息数据，重新组装得到解码后的数据负载。在具体实现中，FPGA模块按交织深度N将编码数据负载分为n块长度为N的数据负载，依次读取每个数据块中的第一个字节直到最后一个字节，得到N块长度为n的解交织数据负载，将N块RS编码数据负载同时送入RS并行译码器，得到N块长度为k的译码数据负载，重组排序后的最终的译码负载，内网端收到译码后的数据负载，按和的长度将数据重新解封装为设备状态信息和业务数据，/＞为向上取整，将设备状态信息传递给网络管理控制中心，实现对设备的识别与监控，对异常设备及时下发指令进行管理，根据序列号，五元组，数据长度等信息基于TCP/IP协议栈重新对业务数据进行封装。利用五元组信息对TCP/IP协议数据进行分流，将数据包分发到不同的内网终端。进一步地，内网端在网络状态为拥塞状态时，获取序列号相同的冗余数据包，并分别计算冗余数据包对应的CRC校验和与私有协议数据包对应的CRC校验和；判断冗余数据包对应的CRC校验和与私有协议数据包对应的CRC校验和是否与发端校验和一致；若不一致，则通过FPGA模块根据私有协议数据包确定编码数据负载。网络状态为CG，计算序列号相同的两个数据包的CRC校验和，与原校验和进行对比，若至少有一个校验和相同，则表明单向传输过程中未出现误码情况，直接进行RS译码和交织译码。若两个校验和都不同，则利用冗余数据包进行对比，找出误码比特并修改，最后再使用RS译码和交织译码。记录译码后的原始二元数据长度。RS译码与交织译码参考图10，图10为本发明基于物联网网闸的数据传输系统第一实施例的译码流程示意图，FPGA模块按交织深度N重新将编码数据负载分成n个数据块，利用解交织技术对n个数据块进行行排序和列读取，得到交织译码后的数据，即RS编码后的原数据，再将其送入RS译码器，得到解码后的信息数据，重新组装得到解码后的数据负载。内网端收到译码后的数据负载，按和/＞的长度将数据重新解封装为设备状态信息和业务数据，/＞为向上取整，将设备状态信息传递给网络管理控制中心，实现对设备的识别与监控，对异常设备及时下发指令进行管理，根据序列号，五元组，数据长度等信息基于TCP/IP协议栈重新对业务数据进行封装。利用五元组信息对TCP/IP协议数据进行分流，将数据包分发到不同的内网终端。在本实施例中，首先外网端接收物联网设备发送的原始数据包，并对原始数据包进行过滤处理，获得待处理数据包，通过FPGA模块对待处理数据包进行解析，获得二元数据负载，二元数据负载包括状态负载和业务负载，外网端根据当前发包速率和发送队列状态确定网络状态，网络状态包括空闲状态、正常状态及拥塞状态，然后外网端基于网络状态对二元数据负载进行封装处理，获得私有协议数据包，并将网络状态标记至私有协议数据包，最后外网端将标记后的私有协议数据包存储至FPGA模块对应的发送队列中，按照数据发送规则将发送队列中标记后的私有协议数据包单向传输至内网端。相较于现有技术中单模或多模冗余、软件纠错码和控制发送速率等方法能够在一定程度上提高单向传输的可靠性，但或多或少都存在成本高、速度慢、通信效率低等弊端，而本实施例基于工业物联网网闸结合FPGA硬件资源，给出了FPGA在不同发送速率和发送队列状态下的单向数据传输策略，使用私有协议将处理后的数据从非密外网传输到涉密内网，实现了单向数据传输的可靠性，保证了数据的安全性和保密性。参照图11，图11为本发明基于物联网网闸的数据传输方法第一实施例的流程示意图。如图11所示，本发明实施例提出的基于物联网网闸的数据传输方法包括以下步骤：步骤S10：接收物联网设备发送的原始数据包，对所述原始数据包进行过滤处理，获得待处理数据包。易于理解的是，本实施例的执行主体可以是具有数据处理、网络通讯和程序运行等功能的基于物联网网闸的数据传输系统，也可以为其他具有相似功能的计算机设备等，本实施例并不加以限制。步骤S30：根据当前发包速率和发送队列状态确定网络状态，所述网络状态包括空闲状态、正常状态及拥塞状态。步骤S40：基于所述网络状态对所述二元数据负载进行封装处理，获得私有协议数据包，并将所述网络状态标记至所述私有协议数据包。步骤S50：将标记后的私有协议数据包存储至所述FPGA模块对应的发送队列中，按照数据发送规则将所述发送队列中所述标记后的私有协议数据包单向传输至内网端。在本实施例中，首先外网端接收物联网设备发送的原始数据包，并对原始数据包进行过滤处理，获得待处理数据包，通过FPGA模块对待处理数据包进行解析，获得二元数据负载，二元数据负载包括状态负载和业务负载，外网端根据当前发包速率和发送队列状态确定网络状态，网络状态包括空闲状态、正常状态及拥塞状态，然后外网端基于网络状态对二元数据负载进行封装处理，获得私有协议数据包，并将网络状态标记至私有协议数据包，最后外网端将标记后的私有协议数据包存储至FPGA模块对应的发送队列中，按照数据发送规则将发送队列中标记后的私有协议数据包单向传输至内网端。相较于现有技术中单模或多模冗余、软件纠错码和控制发送速率等方法能够在一定程度上提高单向传输的可靠性，但或多或少都存在成本高、速度慢、通信效率低等弊端，而本实施例基于工业物联网网闸结合FPGA硬件资源，给出了FPGA在不同发送速率和发送队列状态下的单向数据传输策略，使用私有协议将处理后的数据从非密外网传输到涉密内网，实现了单向数据传输的可靠性，保证了数据的安全性和保密性。本发明基于物联网网闸的数据传输方法的其他实施例或具体实现方式可参照上述各方法实施例，此处不再赘述。需要说明的是，在本文中，术语“包括”、“包含”或者其任何其他变体意在涵盖非排他性的包含，从而使得包括一系列要素的过程、方法、物品或者系统不仅包括那些要素，而且还包括没有明确列出的其他要素，或者是还包括为这种过程、方法、物品或者系统所固有的要素。在没有更多限制的情况下，由语句“包括一个……”限定的要素，并不排除在包括该要素的过程、方法、物品或者系统中还存在另外的相同要素。上述本发明实施例序号仅仅为了描述，不代表实施例的优劣。通过以上的实施方式的描述，本领域的技术人员可以清楚地了解到上述 实施例方法可借助软件加必需的通用硬件平台的方式来实现，当然也可以通 过硬件，但很多情况下前者是更佳的实施方式。基于这样的理解，本发明的技术方案本质上或者说对现有技术做出贡献的部分可以以软件产品的形式体 现出来，该计算机软件产品存储在一个存储介质中，包括若干指令用以使得一台终端设备执行本发明各个实施例所述的方法。以上仅为本发明的优选实施例，并非因此限制本发明的专利范围，凡是利用本发明说明书及附图内容所作的等效结构或等效流程变换，或直接或间接运用在其他相关的技术领域，均同理包括在本发明的专利保护范围内。
